{
  "Repository" : "38015998",
  "Revision" : "HEAD",
  "ObjectId" : "0c47e99fabdebc3a24377bdfc5e25901535a8b7f",
  "CommitTime" : "2018-12-13T15:33:19Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "f24135ce39edae14b90f0f84512e2248738148fb",
      "LastModified" : "2018-04-05T18:27:14Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#######################################################################################################################\n\n# The build system uses CMake. All the automatically generated code falls under the Lesser General Public License\n\n# (LGPL GNU v3), the Apache License, or the MIT license, your choice.\n\n#\n\n# Authors:         Crownstone B.V. team\n\n# Creation date:   Feb. 26, 2017\n\n# License:         LGPLv3, MIT, Apache (triple-licensed)\n\n#\n\n# Copyright © 2017 Crownstone B.V. (http://crownstone.rocks/team)\n\n#######################################################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#!/bin/make -f\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#######################################################################################################################\n\n# Check for the existence of required environmental variables \n\n#######################################################################################################################\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The build directory should be defined as environmental variable. We do not assume a default build directory such\n\n# as ./build for example.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# do not throw error, but MESH_SUBDIR cannot be used: MESH_DIR with complete path is required\n",
        "Line" : 33,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#######################################################################################################################\n\n# Optional configuration parameters that will be set to defaults if not set before\n\n#######################################################################################################################\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The verbosity parameter is used in the cmake build files to e.g. display the definitions used.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# TODO: Why not just use the -j flag instead of introducing a new one? This should not be hardcoded.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#######################################################################################################################\n\n# Additional configuration options\n\n#######################################################################################################################\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# We have a Makefile with some additional configuration options. Note that if the configurations options change, \n\n# cmake will force a rebuild of everything! That's why a COMPILATION_TIME macro, although useful, is not included \n\n# for the DEBUG_COMPILE_FLAGS. If we do a release we want to be sure we building the latest, hence then \n\n# COMPILATION_TIME as a macro is included.\n\n#\n\n# Also when the git hash changes this triggers a rebuild.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# We copy the cmake files we need to the bluenet folder. This:\n\n#   + reduces the risk that someone overwrites the Makefile by running cmake in-source on accident;\n\n#   + makes it fairly easy to swap out CMakeLists.txt for unit tests on the host (would otherwise clobber the system).\n\n#\n\n# The timestamp of the CMakeLists.txt or other files is NOT used by cmake to define a re-build \n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#@if [ ! -f \"CMakeLists.txt\" ]; then ln -s conf/cmake/CMakeLists.txt .; fi\n\n#@if [ ! -f \"arm.toolchain.cmake\" ]; then ln -s conf/cmake/arm.toolchain.cmake .; fi\n\n#@if [ ! -f \"CMakeBuild.config.default\" ]; then ln -s conf/cmake/CMakeBuild.config.default .; fi\n\n#@if [ ! -f \"CMakeConfig.cmake\" ]; then ln -s conf/cmake/CMakeConfig.cmake .; fi\n",
        "Line" : 92,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "#######################################################################################################################\n\n# Targets\n\n#######################################################################################################################\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "conf/cmake/CMakeConfig.cmake" : {
      "ObjectId" : "40362bc9f3fb0d7dc46ad14f76cba177e5922199",
      "LastModified" : "2017-03-11T12:51:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####################################\n\n### LOAD DIRECTORIES FROM ENV\n\n####################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "####################################\n\n### DEFAULT CONFIGURATION\n\n####################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Strip leading spaces\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Ignore comments\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Find variable name\n",
        "Line" : 25,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# Find the value\n",
        "Line" : 28,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# Set the variable\n",
        "Line" : 30,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "####################################\n\n### ENVIRONMENT CONFIGURATION\n\n####################################\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Strip leading spaces\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Ignore comments\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Find variable name\n",
        "Line" : 57,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "# Find the value\n",
        "Line" : 60,
        "CharPositionInLine" : 3
      },
      "12" : {
        "Text" : "# Set the variable\n",
        "Line" : 62,
        "CharPositionInLine" : 3
      },
      "13" : {
        "Text" : "####################################\n\n### SPECIFIC CONFIGURATION\n\n####################################\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Strip leading spaces\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Ignore comments\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Find variable name\n",
        "Line" : 92,
        "CharPositionInLine" : 3
      },
      "17" : {
        "Text" : "# Find the value\n",
        "Line" : 95,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "# Set the variable\n",
        "Line" : 97,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 19
    },
    "conf/cmake/CMakeLists.txt" : {
      "ObjectId" : "64d005973d3ef49fc134526730aa05ae1eb847fe",
      "LastModified" : "2018-05-09T15:32:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################################################################################################\n\n# The build systems uses CMake. All the automatically generated code falls under the Lesser General Public License\n\n# (LGPL GNU v3), the Apache License, or the MIT license, your choice.\n\n#\n\n# Author:\t Anne C. van Rossum (Distributed Organisms B.V.)\n\n# Date: \t Oct 28, 2013\n\n#\n\n# Copyright © 2013 Anne C. van Rossum <anne@dobots.nl>\n\n#######################################################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set application shorthand\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set name of project\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the main file to use for this application\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Start a project\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ${TEST_COMPILERS})\n",
        "Line" : 23,
        "CharPositionInLine" : 25
      },
      "6" : {
        "Text" : "# The directory with some of the FindXXX modules\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#######################################################################################################################\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#SET(GIT_HASH                                 \"unset\"       CACHE STRING \"Current git hash\")\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Do not include COMPILATION_TIME. It invalidates the cache all the time!\n\n#SET(COMPILATION_TIME                         \"unset\"       CACHE STRING \"Time of day of compilation\")\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#######################################################################################################################\n\n# Show variables\n\n#######################################################################################################################\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#MESSAGE(STATUS \"CMakeLists: Git hash: ${GIT_HASH}\")\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Do not include COMPILATION_TIME. It invalidates the cache all the time!\n\n#MESSAGE(STATUS \"CMakeLists: Time of day of compilation: ${COMPILATION_TIME}\")\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#######################################################################################################################\n\n# Include your own FindX cmake files and options in the following file!\n\n#######################################################################################################################\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#######################################################################################################################\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Libraries (math, stdc++ libraries, etc.) \n\n# Note! We CANNOT use the size-constrained *_s versions! anymore\n\n# We don't seem to use any libraries anymore... except for including everything that comes with -std=c+11\n\n#SET(LIBS \"-lc ${LIBRARY_RUNTIME} ${LIBRARY_MATH} -lstdc++\")\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Some debug information\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Source directory\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Add separately include directories if we are to lazy to specify e.g. \"#include <protocol/rbc_mesh.h>\"\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Add all header files without exception\n\n#FILE(GLOB FOLDER_HEADER ${INCLUDE_DIR}/*.h ${INCLUDE_DIR}/*.hh ${INCLUDE_DIR}/*.hpp)\n",
        "Line" : 111,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# We add the source files explicitly. This is recommended in the cmake system and will also force us all the time to\n\n# consider the size of the final binary. Do not include things, if not necessary!\n",
        "Line" : 114,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "#\tLIST(APPEND NORDIC_SOURCE \"${NRF51822_DIR}/components/ble/common/ble_advdata_parser.c\")\n\n#\tLIST(APPEND NORDIC_SOURCE \"${NRF51822_DIR}/components/ble/device_manager/device_manager_peripheral.c\")\n\n#\tLIST(APPEND NORDIC_SOURCE \"${NRF51822_DIR}/components/ble/device_manager/device_manager_central.c\")\n\n#\tLIST(APPEND NORDIC_SOURCE \"${NRF51822_DIR}/components/drivers_nrf/common/nrf_drv_common.c\")\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\tLIST(APPEND NORDIC_SOURCE \"${NRF51822_DIR}/components/drivers_nrf/gpiote/nrf_drv_gpiote.c\")\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\tLIST(APPEND NORDIC_SOURCE \"${NRF51822_DIR}/components/drivers_nrf/ppi/nrf_drv_ppi.c\")\n\n#\tLIST(APPEND NORDIC_SOURCE \"${NRF51822_DIR}/components/drivers_nrf/pwm/nrf_drv_pwm.c\")\n\n#\tLIST(APPEND NORDIC_SOURCE \"${NRF51822_DIR}/components/drivers_nrf/saadc/nrf_drv_saadc.c\")\n\n#\tLIST(APPEND NORDIC_SOURCE \"${NRF51822_DIR}/components/drivers_nrf/timer/nrf_drv_timer.c\")\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\tLIST(APPEND NORDIC_SOURCE \"${NRF51822_DIR}/components/libraries/pwm/app_pwm.c\")\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# For Visual Studio group the files\n",
        "Line" : 152,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# Add to the -I flags\n",
        "Line" : 158,
        "CharPositionInLine" : 1
      },
      "27" : {
        "Text" : "#\tINCLUDE_DIRECTORIES(\"${NRF51822_DIR}/components/drivers_nrf/gpiote/\")\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#\tINCLUDE_DIRECTORIES(\"${NRF51822_DIR}/components/drivers_nrf/ppi/\")\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#\tINCLUDE_DIRECTORIES(\"${NRF51822_DIR}/components/drivers_nrf/pwm/\")\n\n#\tINCLUDE_DIRECTORIES(\"${NRF51822_DIR}/components/drivers_nrf/saadc/\")\n\n#\tINCLUDE_DIRECTORIES(\"${NRF51822_DIR}/components/drivers_nrf/timer/\")\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#\tINCLUDE_DIRECTORIES(\"${NRF51822_DIR}/components/libraries/pwm\")\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Show which directories are actually included to the user\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\tADD_SUBDIRECTORY(test/nrf5)\n",
        "Line" : 211,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# Set up our main executable.\n",
        "Line" : 216,
        "CharPositionInLine" : 1
      },
      "34" : {
        "Text" : "# https://stackoverflow.com/questions/5278444/adding-a-custom-command-with-the-file-name-as-a-target\n",
        "Line" : 222,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "#COMMAND ${CMAKE_OBJDUMP} -h ${PROJECT_NAME}.elf\n",
        "Line" : 258,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 36
    },
    "conf/cmake/arm.toolchain.cmake" : {
      "ObjectId" : "b26fa18871fee638742015b5eaa368eaa04ca433",
      "LastModified" : "2018-04-05T18:27:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################################################################################################\n\n# The build systems uses CMake. All the automatically generated code falls under the Lesser General Public License\n\n# (LGPL GNU v3), the Apache License, or the MIT license, your choice.\n\n#\n\n# Author:\t Crownstone Team\n\n# Date: \t Oct 28, 2013\n\n#\n\n# Copyright © 2013 Crownstone B.V. <team@crownstone.rocks>\n\n#######################################################################################################################\n\n#Check http://www.cmake.org/Wiki/CMake_Cross_Compiling\n\n#\n\n# Note that the arm.toolchain.cmake is run BEFORE the variables of the CMakeLists.txt are set!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set to Generic, or tests will fail (they will fail anyway)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Tell we want to cross-compile\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Load compiler options from the configuration file. This is done through CMakeConfig.cmake which on its turn will \n\n# get the configuration data from the proper CMakeBuild.config file from some configuration directory.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#######################################################################################################################\n\n# type of compiler we want to use, the COMPILER_TYPE can be empty if normal gcc and g++ compilers are intended\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#######################################################################################################################\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The extension .obj is just ugly, set it back to .o (does not work)\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Make cross-compiler easy to find (but we will use absolute paths anyway)\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Specify the cross compiler, linker, etc.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Pure magic according following http://stackoverflow.com/questions/41589430/cmake-c-compiler-identification-fails\n\n# to get rid of the many try_compile attempts by CMake\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Collect flags that have to do with optimization\n\n# We are optimizing for SIZE for now. If size turns out to be abundant, enable -O3 optimization.\n\n# Interesting options: -ffast-math, -flto (link time optimization)\n\n# Regarding size of the binary -ffast-math nor -flto makes a difference\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# There is a bug in CMAKE_OBJCOPY, it doesn't exist on execution for the first time\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# The following require FORCE. Without it, the FLAGS end up to have duplication.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# The directory with some of the FindXXX modules\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# the bluetooth name is not optional\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Obtain variables to be used for the compiler\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#SET(HARDWARE_BOARD                              \"${HARDWARE_BOARD}\"                 CACHE STRING \"HARDWARE_BOARD\" FORCE)\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Set Attribute table size\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Add encryption\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# SET(DEVICE_TYPE                                 \"${DEVICE_TYPE}\"                    CACHE STRING \"DEVICE_TYPE\" FORCE)\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Add iBeacon default values\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Add services\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Add characteristics\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Set compiler flags\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Only from nRF52 onwards we have a coprocessor for floating point operations\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Final collection of C/C++ compiler flags\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Tell the linker that we use a special memory layout\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# http://public.kitware.com/Bug/view.php?id=12652\n\n# CMake does send the compiler flags also to the linker\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#SET(FLAG_REMOVE_UNWINDING_CODE \"-Wl,--wrap,__aeabi_unwind_cpp_pr0\")\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# do not define above as multiple linker flags, or else you will get redefines of MEMORY etc.\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# We preferably want to run the cross-compiler tests without all the flags. This namely means we have to add for example the object out of syscalls.c to the compilation, etc. Or, differently, have different flags for the compiler tests. This is difficult to do!\n\n#SET(CMAKE_C_FLAGS \"-nostdlib\")\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# find the libraries\n\n# http://qmcpack.cmscc.org/getting-started/using-cmake-toolchain-file\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# set the installation root (should contain usr/local and usr/lib directories)\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# here will the header files be installed on \"make install\"\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# add the libraries from the installation directory (if they have been build before)\n\n#LINK_DIRECTORIES(\"${DESTDIR}/usr/local/lib\")\n\n#LINK_DIRECTORIES(\"${COMPILER_PATH}/${COMPILER_TYPE}/lib\")\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# the following doesn't seem to work so well\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# indicate where the linker is allowed to search for library / headers\n\n#SET(CMAKE_FIND_ROOT_PATH\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#${ARM_LINUX_SYSROOT}\n\n#\t${DESTDIR})\n",
        "Line" : 272,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "#SET(CMAKE_FIND_ROOT_PATH ${CMAKE_FIND_ROOT_PATH} ${ARM_LINUX_SYSROOT})\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# search for programs in the build host directories\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# for libraries and headers in the target directories\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 41
    },
    "conf/cmake/crownstone.defs.cmake" : {
      "ObjectId" : "8a00ed68844a84f901186d55957cd2cca28c67eb",
      "LastModified" : "2018-05-09T15:32:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Collect flags that are used in the code, as macros\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Pass variables in defined in the configuration file to the compiler\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ADD_DEFINITIONS(\"-DHARDWARE_BOARD=${HARDWARE_BOARD}\")\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define PANs\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#ADD_DEFINITIONS(\"-DNRF52_PAN_28\") # Although rev1 shouldn't have this PAN, defining it did fix our code\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# UICR settings\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set Attribute table size\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add encryption\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Mesh Settings\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add iBeacon default values\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#IF(IBEACON)\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#ENDIF()\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Add services\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Add characteristics\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# only required if Nordic files are used\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Publish all options as CMake options as well\n\n#\n\n#SET(CROWNSTONE_SERVICE                 \"${CROWNSTONE_SERVICE}\"                 CACHE STRING \"Enable machine-centric service\")\n\n#SET(INDOOR_SERVICE                     \"${INDOOR_SERVICE}\"                     CACHE STRING \"Enable human-centric indoor localization service\")\n\n#SET(GENERAL_SERVICE                    \"${GENERAL_SERVICE}\"                    CACHE STRING \"Enable human-centric general service\")\n\n#SET(POWER_SERVICE                      \"${POWER_SERVICE}\"                      CACHE STRING \"Enable human-centric power service\")\n\n#SET(SCHEDULE_SERVICE                   \"${SCHEDULE_SERVICE}\"                   CACHE STRING \"Enable human-centric schedule service\")\n\n#\n\n#SET(CHAR_CONTROL                       \"${CHAR_CONTROL}\"                       CACHE STRING \"Enable control characteristic\")\n\n#SET(CHAR_MESHING                       \"${CHAR_MESHING}\"                       CACHE STRING \"Enable meshing characteristic\")\n\n#SET(CHAR_TEMPERATURE                   \"${CHAR_TEMPERATURE}\"                   CACHE STRING \"Enable temperature characteristic\")\n\n#SET(CHAR_RESET                         \"${CHAR_RESET}\"                         CACHE STRING \"Enable reset characteristic\")\n\n#SET(CHAR_CONFIGURATION                 \"${CHAR_CONFIGURATION}\"                 CACHE STRING \"Enable configuration characteristic\")\n\n#SET(CHAR_STATE                         \"${CHAR_STATE}\"                         CACHE STRING \"Enable state characteristic\")\n\n#SET(CHAR_PWM                           \"${CHAR_PWM}\"                           CACHE STRING \"Enable PWM characteristic\")\n\n#SET(CHAR_SAMPLE_CURRENT                \"${CHAR_SAMPLE_CURRENT}\"                CACHE STRING \"Enable sample current characteristic\")\n\n#SET(CHAR_CURRENT_LIMIT                 \"${CHAR_CURRENT_LIMIT}\"                 CACHE STRING \"Enable current limit characteristic\")\n\n#SET(CHAR_RSSI                          \"${CHAR_RSSI}\"                          CACHE STRING \"Enable RSSI characteristic\")\n\n#SET(CHAR_SCAN_DEVICES                  \"${CHAR_SCAN_DEVICES}\"                  CACHE STRING \"Enable scan devices characteristic\")\n\n#SET(CHAR_TRACK_DEVICES                 \"${CHAR_TRACK_DEVICES}\"                 CACHE STRING \"Enable track devices characteristic\")\n\n#SET(CHAR_RELAY                         \"${CHAR_RELAY}\"                         CACHE STRING \"Enable relay characteristic\")\n\n#SET(CHAR_SCHEDULE                      \"${CHAR_SCHEDULE}\"                      CACHE STRING \"Enable schedule characteristic\")\n\n#\n\n#SET(BLUETOOTH_NAME                     \"${BLUETOOTH_NAME}\"                     CACHE STRING \"Name of Bluetooth device\")\n\n#SET(BUILD_MESHING                      \"${BUILD_MESHING}\"                      CACHE STRING \"BUILD_MESHING\" FORCE)\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "conf/cmake/crownstone.src.cmake" : {
      "ObjectId" : "9b64ba40925ade03c734a234c0c0d0e3998331f4",
      "LastModified" : "2018-05-09T15:32:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# essential, code doesn't run without this file !!!\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add a single\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# IF(${DEVICE_TYPE} STREQUAL DEVICE_CROWNSTONE_PLUG OR ${DEVICE_TYPE} STREQUAL DEVICE_CROWNSTONE_BUILTIN)\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ENDIF()\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# should be only when creating iBeacon\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "test/host/CMakeLists.txt" : {
      "ObjectId" : "da04d32160716cc0913cbe141dc5cd1c52d88350",
      "LastModified" : "2018-04-05T18:27:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set(TEST_INCLUDE_FILES ${INCLUDE_DIR}/structs/buffer/cs_InterleavedBuffer.h)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/nrf5/CMakeLists.txt" : {
      "ObjectId" : "26e66b627366ff3f7c6897808b1501a7fd0c2f58",
      "LastModified" : "2018-04-05T18:27:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add to the -I flags\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#INCLUDE_DIRECTORIES(\"${NRF51822_DIR}/components/ble/ble_services\")\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#INCLUDE_DIRECTORIES(\"${NRF51822_DIR}/components/libraries/pwm\")\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# lpcomp should not be here\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# In case of adding powersampling\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# RTC1_IRQHandler\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# In case of adding powersampling\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Somehow the following files are pulled in as well..., not nice..., should not be necessary\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#COMMAND ${CMAKE_OBJDUMP} -h ${TEST}.elf\n",
        "Line" : 133,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "#LIST(APPEND NORDIC_SOURCE_${TEST} \"${NRF51822_DIR}/components/drivers_nrf/pwm/nrf_drv_pwm.c\")\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Second test file\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#COMMAND ${CMAKE_OBJDUMP} -h ${TEST}.elf\n",
        "Line" : 204,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "#INSTALL(TARGETS ${TEST} RUNTIME DESTINATION bin)\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    }
  },
  "FileTypes" : {
    "CMAKE" : 7,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1800
}