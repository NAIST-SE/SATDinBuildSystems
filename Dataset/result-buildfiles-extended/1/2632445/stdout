{
  "Repository" : "2632445",
  "Revision" : "HEAD",
  "ObjectId" : "71765a90d1ff455608a006ed32cf42110e779217",
  "CommitTime" : "2016-06-13T11:16:10Z",
  "Files" : {
    "bitbake/doc/Makefile" : {
      "ObjectId" : "3c28f4b2222324690cac7e32be363953036c54b3",
      "LastModified" : "2015-02-10T23:09:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a single Makefile to handle all generated BitBake documents.\n\n# The Makefile needs to live in the documentation directory and all figures used\n\n# in any manuals must be .PNG files and live in the individual book's figures\n\n# directory.\n\n#\n\n# The Makefile has these targets:\n\n#\n\n#    pdf:      generates a PDF version of a manual.\n\n#    html:     generates an HTML version of a manual.\n\n#    tarball:  creates a tarball for the doc files.\n\n#    validate: validates\n\n#    clean:    removes files\n\n#\n\n# The Makefile generates an HTML version of every document.  The\n\n# variable DOC indicates the folder name for a given manual.\n\n#\n\n# To build a manual, you must invoke 'make' with the DOC argument.\n\n#\n\n# Examples:\n\n#\n\n#     make DOC=bitbake-user-manual\n\n#     make pdf DOC=bitbake-user-manual\n\n#\n\n# The first example generates the HTML version of the User Manual.\n\n# The second example generates the PDF version of the User Manual.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##\n\n# These URI should be rewritten by your distribution's xml catalog to\n\n# match your localy installed XSL stylesheets.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#       See http://www.sagehill.net/docbookxsl/HtmlOutput.html\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "documentation/Makefile" : {
      "ObjectId" : "418d3ca8c7136a1166f9f0109d51a2bcb0d57869",
      "LastModified" : "2016-04-06T22:11:59Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a single Makefile to handle all generated Yocto Project documents,\n\n# which includes the BitBake User Manual and the Toaster User Manual.\n\n# The Makefile needs to live in the documents directory and all figures used\n\n# in any manuals must be .PNG files and live in the individual book's figures\n\n# directory as well as in the figures directory for the mega-manual.\n\n#\n\n# Some manuals are available as linked help through the Eclipse development\n\n# system.  These manuals also include an \"eclipse\" sub-directory as part of\n\n# the make process.\n\n#\n\n# Note that the figures for the Yocto Project Development Manual\n\n# differ depending on the BRANCH being built.\n\n#\n\n# The Makefile has these targets:\n\n#    all:       If you leave off the target then \"all\" is implied.\n\n#               You will generate HTML, eclipse help (if applicable),\n\n#               and a tarball of files.\n\n#\n\n#    pdf:\tgenerates a PDF version of a manual.  Not valid for the\n\n#\t\tQuick Start or the mega-manual (single, large HTML file\n\n#\t\tcomprised of all Yocto Project manuals).\n\n#    html:\tgenerates an HTML version of a manual.\n\n#    eclipse:\tgenerates an HTML version of a manual that can be used as\n\n#\t\teclipse help (including necessary metadata files).\n\n#    tarball:\tcreates a tarball for the doc files.\n\n#    validate:\tvalidates\n\n#    publish:\tpushes generated files to the Yocto Project website\n\n#    clean:\tremoves files\n\n#\n\n# The Makefile can generate an HTML and PDF version of every document except the\n\n# Yocto Project Quick Start and the single, HTML mega-manual, which is comprised\n\n# of all the individual Yocto Project manuals.  You can generate these two manuals\n\n# in HTML form only.  The variable DOC indicates the folder name for a given manual.\n\n# The variable VER represents the distro version of the Yocto Release for which the\n\n# manuals are being generated.  The variable BRANCH is used to indicate the\n\n# branch (edison or denzil) and is used only when DOC=dev-manual or\n\n# DOC=mega-manual.  If you do not specify a BRANCH, the default branch used\n\n# will be for the latest Yocto Project release.  If you build for either\n\n# edison or denzil, you must use BRANCH. You do not need to use BRANCH for\n\n# any release beyond denzil.\n\n#\n\n# To build a manual, you must invoke Makefile with the DOC argument.  If you\n\n# are going to publish the manual, then you must invoke Makefile with both the\n\n# DOC and the VER argument.  Furthermore, if you are building or publishing\n\n# the edison or denzil versions of the Yocto Project Development Manual or\n\n# the mega-manual, you must also use the BRANCH argument.\n\n#\n\n# Examples:\n\n#\n\n#     make DOC=bsp-guide\n\n#     make html DOC=yocto-project-qs\n\n#     make pdf DOC=ref-manual\n\n#     make DOC=dev-manual BRANCH=edison\n\n#     make DOC=mega-manual BRANCH=denzil\n\n#\n\n# The first example generates the HTML and Eclipse help versions of the BSP Guide.\n\n# The second example generates the HTML version only of the Quick Start.  Note\n\n# that the Quick Start only has an HTML version available.  So, the\n\n# 'make DOC=yocto-project-qs' command would be equivalent. The third example\n\n# generates just the PDF version of the Yocto Project Reference Manual.\n\n# The fourth example generates the HTML 'edison' version and (if available)\n\n# the Eclipse help version of the YP Development Manual.  The last example\n\n# generates the HTML version of the mega-manual and uses the 'denzil'\n\n# branch when choosing figures for the tarball of figures.  Any example that does\n\n# not use the BRANCH argument builds the current version of the manual set.\n\n#\n\n# The publish target pushes the generated manuals to the Yocto Project\n\n# website.  Unless you are a developer on the YP team, you will not succeed in\n\n# pushing manuals to this server.  All files needed for the manual's HTML form are\n\n# pushed as well as applicable Eclipse versions.\n\n#\n\n# Examples:\n\n#\n\n#    make publish DOC=bsp-guide VER=1.7\n\n#    make publish DOC=adt-manual VER=1.6\n\n#    make publish DOC=dev-manual VER=1.1.1 BRANCH=edison\n\n#    make publish DOC=dev-manual VER=1.2 BRANCH=denzil\n\n#\n\n# The first example publishes the 1.7 version of both the PDF and HTML versions of\n\n# the BSP Guide.  The second example publishes the 1.6 version of both the PDF and\n\n# HTML versions of the ADT Manual. The third example publishes the 1.1.1 version of\n\n# the PDF and HTML YP Development Manual for the 'edison' branch.  The fourth example\n\n# publishes the 1.2 version of the PDF and HTML YP Development Manual for the\n\n# 'denzil' branch.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Note that the tarfile might produce the \"Cannot stat: No such file or\n\n# directory\" error message for .PNG files that are not present when building\n\n# a particular branch.  The list of files is all-inclusive for all branches.\n\n# Note, if you don't provide a BRANCH option, it defaults to the latest stuff.\n\n# This would be appropriate for \"master\" branch.\n\n#\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##\n\n# These URI should be rewritten by your distribution's xml catalog to\n\n# match your locally installed XSL stylesheets.\n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#       See http://www.sagehill.net/docbookxsl/HtmlOutput.html\n",
        "Line" : 377,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#       See http://www.sagehill.net/docbookxsl/HtmlOutput.html\n",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "meta-skeleton/recipes-kernel/hello-mod/files/Makefile" : {
      "ObjectId" : "4ded35fbc3b42902f734a8d31f071a1550ccf4e6",
      "LastModified" : "2012-04-10T12:32:02Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "meta/lib/oeqa/sdkext/files/myapp/Makefile" : {
      "ObjectId" : "abd91bea68667345317526cdc1c0e4911d5c8ef0",
      "LastModified" : "2016-02-10T16:06:23Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "meta/recipes-devtools/cmake/cmake/OEToolchainConfig.cmake" : {
      "ObjectId" : "60014bbf2b67235ee4f5ba54d7b0bd9afa0ce4df",
      "LastModified" : "2016-02-10T16:06:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include the toolchain configuration subscripts\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "meta/recipes-devtools/quilt/quilt/Makefile" : {
      "ObjectId" : "7b3ac8a49291ba3e403d56007bd20f501f53ddd1",
      "LastModified" : "2016-02-10T16:06:23Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "meta/recipes-extended/bzip2/bzip2-1.0.6/Makefile.am" : {
      "ObjectId" : "05d389fc7ded9b993af1f31e3862679ffed8fac7",
      "LastModified" : "2016-04-06T22:11:59Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "meta/recipes-extended/parted/files/Makefile" : {
      "ObjectId" : "ee90be0814b7e9c11c0ab2529a0fae2ccc583601",
      "LastModified" : "2016-02-10T16:06:23Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "meta/recipes-support/libpcre/libpcre/Makefile" : {
      "ObjectId" : "708d807d0850e4e8b0294ee027a63710e8eb6955",
      "LastModified" : "2016-02-10T16:06:23Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 1,
    "MAKEFILE" : 7,
    "AUTOMAKE" : 1
  },
  "ElapsedTime" : 10324
}