{
  "Repository" : "177019",
  "Revision" : "HEAD",
  "ObjectId" : "dea4f9cffe2d30d5b9370f4ba038ccba81ee95f5",
  "CommitTime" : "2019-04-14T23:30:02Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "d9cd35743954ba3c80c9e68d1923f146c48071d8",
      "LastModified" : "2019-04-07T14:44:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# C++11 is required\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source Files\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include directories\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Extra CMake Module files\n",
        "Line" : 361,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Endianess check\n",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# liblcf\n",
        "Line" : 382,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# liblcf is built as part of this cmake file\n",
        "Line" : 387,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# Use system package\n",
        "Line" : 401,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Detect all required libraries\n",
        "Line" : 406,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Always enable Wine registry support on non-Windows\n",
        "Line" : 416,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# freetype and harfbuzz\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Sound system to use\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Configure Audio backends\n",
        "Line" : 442,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Provide fmmidi options\n",
        "Line" : 458,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# SDL2_mixer Audio\n",
        "Line" : 466,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# Provide fmmidi options\n",
        "Line" : 472,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# noop\n",
        "Line" : 480,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# OpenAL Audio\n",
        "Line" : 485,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# noop\n",
        "Line" : 495,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# speexdsp\n",
        "Line" : 501,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# mpg123\n",
        "Line" : 508,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# libsndfile\n",
        "Line" : 515,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# libvorbis\n",
        "Line" : 522,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# opusfile\n",
        "Line" : 529,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# wildmidi\n",
        "Line" : 536,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "# xmp (lite)\n",
        "Line" : 543,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# MSVC: Set UTF-8 encoding for all files (important for rtp table)\n",
        "Line" : 562,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Executable\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Open console for Debug builds\n",
        "Line" : 572,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "# Add resources\n",
        "Line" : 577,
        "CharPositionInLine" : 1
      },
      "30" : {
        "Text" : "# Change executable name\n",
        "Line" : 580,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "# installation\n",
        "Line" : 586,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# manpage\n\n# Handled as extra target \"man\"\n",
        "Line" : 594,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# no a2x, distribution archive?\n",
        "Line" : 611,
        "CharPositionInLine" : 1
      },
      "34" : {
        "Text" : "# Doxygen\n\n# Handled as extra target \"doc\"\n",
        "Line" : 617,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# fake autotools variables\n",
        "Line" : 621,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "# Handle liblcf doc target\n",
        "Line" : 634,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# Unit tests\n",
        "Line" : 640,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Print summary\n",
        "Line" : 674,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 39
    },
    "Makefile.am" : {
      "ObjectId" : "4803847e0751f7150776ffdfda9cfd101bbe3c9d",
      "LastModified" : "2019-04-07T14:44:19Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# manual page\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# bash completion\n",
        "Line" : 402,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# doxygen\n",
        "Line" : 408,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# FIXME make filefinder work without external scripting\n",
        "Line" : 411,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#filefinder_SOURCES = tests/filefinder.cpp\n\n#filefinder_CXXFLAGS = $(libeasyrpg_player_a_CXXFLAGS)\n\n#filefinder_LDADD = $(easyrpg_player_LDADD)\n",
        "Line" : 417,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Some tests will create this file\n\n# make distcheck will fail if it is not cleaned after runing these tests\n",
        "Line" : 430,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "builds/3ds/Makefile" : {
      "ObjectId" : "bb8f6d85a8d9d5df3a0f7732a4b81dfd268254c9",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# TARGET is the name of the output\n\n# BUILD is the directory where object files & intermediate files will be placed\n\n# SOURCES is a list of directories containing source code\n\n# DATA is a list of directories containing data files\n\n# INCLUDES is a list of directories containing header files\n\n# GRAPHICS is a list of directories containing graphics files\n\n# GFXBUILD is the directory where converted graphics files will be placed\n\n#   If set to $(BUILD), it will statically link in the converted\n\n#   files as if they were data files.\n\n#\n\n# NO_SMDH: if set to anything, no SMDH file is generated.\n\n# ROMFS is the directory which contains the RomFS, relative to the Makefile (Optional)\n\n# APP_TITLE is the name of the app stored in the SMDH file (Optional)\n\n# APP_DESCRIPTION is the description of the app stored in the SMDH file (Optional)\n\n# APP_AUTHOR is the author of the app stored in the SMDH file (Optional)\n\n# ICON is the filename of the icon (.png), relative to the project folder.\n\n#   If not set, it attempts to use one of the following (in this order):\n\n#     - <Project name>.png\n\n#     - icon.png\n\n#     - <libctru folder>/default_icon.png\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#GFXBUILD\t:=\t$(ROMFS)/gfx\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# options for code generation\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# list of directories containing libraries, this must be the top level containing\n\n# include and lib\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# no real need to edit anything past this point unless you need to add additional\n\n# rules for different file extensions\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# use CXX for linking C++ projects, CC for standard C\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# main targets\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# you need a rule like this for each extension you use as binary data\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# silent compiling\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# rules for assembling GPU shaders\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#---------------------------------------------------------------------------------------\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#---------------------------------------------------------------------------------------\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 28,
      "Errorlog" : "line 228:65 token recognition error at: '\\1'\nline 229:65 token recognition error at: '\\1'\nline 230:66 token recognition error at: '\\1'\n"
    },
    "builds/amiga/Makefile" : {
      "ObjectId" : "fb3dadab41d3e39cef35b93a1e1d344e7c30f7d3",
      "LastModified" : "2019-03-10T22:57:26Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "builds/cmake/Modules/ConfigureWindows.cmake" : {
      "ObjectId" : "382a72ca054d159090a3018ad20bbcf70f1cfb57",
      "LastModified" : "2019-03-10T22:57:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set compiler options.\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Target Unicode API\n",
        "Line" : 31,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Disable API deprecation warnings\n",
        "Line" : 35,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Prevent some Windows.h global namespace pollution\n",
        "Line" : 38,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "builds/cmake/Modules/FindFluidSynth.cmake" : {
      "ObjectId" : "2bd44d7645faab4918daa1d4226c962bba70c8cf",
      "LastModified" : "2018-05-14T23:15:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindFluidSynth\n\n# -----------\n\n#\n\n# Find the FluidSynth Library\n\n#\n\n# Imported Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following :prop_tgt:`IMPORTED` targets:\n\n#\n\n# ``fluidsynth::fluidsynth``\n\n#   The ``FluidSynth`` library, if found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module will set the following variables in your project:\n\n#\n\n# ``FLUIDSYNTH_INCLUDE_DIRS``\n\n#   where to find FluidSynth headers.\n\n# ``FLUIDSYNTH_LIBRARIES``\n\n#   the libraries to link against to use FluidSynth.\n\n# ``FLUIDSYNTH_FOUND``\n\n#   true if the FluidSynth headers and libraries were found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the library.\n\n# Allow FLUIDSYNTH_LIBRARY to be set manually, as the location of the FluidSynth library\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "builds/cmake/Modules/FindFreetype.cmake" : {
      "ObjectId" : "e16523c193e5d66f93b0dd8e4fadf96fab8840f4",
      "LastModified" : "2019-03-10T22:57:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindFreetype\n\n# ------------\n\n#\n\n# Find the FreeType font renderer includes and library.\n\n#\n\n# Imported Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following :prop_tgt:`IMPORTED` target:\n\n#\n\n# ``Freetype::Freetype``\n\n#   The Freetype ``freetype`` library, if found\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module will set the following variables in your project:\n\n#\n\n# ``FREETYPE_FOUND``\n\n#   true if the Freetype headers and libraries were found\n\n# ``FREETYPE_INCLUDE_DIRS``\n\n#   directories containing the Freetype headers. This is the\n\n#   concatenation of the variables:\n\n#\n\n#   ``FREETYPE_INCLUDE_DIR_ft2build``\n\n#     directory holding the main Freetype API configuration header\n\n#   ``FREETYPE_INCLUDE_DIR_freetype2``\n\n#     directory holding Freetype public headers\n\n# ``FREETYPE_LIBRARIES``\n\n#   the library to link against\n\n# ``FREETYPE_VERSION_STRING``\n\n#   the version of freetype found (since CMake 2.8.8)\n\n#\n\n# Hints\n\n# ^^^^^\n\n#\n\n# The user may set the environment variable ``FREETYPE_DIR`` to the root\n\n# directory of a Freetype installation.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Created by Eric Wing.\n\n# Modifications by Alexander Neundorf.\n\n# This file has been renamed to \"FindFreetype.cmake\" instead of the correct\n\n# \"FindFreeType.cmake\" in order to be compatible with the one from KDE4, Alex.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Ugh, FreeType seems to use some #include trickery which\n\n# makes this harder than it should be. It looks like they\n\n# put ft2build.h in a common/easier-to-find location which\n\n# then contains a #include to a more specific header in a\n\n# more specific location (#include <freetype/config/ftheader.h>).\n\n# Then from there, they need to set a bunch of #define's\n\n# so you can do something like:\n\n# #include FT_FREETYPE_H\n\n# Unfortunately, using CMake's mechanisms like include_directories()\n\n# wants explicit full paths and this trickery doesn't work too well.\n\n# I'm going to attempt to cut out the middleman and hope\n\n# everything still works.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# on Windows, ensure paths are in canonical format (forward slahes):\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# set the user variables\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Handle circular dependency on harfbuzz\n",
        "Line" : 176,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "builds/cmake/Modules/FindHarfbuzz.cmake" : {
      "ObjectId" : "df6279dec1a9c6256a86fc367449e0a578c4aceb",
      "LastModified" : "2019-03-10T22:57:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindHarfbuzz\n\n# -----------\n\n#\n\n# Find the Harfbuzz Library\n\n#\n\n# Imported Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following :prop_tgt:`IMPORTED` targets:\n\n#\n\n# ``Harfbuzz::Harfbuzz``\n\n#   The ``Harfbuzz`` library, if found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module will set the following variables in your project:\n\n#\n\n# ``HARFBUZZ_INCLUDE_DIRS``\n\n#   where to find Harfbuzz headers.\n\n# ``HARFBUZZ_LIBRARIES``\n\n#   the libraries to link against to use Harfbuzz.\n\n# ``HARFBUZZ_FOUND``\n\n#   true if the Harfbuzz headers and libraries were found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the library.\n\n# Allow HARFBUZZ_LIBRARY to be set manually, as the location of the Harfbuzz library\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "builds/cmake/Modules/FindLibSndFile.cmake" : {
      "ObjectId" : "c53bc05f1c9fdd51e9afb64f911b3e5b63d0ee57",
      "LastModified" : "2019-03-10T22:57:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindLibSndFile\n\n# -----------\n\n#\n\n# Find the LibSndFile Library\n\n#\n\n# Imported Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following :prop_tgt:`IMPORTED` targets:\n\n#\n\n# ``LibSndFile::LibSndFile``\n\n#   The ``LibSndFile`` library, if found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module will set the following variables in your project:\n\n#\n\n# ``LIBSNDFILE_INCLUDE_DIRS``\n\n#   where to find LibSndFile headers.\n\n# ``LIBSNDFILE_LIBRARIES``\n\n#   the libraries to link against to use LibSndFile.\n\n# ``LIBSNDFILE_FOUND``\n\n#   true if the LibSndFile headers and libraries were found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the library.\n\n# Allow LIBSNDFILE_LIBRARY to be set manually, as the location of the LibSndFile library\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "builds/cmake/Modules/FindOpusfile.cmake" : {
      "ObjectId" : "1d4e17cd2ce292e58e688666dbaf7cab915fc0d8",
      "LastModified" : "2019-03-10T22:57:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindOpusfile\n\n# -----------\n\n#\n\n# Find the Opusfile Library\n\n#\n\n# Imported Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following :prop_tgt:`IMPORTED` targets:\n\n#\n\n# ``Opusfile::Opusfile``\n\n#   The ``Opusfile`` library, if found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module will set the following variables in your project:\n\n#\n\n# ``OPUSFILE_INCLUDE_DIRS``\n\n#   where to find Opusfile headers.\n\n# ``OPUSFILE_LIBRARIES``\n\n#   the libraries to link against to use Opusfile.\n\n# ``OPUSFILE_FOUND``\n\n#   true if the Opusfile headers and libraries were found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the library.\n\n# Allow OPUSFILE_LIBRARY to be set manually, as the location of the Opusfile library\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Additional dependencies\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "builds/cmake/Modules/FindPixman.cmake" : {
      "ObjectId" : "276ed80f63dd2774201668cdd005c403ba1a285f",
      "LastModified" : "2019-03-10T22:57:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindPixman\n\n# -----------\n\n#\n\n# Find the Pixman Library\n\n#\n\n# Imported Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following :prop_tgt:`IMPORTED` targets:\n\n#\n\n# ``PIXMAN::PIXMAN``\n\n#   The ``Pixman`` library, if found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module will set the following variables in your project:\n\n#\n\n# ``PIXMAN_INCLUDE_DIRS``\n\n#   where to find Pixman headers.\n\n# ``PIXMAN_LIBRARIES``\n\n#   the libraries to link against to use Pixman.\n\n# ``PIXMAN_FOUND``\n\n#   true if the Pixman headers and libraries were found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the library.\n\n# Allow PIXMAN_LIBRARY to be set manually, as the location of the Pixman library\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "builds/cmake/Modules/FindSDL2.cmake" : {
      "ObjectId" : "4784a72a450d1392ad461c4ee1731c0e5941f6c7",
      "LastModified" : "2019-03-10T22:57:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find SDL2\n\n# Find the SDL2 headers and libraries\n\n#\n\n#  SDL2::SDL2 - Imported target to use for building a library\n\n#  SDL2::SDL2main - Imported interface target to use if you want SDL and SDLmain.\n\n#  SDL2_FOUND - True if SDL2 was found.\n\n#  SDL2_DYNAMIC - If we found a DLL version of SDL (meaning you might want to copy a DLL from SDL2::SDL2)\n\n#\n\n# Original Author:\n\n# 2015 Ryan Pavlik <ryan.pavlik@gmail.com> <abiryan@ryand.net>\n\n#\n\n# Copyright Sensics, Inc. 2015.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set up architectures (for windows) and prefixes (for mingw builds)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Invoke pkgconfig for hints\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Some special-casing if we've found/been given a framework.\n\n# Handles whether we're given the library inside the framework or the framework itself.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Move up in the directory tree as required to get the framework directory.\n",
        "Line" : 85,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# If we found a framework, do a search for the header ahead of time that will be more likely to get the framework header.\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# this file was introduced with SDL2\n",
        "Line" : 94,
        "CharPositionInLine" : 16
      },
      "7" : {
        "Text" : "# For some reason we couldn't get the framework directory itself.\n\n# Shouldn't happen, but might if something is weird.\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# this file was introduced with SDL2\n",
        "Line" : 106,
        "CharPositionInLine" : 14
      },
      "9" : {
        "Text" : "# Restore things the way they used to be.\n",
        "Line" : 145,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set QUATLIB_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Create SDL2::SDL2\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Handle the case that SDL2 is a framework and we were able to decompose it above.\n",
        "Line" : 173,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Handle the case that SDL2 is a framework and SDL_LIBRARY is just the framework itself.\n",
        "Line" : 177,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# This takes the basename of the framework, without the extension,\n\n# and sets it (as a child of the framework) as the imported location for the target.\n\n# This is the library symlink inside of the framework.\n",
        "Line" : 179,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Handle non-frameworks (including non-Mac), as well as the case that we're given the library inside of the framework\n",
        "Line" : 185,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Need Cocoa here, is always a framework\n",
        "Line" : 196,
        "CharPositionInLine" : 3
      },
      "17" : {
        "Text" : "# Compute what to do with SDL2main\n",
        "Line" : 206,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# MinGW requires some additional libraries to appear earlier in the link line.\n",
        "Line" : 217,
        "CharPositionInLine" : 3
      },
      "19" : {
        "Text" : "# Use pkgconfig-suggested extra libraries if available.\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# fall back to extra libraries specified in pkg-config in\n\n# an official binary distro of SDL2 for MinGW I downloaded\n",
        "Line" : 223,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Remove -lSDL2 -lSDL2main from the pkg-config linker line,\n\n# to prevent linking against the system library\n",
        "Line" : 260,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 22
    },
    "builds/cmake/Modules/FindSDL2_mixer.cmake" : {
      "ObjectId" : "8620278b1e726f6609c199ef1bb569ff61f2e557",
      "LastModified" : "2019-03-10T22:57:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindSDL2_mixer\n\n# -----------\n\n#\n\n# Find the SDL2_mixer Library\n\n#\n\n# Imported Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following :prop_tgt:`IMPORTED` targets:\n\n#\n\n# ``SDL2::MIXER``\n\n#   The ``SDL2_mixer`` library, if found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module will set the following variables in your project:\n\n#\n\n# ``SDL2_MIXER_INCLUDE_DIRS``\n\n#   where to find SDL2_mixer headers.\n\n# ``SDL2_MIXER_LIBRARIES``\n\n#   the libraries to link against to use SDL2_mixer.\n\n# ``SDL2_MIXER_FOUND``\n\n#   true if the SDL2_mixer headers and libraries were found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the library.\n\n# Allow SDL2_MIXER_LIBRARY to be set manually, as the location of the SDL2_mixer library\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find additional dependencies\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Required dependency of vorbis\n",
        "Line" : 52,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 5
    },
    "builds/cmake/Modules/FindSamplerate.cmake" : {
      "ObjectId" : "a71d512467e99c46a16749833276979852a183c8",
      "LastModified" : "2019-03-10T22:57:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindSamplerate\n\n# -----------\n\n#\n\n# Find the Samplerate Library\n\n#\n\n# Imported Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following :prop_tgt:`IMPORTED` targets:\n\n#\n\n# ``Samplerate::Samplerate``\n\n#   The ``Samplerate`` library, if found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module will set the following variables in your project:\n\n#\n\n# ``SAMPLERATE_INCLUDE_DIRS``\n\n#   where to find Samplerate headers.\n\n# ``SAMPLERATE_LIBRARIES``\n\n#   the libraries to link against to use Samplerate.\n\n# ``SAMPLERATE_FOUND``\n\n#   true if the Samplerate headers and libraries were found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the library.\n\n# Allow SAMPLERATE_LIBRARY to be set manually, as the location of the Samplerate library\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "builds/cmake/Modules/FindVorbisfile.cmake" : {
      "ObjectId" : "22176267a641db9f940e94caaedcfcd8f74f4a92",
      "LastModified" : "2019-03-10T22:57:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindVorbisfile\n\n# -----------\n\n#\n\n# Find the Vorbisfile Library\n\n#\n\n# Imported Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following :prop_tgt:`IMPORTED` targets:\n\n#\n\n# ``Vorbisfile::VorbisFile``\n\n#   The ``Vorbisfile`` library, if found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module will set the following variables in your project:\n\n#\n\n# ``VORBISFILE_INCLUDE_DIRS``\n\n#   where to find Vorbisfile headers.\n\n# ``VORBISFILE_LIBRARIES``\n\n#   the libraries to link against to use Vorbisfile.\n\n# ``VORBISFILE_FOUND``\n\n#   true if the Vorbisfile headers and libraries were found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the library.\n\n# Allow VORBISFILE_LIBRARY to be set manually, as the location of the Vorbisfile library\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find additional dependencies\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "builds/cmake/Modules/FindWildMidi.cmake" : {
      "ObjectId" : "8104f2ec2ddeee391b165738f88b843d40f87034",
      "LastModified" : "2019-03-10T22:57:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindWildMidi\n\n# -----------\n\n#\n\n# Find the WildMidi Library\n\n#\n\n# Imported Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following :prop_tgt:`IMPORTED` targets:\n\n#\n\n# ``WildMidi::WildMidi``\n\n#   The ``WildMidi`` library, if found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module will set the following variables in your project:\n\n#\n\n# ``WILDMIDI_INCLUDE_DIRS``\n\n#   where to find WildMidi headers.\n\n# ``WILDMIDI_LIBRARIES``\n\n#   the libraries to link against to use WildMidi.\n\n# ``WILDMIDI_FOUND``\n\n#   true if the WildMidi headers and libraries were found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the library.\n\n# Allow WILDMIDI_LIBRARY to be set manually, as the location of the WildMidi library\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "builds/cmake/Modules/FindXMP.cmake" : {
      "ObjectId" : "94e72d18f22a525577cf889a61aa48a29994bdc5",
      "LastModified" : "2019-03-10T22:57:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindXMP\n\n# -----------\n\n#\n\n# Find the XMP Library\n\n#\n\n# Imported Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following :prop_tgt:`IMPORTED` targets:\n\n#\n\n# ``XMP::XMP``\n\n#   The ``XMP`` library, if found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module will set the following variables in your project:\n\n#\n\n# ``XMP_INCLUDE_DIRS``\n\n#   where to find XMP headers.\n\n# ``XMP_LIBRARIES``\n\n#   the libraries to link against to use XMP.\n\n# ``XMP_FOUND``\n\n#   true if the XMP headers and libraries were found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the library.\n\n# Allow XMP_LIBRARY to be set manually, as the location of the XMP library\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "builds/cmake/Modules/Findmpg123.cmake" : {
      "ObjectId" : "7ad28a21909fcfc6943ac2cb2907d626c4be0050",
      "LastModified" : "2019-03-10T22:57:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# Findmpg123\n\n# -----------\n\n#\n\n# Find the mpg123 Library\n\n#\n\n# Imported Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following :prop_tgt:`IMPORTED` targets:\n\n#\n\n# ``mpg123::mpg123``\n\n#   The ``mpg123`` library, if found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module will set the following variables in your project:\n\n#\n\n# ``MPG123_INCLUDE_DIRS``\n\n#   where to find mpg123 headers.\n\n# ``MPG123_LIBRARIES``\n\n#   the libraries to link against to use mpg123.\n\n# ``MPG123_FOUND``\n\n#   true if the mpg123 headers and libraries were found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the library.\n\n# Allow MPG123_LIBRARY to be set manually, as the location of the mpg123 library\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "builds/cmake/Modules/Findspeexdsp.cmake" : {
      "ObjectId" : "5dc8942b78d69017ace3f135562094b0bf3025f5",
      "LastModified" : "2019-03-10T22:57:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# Findspeexdsp\n\n# -----------\n\n#\n\n# Find the speexdsp Library\n\n#\n\n# Imported Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following :prop_tgt:`IMPORTED` targets:\n\n#\n\n# ``speexdsp::speexdsp``\n\n#   The ``speexdsp`` library, if found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module will set the following variables in your project:\n\n#\n\n# ``SPEEXDSP_INCLUDE_DIRS``\n\n#   where to find speexdsp headers.\n\n# ``SPEEXDSP_LIBRARIES``\n\n#   the libraries to link against to use speexdsp.\n\n# ``SPEEXDSP_FOUND``\n\n#   true if the speexdsp headers and libraries were found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the library.\n\n# Allow SPEEXDSP_LIBRARY to be set manually, as the location of the speexdsp library\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "builds/cmake/Modules/PlayerFindPackage.cmake" : {
      "ObjectId" : "f5ff5d3f7bd2dc6fe14490253e922c7cf02e9f0d",
      "LastModified" : "2019-03-10T22:57:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# PlayerFindPackage\n\n# -----------------\n\n#\n\n# Helper function that conditionally invokes find_package and automatically\n\n# adds targets and compile time definitions.\n\n#\n\n# Required Arguments\n\n# ^^^^^^^^^^^^^^^^^^\n\n#\n\n# ``NAME`` (String)\n\n#   Name of the library to search. The name must match FindNAME.cmake.\n\n# ``TARGET`` (String)\n\n#   Target to import when the library was found.\n\n#\n\n# Optional Arguments\n\n# ^^^^^^^^^^^^^^^^^^\n\n#\n\n# ``CONDITION`` (Bool)\n\n#   When this variable is set to OFF the package is skipped.\n\n#   Allows disabling of libraries via the CMake command line.\n\n# ``DEFINITION`` (String)\n\n#   Preprocessor definition which is set to 1 when the library was found.\n\n# ``FOUND`` (String)\n\n#   Specifies the variable name of the FOUND variable that is checked.\n\n#   When missing, the variable is the ``NAME`` argument in upper case.\n\n# ``REQUIRED`` (without arguments)\n\n#   The library is required. Forwarded to find_package.\n\n#\n\n# Return variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# ``NAME_FOUND``\n\n#   Set to TRUE when the library was found. NAME is the ``NAME`` argument in\n\n#   upper case or the ``FOUND`` argument when specified.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Assume \"true\" when Condition is empty, otherwise dereference the condition variable\n",
        "Line" : 51,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "builds/opendingux/Makefile" : {
      "ObjectId" : "37a8f04bfad4bd104c92a62820a6c09730f207ed",
      "LastModified" : "2019-03-10T22:57:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##################################################################\r\n\n#         Makefile for OpenDingux (Dingoo A320/GCW-Zero)         #\r\n\n#                            By Shin-NiL                         #\r\n\n#                     - Based on Rikku2000's -                   #\r\n\n##################################################################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler Device option\r\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Host toolchain directory and extra flags\r\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Compiler headers\r\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Compiler source\r\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Compiler flags\r\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Host compiler and extra flags\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Start compile\r\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Clean Project\r\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "builds/psvita/Makefile" : {
      "ObjectId" : "11489780b0f60c8c8f1890b39df060129ee4977c",
      "LastModified" : "2019-03-10T22:57:26Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0,
      "Errorlog" : "line 57:41 token recognition error at: '\\s'\nline 57:61 token recognition error at: '\\e'\n"
    },
    "builds/switch/Makefile" : {
      "ObjectId" : "b800f2d3f6043a59a469c899ed9f69b1c3d1674a",
      "LastModified" : "2019-03-10T22:57:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# TARGET is the name of the output\n\n# BUILD is the directory where object files & intermediate files will be placed\n\n# SOURCES is a list of directories containing source code\n\n# DATA is a list of directories containing data files\n\n# INCLUDES is a list of directories containing header files\n\n# EXEFS_SRC is the optional input directory containing data copied into exefs, if anything this normally should only contain \"main.npdm\".\n\n# ROMFS is the directory containing data to be added to RomFS, relative to the Makefile (Optional)\n\n#\n\n# NO_ICON: if set to anything, do not use icon.\n\n# NO_NACP: if set to anything, no .nacp file is generated.\n\n# APP_TITLE is the name of the app stored in the .nacp file (Optional)\n\n# APP_AUTHOR is the author of the app stored in the .nacp file (Optional)\n\n# APP_VERSION is the version of the app stored in the .nacp file (Optional)\n\n# APP_TITLEID is the titleID of the app stored in the .nacp file (Optional)\n\n# ICON is the filename of the icon (.jpg), relative to the project folder.\n\n#   If not set, it attempts to use one of the following (in this order):\n\n#     - <Project name>.jpg\n\n#     - icon.jpg\n\n#     - <libnx folder>/default_icon.jpg\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#ROMFS\t:=\tromfs\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# options for code generation\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# list of directories containing libraries, this must be the top level containing\n\n# include and lib\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# no real need to edit anything past this point unless you need to add additional\n\n# rules for different file extensions\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# use CXX for linking C++ projects, CC for standard C\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# main targets\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# make compiling silent\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# you need a rule like this for each extension you use as binary data\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#---------------------------------------------------------------------------------------\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#---------------------------------------------------------------------------------------\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "builds/wii/Makefile" : {
      "ObjectId" : "e801e8696332ceb56a8f5aa67d3cc3cade2f0ea1",
      "LastModified" : "2019-03-10T22:57:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# Clear the implicit built in rules\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# TARGET is the name of the output\n\n# BUILD is the directory where object files & intermediate files will be placed\n\n# TOPDIR is the directory from where relative paths to source files are resolved\n\n# SOURCES is a list of directories containing source code\n\n# INCLUDES is a list of directories containing extra header files\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# options for code generation\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# any extra libraries we wish to link with the project\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# list of directories containing libraries, this must be the top level containing\n\n# include and lib\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# no real need to edit anything past this point unless you need to add additional\n\n# rules for different file extensions\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# automatically build a list of object files for our project\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# use CXX for linking C++ projects, CC for standard C\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# build a list of include paths\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# build a list of library paths\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#---------------------------------------------------------------------------------\n\n# main targets\n\n#---------------------------------------------------------------------------------\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#---------------------------------------------------------------------------------\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    }
  },
  "FileTypes" : {
    "CMAKE" : 17,
    "MAKEFILE" : 6,
    "AUTOMAKE" : 1
  },
  "ElapsedTime" : 2499
}