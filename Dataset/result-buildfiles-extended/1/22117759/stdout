{
  "Repository" : "22117759",
  "Revision" : "HEAD",
  "ObjectId" : "de5d51bdae8094a63652e0ce699d301b5b28c1a8",
  "CommitTime" : "2019-04-03T11:58:04Z",
  "Files" : {
    "android-studio/demos-april/demo_3d/CMakeLists.txt" : {
      "ObjectId" : "550adfa2c72a2a59e57723a069612f310e1834b9",
      "LastModified" : "2018-07-09T12:12:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "android-studio/demos-april/demo_advanced/CMakeLists.txt" : {
      "ObjectId" : "b136205c4094c6f89e417a174f3b68d78c896550",
      "LastModified" : "2018-07-09T12:12:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "android-studio/demos-april/demo_helloworld/CMakeLists.txt" : {
      "ObjectId" : "7ffa1f68a375270bd062a8381605f16b09ccfc8a",
      "LastModified" : "2018-07-09T12:12:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "android-studio/demos-april/demo_motion/CMakeLists.txt" : {
      "ObjectId" : "4ddce4f522b8f972cd59ccffed0ddc7a586b3eb3",
      "LastModified" : "2018-07-09T12:12:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "android-studio/demos-april/demo_pix/CMakeLists.txt" : {
      "ObjectId" : "edc18678469d2c4b5b0a723b4cf3f30bc042adcf",
      "LastModified" : "2018-07-09T12:12:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "android-studio/demos-april/demo_simple/CMakeLists.txt" : {
      "ObjectId" : "6d4b2ce4d1e45cbc7ea7907ddd800728f0338211",
      "LastModified" : "2018-07-09T12:12:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "android-studio/demos-april/demo_tictactoe/CMakeLists.txt" : {
      "ObjectId" : "50ef115945622dfd7b05d83bb14aa6ec3a398563",
      "LastModified" : "2018-07-09T12:12:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "android-studio/lib/CMakeLists.txt" : {
      "ObjectId" : "17dc5ac17c82a8afe1fd6cad7ca20f6d6e401402",
      "LastModified" : "2018-07-09T12:12:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "android/android/build.xml" : {
      "ObjectId" : "5f1296d18b77dd8924ff14519ac9cb05287b8e31",
      "LastModified" : "2018-07-09T12:12:54Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "android/template/build.xml" : {
      "ObjectId" : "13192d727d2be1434b908e9f0ce36010be58e4b4",
      "LastModified" : "2018-07-09T12:12:54Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "aprilpix/android-studio/lib-no-encode/CMakeLists.txt" : {
      "ObjectId" : "cd727c6bf349bc54599b61308c26e86557ccd265",
      "LastModified" : "2018-07-11T13:17:04Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "aprilpix/android-studio/lib/CMakeLists.txt" : {
      "ObjectId" : "2eca6d573527faf59273a78f32af7b3b3e89059d",
      "LastModified" : "2018-07-11T13:17:04Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "demos/demo_3d/android/build.xml" : {
      "ObjectId" : "a69acff17a3b3a2d68ab4e1746775387baede08b",
      "LastModified" : "2018-07-11T13:17:04Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "demos/demo_advanced/android/build.xml" : {
      "ObjectId" : "45429bb6547e01228439a48548eb4c59f040d434",
      "LastModified" : "2018-07-11T13:17:04Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "demos/demo_helloworld/android/build.xml" : {
      "ObjectId" : "77bc64bb3cf574c4a9929ba15891e3d3b6391336",
      "LastModified" : "2018-07-11T13:17:04Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "demos/demo_motion/android/build.xml" : {
      "ObjectId" : "28fe4ef66cc2075fb705a54bcead5b03a357b299",
      "LastModified" : "2018-07-11T13:17:04Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "demos/demo_pix/android/build.xml" : {
      "ObjectId" : "d90ecbdb54c96527b0d286b9d357a8e899e3c04e",
      "LastModified" : "2018-07-11T13:17:04Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "demos/demo_simple/android/build.xml" : {
      "ObjectId" : "413b12ae089ab92b685b9de19e72ff2c37fd8106",
      "LastModified" : "2018-07-11T13:17:04Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "demos/demo_tictactoe/android/build.xml" : {
      "ObjectId" : "50427a45f324317f3d09660bade2e6b5093cfc3e",
      "LastModified" : "2018-07-11T13:17:04Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "lib/jpeg/Makefile.am" : {
      "ObjectId" : "b4b46005804c572bab5cdda6905617c547ca5db2",
      "LastModified" : "2018-07-11T13:17:04Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\r\n\n#\r\n\n#  Automake Makefile for the JPEG library\r\n\n#\r\n\n#  This file is written by Bob Friesenhahn, Guido Vollbeding\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sources to build library\r\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# System dependent sources\r\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Headers which are installed to support the library\r\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Headers which are not installed\r\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Manual pages (Automake uses 'MANS' for itself)\r\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Other documentation files\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Makefiles for various systems\r\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Configuration files\r\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Support scripts for configure\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Miscellaneous support files\r\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Test support files\r\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# libtool libraries to build\r\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Library sources for libjpeg.la\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# LDFLAGS for libjpeg.la\r\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Executables to build\r\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Executable sources & libs\r\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Manual pages to install\r\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Headers to install\r\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Other distributed headers\r\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Other distributed files\r\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Files to be cleaned\r\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Install jconfig.h\r\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Uninstall jconfig.h\r\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Run tests\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "lib/jpeg/android-studio/lib/CMakeLists.txt" : {
      "ObjectId" : "9aebc6cd2c779e80932fac943450029905f66186",
      "LastModified" : "2018-07-11T13:17:04Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/png/CMakeLists.txt" : {
      "ObjectId" : "f74147b2db129a8338ecc83c81f4bcbb61c6621f",
      "LastModified" : "2018-07-11T13:17:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (C) 2007-2013 Glenn Randers-Pehrson\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This code is released under the libpng license.\n\n# For conditions of distribution and use, see the disclaimer\n\n# and license in png.h\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# needed packages\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# not needed on windows\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# COMMAND LINE OPTIONS\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Many more configuration options could be added here\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# SET LIBNAME\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# to distinguish between debug and release lib\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Use the prebuilt pnglibconf.h file from the scripts folder\n\n# TODO: fix this by building with awk; without this no cmake build can be\n\n# configured directly (to do so indirectly use your local awk to build a\n\n# pnglibconf.h in the build directory.)\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# OUR SOURCES\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# SOME NEEDED DEFINITIONS\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# NOW BUILD OUR TARGET\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# msvc does not append 'lib' - do it here to have consistent name\n",
        "Line" : 129,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# does not work without changing name\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# msvc does not append 'lib' - do it here to have consistent name\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# does not work with msvc due to png_lib_ver issue\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Ensure the CMAKE_LIBRARY_OUTPUT_DIRECTORY is set\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Set a variable with CMake code which:\n\n# Creates a symlink from src to dest (if possible) or alternatively\n\n# copies if different.\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# libpng is a library so default to 'lib'\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# CREATE PKGCONFIG FILES\n\n# we use the same files like ./configure, so we have to set its vars\n\n# Only do this on Windows for Cygwin - the files don't make much sense outside\n\n# a UNIX look alike\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# SET UP LINKS\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#   VERSION 16.${PNGLIB_RELEASE}.1.6.12\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# MSVC doesn't use a different file extension for shared vs. static\n\n# libs.  We are able to change OUTPUT_NAME to remove the _static\n\n# for all other platforms.\n",
        "Line" : 261,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# If CMake > 2.4.x, we set a variable used below to export\n\n# targets to an export file.\n\n# TODO: Use VERSION_GREATER after our cmake_minimum_required >= 2.6.2\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# future proof\n",
        "Line" : 276,
        "CharPositionInLine" : 38
      },
      "27" : {
        "Text" : "# INSTALL\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Create a symlink for libpng.dll.a => libpng16.dll.a on Cygwin\n",
        "Line" : 289,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# Install man pages\n",
        "Line" : 328,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Install pkg-config files\n",
        "Line" : 334,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# On versions of CMake that support it, create an export file CMake\n\n# users can include() to import our targets\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# what's with libpng-$VER%.txt and all the extra files?\n",
        "Line" : 353,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# UNINSTALL\n\n# do we need this?\n",
        "Line" : 355,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# DIST\n\n# do we need this?\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# to create msvc import lib for mingw compiled shared lib\n\n# pexports libpng.dll > libpng.def\n\n# lib /def:libpng.def /machine:x86\n",
        "Line" : 361,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 36
    },
    "lib/png/Makefile.am" : {
      "ObjectId" : "052e596b63bc28ba8433048ca3cc78427c8779d5",
      "LastModified" : "2018-07-11T13:17:04Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am:\n\n#   Source file for Makefile.in (and hence Makefile)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# test programs - run on make check, make distcheck\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Utilities - installed\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This ensures that pnglibconf.h gets built at the start of 'make all' or\n\n# 'make check', but it does not add dependencies to the individual programs,\n\n# this is done below.\n\n#\n\n# IMPORTANT: always add the object modules of new programs to the list below\n\n# because otherwise the sequence 'configure; make new-program' will *sometimes*\n\n# result in the installed (system) pnglibconf.h being used and the result is\n\n# always wrong and always very confusing.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Generally these are single line shell scripts to run a test with a particular\n\n# set of parameters:\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# These tests are expected, and required, to fail:\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# man pages\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# generate the -config scripts if required\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# rules to build libpng, only build the old library on request\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# EXTRA_LTLIBRARIES= libpng.la\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#   Versioned symbols and restricted exports\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#   Only restricted exports when possible\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#distribute headers in /usr/include/libpng/*\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# pkg-config stuff, note that libpng.pc is always required in order\n\n# to get the correct library\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Extra source distribution files, '${srcdir}' is used below to stop build files\n\n# from those directories being included.  This only works if the configure is\n\n# not done in the source directory!\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# PNG_COPTS give extra options for the C compiler to be used on all compilation\n\n# steps (unless targe_CFLAGS is specified; that will take precedence over\n\n# AM_CFLAGS)\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# DFNCPP is normally just CPP - the C preprocessor - but on Solaris and maybe\n\n# other operating systems (NeXT?) the C preprocessor selected by configure\n\n# checks input tokens for validity - effectively it performs part of the ANSI-C\n\n# parsing - and therefore fails with the .df files.  configure.ac has special\n\n# checks for this and sets DFNCPP appropriately.\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Rename functions in scripts/prefix.out with a PNG_PREFIX prefix.\n\n# Rename macros in scripts/macro.lst from PNG_PREFIXpng_ to PNG_ (the actual\n\n# implementation of the macro).\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# is empty\n",
        "Line" : 198,
        "CharPositionInLine" : 13
      },
      "19" : {
        "Text" : "# The following is necessary to ensure that the local pnglibconf.h is used, not\n\n# an installed one (this can happen immediately after on a clean system if\n\n# 'make test' is the first thing the user does.)  Only files which include\n\n# one of the png source files (typically png.h or pngpriv.h) need to be listed\n\n# here:\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# We must use -DPNG_NO_USE_READ_MACROS here even when the library may actually\n\n# be built with PNG_USE_READ_MACROS; this prevents the read macros from\n\n# interfering with the symbol file format.\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# The .dfn file for pnglibconf.h is machine generated\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Symbol checks (.def and .out files should match)\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# used on demand to regenerate the standard header, CPPFLAGS should\n\n# be empty - no non-standard defines\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Extra checks\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Don't distribute the generated script files\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Make links between installed files with release-specific names and the generic\n\n# file names.  If this install rule is run the generic names will be deleted and\n\n# recreated - this has obvious issues for systems with multiple installations.\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# EXT_LIST is a list of the possibly library directory extensions, this exists\n\n# because we can't find a good way of discovering the file extensions that are\n\n# actually installed on a given system, so instead we check for every extension\n\n# we have seen.\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# If --enable-unversioned-links is specified the header and lib file links\n\n# will be automatically made on a 'make install':\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Likewise, --install-pc causes libpng.pc to be constructed:\n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# And --install-config:\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# The following addition ensures that 'make all' always builds the test programs\n\n# too.  It used to, but some change either in libpng or configure stopped this\n\n# working.\n",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 32
    },
    "lib/png/android-studio/lib/CMakeLists.txt" : {
      "ObjectId" : "152ebc1c0a4f4efe5fd24924cd955c027e682a09",
      "LastModified" : "2018-07-11T13:17:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# defining manually so source files don't need to be changed\r\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/webp/CMakeLists.txt" : {
      "ObjectId" : "3cb9c3bc0c8cbab33d6681844a982a0af88d6f22",
      "LastModified" : "2018-07-11T13:17:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Options for coder / decoder executables.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n\n# Generate the config.h to compile with specific intrinsics / libs.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Check for compiler options.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Check for libraries.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TODO: this seems unused, check with autotools.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Only useful for vwebp, so useless for now.\n\n# find_package(OpenGL)\n\n# set(WEBP_HAVE_GL ${OPENGL_FOUND})\n\n# set(WEBP_DEP_INCLUDE_DIRS ${WEBP_DEP_INCLUDE_DIRS} ${OPENGL_INCLUDE_DIRS})\n\n# set(WEBP_DEP_LIBRARIES ${WEBP_DEP_LIBRARIES} ${OPENGL_LIBRARIES})\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Find the standard C math library.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Find the standard image libraries.\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Check for specific headers.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Windows specifics\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Check for SIMD extensions.\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# MSVC does not have a SSE4 flag but AVX2 support implies\n\n# SSE4 support.\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Check which files we should include or not.\n",
        "Line" : 158,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Memorize the file and flags.\n",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Remove the file from the list.\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Explicitly disable SIMD.\n",
        "Line" : 174,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "## Define extra info.\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Read from configure.ac.\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Build more info.\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Generate the config.h header.\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# The webp folder is included as we reference config.h as\n\n# ../webp/config.h or webp/config.h\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "################################################################################\n\n# WebP source files.\n\n# Read the Makefile.am to get the source files.\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Remove the files specific to SIMD we don't user.\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Build the library.\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Change the compile flags for SIMD files we use.\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Build the executables if asked for.\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Example utility library.\n",
        "Line" : 281,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Image-decoding utility library.\n",
        "Line" : 291,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# dwebp\n",
        "Line" : 313,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# cwebp\n",
        "Line" : 325,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 30
    },
    "lib/webp/Makefile.am" : {
      "ObjectId" : "ceee75d46cc11b23e6e292b0a1f936c3e085a5a4",
      "LastModified" : "2018-07-11T13:17:04Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "lib/webp/android-studio/lib/CMakeLists.txt" : {
      "ObjectId" : "8327ea3fd784a0071fb5d84ef2a38971cad59d6d",
      "LastModified" : "2018-07-12T09:01:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# defining manually so source files don't need to be changed\r\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/webp/examples/Makefile.am" : {
      "ObjectId" : "17a3688a31ad3e96ae6faf59a9c9d596174b49f9",
      "LastModified" : "2018-07-11T13:17:04Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "lib/webp/man/Makefile.am" : {
      "ObjectId" : "f896ef9397326c432ac616a6c0d73192703253e6",
      "LastModified" : "2018-07-11T13:17:04Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "lib/webp/src/Makefile.am" : {
      "ObjectId" : "3779af6fb801f526cddd5b3b418d3532a2d02a32",
      "LastModified" : "2018-07-11T13:17:04Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# The mux and demux libraries depend on libwebp, thus the '.' to force the\n\n# build order so it's available to them.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use '-no-undefined' to declare that libwebp does not depend on any libraries\n\n# other than the ones listed on the command line, i.e., after linking, it will\n\n# not have unresolved symbols. Some platforms (Windows among them) require all\n\n# symbols in shared libraries to be resolved at library creation.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "lib/webp/src/dec/Makefile.am" : {
      "ObjectId" : "7a0b4e8112c15ed6d2723a3478e9660ad3092a1a",
      "LastModified" : "2018-07-11T13:17:04Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "lib/webp/src/demux/Makefile.am" : {
      "ObjectId" : "d7ce525f2f8e2d241a6c9bf8a96bf05fb310f159",
      "LastModified" : "2018-07-11T13:17:04Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "lib/webp/src/dsp/Makefile.am" : {
      "ObjectId" : "2ef5c3802ce96e6bffb169ae9096eb59eb5e46f7",
      "LastModified" : "2018-07-11T13:17:04Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "lib/webp/src/enc/Makefile.am" : {
      "ObjectId" : "9d388e62ff69b8415f1419df09b4fb3b103bd3df",
      "LastModified" : "2018-07-11T13:17:04Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "lib/webp/src/mux/Makefile.am" : {
      "ObjectId" : "042a14bae9b974a4fd08ea4f502a7398517502cd",
      "LastModified" : "2018-07-11T13:17:04Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "lib/webp/src/utils/Makefile.am" : {
      "ObjectId" : "128ccfc200e91a48941ef1133c235d4a15eaffba",
      "LastModified" : "2018-07-11T13:17:04Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 15,
    "AUTOMAKE" : 12,
    "ANT" : 9
  },
  "ElapsedTime" : 2013
}