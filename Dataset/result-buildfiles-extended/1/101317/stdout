{
  "Repository" : "101317",
  "Revision" : "HEAD",
  "ObjectId" : "7e2116570de4cd9170875967e14b9d07926bc468",
  "CommitTime" : "2013-07-16T14:12:36Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "df47464c97bed7435a4f4355536cca0ed56df13f",
      "LastModified" : "2013-01-09T18:53:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#PROFILE_FLAGS=-DMANUAL_PROFILING=1\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "valgrind-3.8.0/Makefile.am" : {
      "ObjectId" : "20244ef9a52c62c2e5edd81aed13bfed0326c644",
      "LastModified" : "2012-09-15T11:01:36Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Put docs last because building the HTML is slow and we want to get\n\n# everything else working before we try it.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We include all the base .supp files in the distribution, but not\n\n# default.supp, as it is built from the base .supp files at compile-time.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Preprend @PERL@ because tests/vg_regtest isn't executable\n\n## Ensure make exits with error if PERL fails or check_makefile_consistency fails.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Nb: gdbserver_tests are put in exp-regtest rather than nonexp-regtest\n\n# because they are tested with various valgrind tools, so might be using\n\n# an experimental tool.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Preprend @PERL@ because tests/vg_perf isn't executable\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Nb: no need to include any Makefile.am files here, or files included from\n\n# them, as automake includes them automatically.  Also not COPYING, README\n\n# or NEWS.\n\n# We include valgrind.spec as well as valgrind.spec.in to save packagers\n\n# from having to run configure (bug 188560).\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Need config.h in the installed tree, since some files depend on it\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "valgrind-3.8.0/auxprogs/Makefile.am" : {
      "ObjectId" : "074d8f6b178436abfb4488f656c1b113009b8fd0",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# valgrind_listener (built for the primary target only)\n\n#----------------------------------------------------------------------------\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "valgrind-3.8.0/cachegrind/Makefile.am" : {
      "ObjectId" : "f22fe17307cba2d708174c47180ee66ea46708c1",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Headers, etc\n\n#----------------------------------------------------------------------------\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# cg_merge (built for the primary target only)\n\n#----------------------------------------------------------------------------\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# cachegrind-<platform>\n\n#----------------------------------------------------------------------------\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "valgrind-3.8.0/cachegrind/tests/Makefile.am" : {
      "ObjectId" : "e21d52d5c3385ce4e580422cd8283149b480ddae",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# C ones\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "valgrind-3.8.0/cachegrind/tests/x86/Makefile.am" : {
      "ObjectId" : "1d141efc4a9d3fbcd6a8f922bcd6b2a6eb16ef67",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "valgrind-3.8.0/callgrind/Makefile.am" : {
      "ObjectId" : "ae4ff4fc69ac84dc7b6fa66cd094d7e467f35d66",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Headers, etc\n\n#----------------------------------------------------------------------------\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# callgrind-<platform>\n\n#----------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "valgrind-3.8.0/callgrind/tests/Makefile.am" : {
      "ObjectId" : "da4a426cdcf3f290d44bfd246aa82eecc458bd79",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "valgrind-3.8.0/coregrind/Makefile.am" : {
      "ObjectId" : "01015a70dc3cac6ed43813a30d547dd3956b89b8",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Be very careful when renaming any files, targets, whatever, in this\n\n# Makefile.  Various parts of the system rely on these names having\n\n# particular forms.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Basics, flags\n\n#----------------------------------------------------------------------------\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# The launcher.  Built for the primary target only.\n\n#----------------------------------------------------------------------------\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# On Android we must ask for non-executable stack, not sure why.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Darwin Mach stuff\n\n#----------------------------------------------------------------------------\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Mach RPC interface definitions\n\n# Here are some more .defs files that are not used, but could be in the\n\n# future:\n\n#\tclock.defs \\\n#\tclock_priv.defs \\\n#\tclock_reply.defs \\\n#\texc.defs \\\n#\thost_priv.defs \\\n#\thost_security.defs \\\n#\tledger.defs \\\n#\tlock_set.defs \\\n#\tmach_host.defs \\\n#\tmach_port.defs \\\n#\tnotify.defs \\\n#\tprocessor.defs \\\n#\tprocessor_set.defs \\\n#\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Be careful w.r.t. parallel builds.  See section 27.9 of the automake info\n\n# page, \"Handling Tools that Produce many Outputs\".\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Headers\n\n#----------------------------------------------------------------------------\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# libcoregrind-<platform>.a\n\n#----------------------------------------------------------------------------\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# libreplacemalloc_toolpreload-<platform>.a\n\n#----------------------------------------------------------------------------\n",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# vgpreload_core-<platform>.a\n\n#----------------------------------------------------------------------------\n",
        "Line" : 434,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# gdbserver xml target descriptions\n\n#----------------------------------------------------------------------------\n",
        "Line" : 464,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# so as to make sure these get copied into the install tree\n",
        "Line" : 554,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# so as to make sure these get copied into the tarball\n",
        "Line" : 558,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# General stuff\n\n#----------------------------------------------------------------------------\n",
        "Line" : 561,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Darwin linker kludges\n\n#----------------------------------------------------------------------------\n",
        "Line" : 576,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "valgrind-3.8.0/docs/Makefile.am" : {
      "ObjectId" : "3849ddf8041fc21910cd9d8694549cfbfa6cca20",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##-------------------------------------------------------------\n\n## HACK: stuff to avoid making the print docs if installing the\n\n## tools to do so is impractical / too difficult\n\n##-------------------------------------------------------------\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Comment out the next line to skip building print docs.  The default\n\n# is not to skip building print docs.  Note, after changing it\n\n# you need to re-run autogen.sh and configure to make it take effect.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##-------------------------------------------------------------\n\n## END OF HACK\n\n##-------------------------------------------------------------\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##-------------------------------------------------------------------\n\n## Below here is more ordinary make stuff...\n\n##-------------------------------------------------------------------\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# file to log print output to\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# validation stuff\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# validate with docbook 4.3 'cos it supports xml:base natively\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# stylesheet processor\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# stylesheets\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# The text version of the FAQ.\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# the valgrind manpages\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# chunked html, on a chapter-by-chapter basis\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# pdf and postscript\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# If the docs have been built, install them.  But don't worry if they have \n\n# not -- developers do 'make install' not from a 'make dist'-ified distro all\n\n# the time.\n\n#\n\n# Note: this is done at 'make install' time.\n\n# Note 2: the ifeq/else/endif have to be indented one space \n\n# because otherwise it seems that automake thinks it should\n\n# be the one to handle the else/endif parts, not GNU make\n\n# as we intend.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This is done at 'make dist' time.  It builds the html docs, print\n\n# docs and man pages and copies them into the docs/ directory in the\n\n# tarball.\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# -----------------------------------------------------------------------\n\n# Note: the rest of this file is nothing to do with the normal build\n\n# tree.  The stuff below contains special targets for web-site\n\n# artefacts.\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# chunked html with no html/body tags, css, or top nav, to fit into the website\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# valkyrie carries around her own copy of the valgrind manual\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# html.tar.bz2, .pdf, .ps.bz2 files for downloading from the website\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "valgrind-3.8.0/drd/Makefile.am" : {
      "ObjectId" : "153b38484c0157329e3301a73fa63b1f06741100",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Headers, flags\n\n#----------------------------------------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#DRD_CFLAGS += -DENABLE_DRD_CONSISTENCY_CHECKS\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# drd-<platform>\n\n#----------------------------------------------------------------------------\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# vgpreload_drd-<platform>.so\n\n#----------------------------------------------------------------------------\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "valgrind-3.8.0/drd/tests/Makefile.am" : {
      "ObjectId" : "e7f1f3aa023ec59b6a3bf3e289d1d67c05262b6c",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# nothing, i.e. not -lpthread\n",
        "Line" : 402,
        "CharPositionInLine" : 30
      },
      "1" : {
        "Text" : "# nothing, i.e. not -lpthread\n",
        "Line" : 405,
        "CharPositionInLine" : 30
      },
      "CommentCount" : 2
    },
    "valgrind-3.8.0/exp-bbv/Makefile.am" : {
      "ObjectId" : "78d9e53287cfdeff18cb02391e270c190dffa51b",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# exp-bbv-<platform>\n\n#----------------------------------------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "valgrind-3.8.0/exp-bbv/tests/Makefile.am" : {
      "ObjectId" : "359ba22b4a024151c722526ad98ff1f4edd40618",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Platform-specific tests\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "valgrind-3.8.0/exp-bbv/tests/amd64-linux/Makefile.am" : {
      "ObjectId" : "a7eca39cc80280e6f69c41ffc94f56b7f9dfdd5c",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "valgrind-3.8.0/exp-bbv/tests/arm-linux/Makefile.am" : {
      "ObjectId" : "d022cf73c0dce91005015abdf2447cb929b653c7",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "valgrind-3.8.0/exp-bbv/tests/ppc32-linux/Makefile.am" : {
      "ObjectId" : "c09495956150ddef56f1ad43836f5ebb576746cc",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "valgrind-3.8.0/exp-bbv/tests/x86-linux/Makefile.am" : {
      "ObjectId" : "f2971e1c95bdbd985027d7ae472008b21432343d",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "valgrind-3.8.0/exp-bbv/tests/x86/Makefile.am" : {
      "ObjectId" : "3857aaef2e45ffe3903756de60b2a124b4a291a4",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "valgrind-3.8.0/exp-dhat/Makefile.am" : {
      "ObjectId" : "9ee6497d7dcf708c6a4633285660c0df5fa93be5",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#SUBDIRS += perf\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Headers, etc\n\n#----------------------------------------------------------------------------\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#bin_SCRIPTS = dh_print\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# exp_dhat-<platform>\n\n#----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# vgpreload_exp_dhat-<platform>.so\n\n#----------------------------------------------------------------------------\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "valgrind-3.8.0/exp-dhat/tests/Makefile.am" : {
      "ObjectId" : "8b137891791fe96927ad78e64b0aad7bded08bdc",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "valgrind-3.8.0/exp-sgcheck/Makefile.am" : {
      "ObjectId" : "a1c5d897b05e5d38b5debb2661fa72ba0d05eabf",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Headers, etc\n\n#----------------------------------------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# exp-sgcheck-<platform>\n\n#----------------------------------------------------------------------------\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# vgpreload_exp-sgcheck-<platform>.so\n\n#----------------------------------------------------------------------------\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "valgrind-3.8.0/exp-sgcheck/tests/Makefile.am" : {
      "ObjectId" : "30dab91a2f6c30f8a44b1046048af298c2ec060d",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# DDD: not sure if these ones should work on Darwin or not... if not, should\n\n# be moved into x86-linux/.\n\n#if ! VGCONF_OS_IS_DARWIN\n\n#   check_PROGRAMS += \\\n#\tccc\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#endif\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# To make it a bit more realistic, build hackedbz2.c with at \n\n# least some optimisation.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C ones\n\n#pth_create_LDADD\t= -lpthread\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ ones\n\n#ccc_SOURCES\t\t= ccc.cpp\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build shared object for preen_invars\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "valgrind-3.8.0/gdbserver_tests/Makefile.am" : {
      "ObjectId" : "310baedb79c7bfff2d108fb7900390c7adce5d01",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "valgrind-3.8.0/helgrind/Makefile.am" : {
      "ObjectId" : "300e25b495d4f1be5ac56dbb7dfff2a06a19e6b2",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Headers, etc\n\n#----------------------------------------------------------------------------\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# helgrind-<platform>\n\n#----------------------------------------------------------------------------\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# vgpreload_helgrind-<platform>.so\n\n#----------------------------------------------------------------------------\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "valgrind-3.8.0/helgrind/tests/Makefile.am" : {
      "ObjectId" : "77c17f55cea471957ae9af292ef4d29916459403",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# XXX: tc18_semabuse uses operations that are unsupported on Darwin.  It\n\n# should be conditionally compiled like tc20_verifywrap is.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DDD: it seg faults, and then the Valgrind exit path hangs\n\n# JRS 29 July 09: it craps out in the stack unwinder, in\n\n#==13480==    at 0xF00B81FF: ??? f00b8180 VG_(get_StackTrace_wrk)\n\n#==13480==    by 0xF00B83F8: ??? f00b8340 VG_(get_StackTrace)\n\n#==13480==    by 0xF009FE19: ??? f009fd70 record_ExeContext_wrk\n\n#==13480==    by 0xF009D92E: ??? f009d8c0 construct_error\n\n#==13480==    by 0xF009F001: ??? f009eef0 VG_(maybe_record_error)\n\n#==13480==    by 0xF0081F80: ??? f0081f00 HG_(record_error_misc)\n\n#==13480==    by 0xF0089C00: ??? f0089b80 evh__pre_thread_ll_exit\n\n#==13480==    by 0xF01111D1: ??? f0111070 run_a_thread_NORETURN\n\n#==13480==    by 0xF0111512: ??? f0111500 start_thread_NORETURN\n\n# when the thread being unwound is at __bsdthread_terminate+0\n\n#\n\n# Like Tom says, the stack unwinder protection is bollocks.\n\n# We should junk all previous schemes and simply get the \n\n# stack unwinder to consult aspacem at each frame (cache-accelerated,\n\n# of course) to check each page it visits is accessible.\n\n#\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "valgrind-3.8.0/include/Makefile.am" : {
      "ObjectId" : "ade27c2244ebdda9b0cf5ea3fb21a923fbc6e860",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# The \"nobase\" means that the vki/ path on some of them will be preserved\n\n# when they are installed into $(includedir)/valgrind.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "valgrind-3.8.0/lackey/Makefile.am" : {
      "ObjectId" : "39ada21fddc6715948f8a6f14700959285edb780",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# lackey-<platform>\n\n#----------------------------------------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "valgrind-3.8.0/lackey/tests/Makefile.am" : {
      "ObjectId" : "e16c9a13edd0e0862c4d90ac9f2eba49c44f297b",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "valgrind-3.8.0/massif/Makefile.am" : {
      "ObjectId" : "6c26780c124ccdcc35a7c279067d044e4ef3791f",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Headers, etc\n\n#----------------------------------------------------------------------------\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# massif-<platform>\n\n#----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# vgpreload_massif-<platform>.so\n\n#----------------------------------------------------------------------------\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "valgrind-3.8.0/massif/tests/Makefile.am" : {
      "ObjectId" : "c6caf309d2862d86548c853f0d5edef05c2fa6e8",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# C++ tests\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "valgrind-3.8.0/memcheck/Makefile.am" : {
      "ObjectId" : "172fe41429c4f82a3c0ed2cefdf22dc106972e4f",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Headers\n\n#----------------------------------------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# memcheck-<platform>\n\n#----------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# mc_main.c contains the helper function for memcheck that get called\n\n# all the time. To maximise performance compile with -fomit-frame-pointer\n\n# Primary beneficiary is x86.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# vgpreload_memcheck-<platform>.so\n\n#----------------------------------------------------------------------------\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# mc_replace_strmem.c runs on the simulated CPU, and it often appears\n\n# in stack traces shown to the user.  It is built with\n\n# -fno-omit-frame-pointer so as to guarantee robust backtraces on x86,\n\n# on which CFI based unwinding is not the \"normal\" case and so is\n\n# sometimes fragile.\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "valgrind-3.8.0/memcheck/tests/Makefile.am" : {
      "ObjectId" : "52ac3869765571ee2117a9893837ba4655a6212d",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Arch-specific tests.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# OS-specific tests\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Platform-specific tests\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#AM_CFLAGS   += -mfloat-abi=softfp\n\n#AM_CXXFLAGS += -mfloat-abi=softfp\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This requires optimisation in order to get just one resulting error.\n",
        "Line" : 346,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Apply -O so as to run in reasonable time.\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Don't allow GCC to inline memcpy() and strcpy(),\n\n# because then we can't intercept it\n",
        "Line" : 353,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# To make it a bit more realistic, have some optimisation enabled\n\n# for the varinfo tests.  We still expect sane results.\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Build shared object for varinfo5\n",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Build shared object for wrap7\n",
        "Line" : 400,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "valgrind-3.8.0/memcheck/tests/amd64-linux/Makefile.am" : {
      "ObjectId" : "9b31b8001c10531dfe436ebee830fbb03344082a",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "valgrind-3.8.0/memcheck/tests/amd64/Makefile.am" : {
      "ObjectId" : "6adb07aa8976ab4379032830044c222be3b7ae14",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "valgrind-3.8.0/memcheck/tests/darwin/Makefile.am" : {
      "ObjectId" : "5b216b6c71801344782f13232646813323282a48",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "valgrind-3.8.0/memcheck/tests/linux/Makefile.am" : {
      "ObjectId" : "a76bdb6dd84adf287efb891fdb34b54205ec7e41",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "valgrind-3.8.0/memcheck/tests/ppc32/Makefile.am" : {
      "ObjectId" : "40033fc315f728b56330ab19f1b0da9c14841f39",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "valgrind-3.8.0/memcheck/tests/ppc64/Makefile.am" : {
      "ObjectId" : "a18afd76fcdd743be706bf33d1d937f1281a0c1a",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "valgrind-3.8.0/memcheck/tests/s390x/Makefile.am" : {
      "ObjectId" : "1fb8d7f03cf50e9a42b8e8785a98878abd1bb5ac",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "valgrind-3.8.0/memcheck/tests/x86-linux/Makefile.am" : {
      "ObjectId" : "e9fdbac5b3b5326a4876776feb6b5bd7626ee2ba",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "valgrind-3.8.0/memcheck/tests/x86/Makefile.am" : {
      "ObjectId" : "f2c740cd2272727921ee494d36c7664c81b6cdac",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# fpeflags must use these flags -- bug only occurred with them.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "valgrind-3.8.0/mpi/Makefile.am" : {
      "ObjectId" : "709c0a4252e69542bc219b22b06ce920f6f86bb2",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# HACK WARNING: automake isn't good at supporting non-$(CC) compilers.\n\n# But we need to use $(MPI_CC) for the MPI stuff.  So we have this mpi stuff\n\n# in its own directory so we can use the following blunt instruments, which\n\n# override the C compiler and all the default flags.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# libmpiwrap-<platform>.so\n\n#----------------------------------------------------------------------------\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## NOTE: this logic, the AM_FLAG_M3264_ logic in ../Makefile.all.am, and the\n\n## mflag_primary/mflag_secondary logic in ../configure.in unfortunately all need\n\n## to be kept in sync with each other\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# General stuff\n\n#----------------------------------------------------------------------------\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "valgrind-3.8.0/none/Makefile.am" : {
      "ObjectId" : "753687eecbaa1da6c41e516b1ea128ccce9e81d8",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# none-<platform>\n\n#----------------------------------------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "valgrind-3.8.0/none/tests/Makefile.am" : {
      "ObjectId" : "2c703745a4a5b07adf4eda0ced3c9bf330059178",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Arch-specific tests.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# OS-specific tests\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Platform-specific tests\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# DDD:\n\n# - manythreads and thread-exits have lots of this:\n\n# --61831:0:aspacem  sync_check_mapping_callback: segment mismatch:\n\n#                    kernel's seg:\n\n# --61831:0:aspacem  start=0x102538000 end=0x1025b7fff prot=3 dev=0 ino=0 \n\n#                    offset=0 name=\"(none)\"\n\n# --61831:0:aspacem  sync_check_mapping_callback: segment mismatch: V's seg:\n\n# --61831:0:aspacem  NSegment{    , start=0x10067a000, end=0x109a1efff,\n\n#                    smode=SmFixed, dev=0, ino=0, offset=0, fnIdx=-1, hasR=0,\n\n#                    hasW=0, hasX=0, hasT=0, mark=0, name=\"(none)\"}\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This doesn't appear to be compilable on Darwin.\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Extra stuff for C tests\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# C++ tests\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "valgrind-3.8.0/none/tests/amd64/Makefile.am" : {
      "ObjectId" : "a3b96861f9c03856811f8c45d0281e44fca8644a",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Explicitly include insn_sse3 even if ! BUILD_SSE3_TESTS, \n\n# to avoid packaging screwups if 'make dist' is run on a machine\n\n# which failed the BUILD_SSE3_TESTS test in configure.in.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DDD: these need to be made to work on Darwin like the x86/ ones were.\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# generic C ones\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "valgrind-3.8.0/none/tests/arm/Makefile.am" : {
      "ObjectId" : "418ad0a80c94a5881e47b7ecd21af9a2450b1bd0",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# These two are specific to their ARM/Thumb respectively and so we\n\n# hardwire -marm/-mthumb.  neon64 and neon128 are compilable on both,\n\n# however, ask for them to be compiled on thumb, as that looks\n\n# like that's going to be the more common use case.  They also\n\n# need special helping w.r.t -mfpu and -mfloat-abi, though.\n\n# Also force -O0 since -O takes hundreds of MB of memory \n\n# for v6intThumb.c.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "valgrind-3.8.0/none/tests/darwin/Makefile.am" : {
      "ObjectId" : "391fb59996beac2def80db0f66993f544578e45e",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "valgrind-3.8.0/none/tests/linux/Makefile.am" : {
      "ObjectId" : "04b6f7b4dbeb214351ccb8ce356d860b5bcb67bc",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "valgrind-3.8.0/none/tests/mips32/Makefile.am" : {
      "ObjectId" : "2ea782c3e358e1adc1f753a8aa201e36ee15f95e",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "valgrind-3.8.0/none/tests/ppc32/Makefile.am" : {
      "ObjectId" : "976d9f42c50f0ec29b143c043ed8fe7bc214881d",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "valgrind-3.8.0/none/tests/ppc64/Makefile.am" : {
      "ObjectId" : "3213e53c61bb7629ac40ec10318d301867ba9295",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "valgrind-3.8.0/none/tests/s390x/Makefile.am" : {
      "ObjectId" : "04aaaf875e8d87579ba9ade211e3dff7523b3499",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "valgrind-3.8.0/none/tests/x86-linux/Makefile.am" : {
      "ObjectId" : "22b15c50f9106a9a00d8642ccf7d62e048fd5f1b",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "valgrind-3.8.0/none/tests/x86/Makefile.am" : {
      "ObjectId" : "99b2fa0e405158a18bb9149cc0d4b775ea8d00a3",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Explicitly include insn_sse3 even if ! BUILD_SSE3_TESTS, \n\n# to avoid packaging screwups if 'make dist' is run on a machine\n\n# which failed the BUILD_SSE3_TESTS test in configure.in.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## FIXME: move lzcnt32 to SSE4 conditionalisation, when that happens.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Some of the tests (bug125959_x86, bug152818_x86, insn_*) need\n\n# -mdynamic-no-pic.  I tried setting *_CFLAGS separately for all of them,\n\n# but it caused problems with the generation of insn_*.c.  So just use this\n\n# crude approach of setting -mdynamic-no-pic for all tests in this\n\n# directory.\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# fpu_lazy_eflags must use these flags -- the bug only occurred with them.\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "valgrind-3.8.0/perf/Makefile.am" : {
      "ObjectId" : "66b0ed05da3b483c8657d048b572c6847cb097ab",
      "LastModified" : "2012-09-10T10:39:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Extra stuff\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "valgrind-3.8.0/sca/Makefile.am" : {
      "ObjectId" : "85e3faf3b34913532f71eff1fde1c7ea1b0dc50c",
      "LastModified" : "2012-09-10T12:18:22Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# sca-<platform>\n\n#----------------------------------------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "valgrind-3.8.0/sca/tests/Makefile.am" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2012-09-10T12:18:22Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "valgrind-3.8.0/scc/Makefile.am" : {
      "ObjectId" : "f4e38d4d5a043b46dd2f879572cf9e185216eb95",
      "LastModified" : "2012-09-15T11:01:36Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# scc-<platform>\n\n#----------------------------------------------------------------------------\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "valgrind-3.8.0/scc/tests/Makefile.am" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2012-09-15T11:01:36Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "valgrind-3.8.0/tests/Makefile.am" : {
      "ObjectId" : "5fe329626f51ec9ec123719d923375d72cf672aa",
      "LastModified" : "2012-09-15T11:01:36Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 1,
    "AUTOMAKE" : 60
  },
  "ElapsedTime" : 3431
}