{
  "Repository" : "64859876",
  "Revision" : "HEAD",
  "ObjectId" : "8c0c019180683e456a4775b4b06bbaa6cfba6fcf",
  "CommitTime" : "2019-03-27T14:24:54Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "d4eba8d7c0d45d6c51f6dff4c7f90dd29dfb2b8e",
      "LastModified" : "2019-01-11T15:28:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Project name\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Require CMake version >=2.8\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set output directories\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the common directory\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set the frameReceiver directory\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set the frameProcessor directory\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set the frameSimulator directory\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Set the name of the common library\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Set the name of the frameProcessor library\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Appends the cmake/modules path inside the MAKE_MODULE_PATH variable which stores the\n\n# directories of additional CMake modules (ie. MacroOutOfSourceBuild.cmake):\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Allow macOS shared (dynamic) libraries to link with undefined symbols\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Set up RPATH handling correctly so that both built and installed targets have the appropriate\n\n# settings - see https://cmake.org/Wiki/CMake_RPATH_handling\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Use, i.e. don't skip the full RPATH for the build tree\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# When building, don't use the install RPATH already (but later on when installing)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Add the automatically determined parts of the RPATH which point to directories outside the \n\n# build tree to the install RPATH\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# The RPATH to be used when installing, but only if it's not a system directory\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Find and add external packages required for application and test\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# find package HDF5\n\n# FindHDF5.cmake is essentially broken and does not allow\n\n# to properly override the search path by setting HDF5_ROOT.\n\n# This is a work-around to allow setting a custom HDF5\n\n# installation location to search.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# If no HDF5_ROOT variable has been set then we just\n\n# use the built-in FindHDF5.cmake...\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Add common/include directory to include path\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Add the common subdirectory\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Add the frameReceiver subdirectory\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Add the frameSimulator subdirectory\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Add the tools subdirectory\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Add the doc subdirectory\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Add the config subdirectory (config files used for integration testing)\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "cmake/FindBlosc.cmake" : {
      "ObjectId" : "7b344488f6a794a55132152b0a29655c3525288d",
      "LastModified" : "2018-11-09T21:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# FindBLOSC.cmake\n\n#\n\n#\n\n# The MIT License\n\n#\n\n# Copyright (c) 2016 MIT and Intel Corporation\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\n# THE SOFTWARE.\n\n#\n\n# Finds the Blosc library. This module defines:\n\n#   - BLOSC_INCLUDE_DIR, directory containing headers\n\n#   - BLOSC_LIBRARIES, the Blosc library path\n\n#   - BLOSC_FOUND, whether Blosc has been found\n\n# Define BLOSC_ROOT_DIR if blosc is installed in a non-standard location.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find header files\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find library\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindLog4CXX.cmake" : {
      "ObjectId" : "9c469d10d84196c59c982a88842ed544e6946c58",
      "LastModified" : "2018-11-09T21:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2013 Produban\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#    http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n\n# Tries to find Log4cxx Client headers and libraries.\n\n#\n\n# Usage of this module as follows:\n\n#\n\n#  find_package(Log4CXX)\n\n#\n\n# Variables used by this module, they can change the default behaviour and need\n\n# to be set before calling find_package:\n\n#\n\n#  LOG4CXX_ROOT_DIR  Set this variable to the root installation of\n\n#                  \t Log4cxx Library if the module has problems finding\n\n#                    the proper installation path.\n\n#\n\n# Variables defined by this module:\n\n#\n\n#  LOG4CXX_FOUND              System has Log4cxx libs/headers\n\n#  LOG4CXX_LIBRARIES          The Log4cxx libraries\n\n#  LOG4CXX_INCLUDE_DIRS       The location of Log4cxx headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LOG4CXX_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindPCAP.cmake" : {
      "ObjectId" : "66c8d05494f92cce6df0d7a50cd6d10b0d9fecd9",
      "LastModified" : "2019-01-11T15:28:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Usage of this module as follows:\n\n#\n\n#     find_package(PCAP)\n\n#\n\n# Variables used by this module, they can change the default behaviour and need\n\n# to be set before calling find_package:\n\n#\n\n#  PCAP_ROOT_DIR             Set this variable to the root installation of\n\n#                            libpcap if the module has problems finding the\n\n#                            proper installation path.\n\n#\n\n# Variables defined by this module:\n\n#\n\n#  PCAP_FOUND                System has libpcap, include and library dirs found\n\n#  PCAP_INCLUDE_DIR          The libpcap include directories.\n\n#  PCAP_LIBRARY              The libpcap library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindZeroMQ.cmake" : {
      "ObjectId" : "9618ad60cc03f26dc4dd35b763dfb63fd53f3b7f",
      "LastModified" : "2019-01-11T15:28:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - FindZEROMQ module\n\n# Module to find ZEROMQ package on Windows, MacOSX and Linux.\n\n# On windows are are looking for the libraries in the default locations when the\n\n# user follows the build instructions on the package website.   On Linux we are\n\n# using pkg_config to provide a starting point to look for the package.  If\n\n# the default method doesn't succeed, one can either add the  location of\n\n# ZEROMQ in the CMAKE_PREFIX_PATH variable, or set the  ZEROMQ_ROOTDIR.\n\n#\n\n# Usage of this module as follows:\n\n#   find_package(ZEROMQ)\n\n#\n\n# After running the find, the variables below will be defined:\n\n#   ZEROMQ_FOUND              System has ZEROMQ libs/headers\n\n#   ZEROMQ_INCLUDE_DIRS       The location of ZEROMQ headers\n\n#   ZEROMQ_LIBRARIES          The ZEROMQ libraries\n\n#   ZEROMQ_VERSION            The location of ZEROMQ headers\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2013 Atif Mahmood <atif1996@gmail.com>\n\n# License: GNU LGPL v 3.0, see http://www.gnu.org/licenses/lgpl-3.0-standalone.html\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Standard and windows lib names\n",
        "Line" : 55,
        "CharPositionInLine" : 30
      },
      "CommentCount" : 3
    },
    "cmake/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "477e5370980d74abf65c12fac62f97ff1ad75fc8",
      "LastModified" : "2019-01-11T15:28:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n#  git_local_changes(<var>)\n\n#\n\n# Returns either \"CLEAN\" or \"DIRTY\" with respect to uncommitted changes.\n\n# Uses the return code of \"git diff-index --quiet HEAD --\".\n\n# Does not regard untracked files.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 51,
        "CharPositionInLine" : 35
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 55,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# check if this is a submodule\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "common/CMakeLists.txt" : {
      "ObjectId" : "5953fcd289f55f0668ad599831863972fbc7c018",
      "LastModified" : "2019-01-11T15:28:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "common/include/CMakeLists.txt" : {
      "ObjectId" : "495de9f0b12765b0ccb3a0a726f8c6930e9cceff",
      "LastModified" : "2019-02-07T14:19:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install header files into installation prefix\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "common/src/CMakeLists.txt" : {
      "ObjectId" : "46193f30deeb0b46c4ab104ad028082960ace2aa",
      "LastModified" : "2019-01-11T15:28:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add library for odin-data shared functionality\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# libdl required for dlopen etc functions\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "config/CMakeLists.txt" : {
      "ObjectId" : "588954f36d1d0e07bf3a3972ff107fc71b879d16",
      "LastModified" : "2019-01-11T15:28:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "config/client_msgs/CMakeLists.txt" : {
      "ObjectId" : "fdd736778da813dc27312e082fc645f92a710c60",
      "LastModified" : "2019-01-11T15:28:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "30f4031ab5916b98415005fb691bbe72e032619f",
      "LastModified" : "2019-01-11T15:28:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "frameProcessor/CMakeLists.txt" : {
      "ObjectId" : "88aa2d407538d26d69df27055c11a024ba778bf5",
      "LastModified" : "2019-01-11T15:28:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add subdirectories for frameProcessor\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "frameProcessor/include/CMakeLists.txt" : {
      "ObjectId" : "1f6586cefb61fead75d5893c7ef67019176529e9",
      "LastModified" : "2019-02-19T11:00:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install header files into installation prefix\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "frameProcessor/src/CMakeLists.txt" : {
      "ObjectId" : "1e7c1a7acf8fd09fe9a910849b371fd6473161c9",
      "LastModified" : "2019-02-19T11:00:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add library for common plugin code\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add library for dummy plugin\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add library for Blosc plugin\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add library for HDF5 writer plugin\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add library for UIDAdjustment plugin\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add library for OffsetAdjustment plugin\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add library for LiveView plugin\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add library for Sum plugin\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add library for Gap Fill plugin\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add test and project source files to executable\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# librt required for timing functions\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    },
    "frameProcessor/test/CMakeLists.txt" : {
      "ObjectId" : "c6966c03f2674b846cd42429e0c04559fdb59eb2",
      "LastModified" : "2019-02-19T11:00:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add tests for BloscPlugin if Blosc is present\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add test source files to executable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define libraries to link against\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Link for BloscPlugin if Blosc is present\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# librt required for timing functions\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "frameReceiver/CMakeLists.txt" : {
      "ObjectId" : "5c3948fd9f6c060a9f8b5e40decac821dfcad3c4",
      "LastModified" : "2019-01-11T15:28:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add subdirectories for frameReceiver\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "frameReceiver/include/CMakeLists.txt" : {
      "ObjectId" : "172793c85bf0648f3a4f88591286c7e38deb7b1b",
      "LastModified" : "2019-01-11T15:28:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install header files into installation prefix\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "frameReceiver/src/CMakeLists.txt" : {
      "ObjectId" : "2a40355216be9126fe9e136873a9aa56a730027b",
      "LastModified" : "2019-01-11T15:28:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add library for common plugin code\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "frameReceiver/test/CMakeLists.txt" : {
      "ObjectId" : "8f4cc246d130edee69d8c15cc4b14da7dcc7bbdd",
      "LastModified" : "2019-01-11T15:28:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build list of test source files from current dir\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build list of main project source files from src dir but exclude application main\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add test and project source files to executable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# librt required for timing functions\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Define libraries to link against\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "frameSimulator/CMakeLists.txt" : {
      "ObjectId" : "aa941e3d93171792f15ff103b261a7313be9a607",
      "LastModified" : "2019-01-11T15:28:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add subdirectories for frameProcessor\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "frameSimulator/include/CMakeLists.txt" : {
      "ObjectId" : "061465a88c502f62db95d5eb6c22055718c861be",
      "LastModified" : "2019-01-11T15:28:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install header files into installation prefix\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "frameSimulator/src/CMakeLists.txt" : {
      "ObjectId" : "a3468384264dc6b79ae1e75c9a2326036abddbf6",
      "LastModified" : "2019-01-11T15:28:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add library for common plugin code\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add test and project source files to executable\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# librt required for timing functions\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "0f4b247158dd6b538764e0c16902325f0f21c2fa",
      "LastModified" : "2019-01-11T15:28:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/integrationtest/CMakeLists.txt" : {
      "ObjectId" : "0fe8891f6ac1962f680c8296c2f719f42c4c9b55",
      "LastModified" : "2019-01-11T15:28:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/CMakeLists.txt" : {
      "ObjectId" : "610f946e9f580f98bd670bbd48da4725bbe09e0a",
      "LastModified" : "2019-01-11T15:28:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/imagej/build.xml" : {
      "ObjectId" : "217fa309a1d99ddab8088f7920aa475d37681d5d",
      "LastModified" : "2019-01-11T15:28:48Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " Ant makefile for the Odin ImageJ Plugins ",
        "Line" : 1,
        "CharPositionInLine" : 50
      },
      "1" : {
        "Text" : " set global properties for this build ",
        "Line" : 8,
        "CharPositionInLine" : 50
      },
      "2" : {
        "Text" : "Make sure the build folder exists ",
        "Line" : 29,
        "CharPositionInLine" : 50
      },
      "3" : {
        "Text" : "Compile the source into the build folder ",
        "Line" : 35,
        "CharPositionInLine" : 57
      },
      "4" : {
        "Text" : "Copy required files into the build directory ",
        "Line" : 45,
        "CharPositionInLine" : 61
      },
      "CommentCount" : 5
    }
  },
  "FileTypes" : {
    "CMAKE" : 26,
    "ANT" : 1
  },
  "ElapsedTime" : 1274
}