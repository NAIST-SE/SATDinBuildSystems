{
  "Repository" : "8773652",
  "Revision" : "HEAD",
  "ObjectId" : "468aa74c765e0407d58b73767bfe75748e357eb7",
  "CommitTime" : "2019-04-17T08:43:48Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "59cb9391fbf32123b5b8406c39e313314f5bf280",
      "LastModified" : "2018-07-06T13:36:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of our project is \"ShipRoot\".  CMakeLists files in this project can\n\n# refer to the root source directory of the project as ${ShipRoot_SOURCE_DIR} \n\n# or as ${CMAKE_SOURCE_DIR} and to the root binary directory of the project as \n\n# ${ShipRoot_BINARY_DIR} or ${CMAKE_BINARY_DIR}.\n\n# This difference is important for the base classes which are in FAIRROOT \n\n# and ShipRoot.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check if cmake has the required version\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set name of our project to \"ShipRoot\". Has to be done\n\n# after check of cmake version since this is a new feature                  \n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# where to look first for cmake modules, before ${CMAKE_ROOT}/Modules/ \n\n# is checked\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Load some basic macros which are needed later on\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Check the compiler and set the compile and link flags\n\n# change from DEBUG to RELEASE, don't want to waste CPU time\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#--------------------- set rpath options -------------\n\n# When building, use the RPATH\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# don't skip the full RPATH for the build tree\n\n# use always the build RPATH for the build tree\n\n# point to directories outside the build tree to the install RPATH\n",
        "Line" : 83,
        "CharPositionInLine" : 44
      },
      "8" : {
        "Text" : "# use RPATH for MacOSX\n",
        "Line" : 88,
        "CharPositionInLine" : 47
      },
      "9" : {
        "Text" : "# self relative LIBDIR\n",
        "Line" : 90,
        "CharPositionInLine" : 47
      },
      "10" : {
        "Text" : "# install LIBDIR\n",
        "Line" : 92,
        "CharPositionInLine" : 56
      },
      "11" : {
        "Text" : "#------------------- end set rpath options -----------\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Check if the user wants to build the project in the source\n\n# directory\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Check if we are on an UNIX system. If not stop with an error\n\n# message\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Check if FairSoft is available, defines SIMPATH\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Check if the external packages are installed into a separate install\n\n# directory\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Set the build type. Possibilities are None, Debug, Release, \n\n# RelWithDebInfo and MinSizeRel \n\n#SET(CMAKE_BUILD_TYPE Debug)\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# searches for needed packages\n\n# REQUIRED means that cmake will stop if this packages are not found\n\n# For example the framework can run without GEANT4, but ROOT is\n\n# mandatory\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#  set(Boost_DEBUG TRUE)\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# If an older version of boost is found both of the variables below are\n\n# cached and in a second cmake run, a good boost version is found even \n\n# if the version is to old. \n\n# To overcome this problem both variables are cleared before checking\n\n# for boost.\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# set a variable which should be used in all CMakeLists.txt\n\n# Defines all basic include directories from fairbase\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Add the FairRoot include directories to the list of libraries which are\n\n# external to the Ship project. For include directories in this list the\n\n# compiler will not generate any warnings. This is usefull since one is only\n\n# interested about warnings from the own project. SYSTEM_INCLUDE_DIRECTORIES\n\n# is defined in FairMacros.cmake. In the moment the defined directories are\n\n# the root and boost include directories. \n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Set the library version in the main CMakeLists.txt\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#IF(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)\n\n#  SET(CMAKE_INSTALL_PREFIX \"./install\" CACHE PATH \"FOO install prefix\" FORCE)\n\n#  Message(\"Set default install path ...\")\n\n#ENDIF(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Check if the compiler support specific C++11 features\n\n# Up to now this is only a check since the code does not use\n\n# any of the features of the new standard\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# --------------- add targets for code style and submission checks -------------\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Generate a Clang compile_commands.json \"compilation database\" file for use\n\n# with various development tools, such as Vim's YouCompleteMe plugin.\n\n# See http://clang.llvm.org/docs/JSONCompilationDatabase.html\n",
        "Line" : 242,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Recurse into the given subdirectories. This does not actually\n\n# cause another cmake executable to run. The same process will walk through\n\n# the project's entire directory structure.\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#find_package(OpenGL)\n\n#If (OPENGL_FOUND AND OPENGL_GLU_FOUND)\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# make relative links to folders\n",
        "Line" : 302,
        "CharPositionInLine" : 20
      },
      "30" : {
        "Text" : "# manipulate the config file:\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# add environment for use of GENIE\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# genie in general\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# location of cross section files\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# location of pdf file\n",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# for lxplus, need to change LD_LIBRARY_PATH\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# remove duplicated lines\n",
        "Line" : 386,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# extend PYTHONPATH\n",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# add some other useful environment variables:\n",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 39
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "fa22a30847d7290fe07beea5ab7854affc51a031",
      "LastModified" : "2014-03-19T09:21:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Dashboard is opened for submissions for a 24 hour period starting at\n\n# the specified NIGHLY_START_TIME. Time is specified in 24 hour format.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CTEST_TRIGGER_SITE \"\")\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CTestCustom.cmake" : {
      "ObjectId" : "004099518e33acbfc4729cad2b7a1ba37ca0d311",
      "LastModified" : "2014-03-19T09:21:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#message(\" -- Read CTestCustom.cmake --\")\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -----------------------------------------------------------\n\n# -- Number of warnings to display\n\n# -----------------------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -----------------------------------------------------------\n\n# -- Number of errors to display\n\n# -----------------------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -----------------------------------------------------------\n\n# -- Warning execptions\n\n# -----------------------------------------------------------\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -- doxygen warnings\n",
        "Line" : 30,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# \t\"of command \\@param is not found in the argument list of\" \n\n#\t\"for \\\\link command\"\n\n#\t\"for \\\\ref command\"\n\n#\t\"\\\\class statement\"\n\n#\t\"\\\\file statement\"\n\n#\t\"are not documented:\"\n\n#\t\"Skipping documentation\"\n\n#\t\"has a brief description\"\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# -- CLHEP and Pluto warnings\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# -- warnings from ubuntu systems which are a little to much\n\n# -- probably defined warn-unused-result. ignoring the result\n\n# -- of fgets is common practice. A work around would be to\n\n# -- store the return value in a dummy variable\n",
        "Line" : 48,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# -- boost warnings\n",
        "Line" : 55,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# -- Root warnings when installed in installation dir\n",
        "Line" : 60,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# -- Root warnings which should not show up in the test setup\n",
        "Line" : 62,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# -- Geant3 warnings\n",
        "Line" : 104,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# -- Errors which are filtered for the time being\n\n# -- MbsAPI is only a copy from elsewhere so don't know what to do\n\n# -- FairTSBufferFunctional.h has to be fixed by Tobias\n",
        "Line" : 108,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "#\t\"FairTSBufferFunctional.h\"\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# -----------------------------------------------------------\n\n# -- Warning addon's\n\n# -----------------------------------------------------------\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "TimeDet/CMakeLists.txt" : {
      "ObjectId" : "338b52c38ca3668102680d432ce0c8726c3fae0e",
      "LastModified" : "2018-02-05T08:10:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create a library called \"libTimeDet\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Put here your sourcefiles\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "charmdet/CMakeLists.txt" : {
      "ObjectId" : "0ef1d8eb61aea381a1bbde6d8369051b007135f6",
      "LastModified" : "2019-03-22T15:45:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create a library called \"libnutaudet” which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/CppStyleGuideChecks.cmake" : {
      "ObjectId" : "c32602930e5e63d6f49497f4e9d9d316a2ddb1a2",
      "LastModified" : "2018-02-05T08:10:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define commands to obtain source file lists\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# create helper target to check header files with clang-tidy\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# creates file\n",
        "Line" : 10,
        "CharPositionInLine" : 44
      },
      "3" : {
        "Text" : "# -------------------- \"make format*\", \"make show-format*\" and \"make check-format*\" targets ------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -------------------- \"make tidy*\", \"make show-tidy*\" and \"make check-tidy*\" targets ------------\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# check submission\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# fix submission\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "cmake/modules/FindClangTools.cmake" : {
      "ObjectId" : "25be8230248355c889905d83b061ae174a76050e",
      "LastModified" : "2018-02-05T08:10:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n\n# Tries to find the clang-tidy and clang-format modules\n\n#\n\n# Usage of this module as follows:\n\n#\n\n#  find_package(ClangTools)\n\n#\n\n# Variables used by this module, they can change the default behaviour and need\n\n# to be set before calling find_package:\n\n#\n\n#  ClangToolsBin_HOME -\n\n#   When set, this path is inspected instead of standard library binary locations\n\n#   to find clang-tidy and clang-format\n\n#\n\n# This module defines\n\n#  CLANG_TIDY_BIN, The  path to the clang tidy binary\n\n#  CLANG_TIDY_FOUND, Whether clang tidy was found\n\n#  CLANG_FORMAT_BIN, The path to the clang format binary\n\n#  CLANG_TIDY_FOUND, Whether clang format was found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindEvtGen.cmake" : {
      "ObjectId" : "c7ba43362f7c9cc36aa6a07877931ec836201774",
      "LastModified" : "2018-02-05T08:10:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#         GNU Lesser General Public Licence version 3 (LGPL) version 3,        #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# - Try to find EvtGen instalation\n\n# Once done this will define\n\n#\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ecal/CMakeLists.txt" : {
      "ObjectId" : "2a66835b280d8d892688b41f07323333679f135b",
      "LastModified" : "2018-02-05T08:10:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create a library called \"libecal\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#put here all directories where header files are located\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Put here your sourcefiles\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "field/CMakeLists.txt" : {
      "ObjectId" : "9bddd5bd72de4110cc9099542ef5a85046a8f6cd",
      "LastModified" : "2018-07-06T13:36:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create a library called \"libField” which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "genfit/CMakeLists.txt" : {
      "ObjectId" : "2ed89910b945a3309c258fe7cc2a2aebc6c92938",
      "LastModified" : "2018-10-26T12:44:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create a library called \"libgenfit\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the build type. Possibilities are None, Debug, Release,\n\n# RelWithDebInfo and MinSizeRel\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add the list of source code files -- careful, when a new file is added!\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "hcal/CMakeLists.txt" : {
      "ObjectId" : "c1fbbbb64cb3d9dc2e11684fc06f44b3a9f54373",
      "LastModified" : "2018-02-05T08:10:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create a library called \"libhcal\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Put here your sourcefiles\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "muon/CMakeLists.txt" : {
      "ObjectId" : "c98bad6c436023e416fb503873293cd16d239515",
      "LastModified" : "2018-02-05T08:10:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create a library called \"libmuon\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Put here your sourcefiles\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "muonShieldOptimization/CMakeLists.txt" : {
      "ObjectId" : "a89f301c9aa00636af54368e7d08cd1dfd0a1f6e",
      "LastModified" : "2018-10-26T12:44:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create a library called \"libMuonShieldBackground\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "nutaudet/CMakeLists.txt" : {
      "ObjectId" : "3a04a03abda2bab59237d2a7b00ed005e9451380",
      "LastModified" : "2018-02-05T08:10:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create a library called \"libnutaudet” which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "online/CMakeLists.txt" : {
      "ObjectId" : "8188b4a6d98f4033def1233359d70de69bdc4252",
      "LastModified" : "2019-03-22T15:45:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# MbsAPI\n",
        "Line" : 39,
        "CharPositionInLine" : 9
      },
      "CommentCount" : 1
    },
    "passive/CMakeLists.txt" : {
      "ObjectId" : "4e8becc62ba5c5184a814504889651c3f1c7db91",
      "LastModified" : "2018-10-26T12:44:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create a library called \"libPassive\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "pid/CMakeLists.txt" : {
      "ObjectId" : "1cf2fc0970ad22b2aa6daabe4cc2a81f8ef9bfb6",
      "LastModified" : "2018-02-05T08:10:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create a library called \"libmuon\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Put here your sourcefiles\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "preshower/CMakeLists.txt" : {
      "ObjectId" : "ea7aa97077a24f9492d1bbc1fc58c8e76530bdbf",
      "LastModified" : "2018-02-05T08:10:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create a library called \"libmuon\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Put here your sourcefiles\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "shipdata/CMakeLists.txt" : {
      "ObjectId" : "d252af52e1b271004c59421413671f3301976a95",
      "LastModified" : "2019-03-22T15:45:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create a library called \"libShipData\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "shipgen/CMakeLists.txt" : {
      "ObjectId" : "e2aed5f1d69ac2f11154efb7998c78221c0ee63e",
      "LastModified" : "2018-02-05T08:10:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create a library called \"libShipGen\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "splitcal/CMakeLists.txt" : {
      "ObjectId" : "138de53533107b6d9b2317f73db35887747ceb2f",
      "LastModified" : "2019-03-22T15:45:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create a library called \"libsplitcal\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Put here your sourcefiles\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "strawtubes/CMakeLists.txt" : {
      "ObjectId" : "33c15fe39479e8d32aefc6511e44f380a40fbd06",
      "LastModified" : "2018-02-05T08:10:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create a library called \"libstrawtubes\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Put here your sourcefiles\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "veto/CMakeLists.txt" : {
      "ObjectId" : "624be2448b416602df6ead4c0a756bbbc518de86",
      "LastModified" : "2018-02-05T08:10:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create a library called \"libveto\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Put here your sourcefiles\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 24
  },
  "ElapsedTime" : 1250
}