{
  "Repository" : "20379046",
  "Revision" : "HEAD",
  "ObjectId" : "d2aeba9ece13f3931b74222234dae38b83652b10",
  "CommitTime" : "2017-08-08T20:00:21Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "f04d09925a3e4814615cefa32e6e7d7efe785a66",
      "LastModified" : "2017-08-01T17:55:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tweak policies (this one disables \"missing\" dependency warning)\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# we use LINK_PRIVATE keyword instead of PRIVATE, but do not specify the LINK_PUBLIC\n\n# for target_link_libraries() command when PUBLIC should be used instead, it's just\n\n# for backward compatibility with cmake 2.8.11.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# cmake 3.1 and higher include generator expressions in SOURCES property.\n\n# in BuildBoost.cmake, get_target_property(<var> <target> SOURCES) is used\n\n# to retrieve the source files of a target. in that case, we are only\n\n# interested in the *source* files. and i don't want to bother stripping off\n\n# the TARGET_OBJECTS elements from the returned SOURCES. so let's stick with\n\n# the old behavior now.\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# ccache does not accelerate link (ld), but let it handle it. by passing it\n\n# along with cc to python's distutils, we are able to workaround\n\n# https://bugs.python.org/issue8027.\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#Check Includes\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#put all the libs and binaries in one place\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# needs mds and? XXX\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# key-value store\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# remote block storage\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# KERNEL remote block storage\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# embedded ceph daemon static library\n\n# NOTE: Ceph is mostly LGPL (see COPYING), which means that\n\n# static linking brings with it restrictions. Please be sure\n\n# to look at the LGPL license carefully before linking this library to\n\n# your code. See http://www.gnu.org/licenses/gpl-faq.html#LGPLStaticVsDynamic.\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#if allocator is set on command line make sure it matches below strings\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# FreeBSD already has jemalloc as its default allocator\n",
        "Line" : 304,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# nss or cryptopp?\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#nss\n",
        "Line" : 336,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "#openssl\n",
        "Line" : 340,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "#option for RGW\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#option for CephFS\n",
        "Line" : 418,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#option for Mgr\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Boost dependency check deferred to Boost section\n",
        "Line" : 427,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# -lz link into kv\n",
        "Line" : 442,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#option for EventTrace\n",
        "Line" : 445,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#option for LTTng\n",
        "Line" : 448,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#option for Babeltrace\n",
        "Line" : 461,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# ASAN and friends\n",
        "Line" : 486,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Rocksdb\n",
        "Line" : 527,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Boost\n",
        "Line" : 533,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Boost::thread depends on Boost::atomic, so list it explicitly.\n",
        "Line" : 536,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# require minimally the bundled version\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# override w/-DBOOST_J=<n>\n",
        "Line" : 561,
        "CharPositionInLine" : 32
      },
      "30" : {
        "Text" : "# enables testing and creates Make check command\n",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "cmake/modules/AddCephTest.cmake" : {
      "ObjectId" : "f6f6447630c401ea57145fddcff157acba582d64",
      "LastModified" : "2016-08-11T13:36:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#AddCephTest is a module for adding tests to the \"make check\" target which runs CTest\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#adds makes target/script into a test, test to check target, sets necessary environment variables\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# none of the tests should take more than 1 hour to complete\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#sets uniform compiler flags and link libraries\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/modules/BuildBoost.cmake" : {
      "ObjectId" : "2b5f87740a65150d9151c686c98e174992cc032b",
      "LastModified" : "2017-06-21T16:57:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module builds Boost\n\n# executables are. It sets the following variables:\n\n#\n\n#  Boost_FOUND : boolean            - system has Boost\n\n#  Boost_LIBRARIES : list(filepath) - the libraries needed to use Boost\n\n#  Boost_INCLUDE_DIRS : list(path)  - the Boost include directories\n\n#\n\n# Following hints are respected\n\n#\n\n#  Boost_USE_STATIC_LIBS : boolean (default: OFF)\n\n#  Boost_USE_MULTITHREADED : boolean (default: OFF)\n\n#  BOOST_J: integer (defanult 1)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check on arm, etc <---XXX\n",
        "Line" : 32,
        "CharPositionInLine" : 33
      },
      "2" : {
        "Text" : "# build b2 and prepare the project-config.jam for boost\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# we are crosscompiling\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# edit the config.jam so, b2 will be able to use the specified toolset\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# use ${CMAKE_SYSTEM_PROCESSOR} as the version identifier of compiler\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#\"--buildid=ceph\" # changes lib names--can omit for static\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# build all components in a single shot\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# create the directory so cmake won't complain when looking at the imported\n\n# target\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# for header-only libraries\n",
        "Line" : 139,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# only ALIAS and INTERFACE target names allow \":\" in it, but\n\n# INTERFACE library is not allowed until cmake 3.1\n",
        "Line" : 141,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# assuming all cxx source files include boost header(s)\n",
        "Line" : 167,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# override add_library() to add Boost headers dependency\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "cmake/modules/CTags.cmake" : {
      "ObjectId" : "55b2288831165a84c79930678880afda86dab4a1",
      "LastModified" : "2017-04-13T07:35:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# always respect EXCLUDES_OPTS\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# exclude the submodules under SRC_DIR by default\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# cmake list uses \";\" as the delimiter, so split the string manually\n\n# before iterating in it.\n",
        "Line" : 20,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# add_custom_target() accepts a list after \"COMMAND\" keyword, so we should\n\n# make exclude_arg a list, otherwise cmake will quote it. and ctags will\n\n# take it as as a single argument.\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/modules/Distutils.cmake" : {
      "ObjectId" : "24d1a50654865722fa547e141df6dca5d0b5cd6e",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/modules/FindBacktrace.cmake" : {
      "ObjectId" : "936875c8430302bcb87389d216be7ae647231530",
      "LastModified" : "2016-07-25T07:39:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindBacktrace\n\n# -------------\n\n#\n\n# Find provider for backtrace(3).\n\n#\n\n# Checks if OS supports backtrace(3) via either libc or custom library.\n\n# This module defines the following variables:\n\n#\n\n# ``Backtrace_HEADER``\n\n#   The header file needed for backtrace(3). Cached.\n\n#   Could be forcibly set by user.\n\n# ``Backtrace_INCLUDE_DIRS``\n\n#   The include directories needed to use backtrace(3) header.\n\n# ``Backtrace_LIBRARIES``\n\n#   The libraries (linker flags) needed to use backtrace(3), if any.\n\n# ``Backtrace_FOUND``\n\n#   Is set if and only if backtrace(3) support detected.\n\n#\n\n# The following cache variables are also available to set or use:\n\n#\n\n# ``Backtrace_LIBRARY``\n\n#   The external library providing backtrace, if any.\n\n# ``Backtrace_INCLUDE_DIR``\n\n#   The directory holding the backtrace(3) header.\n\n#\n\n# Typical usage is to generate of header file using configure_file() with the\n\n# contents like the following::\n\n#\n\n#  #cmakedefine01 Backtrace_FOUND\n\n#  #if Backtrace_FOUND\n\n#  # include <${Backtrace_HEADER}>\n\n#  #endif\n\n#\n\n# And then reference that generated header file in actual source.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2013 Vadim Zhukov\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of variables to be provided to find_package_handle_standard_args()\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# First, check if we already have backtrace(), e.g., in libc\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Avoid repeating the message() call below each time CMake is run.\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Check for external library, for non-glibc systems\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# OpenBSD has libbacktrace renamed to libexecinfo\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# respect user wishes\n",
        "Line" : 87,
        "CharPositionInLine" : 15
      },
      "8" : {
        "Text" : "# Prepend list with library path as it's more common practice\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 9
    },
    "cmake/modules/FindCython.cmake" : {
      "ObjectId" : "0048bf7f9bdfa8121307d2366f8fe62b68f8bdc4",
      "LastModified" : "2016-08-11T13:36:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Cython\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try to run Cython, to make sure it works:\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindJeMalloc.cmake" : {
      "ObjectId" : "784560d1d1e1c3bccae59d761e4e9c6002f4c210",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the native JeMalloc includes and library\n\n# This module defines\n\n#  JEMALLOC_INCLUDE_DIRS, where to find jemalloc.h, Set when\n\n#                        JEMALLOC_INCLUDE_DIR is found.\n\n#  JEMALLOC_LIBRARIES, libraries to link against to use JeMalloc.\n\n#  JEMALLOC_FOUND, If false, do not try to use JeMalloc.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindLTTngUST.cmake" : {
      "ObjectId" : "ac8f14c645c58c0d538161aea0426a648d5beb36",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindLTTngUST\n\n# ------------\n\n#\n\n# This module finds the `LTTng-UST <http://lttng.org/>`__ library.\n\n#\n\n# Imported target\n\n# ^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following :prop_tgt:`IMPORTED` target:\n\n#\n\n# ``LTTng::UST``\n\n#   The LTTng-UST library, if found\n\n#\n\n# Result variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module sets the following\n\n#\n\n# ``LTTNGUST_FOUND``\n\n#   ``TRUE`` if system has LTTng-UST\n\n# ``LTTNGUST_INCLUDE_DIRS``\n\n#   The LTTng-UST include directories\n\n# ``LTTNGUST_LIBRARIES``\n\n#   The libraries needed to use LTTng-UST\n\n# ``LTTNGUST_VERSION_STRING``\n\n#   The LTTng-UST version\n\n# ``LTTNGUST_HAS_TRACEF``\n\n#   ``TRUE`` if the ``tracef()`` API is available in the system's LTTng-UST\n\n# ``LTTNGUST_HAS_TRACELOG``\n\n#   ``TRUE`` if the ``tracelog()`` API is available in the system's LTTng-UST\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2016 Kitware, Inc.\n\n# Copyright 2016 Philippe Proulx <pproulx@efficios.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# find tracef() and tracelog() support\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# get version\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# add libdl to required libraries\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LTTNGUST_FOUND to\n\n# TRUE if all listed variables are TRUE\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/modules/FindLZ4.cmake" : {
      "ObjectId" : "5625865325e5164d8f724780951a060217144f0e",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find liblz4\n\n#\n\n# Once done, this will define\n\n#\n\n# LZ4_FOUND\n\n# LZ4_INCLUDE_DIR\n\n# LZ4_LIBRARY\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindNSPR.cmake" : {
      "ObjectId" : "94d6a062c5c0b8b0ccc461624835a052ea4dafd4",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find NSPR\n\n# Once done this will define\n\n#\n\n#  NSPR_FOUND - system has NSPR\n\n#  NSPR_INCLUDE_DIRS - the NSPR include directory\n\n#  NSPR_LIBRARIES - Link these to use NSPR\n\n#  NSPR_DEFINITIONS - Compiler switches required for using NSPR\n\n#\n\n#  Copyright (c) 2010 Andreas Schneider <asn@redhat.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# show the NSPR_INCLUDE_DIRS and NSPR_LIBRARIES variables only in the advanced view\n",
        "Line" : 101,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindNSS.cmake" : {
      "ObjectId" : "a22e0f74f4e38cad121d9d407bec6c6946bcfc2d",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find NSS\n\n# Once done this will define\n\n#\n\n#  NSS_FOUND - system has NSS\n\n#  NSS_INCLUDE_DIRS - the NSS include directory\n\n#  NSS_LIBRARIES - Link these to use NSS\n\n#  NSS_DEFINITIONS - Compiler switches required for using NSS\n\n#\n\n#  Copyright (c) 2010 Andreas Schneider <asn@redhat.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# show the NSS_INCLUDE_DIRS and NSS_LIBRARIES variables only in the advanced view\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindOpenLdap.cmake" : {
      "ObjectId" : "35b711d6b331523839763702044e241577ff619b",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find OpenLDAP C Libraries\n\n#\n\n# OPENLDAP_FOUND - True if found.\n\n# OPENLDAP_INCLUDE_DIR - Path to the openldap include directory\n\n# OPENLDAP_LIBRARIES - Paths to the ldap and lber libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindPython3Interp.cmake" : {
      "ObjectId" : "a1d076fbce50b80b7d1d6d66997323be7736682c",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindPython3Interp\n\n# ----------------\n\n#\n\n# Find python interpreter\n\n#\n\n# This module finds if Python interpreter is installed and determines\n\n# where the executables are.  This code sets the following variables:\n\n#\n\n# ::\n\n#\n\n#   PYTHON3INTERP_FOUND         - Was the Python executable found\n\n#   PYTHON3_EXECUTABLE          - path to the Python interpreter\n\n#\n\n#\n\n#\n\n# ::\n\n#\n\n#   PYTHON3_VERSION_STRING      - Python version found e.g. 2.5.2\n\n#   PYTHON3_VERSION_MAJOR       - Python major version found e.g. 2\n\n#   PYTHON3_VERSION_MINOR       - Python minor version found e.g. 5\n\n#   PYTHON3_VERSION_PATCH       - Python patch version found e.g. 2\n\n#\n\n#\n\n#\n\n# The Python3_ADDITIONAL_VERSIONS variable can be used to specify a list\n\n# of version numbers that should be taken into account when searching\n\n# for Python.  You need to set this variable before calling\n\n# find_package(Python3Interp).\n\n#\n\n# If calling both ``find_package(Python3Interp)`` and\n\n# ``find_package(Python3Libs)``, call ``find_package(Python3Interp)`` first to\n\n# get the currently active Python version by default with a consistent version\n\n# of PYTHON3_LIBRARIES.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2010 Kitware, Inc.\n\n# Copyright 2011 Bjoern Ricks <bjoern.ricks@gmail.com>\n\n# Copyright 2012 Rolf Eike Beer <eike@sf-mail.de>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set up the versions we know about, in the order we will search. Always add\n\n# the user supplied additional versions to the front.\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If FindPython3Interp has already found the major and minor version,\n\n# insert that version next to get consistent versions of the interpreter and\n\n# library.\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Search for the current active python version first\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Search for newest python version if python executable isn't found\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# determine python version string\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PYTHON3INTERP_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/modules/FindPython3Libs.cmake" : {
      "ObjectId" : "38b44e23692fcbd6c1a77b493b433c1754858339",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindPython3Libs\n\n# --------------\n\n#\n\n# Find python libraries\n\n#\n\n# This module finds if Python is installed and determines where the\n\n# include files and libraries are.  It also determines what the name of\n\n# the library is.  This code sets the following variables:\n\n#\n\n# ::\n\n#\n\n#   PYTHON3LIBS_FOUND           - have the Python libs been found\n\n#   PYTHON3_LIBRARIES           - path to the python library\n\n#   PYTHON3_INCLUDE_PATH        - path to where Python.h is found (deprecated)\n\n#   PYTHON3_INCLUDE_DIRS        - path to where Python.h is found\n\n#   PYTHON3_DEBUG_LIBRARIES     - path to the debug library (deprecated)\n\n#   PYTHON3LIBS_VERSION_STRING  - version of the Python libs found (since CMake 2.8.8)\n\n#\n\n#\n\n#\n\n# The Python3_ADDITIONAL_VERSIONS variable can be used to specify a list\n\n# of version numbers that should be taken into account when searching\n\n# for Python.  You need to set this variable before calling\n\n# find_package(Python3Libs).\n\n#\n\n# If you'd like to specify the installation of Python to use, you should\n\n# modify the following cache variables:\n\n#\n\n# ::\n\n#\n\n#   PYTHON3_LIBRARY             - path to the python library\n\n#   PYTHON3_INCLUDE_DIR         - path to where Python.h is found\n\n#\n\n# If calling both ``find_package(PythonInterp)`` and\n\n# ``find_package(Python3Libs)``, call ``find_package(PythonInterp)`` first to\n\n# get the currently active Python version by default with a consistent version\n\n# of PYTHON3_LIBRARIES.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2009 Kitware, Inc.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use the executable's path as a hint\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for the python framework on Apple.\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Save CMAKE_FIND_FRAMEWORK\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# To avoid picking up the system Python.h pre-maturely.\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set up the versions we know about, in the order we will search. Always add\n\n# the user supplied additional versions to the front.\n\n# If FindPythonInterp has already found the major and minor version,\n\n# insert that version between the user supplied versions and the stock\n\n# version list.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Avoid finding the .dll in the PATH.  We want the .lib.\n",
        "Line" : 179,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Look for the static library in the Python config directory\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Avoid finding the .dll in the PATH.  We want the .lib.\n",
        "Line" : 185,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# This is where the static library is usually located\n",
        "Line" : 187,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Don't search for include dir until library location is known\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Use the library's install prefix as a hint\n",
        "Line" : 194,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Add framework directories to the search paths\n",
        "Line" : 203,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# For backward compatibility, set PYTHON3_INCLUDE_PATH.\n",
        "Line" : 228,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# We use PYTHON3_INCLUDE_DIR, PYTHON3_LIBRARY and PYTHON3_DEBUG_LIBRARY for the\n\n# cache entries because they are meant to specify the location of a single\n\n# library. We now set the variables listed by the documentation for this\n\n# module.\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# These variables have been historically named in this module different from\n\n# what SELECT_LIBRARY_CONFIGURATIONS() expects.\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# SELECT_LIBRARY_CONFIGURATIONS() sets ${PREFIX}_FOUND if it has a library.\n\n# Unset this, this prefix doesn't match the module prefix, they are different\n\n# for historical reasons.\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Restore CMAKE_FIND_FRAMEWORK\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# PYTHON3_ADD_MODULE(<name> src1 src2 ... srcN) is used to build modules for python.\n\n# PYTHON3_WRITE_MODULES_HEADER(<filename>) writes a header file you can include\n\n# in your sources to initialize the static python modules\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Mark these options as advanced\n",
        "Line" : 294,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "#    target_link_libraries(${_NAME} ${PYTHON3_LIBRARIES})\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# with configure_file() cmake complains that you may not use a file created using file(WRITE) as input file for configure_file()\n",
        "Line" : 366,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "cmake/modules/Findaio.cmake" : {
      "ObjectId" : "04b064297c0f96bc74ed8e6fec61e5728a1f48b7",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find AIO\n\n#\n\n# AIO_INCLUDE - Where to find libaio.h\n\n# AIO_LIBS - List of libraries when using AIO.\n\n# AIO_FOUND - True if AIO found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/Findbabeltrace.cmake" : {
      "ObjectId" : "6b29a246b210889b335b8cba2517cb2387138f50",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Babeltrace\n\n# This module defines the following variables:\n\n#    BABELTRACE_FOUND       = Was Babeltrace found or not?\n\n#    BABELTRACE_EXECUTABLE  = The path to lttng command\n\n#    BABELTRACE_LIBRARIES   = The list of libraries to link to when using Babeltrace\n\n#    BABELTRACE_INCLUDE_DIR = The path to Babeltrace include directory\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/Findblkid.cmake" : {
      "ObjectId" : "66de92f63f986f030ba9f889d855dc80f7852236",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2007-2012 Hypertable, Inc.\n\n#\n\n# This file is part of Hypertable.\n\n#\n\n# Hypertable is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU General Public License\n\n# as published by the Free Software Foundation; either version 3\n\n# of the License, or any later version.\n\n#\n\n# Hypertable is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with Hypertable. If not, see <http://www.gnu.org/licenses/>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Find libblkid\n\n# Find the blkid library and includes\n\n#\n\n# BLKID_INCLUDE_DIR - where to find blkid.h, etc.\n\n# BLKID_LIBRARIES - List of libraries when using blkid.\n\n# BLKID_FOUND - True if blkid found.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/Findcryptopp.cmake" : {
      "ObjectId" : "f7c3b9b46415697a896020dff84e645e4660dc03",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Module for locating the Crypto++ encryption library.\n\n#\n\n# Customizable variables:\n\n#   CRYPTOPP_ROOT_DIR\n\n#     This variable points to the CryptoPP root directory. On Windows the\n\n#     library location typically will have to be provided explicitly using the\n\n#     -D command-line option. The directory should include the include/cryptopp,\n\n#     lib and/or bin sub-directories.\n\n#\n\n# Read-only variables:\n\n#   CRYPTOPP_FOUND\n\n#     Indicates whether the library has been found.\n\n#\n\n#   CRYPTOPP_INCLUDE_DIRS\n\n#     Points to the CryptoPP include directory.\n\n#\n\n#   CRYPTOPP_LIBRARIES\n\n#     Points to the CryptoPP libraries that should be passed to\n\n#     target_link_libararies.\n\n#\n\n#\n\n# Copyright (c) 2012 Sergiu Dotenco\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Re-use the previous path:\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/Finddpdk.cmake" : {
      "ObjectId" : "343420a8ed7eae2f420fe7bad9b25b9572b0ce69",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find dpdk\n\n#\n\n# Once done, this will define\n\n#\n\n# DPDK_FOUND\n\n# DPDK_INCLUDE_DIR\n\n# DPDK_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/Findfcgi.cmake" : {
      "ObjectId" : "f355b924fd38c33f44c7e106935e4eb572b36362",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake module to search for FastCGI headers\n\n#\n\n# If it's found it sets FCGI_FOUND to TRUE\n\n# and following variables are set:\n\n# FCGI_INCLUDE_DIR\n\n# FCGI_LIBRARY\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set UUID_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/Findfio.cmake" : {
      "ObjectId" : "194f9191b00d7c49305786e3e329cd56fed7a3b4",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Fio\n\n# Find the fio includes\n\n#\n\n# FIO_INCLUDE_DIR - where to find fio.h\n\n# FIO_FOUND - True if fio is found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/Findfuse.cmake" : {
      "ObjectId" : "e7a7ff08d89625a37049a589996e57c26af5fdff",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module can find FUSE Library\n\n#\n\n# The following variables will be defined for your use:\n\n# - FUSE_FOUND : was FUSE found?\n\n# - FUSE_INCLUDE_DIRS : FUSE include directory\n\n# - FUSE_LIBRARIES : FUSE library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/Findgperftools.cmake" : {
      "ObjectId" : "c4db922f4a0c02ffae6384756e1b73b1c14c701c",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find gperftools\n\n# Once done, this will define\n\n#\n\n# GPERFTOOLS_FOUND - system has Profiler\n\n# GPERFTOOLS_INCLUDE_DIR - the Profiler include directories\n\n# Tcmalloc_INCLUDE_DIR - where to find Tcmalloc.h\n\n# GPERFTOOLS_TCMALLOC_LIBRARY - link it to use tcmalloc\n\n# GPERFTOOLS_TCMALLOC_MINIMAL_LIBRARY - link it to use tcmalloc_minimal\n\n# GPERFTOOLS_PROFILER_LIBRARY - link it to use Profiler\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/Findkeyutils.cmake" : {
      "ObjectId" : "e34be8b5eb4490e203e74069e50da977e005953f",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find Keyutils\n\n# Once done, this will define\n\n#\n\n# KEYUTILS_FOUND - system has keyutils\n\n# KEYUTILS_INCLUDE_DIR - the keyutils include directories\n\n# KEYUTILS_LIBRARIES - link these to use keyutils\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include dir\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# finally the library itself\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set KEYUTILS_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/modules/Findleveldb.cmake" : {
      "ObjectId" : "32786e97994516285ca0a787e0843499947d98c7",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find LevelDB\n\n#\n\n# LEVELDB_INCLUDE_DIR - Where to find leveldb/db.h\n\n# LEVELDB_LIBRARIES - List of libraries when using LevelDB.\n\n# LEVELDB_FOUND - True if LevelDB found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/Findpmem.cmake" : {
      "ObjectId" : "efcf6828898a1fc1e9a0aaa57d7e167873f50d2b",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find libpmem\n\n#\n\n# Once done, this will define\n\n#\n\n# PMEM_FOUND\n\n# PMEM_INCLUDE_DIR\n\n# PMEM_LIBRARY\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/Findrdma.cmake" : {
      "ObjectId" : "eb31f7922c91c2124d02c03f843da87261e7e4cb",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find rdma\n\n# Find the rdma library and includes\n\n#\n\n# RDMA_INCLUDE_DIR - where to find ibverbs.h, etc.\n\n# RDMA_LIBRARIES - List of libraries when using ibverbs.\n\n# RDMA_FOUND - True if ibverbs found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set UUID_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/Findrocksdb.cmake" : {
      "ObjectId" : "e1aac5741132d3bbed1a1efc9ccca8f9b00f8dde",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the native Rocksdb includes and library\n\n# This module defines\n\n#  ROCKSDB_INCLUDE_DIR, where to find rocksdb/db.h, Set when\n\n#                       ROCKSDB_INCLUDE_DIR is found.\n\n#  ROCKSDB_LIBRARIES, libraries to link against to use Rocksdb.\n\n#  ROCKSDB_FOUND, If false, do not try to use Rocksdb.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/Findsnappy.cmake" : {
      "ObjectId" : "b298cd256d027a738a9b725b74a25359b4b1184b",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Snappy\n\n# Find the snappy compression library and includes\n\n#\n\n# SNAPPY_INCLUDE_DIR - where to find snappy.h, etc.\n\n# SNAPPY_LIBRARIES - List of libraries when using snappy.\n\n# SNAPPY_FOUND - True if snappy found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set UUID_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/Findudev.cmake" : {
      "ObjectId" : "fd936fc8887e0543059d5f80d6813ea22ec7c1c8",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2007-2012 Hypertable, Inc.\n\n#\n\n# This file is part of Hypertable.\n\n#\n\n# Hypertable is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU General Public License\n\n# as published by the Free Software Foundation; either version 3\n\n# of the License, or any later version.\n\n#\n\n# Hypertable is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with Hypertable. If not, see <http://www.gnu.org/licenses/>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Find libudev\n\n# Find the udev library and includes\n\n#\n\n# UDEV_INCLUDE_DIR - where to find libudev.h, etc.\n\n# UDEV_LIBRARIES - List of libraries when using udev.\n\n# UDEV_FOUND - True if udev found.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/Findxfs.cmake" : {
      "ObjectId" : "6171e32895e9c4ed33e62fbac7ca5dd690415133",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find xfs\n\n# Once done, this will define\n\n#\n\n# XFS_FOUND - system has libxfs\n\n# XFS_INCLUDE_DIR - the libxfs include directories\n\n# XFS_LIBRARIES - link these to use libxfs\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include dir\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# finally the library itself\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set XFS_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/modules/Findxio.cmake" : {
      "ObjectId" : "938af03efb8e698b8c49815c2777d22c423542f5",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find libxio\n\n# Find libxio transport library\n\n#\n\n# XIO_INCLUDE_DIR -  libxio include dir\n\n# XIO_LIBRARIES - List of libraries\n\n# XIO_FOUND - True if libxio found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/Findzfs.cmake" : {
      "ObjectId" : "d92dd1fb04c38ac3bdc978a55eb8dede49b7311e",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find libzfs or libzfslinux\n\n# Once done, this will define\n\n#\n\n# ZFS_FOUND - system has libzfs\n\n# ZFS_INCLUDE_DIR - the libzfs include directories\n\n# ZFS_LIBRARIES - link these to use libzfs\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "85eae1562fe2011e9800787819b21f30a8898eb4",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 45,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 49,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# check if this is a submodule\n",
        "Line" : 56,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 97,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    },
    "cmake/modules/MergeStaticLibraries.cmake" : {
      "ObjectId" : "92d41567b8c82f4746452d4fdeeee3923d67c72a",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This function is a helper that will merge static libraries.\n\n# For example,\n\n#\n\n#    merge_static_libraries(mylib staticlibX staticlibY)\n\n#\n\n# mylib.a will generate a new static library mylib that is\n\n# a combination of staticlibX and staticlibY\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# remove duplicates\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# validate that all libs are static\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# add a dependency on the lib\n",
        "Line" : 29,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Force the merged Make the generated dummy source file depended on all static input\n\n# libs. If input lib changes,the source file is touched\n\n# which causes the desired effect (relink).\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# only LINUX is currently supported. OSX's libtool and windows lib.exe\n\n# have native support for merging static libraries, and support for them\n\n# can be easily added if required.\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# generate a script to merge the static libraries in to the target\n\n# library. see https://sourceware.org/binutils/docs/binutils/ar-scripts.html\n",
        "Line" : 45,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# we use the generator expression TARGET_FILE to get the location\n\n# of the library. this will not be expanded until the script file\n\n# is written below\n",
        "Line" : 49,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "# we want to set the target_link_libraries correctly for the new merged\n\n# static library. First we get the list of link libraries for each\n\n# of the libs we are merging\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# now remove the duplicates and any of the libraries we already merged\n",
        "Line" : 73,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# set the target link libraries\n",
        "Line" : 79,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 11
    },
    "cmake/modules/SIMDExt.cmake" : {
      "ObjectId" : "5330835aa162b2403a1babf579be3c9ed25cc239",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# detect SIMD extentions\n\n#\n\n# HAVE_ARMV8_CRC\n\n# HAVE_ARMV8_SIMD\n\n# HAVE_ARM_NEON\n\n# HAVE_INTEL_SSE\n\n# HAVE_INTEL_SSE2\n\n# HAVE_INTEL_SSE3\n\n# HAVE_INTEL_SSSE3\n\n# HAVE_INTEL_PCLMUL\n\n# HAVE_INTEL_SSE4_1\n\n# HAVE_INTEL_SSE4_2\n\n#\n\n# SIMD_COMPILE_FLAGS\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# don't believe only the -march support; gcc 4.8.5 on RHEL/CentOS says\n\n# it supports +crc but hasn't got the intrinsics or arm_acle.h.  Test for\n\n# the actual presence of one of the intrinsic functions.\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "e0c30d175602b5423aff489ea0b0465b5912c73b",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/man/8/CMakeLists.txt" : {
      "ObjectId" : "8a2204c713730204df510f18bb27a78d1bef9ef3",
      "LastModified" : "2017-08-08T11:37:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# mount.ceph.rst => mount if we use\n\n# get_filename_component(cmd ${man} NAME_WE)\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "doc/man/CMakeLists.txt" : {
      "ObjectId" : "e81631babdcaeaa37ee8c8f3221fa290a126ac16",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/librados/Makefile" : {
      "ObjectId" : "533a4c64711f19747cf6f192964e1acbbc1d1366",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Relative path to the Ceph source:\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build against the system librados instead of the one in the build tree:\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "fusetrace/Makefile" : {
      "ObjectId" : "4fd6ed316ea5a6d441ad8cb3670dba8e0f7c73dd",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "man/CMakeLists.txt" : {
      "ObjectId" : "a6d8aa67c6632f499751578cd6710c5b1b4ab805",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pom.xml" : {
      "ObjectId" : "89d0edb01bc5b19c57b0918656f8a8885d9f90c1",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "qa/Makefile" : {
      "ObjectId" : "ad655b7e743cb4468bfb6e691bfcb7ad875dd565",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "qa/btrfs/Makefile" : {
      "ObjectId" : "be95ecfd3cdfe70fe3f819ca3c014c924f65bfca",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "qa/libceph/Makefile" : {
      "ObjectId" : "05a0696cb1483b95945fd400abec4f5dc8498d04",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "qa/workunits/Makefile" : {
      "ObjectId" : "f75f5dfd4a5e25c97878c1ccaf06e53a0d7bfc08",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "qa/workunits/direct_io/Makefile" : {
      "ObjectId" : "20fec0be505444613c5d1fa21a9364548b3c5420",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "qa/workunits/fs/Makefile" : {
      "ObjectId" : "c9934254d35e2a35bdbcd88783b8092868c1d4c4",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "selinux/CMakeLists.txt" : {
      "ObjectId" : "d0a7e54fbeff63a369eb865105b77634d4e5a2fd",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "915e10aa66493da8afc072f9f206f3caeda8ad98",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# for erasure and compressor plugins\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# so libceph-common can be found\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# to be compatible with configure_files shared with autoconfig\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# we use assert(3) for testing, so scrub the -DNDEBUG defined by default\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# require c++11\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# we use `asm()` to inline assembly, so enable the GNU extension\n",
        "Line" : 156,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "## Handle diagnostics color if compiler supports them.\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# the src/.git_version file may be written out by make-dist; otherwise\n\n# we pull the git version from .git\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#if building from a source tarball via make-dist\n",
        "Line" : 211,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# remove 'v' prefix from raw git version\n",
        "Line" : 218,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# the src/ceph_release file is 3 lines,\n\n#   <release number, e.g. '12' for luminous>\n\n#   <release name, e.g. 'luminous'>\n\n#   <release type: 'dev' for x.0.z, 'rc' or x.1.z, or 'stable' or x.2.z>\n\n# note that the release name is semi-redundant and must match CEPH_RELEASE_*\n\n# definitions in include/rados.h and common/ceph_strings.c.\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Python stuff\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# sort out which allocator to use\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# tcmalloc heap profiler\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Common infrastructure\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# needed for source files that friend unit tests (e.g., using FRIEND_TEST)\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# appease dpkg-shlibdeps\n",
        "Line" : 658,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# rados object classes\n",
        "Line" : 675,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# RADOS client/library\n",
        "Line" : 678,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# virtualenv base directory for ceph-disk and ceph-detect-init\n",
        "Line" : 717,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## dencoder\n",
        "Line" : 728,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Monitor\n",
        "Line" : 785,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# OSD/ObjectStore\n\n# make rocksdb statically\n",
        "Line" : 797,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# We really want to have the CRC32 calculation in RocksDB accelerated\n\n# with SSE 4.2. For details refer to rocksdb/util/crc32c.cc.\n",
        "Line" : 814,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# we use an external project and copy the sources to bin directory to ensure\n\n# that object files are built outside of the source tree.\n",
        "Line" : 828,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# force rocksdb make to be called on each time\n",
        "Line" : 838,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Support/Tools\n",
        "Line" : 889,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# dmClock (after gmock)\n",
        "Line" : 899,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# note: add_test is not being called, so dmclock tests aren't part\n\n# of ceph tests\n",
        "Line" : 907,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "#  ${CMAKE_SOURCE_DIR}/src/ceph-disk\n",
        "Line" : 971,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# RadosGW\n",
        "Line" : 1055,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Now create a useable config.h\n",
        "Line" : 1088,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Everything you need to spin up a cluster with vstart.sh\n",
        "Line" : 1096,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Everything you need to run CephFS tests\n",
        "Line" : 1120,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 34
    },
    "src/bash_completion/CMakeLists.txt" : {
      "ObjectId" : "8d834774d77d71e62c7f0a5431d14d764a981fa7",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/brag/CMakeLists.txt" : {
      "ObjectId" : "93fa72d14b03a3d7443e659763f73834135478ce",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ceph-detect-init/CMakeLists.txt" : {
      "ObjectId" : "066be4150cda5ed43a5a9914dccc4466520f2636",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ceph-disk/CMakeLists.txt" : {
      "ObjectId" : "1bce4d416f00775d5baa892cba74eb7ef41c5d0e",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ceph-volume/CMakeLists.txt" : {
      "ObjectId" : "20841ff2e77afefbc540eae277f4efaa8daeac91",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ceph_ver.h.in.cmake" : {
      "ObjectId" : "d7e1c8e9bddff8ebc129820375f759dc5b74dd15",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ifndef CEPH_VERSION_H\n\n#define CEPH_VERSION_H\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#define CEPH_GIT_VER @CEPH_GIT_VER@\n\n#define CEPH_GIT_NICE_VER \"@CEPH_GIT_NICE_VER@\"\n\n#define CEPH_RELEASE @CEPH_RELEASE@\n\n#define CEPH_RELEASE_NAME \"@CEPH_RELEASE_NAME@\"\n\n#define CEPH_RELEASE_TYPE \"@CEPH_RELEASE_TYPE@\"\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#endif\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/client/CMakeLists.txt" : {
      "ObjectId" : "4d182d8082e163defe929299317a06985f0c71e3",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/cls/CMakeLists.txt" : {
      "ObjectId" : "1c36c1fd0b5e77a899f1dbdb4464fc371352e8ae",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Rados object classes\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# cls_sdk\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# cls_hello\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# cls_numops\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# cls_rbd\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# cls_lock\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# cls_refcount\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# cls_version\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# cls_log\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# cls_statelog\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# cls_timeindex\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# cls_replica_log\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# cls_user\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# cls_journal\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# cls_rgw\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# cls_cephfs\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# cls_lua\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# while not necessary this seems to bring in the lua's include directories\n\n# so that cls_lua srcs build correctly\n",
        "Line" : 265,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 18
    },
    "src/compressor/CMakeLists.txt" : {
      "ObjectId" : "8e0e61cdb91f256da8c6ddcdc17a7cedabbfacdd",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## compressor plugins\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/compressor/lz4/CMakeLists.txt" : {
      "ObjectId" : "7a53000e9f742b4a45feb7bbbdb1c4b0581fb375",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# lz4\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/compressor/snappy/CMakeLists.txt" : {
      "ObjectId" : "8ce0bd04a30018ffd080c5a4131ec9e916a770f6",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# snappy\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/compressor/zlib/CMakeLists.txt" : {
      "ObjectId" : "1b3bc259a3514811309d5c035dccb6717c8e3a21",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# zlib\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/compressor/zstd/CMakeLists.txt" : {
      "ObjectId" : "d9d2b6e560d3f7de863a21e8222f05dd7b076f1b",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# zstd\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# libzstd - build it statically\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# force zstd make to be called on each time\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/crypto/isa-l/CMakeLists.txt" : {
      "ObjectId" : "49a01870b301bb4cc40b4743a9857bcb9f5048fb",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/dmclock/CMakeLists.txt" : {
      "ObjectId" : "9444ea1e96afd0a27250d6d989a0b41f797cdcd2",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add_subdirectory(support/src)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/dmclock/dmclock-targets.cmake" : {
      "ObjectId" : "2c84f34a1420de05c91136b1394a91226b05aa18",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/dmclock/sim/CMakeLists.txt" : {
      "ObjectId" : "c088d2f1cd7c96205a7183354f84e86df65b04be",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/dmclock/sim/src/CMakeLists.txt" : {
      "ObjectId" : "426827b03f275d65c6b943e2dd2cacd4810b6807",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ssched code\n",
        "Line" : 1,
        "CharPositionInLine" : 28
      },
      "1" : {
        "Text" : "# dmclock code\n",
        "Line" : 2,
        "CharPositionInLine" : 31
      },
      "2" : {
        "Text" : "# append warning flags to certain source files\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/dmclock/src/CMakeLists.txt" : {
      "ObjectId" : "7178f266e2a41d13276ad1fbe3a92bc49135cd37",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/dmclock/support/test/CMakeLists.txt" : {
      "ObjectId" : "1e1ea25cc14e3dcaac1c2bca421a82e8eab025c2",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# dmclock does not use intrusive heap (but it does use indirect\n\n# intrusive heap), so we won't use this code\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/dmclock/test/CMakeLists.txt" : {
      "ObjectId" : "24da2e7320a5d02343355ee442b825a424bdbf17",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/erasure-code/CMakeLists.txt" : {
      "ObjectId" : "450ec716973eb2de4300f8917122042f415ad331",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## erasure code plugins\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#jerasure subdir must be before shec so jerasure & neon obj libs are declared\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# legacy jerasure flavors. these are left here for backward compatibility\n\n# and should be removed in future versions\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/erasure-code/isa/CMakeLists.txt" : {
      "ObjectId" : "e0a511e0a8e4240e4551554de102cd65978a066b",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ISA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/erasure-code/jerasure/CMakeLists.txt" : {
      "ObjectId" : "7f752806cda7fa172ba10ea1b1190969e95327d6",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# jerasure plugin\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the CFLAGS correctly for gf-complete based on SIMD compiler support\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set this to TRUE to enable debugging of SIMD detection\n\n# inside gf-complete. gf-complete will printf the SIMD\n\n# instructions detected to stdout.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# legacy libraries\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/erasure-code/lrc/CMakeLists.txt" : {
      "ObjectId" : "c25fc695f2fa273fcf82a18ef05199e04339206f",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# lrc plugin\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/erasure-code/shec/CMakeLists.txt" : {
      "ObjectId" : "d5f8e15ada4a694b46827d6fd7920edd1803f5c8",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#shec plugin\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# legacy libraries\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# note we rely on the fact this will always be statically linked with jerasure\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "src/global/CMakeLists.txt" : {
      "ObjectId" : "46de512f5c9f1d3e437d19e61ddcc6786a7095a9",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/include/CMakeLists.txt" : {
      "ObjectId" : "49e31ac960e718afe6d1c1776fc1db0c14858326",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/include/config-h.in.cmake" : {
      "ObjectId" : "2847ceea2a8e2a21190a2572eb1b755b249f0bd5",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ifndef CONFIG_H\n\n#define CONFIG_H\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#cmakedefine CEPH_HAVE_FALLOCATE\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#cmakedefine HAVE_POSIX_FADVISE 1\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#cmakedefine HAVE_POSIX_FALLOCATE 1\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#cmakedefine HAVE_SYS_SYNCFS 1\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#cmakedefine HAVE_SYNC_FILE_RANGE\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#cmakedefine HAVE_MALLINFO\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#cmakedefine HAVE_PWRITEV 1\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#cmakedefine HAVE_SYS_MOUNT_H 1\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#cmakedefine HAVE_SYS_PARAM_H 1\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#cmakedefine HAVE_SYS_TYPES_H 1\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#cmakedefine HAVE_SYS_VFS_H 1\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#cmakedefine HAVE_EXECINFO_H 1\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#cmakedefine HAVE___BE16 1\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#cmakedefine HAVE___BE32 1\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#cmakedefine HAVE___BE64 1\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#cmakedefine HAVE___LE16 1\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#cmakedefine HAVE___LE32 1\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#cmakedefine HAVE___LE64 1\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#cmakedefine HAVE___S16 1\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#cmakedefine HAVE___S32 1\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#cmakedefine HAVE___S64 1\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#cmakedefine HAVE___S8 1\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#cmakedefine HAVE___U16 1\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#cmakedefine HAVE___U32 1\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#cmakedefine HAVE___U64 1\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#cmakedefine HAVE___U8 1\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#cmakedefine HAVE_RES_NQUERY\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#cmakedefine HAVE_LZ4\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#cmakedefine HAVE_LIBAIO\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#cmakedefine HAVE_OPENLDAP\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#cmakedefine HAVE_LIBFUSE\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#cmakedefine HAVE_LIBXFS 1\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#cmakedefine HAVE_SPDK\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#cmakedefine HAVE_DPDK\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#cmakedefine HAVE_PMEM\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#cmakedefine HAVE_LEVELDB_FILTER_POLICY\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#cmakedefine HAVE_LIBTCMALLOC\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#cmakedefine HAVE_LIBJEMALLOC\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#cmakedefine HAVE_CURL_MULTI_WAIT 1\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#cmakedefine USE_CRYPTOPP\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#cmakedefine USE_NSS\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#cmakedefine HAVE_XIO\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#cmakedefine HAVE_RDMA\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#cmakedefine HAVE_IBV_EXP\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#cmakedefine WITH_EMBEDDED\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#cmakedefine WITH_CEPHFS\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#cmakedefine WITH_RBD\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#cmakedefine WITH_KRBD\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "#cmakedefine WITH_KVS\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "#cmakedefine WITH_RADOSGW\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#cmakedefine WITH_RADOSGW_FCGI_FRONTEND\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "#cmakedefine WITH_LEVELDB\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "#cmakedefine WITH_RADOSGW_BEAST_FRONTEND\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "#cmakedefine HAVE_THREAD_SAFE_RES_QUERY\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "#cmakedefine HAVE_REENTRANT_STRSIGNAL\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "#cmakedefine WITH_LTTNG\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "#cmakedefine WITH_OSD_INSTRUMENT_FUNCTIONS\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "#cmakedefine WITH_BABELTRACE\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "#cmakedefine HAVE_BABELTRACE_BABELTRACE_H 1\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "#cmakedefine HAVE_BABELTRACE_CTF_EVENTS_H 1\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "#cmakedefine HAVE_BABELTRACE_CTF_ITERATOR_H 1\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "#cmakedefine HAVE_ARPA_NAMESER_COMPAT_H 1\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "#cmakedefine FASTCGI_INCLUDE_DIR\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "#cmakedefine CEPH_HAVE_SPLICE\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "#cmakedefine DEBUG_GATHER\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "#cmakedefine HAVE_GETGROUPLIST 1\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "#cmakedefine tracepoint\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "#cmakedefine HAVE_FDATASYNC 1\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "#cmakedefine HAVE_LIBROCKSDB\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "#cmakedefine HAVE_VALGRIND_HELGRIND_H 1\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "#cmakedefine HAVE_SYS_PRCTL_H 1\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "#cmakedefine HAVE_LINUX_TYPES_H 1\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "#cmakedefine HAVE_LINUX_VERSION_H 1\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "#cmakedefine HAVE_SCHED 1\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "#cmakedefine HAVE_SSE\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "#cmakedefine HAVE_SSE2\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "#cmakedefine HAVE_PIPE2 1\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "#cmakedefine HAVE_NEON\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "#cmakedefine HAVE_PTHREAD_SPINLOCK\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "#cmakedefine HAVE_NAME_TO_HANDLE_AT\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "#cmakedefine HAVE_GOOD_YASM_ELF64 \n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "#cmakedefine HAVE_BETTER_YASM_ELF64\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "#cmakedefine STRERROR_R_CHAR_P 1\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "#cmakedefine HAVE_LIBZFS\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "#cmakedefine HAVE_FUNC\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "#cmakedefine HAVE_PRETTY_FUNC\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "#cmakedefine CEPH_HAVE_SETPIPE_SZ\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "#cmakedefine HAVE_EVENTFD\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "#cmakedefine ENABLE_COVERAGE\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "#cmakedefine PG_DEBUG_REFS\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "#cmakedefine HAVE_ARMV8_CRC\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "#cmakedefine HAVE_ARMV8_CRYPTO\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "#cmakedefine HAVE_ARMV8_CRC_CRYPTO_INTRINSICS\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "#cmakedefine HAVE_STAT_ST_MTIMESPEC_TV_NSEC\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "#cmakedefine HAVE_STAT_ST_MTIM_TV_NSEC\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "#cmakedefine HAVE_STATIC_CAST\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "#cmakedefine VERSION \"@VERSION@\"\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "#cmakedefine HAVE_PTHREAD_SETNAME_NP 1\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "#cmakedefine WITH_BLKIN\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "#cmakedefine HAVE_PTHREAD_SET_NAME_NP\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "#cmakedefine HAVE_PTHREAD_GETNAME_NP 1\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "#cmakedefine HAVE_POWER8\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "#cmakedefine CEPH_BIG_ENDIAN\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "#cmakedefine CEPH_LITTLE_ENDIAN\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "#cmakedefine PYTHON_EXECUTABLE \"@PYTHON_EXECUTABLE@\"\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "#cmakedefine HAVE_GETPROGNAME 1\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "#endif /* CONFIG_H */\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 108
    },
    "src/java/CMakeLists.txt" : {
      "ObjectId" : "17e08d8677ebdb592883a424eab69c1c4609e571",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# note: for the -source 1.5 builds, we add\n\n#   -Xlint:-options\n\n# to get rid of the warning\n\n#   warning: [options] bootstrap class path not set in conjunction with -source 1.5\n\n# as per\n\n#   https://blogs.oracle.com/darcy/entry/bootclasspath_older_source\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/java/build.xml" : {
      "ObjectId" : "69499f8a885365b2a1797ed803c502c365ce7ddd",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "src/java/native/CMakeLists.txt" : {
      "ObjectId" : "d7d633b3d7ecd4975fef050a5466ba885139711a",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/journal/CMakeLists.txt" : {
      "ObjectId" : "3632c1051ec2b5ed90dd4787aa8a5558d80f16a4",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/json_spirit/CMakeLists.txt" : {
      "ObjectId" : "b3b5ce2e6f23e0578df34693606b93c490659504",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/key_value_store/CMakeLists.txt" : {
      "ObjectId" : "2c65614479f1ade9dd36e171907a1a445845455b",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/kv/CMakeLists.txt" : {
      "ObjectId" : "80726d89fc08eb34e44b0645d4d475bd751fa32c",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# rocksdb detects bzlib and lz4 in its Makefile, which forces us to do the same.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/libcephd/CMakeLists.txt" : {
      "ObjectId" : "223184fafecc1ae043cc54a1ddfa4495a4b271fd",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: install these libraries and add them to rpm and deb packages\n\n#install(TARGETS cephd DESTINATION ${CMAKE_INSTALL_LIBDIR})\n\n#install(FILES ../include/cephd/libcephd.h\n\n#  DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/cephd)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/librados/CMakeLists.txt" : {
      "ObjectId" : "d8b48256e94a0ae860e601db77179aa597d7b283",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# LINK_PRIVATE instead of PRIVATE is used to backward compatibility with cmake 2.8.11\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# use COMPILE_FLAGS for the backward compatibility with cmake 2.8.11, should have been:\n\n#  CXX_VISIBILITY_PRESET hidden\n\n#  VISIBILITY_INLINES_HIDDEN ON\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "src/libradosstriper/CMakeLists.txt" : {
      "ObjectId" : "5372a6d115deccaf101323051df9d6eae831ef36",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/librbd/CMakeLists.txt" : {
      "ObjectId" : "e596bd5f499721c83196e55f19ccd28daa93e4f1",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/mds/CMakeLists.txt" : {
      "ObjectId" : "aa3b9705a6e00d2e207c366c9ec68b91c2057c1c",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/mon/CMakeLists.txt" : {
      "ObjectId" : "04044543c21bb46a711d95d511b4a9ecd3b68636",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ocf/CMakeLists.txt" : {
      "ObjectId" : "0ff0efcd96e314bc966becd69828ead7d512f17c",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The root of the OCF resource agent hierarchy\n\n# Per the OCF standard, it's always \"lib\",\n\n# not \"lib64\" (even on 64-bit platforms).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The ceph provider directory\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/os/CMakeLists.txt" : {
      "ObjectId" : "a98fe1db0606d24420579e79bb98047f481724cf",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: should use add_library(spdk INTERFACE IMPORTED) instead in new cmake,\n\n# if INTERFACE is supported.\n",
        "Line" : 125,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "src/osd/CMakeLists.txt" : {
      "ObjectId" : "3ec6f31a604815dd29e8c43f52d62bc434073f15",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/osdc/CMakeLists.txt" : {
      "ObjectId" : "ef34e62975d7ae410a34d3b90ac8e72473d94607",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/pybind/CMakeLists.txt" : {
      "ObjectId" : "dbdb23f1c567c766657bebc42ff44ef1b3f47d6e",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Keep the default version last\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if CMAKE_INSTALL_PREFIX is an empty string, must replace\n\n# it with \"/\" to make PYTHON_INSTALL_TEMPLATE an absolute path to be\n\n# consistent with all other installation paths.\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Location needs to match default setting for mgr_module_path, currently:\n\n# OPTION(mgr_module_path, OPT_STR, CEPH_PKGLIBDIR \"/mgr\")\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "src/pybind/cephfs/CMakeLists.txt" : {
      "ObjectId" : "6d4a22b32f9faab4e6bac6d028285f538a6a7748",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/pybind/rados/CMakeLists.txt" : {
      "ObjectId" : "7b14c0e0425cf4d831c096e9564aa2f4b7ee29ce",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/pybind/rbd/CMakeLists.txt" : {
      "ObjectId" : "fee56ec40af1f4a01e6bb85ddb05adc58b5e30c3",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/pybind/rgw/CMakeLists.txt" : {
      "ObjectId" : "da2cdcdf87f31a3006f4dc34c833ac006c7a9122",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/rbd_fuse/CMakeLists.txt" : {
      "ObjectId" : "efeda706cc8a5beac236bcdc1ddc662e09d0cad6",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/rbd_replay/CMakeLists.txt" : {
      "ObjectId" : "2e2e176d80b389fb32eb21cfbbc87c465c1a1af4",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/rgw/CMakeLists.txt" : {
      "ObjectId" : "fc3a33a0fdfd3279980fdb7633bcc2a4a16d7a13",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# radosgw depends on cls libraries at runtime, but not as link dependencies\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/script/CMakeLists.txt" : {
      "ObjectId" : "42568a13e567992edc806995f87d715e15db39f4",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/test/CMakeLists.txt" : {
      "ObjectId" : "07f3238a4e4d1271e811a4992e4d8eb5b9400212",
      "LastModified" : "2017-08-08T11:37:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# test_timers\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# test_signal_handlers\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# test_rewrite_latency\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# test_crypt\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# From src/test/Makefile-client.am: I dont get this one... testing the osdc build but link in libcephfs?\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# bench_log\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ceph_test_mutate\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# test_trans\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Benchmarks\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ceph_omapbench\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ceph_kvstorebench\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# ceph_objectstore_bench\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# test_cors\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# ceph_test_cls_rgw_meta\n",
        "Line" : 188,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# ceph_test_cls_rgw_log\n",
        "Line" : 216,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# ceph_test_cls_rgw_opstate\n",
        "Line" : 246,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# ceph_test_librgw_file (nfs-like RGW interface)\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ceph_test_librgw_file_cd (just the rgw_file create-delete bucket ops)\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# ceph_test_librgw_file_gp (just the rgw_file get-put bucket ops)\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# ceph_test_librgw_file_nfsns (nfs namespace tests)\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# ceph_test_librgw_file_aw (nfs write transaction [atomic write] tests)\n",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# ceph_test_rgw_token\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# librgw_file_gp (just the rgw_file get-put bucket ops)\n",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# ceph_multi_stress_watch\n",
        "Line" : 380,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#ceph_perf_local\n",
        "Line" : 387,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# ceph_xattr_bench\n",
        "Line" : 403,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# ceph_test_filejournal\n",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ceph_test_keys\n",
        "Line" : 448,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ceph_test_snap_mapper\n",
        "Line" : 454,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ceph_test_admin_socket_output\n",
        "Line" : 507,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#make check starts here\n",
        "Line" : 522,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#following dependencies are run inside make check unit tests\n",
        "Line" : 524,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# unittest_admin_socket\n",
        "Line" : 597,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# unittest_encoding\n",
        "Line" : 605,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# unittest_addrs\n",
        "Line" : 612,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# unittest_workqueue\n",
        "Line" : 619,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# unittest_striper\n",
        "Line" : 627,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# unittest_prebufferedstreambuf\n",
        "Line" : 635,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# unittest_str_list\n",
        "Line" : 642,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# unittest_log\n",
        "Line" : 649,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# unittest_base64\n",
        "Line" : 656,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# unittest_ceph_argparse\n",
        "Line" : 663,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# unittest_ceph_compatset\n",
        "Line" : 670,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# unittest_gather\n",
        "Line" : 677,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# unittest_run_cmd\n",
        "Line" : 685,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# signals\n",
        "Line" : 692,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# unittest_simple_spin\n",
        "Line" : 700,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# unittest_bufferlist\n",
        "Line" : 707,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# unittest_xlist\n",
        "Line" : 714,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# unittest_arch\n",
        "Line" : 721,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# unittest_denc\n",
        "Line" : 729,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# unittest_mempool\n",
        "Line" : 736,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# unittest_features\n",
        "Line" : 743,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# unittest_crypto\n",
        "Line" : 750,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# unittest_crypto_init\n",
        "Line" : 758,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# unittest_perf_counters\n",
        "Line" : 765,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# unittest_ceph_crypto\n",
        "Line" : 772,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# unittest_utf8\n",
        "Line" : 779,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# unittest_mime\n",
        "Line" : 786,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# unittest_escape\n",
        "Line" : 793,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# unittest_strtol\n",
        "Line" : 800,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# unittest_confutils\n",
        "Line" : 807,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# unittest_heartbeatmap\n",
        "Line" : 814,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# unittest_formatter\n",
        "Line" : 823,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "# unittest_daemon_config\n",
        "Line" : 832,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# unittest_libcephfs_config\n",
        "Line" : 846,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# unittest_rbd_replay\n",
        "Line" : 855,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# unittest_ipaddr\n",
        "Line" : 869,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# unittest_texttable\n",
        "Line" : 875,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# unittest_on_exit\n",
        "Line" : 883,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# unittest_subprocess\n",
        "Line" : 890,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# unittest_pageset\n",
        "Line" : 897,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "#make check ends here\n",
        "Line" : 902,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 73
    },
    "src/test/ObjectMap/CMakeLists.txt" : {
      "ObjectId" : "a7ecb83338aab78cc26213755482b67dfc86bc22",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ceph_test_object_map\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ceph_test_keyvaluedb_atomicity\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ceph_test_keyvaluedb_iterators\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/test/bench/CMakeLists.txt" : {
      "ObjectId" : "9fba701e0522162c002f3e3b4b2b3910c51e6146",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# smalliobench\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ceph_smalliobenchrbd\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ceph_smalliobenchfs\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ceph_smalliobenchdumb\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ceph_tpbench\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/test/cls_hello/CMakeLists.txt" : {
      "ObjectId" : "fa4a526afa0de157a3ba1624b3de1b3844d6023e",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/test/cls_lock/CMakeLists.txt" : {
      "ObjectId" : "75e3ead606720d254b88a883cc6400486d20c2f4",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/test/cls_log/CMakeLists.txt" : {
      "ObjectId" : "ba9d6ab500ebbef8fc7a066b5a971cf5a655fbff",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/test/cls_lua/CMakeLists.txt" : {
      "ObjectId" : "2ccb851cd89a479ad61d1702398023a9e8ae1d7a",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/test/cls_numops/CMakeLists.txt" : {
      "ObjectId" : "a91137648effec8825e1a8a349182098bad54b59",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ceph_test_cls_numops\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/test/cls_rbd/CMakeLists.txt" : {
      "ObjectId" : "7afcf33b3bae6248075d087a5cd84ecdc665e3db",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cls_test_cls_rbd\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/test/cls_refcount/CMakeLists.txt" : {
      "ObjectId" : "ab036315d083292e5c0edb1ff5a34b435ac451f4",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ceph_test_cls_refcount\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/test/cls_replica_log/CMakeLists.txt" : {
      "ObjectId" : "bf7ce99154318a5b579ea5011b6cfe9d448fa0ac",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ceph_test_cls_replica_log\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/test/cls_rgw/CMakeLists.txt" : {
      "ObjectId" : "3352db233cec15f896f5b57ccfeea49f81819682",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/test/cls_sdk/CMakeLists.txt" : {
      "ObjectId" : "2579b9c76b022967c1ff1c8a1ef56ac0f279bd96",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/test/cls_statelog/CMakeLists.txt" : {
      "ObjectId" : "5f77979de0a2446edcb1101bdb0ff92057174ee8",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ceph_test_cls_statelog\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/test/cls_version/CMakeLists.txt" : {
      "ObjectId" : "24fabc933e0d70d5a5907c420a18a0c29b4de58b",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ceph_test_cls_version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/test/common/CMakeLists.txt" : {
      "ObjectId" : "9a2be3df293cc96ca29e8f10b53085086b7b51e9",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# get_command_descriptions\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# unittest_blkdev\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# unittest_bloom_filter\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# unittest_histogram\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# unittest_prioritized_queue\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# unittest_mclock_priority_queue\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# unittest_str_map\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# unittest_sharedptr_registry\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# unittest_shared_cache\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# unittest_sloppy_crc_map\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# unittest_time\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# unittest_util\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# unittest_throttle\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# unittest_lru\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# unittest_io_priority\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# unittest_crc32c\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# unittest_config\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# unittest_context\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# unittest_safe_io\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# unittest_url_escape\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# unittest_readahead\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# unittest_tableformatter\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# unittest_bit_vector\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# unittest_async_compressor\n\n# the test is disabled, because async_compressor is not used anywhere yet.\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# unittest_interval_map\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# unittest_interval_set\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# unittest_weighted_priority_queue\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# unittest_mutex_debug\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# unittest_mutex\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# unittest_shunique_lock\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# unittest_perf_histogram\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# unittest_global_doublefree\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 32
    },
    "src/test/compressor/CMakeLists.txt" : {
      "ObjectId" : "d296cdf0bea441d5650d4c7716bb8164de42d21e",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# unittest_compression\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/test/crush/CMakeLists.txt" : {
      "ObjectId" : "e527daf817a8847d81d397691c2ac4f8cd465ff3",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# unittest_crush_wrapper\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# unittest_crush\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/test/direct_messenger/CMakeLists.txt" : {
      "ObjectId" : "6776cae22504e8b1e48681e1347e54e2c97176da",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# unittest_direct_messenger\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/test/encoding/CMakeLists.txt" : {
      "ObjectId" : "0ee20fe1f91fa8543b000f915fc18b382038fce5",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# scripts\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/test/erasure-code/CMakeLists.txt" : {
      "ObjectId" : "dc4e0865d0a66519913469c3c022d786afbd208f",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# unittest_erasure_code_plugin\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# unittest_erasure_code\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# unittest_erasure_code_plugin_jerasure\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#unittest_erasure_code_isa\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#unittest_erasure_code_plugin_isa\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# unittest_erasure_code_lrc\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# unittest_erasure_code_plugin_lrc\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# unittest_erasure_code_plugin_shec\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# unittest_erasure_code_example\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# unittest_erasure_code_jerasure\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# unittest_erasure_code_shec\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# unittest_erasure_code_shec_all\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# unittest_erasure_code_shec_thread\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# unittest_erasure_code_shec_arguments\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "src/test/filestore/CMakeLists.txt" : {
      "ObjectId" : "82a47f8c48bd5f0ea6a968f3fced5258b60f3f7f",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ceph_test_filestore\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/test/fio/CMakeLists.txt" : {
      "ObjectId" : "f349e32de2031ff8af7da741d04d0919125384e8",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# prevent fio from adding a 'typedef int bool'\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# fio headers use typeof(), which requires c++11 extensions\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/test/fs/CMakeLists.txt" : {
      "ObjectId" : "7002e12283931cb5fe748051822ff64060ae9355",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# unittest_mds_types\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/test/journal/CMakeLists.txt" : {
      "ObjectId" : "a34e45f52236350fbef009010cb32cff455d5d75",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# unittest_journal\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/test/libcephd/CMakeLists.txt" : {
      "ObjectId" : "a12e8ea40c8460239a74d5be915a9729be3ac204",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cephdtest\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Enable spdk\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ceph_test_cephd_api_misc\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/test/libcephfs/CMakeLists.txt" : {
      "ObjectId" : "2e42c03f0685e0238c0ef8396cca5e8ccbbaebfc",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/test/librados/CMakeLists.txt" : {
      "ObjectId" : "c35ddb3d8fb271fbf2e99c108f45b8dad16417a3",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# radostest\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ceph_test_rados_api_cmd\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ceph_test_rados_api_io\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ceph_test_rados_api_c_write_operations\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ceph_test_rados_api_c_read_operations\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ceph_test_rados_api_aio\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ceph_test_rados_api_list\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ceph_test_rados_api_pool\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ceph_test_rados_api_stat\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ceph_test_rados_api_watch_notify\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ceph_test_rados_api_cls\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ceph_test_rados_api_misc\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ceph_test_rados_api_lock\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ceph_test_rados_api_service\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ceph_test_rados_api_tier\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ceph_test_rados_api_snapshots\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# unittest_librados\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# unittest_librados_config\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "src/test/librados_test_stub/CMakeLists.txt" : {
      "ObjectId" : "ba30a4356c9b2b76496366ecdcb54e240ae42ed8",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/test/libradosstriper/CMakeLists.txt" : {
      "ObjectId" : "b328acb31bd789897cbaf135c2712328ca7c68f6",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/test/librbd/CMakeLists.txt" : {
      "ObjectId" : "a73f2e634bb0ae92bfefb5b51705f05e03c0b4b7",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# unittest_librbd\n\n# doesn't use add_ceph_test because it is called by run-rbd-unit-tests.sh\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/test/mds/CMakeLists.txt" : {
      "ObjectId" : "b4d0be301f5d3a5454486c555c9d0ed63e48d159",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# unittest_mds_authcap\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# unittest_mds_sessionfilter\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/test/messenger/CMakeLists.txt" : {
      "ObjectId" : "7981fa6d5cbfa04766d0d3a359a7915ebcad55eb",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/test/mgr/CMakeLists.txt" : {
      "ObjectId" : "fccf667581b1be0f066cfb033190c94256b21247",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#scripts\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/test/mon/CMakeLists.txt" : {
      "ObjectId" : "4bc5b1cca4ac1bffd3b41c0dded00397703f10f1",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ceph_test_mon_workloadgen\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ceph_test_mon_msg\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# unittest_mon_moncap\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# unittest_mon_pgmap\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# unittest_mon_montypes\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/test/msgr/CMakeLists.txt" : {
      "ObjectId" : "6222087c464bf8990974e87ca028142e63a98bdf",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ceph_test_async_driver\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ceph_test_msgr\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ceph_test_async_networkstack\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#ceph_perf_msgr_server\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#ceph_perf_msgr_client\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# test_userspace_event\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/test/objectstore/CMakeLists.txt" : {
      "ObjectId" : "71248d1acc7d01d78abe9856f924d843aa00097e",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ceph_perf_objectstore\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ceph_test_objectstore\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ceph_test_keyvaluedb\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ceph_test_objectstore_workloadgen\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ceph_test_filestore_idempotent\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ceph_test_filestore_idempotent_sequence\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# unittest_chain_xattr\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# unittest_rocksdb_option\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# unittest_bit_alloc\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# unittest_bluefs\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# unittest_bluestore_types\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# unittest_transaction\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# unittest_memstore_clone\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "src/test/os/CMakeLists.txt" : {
      "ObjectId" : "6926eee711129cd2ef61587cd633ede776ba1f0a",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# unittest_lfnindex\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/test/osd/CMakeLists.txt" : {
      "ObjectId" : "79281014526b43e07c87754ee837abfc473b4d21",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# test_rados\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# unittest_osdmap\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# unittest_osd_types\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# unittest_ecbackend\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# unittest_osdscrub\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# unittest_pglog\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# unittest_hitset\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# unittest_osd_osdcap\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# unittest ExtentCache\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# unittest PGTransaction\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# unittest ECTransaction\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# unittest_mclock_op_class_queue\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# unittest_mclock_client_queue\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "src/test/osdc/CMakeLists.txt" : {
      "ObjectId" : "297c2672c638786fbb0e00c3aba8c9fc3f830237",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/test/pybind/CMakeLists.txt" : {
      "ObjectId" : "bc91bce305dadacd1d9dc7f58304d38c7e142501",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/test/rbd_mirror/CMakeLists.txt" : {
      "ObjectId" : "47029cd9034cfbe1533dd37be9da3c90202a57dc",
      "LastModified" : "2017-08-08T11:37:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/test/rgw/CMakeLists.txt" : {
      "ObjectId" : "575b394f14887c5382980f60655b9bbbf4dda2fb",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#unittest_rgw_bencode\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#unitttest_rgw_period_history\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# unitttest_rgw_compression\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# unitttest_http_manager\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ceph_test_rgw_manifest\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ceph_test_rgw_obj\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ceph_test_rgw_crypto\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ceph_test_rgw_iam_policy\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# unitttest_rgw_string\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "src/test/system/CMakeLists.txt" : {
      "ObjectId" : "f59ed3e79c632ee85d3e01ce62c4cf9f396644c1",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## System tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# test_rados_list_parallel\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# test_rados_open_pools_parallel\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# test_rados_delete_pools_parallel\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# test_rados_watch_notify\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/tools/CMakeLists.txt" : {
      "ObjectId" : "ed19c63bc3c7da87dfb9ee6fa043d95683f1dc0b",
      "LastModified" : "2017-08-08T11:37:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tools/cephfs/CMakeLists.txt" : {
      "ObjectId" : "c9339ce8ac618df8e94542560eff4c6eb76f19df",
      "LastModified" : "2017-08-04T14:51:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tools/rbd/CMakeLists.txt" : {
      "ObjectId" : "21250690e6daac8c69df8c783376d782241c9182",
      "LastModified" : "2017-08-08T11:37:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tools/rbd_ggate/CMakeLists.txt" : {
      "ObjectId" : "5c5572c48fe2a14b0b71e7d1251cea2dde4686fe",
      "LastModified" : "2017-08-08T11:37:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tools/rbd_mirror/CMakeLists.txt" : {
      "ObjectId" : "5538fc1945a2cd065a629aeaed402118f9fc21eb",
      "LastModified" : "2017-08-08T11:37:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tools/rbd_nbd/CMakeLists.txt" : {
      "ObjectId" : "d7ce811e9634f7b19952428a87595c90fd1c02ff",
      "LastModified" : "2017-08-08T11:37:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tracing/CMakeLists.txt" : {
      "ObjectId" : "ec2a8b4f0acc5bb42685426b7365ab25c05f5ac8",
      "LastModified" : "2017-08-08T11:37:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# we are in \"src/tracing\", so create the output dir manually.\n\n# the source files include the tracing headers like\n\n# #include \"tracing/oprequest.h\". so better put them into\n\n# ${PROJECT_BINARY_DIR}/include, where acconfig.h is also located\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "systemd/CMakeLists.txt" : {
      "ObjectId" : "3b03b6e613217f2af1d3377366b36ea7ce705a9a",
      "LastModified" : "2017-08-08T11:37:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 149,
    "MAKEFILE" : 8,
    "ANT" : 1,
    "MAVEN" : 1
  },
  "ElapsedTime" : 24071
}