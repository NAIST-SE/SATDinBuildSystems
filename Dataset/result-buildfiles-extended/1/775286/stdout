{
  "Repository" : "775286",
  "Revision" : "HEAD",
  "ObjectId" : "4746003c78965b2b1bded54afdb0cba050f50dc1",
  "CommitTime" : "2019-04-11T17:12:49Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "a3e0a3a383e2ada3907d833eeefebcd6e587c85c",
      "LastModified" : "2019-01-10T22:49:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#========================\n\n# Project details / setup\n\n#========================\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Extract version from header, done first to satisfy CMP0048,\n\n# see `cmake --help-policy CMP0048` for more information.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Read in a file to memory.\n\n# File to parse for version number.\n\n# Where to store the results (should just be one line)\n\n# The space after is important to ignore 'POINTMATCHER_VERSION_INT'\n",
        "Line" : 12,
        "CharPositionInLine" : 39
      },
      "3" : {
        "Text" : "# If no matches found, something is wrong with PointMatcher.h\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Transform '#define POINTMATCHER_VERSION \"X.Y.Z\"' into 'X.Y.Z'\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# In 3.0+, project(...) should specify VERSION to satisfy CMP0048\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Check if 32 bit platform\n\n# By default, libpointmatcher is not compatible with and will not build on a\n\n# 32 bit system\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## WARNING: unsupported\n\n## To force install as a 32 bit library, set BUILD_32 to true\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Ensure proper build type\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#================= extra building definitions ==============================\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# For Windows\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# VS2012 does not support tuples correctly yet\n\n# defines M_PI for Visual Studio\n",
        "Line" : 71,
        "CharPositionInLine" : 40
      },
      "12" : {
        "Text" : "# this variable must be defined with VS2017 to acknowledge alignment changes of aligned_storage\n",
        "Line" : 73,
        "CharPositionInLine" : 55
      },
      "13" : {
        "Text" : "#======================= installation =====================================\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Offer the user the choice of overriding the installation directories\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Make relative paths absolute (needed later on)\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Install package.xml for catkin\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#===========================================================================\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#======================== External Dependencies ===============================\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# initially\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# compile local version of gtest and yaml-cpp\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#--------------------\n\n# DEPENDENCY:  boost\n\n#--------------------\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#--------------------\n\n# DEPENDENCY: eigen 3\n\n#--------------------\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Suppress Eigen's warning by adding it to the system's library\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TODO: this should be a more standard way\n\n#find_package(Eigen3 REQUIRED)\n\n#message(\"-- eigen3 , version ${EIGEN_VERSION}\")\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#--------------------\n\n# DEPENDENCY: nabo\n\n#--------------------\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#include(libnaboConfig)\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#--------------------\n\n# DEPENDENCY: OpenMP (optional)\n\n#--------------------\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#--------------------\n\n# DEPENDENCY: OpenCL (optional)\n\n#--------------------\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# if found, add\n",
        "Line" : 181,
        "CharPositionInLine" : 1
      },
      "30" : {
        "Text" : "#--------------------\n\n# DEPENDENCY: yaml-cpp (local or system, optional)\n\n#--------------------\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#note: this is not working....\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#get_property(yaml-cpp-pm_INCLUDE TARGET yaml-cpp-pm PROPERTY INCLUDE_DIRECTORIES)\n\n#include_directories(${yaml-cpp-pm_INCLUDE})\n",
        "Line" : 215,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "#--------------------\n\n# DEPENDENCY: rt (optional)\n\n#--------------------\n\n# link rt support if POSIX timers are used\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#============================= end dependencies =================================\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#========================== libpointmatcher itself ==============================\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Check the compiler version as we need full C++11 support.\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# using Clang\n",
        "Line" : 245,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "# using AppleClang\n",
        "Line" : 250,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "# using GCC\n",
        "Line" : 255,
        "CharPositionInLine" : 1
      },
      "40" : {
        "Text" : "# using MSVC\n",
        "Line" : 260,
        "CharPositionInLine" : 1
      },
      "41" : {
        "Text" : "# enable C++11 support.\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# SOURCE\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Pointmatcher lib and install\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#ErrorMinimizers\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#DataPointsFilters\t\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# MacOS and Windows deal with shared/dynamic library differently. For\n\n# simplicity, we only authorize static library in those cases.\n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#install(TARGETS pointmatcher LIBRARY DESTINATION ${INSTALL_LIB_DIR})\n",
        "Line" : 367,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# link all libraries to libpointmatcher\n",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "#target_link_libraries(pointmatcher ${yaml-cpp_LIBRARIES} ${libnabo_LIBRARIES})\n",
        "Line" : 380,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "#========================= Install header ===========================\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#========================= Documentation ===========================\n",
        "Line" : 402,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Note: there seems to be equations in the documentation leading to the\n\n# use of Latex anyway. This cause problems for user without latex...\n",
        "Line" : 410,
        "CharPositionInLine" : 1
      },
      "53" : {
        "Text" : "#=============== trigger other makefile ======================\n",
        "Line" : 432,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Example programs\n",
        "Line" : 434,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Evaluation programs\n",
        "Line" : 436,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Unit testing\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "#=================== allow find_package() =========================\n\n#\n\n# the following case be used in an external project requiring libpointmatcher:\n\n#  ...\n\n#  find_package(libpointmatcher)\n\n#  include_directories(${libpointmatcher_INCLUDE_DIRS})\n\n#  target_link_libraries(executableName ${libpointmatcher_LIBRARIES})\n\n#  ...\n",
        "Line" : 442,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# 1- local build #\n",
        "Line" : 451,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Register the local build in case one doesn't use \"make install\"\n",
        "Line" : 453,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Create variable for the local build tree\n",
        "Line" : 456,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Create variable with the library location\n",
        "Line" : 459,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Configure config file for local build tree\n",
        "Line" : 462,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# 2- installation build #\n",
        "Line" : 466,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Change the include location for the case of an install location\n",
        "Line" : 468,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "#FIXME: this will only be applied to installed files. Confirm that we want that.\n\n# gather all the includes but remove ones in the source tree\n\n# because we added an include for the local yaml-cpp-pm we should also remove it\n",
        "Line" : 471,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Change the library location for an install location\n",
        "Line" : 480,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# We put the generated file for installation in a different repository (i.e., ./CMakeFiles/)\n",
        "Line" : 484,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# The same versioning file can be used for both cases\n",
        "Line" : 488,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Install the libpointmatcherConfig.cmake and libpointmatcherConfigVersion.cmake\n",
        "Line" : 493,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# useful for TRADR european project. TODO: check to use the other install\n\n# required for ros deployment, too\n",
        "Line" : 501,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "#Handle pkg-config file\n",
        "Line" : 510,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# not an absolute path\n",
        "Line" : 514,
        "CharPositionInLine" : 37
      },
      "73" : {
        "Text" : "# for backward compatibility\n",
        "Line" : 524,
        "CharPositionInLine" : 57
      },
      "74" : {
        "Text" : "# for backward compatibility\n",
        "Line" : 527,
        "CharPositionInLine" : 38
      },
      "75" : {
        "Text" : "#====================== uninstall target ===============================\n",
        "Line" : 532,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 76
    },
    "UseDoxygen.cmake" : {
      "ObjectId" : "2dbfec0628b9cb1ec855bbeccacfaeffc30cdca0",
      "LastModified" : "2011-10-21T13:00:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Run Doxygen\n\n#\n\n# Adds a doxygen target that runs doxygen to generate the html\n\n# and optionally the LaTeX API documentation.\n\n# The doxygen target is added to the doc target as a dependency.\n\n# i.e.: the API documentation is built with:\n\n#  make doc\n\n#\n\n# USAGE: GLOBAL INSTALL\n\n#\n\n# Install it with:\n\n#  cmake ./ && sudo make install\n\n# Add the following to the CMakeLists.txt of your project:\n\n#  include(UseDoxygen OPTIONAL)\n\n# Optionally copy Doxyfile.in in the directory of CMakeLists.txt and edit it.\n\n#\n\n# USAGE: INCLUDE IN PROJECT\n\n#\n\n#  set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR})\n\n#  include(UseDoxygen)\n\n# Add the Doxyfile.in and UseDoxygen.cmake files to the projects source directory.\n\n#\n\n#\n\n# Variables you may define are:\n\n#  DOXYFILE_SOURCE_DIR - Path where the Doxygen input files are.\n\n#  \tDefaults to the current source and binary directory.\n\n#  DOXYFILE_OUTPUT_DIR - Path where the Doxygen output is stored. Defaults to \"doc\".\n\n#\n\n#  DOXYFILE_LATEX - Set to \"NO\" if you do not want the LaTeX documentation\n\n#  \tto be built.\n\n#  DOXYFILE_LATEX_DIR - Directory relative to DOXYFILE_OUTPUT_DIR where\n\n#  \tthe Doxygen LaTeX output is stored. Defaults to \"latex\".\n\n#\n\n#  DOXYFILE_HTML_DIR - Directory relative to DOXYFILE_OUTPUT_DIR where\n\n#  \tthe Doxygen html output is stored. Defaults to \"html\".\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Copyright (c) 2009, 2010 Tobias Rautenkranz <tobias@rautenkranz.ch>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## LaTeX\n",
        "Line" : 78,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "contrib/CMakeLists.txt" : {
      "ObjectId" : "cc8b13684e37cbcd7905327b459d76f261c3c44c",
      "LastModified" : "2014-07-24T14:45:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# External libraries packed with libpointmatcher\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GTest\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Wrapped yaml-cpp\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "contrib/yaml-cpp-pm/CMakeLists.txt" : {
      "ObjectId" : "9497379b7bcec66446227434cc4288d3ebbbbc40",
      "LastModified" : "2018-07-04T13:55:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###\n\n### Project options\n\n###\n\n## Project stuff\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Build options\n\n# --> General\n\n# see http://www.cmake.org/cmake/help/cmake2.6docs.html#variable:BUILD_SHARED_LIBS\n\n#     http://www.cmake.org/cmake/help/cmake2.6docs.html#command:add_library\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# --> Apple\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n### Sources, headers, directories and libs\n\n###\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###\n\n### General compilation settings\n\n###\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# use or build Windows DLL\n",
        "Line" : 58,
        "CharPositionInLine" : 41
      },
      "6" : {
        "Text" : "# GCC / Clang specialities\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "### General stuff\n",
        "Line" : 67,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# DLLs do not have a \"lib\" prefix\n\n# same for DLL import libs\n",
        "Line" : 69,
        "CharPositionInLine" : 38
      },
      "9" : {
        "Text" : "# CMake workaround (2.8.3)\n",
        "Line" : 71,
        "CharPositionInLine" : 35
      },
      "10" : {
        "Text" : "### Project stuff\n",
        "Line" : 74,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "#\n",
        "Line" : 78,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "#\n",
        "Line" : 83,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "#\n",
        "Line" : 85,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "#\n",
        "Line" : 91,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "#\n",
        "Line" : 93,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "###\n\n### Library\n\n###\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "contrib/yaml-cpp-pm/util/CMakeLists.txt" : {
      "ObjectId" : "22339f0258b3a4ec3456e78f135a3bdbceb93f08",
      "LastModified" : "2014-07-24T14:45:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "evaluations/CMakeLists.txt" : {
      "ObjectId" : "e80a8daf02b2e56abfed83f2fc573af6ec820c0e",
      "LastModified" : "2014-07-24T14:45:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "b79b786363dacca4d8eb913b7abb73ce2a4d9bb6",
      "LastModified" : "2018-07-04T13:55:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/demo_Qt/demo.pro" : {
      "ObjectId" : "1a3a9987fda9c52f1919bb03ebb631c8421bf493",
      "LastModified" : "2018-07-04T13:55:00Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Example of a configuration file for QT Creator\n\n#\n\n# NOTE: you will need to adapt the paths to your own system\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#QMAKE_CXXFLAGS += -mmacosx-version-min=10.7\n\n#QMAKE_LFLAGS   += -mmacosx-version-min=10.7\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/demo_cmake/CMakeLists.txt" : {
      "ObjectId" : "923cbbf3805daa70d3746683b80debb1635bff8d",
      "LastModified" : "2018-07-04T13:55:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is demo on how to link libpointmatcher to an\n\n# external project.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "utest/CMakeLists.txt" : {
      "ObjectId" : "ed412149a0c8ce67192f51e52775b10a47e44fa0",
      "LastModified" : "2018-07-04T13:55:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "utest/CTestCustom.cmake" : {
      "ObjectId" : "f716429895e085edaa9d1b12a273c7761c658f14",
      "LastModified" : "2018-07-04T13:55:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 10,
    "QMAKE" : 1
  },
  "ElapsedTime" : 1973
}