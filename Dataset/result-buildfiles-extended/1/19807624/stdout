{
  "Repository" : "19807624",
  "Revision" : "HEAD",
  "ObjectId" : "f1d4df71600e3505b545c5227253791800abb527",
  "CommitTime" : "2019-04-11T06:52:31Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "5abf7904a73007b7b4440c9b44a5dde416376883",
      "LastModified" : "2019-03-29T10:28:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# path to find own modules\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include own macros.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# # # # # # # # # # # # # # # # # # # # # #\n\n# CMake Options\n\n# # # # # # # # # # # # # # # # # # # # # #\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Offer the user the choice of overriding the installation directories\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#set(SYSCONFIG_INSTALL_DIR etc/carl/  CACHE PATH \"Installation for system configuration files)\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# path to put in the executables after building.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# RPATH settings\n\n# don't skip the full RPATH for the build tree\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# when building, don't use the install RPATH already (but only when installing)\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# the RPATH to be used when installing\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# don't add the automatically determined parts of the RPATH\n\n# which point to directories outside the build tree to the install RPATH\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# # # # # # # # # # # # # # # # # # # # # #\n\n# Required libraries\n\n# # # # # # # # # # # # # # # # # # # # # #\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#dl must be linked LAST as this is required for the stacktrace in util/platform.h\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Configure static analysis\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Configure documentation\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Include actual library\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Configure export\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Configure bindings\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Configure addons\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Configure packaging and CI\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "bindings/CMakeLists.txt" : {
      "ObjectId" : "8a58ff14c6f090e72d57f33ce30a2e0639539f8c",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(test_filenames \"\")\n\n#file(GLOB_RECURSE test_files \"test/*.java\")\n\n#foreach(file ${test_files})\n\n#\tget_filename_component(filename ${file} NAME_WE)\n\n#\tIF (NOT (${filename} MATCHES \"TestCarl\")) \n\n#\t\tset(test_filenames ${test_filenames} ${filename})\n\n#\tENDIF ()\n\n#endforeach()\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#enable_testing()\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#compile the tests\n\n#ADD_CUSTOM_COMMAND(\n\n#OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/test/*.class\n\n#COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_CURRENT_BINARY_DIR}/test\n\n#COMMAND ${Java_JAVAC_EXECUTABLE} -d ${CMAKE_CURRENT_BINARY_DIR}/test -cp \"${CMAKE_CURRENT_BINARY_DIR}:${CMAKE_CURRENT_SOURCE_DIR}/test:${CMAKE_CURRENT_BINARY_DIR}/jcarl.jar:/usr/share/java/junit.jar\"\n\n#${CMAKE_CURRENT_SOURCE_DIR}/test/*java\n\n#DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/test/*.java\n\n#)\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#build the jar\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add_test(NAME jcarl COMMAND ${Java_JAVA_EXECUTABLE} -classpath .:/usr/share/java/junit.jar:/usr/share/java/hamcrest-core.jar:../ -Djava.library.path=../ org.junit.runner.JUnitCore ${test_filenames}\n\n#WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/test )\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#this is for swig\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#For Python: Not working, however...\n\n#set(CMAKE_SWIG_FLAGS \"\")\n\n#set(CMAKE_SWIG_OUTDIR \"pycarl/pycarl\")\n\n#swig_add_module(pycarl python ${i_files})\n\n#swig_link_libraries(pycarl lib_carl)\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#ADD_CUSTOM_TARGET(tests\n\n#ALL DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/test/*.class ${CMAKE_CURRENT_BINARY_DIR}/jcarl.jar jcarl)\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#find_package(PythonInterp)\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#if (PYTHONINTERP_FOUND)\n\n#\tadd_test( NAME pycarl COMMAND  ${PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/test/runAllTests.py)\n\n#else()\n\n#\tstatus(WARNING \"Did not find a python interpreter, disabling pycarl tests.\")\n\n#endif()\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# include dir: bindings/jcarl/example/\n\n# libraries: bindings/jcarl/*.jar / *.so\n\n# javac test.java\n\n# java -cp <jarfile>:. test\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#execute test from within test directory: java -Djava.library.path=../ -cp ../:. TestBindings\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "cmake/FindBLISS.cmake" : {
      "ObjectId" : "3ed2303605b5c88058e6fa7fe24ead0cc17251fb",
      "LastModified" : "2018-03-10T16:52:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include dir\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Library files\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Version\n",
        "Line" : 20,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Cleanup\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/FindCLN.cmake" : {
      "ObjectId" : "af0db95880d34d8f6e0e383ded7f7cdf570a380e",
      "LastModified" : "2018-03-10T16:52:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include dir\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Library files\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Version\n",
        "Line" : 22,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Cleanup\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/FindCoCoA.cmake" : {
      "ObjectId" : "941ab3d0d3787925a9171b5fd8cd179c341fe053",
      "LastModified" : "2018-03-10T16:52:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include dir\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version\n",
        "Line" : 20,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "cmake/FindEIGEN3.cmake" : {
      "ObjectId" : "b452613d70c4d39c591c9190441942578c15cb22",
      "LastModified" : "2018-03-10T16:52:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find EIGEN3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(EIGEN3 3.1.2)\n\n# to require version 3.1.2 or newer of EIGEN3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/FindGINAC.cmake" : {
      "ObjectId" : "f018e5d6baef232372325639c69acbcf60dc8f6c",
      "LastModified" : "2018-03-10T16:52:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include dir\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version\n",
        "Line" : 20,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "cmake/FindGMP.cmake" : {
      "ObjectId" : "8b461bf34b1ab8c56b3c3f00af6504ef3951b501",
      "LastModified" : "2019-02-14T09:18:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include dir\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Library files\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Version\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindGMPXX.cmake" : {
      "ObjectId" : "c5f975443597324edd7d02c0417c4f3f5c55633f",
      "LastModified" : "2018-03-10T16:52:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include dir\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Library files\n",
        "Line" : 11,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "cmake/FindMPFR.cmake" : {
      "ObjectId" : "800fd4edaef61dcde6f42c7adc31626e069d88ef",
      "LastModified" : "2018-03-10T16:52:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2008-2010 Kent State University\n\n# Copyright (c) 2011-2012 Texas A&M University\n\n#\n\n# This file is distributed under the MIT License. See the accompanying file\n\n# LICENSE.txt or http://www.opensource.org/licenses/mit-license.php for terms\n\n# and conditions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FIXME: How do I find the version of MPFR that I want to use?\n\n# What versions are available?\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NOTE: MPFR prefix is understood to be the path to the root of the MPFR\n\n# installation library.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindZ3.cmake" : {
      "ObjectId" : "c5fbfdf30cf53c81ab42b9a4facdbdab54cf23d0",
      "LastModified" : "2018-03-10T16:52:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libz3\n\n# Once done this will define\n\n#  LIBZ3_FOUND - System has libz3\n\n#  LIBZ3_INCLUDE_DIRS - The libz3 include directories\n\n#  LIBZ3_LIBRARIES - The libraries needed to use libz3\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# dependencies\n\n# -- TODO -- needed?\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# find include dir by searching for a concrete file, which definetely must be in it\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#exemplary file, should only be available in z3\n",
        "Line" : 12,
        "CharPositionInLine" : 42
      },
      "4" : {
        "Text" : "# find library\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# set up the final variables\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# set the LIBZ3_FOUND variable by utilizing the following macro\n\n# (which also handles the REQUIRED and QUIET arguments)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# debug output to see if everything went well\n\n#message(${Z3_INCLUDE_DIR})\n\n#message(${Z3_LIBRARY})\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# make the set variables only visible in advanced mode\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/apple-llvm-toolchain.cmake" : {
      "ObjectId" : "2098cb8ff6b9369194507d9fd92c210d7e4402cf",
      "LastModified" : "2019-02-28T08:43:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Detect clang version, switch to homebrew llvm automatically\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/carlmacros.cmake" : {
      "ObjectId" : "76e1aa656abe202e4528aa2ca422b497697b4060",
      "LastModified" : "2019-03-10T16:34:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# File: macros.cmake\n\n# Authors: Igor N. Bongartz\n\n# Erstellt: 2015-06-11\n\n# Version: 2015-06-11\n\n#\n\n# This file contains several macros which are used in this project. Notice that several are copied straight from web ressources.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Workaround from https://cmake.org/Bug/view.php?id=15052\n",
        "Line" : 47,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# only from cmake 3.3 https://github.com/ceph/ceph/pull/7128\n\n#add_dependencies(${name}_${type} ${name}_${shortname}_${type})\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "cmake/clang-tidy.cmake" : {
      "ObjectId" : "c3f4181c2258b4f01a469c33ad088259ad1fbee6",
      "LastModified" : "2019-03-13T12:48:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Matches \"Clang\" and \"AppleClang\"\n",
        "Line" : 11,
        "CharPositionInLine" : 49
      },
      "1" : {
        "Text" : "# Modernize\n",
        "Line" : 26,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# CPP Core Guidelines\n",
        "Line" : 28,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# as of https://llvm.org/bugs/show_bug.cgi?id=31039\n",
        "Line" : 32,
        "CharPositionInLine" : 87
      },
      "4" : {
        "Text" : "# Fuchsia\n",
        "Line" : 35,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Google\n",
        "Line" : 38,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# HICPP\n",
        "Line" : 44,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# this triggers on every assert()\n",
        "Line" : 46,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "#message(STATUS \"Enabled checks for clang-tidy: ${CLANG_TIDY_CHECKS}\")\n",
        "Line" : 51,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 9
    },
    "cmake/compiler-options.cmake" : {
      "ObjectId" : "a0025feead2ca51f8cd6460a822d470eef8bef8c",
      "LastModified" : "2019-03-13T12:48:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Matches \"Clang\" and \"AppleClang\"\n",
        "Line" : 3,
        "CharPositionInLine" : 48
      },
      "1" : {
        "Text" : "#set(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} -print-search-dirs\")\n",
        "Line" : 54,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "cmake/cotire.cmake" : {
      "ObjectId" : "17ee28867dd6ac3743ab6580f78a0eebd1f4fec6",
      "LastModified" : "2018-04-20T09:54:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - cotire (compile time reducer)\n\n#\n\n# See the cotire manual for usage hints.\n\n#\n\n#=============================================================================\n\n# Copyright 2012-2013 Sascha Kratky\n\n#\n\n# Permission is hereby granted, free of charge, to any person\n\n# obtaining a copy of this software and associated documentation\n\n# files (the \"Software\"), to deal in the Software without\n\n# restriction, including without limitation the rights to use,\n\n# copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following\n\n# conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be\n\n# included in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\n# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\n# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\n# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\n# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\n# OTHER DEALINGS IN THE SOFTWARE.\n\n#=============================================================================\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# call cmake_minimum_required, but prevent modification of the CMake policy stack in include mode\n\n# cmake_minimum_required also sets the policy version as a side effect, which we have to avoid\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# we need the CMake variables CMAKE_SCRIPT_MODE_FILE and CMAKE_ARGV available since 2.8.5\n\n# we need APPEND_STRING option for set_property available since 2.8.6\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# use CMake's predefined compiler version variable (available since CMake 2.8.8)\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# cl.exe messes with the output streams unless the environment variable VS_UNICODE_OUTPUT is cleared\n",
        "Line" : 68,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# assume GCC like command line interface\n",
        "Line" : 75,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# get_filename_component returns extension from first occurrence of . in file name\n\n# this function computes the extension from last occurrence of . in file name\n",
        "Line" : 96,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# add to excluded sources, if file is not ignored and has correct language without having the correct extension\n",
        "Line" : 164,
        "CharPositionInLine" : 7
      },
      "8" : {
        "Text" : "# option with separate argument\n",
        "Line" : 279,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# remember option\n",
        "Line" : 283,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# option with joined argument\n",
        "Line" : 286,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# flush remembered option\n",
        "Line" : 290,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# add to unfiltered options\n",
        "Line" : 295,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# collect options from CMake language variables\n",
        "Line" : 318,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# add option from CMake target type variable\n",
        "Line" : 327,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# handle POSITION_INDEPENDENT_CODE property introduced with CMake 2.8.9 if policy CMP0018 is turned on\n",
        "Line" : 330,
        "CharPositionInLine" : 3
      },
      "16" : {
        "Text" : "# default to old behavior\n",
        "Line" : 333,
        "CharPositionInLine" : 3
      },
      "17" : {
        "Text" : "# NEW behavior: honor the POSITION_INDEPENDENT_CODE target property\n",
        "Line" : 340,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "# OLD behavior or policy not set: use the value of CMAKE_SHARED_LIBRARY_<Lang>_FLAGS\n",
        "Line" : 350,
        "CharPositionInLine" : 3
      },
      "19" : {
        "Text" : "# flags variable for module library uses different name SHARED_MODULE\n\n# (e.g., CMAKE_SHARED_MODULE_C_FLAGS)\n",
        "Line" : 352,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# add_definitions may have been used to add flags to the compiler command\n",
        "Line" : 362,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# add target compile options\n",
        "Line" : 369,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# platform specific flags\n",
        "Line" : 386,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# default include dirs\n",
        "Line" : 412,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# parse additional include directories from target compile flags\n",
        "Line" : 417,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "# target include directories\n",
        "Line" : 424,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# mimic CMake SystemTools::MakeCindentifier behavior\n",
        "Line" : 464,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# CMAKE_INTDIR for multi-configuration build systems\n",
        "Line" : 492,
        "CharPositionInLine" : 1
      },
      "28" : {
        "Text" : "# target export define symbol\n",
        "Line" : 496,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "# directory compile definitions\n",
        "Line" : 501,
        "CharPositionInLine" : 1
      },
      "30" : {
        "Text" : "# target compile definitions\n",
        "Line" : 510,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "# parse additional compile definitions from target compile flags\n\n# and don't look at directory compile definitions, which we already handled\n",
        "Line" : 519,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "# parse target compile flags omitting compile definitions and include directives\n",
        "Line" : 535,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# if path matches exactly, return short non-empty string\n",
        "Line" : 742,
        "CharPositionInLine" : 3
      },
      "34" : {
        "Text" : "# check header path against ignored and honored include directories\n",
        "Line" : 750,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "# header is inside, but could be become outside if there is a shorter outside match\n",
        "Line" : 753,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# header is outside\n",
        "Line" : 767,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# heuristic: ignore C headers with embedded parent directory references or \"-fixed\" or \"_fixed\" in path\n\n# these often stem from using GCC #include_next tricks, which may break the precompiled header compilation\n\n# with the error message \"error: no include path in which to search for header.h\"\n",
        "Line" : 778,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# check header file extension\n",
        "Line" : 788,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "# cl.exe /showIncludes output looks different depending on the language pack used, e.g.:\n\n# English: \"Note: including file:   C:\\directory\\file\"\n\n# German: \"Hinweis: Einlesen der Datei:   C:\\directory\\file\"\n\n# We use a very general regular expression, relying on the presence of the : characters\n",
        "Line" : 801,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# Visual Studio compiler output\n",
        "Line" : 806,
        "CharPositionInLine" : 3
      },
      "41" : {
        "Text" : "# GCC like output\n",
        "Line" : 815,
        "CharPositionInLine" : 3
      },
      "42" : {
        "Text" : "# prevent CMake macro invocation errors due to backslash characters in Windows paths\n",
        "Line" : 831,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# canonize slashes\n",
        "Line" : 834,
        "CharPositionInLine" : 1
      },
      "44" : {
        "Text" : "# prevent semicolon from being interpreted as a line separator\n",
        "Line" : 836,
        "CharPositionInLine" : 1
      },
      "45" : {
        "Text" : "# then separate lines\n",
        "Line" : 838,
        "CharPositionInLine" : 1
      },
      "46" : {
        "Text" : "# remove duplicate lines to speed up parsing\n",
        "Line" : 841,
        "CharPositionInLine" : 1
      },
      "47" : {
        "Text" : "# stack keeps track of inside/outside project status of processed header files\n",
        "Line" : 859,
        "CharPositionInLine" : 1
      },
      "48" : {
        "Text" : "# update stack\n",
        "Line" : 869,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# header is a candidate if it is outside project\n",
        "Line" : 885,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# get parent header file's inside/outside status\n",
        "Line" : 887,
        "CharPositionInLine" : 5
      },
      "51" : {
        "Text" : "# select header file if parent header file is inside project\n\n# (e.g., a project header file that includes a standard header file)\n",
        "Line" : 894,
        "CharPositionInLine" : 5
      },
      "52" : {
        "Text" : "# fix header's inside status on stack, it is ignored by extension now\n",
        "Line" : 903,
        "CharPositionInLine" : 8
      },
      "53" : {
        "Text" : "# for cl.exe do not keep unparsed lines which solely consist of a source file name\n",
        "Line" : 915,
        "CharPositionInLine" : 5
      },
      "54" : {
        "Text" : "# only consider existing source files for scanning\n",
        "Line" : 949,
        "CharPositionInLine" : 1
      },
      "55" : {
        "Text" : "# cl.exe messes with the output streams unless the environment variable VS_UNICODE_OUTPUT is cleared\n",
        "Line" : 968,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# Intel compiler requires hdrstop pragma to stop generating PCH file\n",
        "Line" : 1135,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# cl.exe options used\n\n# /nologo suppresses display of sign-on banner\n\n# /TC treat all files named on the command line as C source files\n\n# /TP treat all files named on the command line as C++ source files\n\n# /EP preprocess to stdout without #line directives\n\n# /showIncludes list include files\n",
        "Line" : 1167,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# append to list\n",
        "Line" : 1176,
        "CharPositionInLine" : 3
      },
      "59" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1179,
        "CharPositionInLine" : 3
      },
      "60" : {
        "Text" : "# GCC options used\n\n# -H print the name of each header file used\n\n# -E invoke preprocessor\n\n# -fdirectives-only do not expand macros, requires GCC >= 4.3\n",
        "Line" : 1183,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# append to list\n",
        "Line" : 1188,
        "CharPositionInLine" : 3
      },
      "62" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1194,
        "CharPositionInLine" : 3
      },
      "63" : {
        "Text" : "# Clang options used\n\n# -H print the name of each header file used\n\n# -E invoke preprocessor\n",
        "Line" : 1201,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "# append to list\n",
        "Line" : 1205,
        "CharPositionInLine" : 3
      },
      "65" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1208,
        "CharPositionInLine" : 3
      },
      "66" : {
        "Text" : "# Windows Intel options used\n\n# /nologo do not display compiler version information\n\n# /QH display the include file order\n\n# /EP preprocess to stdout, omitting #line directives\n\n# /TC process all source or unrecognized file types as C source files\n\n# /TP process all source or unrecognized file types as C++ source files\n",
        "Line" : 1213,
        "CharPositionInLine" : 3
      },
      "67" : {
        "Text" : "# append to list\n",
        "Line" : 1222,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1225,
        "CharPositionInLine" : 4
      },
      "69" : {
        "Text" : "# Linux / Mac OS X Intel options used\n\n# -H print the name of each header file used\n\n# -EP preprocess to stdout, omitting #line directives\n\n# -Kc++ process all source or unrecognized file types as C++ source files\n",
        "Line" : 1229,
        "CharPositionInLine" : 3
      },
      "70" : {
        "Text" : "# append to list\n",
        "Line" : 1234,
        "CharPositionInLine" : 4
      },
      "71" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1240,
        "CharPositionInLine" : 4
      },
      "72" : {
        "Text" : "# cl.exe options used\n\n# /Yc creates a precompiled header file\n\n# /Fp specifies precompiled header binary file name\n\n# /FI forces inclusion of file\n\n# /TC treat all files named on the command line as C source files\n\n# /TP treat all files named on the command line as C++ source files\n\n# /Zs syntax check only\n",
        "Line" : 1259,
        "CharPositionInLine" : 2
      },
      "73" : {
        "Text" : "# append to list\n",
        "Line" : 1269,
        "CharPositionInLine" : 3
      },
      "74" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1273,
        "CharPositionInLine" : 3
      },
      "75" : {
        "Text" : "# GCC / Clang options used\n\n# -x specify the source language\n\n# -c compile but do not link\n\n# -o place output in file\n",
        "Line" : 1277,
        "CharPositionInLine" : 2
      },
      "76" : {
        "Text" : "# append to list\n",
        "Line" : 1284,
        "CharPositionInLine" : 3
      },
      "77" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1287,
        "CharPositionInLine" : 3
      },
      "78" : {
        "Text" : "# Windows Intel options used\n\n# /nologo do not display compiler version information\n\n# /Yc create a precompiled header (PCH) file\n\n# /Fp specify a path or file name for precompiled header files\n\n# /FI tells the preprocessor to include a specified file name as the header file\n\n# /TC process all source or unrecognized file types as C source files\n\n# /TP process all source or unrecognized file types as C++ source files\n\n# /Zs syntax check only\n\n# /Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1295,
        "CharPositionInLine" : 3
      },
      "79" : {
        "Text" : "# append to list\n",
        "Line" : 1307,
        "CharPositionInLine" : 4
      },
      "80" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1314,
        "CharPositionInLine" : 4
      },
      "81" : {
        "Text" : "# Linux / Mac OS X Intel options used\n\n# -pch-dir location for precompiled header files\n\n# -pch-create name of the precompiled header (PCH) to create\n\n# -Kc++ process all source or unrecognized file types as C++ source files\n\n# -fsyntax-only check only for correct syntax\n\n# -Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1321,
        "CharPositionInLine" : 3
      },
      "82" : {
        "Text" : "# append to list\n",
        "Line" : 1332,
        "CharPositionInLine" : 4
      },
      "83" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1341,
        "CharPositionInLine" : 4
      },
      "84" : {
        "Text" : "# cl.exe options used\n\n# /Yu uses a precompiled header file during build\n\n# /Fp specifies precompiled header binary file name\n\n# /FI forces inclusion of file\n",
        "Line" : 1358,
        "CharPositionInLine" : 2
      },
      "85" : {
        "Text" : "# append to list\n",
        "Line" : 1365,
        "CharPositionInLine" : 4
      },
      "86" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1368,
        "CharPositionInLine" : 4
      },
      "87" : {
        "Text" : "# no precompiled header, force inclusion of prefix header\n",
        "Line" : 1372,
        "CharPositionInLine" : 3
      },
      "88" : {
        "Text" : "# append to list\n",
        "Line" : 1374,
        "CharPositionInLine" : 4
      },
      "89" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1377,
        "CharPositionInLine" : 4
      },
      "90" : {
        "Text" : "# GCC options used\n\n# -include process include file as the first line of the primary source file\n\n# -Winvalid-pch warns if precompiled header is found but cannot be used\n",
        "Line" : 1382,
        "CharPositionInLine" : 2
      },
      "91" : {
        "Text" : "# append to list\n",
        "Line" : 1386,
        "CharPositionInLine" : 3
      },
      "92" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1389,
        "CharPositionInLine" : 3
      },
      "93" : {
        "Text" : "# Clang options used\n\n# -include process include file as the first line of the primary source file\n\n# -Qunused-arguments don't emit warning for unused driver arguments\n",
        "Line" : 1393,
        "CharPositionInLine" : 2
      },
      "94" : {
        "Text" : "# append to list\n",
        "Line" : 1397,
        "CharPositionInLine" : 3
      },
      "95" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1400,
        "CharPositionInLine" : 3
      },
      "96" : {
        "Text" : "# Windows Intel options used\n\n# /Yu use a precompiled header (PCH) file\n\n# /Fp specify a path or file name for precompiled header files\n\n# /FI tells the preprocessor to include a specified file name as the header file\n\n# /Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1406,
        "CharPositionInLine" : 3
      },
      "97" : {
        "Text" : "# append to list\n",
        "Line" : 1414,
        "CharPositionInLine" : 5
      },
      "98" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1420,
        "CharPositionInLine" : 5
      },
      "99" : {
        "Text" : "# no precompiled header, force inclusion of prefix header\n",
        "Line" : 1427,
        "CharPositionInLine" : 4
      },
      "100" : {
        "Text" : "# append to list\n",
        "Line" : 1429,
        "CharPositionInLine" : 5
      },
      "101" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1432,
        "CharPositionInLine" : 5
      },
      "102" : {
        "Text" : "# Linux / Mac OS X Intel options used\n\n# -pch-dir location for precompiled header files\n\n# -pch-use name of the precompiled header (PCH) to use\n\n# -include process include file as the first line of the primary source file\n\n# -Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1437,
        "CharPositionInLine" : 3
      },
      "103" : {
        "Text" : "# append to list\n",
        "Line" : 1446,
        "CharPositionInLine" : 5
      },
      "104" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1452,
        "CharPositionInLine" : 5
      },
      "105" : {
        "Text" : "# no precompiled header, force inclusion of prefix header\n",
        "Line" : 1459,
        "CharPositionInLine" : 4
      },
      "106" : {
        "Text" : "# append to list\n",
        "Line" : 1461,
        "CharPositionInLine" : 5
      },
      "107" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1464,
        "CharPositionInLine" : 5
      },
      "108" : {
        "Text" : "# cl.exe messes with the output streams unless the environment variable VS_UNICODE_OUTPUT is cleared\n",
        "Line" : 1500,
        "CharPositionInLine" : 2
      },
      "109" : {
        "Text" : "# supported since Visual Studio C++ 6.0\n\n# and CMake does not support an earlier version\n",
        "Line" : 1513,
        "CharPositionInLine" : 2
      },
      "110" : {
        "Text" : "# GCC PCH support requires version >= 3.4\n",
        "Line" : 1517,
        "CharPositionInLine" : 2
      },
      "111" : {
        "Text" : "# all Clang versions have PCH support\n",
        "Line" : 1526,
        "CharPositionInLine" : 2
      },
      "112" : {
        "Text" : "# Intel PCH support requires version >= 8.0.0\n",
        "Line" : 1529,
        "CharPositionInLine" : 2
      },
      "113" : {
        "Text" : "# PCH compilation not supported by GCC / Clang for multi-architecture builds (e.g., i386, x86_64)\n",
        "Line" : 1541,
        "CharPositionInLine" : 2
      },
      "114" : {
        "Text" : "# start new unity file segment\n",
        "Line" : 1609,
        "CharPositionInLine" : 4
      },
      "115" : {
        "Text" : "# there is only a single unity file\n",
        "Line" : 1620,
        "CharPositionInLine" : 2
      },
      "116" : {
        "Text" : "# end with final unity file segment\n",
        "Line" : 1623,
        "CharPositionInLine" : 2
      },
      "117" : {
        "Text" : "# For Xcode, we completely hand off the compilation of the prefix header to the IDE\n",
        "Line" : 1684,
        "CharPositionInLine" : 4
      },
      "118" : {
        "Text" : "# MSVC uses the extension .pch added to the prefix header base name\n",
        "Line" : 1689,
        "CharPositionInLine" : 4
      },
      "119" : {
        "Text" : "# GCC / Clang look for a precompiled header corresponding to the prefix header with the extension .gch appended\n",
        "Line" : 1692,
        "CharPositionInLine" : 4
      },
      "120" : {
        "Text" : "# Intel uses the extension .pchi added to the prefix header base name\n",
        "Line" : 1695,
        "CharPositionInLine" : 4
      },
      "121" : {
        "Text" : "# depend on target's generated source files\n",
        "Line" : 1727,
        "CharPositionInLine" : 1
      },
      "122" : {
        "Text" : "# but omit all generated source files that have the COTIRE_EXCLUDED property set to true\n",
        "Line" : 1730,
        "CharPositionInLine" : 2
      },
      "123" : {
        "Text" : "# and omit all generated source files that have the COTIRE_DEPENDENCY property set to false explicitly\n",
        "Line" : 1735,
        "CharPositionInLine" : 2
      },
      "124" : {
        "Text" : "# depend on target source files marked with custom COTIRE_DEPENDENCY property\n",
        "Line" : 1751,
        "CharPositionInLine" : 1
      },
      "125" : {
        "Text" : "# set up variables to be configured\n",
        "Line" : 1766,
        "CharPositionInLine" : 1
      },
      "126" : {
        "Text" : "# remove COTIRE_VERBOSE which is passed as a CMake define on command line\n",
        "Line" : 1792,
        "CharPositionInLine" : 1
      },
      "127" : {
        "Text" : "# for Visual Studio and Intel, we attach the precompiled header compilation to the first source file\n\n# the remaining files include the precompiled header, see cotire_setup_pch_file_inclusion\n",
        "Line" : 1811,
        "CharPositionInLine" : 2
      },
      "128" : {
        "Text" : "# make first source file depend on prefix header\n",
        "Line" : 1824,
        "CharPositionInLine" : 3
      },
      "129" : {
        "Text" : "# mark first source file as cotired to prevent it from being used in another cotired target\n",
        "Line" : 1826,
        "CharPositionInLine" : 3
      },
      "130" : {
        "Text" : "# for makefile based generator, we add a custom command to precompile the prefix header\n",
        "Line" : 1830,
        "CharPositionInLine" : 2
      },
      "131" : {
        "Text" : "# for Visual Studio and Intel, we include the precompiled header in all but the first source file\n\n# the first source file does the precompiled header compilation, see cotire_setup_pch_file_compilation\n",
        "Line" : 1853,
        "CharPositionInLine" : 2
      },
      "132" : {
        "Text" : "# mark sources as cotired to prevent them from being used in another cotired target\n",
        "Line" : 1857,
        "CharPositionInLine" : 3
      },
      "133" : {
        "Text" : "# make source files depend on precompiled header\n",
        "Line" : 1866,
        "CharPositionInLine" : 3
      },
      "134" : {
        "Text" : "# for makefile based generator, we force the inclusion of the prefix header for a subset\n\n# of the source files, if this is a multi-language target or has excluded files\n",
        "Line" : 1871,
        "CharPositionInLine" : 3
      },
      "135" : {
        "Text" : "# mark sources as cotired to prevent them from being used in another cotired target\n",
        "Line" : 1879,
        "CharPositionInLine" : 3
      },
      "136" : {
        "Text" : "# make source files depend on precompiled header\n",
        "Line" : 1882,
        "CharPositionInLine" : 2
      },
      "137" : {
        "Text" : "# force the inclusion of the prefix header for the given source files\n",
        "Line" : 1889,
        "CharPositionInLine" : 1
      },
      "138" : {
        "Text" : "# mark sources as cotired to prevent them from being used in another cotired target\n",
        "Line" : 1896,
        "CharPositionInLine" : 1
      },
      "139" : {
        "Text" : "# make source files depend on prefix header\n",
        "Line" : 1898,
        "CharPositionInLine" : 1
      },
      "140" : {
        "Text" : "# for Xcode, we attach a pre-build action to generate the unity sources and prefix headers\n\n# if necessary, we also generate a single prefix header which includes all language specific prefix headers\n",
        "Line" : 1961,
        "CharPositionInLine" : 2
      },
      "141" : {
        "Text" : "# make Xcode precompile the generated prefix header with ProcessPCH and ProcessPCH++\n",
        "Line" : 1985,
        "CharPositionInLine" : 2
      },
      "142" : {
        "Text" : "# for makefile based generator, we force inclusion of the prefix header for all target source files\n\n# if this is a single-language target without any excluded files\n",
        "Line" : 1989,
        "CharPositionInLine" : 2
      },
      "143" : {
        "Text" : "# for Visual Studio and Intel, precompiled header inclusion is always done on the source file level\n\n# see cotire_setup_pch_file_inclusion\n",
        "Line" : 1993,
        "CharPositionInLine" : 3
      },
      "144" : {
        "Text" : "# set up compiled unity source dependencies\n\n# this ensures that missing source files are generated before the unity file is compiled\n",
        "Line" : 2015,
        "CharPositionInLine" : 2
      },
      "145" : {
        "Text" : "# unity file compilation results in potentially huge object file, thus use /bigobj by default unter MSVC and Windows Intel\n",
        "Line" : 2024,
        "CharPositionInLine" : 3
      },
      "146" : {
        "Text" : "# create a joint unity file from all unity file segments\n",
        "Line" : 2042,
        "CharPositionInLine" : 2
      },
      "147" : {
        "Text" : "# for Xcode, we cannot apply the precompiled header to individual sources, only to the whole target\n",
        "Line" : 2245,
        "CharPositionInLine" : 3
      },
      "148" : {
        "Text" : "# for Xcode, we cannot apply the required PRE_BUILD action to generate the prefix header to an OBJECT_LIBRARY target\n",
        "Line" : 2249,
        "CharPositionInLine" : 3
      },
      "149" : {
        "Text" : "# cache message to avoid redundant messages on re-configure\n",
        "Line" : 2263,
        "CharPositionInLine" : 3
      },
      "150" : {
        "Text" : "# use all available cores\n",
        "Line" : 2277,
        "CharPositionInLine" : 3
      },
      "151" : {
        "Text" : "# a unity source segment must not contain less than COTIRE_MINIMUM_NUMBER_OF_TARGET_SOURCES files\n",
        "Line" : 2282,
        "CharPositionInLine" : 2
      },
      "152" : {
        "Text" : "# check for user provided unity source file list\n",
        "Line" : 2307,
        "CharPositionInLine" : 1
      },
      "153" : {
        "Text" : "# check for user provided prefix header files\n",
        "Line" : 2323,
        "CharPositionInLine" : 2
      },
      "154" : {
        "Text" : "# user provided prefix header must be included\n",
        "Line" : 2344,
        "CharPositionInLine" : 3
      },
      "155" : {
        "Text" : "# mark target as cotired for language\n",
        "Line" : 2349,
        "CharPositionInLine" : 1
      },
      "156" : {
        "Text" : "# for makefile based generators, we add a custom target to trigger the generation of the cotire related files\n",
        "Line" : 2375,
        "CharPositionInLine" : 2
      },
      "157" : {
        "Text" : "# Visual Studio and Intel only create precompiled header as a side effect\n",
        "Line" : 2380,
        "CharPositionInLine" : 4
      },
      "158" : {
        "Text" : "# for other generators, we add the \"clean all\" target to clean up the precompiled header\n",
        "Line" : 2395,
        "CharPositionInLine" : 2
      },
      "159" : {
        "Text" : "# determine unity target sub type\n",
        "Line" : 2405,
        "CharPositionInLine" : 1
      },
      "160" : {
        "Text" : "# determine unity target sources\n",
        "Line" : 2415,
        "CharPositionInLine" : 1
      },
      "161" : {
        "Text" : "# remove source files that are included in the unity source\n",
        "Line" : 2421,
        "CharPositionInLine" : 3
      },
      "162" : {
        "Text" : "# if cotire is applied to a target which has not been added in the current source dir,\n\n# non-existing files cannot be referenced from the unity build target (this is a CMake restriction)\n",
        "Line" : 2429,
        "CharPositionInLine" : 3
      },
      "163" : {
        "Text" : "# add unity source files instead\n",
        "Line" : 2445,
        "CharPositionInLine" : 3
      },
      "164" : {
        "Text" : "# generate unity target\n",
        "Line" : 2452,
        "CharPositionInLine" : 1
      },
      "165" : {
        "Text" : "# copy output location properties\n",
        "Line" : 2462,
        "CharPositionInLine" : 1
      },
      "166" : {
        "Text" : "# copy output name\n",
        "Line" : 2491,
        "CharPositionInLine" : 1
      },
      "167" : {
        "Text" : "# copy compile stuff\n",
        "Line" : 2498,
        "CharPositionInLine" : 1
      },
      "168" : {
        "Text" : "# copy interface stuff\n",
        "Line" : 2507,
        "CharPositionInLine" : 1
      },
      "169" : {
        "Text" : "# copy link stuff\n",
        "Line" : 2512,
        "CharPositionInLine" : 1
      },
      "170" : {
        "Text" : "# copy Qt stuff\n",
        "Line" : 2522,
        "CharPositionInLine" : 1
      },
      "171" : {
        "Text" : "# copy cmake stuff\n",
        "Line" : 2525,
        "CharPositionInLine" : 1
      },
      "172" : {
        "Text" : "# copy Apple platform specific stuff\n",
        "Line" : 2528,
        "CharPositionInLine" : 1
      },
      "173" : {
        "Text" : "# copy Windows platform specific stuff\n",
        "Line" : 2532,
        "CharPositionInLine" : 1
      },
      "174" : {
        "Text" : "# use output name from original target\n",
        "Line" : 2539,
        "CharPositionInLine" : 1
      },
      "175" : {
        "Text" : "# use export symbol from original target\n",
        "Line" : 2544,
        "CharPositionInLine" : 1
      },
      "176" : {
        "Text" : "# trivial checks\n",
        "Line" : 2580,
        "CharPositionInLine" : 1
      },
      "177" : {
        "Text" : "# resolve alias\n",
        "Line" : 2586,
        "CharPositionInLine" : 1
      },
      "178" : {
        "Text" : "# check if target needs to be cotired for build type\n\n# when using configuration types, the test is performed at build time\n",
        "Line" : 2594,
        "CharPositionInLine" : 1
      },
      "179" : {
        "Text" : "# choose languages that apply to the target\n",
        "Line" : 2610,
        "CharPositionInLine" : 1
      },
      "180" : {
        "Text" : "# filter files in intermediate directory\n",
        "Line" : 2689,
        "CharPositionInLine" : 1
      },
      "181" : {
        "Text" : "# cotire is being run in script mode\n\n# locate -P on command args\n",
        "Line" : 2775,
        "CharPositionInLine" : 1
      },
      "182" : {
        "Text" : "# include target script if available\n",
        "Line" : 2787,
        "CharPositionInLine" : 1
      },
      "183" : {
        "Text" : "# the included target scripts sets up additional variables relating to the target (e.g., COTIRE_TARGET_SOURCES)\n",
        "Line" : 2789,
        "CharPositionInLine" : 2
      },
      "184" : {
        "Text" : "# for MSVC, compiler IDs may not always be set correctly\n",
        "Line" : 2798,
        "CharPositionInLine" : 2
      },
      "185" : {
        "Text" : "# check if target has been cotired for actual build type COTIRE_BUILD_TYPE\n",
        "Line" : 2812,
        "CharPositionInLine" : 1
      },
      "186" : {
        "Text" : "# cotire is being run in include mode\n\n# set up all variable and property definitions\n",
        "Line" : 2915,
        "CharPositionInLine" : 1
      },
      "187" : {
        "Text" : "# enable parallelization for generators that run multiple jobs by default\n",
        "Line" : 2955,
        "CharPositionInLine" : 3
      },
      "188" : {
        "Text" : "# generated Ninja build files do not work if the unity target produces the same output file as the cotired target\n",
        "Line" : 2996,
        "CharPositionInLine" : 3
      },
      "189" : {
        "Text" : "# define cotire cache variables\n",
        "Line" : 3003,
        "CharPositionInLine" : 1
      },
      "190" : {
        "Text" : "# define cotire directory properties\n",
        "Line" : 3056,
        "CharPositionInLine" : 1
      },
      "191" : {
        "Text" : "# define cotire target properties\n",
        "Line" : 3121,
        "CharPositionInLine" : 1
      },
      "192" : {
        "Text" : "# define cotire source properties\n",
        "Line" : 3275,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 193
    },
    "cmake/coverage.cmake" : {
      "ObjectId" : "135b8415b4ff131b74df2d746cbd4a589a372616",
      "LastModified" : "2019-03-18T18:11:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#message(SEND_ERROR \"Coverage collection with clang is not supported yet.\")\n\n#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fprofile-arcs -ftest-coverage -g -O0\")\n\n#set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} --coverage\")\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "cmake/export.cmake" : {
      "ObjectId" : "4db2c16e90a99179703fbccc74667bcad53c11d4",
      "LastModified" : "2019-03-13T12:48:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add all targets to the build-tree export set\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Export the package for use from the build-tree\n\n# (this registers the build-tree with a global CMake-registry)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ... for the build tree\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO looks not correct, this would be hypro_INCLUDE_DIR\n",
        "Line" : 58,
        "CharPositionInLine" : 51
      },
      "4" : {
        "Text" : "#SYSCONFIG_INSTALL_DIR\n",
        "Line" : 64,
        "CharPositionInLine" : 31
      },
      "5" : {
        "Text" : "# ... for the install tree\n",
        "Line" : 66,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#SYSCONFIG_INSTALL_DIR\n",
        "Line" : 74,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 7
    },
    "cmake/install.cmake" : {
      "ObjectId" : "a5395b0c3571155705108d6d022f0bea77fe2f29",
      "LastModified" : "2019-03-13T12:48:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/packaging.cmake" : {
      "ObjectId" : "af2c522a676e5c9bed30e99568a3536e45cdec8d",
      "LastModified" : "2018-03-10T16:52:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# DEB\n",
        "Line" : 18,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "cmake/prepare-ci.cmake" : {
      "ObjectId" : "d5fc04f2fe79af1383ec8343f2ac0ec8fc8259ce",
      "LastModified" : "2019-03-13T12:48:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Misc stuff to setup ci tools\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doxygen-conf/CMakeLists.txt" : {
      "ObjectId" : "e81bb8e1cfc04990997717f33602256c5713e460",
      "LastModified" : "2019-03-20T08:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n\n#                                                             #\n\n# File: doxygen-conf/CMakeLists.txt                           #\n\n#                                                             #\n\n# Project name: CARL                                          #\n\n# Contact: Florian Corzilius <corzilius@cs.rwth-aachen.de>,   #\n\n#          Ulrich Loup <loup@cs.rwth-aachen.de>               #\n\n# Project sourceforge page: http://smtrat.sourceforge.net/    #\n\n# Development status: beta                                    #\n\n# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n\n# Version: 2012-02-21                                         #\n\n# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Quick self-configuration if only doc is built\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Cmake doxygen settings\n\n# # # # # # # # # # # # #\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Cmake modules needed\n\n# # # # # # # # # # # #\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Doxygen settings\n\n# # # # # # # # # #\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Generate doxygen.conf\n\n# # # # # # # # # # # #\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Target for running doxygen\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Target for building the whole documentation\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "resources/addons/addons.cmake" : {
      "ObjectId" : "6094eea2f997d162ebf3d8c6dbe1c776b7e43a8b",
      "LastModified" : "2019-03-13T12:48:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "resources/addons/carl-parser.cmake" : {
      "ObjectId" : "31bcfce9b96b7c4fc20e397b2f7a11f284570d26",
      "LastModified" : "2019-03-13T12:48:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "resources/addons/pycarl.cmake" : {
      "ObjectId" : "097b8c6ab55b6664eca356d9d59d72877af19507",
      "LastModified" : "2019-03-13T12:48:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Python and Virtualenv. We don't actually use the output of the\n\n# find_package, but it'll give nicer errors.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "resources/bliss.cmake" : {
      "ObjectId" : "daeb43b2de6a64f527768db0121d3db334c21f69",
      "LastModified" : "2019-03-13T12:48:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "resources/bliss/CMakeLists.txt" : {
      "ObjectId" : "f5d66b92ab764fa102f7895691e245b3296471c3",
      "LastModified" : "2019-03-13T12:48:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use correct library extensions\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Collect source files\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Shared library\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Static library\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Install\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "resources/boost.cmake" : {
      "ObjectId" : "135768dfac44cd6eea7dcdb1187f6942a8763053",
      "LastModified" : "2019-03-13T12:48:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "resources/cln.cmake" : {
      "ObjectId" : "cce13cee966f567c557a4c3a56c37413c9a67974",
      "LastModified" : "2019-03-13T12:48:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "resources/cocoa.cmake" : {
      "ObjectId" : "dc67fae5e2796bd8d5100107c3ef67afce25dea8",
      "LastModified" : "2019-03-13T12:48:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "resources/doxygen.cmake" : {
      "ObjectId" : "22071bcb2cdfd838a514e6ea372bf38e7799c90d",
      "LastModified" : "2019-03-13T12:48:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If find_package succeeded but found an old version, the target is already created.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "resources/eigen3.cmake" : {
      "ObjectId" : "f3cb49b8849ad67f92e780c503d6e10bacc333fc",
      "LastModified" : "2019-03-13T12:48:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# due to https://gitlab.kitware.com/cmake/cmake/issues/17229\n",
        "Line" : 6,
        "CharPositionInLine" : 19
      },
      "CommentCount" : 1
    },
    "resources/ginac.cmake" : {
      "ObjectId" : "dae5107f473b78fbc8b1eeadf5598a7d3af42230",
      "LastModified" : "2019-03-13T12:48:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "resources/gmp.cmake" : {
      "ObjectId" : "b5ea811a4aad2e0933bfad510cac76d17758dd86",
      "LastModified" : "2019-03-13T12:48:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# First two calls fail, see for example https://travis-ci.org/smtrat/carl-windows/builds/451301207#L264\n\n# After that, it builds fine...\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "resources/google-benchmark.cmake" : {
      "ObjectId" : "7a1a71f6b360b959838baba4647356947b4e87b0",
      "LastModified" : "2019-03-13T12:48:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "resources/gtest.cmake" : {
      "ObjectId" : "a8f611ef9e1dbb03c5619c65d2f690ba7d3a92fd",
      "LastModified" : "2019-03-13T12:48:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "resources/resources.cmake" : {
      "ObjectId" : "8f531c987ac264cb0d0b693c2c6dbb80b1325f7d",
      "LastModified" : "2019-03-13T12:48:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############\n\n##### Generic resource configuration\n\n###############\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make sure that libraries from /usr/lib et al are found before OSX frameworks\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############\n\n##### Process resource dependencies\n\n###############\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###############\n\n##### Load resources\n\n#####\n\n##### Note that the resources may have dependencies among each other.\n\n###############\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##### GMP / GMPXX\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##### Boost\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##### Eigen3\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##### bliss\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##### CLN\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##### CoCoALib\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##### GiNaC\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##### GTest\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##### MPFR\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "##### Z3\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#load_library(carl Z3 4.0)\n",
        "Line" : 176,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "##### Doxygen\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "resources/z3.cmake" : {
      "ObjectId" : "8c4c840d4d421fbf16ff8c7d82e023d72dae8f0a",
      "LastModified" : "2019-03-13T12:48:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "c81bcdb82d9cc36fee974c5cdfa6608a7aaec6e1",
      "LastModified" : "2019-03-20T08:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Libraries..\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For unit tests.\n\n# We decided to always compile them, if gtest is present,\n\n# since non-compiling tests are a major blocker of development.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For examples.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/carl-cad/CMakeLists.txt" : {
      "ObjectId" : "d3f9089de730cf98fa610569ccad3911359dfb61",
      "LastModified" : "2019-03-20T08:12:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/carl-covering/CMakeLists.txt" : {
      "ObjectId" : "20c3a83a3ecff98bac7083cdef963e40a0df21bb",
      "LastModified" : "2019-03-20T08:12:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/carl-settings/CMakeLists.txt" : {
      "ObjectId" : "146bf88d4d642b954431aac461c857f17d15fc3a",
      "LastModified" : "2019-03-21T09:38:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/carl/CMakeLists.txt" : {
      "ObjectId" : "8d6994156702ab615632f83b76a8e3b4a72b99a1",
      "LastModified" : "2019-03-20T08:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include util to properly set up variables for configure_everything()\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Configure all .in files\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set_target_properties( lib_carl_static PROPERTIES LINK_SEARCH_END_STATIC TRUE )\n\n#set_target_properties( lib_carl_static PROPERTIES LINK_SEARCH_START_STATIC TRUE )\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/carl/util/CMakeLists.txt" : {
      "ObjectId" : "a28b596e2cf3f639588037b29af2458cc661d60f",
      "LastModified" : "2019-03-20T08:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#configure_file( ${CMAKE_SOURCE_DIR}/src/carl/util/CMakeOptions.cpp.in ${CMAKE_SOURCE_DIR}/src/carl/util/CMakeOptions.cpp )\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/examples/CMakeLists.txt" : {
      "ObjectId" : "514e6658a4ac3a71bf7b795ce84ea3164a0fb9a2",
      "LastModified" : "2019-03-20T08:12:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/CMakeLists.txt" : {
      "ObjectId" : "e8ccc78d4a541b69862850b689250d13b54e4c52",
      "LastModified" : "2019-03-20T08:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################\n\n# Unit Tests\n\n################################\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_subdirectory(numbers_boost)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add_subdirectory(jcarl)\n\n# Only for debugging.\n\n#add_subdirectory(debug)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/tests/applications/CMakeLists.txt" : {
      "ObjectId" : "75353355330f94fd265c0986d0290881416b814b",
      "LastModified" : "2019-03-20T08:12:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/benchmarks/CMakeLists.txt" : {
      "ObjectId" : "5cec56c9226ba6e99de8ef384987bf16796684bb",
      "LastModified" : "2019-03-20T08:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Path to the locally compiled z3 library\n\n#set(z3lib /usr/local/include/z3/build/libz3.so)\n\n#include_directories(/usr/local/include/z3/src/util/)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#if (COMPARE_WITH_Z3)\n\n#    include_directories(${Z3_INCLUDE_DIRS})\n\n#    target_link_libraries(runBenchmarks ${Z3_LIBRARIES})\n\n#endif()\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Write config.h \n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/tests/carl-cad/CMakeLists.txt" : {
      "ObjectId" : "19a59df6cb0acde5b99a1191a5e7b446f2062c1c",
      "LastModified" : "2019-03-20T08:12:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/carl-covering/CMakeLists.txt" : {
      "ObjectId" : "c4e32c569216e5a9937176b7a77115b91678d6b5",
      "LastModified" : "2019-03-20T08:12:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/carl-settings/CMakeLists.txt" : {
      "ObjectId" : "4aacc8068c09448cea6603ad2d10485bfccd166f",
      "LastModified" : "2019-03-20T08:12:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/core/CMakeLists.txt" : {
      "ObjectId" : "a9bb385484d04cb5fbe82ddb232a7b9d76bfe275",
      "LastModified" : "2019-03-20T08:12:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/debug/CMakeLists.txt" : {
      "ObjectId" : "195ccc65380951afb3361b5ea7722683fefdc9cd",
      "LastModified" : "2019-03-20T08:12:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/formula/CMakeLists.txt" : {
      "ObjectId" : "e4f1daab0f899d8ca97619363f541cf3dbbb4315",
      "LastModified" : "2019-03-20T08:12:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/groebner/CMakeLists.txt" : {
      "ObjectId" : "b92102805296cc336c458b0c62d3599dbcc76070",
      "LastModified" : "2019-03-20T08:12:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/interval/CMakeLists.txt" : {
      "ObjectId" : "c572b2c0b6b7e76b4388ac58fe8baf2fbfae40c4",
      "LastModified" : "2019-03-20T08:12:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/jcarl/CMakeLists.txt" : {
      "ObjectId" : "ffe286b1c7fae780f1ac84c42d588799fd184735",
      "LastModified" : "2019-03-20T08:12:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#TODO: probably find location of junit.jar automatically\n\n#compile the tests\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/tests/microbenchmarks/CMakeLists.txt" : {
      "ObjectId" : "4c3425883f7455c78f685f1a696105eb2a9038fa",
      "LastModified" : "2019-03-20T08:12:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/numbers/CMakeLists.txt" : {
      "ObjectId" : "e436bfa48b82522fc7cbae5d2e6110e7798b19bd",
      "LastModified" : "2019-03-20T08:12:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/pycarl/CMakeLists.txt" : {
      "ObjectId" : "38268783f67db330047d09164b7add85005f7909",
      "LastModified" : "2019-03-20T08:12:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/util/CMakeLists.txt" : {
      "ObjectId" : "2143a0c468725983b9e50fa52b96fb3d9a9d985c",
      "LastModified" : "2019-03-20T08:12:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 61
  },
  "ElapsedTime" : 2622
}