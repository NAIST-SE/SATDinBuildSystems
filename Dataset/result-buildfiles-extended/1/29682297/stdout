{
  "Repository" : "29682297",
  "Revision" : "HEAD",
  "ObjectId" : "ccbb52ea81c9c2b82e8fa3992eb5eae504613a4a",
  "CommitTime" : "2019-04-17T23:22:48Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "e54c28f31a6d118ed5fe31e29ccd426f22aa37ec",
      "LastModified" : "2019-03-25T15:21:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Caliper\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Version information\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add our module directory to the include path.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Optional Fortran\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Shared libs option\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# RPATH setup. By default, rpath everything.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# option(WITH_MPIT      \"Enable MPI-T\" FALSE)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# configure testing explicitly rather than with include(CTest) - avoids some clutter\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# the RPATH to be used when installing, but only if it's not a system directory\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Try to find static libs first for static builds\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Disable rpaths\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# libittnotify.a needs libdl\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Find PAPI\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Find libpfm\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Find dyninst\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# CMake already provides useful error message if DyninstConfig.cmake isn't found\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Find libunwind\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# For some reason Dyninst crashes when libdw is linked.\n\n# Detect this here and disable libdw.\n",
        "Line" : 173,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# pthread handling\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Find OMPT header\n",
        "Line" : 223,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Find MPI\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# set(CALIPER_HAVE_MPIT TRUE)\n\n# set(CALIPER_MPIT_CMAKE_MSG \"Yes\")\n",
        "Line" : 247,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "# Find Python\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Sampler is currently Linux-specific: check for Linux\n",
        "Line" : 265,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Linux PC sampler needs -lrt\n",
        "Line" : 269,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# PGI 17.x has issues with some constexpr constructors\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Create a config header file\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Include and install header files\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Create pkg-config .pc file\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Make caliper findable for cmake\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#\n\n# Print config summary\n\n#\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Install exports\n\n#install(EXPORT caliper DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake)\n",
        "Line" : 383,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 32
    },
    "cmake/FindCUPTI.cmake" : {
      "ObjectId" : "8e28738b2f540a30d6530a2a7aacba551660956f",
      "LastModified" : "2017-06-29T17:49:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find CUPTI library/header\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindITTAPI.cmake" : {
      "ObjectId" : "bfd53b293d5dc67ee874471d6ba3312feb3ec95d",
      "LastModified" : "2017-11-09T17:21:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Intel VTune Task API\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindLibDw.cmake" : {
      "ObjectId" : "a391b65d658ca285b8cc288f8910a675d4d61f02",
      "LastModified" : "2017-11-09T17:21:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find LIBDW headers and libraries.\n\n#\n\n# Usage of this module as follows:\n\n#\n\n#     find_package(ElfUtils)\n\n#\n\n# Variables used by this module, they can change the default behaviour and need\n\n# to be set before calling find_package:\n\n#\n\n#  LIBDW_PREFIX         Set this variable to the root installation of\n\n#                      libpapi if the module has problems finding the\n\n#                      proper installation path.\n\n#\n\n# Variables defined by this module:\n\n#\n\n#  LIBDW_FOUND              System has LIBDW libraries and headers\n\n#  LIBDW_LIBRARIES          The LIBDW library\n\n#  LIBDW_INCLUDE_DIRS       The location of LIBDW headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindLibpfm.cmake" : {
      "ObjectId" : "2b43d4aa86c757da301b4235c94c48c031dff52f",
      "LastModified" : "2017-11-09T17:21:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Find libpfm\n\n#\n\n# LIBPFM_INCLUDE_DIR - Path to libpfm.h\n\n# LIBPFM_LIBRARY     - List of libraries for using libpfm\n\n# LIBPFM_FOUND       - True if libpfm was found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# install dir specified, only search them\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# no install dir specified, look in default and PAPI\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "cmake/FindLibunwind.cmake" : {
      "ObjectId" : "04f325d920bc4a2483fce98df1f638ef0dfe55b9",
      "LastModified" : "2018-10-29T20:28:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Find libunwind\n\n#\n\n# LIBUNWIND_PREFIX      - Set to the libunwind installation directory\n\n#\n\n# LIBUNWIND_INCLUDE_DIR - Path to libunwind.h\n\n# LIBUNWIND_LIBRARIES   - List of libraries for using libunwind\n\n# LIBUNWIND_FOUND       - True if libunwind was found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindPAPI.cmake" : {
      "ObjectId" : "8ed258be18ae8682422d3cd42d1989803930bf78",
      "LastModified" : "2017-11-09T17:21:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find PAPI headers and libraries.\n\n#\n\n# Usage of this module as follows:\n\n#\n\n#     find_package(PAPI)\n\n#\n\n# Variables used by this module, they can change the default behaviour and need\n\n# to be set before calling find_package:\n\n#\n\n#  PAPI_PREFIX         Set this variable to the root installation of\n\n#                      libpapi if the module has problems finding the\n\n#                      proper installation path.\n\n#\n\n# Variables defined by this module:\n\n#\n\n#  PAPI_FOUND              System has PAPI libraries and headers\n\n#  PAPI_LIBRARIES          The PAPI library\n\n#  PAPI_INCLUDE_DIRS       The location of PAPI headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindSOSFlow.cmake" : {
      "ObjectId" : "98459401f7e29279f5e901a94c4a76ba35fd1454",
      "LastModified" : "2017-11-09T17:21:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find SOSFlow headers and libraries.\n\n#\n\n# Usage of this module as follows:\n\n#\n\n#     find_package(ElfUtils)\n\n#\n\n# Variables used by this module, they can change the default behaviour and need\n\n# to be set before calling find_package:\n\n#\n\n#  SOS_PREFIX         Set this variable to the root installation of\n\n#                      libpapi if the module has problems finding the\n\n#                      proper installation path.\n\n#\n\n# Variables defined by this module:\n\n#\n\n#  SOSFlow_FOUND              System has SOSFlow libraries and headers\n\n#  SOSFlow_LIBRARIES          The SOSFlow library\n\n#  SOSFlow_INCLUDE_DIRS       The location of SOSFlow headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindSphinx.cmake" : {
      "ObjectId" : "1b997865c89ed6bd19243130b98895f6f4c0dca0",
      "LastModified" : "2017-11-09T17:21:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# @file FindSphinx.cmake\n\n#       Find the Sphinx documentation generator\n\n#\n\n# Adapted from \n\n# http://ericscottbarr.com/blog/2012/03/sphinx-and-cmake-beautiful-documentation-for-c-projects/\n\n#\n\n# If successful the following variables will be defined\n\n# SPHINX_FOUND\n\n# SPHINX_EXECUTABLE\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindTAU.cmake" : {
      "ObjectId" : "9a524dbd71a14e44f754517cc32bbcfece2df608",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find TAU\n\n# ~~~~~~~~~~~~\n\n# Copyright (c) 2017, Kevin Huck <khuck at cs.uoregon.edu>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n\n# CMake module to search for TAU library\n\n#\n\n# If it's found it sets TAU_FOUND to TRUE\n\n# and following variables are set:\n\n#    TAU_INCLUDE_DIR\n\n#    TAU_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# First, look in only one variable, TAU_DIR.  This script will accept any of:\n\n# TAU_DIR, TAU_ROOT, TAU_DIR, TAU_ROOT, TAU_PREFIX, or environment variables\n\n# using the same set of names.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# All upper case options\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Check to make sure the TAU_MAKEFILE is set, so we know \n\n# which TAU configuration to use\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# First, see if the archfind program is in the tau directory\n\n# If so, use it.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Second, see if the tau_cxx.sh program is in our path.  \n\n# If so, use it.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#else()\n",
        "Line" : 132,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "#list(APPEND TAU_libs \"${OPT}\")\n",
        "Line" : 133,
        "CharPositionInLine" : 16
      },
      "8" : {
        "Text" : "# could be needed on some platforms\n",
        "Line" : 163,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# FIND_PATH and FIND_LIBRARY normally search standard locations\n\n# before the specified paths. To search non-standard paths first,\n\n# FIND_* is invoked first with specified paths and NO_DEFAULT_PATH\n\n# and then again with no specified paths to search the default\n\n# locations. When an earlier FIND_* succeeds, subsequent FIND_*s\n\n# searching for the same item do nothing. \n",
        "Line" : 168,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "cmake/WrapConfig.cmake" : {
      "ObjectId" : "adf3704677e6006ef5f5722d046ca62102266d8c",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# @file WrapConfig.cmake\n\n#       Contains macros for using the wrap script in a build environment.\n\n#\n\n# @author Todd Gamblin\n\n# @date 19 May 2011\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This variable allows users to use the wrap.py script directly, if desired.\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# add_wrapped_file(file_name wrapper_name [flags])\n\n#\n\n# This macro adds a command to generate <file_name> from <wrapper_name> to the\n\n# build.  Properties on <file_name> are also set so that CMake knows that it\n\n# is generated.\n\n#\n\n# Optionally, flags may be supplied to pass to the wrapper generator.\n\n#\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Play nice with FindPythonInterp -- use the interpreter if it was found,\n\n# otherwise use the script directly.\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Backward compatibility for old FindMPIs that did not have MPI_C_INCLUDE_PATH\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Play nice with FindMPI.  This will deduce the appropriate MPI compiler to use\n\n# for generating wrappers\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Prefer directly passed in flags.\n",
        "Line" : 62,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Otherwise, look in the source file properties\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# If no spefific flags, grab them from the WRAP_FLAGS environment variable.\n",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Mark target file as generated so the build system knows what to do w/it\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Add a command to automatically wrap files.\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Add generated files to list of things to be cleaned for the directory.\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "cmake/hostconfig/gitlab-butte-xlc.cmake" : {
      "ObjectId" : "819bd3648dd76db733bdcaf8249eca74265e7959",
      "LastModified" : "2019-04-17T23:22:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# DBO 2019-02-28: dyninst-10/boost installation on toss3 is broken, leading to\n\n# undefined references or non-existing include files. Turn it off for now.\n\n# Build with spack if dyninst is needed.\n\n#set(CMAKE_PREFIX_PATH \"/usr/tce/packages/dyninst/dyninst-10.0.0/lib/cmake\" CACHE PATH \"\")\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# turn off for now\n",
        "Line" : 20,
        "CharPositionInLine" : 37
      },
      "2" : {
        "Text" : "# default toss3 mvapich2-2.2 doesn't have any MPI-T stuff\n",
        "Line" : 23,
        "CharPositionInLine" : 37
      },
      "CommentCount" : 3
    },
    "cmake/hostconfig/gitlab-quartz-intel.cmake" : {
      "ObjectId" : "1336d8528bfd23c75276881860766bc4ea88686d",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# DBO 2019-02-28: dyninst-10/boost installation on toss3 is broken, leading to\n\n# undefined references or non-existing include files. Turn it off for now.\n\n# Build with spack if dyninst is needed.\n\n#set(CMAKE_PREFIX_PATH \"/usr/tce/packages/dyninst/dyninst-10.0.0/lib/cmake\" CACHE PATH \"\")\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# turn off for now\n",
        "Line" : 20,
        "CharPositionInLine" : 37
      },
      "2" : {
        "Text" : "# default toss3 mvapich2-2.2 doesn't have any MPI-T stuff\n",
        "Line" : 23,
        "CharPositionInLine" : 37
      },
      "CommentCount" : 3
    },
    "cmake/hostconfig/llnl-cab-gcc.cmake" : {
      "ObjectId" : "972efd91c5a698a6ca17f9b7db15f0bd0b27038b",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/hostconfig/llnl-ray-gcc.cmake" : {
      "ObjectId" : "844f41e1c24052f0b425caacbefbd416bd48957c",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/hostconfig/llnl-toss3-gcc.cmake" : {
      "ObjectId" : "c808080140ad9379da4f5a835c24974170e56cad",
      "LastModified" : "2019-02-28T20:04:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# DBO 2019-02-28: dyninst-10/boost installation on toss3 is broken, leading to\n\n# undefined references or non-existing include files. Turn it off for now.\n\n# Build with spack if dyninst is needed.\n\n#set(CMAKE_PREFIX_PATH \"/usr/tce/packages/dyninst/dyninst-10.0.0/lib/cmake\" CACHE PATH \"\")\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# turn off for now\n",
        "Line" : 20,
        "CharPositionInLine" : 37
      },
      "2" : {
        "Text" : "# default toss3 mvapich2-2.2 doesn't have any MPI-T stuff\n",
        "Line" : 23,
        "CharPositionInLine" : 37
      },
      "CommentCount" : 3
    },
    "cmake/hostconfig/llnl-vulcan.cmake" : {
      "ObjectId" : "95a41c77618557714a3cbbce496f3a96f78e9d31",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# wtf ... not defined in vulcan's cmake platform config\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "ae307b034ddc372e910c58b4af50d0607968b54b",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/doxygen/CMakeLists.txt" : {
      "ObjectId" : "48396dec941513feed3a37a8b6561962f5357742",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/sphinx/CMakeLists.txt" : {
      "ObjectId" : "75b1c599d62baf7b4b9473efb5b6430831323663",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build Sphinx documentation\n\n# Adapted from \n\n# http://ericscottbarr.com/blog/2012/03/sphinx-and-cmake-beautiful-documentation-for-c-projects/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/apps/CMakeLists.txt" : {
      "ObjectId" : "6dc8d10fc8d9fe4bbf8cb62439b7b65e3010bc8b",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake does not have proper compiler feature support for Intel compilers :-/\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "ext/CMakeLists.txt" : {
      "ObjectId" : "c20e61f03bc757f9964e94ac66de4b745f08b0a5",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/googletest/CMakeLists.txt" : {
      "ObjectId" : "0718fd73e615565124a047a645dcd584e4450d3a",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# --- googletest: download googletest at configure time\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prevent overriding our compiler/linker settings\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add googletest directories. Defines gtest and gtest-main targets.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ext/gotcha/CMakeLists.txt" : {
      "ObjectId" : "ac698c8785243dea10e13338b50ebf8cae5ed936",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# --- gotcha: download gotcha at configure time\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add gotcha directories. Defines gotcha targets.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "mpi/CMakeLists.txt" : {
      "ObjectId" : "701eec02f9e77537a4a25482843b069005cfe428",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake does not have proper compiler feature support for Intel compilers :-/\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "mpi/mpi-caliquery/CMakeLists.txt" : {
      "ObjectId" : "ed52c09f0db4d7ecf3ca6e3020df5423d3528ea5",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "mpi/mpi-common/CMakeLists.txt" : {
      "ObjectId" : "a1367ed7acafb2f9516b519d0d8e89f29030b503",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "mpi/mpi-rt/CMakeLists.txt" : {
      "ObjectId" : "c1192c5bbf7e1ef215d5c1acb3624330a0660207",
      "LastModified" : "2019-03-25T15:21:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find MpiEvents.h\n",
        "Line" : 6,
        "CharPositionInLine" : 49
      },
      "1" : {
        "Text" : "# add_subdirectory(services/mpit)\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "mpi/mpi-rt/services/mpireport/CMakeLists.txt" : {
      "ObjectId" : "2a1d2e53d2a40fcd2693ac6b297f4c5a229fb1d0",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "mpi/mpi-rt/services/mpit/CMakeLists.txt" : {
      "ObjectId" : "ce4d8a49bff82452d208aab37d3b7b7a9b756950",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "mpi/mpi-rt/services/mpit/mpitdesign/Makefile" : {
      "ObjectId" : "d8208251c306d2058ba6cdab20eb054563e3bc86",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "mpi/mpi-rt/services/mpiwrap/CMakeLists.txt" : {
      "ObjectId" : "1e6ea56ba95398304c2bbd8f5d8c62979b5b3cc7",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "8e80b25a0174b1f24a31ee902d5b305b2ce615ac",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake does not have proper compiler feature support for Intel compilers :-/\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "src/caliper-stub/CMakeLists.txt" : {
      "ObjectId" : "634cd2b7cfb1e7d2b8feaf6202a211482febb80e",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/caliper/CMakeLists.txt" : {
      "ObjectId" : "063e7cbf380e119f76bdba3391491345b76e49c0",
      "LastModified" : "2019-04-16T15:29:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  $<TARGET_OBJECTS:caliper-reporters>\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add reader lib to runtime (for report service)\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/caliper/test/CMakeLists.txt" : {
      "ObjectId" : "4fc366a5dc85a193df74b45f8c499ae570d2ee89",
      "LastModified" : "2019-04-16T15:29:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/common/CMakeLists.txt" : {
      "ObjectId" : "227883e30bc9f776dd57bcb6410f9851d80cb6ea",
      "LastModified" : "2019-04-16T15:29:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/common/c-util/CMakeLists.txt" : {
      "ObjectId" : "de9bfdc49954b486cf7a0c4ab61bedb1b4944fdc",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/common/test/CMakeLists.txt" : {
      "ObjectId" : "c7ea845869ca5f7b8667038ec5e4ab886e3f0eff",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/common/util/CMakeLists.txt" : {
      "ObjectId" : "d363b6373222d645e3d488defc28deb36590d83b",
      "LastModified" : "2019-04-16T15:29:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/fortran/CMakeLists.txt" : {
      "ObjectId" : "9c57f4732632bead87cae21b9b71d51d98a9e8f2",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/reader/CMakeLists.txt" : {
      "ObjectId" : "87cb64d08871a0f85e09f5e10b337961848c862e",
      "LastModified" : "2019-04-16T15:29:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/reader/test/CMakeLists.txt" : {
      "ObjectId" : "e33ddc5d04454e1a4040ba38a93751421a93e3e1",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/services/CMakeLists.txt" : {
      "ObjectId" : "7c6f47e1eb6c350ac1c93b0ce6b3e0b1dfe102f8",
      "LastModified" : "2019-04-16T15:29:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A macro to include service module source files in the caliper runtime lib\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# A macro to include service modules as object libs in the caliper runtime lib.\n\n# Used when service subdirectories needs additional includes etc.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Service subdirectories\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if (CALIPER_HAVE_SOS)\n\n#   add_subdirectory(sos)\n\n# endif()\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# if (CALIPER_HAVE_OMPT)\n\n#   add_subdirectory(ompt)\n\n# endif()\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build service management classes\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/services/aggregate/CMakeLists.txt" : {
      "ObjectId" : "a0283037451c7a3c57ff29b135971e1d9c232dd0",
      "LastModified" : "2019-04-16T15:29:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/services/alloc/CMakeLists.txt" : {
      "ObjectId" : "3f5dd75ddd3ca218ce18fa3a9b92555d383eeb46",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/services/callpath/CMakeLists.txt" : {
      "ObjectId" : "76333ede8fd3cf648c8cfa1cffc258f7e7448f3e",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/services/cupti/CMakeLists.txt" : {
      "ObjectId" : "73b7c2a2c32feb44612422aea72e84fbe072c909",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/services/cuptitrace/CMakeLists.txt" : {
      "ObjectId" : "faeb6eeb9d908565c845052ff3a7257729685317",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/services/debug/CMakeLists.txt" : {
      "ObjectId" : "a79e23881cef70c96b8377893e923674bde8f355",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/services/env/CMakeLists.txt" : {
      "ObjectId" : "0c18d0d4d779ae4cbaf407c1c9811a991ef35574",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/services/event/CMakeLists.txt" : {
      "ObjectId" : "d60e7215363af50bdac27ac604f7fde7a87e20e1",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/services/instlookup/CMakeLists.txt" : {
      "ObjectId" : "80c9afed2f4e38db0c5b27680e15f536c3f36825",
      "LastModified" : "2019-04-16T15:29:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# prevents undefined boost::system symbols in Caliper\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/services/libpfm/CMakeLists.txt" : {
      "ObjectId" : "b316d441580d4832cebf547d0711ada5063d5d84",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/services/nvprof/CMakeLists.txt" : {
      "ObjectId" : "a00b8deeccb91bca4c15e1bb823302a9b50334c6",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/services/ompt/CMakeLists.txt" : {
      "ObjectId" : "8563eb2e4f838f6c0e8ca70e10f9394c2048b1e2",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add_library(caliper-ompt ${CALIPER_OMPT_SOURCES})\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# target_link_libraries(caliper-ompt caliper-common)\n\n# target_link_libraries(caliper-ompt caliper)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# install(TARGETS caliper-ompt DESTINATION ${CMAKE_INSTALL_LIBDIR})\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/services/papi/CMakeLists.txt" : {
      "ObjectId" : "fa971cc523e16c51bd5121bb0a003fe1e8c972f2",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add_library(caliper-papi ${CALIPER_PAPI_SOURCES})\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# target_link_libraries(caliper-papi caliper-common)\n\n# target_link_libraries(caliper-papi caliper)\n\n# target_link_libraries(caliper-papi ${PAPI_LIBRARIES})\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# install(TARGETS caliper-papi DESTINATION ${CMAKE_INSTALL_LIBDIR})\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# target_link_libraries(caliper ${PAPI_LIBRARIES})\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/services/pthread/CMakeLists.txt" : {
      "ObjectId" : "9499a178803a764a602936af41ebc2f30587aec1",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/services/recorder/CMakeLists.txt" : {
      "ObjectId" : "c5c6ea8c6b3777c249f1a6fcaaebb2c1072a1ca7",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add_library(caliper-recorder ${CALIPER_RECORDER_SOURCES})\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# target_link_libraries(caliper-recorder caliper-common)\n\n# target_link_libraries(caliper-recorder caliper)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# install(TARGETS caliper-recorder DESTINATION ${CMAKE_INSTALL_LIBDIR})\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/services/report/CMakeLists.txt" : {
      "ObjectId" : "6e891172fd7c07a3243c36466c303fb8f16f33de",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/services/sampler/CMakeLists.txt" : {
      "ObjectId" : "1ba5d7ec5eeccde2485f9dab709d390f8cb3c7ca",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/services/sos/CMakeLists.txt" : {
      "ObjectId" : "4453796958f7379893a35fa29daa645153386c0b",
      "LastModified" : "2018-11-07T23:06:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/services/spot/CMakeLists.txt" : {
      "ObjectId" : "2bc3bb82cae3d5fe04d68a0c9475137d2207f737",
      "LastModified" : "2019-04-16T15:29:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/services/statistics/CMakeLists.txt" : {
      "ObjectId" : "d73611aee9e07083054f81a0cba8a166f5fb832c",
      "LastModified" : "2019-04-16T15:29:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/services/symbollookup/CMakeLists.txt" : {
      "ObjectId" : "d785d5d855f9ee3b6dae31705e797b78e6adb245",
      "LastModified" : "2019-04-16T15:29:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# prevents undefined boost::system symbols in Caliper\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/services/sysalloc/CMakeLists.txt" : {
      "ObjectId" : "00c5bc0f0f2fca4b59a9ee02bdeef313cfd09e59",
      "LastModified" : "2019-04-16T15:29:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/services/tau/CMakeLists.txt" : {
      "ObjectId" : "1d6dfbefdf1ec35507b53a01449652e15978e57c",
      "LastModified" : "2019-04-16T15:29:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/services/textlog/CMakeLists.txt" : {
      "ObjectId" : "3033be039ff7d5f15539e2076d3f31e6279e8559",
      "LastModified" : "2019-04-16T15:29:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/services/timestamp/CMakeLists.txt" : {
      "ObjectId" : "bf92a18a725ed81cf8e4d1970192a8df685b5b58",
      "LastModified" : "2019-04-16T15:29:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/services/trace/CMakeLists.txt" : {
      "ObjectId" : "41e50d50976935edc95b7f0461ba9fd6f1770422",
      "LastModified" : "2019-04-16T15:29:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/services/validator/CMakeLists.txt" : {
      "ObjectId" : "a6ec0f9d7ac27ac7d8b13043203de75ed6c6d0bd",
      "LastModified" : "2019-04-16T15:29:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/services/vtune/CMakeLists.txt" : {
      "ObjectId" : "4806cd6d3d2743a853f664aa4f8e2b997eb5960c",
      "LastModified" : "2019-04-16T15:29:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tools/CMakeLists.txt" : {
      "ObjectId" : "8679866299660431865b2476169853748a437ddd",
      "LastModified" : "2019-04-16T15:29:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tools/cali-graph/CMakeLists.txt" : {
      "ObjectId" : "e3aa7c14c9a5680cde73ce3e42ec750860228efa",
      "LastModified" : "2019-04-16T15:29:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tools/cali-query/CMakeLists.txt" : {
      "ObjectId" : "0e6b2ffe22ba4a13d4b0cf503e294e9cadcd4589",
      "LastModified" : "2019-04-16T15:29:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tools/cali-stat/CMakeLists.txt" : {
      "ObjectId" : "89a570b6f9f233f39f12c4ff84218166aa822ad2",
      "LastModified" : "2019-04-16T15:29:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tools/util/CMakeLists.txt" : {
      "ObjectId" : "9797dc8bf4f67f9f1a1c2bd39831b794ef4b1120",
      "LastModified" : "2019-04-16T15:29:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "c806d9ee998cbec4a5dca3f77b484ce557177dd8",
      "LastModified" : "2019-04-16T15:29:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake does not have proper compiler feature support for Intel compilers :-/\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "test/ci_app_tests/CMakeLists.txt" : {
      "ObjectId" : "6e27d51f366b4c29b60eb189aa5a55b3eee3a3d0",
      "LastModified" : "2019-04-16T15:29:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# build the C/C++ CI test apps\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add symlinks to the python test driver scripts\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 78,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1994
}