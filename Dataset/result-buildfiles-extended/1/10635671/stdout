{
  "Repository" : "10635671",
  "Revision" : "HEAD",
  "ObjectId" : "9d93056ba7c5fd6e808a4ae23bc6138dda1c8747",
  "CommitTime" : "2019-04-08T20:35:19Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "1faa8d6cda2bcd2c85c8be87d9e5840e188d5bd1",
      "LastModified" : "2019-03-17T22:28:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# project name, and type\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check cmake version\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# check compiler\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sanitize doesn't seem to work with pch on gcc\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Cmake doesn't seem to have a good way of saying \"try the latest standard, but\n\n# allow fallbacks all the way back to c++11\"\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Other compilers may use different option flags, or not support switching standard versions, so try anyway\n",
        "Line" : 91,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# MSVC has default flags that CMake doesn't set\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Clang whines about unused arguments, which is annoying (for example) when\n\n# using ccache and the clang exe never sees a non-preprocessed file, yet still\n\n# gets passed the -I include arguments\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# check dependencies and include libraries\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#All Non-windows platforms have case sensitive filesystems\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# apoc data copy\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Remove 'special' character (e.g. '/') as that screws up filenames etc. Abuse\n\n# MAKE_C_IDENTIFIER for this instead of a list of 'banned' chars\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Localisation\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "cmake/ccache.cmake" : {
      "ObjectId" : "d9b851de807ca79360381fa9d2ab8943880b3b83",
      "LastModified" : "2017-11-28T07:27:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Clang doesn't like 'unused' arguments, such as when ccache still passed through the '-I' options while requesting no preprocessor.\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "dependencies/CMakeLists.txt" : {
      "ObjectId" : "6c3ab4a7101b584d6eb5b3a90aed55c4da8a1812",
      "LastModified" : "2019-03-09T18:36:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# project name, and type\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check cmake version\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We probably don't support any platforms without the 64-bit offset file\n\n# ioctls\n\n# But macos fails to link with this enabled... so guess we can never read >4gb\n\n# files there?\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Only enable the subset of physfs we actually use\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# we don't care about the coding practices of external dependencies\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "forms/CMakeLists.txt" : {
      "ObjectId" : "28632c345faa73a702c5d99b85182937b0f1b77b",
      "LastModified" : "2018-12-12T18:26:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# project name, and type\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check cmake version\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "framework/CMakeLists.txt" : {
      "ObjectId" : "b479e0fe69f8be74cd24c3d5c84aa20cf055bafe",
      "LastModified" : "2019-03-17T22:28:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# project name, and type\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check cmake version\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# OSX doesn't seem to support the c++11 'thread_local' keyword\n",
        "Line" : 198,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Disable libunwind use on Apple\n",
        "Line" : 201,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# We use boost::locale for utf conversions and boost::filesystem for\n\n# serialization\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Require SDL2 for input/graphics/sound/pretty much everything\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Workaround vcpkg bug\n",
        "Line" : 251,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# Dialog is handled by SDL2\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Backtrace required libunwind\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Ubuntu 12.04 libunwind doesn't have a pkgconfig - try 'current' paths anyway\n",
        "Line" : 287,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "#HACK - this assumes the library path is already searched?\n",
        "Line" : 293,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "# OpenGL is required for any renderer\n",
        "Line" : 303,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "game/state/CMakeLists.txt" : {
      "ObjectId" : "9e0a86fa167b5904040b289674e9cacac1c8f2c0",
      "LastModified" : "2019-03-09T18:36:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# project name, and type\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check cmake version\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This needs to be public as gamestate_serialize_generated.h needs to be in\n\n# the path\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "game/ui/CMakeLists.txt" : {
      "ObjectId" : "14c99dfb4ea1eb1ad1ee33eef7081abd097df52d",
      "LastModified" : "2019-03-09T18:36:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# project name, and type\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check cmake version\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# version.h is used in the main menu, and that's generated in the bin dir\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "library/CMakeLists.txt" : {
      "ObjectId" : "9982a2f03fdf9eda5b99e7976eac90532af02ad8",
      "LastModified" : "2019-03-20T20:54:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# project name, and type\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check cmake version\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "a0521b41f527b068b9f2d96bb902efafd3f976c0",
      "LastModified" : "2019-03-09T18:36:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Just add all libs?\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# test_serialize requires args so needs to be slightly separate\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Just add all libs?\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# MSVC is bad at detecting utf8\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tools/CMakeLists.txt" : {
      "ObjectId" : "dec17b48c9a096f93d54055fe3e1d4cb7b22a4ce",
      "LastModified" : "2019-03-09T18:36:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# GameState serialization code generator isn't optional\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/code_generators/CMakeLists.txt" : {
      "ObjectId" : "d11d35e13d46eca2bc45712569c825e20a7c22d3",
      "LastModified" : "2019-03-09T18:36:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/code_generators/gamestate_serialize_gen/CMakeLists.txt" : {
      "ObjectId" : "8e1aa1c1319c59255110cfeabbc07159ad942426",
      "LastModified" : "2019-03-09T18:36:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# project name, and type\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check cmake version\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/code_generators/luagamestate_support_gen/CMakeLists.txt" : {
      "ObjectId" : "00b0e1b577871837ed6e169cef6058217279dc3f",
      "LastModified" : "2019-03-09T18:36:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# project name, and type\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check cmake version\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/dump_everything/CMakeLists.txt" : {
      "ObjectId" : "305e31289098f490bc304922a7cbd4dd60386f20",
      "LastModified" : "2019-03-09T18:36:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# project name, and type\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check cmake version\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/editor/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-03-09T18:36:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/extractors/CMakeLists.txt" : {
      "ObjectId" : "78ae147f37c2fc8355ac041d341a22fbbbdc66b7",
      "LastModified" : "2019-03-09T18:36:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# project name, and type\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check cmake version\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/imagedump/CMakeLists.txt" : {
      "ObjectId" : "4aacf8efe3c9656d16c9a015137cfd2ecfce1d29",
      "LastModified" : "2019-03-09T18:36:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# project name, and type\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check cmake version\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/serialization_tool/CMakeLists.txt" : {
      "ObjectId" : "0b51253f4999d036093534f794d0dc6a8060f78d",
      "LastModified" : "2019-03-09T18:36:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# project name, and type\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check cmake version\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 18
  },
  "ElapsedTime" : 3766
}