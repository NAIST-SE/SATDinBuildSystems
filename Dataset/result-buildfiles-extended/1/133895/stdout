{
  "Repository" : "133895",
  "Revision" : "HEAD",
  "ObjectId" : "798c605621b7b42a2e807b57a03e5013f2585678",
  "CommitTime" : "2013-04-26T12:11:20Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "c8ac146d8d0775a8dc77cb2b2427315fe1e568af",
      "LastModified" : "2013-02-10T21:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---Check if cmake has the required version-----------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---Set name of the project to \"ROOT\". Has to be done after check of cmake version--------------\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---Set pathes where to put the libraries, executables and headers------------------------------\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---Set the library version in the main CMakeLists.txt------------------------------------------\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---Where to look first for cmake modules, before ${CMAKE_ROOT}/Modules/ is checked-------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---Enable Folders in IDE like Visual Studio----------------------------------------------------\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#---Load some basic macros which are needed later for the confiuration and build----------------\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#---Enable CTest package -----------------------------------------------------------------------\n\n#include(CTest)\n\n#---Check if the user wants to build the project in the source directory------------------------\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#---Here we look for installed software and switch on and of the different build options--------\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#---Recurse into the given subdirectories.  This does not actually cause another cmake executable\n\n#  to run. The same process will walk through the project's entire directory structure.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#---Configure and install various files neded later and for clients -----------------------------\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#install(EXPORT ${CMAKE_PROJECT_NAME}Exports DESTINATION cmake/modules) \n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#---Installation of project-wise artifacts-------------------------------------------------------\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#---Configure Testing using CTest----------------------------------------------------------------\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#---Packaging-------------------------------------------------------------------------------------\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "Makefile" : {
      "ObjectId" : "8f3aca53621d6ceddf3ec4d389939e6fe2b5aea7",
      "LastModified" : "2013-02-26T18:20:15Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Top level Makefile for ROOT System\n\n# Copyright (c) 2000 Rene Brun and Fons Rademakers\n\n#\n\n# Author: Fons Rademakers, 29/2/2000\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##### Check version of GNU make #####\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##### Include path/location macros (result of ./configure) #####\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##### Include compiler overrides specified via ./configure #####\n\n##### However, if we are building packages or cleaning, we #####\n\n##### don't include this file since it may screw up things #####\n\n##### Included before Makefile.$ARCH only because of f77   #####\n\n##### if case has to be processed                          #####\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##### Include machine dependent macros                     #####\n\n##### However, if we are building packages or cleaning, we #####\n\n##### don't include this file since it may screw up things #####\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##### Include compiler overrides specified via ./configure #####\n\n##### However, if we are building packages or cleaning, we #####\n\n##### don't include this file since it may screw up things #####\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##### Include library dependencies for explicit linking #####\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##### Allow local macros #####\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##### Modules to build #####\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# allow local modules\n",
        "Line" : 274,
        "CharPositionInLine" : 24
      },
      "10" : {
        "Text" : "# removes duplicates\n",
        "Line" : 294,
        "CharPositionInLine" : 37
      },
      "11" : {
        "Text" : "# must be last, $(ALLLIBS) must be fully formed\n",
        "Line" : 297,
        "CharPositionInLine" : 23
      },
      "12" : {
        "Text" : "##### ROOT libraries #####\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ROOTLIBSDEP is intended to match the content of ROOTLIBS\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Force linking of not referenced libraries\n",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "##### Compiler output option #####\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# keep whitespace after \"-o\"\n",
        "Line" : 377,
        "CharPositionInLine" : 13
      },
      "17" : {
        "Text" : "##### clang or gcc version #####\n",
        "Line" : 379,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Apple version of clang has different -v layout\n",
        "Line" : 385,
        "CharPositionInLine" : 3
      },
      "19" : {
        "Text" : "##### f77 options #####\n",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "##### Store SVN revision number #####\n",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "##### Utilities #####\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "##### Compiler directives and run-control file #####\n",
        "Line" : 477,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##### Extra libs needed for \"static\" target #####\n",
        "Line" : 483,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##### libCore #####\n",
        "Line" : 498,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##### In case shared libs need to resolve all symbols (e.g.: aix, win32) #####\n",
        "Line" : 523,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "##### all #####\n",
        "Line" : 531,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "##### RULES #####\n",
        "Line" : 539,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Ignore gfortran warnings, our Fortran code is old, won't change and works\n",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Ignore gfortran warnings, our Fortran code is old, won't change and works\n",
        "Line" : 613,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "##### TARGETS #####\n",
        "Line" : 620,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# allow local rules\n",
        "Line" : 650,
        "CharPositionInLine" : 31
      },
      "32" : {
        "Text" : "# must be last include\n",
        "Line" : 659,
        "CharPositionInLine" : 32
      },
      "33" : {
        "Text" : "# Building from within an IDE, running configure\n",
        "Line" : 703,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Target Makefile is synonym for \"run (re-)configure\"\n\n# Makefile is target as we need to re-parse dependencies after\n\n# configure is run (as RConfigure.h changed etc)\n",
        "Line" : 710,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#\trpm -bb --rcfile rpm/rpmrc --buildroot `pwd`/rpm/tmp rpm/root.spec\n\n#\t@echo \"Redhat Linux packages done. They are put in '../<arch>'\"\n",
        "Line" : 817,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Use DESTDIR to set a sandbox prior to calling \"make install\", e.g.:\n\n#   ./configure --prefix=/usr/\n\n#   make\n\n#   DESTDIR=/tmp/root_install/ make install\n\n#   cd /tmp/root_install\n\n#   tar czf ~/root-vxxxx.tar.gz usr\n\n# Needed to create e.g. rpms.\n",
        "Line" : 1039,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# install directrories needed at run-time\n",
        "Line" : 1246,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 38,
      "Errorlog" : "line 11:55 token recognition error at: '\\1'\nline 775:29 token recognition error at: '\\1'\nline 775:32 token recognition error at: '\\2'\nline 788:29 token recognition error at: '\\1'\nline 788:32 token recognition error at: '\\2'\nline 789:48 token recognition error at: '\\1'\nline 807:29 token recognition error at: '\\1'\nline 807:32 token recognition error at: '\\2'\nline 828:29 token recognition error at: '\\1'\nline 828:32 token recognition error at: '\\2'\nline 840:29 token recognition error at: '\\1'\nline 840:32 token recognition error at: '\\2'\nline 850:29 token recognition error at: '\\1'\nline 850:32 token recognition error at: '\\2'\nline 881:29 token recognition error at: '\\1'\nline 881:32 token recognition error at: '\\2'\n"
    },
    "bindings/CMakeLists.txt" : {
      "ObjectId" : "b198f9480bbfa6ecb7451de3b77ff8e70f8e31e3",
      "LastModified" : "2011-05-27T16:43:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "bindings/pyroot/CMakeLists.txt" : {
      "ObjectId" : "28b6cdc6105432825e220e16a3d740c2eb4d7da7",
      "LastModified" : "2013-02-11T22:28:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT bindings/pyroot package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---Install python modules--------------------------------------------------\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---Install headers----------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "bindings/ruby/CMakeLists.txt" : {
      "ObjectId" : "f59541fd380b8f571ff1f2cc1bde4b108008d3a1",
      "LastModified" : "2012-02-09T08:24:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT bindings/ruby package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---Install headers----------------------------------------------------------\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "build/CMakeLists.txt" : {
      "ObjectId" : "c7e85f67374f5648eed52fd9f9705fe6fdc39787",
      "LastModified" : "2012-02-09T08:24:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT build package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/CMakeMacroParseArguments.cmake" : {
      "ObjectId" : "4cea370b83580f4cdddd6aaf91b2ddf0c40774d5",
      "LastModified" : "2011-05-27T16:43:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file defines the following macro for developers needing to parse\n\n# arguments passed to a CMake macro using names.\n\n#\n\n# PARSE_ARGUMENTS           - parse arguments supplied to a macro\n\n#\n\n# The PARSE_ARGUMENTS macro will take the arguments of another macro and define\n\n# several variables. The first argument to PARSE_ARGUMENTS is a prefix to put \n\n# on all variables it creates. The second argument is a list of names, and the \n\n# third argument is a list of options. Both of these lists should be quoted. \n\n# The rest of PARSE_ARGUMENTS are arguments from another macro to be parsed.\n\n#\n\n#    PARSE_ARGUMENTS(prefix arg_names options arg1 arg2...) \n\n#\n\n# For each item in options, PARSE_ARGUMENTS will create a variable with that \n\n# name, prefixed with prefix_. So, for example, if prefix is MY_MACRO and \n\n# options is OPTION1;OPTION2, then PARSE_ARGUMENTS will create the variables \n\n# MY_MACRO_OPTION1 and MY_MACRO_OPTION2. These variables will be set to true \n\n# if the option exists in the command line or false otherwise.\n\n#\n\n# For each item in arg_names, PARSE_ARGUMENTS will create a variable with that \n\n# name, prefixed with prefix_. Each variable will be filled with the arguments \n\n# that occur after the given arg_name is encountered up to the next arg_name \n\n# or the end of the arguments. All options are removed from these lists. \n\n# PARSE_ARGUMENTS also creates a prefix_DEFAULT_ARGS variable containing the \n\n# list of all arguments up to the first arg_name encountered.\n\n#\n\n# Here is a simple, albeit impractical, example of using PARSE_ARGUMENTS that \n\n# demonstrates its behavior.\n\n#\n\n# SET(arguments\n\n#   hello OPTION3 world\n\n#   LIST3 foo bar\n\n#   OPTION2\n\n#   LIST1 fuz baz\n\n#   )\n\n# PARSE_ARGUMENTS(ARG \"LIST1;LIST2;LIST3\" \"OPTION1;OPTION2;OPTION3\" ${arguments})\n\n#\n\n# PARSE_ARGUMENTS creates 7 variables and sets them as follows:\n\n#\n\n#    * ARG_DEFAULT_ARGS: hello;world\n\n#    * ARG_LIST1: fuz;baz\n\n#    * ARG_LIST2:\n\n#    * ARG_LIST3: foo;bar\n\n#    * ARG_OPTION1: FALSE\n\n#    * ARG_OPTION2: TRUE\n\n#    * ARG_OPTION3: TRUE \n\n#\n\n# If you don't have any options, use an empty string in its place.\n\n#\n\n# PARSE_ARGUMENTS(ARG \"LIST1;LIST2;LIST3\" \"\" ${arguments})\n\n#\n\n# Likewise if you have no lists.\n\n# \n\n# PARSE_ARGUMENTS(ARG \"\" \"OPTION1;OPTION2;OPTION3\" ${arguments})\n\n#\n\n#\n\n# Code and description copied from: \n\n#   http://www.cmake.org/Wiki/CMakeMacroParseArguments\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/CheckCXXCompilerFlag.cmake" : {
      "ObjectId" : "3618b71390e8a80bea37889d5bef257d5222480a",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check whether the CXX compiler supports a given flag.\n\n# CHECK_CXX_COMPILER_FLAG(<flag> <var>)\n\n#  <flag> - the compiler flag\n\n#  <var>  - variable to store the result\n\n# This internally calls the check_cxx_source_compiles macro.  See help\n\n# for CheckCXXSourceCompiles for a listing of variables that can\n\n# modify the build.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2010 Kitware, Inc.\n\n# Copyright 2006 Alexander Neundorf <neundorf@kde.org>\n\n# Copyright 2011 Matthias Kretz <kretz@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Some compilers do not fail with a bad flag\n",
        "Line" : 30,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# GNU\n",
        "Line" : 31,
        "CharPositionInLine" : 81
      },
      "4" : {
        "Text" : "# GNU\n\n# Clang\n\n# Clang \n\n# MSVC\n\n# MSVC, any lang\n\n# Intel\n\n# Intel\n\n# Intel\n\n# HP\n\n# SunPro\n\n# XL\n",
        "Line" : 32,
        "CharPositionInLine" : 60
      },
      "5" : {
        "Text" : "# AIX\n",
        "Line" : 43,
        "CharPositionInLine" : 69
      },
      "6" : {
        "Text" : "# PGI\n\n# Open64\n",
        "Line" : 44,
        "CharPositionInLine" : 60
      },
      "CommentCount" : 7
    },
    "cmake/modules/CheckCompiler.cmake" : {
      "ObjectId" : "ec9705499b79d69482776c64c6437d7c61e23d0c",
      "LastModified" : "2013-04-08T20:53:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#  CheckCompiler.cmake\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---Enable FORTRAN (unfortunatelly is not nowt possible in all cases)-------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#--Work-around for CMake issue 0009220\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#----Test if clang setup works----------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---Obtain the major and minor version of the GNU compiler-------------------------------------------\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---Set a default build type for single-configuration CMake generators if no build type is set------\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#---Check for cxx11 option------------------------------------------------------------\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#---Check for cxx11 option------------------------------------------------------------\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#---Need to locate thead libraries and options to set properly some compilation flags---------------- \n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#---Setup details depending opn the major platform type----------------------------------------------\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#---Print the final compiler flags--------------------------------------------------------------------\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "cmake/modules/FindAfterImage.cmake" : {
      "ObjectId" : "9b564c6a5f0f37260665e9795558d0f7bd984959",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the AfterImage includes and libraries.\n\n#  (See http://afterstep.sourceforge.net/afterimage/)\n\n# This module defines\n\n# AFTERIMAGE_INCLUDE_DIR, where to locate libAfterImage header files\n\n# AFTERIMAGE_LIBRARIES, the libraries to link against to use libAfterImage\n\n# AFTERIMAGE_FOUND. If false, you cannot build anything that requires libAfterImage\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---TODO (check that the version is sufficient)\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindAlien.cmake" : {
      "ObjectId" : "1d79d77475d7266ce1e97e4874be8c06a51dff0f",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the Alien includes and library.\n\n# \n\n# This module defines\n\n# ALIEN_INCLUDE_DIR, where to locate gapiUI.h file\n\n# ALIEN_LIBRARY, the libraries to link against to use Alien\n\n# ALIEN_LIBRARIES, the libraries to link against to use Alien\n\n# ALIEN_FOUND.  If false, you cannot build anything that requires Alien.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindBonjour.cmake" : {
      "ObjectId" : "22c5998c8227a52ac1580b69426c24122efba32f",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Bonjour \n\n# (See http://developer.apple.com/networking/bonjour/index.html)\n\n# By default available on MacOS X and on Linux via the Avahi package.\n\n# Check for libdns_sd\n\n#\n\n#  BONJOUR_INCLUDE_DIR - where to find dns_sd.h, etc.\n\n#  BONJOUR_LIBRARIES   - List of libraries when using ....\n\n#  BONJOUR_FOUND       - True if Bonjour libraries found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Bonjour is built-in on MacOS X / iOS (i.e. available in libSystem)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The compatibility layer is needed for the Bonjour record management.\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Also, the library is needed, as in Mac OS X. When found the compat\n\n# layer, also the other libraries must be in the same location.\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindCFITSIO.cmake" : {
      "ObjectId" : "01dd61288909b52b8613420e9bb613dfce9e7a26",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find CFITSIO\n\n# Once done this will define\n\n#\n\n#  CFITSIO_FOUND - system has CFITSIO\n\n#  CFITSIO_INCLUDE_DIR - the CFITSIO include directory\n\n#  CFITSIO_LIBRARIES - Link these to use CFITSIO\n\n#  CFITSIO_VERSION_STRING - Human readable version number of cfitsio\n\n#  CFITSIO_VERSION_MAJOR  - Major version number of cfitsio\n\n#  CFITSIO_VERSION_MINOR  - Minor version number of cfitsio\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Jasem Mutlaq <mutlaqja@ikarustech.com>\n\n# Based on FindLibfacile by Carsten Niehaus, <cniehaus@gmx.de>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already, be quiet\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# JM: Packages from different distributions have different suffixes\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Find the version of the cfitsio header\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "cmake/modules/FindCastor.cmake" : {
      "ObjectId" : "8c218f2ecdffc48e8325377b7041df7e969e7a06",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find CASTOR \n\n#  (See http://savannah.cern.ch/files/?group=castor)\n\n#  Check for rfio_api.h, stager_api.h for CASTOR 2 and libshift\n\n#\n\n#  CASTOR_INCLUDE_DIR - where to find rfio_api.h, etc.\n\n#  CASTOR_LIBRARIES   - List of libraries when using ....\n\n#  CASTOR_FOUND       - True if CASTOR 2  libraries found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindFFTW.cmake" : {
      "ObjectId" : "6a82bc7499db8f1cb8d12446935eba6a983f34f1",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the FFTW includes and library.\n\n# \n\n# This module defines\n\n# FFTW_INCLUDE_DIR, where to locate fftw3.h file\n\n# FFTW_LIBRARIES, the libraries to link against to use fftw3\n\n# FFTW_FOUND.  If false, you cannot build anything that requires fftw3.\n\n# FFTW_LIBRARY, where to find the libfftw3 library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindFTGL.cmake" : {
      "ObjectId" : "9c9c93202133377850072990a816fa6edd3c112b",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#TODO: create find script for FTGL. in the moment we will use the builtin\n\n#      version",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindGCCXML.cmake" : {
      "ObjectId" : "b65372e6ab8eb0a537ef2a901d921851880c4aec",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GCCXML\n\n#\n\n#  GCCXML_EXECUTABLE  - path to the GCCXML executable\n\n#  GCCXML_FOUND       - True if GCCXML found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindGEANT4.cmake" : {
      "ObjectId" : "b351c088900dcc0e037376f12d47d522edb52a53",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GEANT4\n\n# Once done this will define\n\n#\n\n#  GEANT4_FOUND - system has GEANT4\n\n#  GEANT4_INCLUDE_DIR - the GEANT4 include directory\n\n#  GEANT4_LIBRARIES - The libraries needed to use GEANT4\n\n#  GEANT4_DEFINITIONS - Compiler switches required for using GEANT4\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    message(STATUS \"Found ${GEANT4_LIBRARY_DIR}\")\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindGEANT4VMC.cmake" : {
      "ObjectId" : "5dec1b5ef28932b147a17600311afd350e4cda20",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GEANT4VMC\n\n# Once done this will define\n\n#\n\n#  GEANT4VMC_FOUND - system has GEANT3\n\n#  GEANT4VMC_INCLUDE_DIR - the GEANT3 include directory\n\n#  GEANT4VMC_LIBRARIES - The libraries needed to use GEANT3\n\n#  GEANT4VMC_DEFINITIONS - Compiler switches required for using GEANT3\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check for existence of header file, which is needed in CbmRunConfiguration\n\n# The file is only present in old versions of VMC\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindGSL.cmake" : {
      "ObjectId" : "c7d51863d549c490f1c0a24986d703c77b12465c",
      "LastModified" : "2013-04-08T20:53:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find gnu scientific library GSL\n\n# See\n\n# http://www.gnu.org/software/gsl/  and\n\n# http://gnuwin32.sourceforge.net/packages/gsl.htm\n\n#\n\n# Based on a script of Felix Woelk and Jan Woetzel\n\n# (www.mip.informatik.uni-kiel.de)\n\n#\n\n# It defines the following variables:\n\n#  GSL_FOUND - system has GSL lib\n\n#  GSL_INCLUDE_DIRS - where to find headers\n\n#  GSL_LIBRARIES - full path to the libraries\n\n#  GSL_LIBRARY_DIRS, the directory where the PLplot library is found.\n\n#  GSL_CFLAGS, additional c (c++) required\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Windows, but not for Cygwin and MSys where gsl-config is available\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# look for headers\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# look for gsl library\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# look for gsl cblas library\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# run the gsl-config program to get cxxflags\n",
        "Line" : 72,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# parse definitions from cflags; drop -D* from CFLAGS\n",
        "Line" : 83,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# parse include dirs from cflags; drop -I prefix\n",
        "Line" : 89,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# run the gsl-config program to get the libs\n",
        "Line" : 100,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# extract linkdirs (-L) for rpath (i.e., LINK_DIRECTORIES)\n",
        "Line" : 111,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 10
    },
    "cmake/modules/FindGraphviz.cmake" : {
      "ObjectId" : "05a1f4fba674936df96633638d0414d3fd4c8691",
      "LastModified" : "2013-04-08T20:53:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find Graphviz. \n\n# This will define:\n\n# GRAPHVIZ_FOUND - system has Graphviz\n\n# GRAPHVIZ_INCLUDE_DIR - the Graphviz include directory\n\n# GRAPHVIZ_LIBRARY - Link these to use Graphviz\n\n# GRAPHVIZ_DEFINITIONS - Compiler switches required for using Graphviz\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindKerberos5.cmake" : {
      "ObjectId" : "1912ff9db46127e99d5dd91a72e6c7df9e4be8c3",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Kerberos5 \n\n#  Check for libkrb5.a\n\n#\n\n#  KRB5_INCLUDE_DIR - where to find krb5.h, etc.\n\n#  KRB5_LIBRARIES   - List of libraries when using ....\n\n#  KRB5_FOUND       - True if Kerberos 5 libraries found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindLZMA.cmake" : {
      "ObjectId" : "c83644bd419dfcd79a13e39d92d8ea82eb3cff13",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the LZMA includes and library.\n\n# \n\n# This module defines\n\n# LZMA_INCLUDE_DIR, where to locate LZMA header files\n\n# LZMA_LIBRARIES, the libraries to link against to use Pythia6\n\n# LZMA_FOUND.  If false, you cannot build anything that requires Pythia6.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindMonalisa.cmake" : {
      "ObjectId" : "43d38c14a604dc824e905fe778b7d067817ed372",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the Monalisa includes and library.\n\n# \n\n# This module defines\n\n# MONALISA_INCLUDE_DIR, where to locate ApMon.h file\n\n# MONALISA_LIBRARY, the libraries to link against to use Monalisa\n\n# MONALISA_LIBRARIES, the libraries to link against to use Monalisa\n\n# MONALISA_FOUND.  If false, you cannot build anything that requires Monalisa.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindMySQL.cmake" : {
      "ObjectId" : "03846bb7359115b7ed2b35b71e2e8da9af7cd642",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the native MySQL includes and library\n\n#\n\n#  MYSQL_INCLUDE_DIR - where to find mysql.h, etc.\n\n#  MYSQL_LIBRARIES   - List of libraries when using MySQL.\n\n#  MYSQL_FOUND       - True if MySQL found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindODBC.cmake" : {
      "ObjectId" : "d857abc44119b4d4f7a59e87a94de90403ab00d1",
      "LastModified" : "2013-04-08T20:53:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the ODBC driver manager includes and library.\n\n# \n\n# ODBC is an open standard for connecting to different databases in a\n\n# semi-vendor-independent fashion.  First you install the ODBC driver\n\n# manager.  Then you need a driver for each separate database you want\n\n# to connect to (unless a generic one works).  VTK includes neither\n\n# the driver manager nor the vendor-specific drivers: you have to find\n\n# those yourself.\n\n#  \n\n# This module defines\n\n# ODBC_INCLUDE_DIR where to find sql.h\n\n# ODBC_LIBRARIES, the libraries to link against to use ODBC\n\n# ODBC_FOUND.  If false, you cannot build anything that requires MySQL.\n\n# also defined, but not for general use is\n\n# ODBC_LIBRARY, where to find the ODBC driver manager library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---For the windows platform ODBC is located automatically\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindOpenGL.cmake" : {
      "ObjectId" : "88f531b5391757e5c1e27c7f25ad9aaa7da300cb",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find OpenGL\n\n# Once done this will define\n\n#  \n\n#  OPENGL_FOUND        - system has OpenGL\n\n#  OPENGL_XMESA_FOUND  - system has XMESA\n\n#  OPENGL_GLU_FOUND    - system has GLU\n\n#  OPENGL_INCLUDE_DIR  - the GL include directory\n\n#  OPENGL_LIBRARIES    - Link these to use OpenGL and GLU\n\n#   \n\n# If you want to use just GL you can use these values\n\n#  OPENGL_gl_LIBRARY   - Path to OpenGL Library\n\n#  OPENGL_glu_LIBRARY  - Path to GLU Library\n\n#  \n\n# On OSX default to using the framework version of opengl\n\n# People will have to change the cache values of OPENGL_glu_LIBRARY \n\n# and OPENGL_gl_LIBRARY to use OpenGL with X11 on OSX\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Handle HP-UX cases where we only want to find OpenGL in either hpux64\n\n# or hpux32 depending on if we're doing a 64 bit build.\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# The first line below is to make sure that the proper headers\n\n# are used on a Linux machine with the NVidia drivers installed.\n\n# They replace Mesa with NVidia's own library but normally do not\n\n# install headers and that causes the linking to\n\n# fail since the compiler finds the Mesa headers but NVidia's library.\n\n# Make sure the NVIDIA directory comes BEFORE the others.\n\n#  - Atanas Georgiev <atanas@cs.columbia.edu>\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# On Unix OpenGL most certainly always requires X11.\n\n# Feel free to tighten up these conditions if you don't \n\n# think this is always true.\n\n# It's not true on OSX.\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# This deprecated setting is for backward compatibility with CMake1.4\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# This deprecated setting is for backward compatibility with CMake1.4\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/modules/FindOracle.cmake" : {
      "ObjectId" : "fbeae90a05ee7a363120df676b453c3c3b1a40d4",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TOra: Configure Oracle libraries\n\n#\n\n# ORACLE_FOUND - system has Oracle OCI\n\n# ORACLE_INCLUDE_DIR - where to find oci.h\n\n# ORACLE_LIBRARIES - the libraries to link against to use Oracle OCI\n\n#\n\n# copyright (c) 2007 Petr Vanek <petr@scribus.info>\n\n# Redistribution and use is allowed according to the terms of the GPLv2 license.\n\n# Mofified by Pere Mato\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# sdk\n",
        "Line" : 23,
        "CharPositionInLine" : 12
      },
      "2" : {
        "Text" : "# xe on windows\n",
        "Line" : 25,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# xe on windows\n",
        "Line" : 35,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# guess OCI version\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# WARNING!\n\n# MATCHES operator is using Cmake regular expression.\n\n# so the e.g. 9.* does not expand like shell file mask\n\n# but as \"9 and then any sequence of characters\"\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# do not change the order of the ora10 checking!\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# there *must* be OCI version defined for internal libraries\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# setup the variables for silent continue\n",
        "Line" : 126,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "#  set(INCLUDE_DIRS \"\n\n#      include=${ORACLE_HOME}/precomp/public\n\n#      include=${ORACLE_HOME}/rdbms/public\n\n#      include=${ORACLE_HOME}/rdbms/demo\n\n#      include=${ORACLE_HOME}/plsql/public\n\n#      include=${ORACLE_HOME}/network/public\n\n#  \")\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ${SYS_INCLUDE} ${INCLUDE_DIRS})\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#  MESSAGE(\"PROCFLAGS: ${PROCFLAGS}\")\n\n#  MESSAGE(\"INCLUDE_DIRS: ${INCLUDE_DIRS}\")\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "cmake/modules/FindPCRE.cmake" : {
      "ObjectId" : "f3cb6415956e54430984f4ad93edf801bf3ca547",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the PCRE includes and library.\n\n# \n\n# This module defines\n\n# PCRE_INCLUDE_DIR, where to locate PCRE header files\n\n# PCRE_LIBRARIES, the libraries to link against to use Pythia6\n\n# PCRE_FOUND.  If false, you cannot build anything that requires Pythia6.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindPLUTO.cmake" : {
      "ObjectId" : "b06454c7d610787dd2bff9f795a1e88f4d040f7c",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find PLUTO instalation\n\n# Once done this will define\n\n#\n\n#  PLUTO_FOUND - system has GEANT3\n\n#  PLUTO_INCLUDE_DIR - the GEANT3 include directory\n\n#  PLUTO_LIBRARIES - The libraries needed to use GEANT3\n\n#  PLUTO_DEFINITIONS - Compiler switches required for using GEANT3\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    message(STATUS \"Found PLUTO: ${PLUTO_LIBRARY_DIR}\")\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindPostgreSQL.cmake" : {
      "ObjectId" : "b16e9e5e3e1df0afb0b9bc72da5b7acdbd11a893",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find PostgreSQL\n\n# Find the PostgreSQL includes and client library\n\n# This module defines\n\n#  POSTGRESQL_INCLUDE_DIR, where to find POSTGRESQL.h\n\n#  POSTGRESQL_LIBRARIES, the libraries needed to use POSTGRESQL.\n\n#  POSTGRESQL_FOUND, If false, do not try to use PostgreSQL.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Jaroslaw Staniek, <js@iidea.pl>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindPythia6.cmake" : {
      "ObjectId" : "411b70403ca686c304d6978c7bb9ce35f23dd53f",
      "LastModified" : "2013-04-08T20:53:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the Pythia6 includes and library.\n\n# \n\n# This module defines\n\n# PYTHIA6_LIBRARIES, the libraries to link against to use Pythia6\n\n# PYTHIA6_FOUND.  If false, you cannot build anything that requires Pythia6.\n\n# PYTHIA6_LIBRARY, where to find the libPythia6 library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindPythia8.cmake" : {
      "ObjectId" : "1a464cc23cc1f6277617663292e112ef00b7959f",
      "LastModified" : "2013-04-08T20:53:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the Pythia8 includes and library.\n\n# \n\n# This module defines\n\n# PYTHIA8_INCLUDE_DIR, where to locate Pythia.h file\n\n# PYTHIA8_LIBRARIES, the libraries to link against to use Pythia6\n\n# PYTHIA8_FOUND.  If false, you cannot build anything that requires Pythia6.\n\n# PYTHIA8_LIBRARY, where to find the libpythia8 library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindROOTInternal.cmake" : {
      "ObjectId" : "30b799507900e72fdda60cee76730e1a69439d13",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# check _value (TRUE, ENABLE, 1 -> TRUE)\n\n#              (FALSE, DISABLE, 0 -> FALSE)\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# get position of option from array ROOT_INSTAL_OPTIONS\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#check if the value to be set is okay\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#Now set the value _value for option _option \n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#check if after the operation the length of ROOT_INSTALL_OPTIONS and ROOT_INSTALL_OPTIONS_VALUE\n\n#is still the same\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# define all packages to be build. By default all of them are enabled at start.\n\n# We switch them off later on during the process of configuration.\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#show_root_install_options()\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#set all directories where to install parts of root\n\n#up to now everything is installed according to the setting of\n\n#CMAKE_INSTALL_DIR\n\n#TODO: Make installation layout more flexible\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# use, i.e. don't skip the full RPATH for the build tree\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# when building, don't use the install RPATH already\n\n# (but later on when installing)\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# the RPATH to be used when installing\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#MESSAGE(\"RPATH: ${CMAKE_INSTALL_RPATH}\")\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# add the automatically determined parts of the RPATH\n\n# which point to directories outside the build tree to the install RPATH\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "cmake/modules/FindXROOTD.cmake" : {
      "ObjectId" : "cc3602a9c30d616ed251ab65e811559d2ac63a20",
      "LastModified" : "2013-04-08T20:53:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Try to find XROOTD\n\n# Once done this will define\n\n#\n\n#  XROOTD_FOUND - system has XROOTD\n\n#  XROOTD_INCLUDE_DIR - the XROOTD include directory\n\n#  XROOTD_LIBRARIES - The libraries needed to use XROOTD\n\n#  XROOTD_CFLAGS - Additional compilation flags (defines)\n\n#  XROOTD_OLDPACK - old-style packaging for XROOTD libraries\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Regular version string; parse it out\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Old version string: we keep only the first numerics, i.e. the date\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# This we used as a compiler macro variable\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Check for additional headers\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Check for additional headers in old directories\n",
        "Line" : 70,
        "CharPositionInLine" : 5
      },
      "6" : {
        "Text" : "# DNS stuff was under XrdNet\n",
        "Line" : 85,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# DNS stuff is under XrdSys\n",
        "Line" : 93,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Check for additional headers in new directories\n",
        "Line" : 103,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Check for additional headers in new directories\n",
        "Line" : 119,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Search for the required libraries; this depends on packaging ...\n",
        "Line" : 138,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    },
    "cmake/modules/MacroEnsureVersion.cmake" : {
      "ObjectId" : "6797e5b7dbb8b98d9b6f53c8d644712d10c43f4c",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file defines the following macros for developers to use in ensuring\n\n# that installed software is of the right version:\n\n#\n\n# MACRO_ENSURE_VERSION        - test that a version number is greater than\n\n#                               or equal to some minimum\n\n# MACRO_ENSURE_VERSION_RANGE - test that a version number is greater than\n\n#                               or equal to some minimum and less than some\n\n#                               maximum\n\n# MACRO_ENSURE_VERSION2       - deprecated, do not use in new code\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MACRO_ENSURE_VERSION\n\n# This macro compares version numbers of the form \"x.y.z\" or \"x.y\"\n\n# MACRO_ENSURE_VERSION( FOO_MIN_VERSION FOO_VERSION_FOUND FOO_VERSION_OK)\n\n# will set FOO_VERSION_OK to true if FOO_VERSION_FOUND >= FOO_MIN_VERSION\n\n# Leading and trailing text is ok, e.g.\n\n# MACRO_ENSURE_VERSION( \"2.5.31\" \"flex 2.5.4a\" VERSION_OK)\n\n# which means 2.5.31 is required and \"flex 2.5.4a\" is what was found on the system\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Copyright (c) 2006, David Faure, <faure@kde.org>\n\n# Copyright (c) 2007, Will Stephenson <wstephenson@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# MACRO_ENSURE_VERSION_RANGE\n\n# This macro ensures that a version number of the form\n\n# \"x.y.z\" or \"x.y\" falls within a range defined by\n\n# min_version <= found_version < max_version.\n\n# If this expression holds, FOO_VERSION_OK will be set TRUE\n\n#\n\n# Example: MACRO_ENSURE_VERSION_RANGE3( \"0.1.0\" ${FOOCODE_VERSION} \"0.7.0\" FOO_VERSION_OK )\n\n#\n\n# This macro will break silently if any of x,y,z are greater than 100.\n\n#\n\n# Copyright (c) 2007, Will Stephenson <wstephenson@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# NORMALIZE_VERSION\n\n# Helper macro to convert version numbers of the form \"x.y.z\"\n\n# to an integer equal to 10^4 * x + 10^2 * y + z\n\n#\n\n# This macro will break silently if any of x,y,z are greater than 100.\n\n#\n\n# Copyright (c) 2006, David Faure, <faure@kde.org>\n\n# Copyright (c) 2007, Will Stephenson <wstephenson@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# CHECK_RANGE_INCLUSIVE_LOWER\n\n# Helper macro to check whether x <= y < z\n\n#\n\n# Copyright (c) 2007, Will Stephenson <wstephenson@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# parse the parts of the version string\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# compute an overall version number which can be compared at once\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "cmake/modules/PostInstalledSoftware.cmake" : {
      "ObjectId" : "a2a5dbd573c53c148b645e06db418b858b387c26",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---Post actions to use builtin GSL----------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#install(FILES ${install_dir}/lib/libgslcblas.so  \n\n#              ${install_dir}/lib/libgsl.so  \n\n#              DESTINATION lib)\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#---Post actions to use builtin CFITSIO------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#install(FILES ${install_dir}/lib/libcfitsio.so  \n\n#              DESTINATION lib)\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/modules/RootBuildOptions.cmake" : {
      "ObjectId" : "711df730a3b7ad2566f24830acc2a4ff1b798f28",
      "LastModified" : "2013-04-08T20:53:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_BUILD_OPTION( name defvalue [description] )\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_SHOW_OPTIONS([var] )\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_WRITE_OPTIONS(file )\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---Define default values depending on platform before the options are defined----------------------\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---General Build options----------------------------------------------------------------------\n\n# use, i.e. don't skip the full RPATH for the build tree\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# when building, don't use the install RPATH already (but later on when installing)\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# add the automatically determined parts of the RPATH\n\n# which point to directories outside the build tree to the install RPATH\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# the RPATH to be used when installing---------------------------------------------------------\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#---Avoid creating dependencies to 'non-statndard' header files -------------------------------\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#---Set all directories where to install parts of root up to now everything is installed ------\n\n#---according to the setting of CMAKE_INSTALL_DIR\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#if(ROOT_INSTALL_DIR)\n\n#  set(CMAKE_INSTALL_PREFIX ${ROOT_INSTALL_DIR})\n\n#  add_definitions(-DR__HAVE_CONFIG)\n\n#else()\n\n#  set(CMAKE_INSTALL_PREFIX ${ROOTSYS})\n\n#endif()\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "cmake/modules/RootCPack.cmake" : {
      "ObjectId" : "eb18dfe6e3ef388582c4717374bbaa973ccdc9a1",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#  RootCPack.cmake\n\n#   - basic setup for packaging ROOT using CTest\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n# Package up needed system libraries - only for WIN32?\n\n#\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#----------------------------------------------------------------------------------------------------\n\n# General packaging setup - variable relavant to all package formats\n\n#\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---Resource Files-----------------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---Source package settings--------------------------------------------------------------------------\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---Binary package setup-----------------------------------------------------------------------------\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#----------------------------------------------------------------------------------------------------\n\n# Finally, generate the CPack per-generator options file and include the\n\n# base CPack configuration.\n\n#\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#----------------------------------------------------------------------------------------------------\n\n# Define components and installation types (after CPack included!)\n\n#\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/modules/RootCTest.cmake" : {
      "ObjectId" : "84f2751aeadc2435e2b845328f4a24b76aece3a1",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#  RootCTest.cmake\n\n#   - basic setup for testing ROOT using CTest\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---Deduce the build name--------------------------------------------------------\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---A number of operations to allow running the tests from the build directory-----------------------\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/RootConfiguration.cmake" : {
      "ObjectId" : "de670e00a640070381ee4999fb949c9370360274",
      "LastModified" : "2013-04-08T20:53:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---Define a function to do not polute the top level namespace with unneeded variables-----------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---Define all sort of variables to bridge between the old Module.mk and the new CMake equivalents-----------\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---RConfigure-------------------------------------------------------------------------------------------------\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---root-config----------------------------------------------------------------------------------------------\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---CINT Configuration---------------------------------------------------------------------------------------\n\n#configure_file(${PROJECT_SOURCE_DIR}/cmake/scripts/cint-config.in ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/cint-config @ONLY)\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---Create the configcint.h header file and copy the file first to the cint/cint directory. Copy it to the \n\n#   temporary include directory only if there is a change. Otherwise you have to recompile unneccessarily some files \n\n#   depending on configcint.h all the time. \n",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#install(FILES ${HEADER_OUTPUT_PATH}/configcint.h DESTINATION include)\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#---RConfigure.h---------------------------------------------------------------------------------------------\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#---Configure and install various files----------------------------------------------------------------------\n",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#---Generate the ROOTConfig files to be used by CMake projects-----------------------------------------------\n",
        "Line" : 382,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#---To be used from the binary tree--------------------------------------------------------------------------\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#---To be used from the install tree--------------------------------------------------------------------------\n",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#---Especial definitions for root-config et al.--------------------------------------------------------------\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "cmake/modules/RootNewMacros.cmake" : {
      "ObjectId" : "f8022c3f4c41a8320257fd2ced481839345d3fcd",
      "LastModified" : "2013-04-08T20:53:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#  RootNewMacros.cmake\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# See \"cmake --help-policy CMP0003\" for more details\n\n# See \"cmake --help-policy CMP0011\" for more details\n\n# See \"cmake --help-policy CMP0009\" for more details\n",
        "Line" : 5,
        "CharPositionInLine" : 30
      },
      "2" : {
        "Text" : "#---Modify the behaviour for local and non-local builds--------------------------------------------\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_GLOB_FILES( <variable> [REALTIVE path] [FILTER regexp] <sources> ...)\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_GET_SOURCES( <variable> cwd <sources> ...)\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Eliminate G__* files only when using wildcards\n",
        "Line" : 115,
        "CharPositionInLine" : 54
      },
      "6" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---REFLEX_GENERATE_DICTIONARY( dictionary headerfiles SELECTION selectionfile OPTIONS opt1 opt2 ...)\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#---Get List of header files---------------\n",
        "Line" : 136,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#---Get Selection file------------------------------------\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#set(gccxmlopts \"--gccxmlopt=\\'--gccxml-cxxflags -m64 \\'\")\n",
        "Line" : 161,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Creating this target at ALL level enables the possibility to generate dictionaries (genreflex step)\n\n# well before the dependent libraries of the dictionary are build  \n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_GENERATE_DICTIONARY( dictionary headerfiles LINKDEF linkdef OPTIONS opt1 opt2 ...)\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#---Get the list of header files-------------------------\n",
        "Line" : 196,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#---Get the list of include directories------------------\n",
        "Line" : 211,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#---Get the list of definitions---------------------------\n",
        "Line" : 222,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "#---Get LinkDef.h file------------------------------------\n",
        "Line" : 229,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "#---call rootcint------------------------------------------\n",
        "Line" : 241,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_LINKER_LIBRARY( <name> source1 source2 ...[TYPE STATIC|SHARED] [DLLEXPORT] LIBRARIES library1 library2 ...)\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#---create a list of all the object files-----------------------------\n",
        "Line" : 266,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "#foreach(src1 ${lib_srcs})\n\n#  if(NOT src1 MATCHES \"[.]h$|[.]icc$|[.]hxx$|[.]hpp$\")\n\n#    string (REPLACE ${CMAKE_CURRENT_SOURCE_DIR} \"\" src2 ${src1})\n\n#    string (REPLACE ${CMAKE_CURRENT_BINARY_DIR} \"\" src3 ${src2})     \n\n#    string (REPLACE \"..\" \"__\" src ${src3})     \n\n#    get_filename_component(name ${src} NAME_WE)\n\n#    set(lib_objs ${lib_objs} ${library}.dir/${CMAKE_CFG_INTDIR}/${name}.obj)\n\n#  endif()\n\n#endforeach()\n",
        "Line" : 268,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "#---create a shared library with the .def file------------------------\n",
        "Line" : 290,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "#---set the .def file as generated------------------------------------\n",
        "Line" : 294,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "#---create a custom pre-link command that runs bindexplib\n",
        "Line" : 296,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "#----Installation details-------------------------------------------------------\n",
        "Line" : 315,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "#install(EXPORT ${CMAKE_PROJECT_NAME}Exports DESTINATION cmake/modules) \n",
        "Line" : 327,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_MODULE_LIBRARY( <name> source1 source2 ... [DLLEXPORT] LIBRARIES library1 library2 ...)\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#----Installation details-------------------------------------------------------\n",
        "Line" : 358,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_USE_PACKAGE( package )\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#---avoid calling the same one at the same directory level ---------------------------------\n",
        "Line" : 378,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_GENERATE_ROOTMAP( library LINKDEF linkdef LIBRRARY lib DEPENDENCIES lib1 lib2 )\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 398,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#---Build the rootmap file--------------------------------------\n",
        "Line" : 426,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "#---Install the rootmap file------------------------------------\n",
        "Line" : 432,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_INSTALL_HEADERS([dir1 dir2 ...])\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 436,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_STANDARD_LIBRARY_PACKAGE(libname DEPENDENCIES lib1 lib2)\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 454,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_EXECUTABLE( <name> source1 source2 ... LIBRARIES library1 library2 ...)\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 465,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#----Installation details------------------------------------------------------\n",
        "Line" : 484,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---REFLEX_BUILD_DICTIONARY( dictionary headerfiles selectionfile OPTIONS opt1 opt2 ...  LIBRARIES lib1 lib2 ... )\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 492,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#----Installation details-------------------------------------------------------\n",
        "Line" : 500,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---SET_RUNTIME_PATH( var [LD_LIBRARY_PATH | PATH] )\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 507,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_CHECK_OUT_OF_SOURCE_BUILD( )\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 530,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# function ROOT_ADD_TEST( <name> COMMAND cmd [arg1... ] \n\n#                        [PRECMD cmd [arg1...]] [POSTCMD cmd [arg1...]]\n\n#                        [OUTPUT outfile] [ERROR errfile]\n\n#                        [ENVIRONMENT var1=val1 var2=val2 ...\n\n#                        [DEPENDS test1 ...]\n\n#                        [TIMEOUT seconds] \n\n#                        [DEBUG]\n\n#                        [SOURCE_DIR dir] [BINARY_DIR dir]\n\n#                        [WORKING_DIR dir]\n\n#                        [BUILD target] [PROJECT project]\n\n#                        [PASSREGEX exp] [FAILREGEX epx])\n\n#\n",
        "Line" : 542,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#- Handle COMMAND argument\n",
        "Line" : 558,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "#- Handle PRE and POST commands\n",
        "Line" : 580,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "#- Handle OUTPUT, ERROR, DEBUG arguments\n",
        "Line" : 592,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "#- Handle ENVIRONMENT argument\n",
        "Line" : 609,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "#- Locate the test driver\n",
        "Line" : 616,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "#set(_driver ${CMAKE_SOURCE_DIR}/cmake/modules/RootTestDriver.cmake)\n",
        "Line" : 618,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "#- Now we can actually add the test\n",
        "Line" : 624,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "#- Handle TIMOUT and DEPENDS arguments\n",
        "Line" : 653,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 49
    },
    "cmake/modules/RootTestDriver.cmake" : {
      "ObjectId" : "3e5530dcdf94f56ca215c76ee8e9625bef196bb6",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n# ROOT test driver\n\n#   Script arguments: \n\n#     CMD command to be executed for the test\n\n#     PRE command to be executed before the test command\n\n#     POST command to be executed after the test command\n\n#     OUT file to collect stdout\n\n#     ERR file to collect stderr\n\n#     ENV evironment VAR1=Value1;VAR2=Value2\n\n#     CWD current working directory\n\n#     DBG debug flag\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---Massage arguments---------------------------------------------------------------------------------\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#else()\n\n#  set(_err ERROR_VARIABLE _errvar)\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---Set environment --------------------------------------------------------------------------------\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---Execute pre-command-----------------------------------------------------------------------------\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---Execute the actual test ------------------------------------------------------------------------\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#---Return error is test returned an error code of write somthing to the stderr---------------------\n\n#if(_errvar)\n\n#  message(FATAL_ERROR \"output error: ${_errvar}\")\n\n#endif()\n",
        "Line" : 89,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#---Execute post-command-----------------------------------------------------------------------------\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/modules/SearchInstalledSoftware.cmake" : {
      "ObjectId" : "43764001c7285bbafa7aeac354f1a2e8f5fd2117",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---Check for installed packages depending on the build options/components eamnbled -\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---Check for Zlib ------------------------------------------------------------------\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---Check for Freetype---------------------------------------------------------------\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---Check for PCRE-------------------------------------------------------------------\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---Check for LZMA-------------------------------------------------------------------\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---Check for Cocoa/Quartz graphics backend (MacOS X only)\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#---Check for X11 which is mandatory lib on Unix--------------------------------------\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#---Check for AfterImage---------------------------------------------------------------\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#---Check for all kind of graphics includes needed by libAfterImage--------------------\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#---Check for GSL library---------------------------------------------------------------\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#---Check for Python installation-------------------------------------------------------\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#---First look for the python interpreter and fix the version of it for the libraries--\n",
        "Line" : 212,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#---Check for Ruby installation-------------------------------------------------------\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#---Check for GCCXML installation-------------------------------------------------------\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#---Check for OpenGL installation-------------------------------------------------------\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#---Check for Graphviz installation-------------------------------------------------------\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#---Check for Qt installation-------------------------------------------------------\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#---Check for Bonjour installation-------------------------------------------------------\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#---Check for krb5 Support-----------------------------------------------------------\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#---Check for XML Parser Support-----------------------------------------------------------\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#---Check for OpenSSL------------------------------------------------------------------\n",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#---Check for Castor-------------------------------------------------------------------\n",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#---Check for MySQL-------------------------------------------------------------------\n",
        "Line" : 393,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#---Check for Oracle-------------------------------------------------------------------\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#---Check for ODBC-------------------------------------------------------------------\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#---Check for PostgreSQL-------------------------------------------------------------------\n",
        "Line" : 435,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#---Check for Pythia6-------------------------------------------------------------------\n",
        "Line" : 449,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#---Check for Pythia8-------------------------------------------------------------------\n",
        "Line" : 463,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#---Check for FFTW3-------------------------------------------------------------------\n",
        "Line" : 477,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#---Check for fitsio-------------------------------------------------------------------\n",
        "Line" : 491,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#---Check Shadow password support----------------------------------------------------\n",
        "Line" : 518,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#---TODO--The test always succeeds because the actual file is protected\n",
        "Line" : 520,
        "CharPositionInLine" : 30
      },
      "32" : {
        "Text" : "#---Alien support----------------------------------------------------------------\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#---Monalisa support----------------------------------------------------------------\n",
        "Line" : 538,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#---Check for Xrootd support---------------------------------------------------------\n",
        "Line" : 548,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#---Check for cling and llvm ----------------------------------------------------------------\n",
        "Line" : 576,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#---The list of libraires is optatined by runnning 'llvm-config --libs'\n",
        "Line" : 590,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "#---Report non implemented options---------------------------------------------------\n",
        "Line" : 628,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 38
    },
    "cmake/modules/SetUpLinux.cmake" : {
      "ObjectId" : "4c5c10ba01a5922481cebca58e1a2fc367fac997",
      "LastModified" : "2013-04-08T20:53:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Select flags.\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#Settings for cint\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#TODO\n",
        "Line" : 72,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# Check icc compiler version and set compile flags according to the\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#set(CMAKE_C_LINK_FLAGS \"${CMAKE_C_LINK_FLAGS} ${BIT_ENVIRONMENT}\")\n\n#set(CMAKE_CXX_LINK_FLAGS \"${CMAKE_CXX_LINK_FLAGS} ${BIT_ENVIRONMENT}\")\n",
        "Line" : 117,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "#set(CMAKE_C_LINK_FLAGS \"${CMAKE_C_LINK_FLAGS} ${BIT_ENVIRONMENT}\")\n\n#set(CMAKE_CXX_LINK_FLAGS \"${CMAKE_CXX_LINK_FLAGS} ${BIT_ENVIRONMENT}\")\n",
        "Line" : 127,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Select flags.\n",
        "Line" : 138,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#Settings for cint\n",
        "Line" : 146,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#TODO\n",
        "Line" : 149,
        "CharPositionInLine" : 27
      },
      "CommentCount" : 9
    },
    "cmake/modules/SetUpMacOS.cmake" : {
      "ObjectId" : "287e6a7903833c508056e04f44b5292ca41b68ed",
      "LastModified" : "2013-04-08T20:53:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(CRYPTLIBS \"-lcrypt\")\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---This is needed to help CMake to locate the X11 headers in the correct place and not under /usr/include\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---------------------------------------------------------------------------------------------------------\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#TODO: check haveconfig and rpath -> set rpath true\n\n#TODO: check Thread, define link command\n\n#TODO: more stuff check configure script\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Select flags.\n",
        "Line" : 60,
        "CharPositionInLine" : 5
      },
      "5" : {
        "Text" : "#settings for cint\n",
        "Line" : 72,
        "CharPositionInLine" : 5
      },
      "6" : {
        "Text" : "# Select flags.\n",
        "Line" : 94,
        "CharPositionInLine" : 5
      },
      "7" : {
        "Text" : "#settings for cint\n",
        "Line" : 106,
        "CharPositionInLine" : 5
      },
      "8" : {
        "Text" : "#---Set Linker flags----------------------------------------------------------------------\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 9
    },
    "cmake/modules/SetUpWindows.cmake" : {
      "ObjectId" : "cbccae74a30f1dd762cb03ea54f27d55121f5c64",
      "LastModified" : "2013-04-08T20:53:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---Select compiler flags----------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---Set Linker flags----------------------------------------------------------------------\n\n#set(CMAKE_EXE_LINKER_FLAGS ${CMAKE_EXE_LINKER_FLAGS})\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/StandaloneBuild.cmake" : {
      "ObjectId" : "ae9ab1b4b3cb2fe17d8edb083b9a7fe9a0e3568a",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##################################################################################################\n\n# --- StandaloneBuild.cmake module----------------------------------------------------------------\n\n# This module provides the sufficent environemnt to be able to build ROOT as standalone projects\n\n# It only assumes a valid ROOTSYS that can be provided directly with the command line\n\n#              cmake -DROOTSYS=<ROOT Installation> <package source> \n\n##################################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---Find ROOT ------------------------------------------------------------------------------------\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---Minimal environment---------------------------------------------------------------------------\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---Initialize project----------------------------------------------------------------------------\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---Set Link and include directories--------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/modules/WriteConfigCint.cmake" : {
      "ObjectId" : "731f006deb382644976a4b96c3bda0b962102812",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Creates the file configcint.h and write configuration\n\n# Don't know why this is needed\n\n# TODO: Change file that it works with WINDOWS\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#TODO\n",
        "Line" : 39,
        "CharPositionInLine" : 59
      },
      "2" : {
        "Text" : "#TODO\n",
        "Line" : 41,
        "CharPositionInLine" : 64
      },
      "3" : {
        "Text" : "#TODO\n",
        "Line" : 86,
        "CharPositionInLine" : 59
      },
      "4" : {
        "Text" : "#TODO\n",
        "Line" : 88,
        "CharPositionInLine" : 64
      },
      "CommentCount" : 5
    },
    "core/CMakeLists.txt" : {
      "ObjectId" : "54222c99d5b79954081cd7c1e88be5751affeabd",
      "LastModified" : "2013-04-08T20:53:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---Add flags to compile ObjC++\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "core/base/CMakeLists.txt" : {
      "ObjectId" : "81aaa2334f9ed99335ba4e29f9325aa71706e6ae",
      "LastModified" : "2013-04-08T20:53:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT core/base package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---Extra options-----------------------------------------------------------------------\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "core/clib/CMakeLists.txt" : {
      "ObjectId" : "0315862039fd7f06db1542bd17237219ac79656a",
      "LastModified" : "2013-04-08T20:53:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT core/clib package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "core/cont/CMakeLists.txt" : {
      "ObjectId" : "7f9d6bae2b78015d4b43b20220e89cb41fbc4ba4",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT core/cont package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "core/lzma/CMakeLists.txt" : {
      "ObjectId" : "c1e76347a8dbdfc8a30dab6fa403e205790db65b",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT core/lzma package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---The builtin LMZA library is built using the CMake ExternalProject standard module\n\n#   in cmake/modules/SearchInstalledSoftare.cmake\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---Declare ZipLZMA sources as part of libCore------------------------------- \n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "core/macosx/CMakeLists.txt" : {
      "ObjectId" : "a03e315eef98aa48080bb833a886ff21598c9eaf",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT core/macosx package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "core/meta/CMakeLists.txt" : {
      "ObjectId" : "db883d455e0ebc40a2db591a58c4bd7768e57793",
      "LastModified" : "2013-04-08T20:53:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT core/meta package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "core/metautils/CMakeLists.txt" : {
      "ObjectId" : "894375682177311866f546b315283456b9014b84",
      "LastModified" : "2013-04-08T20:53:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT core/cont package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "core/newdelete/CMakeLists.txt" : {
      "ObjectId" : "1e630dcdf14010a5d483085a1db18acb17899752",
      "LastModified" : "2013-04-08T20:53:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT core/newdelete package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "core/pcre/CMakeLists.txt" : {
      "ObjectId" : "1cd07f04e15b4717c49d8cdd7ac109c711be58f7",
      "LastModified" : "2013-04-08T20:53:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: Check if we have to install the buildin pcre version\n\n# or if we can use the system version of pcre. We have to create \n\n# a FindPCRE.cmake script and search for the system version of\n\n# pcre if not set buildin version of pcre.\n\n# Up to now we don't check and install the buildin version anyway.\n\n##is_root_install_option_enabled(builtin_pcre)\n\n##if(option_builtin_pcre_is_enabled)\n\n###  MESSAGE(\"BLA: ${option_builtin_pcre_is_enabled}\")\n\n###  add_subdirectory (core/pcre)\n\n##endif(option_builtin_pcre_is_enabled)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is not a verry clean solution, but the problem is that the pcre has its\n\n# own tarfile and its own buildsystem. So we have to unpack the tarfile and\n\n# then call the build system of pcre. The created library is imported into\n\n# the scope of cmake, so even make clean works.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define package related variables \n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define special compiler settings for prce\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# copy tarfile from source directory to build directory, unpack the tarfile\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# configure and make pcre, this command depends on the unpacked package \n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# copy the created library into the library directory in the build directory\n\n# This command depends on the created libpcre.a\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# create a target which will always be build and does actually nothing. The target is only\n\n# needed that the dependencies are build, if they are not up to date. If everything is up to\n\n# dte nothing is done. This target depends on the libpcre.a in the library directory of the \n\n# build directory.\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "core/rint/CMakeLists.txt" : {
      "ObjectId" : "a3073414c30bd04f322856d869fc0c9181632daa",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT core/rint package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "core/textinput/CMakeLists.txt" : {
      "ObjectId" : "fa45ee27d47461fee36da098bff55ba0ecaa044f",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT core/textinout package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "core/textinput/src/textinput/Makefile" : {
      "ObjectId" : "5c8204d400dde1fc13b157b8f82641cf2b7c885b",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- cling/lib/UserInterface/Makefile---------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n\n#\n\n#  This implements the a C++ interpreter user frontend.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "core/thread/CMakeLists.txt" : {
      "ObjectId" : "1804c71f997b5c8d96b4dee9444434a5647604f9",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT core/thread package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "core/unix/CMakeLists.txt" : {
      "ObjectId" : "a0d0f8b112fd6586e30cd9c7ef7eb3ac352a17f7",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT core/unix package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "core/utils/CMakeLists.txt" : {
      "ObjectId" : "4115bd553777f1a4db31ad15d1d61dd3144d2386",
      "LastModified" : "2013-04-08T20:53:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT core/utils package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---Deal with LLVM resource here----------------------------------------------\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---Install a bunch of files to /etc/cling------------------------------------\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---Trick to avoid building all dictionaties when CINT is changed-------------\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---rlibmap executable--------------------------------------------------------\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "core/winnt/CMakeLists.txt" : {
      "ObjectId" : "a05f0a5ac008008296c3bc9cbb8dd555f21787cf",
      "LastModified" : "2012-05-31T11:45:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT core/winnt package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "core/zip/CMakeLists.txt" : {
      "ObjectId" : "d828f8833ec7bda366667b40c0ef80dccccff5ac",
      "LastModified" : "2013-04-08T20:53:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build core/clib\n\n# Define all header and source files which are needed\n\n# to build the Core library\n\n# The Core library is build in the main CMakeLists.txt\n\n# of the core subdirectory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Depending on the system either the old and the new\n\n# or only the old compression is build \n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define all the header files which should be installed when\n\n# doing a \"make install\"\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add all source files of this subdirectory to the source files\n\n# neede to build the Core library\n\n# Variables are only defined in this directory-. Some of the\n\n# variables are needed in the parent scope so they are exported\n\n# to the parent scope\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "docbook/primer/Makefile" : {
      "ObjectId" : "6be03a3ed68dd4e7b73a34eaa93f05a7a85d0a98",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "etc/cmake/FindROOT.cmake" : {
      "ObjectId" : "85d5acdaa119f3d677c385737df5f22c63698d24",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Finds ROOT instalation\n\n# This module sets up ROOT information \n\n# It defines:\n\n# ROOT_FOUND          If the ROOT is found\n\n# ROOT_INCLUDE_DIR    PATH to the include directory\n\n# ROOT_LIBRARIES      Most common libraries\n\n# ROOT_LIBRARY_DIR    PATH to the library directory \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(ROOT_LIBRARIES ${ROOT_LIBRARIES} -lThread -lMinuit -lHtml -lVMC -lEG -lGeom -lTreePlayer -lXMLIO -lProof)\n\n#set(ROOT_LIBRARIES ${ROOT_LIBRARIES} -lProofPlayer -lMLP -lSpectrum -lEve -lRGL -lGed -lXMLParser -lPhysics)\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Make variables changeble to the advanced user\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# function ROOT_GENERATE_DICTIONARY( dictionary   \n\n#                                    header1 header2 ... \n\n#                                    LINKDEF linkdef1 ... \n\n#                                    OPTIONS opt1...)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---Get the list of header files-------------------------\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#---Get the list of include directories------------------\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#---Get LinkDef.h file------------------------------------\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#---call rootcint------------------------------------------\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# function REFLEX_GENERATE_DICTIONARY(dictionary   \n\n#                                     header1 header2 ... \n\n#                                     SELECTION selectionfile ... \n\n#                                     OPTIONS opt1...)\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#---Get the list of header files-------------------------\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#---Get Selection file------------------------------------\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#---Get the list of include directories------------------\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#---Get preprocessor definitions--------------------------\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#---Nanes and others---------------------------------------\n",
        "Line" : 139,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#set(gccxmlopts \"--gccxmlopt=\\'--gccxml-cxxflags -m64 \\'\")\n",
        "Line" : 144,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#set(rootmapname ${dictionary}Dict.rootmap)\n\n#set(rootmapopts --rootmap=${rootmapname} --rootmap-lib=${libprefix}${dictionary}Dict)\n\n#---Check GCCXML and get path-----------------------------\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "#---Actual command----------------------------------------\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 17
    },
    "geom/CMakeLists.txt" : {
      "ObjectId" : "eda13c1abeb846ba437124fce4e2d23b055f70d1",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# special CMakeLists.txt\n\n# special CMakeLists.txt\n\n# special CMakeLists.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 1
    },
    "geom/gdml/CMakeLists.txt" : {
      "ObjectId" : "2791f5f30a31a0cf64a8f95a9f67466db89a4b72",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT geom/gdml package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "geom/geom/CMakeLists.txt" : {
      "ObjectId" : "9765be23dfd487f59a400dca93a03473bb16dcce",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT geom/geom package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "geom/geombuilder/CMakeLists.txt" : {
      "ObjectId" : "f765c738bdf2952d430fe036ab4fd2c34e328e18",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT geom/geom package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "geom/geompainter/CMakeLists.txt" : {
      "ObjectId" : "a9541b6fee4b044309658c21fce3bff49f730058",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT geom/geopainter package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "graf2d/CMakeLists.txt" : {
      "ObjectId" : "da40ebab4d7b47b9b330bf05f594604a3f5971cd",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# special CMakeLists.txt\n\n# special CMakeLists.txt\n",
        "Line" : 14,
        "CharPositionInLine" : 32
      },
      "1" : {
        "Text" : "# special CMakeLists.txt\n",
        "Line" : 17,
        "CharPositionInLine" : 30
      },
      "CommentCount" : 2
    },
    "graf2d/asimage/BuildAfterImage.cmake" : {
      "ObjectId" : "00be9c02b1d2d5b7b78b86331ff7201922ab2b8e",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: Check if we have to install the buildin version of\n\n# libAfterImage or if we can use the system version of \n\n# libAfterImage. We have to create a FindAfterImage.cmake \n\n# script and search for the system version of\n\n# libAfterImage if not set buildin version of libAfterImage.\n\n# Up to now we don't check and install the buildin version anyway.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is not a verry clean solution, but the problem is that AfterImage has its\n\n# own tarfile and its own buildsystem. So we have to unpack the tarfile and\n\n# then call the build system of pcre. The created library is imported into\n\n# the scope of cmake, so even make clean works.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#foreach(_dir ${PNG_INCLUDE_DIR})\n\n#  set(PNG_INC_DIR \"${PNG_INC_DIR} -I${_dir}\")\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#endforeach()\n",
        "Line" : 72,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "#set(PNGINCLUDE \"--with-png-includes=${PNG_INC_DIR}\")\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#---copy files from source directory to build directory------------------------------\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#---configure and make --------------------------------------------------------------\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#---copy the created library into the library directory in the build directory\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# create a target which will always be build and does actually nothing. The target is only\n\n# needed that the dependencies are build, f they are not up to date. If everything is up to\n\n# date nothing is done. This target depends on the libAfterImage.a in the library directory of the \n\n# build directory.\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "graf2d/asimage/CMakeLists.txt" : {
      "ObjectId" : "c4dc5db228664bd1c80dee6b1e38c72f11f19ce8",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT graf2d/asimage package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---Build afterimage library------------------------------------------------\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---Build ASImage/ASImageGui libraries---------------------------------------\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This is to avoid a circular dependency graf <--> hist \n",
        "Line" : 21,
        "CharPositionInLine" : 56
      },
      "CommentCount" : 4
    },
    "graf2d/cocoa/CMakeLists.txt" : {
      "ObjectId" : "556051cb83655ab4a91313fa03a9c48a8f2ef54c",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT graf2d/cocoa package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "graf2d/fitsio/CMakeLists.txt" : {
      "ObjectId" : "da5ea6d6571094c25fe3c906fde609e6381feceb",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT graf2d/fitsio package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "graf2d/freetype/CMakeLists.txt" : {
      "ObjectId" : "6f83e0d23efa9a559eb2d8606e3ef0c339f19a6c",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: Check if we have to install the buildin freetype version\n\n# or if we can use the system version of frretype. \n\n# Up to now we don't check and install the buildin version anyway.\n\n##is_root_install_option_enabled(builtin_f)\n\n##if(option_builtin_pcre_is_enabled)\n\n###  MESSAGE(\"BLA: ${option_builtin_pcre_is_enabled}\")\n\n###  add_subdirectory (core/pcre)\n\n##endif(option_builtin_pcre_is_enabled)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is not a verry clean solution, but the problem is that the pcre has its\n\n# own tarfile and its own buildsystem. So we have to unpack the tarfile and\n\n# then call the build system of pcre. The created library is imported into\n\n# the scope of cmake, so even make clean works.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---Define package related variables------------------------------------------------------------ \n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---Define special compiler settings for freetype-----------------------------------------------\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# copy tarfile from source directory to build directory, unpack the tarfile\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# configure and make freetype, this command depends on the unpacked package \n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# copy the created library into the library directory in the build directory\n\n# This command depends on the created libfreetype.a\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# create a target which will always be build and does actually nothing. The target is only\n\n# needed that the dependencies are build, f they are not up to date. If everything is up to\n\n# dte nothing is done. This target depends on the libfreetype.a in the library directory of the \n\n# build directory.\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "graf2d/gpad/CMakeLists.txt" : {
      "ObjectId" : "93bcb18ffe3929952f390cfdf690f2506e39df4a",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT graf2d/gpad package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is to avoid a circular dependency graf <--> hist \n",
        "Line" : 8,
        "CharPositionInLine" : 56
      },
      "CommentCount" : 2
    },
    "graf2d/graf/CMakeLists.txt" : {
      "ObjectId" : "1224f4487c5a0064a7f686708a2bbd105ede5f67",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT graf2d/graf package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is to avoid a circular dependency graf <--> hist\n",
        "Line" : 12,
        "CharPositionInLine" : 56
      },
      "CommentCount" : 2
    },
    "graf2d/gviz/CMakeLists.txt" : {
      "ObjectId" : "a7b1eeb23e0caa0e48f79a0dfca5164f2f652e33",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT graf2d/gviz package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "graf2d/mathtext/CMakeLists.txt" : {
      "ObjectId" : "8f87b998e3a457dc3b00ad9c6a0ef1b467e42ba5",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "graf2d/postscript/CMakeLists.txt" : {
      "ObjectId" : "011a43e29d15a47c527a9a4b337a4bd6fe4052ff",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT graf2d/postcript package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "graf2d/qt/CMakeLists.txt" : {
      "ObjectId" : "2e33ad42afa3fa7d4794b0d0af2eaed8ea93a201",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT graf2d/qt package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "graf2d/qt/inc/rootcint.pri" : {
      "ObjectId" : "8faf594a7a920270b1059acecc7ad32749c2e5de",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\n\n# author  Valeri Fine (fine@bnl.gov)\n\n#-------------------------------------------------------------------------\n\n# Qmake include file to add the rules to create RootCint Dictionary\n\n#-------------------------------------------------------------------------\n\n#\n\n# $Id: rootcint.pri,v 1.8 2009/03/22 04:58:00 fine Exp $\n\n#\n\n# Copyright (C) 2002 by Valeri Fine.  All rights reserved.\n\n#\n\n# This file may be distributed under the terms of the Q Public License\n\n# as defined by Trolltech AS of Norway and appearing in the file\n\n# LICENSE.QPL included in the packaging of this file.\n\n#-------------------------------------------------------------------------\n\n#\n\n# Usage:\n\n# -----\n\n# To link against of the ROOT Qt layer and generate the RootCint dictionary with qmake \n\n#-------------------------------------------------------------------------------------\n\n# 1. Include this file into your project with QMAKE inlcude statement:\n\n#\n\n#    !exists ($$(ROOTSYS)/include/rootcint.pri){\n\n#        message \"The Rootcint.pri was not found\"\n\n#    }\n\n#    exists ($$(ROOTSYS)/include/rootcint.pri){\n\n#       include ($$(ROOTSYS)/include/rootcint.pri)\n\n#    }\n\n#\n\n# 2. Provide the list of the class header files followed by the appropriated LinkDef.f file\n\n#    within your prpoject with CREATE_ROOT_DICT_FOR_CLASSES  QMAKE variable\n\n# -----------------------------------------------\n\n#\n\n#   For example\n\n#\n\n#    . . . \n\n#    !exists ($$(ROOTSYS)/include/rootcint.pri){\n\n#        message \"The Rootcint.pri was not found\"\n\n#    }\n\n#    exists ($$(ROOTSYS)/include/rootcint.pri){\n\n#       include ($$(ROOTSYS)/include/rootcint.pri)\n\n#       CREATE_ROOT_DICT_FOR_CLASSES  = ${HEADERS} MyParticle.h MyDetector.h MyEvent.h ShowerMain.h \n\n#       CREATE_ROOT_DICT_FOR_CLASSES *= ${HEADERS} RSLinkDef.h\n\n#    }\n\n#    . . . \n\n# -----------------------------------------------\n\n#\n\n# 3. Run \"qmake\"\n\n# 4. Run \"make\"\n\n#\n\n# -----------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-- permanent components to be included into any \".pro\" file to build the RootCint dictionary\n\n#\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -- define the LIBS and INCLUDEPATH variable\n\n#\n\n# -------  define rootlibs.pri -----------------\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Wow !!! Qt exists function for the nested include file applies the relative path\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#  ROOTLIBSPRI = inc/$$ROOTLIBSPRIFILE\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# ----------  define rootcintrule.pri  -----------------\n\n# -- define the RootCint ROOT dictionary building rule\n\n#\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ------------------ Mac OS settings -----------------------\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "graf2d/qt/inc/rootcintrule.pri" : {
      "ObjectId" : "b7da61acac4b2e5e896c8e1601d59a17327d1215",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\n\n# author  Valeri Fine (fine@bnl.gov)\n\n#-------------------------------------------------------------------------\n\n# Qmake include file to add the rules to create RootCint Dictionary\n\n#-------------------------------------------------------------------------\n\n#\n\n# $Id: rootcintrule.pri,v 1.20 2008/09/25 22:19:24 fine Exp $\n\n#\n\n# Copyright (C) 2002 by Valeri Fine.  All rights reserved.\n\n#\n\n# This file may be distributed under the terms of the Q Public License\n\n# as defined by Trolltech AS of Norway and appearing in the file\n\n# LICENSE.QPL included in the packaging of this file.\n\n#-------------------------------------------------------------------------\n\n#\n\n##\n\n# Usage: (aux file for rootcint.pri qmake include file)\n\n# -----\n\n#        Defines the qmake rule generate the RootCint dictionary with qmake\n\n#\n\n#        This is the \"private\" qmake include file. \n\n#        It should NOT be used alone. \n\n#\n\n#        USE \"rootcint.pri\" instead\n\n#-------------------------------------------------------------------------------------\n\n# 1. Include this file into your project with QMAKE include statement:\n\n#\n\n#    !exists ($$(ROOTSYS)/include/rootcintrule.pri){\n\n#        message \"The rootcintrules.pri was not found\"\n\n#    }\n\n#    exists ($$(ROOTSYS)/include/rootcintrule.pri){\n\n#       include ($$(ROOTSYS)/include/rootcintrule.pri)\n\n#    }\n\n#\n\n# 2. Provide the list of the class header files followed by the appropriated LinkDef.h file\n\n#    within your prpoject with CREATE_ROOT_DICT_FOR_CLASSES  QMAKE variable\n\n# -----------------------------------------------\n\n#\n\n#   For example\n\n#\n\n#    . . . \n\n#    !exists ($$(ROOTSYS)/include/rootcintrule.pri){\n\n#        message \"The rootcintrule.pri was not found\"\n\n#    }\n\n#    exists ($$(ROOTSYS)/include/rootcintrule.pri){\n\n#       include ($(ROOTSYS)/include/rootcintrule.pri)\n\n#       CREATE_ROOT_DICT_FOR_CLASSES  = ${HEADERS} MyParticle.h MyDetector.h MyEvent.h ShowerMain.h \n\n#       CREATE_ROOT_DICT_FOR_CLASSES *= ${HEADERS} RSLinkDef.h\n\n#    }\n\n#    . . . \n\n# -----------------------------------------------\n\n#\n\n# 3. Run \"qmake\"\n\n# 4. Run \"make\"\n\n#\n\n# -----------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# define whether the current QMake is from Qt4 distribution\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Required to use dynamic_cast\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3,
      "Errorlog" : "line 107:33 token recognition error at: '\"$$(ROOTSYS)\\b'\nline 113:115 token recognition error at: '\"\\n\\nunix:   QMAKE_EXTRA_UNIX_TARGETS += rootcintecho rootcint \\nwin32:  QMAKE_EXTRA_WIN_TARGETS  += rootcintecho rootcint \\n\\n  QMAKE_CLEAN       +=  $${ROOT_CINT_TARGET}Dict.cxx $${ROOT_CINT_TARGET}Dict.h\\n}\\n\u0000'\n"
    },
    "graf2d/qt/inc/rootlibs.pri" : {
      "ObjectId" : "c847d483464fb98fafb726f17534fd28cacd1041",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#\n\n# author  Valeri Fine (fine@bnl.gov)\n\n#-------------------------------------------------------------------------\n\n# Qmake include file to add the rules to create RootCint Dictionary\n\n#-------------------------------------------------------------------------\n\n#\n\n# $Id: rootlibs.pri,v 1.28 2008/09/25 22:19:24 fine Exp $\n\n#\n\n# Copyright (C) 2002 by Valeri Fine.  All rights reserved.\n\n#\n\n# This file may be distributed under the terms of the Q Public License\n\n# as defined by Trolltech AS of Norway and appearing in the file\n\n# LICENSE.QPL included in the packaging of this file.\n\n#-------------------------------------------------------------------------\n\n#\n\n# Usage: (aux file for rootcint.pri qmake include file)\n\n# -----\n\n#        Defines the qmake LIBS, INCLUDEPATH, and  DEPENDPATH variables to link \n\n#        some the custom shared library against of the manadatory ROOT libraries\n\n#\n\n#        This is the \"private\" qmake include file. \n\n#        It should NOT be used alone. \n\n#\n\n#        USE \"rootcint.pri\" instead\n\n#-------------------------------------------------------------------------------------\n\n# 1. Include this file into your project with QMAKE include statement:\n\n#\n\n#    !exists ($(ROOTSYS)/include/rootlibs.pri){\n\n#        message \"The rootlibs.pri was not found\"\n\n#    }\n\n#    exists ($(ROOTSYS)/include/rootlibs.pri){\n\n#       include ($(ROOTSYS)/include/rootlibs.pri)\n\n#    }\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# QMake must be defined by Qmake alone but ... It is not :(  Sept 6, 2005 V.Fine)\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# define whether the current QMake is from Qt4 distribution\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#  I dropped using .dylib as extension with 10.5 as MacOS X now allows .so . Fons. \n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-- permanent components to be included into any \".pro\" file to build the RootCint dictionary\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# this trick does not work yet (To be fixed. V.Fine)\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# -- trick to force the trivial symbolic link under UNIX\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "graf2d/qt/qt.pro" : {
      "ObjectId" : "a2ec7f2ca2d1354d6fe256028e05f75b30a2bf10",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "######################################################################\n\n# Automatically generated by qmake (1.07a) Tue Jun 14 13:51:05 2005\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# QT += qt3support\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#  DEFINES += QT_VERSION=0x40000\n\n#   INCLUDEPATH +=$(QTDIR)/include  $(QTDIR)/include/ActiveQt  $(QTDIR)/include/Qt  $(QTDIR)/include/Qt3Support $(QTDIR)/include/QtAssistant  $(QTDIR)/include/QtCore  $(QTDIR)/include/QtGui  $(QTDIR)/include/QtNetwork   $(QTDIR)/include/QtOpenGL   $(QTDIR)/include/QtXml\n\n#   LIBS += -L$(QTDIR)/lib \n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#!isEmpty(QTROOTSYSPATHINSTALL) {\n\n#  DESTDIR=$$QTROOTSYSDIR\n\n#}\n\n#isEmpty(DESTDIR) {\n\n#  DESTDIR=..\n\n#}\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#QTROOTSYSDIR=$$DESTDIR\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#   List of the package classes the ROOT dictionary should be created for\n\n#\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#  copy from rootlibs.pri for GQt project\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#   LIBS += -L$(ROOTSYS)/lib -lGpad -lRint\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#  INSTALLS += sharedsolink\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Input\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#  -- working directory \n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#The following line was inserted by qt3to4\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "graf2d/quartz/CMakeLists.txt" : {
      "ObjectId" : "32851e9934992259ef0287d26f18b186cd754bc4",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT graf2d/quartz package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "graf2d/win32gdk/CMakeLists.txt" : {
      "ObjectId" : "409f97726a098f3299cadd55ea0736add0d82318",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT graf2d/win32gdk package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "graf2d/x11/CMakeLists.txt" : {
      "ObjectId" : "da4dbac330c8acd2cf4ac37d13c5d8b76f31fc17",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT graf2d/x11 package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "graf2d/x11ttf/CMakeLists.txt" : {
      "ObjectId" : "20a9ab7c203932e4d419a518f6915874d564a22e",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT graf2d/x11ttf package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "graf3d/CMakeLists.txt" : {
      "ObjectId" : "fde5b9d95fb4491a155ef14543c9cee7580e9e1d",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# special CMakeLists.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 22
      },
      "1" : {
        "Text" : "# special CMakeLists.txt\n",
        "Line" : 3,
        "CharPositionInLine" : 24
      },
      "2" : {
        "Text" : "# special CMakeLists.txt\n",
        "Line" : 6,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# special CMakeLists.txt\n",
        "Line" : 7,
        "CharPositionInLine" : 24
      },
      "4" : {
        "Text" : "# special CMakeLists.txt\n",
        "Line" : 14,
        "CharPositionInLine" : 27
      },
      "CommentCount" : 5
    },
    "graf3d/eve/CMakeLists.txt" : {
      "ObjectId" : "9ce92af522022e1bd7bb97e9acabf035abe35dd6",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT graf3d/eve package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "graf3d/ftgl/CMakeLists.txt" : {
      "ObjectId" : "fea9270b05cd42d55b86a8bc0165c9ece863d3ef",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT graf3d/ftgl package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "graf3d/g3d/CMakeLists.txt" : {
      "ObjectId" : "1c78213eeee8ed096927aad3076607a94b3fee57",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT graf3d/g3d package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "graf3d/gl/CMakeLists.txt" : {
      "ObjectId" : "a6216dc6bae0b6b843e704e915cd8d7a80833895",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT graf3d/gl package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "graf3d/glew/CMakeLists.txt" : {
      "ObjectId" : "423d9e8772a5bc324550d02e8ab454f8ce3a0e96",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT graf3d/glew package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "graf3d/gviz3d/CMakeLists.txt" : {
      "ObjectId" : "bc3feeb6fa88a71105168c923ab914c898c18d9b",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT graf3d/gviz3d package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "graf3d/x3d/CMakeLists.txt" : {
      "ObjectId" : "cb53e2ccd41f18ed7a7ea51c5af68315fe5acb55",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT graf3d/x3d package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "gui/CMakeLists.txt" : {
      "ObjectId" : "f2e122f0581cd316cbeb1a62104fae85bed6dea9",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "gui/fitpanel/CMakeLists.txt" : {
      "ObjectId" : "058ae2da8eb9a0737e5146efb7af5c483c3c020c",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT gui/fitpanel package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "gui/fitpanel/test/Makefile" : {
      "ObjectId" : "602389c39cf026dba2b692951030f6b3ee46aa35",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for the ROOT test programs.\n\n# This Makefile shows nicely how to compile and link applications\n\n# using the ROOT libraries on all supported platforms.\n\n#\n\n# Copyright (c) 2000 Rene Brun and Fons Rademakers\n\n#\n\n# Author: Fons Rademakers, 29/2/2000\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#------------------------------------------------------------------------------\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "gui/ged/CMakeLists.txt" : {
      "ObjectId" : "b74de26d879b7efdba6a10e046c04151c0bd3e84",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT gui/ged package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "gui/gui/CMakeLists.txt" : {
      "ObjectId" : "87cfbcbf232b5b18701e882cd5d28034b33a64d4",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT gui/gui package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "gui/guibuilder/CMakeLists.txt" : {
      "ObjectId" : "ce7e97371b4ddb5d7ae894a5d7effc878c549c33",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT gui/guibuilder package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "gui/guihtml/CMakeLists.txt" : {
      "ObjectId" : "8dc8186e53972ef8288ee96eefb1fba648296784",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT gui/guihtml package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "gui/qtgsi/CMakeLists.txt" : {
      "ObjectId" : "bf5202b604a1ae68eabf0e65a0e1afcdb29ee91f",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT gui/qtgsi package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "gui/qtgsi/test/Makefile" : {
      "ObjectId" : "f021aa21127b8ea0db4d9c4a3fe428659a4d75ab",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "gui/qtgsi/test/example1/Makefile" : {
      "ObjectId" : "5e704f954e0509a0eec7c101cfe4c821d7a84448",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#############################################################################\n\n# Qt ROOT  example Makefile\n\n# Author: D.Bertini <D.Bertini@gsi.de>\n\n# Date:06/29/01\n\n#############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#debuggeng\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Linking with support libraries\n\n# X11\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Meta-object compiler\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Linking shared libraries\n\n#   - Build the $(TARGET) library, eg. lib$(TARGET).so.2.0.1\n\n#   - Place target in $(DESTDIR) - which has a trailing /\n\n#   - Usually needs to incorporate $(VER_MAJ), $(VER_MIN) and $(VER_PATCH)\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#############################################################################\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "####### Compiler, tools and options\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#QTCXXFLAGS=\t-I$(QTINCDIR) $(CXXFLAGS) -DQT3_SUPPORT -DDEBUG_LEVEL=$(QDL) $(shell root-config --cflags)\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "####### Target\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "####### Files\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "####### Implicit rules\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "####### Build rules\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "####### Compile\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "gui/qtgsi/test/example2/Makefile" : {
      "ObjectId" : "70f3bfec6e4bad74a2ffbb722d7c0d9bd4a21184",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "gui/qtgsi/test/example2/qtrootexample.pro" : {
      "ObjectId" : "45b89a34dd22ae4ccf2083ec6418c27e6587dea3",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "gui/qtroot/CMakeLists.txt" : {
      "ObjectId" : "d8135ca30288d84e2019e861754c27c087681af6",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT gui/qtroot package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "gui/qtroot/qtroot.pro" : {
      "ObjectId" : "8911ba76572ab5a3ed5b6a9d6a4728121f58e36b",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "######################################################################\n\n# Automatically generated by qmake (1.07a) Mon Jun 20 18:27:55 2005\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Input\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#    LIBS -= -lGQt\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#  -- working directory \n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#The following line was inserted by qt3to4\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "gui/recorder/CMakeLists.txt" : {
      "ObjectId" : "083de08d8acbc866191899cbf86c170c499c7a37",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT gui/recorder package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "gui/sessionviewer/CMakeLists.txt" : {
      "ObjectId" : "2c8a0a90bbb378eb8462254000fb11ff08d9b876",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT gui/sessionviewer package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "hist/CMakeLists.txt" : {
      "ObjectId" : "455ed789fe17d7c2f42f916e3c373a6e4707c866",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# special CMakeLists.txt\n\n# special CMakeLists.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 35
      },
      "1" : {
        "Text" : "# special CMakeLists.txt\n",
        "Line" : 4,
        "CharPositionInLine" : 35
      },
      "CommentCount" : 2
    },
    "hist/hbook/CMakeLists.txt" : {
      "ObjectId" : "e28b795e010501ebba84171e11287cf88fbe25fc",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT hist/hbook package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "hist/hist/CMakeLists.txt" : {
      "ObjectId" : "1f2fc871fac4de6a1ccbfe14ffea208b56f5025c",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT hist/hist package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is to avoid a circular dependency g3d <--> hist \n",
        "Line" : 11,
        "CharPositionInLine" : 58
      },
      "CommentCount" : 2
    },
    "hist/histpainter/CMakeLists.txt" : {
      "ObjectId" : "43a0b2de34afd8c049c6e1f5b27d2a005119c309",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT hist/histpainter package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "hist/spectrum/CMakeLists.txt" : {
      "ObjectId" : "5f4d0be8216d4c62bc652436e35fc06184140c8c",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT hist/spectrum package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "hist/spectrumpainter/CMakeLists.txt" : {
      "ObjectId" : "29d2aca1d8d29a446608745ed76d7124f109d225",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT hist/spectrumpainter package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "html/CMakeLists.txt" : {
      "ObjectId" : "82fdc4dce40c60aa46a14d6faa51e26c53ea1dc3",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT html package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/cling/CMakeLists.txt" : {
      "ObjectId" : "5f06b953cee1150795207f461240375c561d3acd",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are not building as a part of LLVM, build Cling as an\n\n# standalone project, using LLVM as an external library:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add appropriate flags for GCC\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: docs.\n\n#add_subdirectory(test)\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Workaround for MSVS10 to avoid the Dialog Hell\n\n# FIXME: This could be removed with future version of CMake.\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "interpreter/cling/Makefile" : {
      "ObjectId" : "af9924d3b60f16a483b93d91ad6de423f604379c",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- Makefile --------------------------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If CLING_LEVEL is not set, then we are the top-level Makefile. Otherwise, we\n\n# are being included from a subdirectory makefile.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Common Makefile code, shared by all Cling Makefiles.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set LLVM source root level.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Include LLVM common makefile.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set common Cling build flags.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# work with it enabled with GCC), Cling/llvm-gc don't support it yet, and newer\n\n# GCC's have false positive warnings with it on Linux (which prove a pain to\n\n# fix). For example:\n\n#   http://gcc.gnu.org/PR41874\n\n#   http://gcc.gnu.org/PR41838\n\n#\n\n# We can revisit this when LLVM/Cling support it.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###\n\n# Cling Top Level specific stuff.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "interpreter/cling/docs/Makefile" : {
      "ObjectId" : "c2711f0560c87c800b74e14a796aae1470a37bb9",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- docs/Makefile ---------------------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#IMAGES     := $(wildcard $(PROJ_SRC_DIR)/img/*.*)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Live documentation is generated for the web site using this target:\n\n# 'make generated BUILD_FOR_WEBSITE=1'\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "interpreter/cling/include/Makefile" : {
      "ObjectId" : "98d7d8a7c704b68bd8d9fa49aaa96b1cda74c3e6",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "interpreter/cling/include/cling/Makefile" : {
      "ObjectId" : "6c099ea365aba2d7c397b2863e992b8aa43676c2",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "interpreter/cling/lib/CMakeLists.txt" : {
      "ObjectId" : "ff8c6fc183c135b37a8f34f38befb7cfc07fac0a",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/cling/lib/Interpreter/CMakeLists.txt" : {
      "ObjectId" : "c0c38b1166790b7c9165e7f995b61ef62d944047",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(LLVM_USED_LIBS\n\n#  clingWhatever\n\n#)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_dependencies(clangDriver ClangAttrList ClangDiagnosticDriver\n\n#                 ClangDriverOptions ClangCC1Options ClangCC1AsOptions)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/cling/lib/Interpreter/Makefile" : {
      "ObjectId" : "ce3a436405a1dbdb6099f0fb85fbd56fb955df35",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- cling/lib/Interpreter/Makefile-----------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n\n#\n\n#  This implements the a C++ interpreter backend.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Inform the sources about their install location\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/cling/lib/Makefile" : {
      "ObjectId" : "ac330e10926df7f4b7def4b2726d112412ee3f31",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Makefile ----------------------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/cling/lib/MetaProcessor/CMakeLists.txt" : {
      "ObjectId" : "d86c3861c7d4302ba7448c3b1cd3f1f96a64287c",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/cling/lib/MetaProcessor/Makefile" : {
      "ObjectId" : "19fb1ee36f031e0b2099e0e7744ff1dad7d5d492",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- cling/lib/MetaProcessor/Makefile---------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n\n#\n\n#  This implements the a C++ interpreter user frontend.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/cling/lib/UserInterface/CMakeLists.txt" : {
      "ObjectId" : "abfe134f2298e65fe6fa40bb574b7024ec9bde8f",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(LLVM_LINK_COMPONENTS mc)\n\n#set(LLVM_USED_LIBS clangBasic clangAST clangParse)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Look for textinput in current ROOT source tree\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Find svn information\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#Find and clean the url of the actual repository\n",
        "Line" : 36,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "#Point the url to the rigt location\n",
        "Line" : 40,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "#Checkout the source\n",
        "Line" : 43,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# windows.h doesn't compile with /Za\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#add_subdirectory(textinput)\n\n#add_dependencies(clangDriver ClangAttrList ClangDiagnosticDriver\n\n#                 ClangDriverOptions ClangCC1Options ClangCC1AsOptions)\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "interpreter/cling/lib/UserInterface/Makefile" : {
      "ObjectId" : "0ab3135bd84d3c0695b0f49c3869b6d4bc2526cb",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- cling/lib/UserInterface/Makefile---------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n\n#\n\n#  This implements the a C++ interpreter user frontend.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# trigger checkput before building\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2,
      "Errorlog" : "line 27:111 token recognition error at: '\\1'\n"
    },
    "interpreter/cling/lib/Utils/CMakeLists.txt" : {
      "ObjectId" : "f5dd8b5a65ec4f5b5efc4949945b2f90b7f42e8c",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/cling/lib/Utils/Makefile" : {
      "ObjectId" : "0012bbb00e2efa803d93a31a12d0f8cb28821705",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- cling/lib/MetaProcessor/Makefile---------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n\n#\n\n#  This implements the a C++ interpreter user frontend.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/cling/test/CMakeLists.txt" : {
      "ObjectId" : "470f94aafe7f451692501134a918df889a543888",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#configure_file(\r\n\n#  ${CMAKE_CURRENT_SOURCE_DIR}/Unit/lit.site.cfg.in\r\n\n#  ${CMAKE_CURRENT_BINARY_DIR}/Unit/lit.site.cfg\r\n\n#  @ONLY)\r\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Installed LLVM does not contain ${CMAKE_CFG_INTDIR} in paths.\r\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#  if( NOT CLING_BUILT_STANDALONE )\r\n\n#    add_custom_target(check-all\r\n\n#      COMMAND ${PYTHON_EXECUTABLE}\r\n\n#                ${LIT}\r\n\n#                --param build_config=${CMAKE_CFG_INTDIR}\r\n\n#                --param build_mode=${RUNTIME_BUILD_MODE}\r\n\n#                ${LIT_ARGS}\r\n\n#                ${LLVM_BINARY_DIR}/test\r\n\n#                ${CMAKE_CURRENT_BINARY_DIR}\r\n\n#                COMMENT \"Running Cling and LLVM regression tests\")\r\n\n#    add_dependencies(check-all cling-test.deps)\r\n\n#    if ( LLVM_INCLUDE_TESTS )\r\n\n#      add_dependencies(cling-test.deps ClangUnitTests)\r\n\n#      add_dependencies(check-all check.deps)\r\n\n#    endif ( LLVM_INCLUDE_TESTS )\r\n\n#    add_dependencies(cling-test.deps\r\n\n#                     llvm-dis llc opt\r\n\n#                     FileCheck count not\r\n\n#                     )\r\n\n#  endif()\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "interpreter/cling/test/Makefile" : {
      "ObjectId" : "b25c02833b0f4c75d55d32b70afdc7629225e57f",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Test in all immediate subdirectories if unset.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 'lit' wants objdir paths, so it will pick up the lit.site.cfg.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Allow EXTRA_TESTDIRS to provide additional test directories.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure any extra test suites can find the main site config.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "interpreter/cling/tools/CMakeLists.txt" : {
      "ObjectId" : "e5dc2ccb22622c038b16f724e597fa12e607e8eb",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/cling/tools/Makefile" : {
      "ObjectId" : "70dde9053afc2681f0f0233cd2f1bb912e391c40",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/Makefile --------------------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/cling/tools/driver/CMakeLists.txt" : {
      "ObjectId" : "e975364b4e1902678d3db7c06318c1588d8e31aa",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set( LLVM_LINK_COMPONENTS\n\n# jit\n\n# linker\n\n# native\n\n#  )\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/cling/tools/driver/Makefile" : {
      "ObjectId" : "a45b0f6a3b0b40538821277e25355cd421657d7f",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/driver/Makefile -------------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Keep exports to resolve symbols in JIT\n\n#TOOL_NO_EXPORTS = 1\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# cygwin, export all symbols\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "interpreter/llvm/src/CMakeLists.txt" : {
      "ObjectId" : "1d216924b1560ad942f2861b2b44150b3714af72",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See docs/CMake.html for instructions about how to build LLVM with CMake.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add path for custom modules\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sanity check our source directory to make sure that we are not trying to\n\n# generate an in-tree build (unless on MSVC_IDE, where it is ok), and to make\n\n# sure that we don't have any stray generated files lying around in the tree\n\n# (which would end up getting picked up by header search, instead of the correct\n\n# versions).\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# List of targets with JIT support:\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# MSVC has a gazillion warnings with this.\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Verify we are on a supported platform\n",
        "Line" : 179,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# If enabled, verify we are on a platform that supports oprofile.\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Define an option controlling whether we should build for 32-bit on 64-bit\n\n# platforms, where supported.\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# TODO: support other platforms and toolchains.\n",
        "Line" : 202,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Define the default arguments to use with 'lit', and an option for the user to\n\n# override.\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# On Win32 hosts, provide an option to specify the path to the GnuWin32 tools.\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define options to control the inclusion and default build behavior for\n\n# components which may not strictly be necessary (tools, runtime, examples, and\n\n# tests).\n\n#\n\n# This is primarily to support building smaller or faster project files.\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# All options referred to from HandleLLVMOptions have to be specified\n\n# BEFORE this include, otherwise options will not be correctly set on\n\n# first cmake run\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# By default, we target the host, but this can be overridden at CMake\n\n# invocation time.\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Verify that we can find a Python interpreter,\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "######\n\n# LLVMBuild Integration\n\n#\n\n# We use llvm-build to generate all the data required by the CMake based\n\n# build system in one swoop:\n\n#\n\n#  - We generate a file (a CMake fragment) in the object root which contains\n\n#    all the definitions that are required by CMake.\n\n#\n\n#  - We generate the library table used by llvm-config.\n\n#\n\n#  - We generate the dependencies for the CMake fragment, so that we will\n\n#    automatically reconfigure outselves.\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Create the list of optional components that are enabled\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# On Win32, CMake doesn't properly handle piping the default output/error\n\n# streams into the GUI console. So, we explicitly catch and report them.\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Include the generated CMake fragment. This will define properties from the\n\n# LLVMBuild files in a format which is easy to consume from CMake, and will add\n\n# the dependencies so that CMake will reconfigure properly when the LLVMBuild\n\n# files change.\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "######\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Configure all of the various header file fragments LLVM uses which depend on\n\n# configuration variables.\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Produce the target definition files, which provide a way for clients to easily\n\n# include various classes of targets.\n",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Configure the three LLVM configuration header files.\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# On FreeBSD, /usr/local/* is not used by default. In order to build LLVM\n\n# with libxml2, iconv.h, etc., we must add /usr/local paths.\n",
        "Line" : 383,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Make sure we don't get -rdynamic in every binary. For those that need it,\n\n# use set_target_properties(target PROPERTIES ENABLE_EXPORTS 1)\n",
        "Line" : 393,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# People report that -O3 is unreliable on MinGW. The traditional\n\n# build also uses -O2 for that reason:\n",
        "Line" : 401,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Put this before tblgen. Else we have a circular dependence.\n",
        "Line" : 406,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# This utility is used to prevent crashing tests from calling Dr. Watson on\n\n# Windows.\n",
        "Line" : 442,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Add a global check rule now that all subdirectories have been traversed\n\n# and we know the total set of lit testsuites.\n",
        "Line" : 447,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Exclude include/llvm/CMakeFiles/intrinsics_gen.dir, matched by \"*.def\"\n",
        "Line" : 482,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# TODO: make and install documentation.\n",
        "Line" : 487,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Workaround for MSVS10 to avoid the Dialog Hell\n\n# FIXME: This could be removed with future version of CMake.\n",
        "Line" : 495,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 32
    },
    "interpreter/llvm/src/Makefile" : {
      "ObjectId" : "7a1b19045945fe86bf9a233839e4dcfbacbfa52d",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#===- ./Makefile -------------------------------------------*- Makefile -*--===#\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n#===------------------------------------------------------------------------===#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Top-Level LLVM Build Stages:\n\n#   1. Build lib/Support and lib/TableGen, which are used by utils (tblgen).\n\n#   2. Build utils, which is used by IR.\n\n#   3. Build IR, which builds the Intrinsics.inc file used by libs.\n\n#   4. Build libs, which are needed by llvm-config.\n\n#   5. Build llvm-config, which determines inter-lib dependencies for tools.\n\n#   6. Build tools, runtime, docs.\n\n#\n\n# When cross-compiling, there are some things (tablegen) that need to\n\n# be build for the build system first.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If \"RC_ProjectName\" exists in the environment, and its value is\n\n# \"llvmCore\", then this is an \"Apple-style\" build; search for\n\n# \"Apple-style\" in the comments for more info.  Anything else is a\n\n# normal build.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Normal build (not \"Apple-style\").\n",
        "Line" : 27,
        "CharPositionInLine" : 60
      },
      "4" : {
        "Text" : "# Use NO_INSTALL define of the Makefile of each directory for deciding\n\n# if the directory is installed or not\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Don't build unittests when ONLY_TOOLS is set.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If we're cross-compiling, build the build-hosted tools first\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Include the main makefile machinery.\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Specify options to pass to configure script when we're\n\n# running the dist-check target\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If SHOW_DIAGNOSTICS is enabled, clear the diagnostics file first.\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#------------------------------------------------------------------------\n\n# Make sure the generated files are up-to-date. This must be kept in\n\n# sync with the AC_CONFIG_HEADER and AC_CONFIG_FILE invocations in\n\n# autoconf/configure.ac.\n\n# Note that Makefile.config is covered by its own separate rule\n\n# in Makefile.rules where it can be reused by sub-projects.\n\n#------------------------------------------------------------------------\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# NOTE: This needs to remain as the last target definition in this file so\n\n# that it gets executed last.\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Multiline variable defining a recursive function for finding svn repos rooted at\n\n# a given path. svnup() requires one argument: the root to search from.\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# declare all targets at this level to be serial:\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Building \"Apple-style.\"\n",
        "Line" : 280,
        "CharPositionInLine" : 5
      },
      "15" : {
        "Text" : "# In an Apple-style build, once configuration is done, lines marked\n\n# \"Apple-style\" are removed with sed!  Please don't remove these!\n\n# Look for the string \"Apple-style\" in utils/buildit/build_llvm.\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Building \"Apple-style.\"\n",
        "Line" : 284,
        "CharPositionInLine" : 42
      },
      "17" : {
        "Text" : "# Building \"Apple-style.\"\n",
        "Line" : 285,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 18
    },
    "interpreter/llvm/src/bindings/Makefile" : {
      "ObjectId" : "c545b28854cc71645fa205f545e1a64141cab078",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- bindings/Makefile -----------------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/bindings/ocaml/Makefile" : {
      "ObjectId" : "a89caefb4ded57011f70cc36fda8b06223f32a2e",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- bindings/ocaml/Makefile -----------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/bindings/ocaml/analysis/Makefile" : {
      "ObjectId" : "cbfcb246704d0658ddff42b0b28bbcd1b33586d8",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- bindings/ocaml/analysis/Makefile --------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n\n# \n\n# This is the makefile for the Objective Caml Llvm_analysis interface.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/bindings/ocaml/bitreader/Makefile" : {
      "ObjectId" : "a1c7de895cf82287d281f0bbf80d621eb824a371",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- bindings/ocaml/bitreader/Makefile -------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n\n# \n\n# This is the makefile for the Objective Caml Llvm_bitreader interface.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/bindings/ocaml/bitwriter/Makefile" : {
      "ObjectId" : "cec0a59c31b6b63c80c0149a48ced7097cfba758",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- bindings/ocaml/bitwriter/Makefile -------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n\n# \n\n# This is the makefile for the Objective Caml Llvm_bitwriter interface.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/bindings/ocaml/executionengine/Makefile" : {
      "ObjectId" : "5fa3f22048f490da429f7648dff24fc5abec07d5",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- bindings/ocaml/executionengine/Makefile --------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n\n# \n\n# This is the makefile for the Objective Caml Llvm_executionengine interface.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/bindings/ocaml/llvm/Makefile" : {
      "ObjectId" : "203075a9bddeb6c204530717f64fef4703baa8c2",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- bindings/ocaml/llvm/Makefile ------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n\n# \n\n# This is the makefile for the Objective Caml Llvm interface.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Easy way of generating META in the objdir\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/bindings/ocaml/target/Makefile" : {
      "ObjectId" : "3c48cd8fc20897be9f8974667829e2450f0d4462",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- bindings/ocaml/target/Makefile ----------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n\n#\n\n# This is the makefile for the Objective Caml Llvm_target interface.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/bindings/ocaml/transforms/Makefile" : {
      "ObjectId" : "05fcd90097fe91c049193cc5c036249108c7ef4d",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- bindings/ocaml/transforms/Makefile ------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/bindings/ocaml/transforms/ipo/Makefile" : {
      "ObjectId" : "130d74c90607082132df2c126ef29f9956b6978b",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- bindings/ocaml/transforms/scalar/Makefile -----------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n\n#\n\n# This is the makefile for the Objective Caml Llvm_scalar_opts interface.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/bindings/ocaml/transforms/scalar/Makefile" : {
      "ObjectId" : "cbaffa4ea7ae27be46cadd1e77fb8cd6fd27ff1f",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- bindings/ocaml/transforms/scalar/Makefile -----------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n\n#\n\n# This is the makefile for the Objective Caml Llvm_scalar_opts interface.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/cmake/config-ix.cmake" : {
      "ObjectId" : "27a05dcb626679a24bf278d570f37ba2b5429236",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We consider Cygwin as another Unix\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Used by check_symbol_exists:\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Helper macros and functions\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# include checks\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# library checks\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# this could be Android\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# function checks\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# available programs checks\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Define LLVM_HAS_ATOMICS if gcc or MSVC atomic builtins are supported.\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Disable gcc's potentially uninitialized use analysis as it presents lots of\n\n# false positives.\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Only recent versions of gcc make the distinction between -Wuninitialized\n\n# and -Wmaybe-uninitialized. If -Wmaybe-uninitialized isn't supported, just\n\n# turn off all uninitialized use warnings.\n",
        "Line" : 329,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# By default, we target the host, but this can be overridden at CMake\n\n# invocation time.\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Determine the native architecture.\n",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# We don't have an ASM parser for all architectures yet.\n",
        "Line" : 387,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# We don't have an disassembler for all architectures yet.\n",
        "Line" : 392,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# TODO: Check existence of libraries.\n\n#   include(CheckLibraryExists)\n\n#   CHECK_LIBRARY_EXISTS(imagehlp ??? . HAVE_LIBIMAGEHLP)\n",
        "Line" : 401,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# TODO\n",
        "Line" : 420,
        "CharPositionInLine" : 29
      },
      "17" : {
        "Text" : "# TODO\n",
        "Line" : 421,
        "CharPositionInLine" : 30
      },
      "18" : {
        "Text" : "# FIXME: Signal handler return type, currently hardcoded to 'void'\n",
        "Line" : 439,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Check if threading primitives aren't supported on this platform\n",
        "Line" : 443,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 20
    },
    "interpreter/llvm/src/cmake/modules/AddLLVM.cmake" : {
      "ObjectId" : "f0b31ce6538566d8b2bf31d12925c901e118413e",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ensure that the system libraries always comes last on the\n\n# list. Without this, linking the unit tests on MinGW fails.\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Add the explicit dependency information for this library.\n\n#\n\n# It would be nice to verify that we have the dependencies for this library\n\n# name, but using get_property(... SET) doesn't suffice to determine if a\n\n# property has been set to an empty value.\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Add empty \"phony\" target\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Darwin-specific linker flags for loadable modules.\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "#  set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${LLVM_EXAMPLES_BINARY_DIR})\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add external project that may want to be built as part of llvm such as Clang,\n\n# lld, and Polly. This adds two options. One for the source directory of the\n\n# project, which defaults to ${CMAKE_CURRENT_SOURCE_DIR}/${name}. Another to\n\n# enable or disable building it with everthing else.\n\n# Additional parameter can be specified as the name of directory.\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Generic support for adding a unittest.\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# gtest needs it for raw_ostream.\n",
        "Line" : 169,
        "CharPositionInLine" : 16
      },
      "8" : {
        "Text" : "# Visual Studio 2012 only supports up to 8 template parameters in\n\n# std::tr1::tuple by default, but gtest requires 10\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# This function provides an automatic way to 'configure'-like generate a file\n\n# based on a set of common and custom variables, specifically targetting the\n\n# variables needed for the 'lit.site.cfg' files. This function bundles the\n\n# common variables that any Lit instance is likely to need, and custom\n\n# variables can be passed in.\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Default for all other unix like systems.\n",
        "Line" : 225,
        "CharPositionInLine" : 9
      },
      "11" : {
        "Text" : "# CMake hardcodes the library locaction using rpath.\n\n# Therefore LD_LIBRARY_PATH is not required to run binaries in the\n\n# build dir. We pass it anyways.\n",
        "Line" : 226,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Configuration-time: See Unit/lit.site.cfg.in\n",
        "Line" : 232,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# A raw function to create a lit target. This is used to implement the testuite\n\n# management functions.\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# A function to add a set of lit test suites to be driven through 'check-*' targets.\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# EXCLUDE_FROM_ALL excludes the test ${target} out of check-all.\n",
        "Line" : 287,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Register the testsuites, params and depends for the global check rule.\n",
        "Line" : 289,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Produce a specific suffixed check rule.\n",
        "Line" : 296,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 18
    },
    "interpreter/llvm/src/cmake/modules/AddLLVMDefinitions.cmake" : {
      "ObjectId" : "33ac9731db5db73a9813f2da571980b0e7cc407c",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# There is no clear way of keeping track of compiler command-line\n\n# options chosen via `add_definitions', so we need our own method for\n\n# using it on tools/llvm-config/CMakeLists.txt.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Beware that there is no implementation of remove_llvm_definitions.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We don't want no semicolons on LLVM_DEFINITIONS:\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "interpreter/llvm/src/cmake/modules/CMakeLists.txt" : {
      "ObjectId" : "f51e9af8db0db2b77a19fa8ab65b7537e49a0d1a",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/cmake/modules/CheckAtomic.cmake" : {
      "ObjectId" : "0d63a82b97a06090085764e806670ac207eac476",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# atomic builtins are required for threading support.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/cmake/modules/ChooseMSVCCRT.cmake" : {
      "ObjectId" : "6a2f426b269407d0e852be1ab6c1cf215357e5d0",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The macro choose_msvc_crt() takes a list of possible\n\n# C runtimes to choose from, in the form of compiler flags,\n\n# to present to the user. (MTd for /MTd, etc)\n\n#\n\n# The macro is invoked at the end of the file.\n\n#\n\n# CMake already sets CRT flags in the CMAKE_CXX_FLAGS_* and\n\n# CMAKE_C_FLAGS_* variables by default. To let the user\n\n# override that for each build type:\n\n# 1. Detect which CRT is already selected, and reflect this in\n\n# LLVM_USE_CRT_* so the user can have a better idea of what\n\n# changes they're making.\n\n# 2. Replace the flags in both variables with the new flag via a regex.\n\n# 3. set() the variables back into the cache so the changes\n\n# are user-visible.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### Helper macros: ###\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Trying to match the beginning or end of the string with stuff\n\n# like [ ^]+ didn't work, so use a bunch of parentheses instead.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Find the selected-by-CMake CRT for each build type, if any.\n\n# Strip off the leading slash and any whitespace.\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Replaces or adds a flag to a variable.\n\n# Expects 'flag' to be padded with spaces.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Make sure this change gets reflected in the cache/gui.\n\n# CMake requires the docstring parameter whenever set() touches the cache,\n\n# so get the existing docstring and re-use that.\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# List of valid CRTs for MSVC\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "interpreter/llvm/src/cmake/modules/GetHostTriple.cmake" : {
      "ObjectId" : "671a8ce7d7ce2e0b3f99516f3424fd38573568ba",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Returns the host triple.\n\n# Invokes config.guess\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/cmake/modules/GetSVN.cmake" : {
      "ObjectId" : "acccc12a94e8e6f29b02caf70e7c425e8b6de4e7",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake project that writes Subversion revision information to a header.\n\n#\n\n# Input variables:\n\n#   FIRST_SOURCE_DIR  - First source directory\n\n#   FIRST_REPOSITORY  - The macro to define to the first revision number.\n\n#   SECOND_SOURCE_DIR - Second source directory\n\n#   SECOND_REPOSITORY - The macro to define to the second revision number.\n\n#   HEADER_FILE       - The header file to write\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Repository information for the first repository.\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Repository information for the second repository.\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Copy the file only if it has changed.\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "interpreter/llvm/src/cmake/modules/HandleLLVMOptions.cmake" : {
      "ObjectId" : "516f2dd9ebd27bbfdd0b7960b2d923b42ea1adba",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This CMake module is responsible for interpreting the user defined LLVM_\n\n# options and executing the appropriate CMake commands to realize the users'\n\n# selections.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MSVC doesn't like _DEBUG on release builds. See PR 4379.\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# On Release builds cmake automatically defines NDEBUG, so we\n\n# explicitly undefine it:\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Also remove /D NDEBUG to avoid MSVC warnings about conflicting defines.\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Maximum path length is 160 for non-unicode paths\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# FIXME: Maximum path length is currently set to 'safe' fixed value\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Xcode has -mdynamic-no-pic on by default, which overrides -fPIC. I don't\n\n# know how to disable this, so just force ENABLE_PIC off for now.\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# On Windows all code is PIC. MinGW warns if -fPIC is used.\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# MinGW warns if -fvisibility-inlines-hidden is used.\n",
        "Line" : 109,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# TODO: support other platforms and toolchains.\n",
        "Line" : 118,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# On Win32 using MS tools, provide an option to set the number of parallel jobs\n\n# to use.\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add definitions that make MSVC much less annoying.\n",
        "Line" : 158,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# For some reason MS wants to deprecate a bunch of standard functions...\n",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Disabled warnings.\n",
        "Line" : 168,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Suppress 'switch statement contains 'default' but no 'case' labels'\n\n# Suppress 'unary minus operator applied to unsigned type, result still unsigned'\n\n# Suppress 'qualifier applied to function type has no meaning; ignored'\n\n# Suppress 'qualifier applied to reference type; ignored'\n\n# Suppress 'nonstandard extension used : formal parameter 'identifier' was previously defined as a type'\n\n# Suppress ''argument' : conversion from 'type1' to 'type2', possible loss of data'\n\n# Suppress ''var' : conversion from 'size_t' to 'type', possible loss of data'\n\n# Suppress 'An exported class was derived from a class that was not exported.'\n\n# Suppress ''declaration' : no matching operator delete found; memory will not be freed if initialization throws an exception'\n\n# Suppress 'behavior change: an object of POD type constructed with an initializer of the form () will be default-initialized'\n\n# Suppress 'new behavior: elements of array 'array' will be default initialized'\n\n# Suppress ''this' : used in base member initializer list'\n\n# Suppress ''identifier' : decorated name length exceeded, name was truncated'\n\n# Suppress 'function call missing argument list'\n\n# Suppress ''derived class' : destructor could not be generated because a base class destructor is inaccessible'\n\n# Suppress ''function' : not all control paths return a value'\n\n# Suppress ''function' : destructor never returns, potential memory leak'\n\n# Suppress ''type' : forcing value to bool 'true' or 'false' (performance warning)'\n",
        "Line" : 169,
        "CharPositionInLine" : 12
      },
      "15" : {
        "Text" : "# Promoted warnings.\n",
        "Line" : 188,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Promote 'enumerator in switch of enum is not handled' to level 1 warning.\n",
        "Line" : 189,
        "CharPositionInLine" : 12
      },
      "17" : {
        "Text" : "# Promoted warnings to errors.\n",
        "Line" : 191,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Promote 'nonstandard extension used : class rvalue used as lvalue' to error.\n",
        "Line" : 192,
        "CharPositionInLine" : 12
      },
      "19" : {
        "Text" : "# Enable warnings\n",
        "Line" : 195,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# No MSVC equivalent available\n",
        "Line" : 199,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# Turn off missing field initializer warnings for gcc to avoid noise from\n\n# false positives with empty {}. Turn them on otherwise (they're off by\n\n# default for clang).\n",
        "Line" : 209,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Append -fno-omit-frame-pointer and turn on debug info to get better\n\n# stack traces.\n",
        "Line" : 237,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Turn on sanitizers if necessary.\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# -pie is required for MSan.\n",
        "Line" : 255,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 25
    },
    "interpreter/llvm/src/cmake/modules/LLVM-Config.cmake" : {
      "ObjectId" : "163401c857c54b9258379097089085915906de6d",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Returns in `return_var' a list of system libraries used by LLVM.\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Sets variable `return_var' to ON if `library' corresponds to a\n\n# LLVM supported target. To OFF if it doesn't.\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# This is a variant intended for the final user:\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Expand some keywords:\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Translate symbolic component names to real libraries:\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# add codegen, asmprinter, asmparser, disassembler\n",
        "Line" : 96,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# already processed\n",
        "Line" : 127,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# same case as in `native'.\n",
        "Line" : 131,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# already processed\n",
        "Line" : 133,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Canonize the component name:\n",
        "Line" : 137,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# The component is unknown. Maybe is an omitted target?\n",
        "Line" : 141,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Expand dependencies while topologically sorting the list of libraries:\n",
        "Line" : 152,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Remove duplicates at the front:\n",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Find the maximum index that doesn't have to be re-processed:\n",
        "Line" : 165,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Return just the libraries included in this build:\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 15
    },
    "interpreter/llvm/src/cmake/modules/LLVMParseArguments.cmake" : {
      "ObjectId" : "ce19be114b311dd7e23c4c044b3d716af4fce8d5",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copied from http://www.itk.org/Wiki/CMakeMacroParseArguments under\n\n# http://creativecommons.org/licenses/by/2.5/.\n\n#\n\n# The PARSE_ARGUMENTS macro will take the arguments of another macro and define\n\n# several variables. The first argument to PARSE_ARGUMENTS is a prefix to put on\n\n# all variables it creates. The second argument is a list of names, and the\n\n# third argument is a list of options. Both of these lists should be quoted. The\n\n# rest of PARSE_ARGUMENTS are arguments from another macro to be parsed.\n\n#\n\n# PARSE_ARGUMENTS(prefix arg_names options arg1 arg2...)\n\n#\n\n# For each item in options, PARSE_ARGUMENTS will create a variable with that\n\n# name, prefixed with prefix_. So, for example, if prefix is MY_MACRO and\n\n# options is OPTION1;OPTION2, then PARSE_ARGUMENTS will create the variables\n\n# MY_MACRO_OPTION1 and MY_MACRO_OPTION2. These variables will be set to true if\n\n# the option exists in the command line or false otherwise.\n\n#\n\n#For each item in arg_names, PARSE_ARGUMENTS will create a variable with that\n\n#name, prefixed with prefix_. Each variable will be filled with the arguments\n\n#that occur after the given arg_name is encountered up to the next arg_name or\n\n#the end of the arguments. All options are removed from these\n\n#lists. PARSE_ARGUMENTS also creates a prefix_DEFAULT_ARGS variable containing\n\n#the list of all arguments up to the first arg_name encountered.\n\n#\n\n#Here is a simple, albeit impractical, example of using PARSE_ARGUMENTS that\n\n#demonstrates its behavior.\n\n#\n\n# SET(arguments\n\n#     hello OPTION3 world\n\n#     LIST3 foo bar\n\n#     OPTION2\n\n#     LIST1 fuz baz\n\n#     )\n\n#\n\n# PARSE_ARGUMENTS(ARG \"LIST1;LIST2;LIST3\" \"OPTION1;OPTION2;OPTION3\" ${arguments})\n\n#\n\n# PARSE_ARGUMENTS creates 7 variables and sets them as follows:\n\n#   ARG_DEFAULT_ARGS: hello;world\n\n#   ARG_LIST1: fuz;baz\n\n#   ARG_LIST2:\n\n#   ARG_LIST3: foo;bar\n\n#   ARG_OPTION1: FALSE\n\n#   ARG_OPTION2: TRUE\n\n#   ARG_OPTION3: TRUE\n\n#\n\n# If you don't have any options, use an empty string in its place.\n\n#   PARSE_ARGUMENTS(ARG \"LIST1;LIST2;LIST3\" \"\" ${arguments})\n\n# Likewise if you have no lists.\n\n#   PARSE_ARGUMENTS(ARG \"\" \"OPTION1;OPTION2;OPTION3\" ${arguments})\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/cmake/modules/LLVMProcessSources.cmake" : {
      "ObjectId" : "2cef6cfc3a30ec8e1f5aa265021c65e84fbe493a",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Replaces a compiler option or switch `old' in `var' by `new'.\n\n# If `old' is not in `var', appends `new' to `var'.\n\n# Example: llvm_replace_compiler_option(CMAKE_CXX_FLAGS_RELEASE \"-O3\" \"-O2\")\n\n# If the option already is on the variable, don't add it:\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Create file dependencies on the tablegenned files, if any.  Seems\n\n# that this is not strictly needed, as dependencies of the .cpp\n\n# sources on the tablegenned .inc files are detected and handled,\n\n# but just in case...\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# This adds .td and .h files to the Visual Studio solution:\n\n# FIXME: Shall we handle *.def here?\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Set common compiler options:\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "interpreter/llvm/src/cmake/modules/TableGen.cmake" : {
      "ObjectId" : "e3bdd9c7048302080153791b91e9314cf8a75d20",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# LLVM_TARGET_DEFINITIONS must contain the name of the .td file to process.\n\n# Extra parameters for `tblgen' may come after `ofn' parameter.\n\n# Adds the name of the generated file to TABLEGEN_OUTPUT.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generate tablegen output in a temporary file.\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# The file in LLVM_TARGET_DEFINITIONS may be not in the current\n\n# directory and local_tds may not contain it, so we must\n\n# explicitly list it here:\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Only update the real output file if there are any differences.\n\n# This prevents recompilation of all the files depending on it if there\n\n# aren't any.\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# `make clean' must remove all those generated files:\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Creates a target for publicly exporting tablegen dependencies.\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Upgrade existing LLVM_TABLEGEN setting.\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Effective tblgen executable to be used:\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "interpreter/llvm/src/cmake/modules/VersionFromVCS.cmake" : {
      "ObjectId" : "26314d4126d2fb94e20d92e4864ce9aaf421aecb",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Adds version control information to the variable VERS. For\n\n# determining the Version Control System used (if any) it inspects the\n\n# existence of certain subdirectories under CMAKE_CURRENT_SOURCE_DIR.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FindSubversion does not work with symlinks. See PR 8437\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Try to get a ref-id\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Determine if the HEAD points directly at a subversion revision.\n",
        "Line" : 40,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 4
    },
    "interpreter/llvm/src/cmake/platforms/Android.cmake" : {
      "ObjectId" : "72849b16c7678c4a271240d773a877c1d995eea2",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Toolchain config for Android NDK.\n\n# This is expected to be used with a standalone Android toolchain (see\n\n# docs/STANDALONE-TOOLCHAIN.html in the NDK on how to get one).\n\n#\n\n# Usage:\n\n# mkdir build; cd build\n\n# cmake ..; make\n\n# mkdir android; cd android\n\n# cmake -DLLVM_ANDROID_TOOLCHAIN_DIR=/path/to/android/ndk \\\n\n#   -DCMAKE_TOOLCHAIN_FILE=../../cmake/platforms/Android.cmake ../..\n\n# make <target>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/docs/Makefile" : {
      "ObjectId" : "122c4b834bba47009bb6f35d5d467fc6472d257a",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- docs/Makefile ---------------------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Live documentation is generated for the web site using this target:\n\n# 'make generated BUILD_FOR_WEBSITE=1'\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/examples/BrainF/CMakeLists.txt" : {
      "ObjectId" : "7bec105cdc8a677d4cce4bc78d4ae52be8a7f4ba",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/examples/BrainF/Makefile" : {
      "ObjectId" : "2c3e0662523d4fe97f5190ed3fc4d2e2a9455c63",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- examples/BrainF/Makefile ----------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/examples/CMakeLists.txt" : {
      "ObjectId" : "54ee6cc3a3a41ee0188b8be3f5ecd8c338772c79",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/examples/ExceptionDemo/CMakeLists.txt" : {
      "ObjectId" : "88c9ab7c181690c4d889a148b23753ff4dcebd60",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/examples/ExceptionDemo/Makefile" : {
      "ObjectId" : "480744730eb79a87b6bf42972c3e1ed462810d0b",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- examples/ExceptionDemo/Makefile --------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===---------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/examples/Fibonacci/CMakeLists.txt" : {
      "ObjectId" : "693761241fc18e18d0a6fd4dca3d1721e360bac3",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/examples/Fibonacci/Makefile" : {
      "ObjectId" : "71f6ba0ef52ed18e891f8f4112e984661391c232",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- examples/Fibonacci/Makefile -------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Link in JIT support\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/examples/HowToUseJIT/CMakeLists.txt" : {
      "ObjectId" : "428b53ffb9be92bddb4063881014d6e2de2eab61",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/examples/HowToUseJIT/Makefile" : {
      "ObjectId" : "c8919db90cc2e1f18b44a08b547e4b7344112276",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- examples/HowToUseJIT/Makefile -----------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/examples/Kaleidoscope/CMakeLists.txt" : {
      "ObjectId" : "8c87ac50b7a4cad8f1de26921f4138efc906323d",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/examples/Kaleidoscope/Chapter2/CMakeLists.txt" : {
      "ObjectId" : "79f2b172d0df342a890a1ee491f95bff88e6c756",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/examples/Kaleidoscope/Chapter2/Makefile" : {
      "ObjectId" : "1a9b94ce541e6d90e3f0a601564a08ed57326400",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- examples/Kaleidoscope/Chapter2/Makefile -------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/examples/Kaleidoscope/Chapter3/CMakeLists.txt" : {
      "ObjectId" : "1af8db00a172284efd65b19c77163b8ed71dfc9d",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/examples/Kaleidoscope/Chapter3/Makefile" : {
      "ObjectId" : "4cc6948d8037475a372ac1430f082c4cb68ccb8b",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- examples/Kaleidoscope/Chapter3/Makefile -------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/examples/Kaleidoscope/Chapter4/CMakeLists.txt" : {
      "ObjectId" : "0d1ac533f02d49a19758fadc0687da4630d8cabf",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/examples/Kaleidoscope/Chapter4/Makefile" : {
      "ObjectId" : "30162d94bcee4f63d61af02c3e3558ec4e10e1aa",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- examples/Kaleidoscope/Chapter4/Makefile -------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/examples/Kaleidoscope/Chapter5/CMakeLists.txt" : {
      "ObjectId" : "2d75ad35923fa50f7063ee75161f5cb4ec5a4a67",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/examples/Kaleidoscope/Chapter5/Makefile" : {
      "ObjectId" : "d1f5e2035b46486c95c60395642391d20f2e0583",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- examples/Kaleidoscope/Chapter5/Makefile -------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/examples/Kaleidoscope/Chapter6/CMakeLists.txt" : {
      "ObjectId" : "2e15a5f7dfc60b10639fc26ef71be543c3fd53af",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/examples/Kaleidoscope/Chapter6/Makefile" : {
      "ObjectId" : "a5fbcbdf9b2baa2c072e9d615faa59819ae71c4d",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- examples/Kaleidoscope/Chapter6/Makefile -------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/examples/Kaleidoscope/Chapter7/CMakeLists.txt" : {
      "ObjectId" : "da3839843bd008f7ac521dec6889c69d0680b756",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/examples/Kaleidoscope/Chapter7/Makefile" : {
      "ObjectId" : "6cec323efd402f4c8c858df8e42268ce4703831f",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- examples/Kaleidoscope/Chapter7/Makefile -------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/examples/Kaleidoscope/Makefile" : {
      "ObjectId" : "bd0c252c2c03e16ad13839d60fda14bc0f299e0e",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- examples/Kaleidoscope/Makefile ----------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/examples/Makefile" : {
      "ObjectId" : "50a6db76aa2551a9510e78c1545e9491ebc437cd",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- examples/Makefile -----------------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/examples/ModuleMaker/CMakeLists.txt" : {
      "ObjectId" : "81e911560bdcf2c9c863029d5c265d79dce55590",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/examples/ModuleMaker/Makefile" : {
      "ObjectId" : "9454cf514dc14642c80362bf42b89ebb887e4c59",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- examples/ModuleMaker/Makefile -----------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/examples/OCaml-Kaleidoscope/Chapter2/Makefile" : {
      "ObjectId" : "8fc03da0fbd4323479126c7e945ffebe8a902674",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- examples/OCaml-Kaleidoscope/Chapter2/Makefile -------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n\n# \n\n# This is the makefile for the Objective Caml kaleidoscope tutorial, chapter 2.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/examples/OCaml-Kaleidoscope/Chapter3/Makefile" : {
      "ObjectId" : "fdbcd5191f401feb17c8afca03a82729cf9d9b30",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- examples/OCaml-Kaleidoscope/Chapter3/Makefile -------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n\n# \n\n# This is the makefile for the Objective Caml kaleidoscope tutorial, chapter 3.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/examples/OCaml-Kaleidoscope/Chapter4/Makefile" : {
      "ObjectId" : "d9c3f49bea6e3e3c68be188ceead5265ff01577c",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- examples/OCaml-Kaleidoscope/Chapter4/Makefile -------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n\n# \n\n# This is the makefile for the Objective Caml kaleidoscope tutorial, chapter 4.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/examples/OCaml-Kaleidoscope/Chapter5/Makefile" : {
      "ObjectId" : "f31c10d3c2fb2337c9c7500b2425a7c861ca7ac2",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- examples/OCaml-Kaleidoscope/Chapter5/Makefile -------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n\n# \n\n# This is the makefile for the Objective Caml kaleidoscope tutorial, chapter 5.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/examples/OCaml-Kaleidoscope/Chapter6/Makefile" : {
      "ObjectId" : "21f0c53df4b9d5bf2cd62196ae62f86f3ed6fac0",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- examples/OCaml-Kaleidoscope/Chapter6/Makefile -------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n\n# \n\n# This is the makefile for the Objective Caml kaleidoscope tutorial, chapter 6.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/examples/OCaml-Kaleidoscope/Chapter7/Makefile" : {
      "ObjectId" : "99686e17ea80d5fa785cb13a129d9930147feef1",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- examples/OCaml-Kaleidoscope/Chapter7/Makefile -------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n\n# \n\n# This is the makefile for the Objective Caml kaleidoscope tutorial, chapter 7.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/examples/OCaml-Kaleidoscope/Makefile" : {
      "ObjectId" : "5342b94022a9e4716d716837fb09fa691fcbfabf",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- examples/OCaml-Kaleidoscope/Makefile ----------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/examples/ParallelJIT/CMakeLists.txt" : {
      "ObjectId" : "fbdc6e5fc10b4ecc2516737566bba566e06181b0",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/examples/ParallelJIT/Makefile" : {
      "ObjectId" : "8a49d4273132a192b494307bbd9b13f88ee1661a",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- examples/ParallelJIT/Makefile -----------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/include/llvm/CMakeLists.txt" : {
      "ObjectId" : "32ffca75bb7a0f5e9bc94963c3671dd855f7557a",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Creates a dummy target containing all headers for the benefit of\n\n# Visual Studio users.\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# We need at least one source file:\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/include/llvm/Config/config.h.cmake" : {
      "ObjectId" : "863b9e7dfe8dd4c1a3d4ac79bd2275f99969b49d",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* include/llvm/Config/config.h.cmake corresponding to config.h.in. */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* Bug report URL. */",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Define if we have libxml2 */",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* Relative directory for resource files */",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Directories clang will search for headers */",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Default <path> to all compiler invocations for --sysroot=<path>. */",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Define if you want backtraces on crash */",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* Define if position independent code is enabled */",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* Define if timestamp information (e.g., __DATE__) is allowed */",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* Directory where gcc is installed. */",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Define to 1 if you have the `arc4random' function. */",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Define to 1 if you have the `argz_append' function. */",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Define to 1 if you have the `argz_create_sep' function. */",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* Define to 1 if you have the <argz.h> header file. */",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Define to 1 if you have the `argz_insert' function. */",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Define to 1 if you have the `argz_next' function. */",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Define to 1 if you have the `argz_stringify' function. */",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* Define to 1 if you have the <assert.h> header file. */",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* Define to 1 if you have the `backtrace' function. */",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* Define to 1 if you have the `bcopy' function. */",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* Define to 1 if you have the `ceilf' function. */",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* Define if the neat program is available */",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* Define to 1 if you have the `closedir' function. */",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/* Define to 1 if you have the <CrashReporterClient.h> header file. */",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/* can use __crashreporter_info__ */",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "/* Define to 1 if you have the <ctype.h> header file. */",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "/* Define to 1 if you have the declaration of `strerror_s', and to 0 if you\n   don't. */",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "/* Define to 1 if you have the <dirent.h> header file, and it defines `DIR'.\n   */",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "/* Define if you have the GNU dld library. */",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "/* Define to 1 if you have the <dld.h> header file. */",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "/* Define to 1 if you have the `dlerror' function. */",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "/* Define to 1 if you have the <dlfcn.h> header file. */",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "/* Define if dlopen() is available on this platform. */",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "/* Define to 1 if you have the <dl.h> header file. */",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "/* Define if the dot program is available */",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "/* Define if the dotty program is available */",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "/* Define if you have the _dyld_func_lookup function. */",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "/* Define to 1 if you have the <errno.h> header file. */",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "/* Define to 1 if the system has the type `error_t'. */",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "/* Define to 1 if you have the <execinfo.h> header file. */",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "/* Define to 1 if you have the <fcntl.h> header file. */",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "/* Define if the neat program is available */",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "/* Define to 1 if you have the <fenv.h> header file. */",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "/* Define if libffi is available on this platform. */",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "/* Define to 1 if you have the <ffi/ffi.h> header file. */",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "/* Define to 1 if you have the <ffi.h> header file. */",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "/* Set to 1 if the finite function is found in <ieeefp.h> */",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "/* Define to 1 if you have the `floorf' function. */",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "/* Define to 1 if you have the `log' function. */",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "/* Define to 1 if you have the `log2' function. */",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "/* Define to 1 if you have the `log10' function. */",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "/* Define to 1 if you have the `exp' function. */",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "/* Define to 1 if you have the `exp2' function. */",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "/* Define to 1 if you have the `exp10' function. */",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "/* Define to 1 if you have the `fmodf' function. */",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "/* Define to 1 if you have the `getcwd' function. */",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "/* Define to 1 if you have the `getpagesize' function. */",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "/* Define to 1 if you have the `getrlimit' function. */",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "/* Define to 1 if you have the `getrusage' function. */",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "/* Define to 1 if you have the `gettimeofday' function. */",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "/* Define if the Graphviz program is available */",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "/* Define if the gv program is available */",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "/* Define to 1 if you have the `index' function. */",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "/* Define to 1 if the system has the type `int64_t'. */",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "/* Define to 1 if you have the <inttypes.h> header file. */",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "/* Define to 1 if you have the `isatty' function. */",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "/* Set to 1 if the isinf function is found in <cmath> */",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "/* Set to 1 if the isinf function is found in <math.h> */",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "/* Set to 1 if the isnan function is found in <cmath> */",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "/* Set to 1 if the isnan function is found in <math.h> */",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "/* Define if you have the libdl library or equivalent. */",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "/* Define to 1 if you have the `imagehlp' library (-limagehlp). */",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "/* Define to 1 if you have the `m' library (-lm). */",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "/* Define to 1 if you have the `psapi' library (-lpsapi). */",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "/* Define to 1 if you have the `pthread' library (-lpthread). */",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "/* Define to 1 if you have the `udis86' library (-ludis86). */",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "/* Define to 1 if you have the <limits.h> header file. */",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "/* Define if you can use -Wl,-export-dynamic. */",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "/* Define to 1 if you have the <link.h> header file. */",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "/* Define if you can use -Wl,-R. to pass -R. to the linker, in order to add\n   the current directory to the dynamic linker search path. */",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "/* Define to 1 if you have the `longjmp' function. */",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "/* Define to 1 if you have the <mach/mach.h> header file. */",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "/* Define to 1 if you have the <mach-o/dyld.h> header file. */",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "/* Define if mallinfo() is available on this platform. */",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "/* Define to 1 if you have the <malloc.h> header file. */",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "/* Define to 1 if you have the <malloc/malloc.h> header file. */",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "/* Define to 1 if you have the `malloc_zone_statistics' function. */",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "/* Define to 1 if you have the `memcpy' function. */",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "/* Define to 1 if you have the `memmove' function. */",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "/* Define to 1 if you have the <memory.h> header file. */",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "/* Define to 1 if you have the `mkdtemp' function. */",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "/* Define to 1 if you have the `mkstemp' function. */",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "/* Define to 1 if you have the `mktemp' function. */",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "/* Define to 1 if you have a working `mmap' system call. */",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "/* Define if mmap() uses MAP_ANONYMOUS to map anonymous pages, or undefine if\n   it uses MAP_ANON */",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "/* Define if mmap() can map files into memory */",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "/* Define to 1 if you have the <ndir.h> header file, and it defines `DIR'. */",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "/* Define to 1 if you have the `nearbyintf' function. */",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "/* Define if the neat program is available */",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "/* Define to 1 if you have the `opendir' function. */",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "/* Define to 1 if you have the `posix_spawn' function. */",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "/* Define to 1 if you have the `powf' function. */",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "/* Define to 1 if you have the `pread' function. */",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "/* Define if libtool can extract symbol lists from object files. */",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "/* Define to have the %a format string */",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "/* Have pthread_getspecific */",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "/* Define to 1 if you have the <pthread.h> header file. */",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "/* Have pthread_mutex_lock */",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "/* Have pthread_rwlock_init */",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "/* Define to 1 if srand48/lrand48/drand48 exist in <stdlib.h> */",
        "Line" : 334,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "/* Define to 1 if you have the `readdir' function. */",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "111" : {
        "Text" : "/* Define to 1 if you have the `realpath' function. */",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "112" : {
        "Text" : "/* Define to 1 if you have the `rindex' function. */",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "113" : {
        "Text" : "/* Define to 1 if you have the `rintf' function. */",
        "Line" : 346,
        "CharPositionInLine" : 0
      },
      "114" : {
        "Text" : "/* Define to 1 if you have the `round' function. */",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "115" : {
        "Text" : "/* Define to 1 if you have the `roundf' function. */",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "116" : {
        "Text" : "/* Define to 1 if you have the `sbrk' function. */",
        "Line" : 355,
        "CharPositionInLine" : 0
      },
      "117" : {
        "Text" : "/* Define to 1 if you have the `setenv' function. */",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "118" : {
        "Text" : "/* Define to 1 if you have the `setjmp' function. */",
        "Line" : 361,
        "CharPositionInLine" : 0
      },
      "119" : {
        "Text" : "/* Define to 1 if you have the <setjmp.h> header file. */",
        "Line" : 364,
        "CharPositionInLine" : 0
      },
      "120" : {
        "Text" : "/* Define to 1 if you have the `setrlimit' function. */",
        "Line" : 367,
        "CharPositionInLine" : 0
      },
      "121" : {
        "Text" : "/* Define if you have the shl_load function. */",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "122" : {
        "Text" : "/* Define to 1 if you have the `siglongjmp' function. */",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "123" : {
        "Text" : "/* Define to 1 if you have the <signal.h> header file. */",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "124" : {
        "Text" : "/* Define to 1 if you have the `sigsetjmp' function. */",
        "Line" : 379,
        "CharPositionInLine" : 0
      },
      "125" : {
        "Text" : "/* Define to 1 if you have the <stdint.h> header file. */",
        "Line" : 382,
        "CharPositionInLine" : 0
      },
      "126" : {
        "Text" : "/* Define to 1 if you have the <stdio.h> header file. */",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "127" : {
        "Text" : "/* Define to 1 if you have the <stdlib.h> header file. */",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "128" : {
        "Text" : "/* Set to 1 if the std::isinf function is found in <cmath> */",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "129" : {
        "Text" : "/* Set to 1 if the std::isnan function is found in <cmath> */",
        "Line" : 394,
        "CharPositionInLine" : 0
      },
      "130" : {
        "Text" : "/* Define to 1 if you have the `strchr' function. */",
        "Line" : 397,
        "CharPositionInLine" : 0
      },
      "131" : {
        "Text" : "/* Define to 1 if you have the `strcmp' function. */",
        "Line" : 400,
        "CharPositionInLine" : 0
      },
      "132" : {
        "Text" : "/* Define to 1 if you have the `strdup' function. */",
        "Line" : 403,
        "CharPositionInLine" : 0
      },
      "133" : {
        "Text" : "/* Define to 1 if you have the `strerror' function. */",
        "Line" : 406,
        "CharPositionInLine" : 0
      },
      "134" : {
        "Text" : "/* Define to 1 if you have the `strerror_r' function. */",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "135" : {
        "Text" : "/* Define to 1 if you have the <strings.h> header file. */",
        "Line" : 412,
        "CharPositionInLine" : 0
      },
      "136" : {
        "Text" : "/* Define to 1 if you have the <string.h> header file. */",
        "Line" : 415,
        "CharPositionInLine" : 0
      },
      "137" : {
        "Text" : "/* Define to 1 if you have the `strrchr' function. */",
        "Line" : 418,
        "CharPositionInLine" : 0
      },
      "138" : {
        "Text" : "/* Define to 1 if you have the `strtof' function. */",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "139" : {
        "Text" : "/* Define to 1 if you have the `strtoll' function. */",
        "Line" : 424,
        "CharPositionInLine" : 0
      },
      "140" : {
        "Text" : "/* Define to 1 if you have the `strtoq' function. */",
        "Line" : 427,
        "CharPositionInLine" : 0
      },
      "141" : {
        "Text" : "/* Define to 1 if you have the `sysconf' function. */",
        "Line" : 430,
        "CharPositionInLine" : 0
      },
      "142" : {
        "Text" : "/* Define to 1 if you have the <sys/dir.h> header file, and it defines `DIR'.\n   */",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "143" : {
        "Text" : "/* Define to 1 if you have the <sys/dl.h> header file. */",
        "Line" : 437,
        "CharPositionInLine" : 0
      },
      "144" : {
        "Text" : "/* Define to 1 if you have the <sys/ioctl.h> header file. */",
        "Line" : 440,
        "CharPositionInLine" : 0
      },
      "145" : {
        "Text" : "/* Define to 1 if you have the <sys/mman.h> header file. */",
        "Line" : 443,
        "CharPositionInLine" : 0
      },
      "146" : {
        "Text" : "/* Define to 1 if you have the <sys/ndir.h> header file, and it defines `DIR'.\n   */",
        "Line" : 446,
        "CharPositionInLine" : 0
      },
      "147" : {
        "Text" : "/* Define to 1 if you have the <sys/param.h> header file. */",
        "Line" : 450,
        "CharPositionInLine" : 0
      },
      "148" : {
        "Text" : "/* Define to 1 if you have the <sys/resource.h> header file. */",
        "Line" : 453,
        "CharPositionInLine" : 0
      },
      "149" : {
        "Text" : "/* Define to 1 if you have the <sys/stat.h> header file. */",
        "Line" : 456,
        "CharPositionInLine" : 0
      },
      "150" : {
        "Text" : "/* Define to 1 if you have the <sys/time.h> header file. */",
        "Line" : 459,
        "CharPositionInLine" : 0
      },
      "151" : {
        "Text" : "/* Define to 1 if you have the <sys/types.h> header file. */",
        "Line" : 462,
        "CharPositionInLine" : 0
      },
      "152" : {
        "Text" : "/* Define to 1 if you have the <sys/uio.h> header file. */",
        "Line" : 465,
        "CharPositionInLine" : 0
      },
      "153" : {
        "Text" : "/* Define to 1 if you have <sys/wait.h> that is POSIX.1 compatible. */",
        "Line" : 468,
        "CharPositionInLine" : 0
      },
      "154" : {
        "Text" : "/* Define to 1 if you have the <termios.h> header file. */",
        "Line" : 471,
        "CharPositionInLine" : 0
      },
      "155" : {
        "Text" : "/* Define if the neat program is available */",
        "Line" : 474,
        "CharPositionInLine" : 0
      },
      "156" : {
        "Text" : "/* Define to 1 if the system has the type `uint64_t'. */",
        "Line" : 477,
        "CharPositionInLine" : 0
      },
      "157" : {
        "Text" : "/* Define to 1 if you have the <unistd.h> header file. */",
        "Line" : 480,
        "CharPositionInLine" : 0
      },
      "158" : {
        "Text" : "/* Define to 1 if you have the <utime.h> header file. */",
        "Line" : 483,
        "CharPositionInLine" : 0
      },
      "159" : {
        "Text" : "/* Define to 1 if the system has the type `u_int64_t'. */",
        "Line" : 486,
        "CharPositionInLine" : 0
      },
      "160" : {
        "Text" : "/* Define to 1 if you have the <valgrind/valgrind.h> header file. */",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "161" : {
        "Text" : "/* Define to 1 if you have the <windows.h> header file. */",
        "Line" : 492,
        "CharPositionInLine" : 0
      },
      "162" : {
        "Text" : "/* Define to 1 if you have the `writev' function. */",
        "Line" : 495,
        "CharPositionInLine" : 0
      },
      "163" : {
        "Text" : "/* Define if the xdot.py program is available */",
        "Line" : 498,
        "CharPositionInLine" : 0
      },
      "164" : {
        "Text" : "/* Have host's _alloca */",
        "Line" : 501,
        "CharPositionInLine" : 0
      },
      "165" : {
        "Text" : "/* Have host's __alloca */",
        "Line" : 504,
        "CharPositionInLine" : 0
      },
      "166" : {
        "Text" : "/* Have host's __ashldi3 */",
        "Line" : 507,
        "CharPositionInLine" : 0
      },
      "167" : {
        "Text" : "/* Have host's __ashrdi3 */",
        "Line" : 510,
        "CharPositionInLine" : 0
      },
      "168" : {
        "Text" : "/* Have host's __chkstk */",
        "Line" : 513,
        "CharPositionInLine" : 0
      },
      "169" : {
        "Text" : "/* Have host's __cmpdi2 */",
        "Line" : 516,
        "CharPositionInLine" : 0
      },
      "170" : {
        "Text" : "/* Have host's __divdi3 */",
        "Line" : 519,
        "CharPositionInLine" : 0
      },
      "171" : {
        "Text" : "/* Have host's `__dso_handle' */",
        "Line" : 522,
        "CharPositionInLine" : 0
      },
      "172" : {
        "Text" : "/* Have host's __fixdfdi */",
        "Line" : 525,
        "CharPositionInLine" : 0
      },
      "173" : {
        "Text" : "/* Have host's __fixsfdi */",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "174" : {
        "Text" : "/* Have host's __floatdidf */",
        "Line" : 531,
        "CharPositionInLine" : 0
      },
      "175" : {
        "Text" : "/* Have host's __lshrdi3 */",
        "Line" : 534,
        "CharPositionInLine" : 0
      },
      "176" : {
        "Text" : "/* Have host's __main */",
        "Line" : 537,
        "CharPositionInLine" : 0
      },
      "177" : {
        "Text" : "/* Have host's __moddi3 */",
        "Line" : 540,
        "CharPositionInLine" : 0
      },
      "178" : {
        "Text" : "/* Have host's __udivdi3 */",
        "Line" : 543,
        "CharPositionInLine" : 0
      },
      "179" : {
        "Text" : "/* Have host's __umoddi3 */",
        "Line" : 546,
        "CharPositionInLine" : 0
      },
      "180" : {
        "Text" : "/* Have host's ___chkstk */",
        "Line" : 549,
        "CharPositionInLine" : 0
      },
      "181" : {
        "Text" : "/* Linker version detected at compile time. */",
        "Line" : 552,
        "CharPositionInLine" : 0
      },
      "182" : {
        "Text" : "/* Installation directory for binary executables */",
        "Line" : 555,
        "CharPositionInLine" : 0
      },
      "183" : {
        "Text" : "/* Time at which LLVM was configured */",
        "Line" : 558,
        "CharPositionInLine" : 0
      },
      "184" : {
        "Text" : "/* Installation directory for data files */",
        "Line" : 561,
        "CharPositionInLine" : 0
      },
      "185" : {
        "Text" : "/* Target triple LLVM will generate code for by default */",
        "Line" : 564,
        "CharPositionInLine" : 0
      },
      "186" : {
        "Text" : "/* Installation directory for documentation */",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "187" : {
        "Text" : "/* Define if threads enabled */",
        "Line" : 570,
        "CharPositionInLine" : 0
      },
      "188" : {
        "Text" : "/* Installation directory for config files */",
        "Line" : 573,
        "CharPositionInLine" : 0
      },
      "189" : {
        "Text" : "/* Has gcc/MSVC atomic intrinsics */",
        "Line" : 576,
        "CharPositionInLine" : 0
      },
      "190" : {
        "Text" : "/* Host triple LLVM will be executed on */",
        "Line" : 579,
        "CharPositionInLine" : 0
      },
      "191" : {
        "Text" : "/* Installation directory for include files */",
        "Line" : 582,
        "CharPositionInLine" : 0
      },
      "192" : {
        "Text" : "/* Installation directory for .info files */",
        "Line" : 585,
        "CharPositionInLine" : 0
      },
      "193" : {
        "Text" : "/* Installation directory for libraries */",
        "Line" : 588,
        "CharPositionInLine" : 0
      },
      "194" : {
        "Text" : "/* Installation directory for man pages */",
        "Line" : 591,
        "CharPositionInLine" : 0
      },
      "195" : {
        "Text" : "/* LLVM architecture name for the native architecture, if available */",
        "Line" : 594,
        "CharPositionInLine" : 0
      },
      "196" : {
        "Text" : "/* LLVM name for the native AsmParser init function, if available */",
        "Line" : 597,
        "CharPositionInLine" : 0
      },
      "197" : {
        "Text" : "/* LLVM name for the native AsmPrinter init function, if available */",
        "Line" : 600,
        "CharPositionInLine" : 0
      },
      "198" : {
        "Text" : "/* LLVM name for the native Disassembler init function, if available */",
        "Line" : 603,
        "CharPositionInLine" : 0
      },
      "199" : {
        "Text" : "/* LLVM name for the native Target init function, if available */",
        "Line" : 606,
        "CharPositionInLine" : 0
      },
      "200" : {
        "Text" : "/* LLVM name for the native TargetInfo init function, if available */",
        "Line" : 609,
        "CharPositionInLine" : 0
      },
      "201" : {
        "Text" : "/* LLVM name for the native target MC init function, if available */",
        "Line" : 612,
        "CharPositionInLine" : 0
      },
      "202" : {
        "Text" : "/* Define if this is Unixish platform */",
        "Line" : 615,
        "CharPositionInLine" : 0
      },
      "203" : {
        "Text" : "/* Define if this is Win32ish platform */",
        "Line" : 618,
        "CharPositionInLine" : 0
      },
      "204" : {
        "Text" : "/* Define to path to circo program if found or 'echo circo' otherwise */",
        "Line" : 621,
        "CharPositionInLine" : 0
      },
      "205" : {
        "Text" : "/* Define to path to dot program if found or 'echo dot' otherwise */",
        "Line" : 624,
        "CharPositionInLine" : 0
      },
      "206" : {
        "Text" : "/* Define to path to dotty program if found or 'echo dotty' otherwise */",
        "Line" : 627,
        "CharPositionInLine" : 0
      },
      "207" : {
        "Text" : "/* Define to path to fdp program if found or 'echo fdp' otherwise */",
        "Line" : 630,
        "CharPositionInLine" : 0
      },
      "208" : {
        "Text" : "/* Define to path to Graphviz program if found or 'echo Graphviz' otherwise */",
        "Line" : 633,
        "CharPositionInLine" : 0
      },
      "209" : {
        "Text" : "/* Define to path to gv program if found or 'echo gv' otherwise */",
        "Line" : 636,
        "CharPositionInLine" : 0
      },
      "210" : {
        "Text" : "/* Define to path to neato program if found or 'echo neato' otherwise */",
        "Line" : 639,
        "CharPositionInLine" : 0
      },
      "211" : {
        "Text" : "/* Define to path to twopi program if found or 'echo twopi' otherwise */",
        "Line" : 642,
        "CharPositionInLine" : 0
      },
      "212" : {
        "Text" : "/* Define to path to xdot.py program if found or 'echo xdot.py' otherwise */",
        "Line" : 645,
        "CharPositionInLine" : 0
      },
      "213" : {
        "Text" : "/* Installation prefix directory */",
        "Line" : 648,
        "CharPositionInLine" : 0
      },
      "214" : {
        "Text" : "/* Define if we have the Intel JIT API runtime support library */",
        "Line" : 651,
        "CharPositionInLine" : 0
      },
      "215" : {
        "Text" : "/* Define if we have the oprofile JIT-support library */",
        "Line" : 654,
        "CharPositionInLine" : 0
      },
      "216" : {
        "Text" : "/* Major version of the LLVM API */",
        "Line" : 657,
        "CharPositionInLine" : 0
      },
      "217" : {
        "Text" : "/* Minor version of the LLVM API */",
        "Line" : 660,
        "CharPositionInLine" : 0
      },
      "218" : {
        "Text" : "/* Define if the OS needs help to load dependent libraries for dlopen(). */",
        "Line" : 663,
        "CharPositionInLine" : 0
      },
      "219" : {
        "Text" : "/* Define to the sub-directory in which libtool stores uninstalled libraries.\n   */",
        "Line" : 666,
        "CharPositionInLine" : 0
      },
      "220" : {
        "Text" : "/* Define to the name of the environment variable that determines the dynamic\n   library search path. */",
        "Line" : 670,
        "CharPositionInLine" : 0
      },
      "221" : {
        "Text" : "/* Define to the extension used for shared libraries, say, \".so\". */",
        "Line" : 674,
        "CharPositionInLine" : 0
      },
      "222" : {
        "Text" : "/* Define to the system default library search path. */",
        "Line" : 677,
        "CharPositionInLine" : 0
      },
      "223" : {
        "Text" : "/* Define if /dev/zero should be used when mapping RWX memory, or undefine if\n   its not necessary */",
        "Line" : 680,
        "CharPositionInLine" : 0
      },
      "224" : {
        "Text" : "/* Define if dlsym() requires a leading underscore in symbol names. */",
        "Line" : 684,
        "CharPositionInLine" : 0
      },
      "225" : {
        "Text" : "/* Define to the address where bug reports for this package should be sent. */",
        "Line" : 687,
        "CharPositionInLine" : 0
      },
      "226" : {
        "Text" : "/* Define to the full name of this package. */",
        "Line" : 690,
        "CharPositionInLine" : 0
      },
      "227" : {
        "Text" : "/* Define to the full name and version of this package. */",
        "Line" : 693,
        "CharPositionInLine" : 0
      },
      "228" : {
        "Text" : "/* Define to the one symbol short name of this package. */",
        "Line" : 696,
        "CharPositionInLine" : 0
      },
      "229" : {
        "Text" : "/* Define to the version of this package. */",
        "Line" : 699,
        "CharPositionInLine" : 0
      },
      "230" : {
        "Text" : "/* Define as the return type of signal handlers (`int' or `void'). */",
        "Line" : 702,
        "CharPositionInLine" : 0
      },
      "231" : {
        "Text" : "/* Define to 1 if the `S_IS*' macros in <sys/stat.h> do not work properly. */",
        "Line" : 705,
        "CharPositionInLine" : 0
      },
      "232" : {
        "Text" : "/* Define to 1 if you have the ANSI C header files. */",
        "Line" : 708,
        "CharPositionInLine" : 0
      },
      "233" : {
        "Text" : "/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */",
        "Line" : 711,
        "CharPositionInLine" : 0
      },
      "234" : {
        "Text" : "/* Define to 1 if your <sys/time.h> declares `struct tm'. */",
        "Line" : 714,
        "CharPositionInLine" : 0
      },
      "235" : {
        "Text" : "/* Define if use udis86 library */",
        "Line" : 717,
        "CharPositionInLine" : 0
      },
      "236" : {
        "Text" : "/* Type of 1st arg on ELM Callback */",
        "Line" : 720,
        "CharPositionInLine" : 0
      },
      "237" : {
        "Text" : "/* Define to empty if `const' does not conform to ANSI C. */",
        "Line" : 723,
        "CharPositionInLine" : 0
      },
      "238" : {
        "Text" : "/* Define to a type to use for `error_t' if it is not otherwise available. */",
        "Line" : 726,
        "CharPositionInLine" : 0
      },
      "239" : {
        "Text" : "/* Define to `int' if <sys/types.h> does not define. */",
        "Line" : 729,
        "CharPositionInLine" : 0
      },
      "240" : {
        "Text" : "/* Define to `unsigned int' if <sys/types.h> does not define. */",
        "Line" : 732,
        "CharPositionInLine" : 0
      },
      "241" : {
        "Text" : "/* Define to a function replacing strtoll */",
        "Line" : 735,
        "CharPositionInLine" : 0
      },
      "242" : {
        "Text" : "/* Define to a function implementing strtoull */",
        "Line" : 738,
        "CharPositionInLine" : 0
      },
      "243" : {
        "Text" : "/* Define to a function implementing stricmp */",
        "Line" : 741,
        "CharPositionInLine" : 0
      },
      "244" : {
        "Text" : "/* Define to a function implementing strdup */",
        "Line" : 744,
        "CharPositionInLine" : 0
      },
      "245" : {
        "Text" : "/* Define to 1 if you have the `_chsize_s' function. */",
        "Line" : 747,
        "CharPositionInLine" : 0
      },
      "246" : {
        "Text" : "/* Added by Kevin -- Maximum path length */",
        "Line" : 750,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 247
    },
    "interpreter/llvm/src/include/llvm/Config/llvm-config.h.cmake" : {
      "ObjectId" : "eda17ee4a62b5c76178ea73c8f88490f0a153e95",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*===-- llvm/config/llvm-config.h - llvm configure variable -------*- C -*-===*/\n/*                                                                            */\n/*                     The LLVM Compiler Infrastructure                       */\n/*                                                                            */\n/* This file is distributed under the University of Illinois Open Source      */\n/* License. See LICENSE.TXT for details.                                      */\n/*                                                                            */\n/*===----------------------------------------------------------------------===*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* This file enumerates all of the llvm variables from configure so that\n   they can be in exported headers and won't override package specific\n   directives.  This is a C file so we can include it in the llvm-c headers.  */",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* To avoid multiple inclusions of these variables when we include the exported\n   headers and config.h, conditionally include these.  */",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* TODO: This is a bit of a hack.  */",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Installation directory for binary executables */",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Time at which LLVM was configured */",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Installation directory for data files */",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* Target triple LLVM will generate code for by default */",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* Installation directory for documentation */",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* Define if threads enabled */",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Installation directory for config files */",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Has gcc/MSVC atomic intrinsics */",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Host triple LLVM will be executed on */",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* Installation directory for include files */",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Installation directory for .info files */",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Installation directory for libraries */",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Installation directory for man pages */",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* LLVM architecture name for the native architecture, if available */",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* LLVM name for the native AsmParser init function, if available */",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* LLVM name for the native AsmPrinter init function, if available */",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* LLVM name for the native Disassembler init function, if available */",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* LLVM name for the native Target init function, if available */",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* LLVM name for the native TargetInfo init function, if available */",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/* LLVM name for the native target MC init function, if available */",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/* Define if this is Unixish platform */",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "/* Define if this is Win32ish platform */",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "/* Define to path to circo program if found or 'echo circo' otherwise */",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "/* Define to path to dot program if found or 'echo dot' otherwise */",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "/* Define to path to dotty program if found or 'echo dotty' otherwise */",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "/* Define to path to fdp program if found or 'echo fdp' otherwise */",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "/* Define to path to Graphviz program if found or 'echo Graphviz' otherwise */",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "/* Define to path to gv program if found or 'echo gv' otherwise */",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "/* Define to path to neato program if found or 'echo neato' otherwise */",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "/* Define to path to twopi program if found or 'echo twopi' otherwise */",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "/* Define to path to xdot.py program if found or 'echo xdot.py' otherwise */",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "/* Installation prefix directory */",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "/* Define if we have the Intel JIT API runtime support library */",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "/* Define if we have the oprofile JIT-support library */",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "/* Major version of the LLVM API */",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "/* Minor version of the LLVM API */",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "/* Define to 1 if you have the <sanitizer/msan_interface.h> header file. */",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 41
    },
    "interpreter/llvm/src/include/llvm/IR/CMakeLists.txt" : {
      "ObjectId" : "2d52a89f9cd57b65428a422aa372040b2af2e93a",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/include/llvm/Support/DataTypes.h.cmake" : {
      "ObjectId" : "7484abd3686877ba5b7b7c10f0d65e84421dcaed",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*===-- include/Support/DataTypes.h - Define fixed size types -----*- C -*-===*\\\n|*                                                                            *|\n|*                     The LLVM Compiler Infrastructure                       *|\n|*                                                                            *|\n|* This file is distributed under the University of Illinois Open Source      *|\n|* License. See LICENSE.TXT for details.                                      *|\n|*                                                                            *|\n|*===----------------------------------------------------------------------===*|\n|*                                                                            *|\n|* This file contains definitions to figure out the size of _HOST_ data types.*|\n|* This file is important because different host OS's define different macros,*|\n|* which makes portability tough.  This file exports the following            *|\n|* definitions:                                                               *|\n|*                                                                            *|\n|*   [u]int(32|64)_t : typedefs for signed and unsigned 32/64 bit system types*|\n|*   [U]INT(8|16|32|64)_(MIN|MAX) : Constants for the min and max values.     *|\n|*                                                                            *|\n|* No library is required when using these functions.                         *|\n|*                                                                            *|\n|*===----------------------------------------------------------------------===*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* Please leave this file C-compatible. */",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Please keep this file in sync with DataTypes.h.in */",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* Note that this header's correct operation depends on __STDC_LIMIT_MACROS\n   being defined.  We would define it here, but in order to prevent Bad Things\n   happening when system headers or C++ STL headers include stdint.h before we\n   define it here, we define it on the g++ command line (in Makefile.rules). */",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Note that <inttypes.h> includes <stdint.h>, if this is a C99 system. */",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Handle incorrect definition of uint64_t as u_int64_t */",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Visual C++ doesn't provide standard integer headers, but it does provide\n   built-in data types. */",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* MSC treats -2147483648 as -(2147483648U). */",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* Certain compatibility updates to VC++ introduce the `cstdint'\n * header, which defines the INT*_C macros. On default installs they\n * are absent. */",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* Set defaults for constants which we cannot find. */",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "interpreter/llvm/src/lib/Analysis/CMakeLists.txt" : {
      "ObjectId" : "597c767a8e04b66122329e3594159dc4ee012907",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Analysis/IPA/CMakeLists.txt" : {
      "ObjectId" : "67b4135779809fe4ee084b45ee4dc83fed9e1c6f",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Analysis/IPA/Makefile" : {
      "ObjectId" : "b850c9ff7f4444825661b3e368707c3d51c40e8d",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Analysis/IPA/Makefile ---------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/Analysis/Makefile" : {
      "ObjectId" : "4af6d350a6456b71f154019d6bef61b798a645db",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Analysis/Makefile -------------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/Archive/CMakeLists.txt" : {
      "ObjectId" : "7ff478a41a594c1e91e70109601ffdab7f3eb8a2",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Archive/Makefile" : {
      "ObjectId" : "da9780403a08fd1d74ea074e1cd623bf1abe6aaa",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Archive/Makefile --------------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We only want an archive so only those modules actually used by a tool are\n\n# included.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/AsmParser/CMakeLists.txt" : {
      "ObjectId" : "985ebe20098854afc12c6c603a8e0dc491c748e3",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# AsmParser\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/AsmParser/Makefile" : {
      "ObjectId" : "995bb0e130e2bee6fbe94b259eba3b3890d9250f",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/AsmParser/Makefile ------------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/Bitcode/CMakeLists.txt" : {
      "ObjectId" : "ff7e290cad1bbdc568b68286489c747d8f245de7",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Bitcode/Makefile" : {
      "ObjectId" : "2d6b5ad1fe88b678cb0b205f50dc4010e6c78e34",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Bitcode/Makefile --------------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/Bitcode/Reader/CMakeLists.txt" : {
      "ObjectId" : "f614c9fd4a03c1ef249350fd2121c9c86c983a42",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Bitcode/Reader/Makefile" : {
      "ObjectId" : "59af8d53a73ea7b23431106caf80129c6439fa41",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Bitcode/Reader/Makefile -------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/Bitcode/Writer/CMakeLists.txt" : {
      "ObjectId" : "f097b097c3371d5e8124293c3892ec5f5aac8e0e",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Bitcode/Writer/Makefile" : {
      "ObjectId" : "7b0bd72159add299227cbc2c172e207f30c5bf75",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Bitcode/Reader/Makefile -------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/CMakeLists.txt" : {
      "ObjectId" : "76ebe9aca9a35643b23cfa4ab52b4259eeadc6fb",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# `Support' and `TableGen' libraries are added on the top-level CMakeLists.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/CodeGen/AsmPrinter/CMakeLists.txt" : {
      "ObjectId" : "8d15c069c6f8df6c0caab6056ec20d5b03a27a92",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/CodeGen/AsmPrinter/Makefile" : {
      "ObjectId" : "60aa6cbcf6f3ea51d7eaccd7bf88e34424443d16",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/CodeGen/AsmPrinter/Makefile ---------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/CodeGen/CMakeLists.txt" : {
      "ObjectId" : "56aa3309d3dd5c53974e7129ba4e87dc34d7d7fa",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/CodeGen/Makefile" : {
      "ObjectId" : "4ab3e3c0013ebc3f4b56fa9110e32d9c13f311a0",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/CodeGen/Makefile --------------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Xcode prior to 2.4 generates an error in -pedantic mode with use of HUGE_VAL\n\n# in this directory.  Disable -pedantic for this broken compiler.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/CodeGen/SelectionDAG/CMakeLists.txt" : {
      "ObjectId" : "75e816720f5708e6c67e9c5a1cf2d990b41e965e",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/CodeGen/SelectionDAG/Makefile" : {
      "ObjectId" : "ea716fdaabbab7034e1dc387bc1c00afc2047b51",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/CodeGen/SelectionDAG/Makefile -------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/DebugInfo/CMakeLists.txt" : {
      "ObjectId" : "e97455abace283f661e80f76b415e77262e09919",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/DebugInfo/Makefile" : {
      "ObjectId" : "1292b5728359b5d967eb74d5d43521989306c4ac",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/DebugInfo/Makefile ------------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/ExecutionEngine/CMakeLists.txt" : {
      "ObjectId" : "cb11bfe93c7c9078aac8075c4bccf7df6dd5a629",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/ExecutionEngine/IntelJITEvents/CMakeLists.txt" : {
      "ObjectId" : "348308897dc44b1b45999a37da5ae18620357cee",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/ExecutionEngine/IntelJITEvents/Makefile" : {
      "ObjectId" : "dcf3126cc52982abec3391a2de0462faa7f94adc",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/ExecutionEngine/JITProfile/Makefile -------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/ExecutionEngine/Interpreter/CMakeLists.txt" : {
      "ObjectId" : "74df8f0f37a5a8a999418f32dddba9423a1aba68",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make sure that the path to libffi headers is on the command\n\n# line. That path can be a compiler's non-default path even when\n\n# FFI_INCLUDE_DIR was not used, because cmake has its own paths for\n\n# searching for headers (CMAKE_SYSTEM_INCLUDE_PATH, for instance):\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/ExecutionEngine/Interpreter/Makefile" : {
      "ObjectId" : "5def1365c61a85526d587bc36ed9461f0dbe77ec",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/ExecutionEngine/Interpreter/Makefile ------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/ExecutionEngine/JIT/CMakeLists.txt" : {
      "ObjectId" : "52bb38970db988234a3d644c68cd7ebcf94ca865",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: Support other architectures. See Makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/ExecutionEngine/JIT/Makefile" : {
      "ObjectId" : "aafa3d9d420f046a91f9f4fdc9c61ec8b0bbca42",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/ExecutionEngine/JIT/Makefile --------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get the $(ARCH) setting\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Enable the X86 JIT if compiling on X86\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This flag can also be used on the command line to force inclusion\n\n# of the X86 JIT on non-X86 hosts\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable the Sparc JIT if compiling on Sparc\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This flag can also be used on the command line to force inclusion\n\n# of the Sparc JIT on non-Sparc hosts\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "interpreter/llvm/src/lib/ExecutionEngine/MCJIT/CMakeLists.txt" : {
      "ObjectId" : "088635a0e999d64bb2af312ebed74a7abb605b07",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/ExecutionEngine/MCJIT/Makefile" : {
      "ObjectId" : "967efbc0efa4f15544dfa4a3f1dfb44d5485a7d1",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/ExecutionEngine/MCJIT/Makefile ------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/ExecutionEngine/Makefile" : {
      "ObjectId" : "c26e0ada5bc15ef71a5d3dd9785bbcc83aae34c6",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/ExecutionEngine/Makefile ------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/ExecutionEngine/OProfileJIT/CMakeLists.txt" : {
      "ObjectId" : "d585136eb0ace450d8c8d07f00cdcddc792b3c30",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/ExecutionEngine/OProfileJIT/Makefile" : {
      "ObjectId" : "fd3adce26c1f7e8f9c95613ca5e48b051e481c2d",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/ExecutionEngine/OProfileJIT/Makefile ------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/CMakeLists.txt" : {
      "ObjectId" : "cbf7cf14d4915c1f0d9933636ca8df802208dbc5",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/ExecutionEngine/RuntimeDyld/Makefile" : {
      "ObjectId" : "5d6f26d950fee6b6c1afa8bb568952165d282bdd",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/ExecutionEngine/MCJIT/Makefile ------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/IR/CMakeLists.txt" : {
      "ObjectId" : "c2a4ee3aae14a745960c8b18efb87bd5d34dccab",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Workaround: It takes over 20 minutes to compile with msvc10.\n\n# FIXME: Suppressing optimizations to core libraries would not be good thing.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/IR/Makefile" : {
      "ObjectId" : "cc403f38dd8ecdc557172ca901567928e56edf6f",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/IR/Makefile -------------------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/IRReader/CMakeLists.txt" : {
      "ObjectId" : "cf10d8b7dba92fa6dd38112323d567accb0180b9",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/IRReader/Makefile" : {
      "ObjectId" : "cf6bc113542799f66b7e1933640ae2e86f907b0f",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/IRReader/Makefile -------------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/Linker/CMakeLists.txt" : {
      "ObjectId" : "28f1262a4398d40339aa92705feb2d4a9c5f5ce2",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Linker/Makefile" : {
      "ObjectId" : "19e646b7483020ae57f1198d7e8b6ec06d76b2c6",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Linker/Makefile ---------------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/MC/CMakeLists.txt" : {
      "ObjectId" : "db882c020b76b8115b58f126a4f7f6559b97faec",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/MC/MCDisassembler/CMakeLists.txt" : {
      "ObjectId" : "5195b9e23d698bcd827b477e85a7a3eba82ecbc8",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/MC/MCDisassembler/Makefile" : {
      "ObjectId" : "7d71cd381a7c35c96afd08c5b94861374970faf2",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/MC/MCDisassembler/Makefile ----------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/MC/MCParser/CMakeLists.txt" : {
      "ObjectId" : "222f237bfd6415d04f5abbe79ee274a3d6efd56b",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/MC/MCParser/Makefile" : {
      "ObjectId" : "4477757657c7fd544fa2d39c12c722d414ff979e",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/MC/MCParser/Makefile ----------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/MC/Makefile" : {
      "ObjectId" : "bf8b7c0e78318c0831070016507936ad7690a802",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/MC/Makefile -------------------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/Makefile" : {
      "ObjectId" : "57f016bc890525fce7f3c6a1ce80de1abdcb0c02",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Makefile ----------------------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/Object/CMakeLists.txt" : {
      "ObjectId" : "c20fc0cc399ddcc54ee6218e59174e3d47f0a056",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Object/Makefile" : {
      "ObjectId" : "79388dc97f1afbd885ea3fdb2e44ee480d9af59d",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Object/Makefile ---------------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/Option/CMakeLists.txt" : {
      "ObjectId" : "2e7acc27a534acfcf87d4718d96d4e45d9107c88",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Option/Makefile" : {
      "ObjectId" : "255d0796e237495e3772ffcfd96c25772bd6bc8e",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Option/Makefile ---------------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/Support/CMakeLists.txt" : {
      "ObjectId" : "3746a810114fa82a7b9e1a3b68a1bff42078952d",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# System\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/Support/Makefile" : {
      "ObjectId" : "4a2185d589e51df2d2393d4517d98809d1e57308",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Support/Makefile --------------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/TableGen/CMakeLists.txt" : {
      "ObjectId" : "935d674a360386ddf6edfbfb3c9904b8ca4fa2c3",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/TableGen/Makefile" : {
      "ObjectId" : "345db3465cfe89c68cd8dd2bd1fa08710a19a5d7",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/TableGen/Makefile -------------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/Target/AArch64/AsmParser/CMakeLists.txt" : {
      "ObjectId" : "a018a0aa7b36fb1f7ad64d6df04d7bb91835af23",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/AArch64/AsmParser/Makefile" : {
      "ObjectId" : "56c9ef52ea58dc4e8e603d287663a750345480d4",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/AArch64/AsmParser/Makefile ---------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/AArch64/CMakeLists.txt" : {
      "ObjectId" : "8164d6f73c97f1d203809a14d1e91f096ba95d69",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/AArch64/Disassembler/CMakeLists.txt" : {
      "ObjectId" : "d4bd163dad60c1d9a2072d194798316a56410bd9",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/AArch64/Disassembler/Makefile" : {
      "ObjectId" : "5c861207f836946cbdc80bfd700b89ae631cbad9",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/AArch64/Disassembler/Makefile ------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/AArch64/InstPrinter/CMakeLists.txt" : {
      "ObjectId" : "d4b980a94d9b06a72a1a310ee8333d5ad861cfba",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/AArch64/InstPrinter/Makefile" : {
      "ObjectId" : "1c36a8dea7983e8800dac823682640d2c2343f7c",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/AArch64/AsmPrinter/Makefile --------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/AArch64/MCTargetDesc/CMakeLists.txt" : {
      "ObjectId" : "44c66a224e30ba7e2ea423f4984a44b5162c1840",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/Target/AArch64/MCTargetDesc/Makefile" : {
      "ObjectId" : "5779ac5ac60a86de04e8ae3ef13dc88ff416f5b2",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/AArch64/TargetDesc/Makefile --------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/AArch64/Makefile" : {
      "ObjectId" : "641bb83c4775610c3118f0c8afa211553b4d584c",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/AArch64/Makefile -------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make sure that tblgen is run, first thing.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/AArch64/TargetInfo/CMakeLists.txt" : {
      "ObjectId" : "e236eed00be130ab99a322afdfbd5435cb631d48",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/AArch64/TargetInfo/Makefile" : {
      "ObjectId" : "9dc9aa4bccf7ae6e2e5caf0df7ad34159c456ab6",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/AArch64/TargetInfo/Makefile --------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/AArch64/Utils/CMakeLists.txt" : {
      "ObjectId" : "2c28348d7d81c4015af435bef5314d870911790b",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/AArch64/Utils/Makefile" : {
      "ObjectId" : "0f4a645271234461779cefdc36839691d5d11ae7",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/AArch64/Utils/Makefile -------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' AArch64 target directory to grab private headers\n\n#CPP.Flags += -I$(PROJ_OBJ_DIR)/.. -I$(PROJ_SRC_DIR)/..\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/ARM/AsmParser/CMakeLists.txt" : {
      "ObjectId" : "d2012c387cdaff156fa335b1f1b9ba69a16d2980",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/ARM/AsmParser/Makefile" : {
      "ObjectId" : "841516fffbd55fefcf3cfba6f29f5b4de296f69f",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/ARM/AsmParser/Makefile -------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' ARM target directory to grab private headers\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/ARM/CMakeLists.txt" : {
      "ObjectId" : "b832508a086c6c3356b2a042feec4ac75e13d02f",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# workaround for hanging compilation on MSVC9, 10\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/Target/ARM/Disassembler/CMakeLists.txt" : {
      "ObjectId" : "9de6e5c511bde0e344350847e90972fbb39d7176",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# workaround for hanging compilation on MSVC8, 9 and 10\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/Target/ARM/Disassembler/Makefile" : {
      "ObjectId" : "031b6aca5a4848258b0115b935d5176fbc7bc75c",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/ARM/Disassembler/Makefile ----------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' arm target directory to grab private headers\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/ARM/InstPrinter/CMakeLists.txt" : {
      "ObjectId" : "e2d4819b4b4a2d4b0bb71b3f35c4532c0b06f0b9",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/ARM/InstPrinter/Makefile" : {
      "ObjectId" : "65d372e44b885a9c3cee065c5ad9bd0ed067dfe4",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/ARM/AsmPrinter/Makefile ------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' arm target directory to grab private headers\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/ARM/MCTargetDesc/CMakeLists.txt" : {
      "ObjectId" : "e17eb4d5e987accf151970ff5ecfdac9916637cf",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/Target/ARM/MCTargetDesc/Makefile" : {
      "ObjectId" : "448ed9df2bff9e9633c7c6f1ab5e33fa9ac2e5c2",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/ARM/TargetDesc/Makefile ------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/ARM/Makefile" : {
      "ObjectId" : "f069535ff3c0772a4bd4a0a93b87526280b679cd",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/ARM/Makefile -----------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make sure that tblgen is run, first thing.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/ARM/TargetInfo/CMakeLists.txt" : {
      "ObjectId" : "533e747894caa926fe7ad5e63e9a1b8c285eb040",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/ARM/TargetInfo/Makefile" : {
      "ObjectId" : "6292ab14b3469140ead8eb4b3c1804e4f6987452",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/ARM/TargetInfo/Makefile ------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/CMakeLists.txt" : {
      "ObjectId" : "02ac493b42150ad380b6fbaf524a757792d18d2e",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/CppBackend/CMakeLists.txt" : {
      "ObjectId" : "515e1dd7e39feda4c51213ac6e12acdfca2e2ac4",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/CppBackend/Makefile" : {
      "ObjectId" : "efc7463fda3d6b0119bfde88e08194f7af505671",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/CppBackend/Makefile --- ------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/Target/CppBackend/TargetInfo/CMakeLists.txt" : {
      "ObjectId" : "f82d72e378cb5b61a5b0ae9e760ddd82af7a7318",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/CppBackend/TargetInfo/Makefile" : {
      "ObjectId" : "6e682838daec8aa60c32f502405e84ae4e40d6ad",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/CppBackend/TargetInfo/Makefile -----------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/Hexagon/CMakeLists.txt" : {
      "ObjectId" : "b5b887e7c7c8d7dce27b9cf372611b89b41e5c0c",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/Hexagon/InstPrinter/CMakeLists.txt" : {
      "ObjectId" : "cb106a884432cd6ab660fb8dfe0a265fd79db7f7",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/Hexagon/InstPrinter/Makefile" : {
      "ObjectId" : "20331d8807ec94d74dee3d3b52ad937aef1fd91e",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/Hexagon/InstPrinter/Makefile ----------------------------===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' Hexagon target directory to grab private headers\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/Hexagon/MCTargetDesc/CMakeLists.txt" : {
      "ObjectId" : "62b9b600ce8e648e81b959888aa823353b672232",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/Hexagon/MCTargetDesc/Makefile" : {
      "ObjectId" : "885be2ddbd88094e29a2683d15d72472ae1e2155",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/Hexagon/TargetDesc/Makefile --------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/Hexagon/Makefile" : {
      "ObjectId" : "dc387c549a1d502ab408ca2f44310764a5b1267d",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/Hexagon/Makefile -------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make sure that tblgen is run, first thing.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/Hexagon/TargetInfo/CMakeLists.txt" : {
      "ObjectId" : "5b04a30d26c23e374803fe3229c877a0b05dcca5",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/Hexagon/TargetInfo/Makefile" : {
      "ObjectId" : "494cca1122490583847ca531eacc5f82233e2cdf",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/Hexagon/TargetInfo/Makefile ----------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/MBlaze/AsmParser/CMakeLists.txt" : {
      "ObjectId" : "4a7d8e8d8887f066874179fab5b04a6fe742d20c",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/MBlaze/AsmParser/Makefile" : {
      "ObjectId" : "1e68766a084f7fbdcd041e29d83b5a9789c6a48a",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/MBlaze/AsmParser/Makefile ----------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' MBlaze target directory for private headers\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/MBlaze/CMakeLists.txt" : {
      "ObjectId" : "91a41f39b5d83953f010fe16b8587d8ecb90cc4d",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/MBlaze/Disassembler/CMakeLists.txt" : {
      "ObjectId" : "be2dce156d56080ddd54c90800f5c5f2d0d4af7d",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# workaround for hanging compilation on MSVC9 and 10\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/Target/MBlaze/Disassembler/Makefile" : {
      "ObjectId" : "0530b3286bc43524cd6d101af6db0f31598afebb",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/MBlaze/Disassembler/Makefile -------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' MBlaze target directory to grab headers\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/MBlaze/InstPrinter/CMakeLists.txt" : {
      "ObjectId" : "586e2d3eefc33c66127d97f2cb39bcec92cbc467",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/MBlaze/InstPrinter/Makefile" : {
      "ObjectId" : "9fb6e869d94526451822b31b5e18ca94203a38d4",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/MBlaze/AsmPrinter/Makefile ---------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' MBlaze target directory to grab\n\n#       private headers\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/MBlaze/MCTargetDesc/CMakeLists.txt" : {
      "ObjectId" : "36134a69387c0c2bb34bf99d4e87cc36c34d7650",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/MBlaze/MCTargetDesc/Makefile" : {
      "ObjectId" : "71075ffbf47cdce259331135b9a88e5bbf4106b8",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/MBlaze/TargetDesc/Makefile ---------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/MBlaze/Makefile" : {
      "ObjectId" : "512ce9a08103e1b02546ba20cc421532315461b2",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/MBlaze/Makefile --------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make sure that tblgen is run, first thing.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/MBlaze/TargetInfo/CMakeLists.txt" : {
      "ObjectId" : "b554d9b15e4510750b430d295a0dfc36a31d5411",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/MBlaze/TargetInfo/Makefile" : {
      "ObjectId" : "fb7ea118a6b508b97463d26a990d584aba75bf02",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/MBlaze/TargetInfo/Makefile ---------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/MSP430/CMakeLists.txt" : {
      "ObjectId" : "f9ecaed83a6fa0a4b3e0b965985263adabba26ed",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/MSP430/InstPrinter/CMakeLists.txt" : {
      "ObjectId" : "64ac994b7f473965436e1cdc4e6e11b456a4f3fc",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/MSP430/InstPrinter/Makefile" : {
      "ObjectId" : "a5293ab8a2342a475e16e7113e920e22b9c84942",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/MSP430/AsmPrinter/Makefile ---------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' MSP430 target directory to grab private headers\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/MSP430/MCTargetDesc/CMakeLists.txt" : {
      "ObjectId" : "adc95c52014ec93f9a6706725d4b79244b616c40",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/MSP430/MCTargetDesc/Makefile" : {
      "ObjectId" : "bb857998eef90b6c9e4ec8f1ff58d844e8be3de1",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/MSP430/TargetDesc/Makefile ---------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/MSP430/Makefile" : {
      "ObjectId" : "82216edd81e43afdfb4bec2b4c07ddc21f326893",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/MSP430/Makefile --------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source \n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make sure that tblgen is run, first thing.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/MSP430/TargetInfo/CMakeLists.txt" : {
      "ObjectId" : "f6b40eab31b66ebf33305ada37d3e073cd142160",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/MSP430/TargetInfo/Makefile" : {
      "ObjectId" : "abb08f2548ee1a77cfdf0238eececf88370d0e89",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/MSP430/TargetInfo/Makefile ---------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/Makefile" : {
      "ObjectId" : "50a360f1f868f520bdafad0ccad739568dfdb67f",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#===- lib/Target/Makefile ----------------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We include this early so we can access the value of TARGETS_TO_BUILD as the\n\n# value for PARALLEL_DIRS which must be set before Makefile.rules is included\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/Mips/AsmParser/CMakeLists.txt" : {
      "ObjectId" : "28f5219109011d6e6a03ca69d5ade031dc5163d9",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/Mips/AsmParser/Makefile" : {
      "ObjectId" : "679acee9fe724b8379d0acce424cf5a0020a2e90",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/Mips/AsmParser/Makefile ------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' mips target directory to grab private headers\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/Mips/CMakeLists.txt" : {
      "ObjectId" : "78a9f70c66817cf20b7ea9d11b6203c6c22927d3",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/Mips/Disassembler/CMakeLists.txt" : {
      "ObjectId" : "fe1dc75776f15e183dbb0585cd0698207bd2eb91",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# workaround for hanging compilation on MSVC9 and 10\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/Target/Mips/Disassembler/Makefile" : {
      "ObjectId" : "7900373dd2b21f47007a17ef6adf94f035e231a5",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/Mips/Disassembler/Makefile ---------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' Mips target directory to grab private headers\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/Mips/InstPrinter/CMakeLists.txt" : {
      "ObjectId" : "3e9fbf1c55660bde3eb241de97dc1848af372f04",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/Mips/InstPrinter/Makefile" : {
      "ObjectId" : "f07f3ed381ee2437ef9cbe6ae0ccb6489929f094",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/Mips/AsmPrinter/Makefile -----------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' mips target directory to grab private headers\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/Mips/MCTargetDesc/CMakeLists.txt" : {
      "ObjectId" : "4212c94a5578a413f5279c003f75cdbec05ba3cb",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/Mips/MCTargetDesc/Makefile" : {
      "ObjectId" : "22a27218f28d546373972ade2e1e375a3e3364fe",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/Mips/TargetDesc/Makefile -----------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/Mips/Makefile" : {
      "ObjectId" : "bcf951e861b05e130ab1c204d238f48915c4cda2",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/Mips/Makefile ----------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make sure that tblgen is run, first thing.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/Mips/TargetInfo/CMakeLists.txt" : {
      "ObjectId" : "4172d00a33f0465907b5e1a73d61ee708cd82bc5",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/Mips/TargetInfo/Makefile" : {
      "ObjectId" : "32f4e1695b1d77dd10337cd4355a6655d94cd1ff",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/Mips/TargetInfo/Makefile -----------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/NVPTX/CMakeLists.txt" : {
      "ObjectId" : "7da2fed4cd578796faa68b57108b236c07085f23",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/NVPTX/InstPrinter/CMakeLists.txt" : {
      "ObjectId" : "ae4c751196876d58d3b998e770ece1a5bb50fcea",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/NVPTX/InstPrinter/Makefile" : {
      "ObjectId" : "7b7865436bf3b8369e5bf5f7823a3cc0c6ee854c",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/NVPTX/AsmPrinter/Makefile ----------------*- Makefile -*-===##\n\n#\n\n#\t\t\t\t\t\t\t\t\t\t\tThe LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' ptx target directory to grab private headers\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/NVPTX/MCTargetDesc/CMakeLists.txt" : {
      "ObjectId" : "a030d9f8f1f1db3445f4c13fbf793b4d882ccf37",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n\n#include_directories(${CMAKE_CURRENT_SOURCE_DIR}/.. ${CMAKE_CURRENT_BINARY_DIR}/..)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/Target/NVPTX/MCTargetDesc/Makefile" : {
      "ObjectId" : "31d06cb5948d20fef849b801e165f833074597f7",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/NVPTX/TargetDesc/Makefile ----------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/NVPTX/Makefile" : {
      "ObjectId" : "8db20ebed2c2b6b7e251d65f6fc4c66a1fc71a6a",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/NVPTX/Makefile ---------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make sure that tblgen is run, first thing.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/NVPTX/TargetInfo/CMakeLists.txt" : {
      "ObjectId" : "0bf13346d2efcbeff2550750ec397d19242d3ef0",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#include_directories( ${CMAKE_CURRENT_BINARY_DIR}/.. ${CMAKE_CURRENT_SOURCE_DIR}/.. )\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/Target/NVPTX/TargetInfo/Makefile" : {
      "ObjectId" : "8622315b47b96ae9d3c1f00f5ed8a47645004e7b",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/NVPTX/TargetInfo/Makefile ----------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/PowerPC/CMakeLists.txt" : {
      "ObjectId" : "6036428fad93bc8f9a3f4f4a6a6cb0d655f4b444",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/PowerPC/InstPrinter/CMakeLists.txt" : {
      "ObjectId" : "a605cc4b5f274db030f5f6aa093f7991fb84aaa7",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/PowerPC/InstPrinter/Makefile" : {
      "ObjectId" : "f097e84248ff337fcdc77c450e5371e41f5dec99",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/PowerPC/AsmPrinter/Makefile --------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' powerpc target directory to grab private headers\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/PowerPC/MCTargetDesc/CMakeLists.txt" : {
      "ObjectId" : "b674883db7defabfb71044bb81b0b61608f5def5",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/PowerPC/MCTargetDesc/Makefile" : {
      "ObjectId" : "9db66622cced39146d7dbdf44e4d210cc9591b60",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/PowerPC/TargetDesc/Makefile --------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/PowerPC/Makefile" : {
      "ObjectId" : "1617b26ca4a5f740d4f747d60b888e29cdf88922",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/PowerPC/Makefile -------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make sure that tblgen is run, first thing.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/PowerPC/TargetInfo/CMakeLists.txt" : {
      "ObjectId" : "fdb8a62b9d24218559aaac7ee65c0ea92c129c5b",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/PowerPC/TargetInfo/Makefile" : {
      "ObjectId" : "2d0560d275f971baf0aaf0eb7b3696748efc15de",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/PowerPC/TargetInfo/Makefile --------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/R600/CMakeLists.txt" : {
      "ObjectId" : "8efba5846befbf94b5d75720dae8bd5780f0bb5f",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/R600/InstPrinter/CMakeLists.txt" : {
      "ObjectId" : "069c55ba948e37b968cfecd2f99a7dee31f5fc47",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/R600/InstPrinter/Makefile" : {
      "ObjectId" : "a794cc1124edded27b0402838765d8f988cec639",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#===- lib/Target/R600/AsmPrinter/Makefile ------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' x86 target directory to grab private headers\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/R600/MCTargetDesc/CMakeLists.txt" : {
      "ObjectId" : "37e714c2e7b855a3a93b8c0b207c63ab5a2126b6",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/R600/MCTargetDesc/Makefile" : {
      "ObjectId" : "8894a7607f4fd92a8b8fe9a286cd45fc75d0f6bf",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/AMDGPU/TargetDesc/Makefile ----------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/R600/Makefile" : {
      "ObjectId" : "1b3ebbe8c8f3b9596c5831121e9b452f6326f5f4",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/R600/Makefile ---------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make sure that tblgen is run, first thing.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/R600/TargetInfo/CMakeLists.txt" : {
      "ObjectId" : "3d1584eba346ae433e205e3640fabec678ae2749",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/R600/TargetInfo/Makefile" : {
      "ObjectId" : "b8ac4e782302eaed5bde6d9bf91589d52c065f53",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/AMDGPU/TargetInfo/Makefile ----------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/Sparc/CMakeLists.txt" : {
      "ObjectId" : "efb10db4c0a72ec7fd1488f5300ae2e82a17cbeb",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/Sparc/MCTargetDesc/CMakeLists.txt" : {
      "ObjectId" : "9d4db4d25ef7ecc20cb3a84552042dddb65a45c7",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/Sparc/MCTargetDesc/Makefile" : {
      "ObjectId" : "abcbe2da18ec8ec6b3308a3972098a3cf68b3cce",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/Sparc/TargetDesc/Makefile ----------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/Sparc/Makefile" : {
      "ObjectId" : "4b81ada956f2ece540d7c344e03640909d529081",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/Sparc/Makefile ---------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make sure that tblgen is run, first thing.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/Sparc/TargetInfo/CMakeLists.txt" : {
      "ObjectId" : "b0d031e0c2bef12eabde441a018be57c66afaf2a",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/Sparc/TargetInfo/Makefile" : {
      "ObjectId" : "641ed87160c753fd63d7ffde3c011dc3b9a49cf4",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/Sparc/TargetInfo/Makefile ----------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/X86/AsmParser/CMakeLists.txt" : {
      "ObjectId" : "54204d4b6390801d5547f531e45a2b0d133dccad",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/X86/AsmParser/Makefile" : {
      "ObjectId" : "fb9760796622c2fe9e5fdb184574366b5e704853",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/X86/AsmParser/Makefile -------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' x86 target directory to grab private headers\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/X86/CMakeLists.txt" : {
      "ObjectId" : "d14899d28a2356acdf74ec8fd604b97af53ff6d9",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A workaround for a bug in cmake 2.8.3. See PR 8885.\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# end of workaround.\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/X86/Disassembler/CMakeLists.txt" : {
      "ObjectId" : "0cd6db96dabe8562bd980e58d419d27f64e41d19",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# workaround for hanging compilation on MSVC9 and 10\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/Target/X86/Disassembler/Makefile" : {
      "ObjectId" : "8669fd8fd93020c22c2b3a75ac2a5249a58de1d4",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/X86/Disassembler/Makefile ----------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' x86 target directory to grab private headers\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/X86/InstPrinter/CMakeLists.txt" : {
      "ObjectId" : "28e2460d8233b3ca02af450e1c954cc2541f445f",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/X86/InstPrinter/Makefile" : {
      "ObjectId" : "c82aa330a20ccac2a2f385ae9055e70501313a3f",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/X86/AsmPrinter/Makefile ------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' x86 target directory to grab private headers\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/X86/MCTargetDesc/CMakeLists.txt" : {
      "ObjectId" : "1c240e52a37d2b51ca69c28a39132980650191e5",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/Target/X86/MCTargetDesc/Makefile" : {
      "ObjectId" : "b19774ee379e181b33d14e92b0a124fd77a93e74",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/X86/TargetDesc/Makefile ------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/X86/Makefile" : {
      "ObjectId" : "e518fecf044fd68ec576c26f8acabeaa63f0bebe",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/X86/Makefile -----------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make sure that tblgen is run, first thing.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/X86/TargetInfo/CMakeLists.txt" : {
      "ObjectId" : "b1d0b9f9f9bd121a2a245c827dec760775a5f858",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/X86/TargetInfo/Makefile" : {
      "ObjectId" : "ee91982df0c8614e5f46f3c0213c7aba6d5f8920",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/X86/TargetInfo/Makefile ------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/X86/Utils/CMakeLists.txt" : {
      "ObjectId" : "2e72c344d99c17e7123b8d2dfcad99510e7eadf7",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/X86/Utils/Makefile" : {
      "ObjectId" : "1df6f0f561d45fe1a45f2e8e905c5130a9ba7282",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/X86/Utils/Makefile -----------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' x86 target directory to grab private headers\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/XCore/CMakeLists.txt" : {
      "ObjectId" : "099ad390d2a7e43fc3daeb3409bd4c38b6d1dcbd",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/XCore/Disassembler/CMakeLists.txt" : {
      "ObjectId" : "cdc5d993b8bfe38af830618ec4b49f2a85ca6d48",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/XCore/Disassembler/Makefile" : {
      "ObjectId" : "4caffdd1da6a14f56ba08d5fe823a14d30513fbb",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/XCore/Disassembler/Makefile --------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' XCore target directory to grab private headers\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/XCore/InstPrinter/CMakeLists.txt" : {
      "ObjectId" : "930e733cd7f1c5ce0322dc0feea65b9f3ede23dd",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/XCore/InstPrinter/Makefile" : {
      "ObjectId" : "1c1c61299c39ec8bddb10fc19313240452d88df7",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/XCore/AsmPrinter/Makefile ----------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' xcore target directory to grab private headers\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/XCore/MCTargetDesc/CMakeLists.txt" : {
      "ObjectId" : "3a3f5b4cc63ee234c19aed5e55dd5fb3b79f23f2",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/Target/XCore/MCTargetDesc/Makefile" : {
      "ObjectId" : "de61543bfe9c5e6ec19e1b6919ea0715f1cf4dd4",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/XCore/TargetDesc/Makefile ----------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/XCore/Makefile" : {
      "ObjectId" : "92ddc88608766690d925cca92cebde43da088740",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/XCore/Makefile ---------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make sure that tblgen is run, first thing.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Target/XCore/TargetInfo/CMakeLists.txt" : {
      "ObjectId" : "2c34b8730c85ada1018631fd82809fd9fc6faa0e",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Target/XCore/TargetInfo/Makefile" : {
      "ObjectId" : "f8a4095174970c58a3246c9abf4c884cb535cc48",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Target/XCore/TargetInfo/Makefile ----------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack: we need to include 'main' target directory to grab private headers\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Transforms/CMakeLists.txt" : {
      "ObjectId" : "2bb6e905909418507e508bcf8180d0e27186e217",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Transforms/Hello/CMakeLists.txt" : {
      "ObjectId" : "917b745628de1e747ae3ed5ce9bcde83f2d98730",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Transforms/Hello/Makefile" : {
      "ObjectId" : "f1e31489d3c966bbdabc57ac81807e83e9e5059c",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Transforms/Hello/Makefile -----------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If we don't need RTTI or EH, there's no reason to export anything\n\n# from the hello plugin.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Transforms/IPO/CMakeLists.txt" : {
      "ObjectId" : "90c1c33e6dca7945ac9d040b5bd4e903253c6240",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Transforms/IPO/Makefile" : {
      "ObjectId" : "5c42374139aaa2e46daf55e04ca355712c2ee70d",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Transforms/IPO/Makefile -------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/Transforms/InstCombine/CMakeLists.txt" : {
      "ObjectId" : "a25696ec03a9cf3aef621bfbc3a20c9e0e91b7f6",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Transforms/InstCombine/Makefile" : {
      "ObjectId" : "0c488e78b6d92ba1d93b86efeb0fa196d3fa3bcf",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Transforms/InstCombine/Makefile -----------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/Transforms/Instrumentation/CMakeLists.txt" : {
      "ObjectId" : "1c9e0536794a8fcab4c725e45769626fb7794521",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Transforms/Instrumentation/Makefile" : {
      "ObjectId" : "6cbc7a9cd88af95e66779c4728237332168c29ec",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Transforms/Instrumentation/Makefile -------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/Transforms/Makefile" : {
      "ObjectId" : "c390517d07cd41ea3bc165740107c724026a8066",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Transforms/Makefile -----------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# No support for plugins on windows targets\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/lib/Transforms/ObjCARC/CMakeLists.txt" : {
      "ObjectId" : "233deb398011d33ce4ef99c2ed3a99f1ea0ee3e7",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Transforms/ObjCARC/Makefile" : {
      "ObjectId" : "2a34e21714f158f03e6293ff22d59d3f851ef39c",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Transforms/ObjCARC/Makefile ---------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/Transforms/Scalar/CMakeLists.txt" : {
      "ObjectId" : "fd55e082ac7d26984d80f62ae5fbce5747ba3023",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Transforms/Scalar/Makefile" : {
      "ObjectId" : "cc42fd00ac7da94a4dcce9ae5219fe9943a61be2",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Transforms/Scalar/Makefile ----------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/Transforms/Utils/CMakeLists.txt" : {
      "ObjectId" : "b71628bcb28ea26ac6a5c6704491fd4d6720b5eb",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Transforms/Utils/Makefile" : {
      "ObjectId" : "d1e9336d67f029be8f17b8c5cc9828d784588c10",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Transforms/Utils/Makefile -----------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/lib/Transforms/Vectorize/CMakeLists.txt" : {
      "ObjectId" : "7ae082f55e08aba06aa2e398073d31c881dac24e",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/lib/Transforms/Vectorize/Makefile" : {
      "ObjectId" : "86c36585f23f5da3540faa940518d015900c4dc5",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Transforms/Vectorize/Makefile -----------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/projects/CMakeLists.txt" : {
      "ObjectId" : "c19bb679d186e1a51cb9533547f1f8d66f407fe5",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Discover the projects that use CMake in the subdirectories.\n\n# Note that explicit cmake invocation is required every time a new project is\n\n# added or removed.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Also add in the compiler-rt tree if present and we have a sufficiently\n\n# recent version of CMake.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/projects/Makefile" : {
      "ObjectId" : "1318a35d941ef9548642d9392447e20b5d1b39e7",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- projects/Makefile ------------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compile all subdirs, except for the test suite, which lives in test-suite.\n\n# Before 2008.06.24 it lived in llvm-test, so exclude that as well for now.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Don't build compiler-rt, it isn't designed to be built directly.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Don't build libcxx, it isn't designed to be built directly.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Sparc cannot link shared libraries (libtool problem?)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "interpreter/llvm/src/projects/sample/Makefile" : {
      "ObjectId" : "f96f1aba2ed3c990d3953e2d2a7ac519895cf758",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- projects/sample/Makefile ----------------------------*- Makefile -*-===##\n\n#\n\n# This is a sample Makefile for a project that uses LLVM.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Indicates our relative path to the top of the project's root directory.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Include the Master Makefile that knows how to build all.\n\n#\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "interpreter/llvm/src/projects/sample/lib/Makefile" : {
      "ObjectId" : "959038b7f9b4d1d72994045fd8252afe5cd95e87",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- projects/sample/lib/Makefile ------------------------*- Makefile -*-===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Relative path to the top of the source tree.\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# List all of the subdirectories that we will compile.\n\n#\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "interpreter/llvm/src/projects/sample/lib/sample/Makefile" : {
      "ObjectId" : "af63399d2aa9f3d8c86e11954e7977b495074893",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- projects/sample/lib/sample/Makefile -----------------*- Makefile -*-===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Indicate where we are relative to the top of the source tree.\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Give the name of a library.  This will build a dynamic version.\n\n#\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Include Makefile.common so we know what to do.\n\n#\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "interpreter/llvm/src/projects/sample/tools/Makefile" : {
      "ObjectId" : "00ff52b42cfaf45d67197607de1cf458c7b655f9",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- projects/sample/tools/Makefile ----------------------*- Makefile -*-===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Relative path to the top of the source tree.\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# List all of the subdirectories that we will compile.\n\n#\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "interpreter/llvm/src/projects/sample/tools/sample/Makefile" : {
      "ObjectId" : "324030c5672699d45fec1b4c0be7842d43e71b6f",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- projects/sample/tools/sample/Makefile ---------------*- Makefile -*-===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Indicate where we are relative to the top of the source tree.\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Give the name of the tool.\n\n#\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# List libraries that we'll need\n\n# We use LIBS because sample is a dynamic library.\n\n#\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Include Makefile.common so we know what to do.\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "interpreter/llvm/src/runtime/CMakeLists.txt" : {
      "ObjectId" : "502b91dc580d2045f5e24e8b9b4ebe34f6cbb494",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/runtime/Makefile" : {
      "ObjectId" : "d0e85d58264f6c9fb034565ac58bb7e781e8f030",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- runtime/Makefile ------------------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Disable libprofile: a faulty libtool is generated by autoconf which breaks the\n\n# build on Sparc\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/runtime/libprofile/CMakeLists.txt" : {
      "ObjectId" : "9044f768e17f52b8d462bafa0df79221ad9df153",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/runtime/libprofile/Makefile" : {
      "ObjectId" : "6c3701b268716e2b5a688cd182b8798dc4cbedf1",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- runtime/libprofile/Makefile -------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build and install this archive.                                                                                                                  \n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Special hack to allow libprofile_rt to have an offset version number.\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Set dylib internal version number to llvmCore submission number.\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Extra options to override libtool defaults.\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Mac OS X 10.4 and earlier tools do not allow a second -install_name on\n\n# command line.\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# If we're doing an Apple-style build, add the LTO object path.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7,
      "Errorlog" : "line 43:79 token recognition error at: '\\1'\n"
    },
    "interpreter/llvm/src/tools/CMakeLists.txt" : {
      "ObjectId" : "6b7c884516a56ebae13933f26685ac9d2f579087",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# NOTE: The tools are organized into groups of four consisting of one large and\n\n# three small executables. This is done to minimize memory load in parallel\n\n# builds.  Please retain this ordering.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We currently require 'sed' to build llvm-config, so don't try to build it\n\n# on pure Win32.\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# TODO: support other systems:\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "interpreter/llvm/src/tools/Makefile" : {
      "ObjectId" : "eaf9ed3577276d06a1426a8b0f3ca6cd745f2c40",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/Makefile --------------------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build clang if present.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build LLDB if present. Note LLDB must be built last as it depends on the\n\n# wider LLVM infrastructure (including Clang).\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# NOTE: The tools are organized into five groups of four consisting of one\n\n# large and three small executables. This is done to minimize memory load\n\n# in parallel builds.  Please retain this ordering.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If Intel JIT Events support is configured, build an extra tool to test it.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Let users override the set of tools to build from the command line.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# These libraries build as dynamic libraries (.dylib /.so), they can only be\n\n# built if ENABLE_PIC is set.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# gold only builds if binutils is around.  It requires \"lto\" to build before\n\n# it so it is added to DIRS.\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# On Win32, loadable modules can be built with ENABLE_SHARED.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "interpreter/llvm/src/tools/bugpoint-passes/CMakeLists.txt" : {
      "ObjectId" : "05f190a2a586f9bc164bd2c5acfdeab49deaabd9",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/bugpoint-passes/Makefile" : {
      "ObjectId" : "61f96bc338590f29b957d5a364bf57ed04cb4da5",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/bugpoint-passes/Makefile -- -------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If we don't need RTTI or EH, there's no reason to export anything\n\n# from this plugin.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/bugpoint/CMakeLists.txt" : {
      "ObjectId" : "0000d977acf301e5c5215a63eb9b4b8f6c3c7bd8",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/bugpoint/Makefile" : {
      "ObjectId" : "20493218b0646df24cd30676b972e611696e408a",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/bugpoint/Makefile -----------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/CMakeLists.txt" : {
      "ObjectId" : "c5c5db018f2a9c1ed1635f9c41d0e617ebd8853f",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are not building as a part of LLVM, build Clang as an\n\n# standalone project, using LLVM as an external library:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Looking for bin/Debug/llvm-tblgen is a complete hack. How can we get\n\n# around this?\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# FIXME: This is an utter hack.\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Define the default arguments to use with 'lit', and an option for the user\n\n# to override.\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Compute the Clang version from the LLVM version.\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Configure the Version.inc file.\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add appropriate flags for GCC\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Syntax:\n\n# clang_tablegen output-file [tablegen-arg ...] SOURCE source-file\n\n# [[TARGET cmake-target-name] [DEPENDS extra-dependency ...]]\n\n#\n\n# Generates a custom command for invoking tblgen as\n\n#\n\n# tblgen source-file -o=output-file tablegen-arg ...\n\n#\n\n# and, if cmake-target-name is provided, creates a custom target for\n\n# executing the custom command depending on output-file. It is\n\n# possible to list more files to depend after DEPENDS.\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Add public headers\n",
        "Line" : 190,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# FIXME: They should be options.\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Clang version information\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# TODO: docs.\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Workaround for MSVS10 to avoid the Dialog Hell\n\n# FIXME: This could be removed with future version of CMake.\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "interpreter/llvm/src/tools/clang/Makefile" : {
      "ObjectId" : "8867b973dd5c0d03886f53b242e163e0c466a2d3",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- Makefile --------------------------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If CLANG_LEVEL is not set, then we are the top-level Makefile. Otherwise, we\n\n# are being included from a subdirectory makefile.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Common Makefile code, shared by all Clang Makefiles.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set LLVM source root level.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Include LLVM common makefile.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set common Clang build flags.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# work with it enabled with GCC), Clang/llvm-gcc don't support it yet, and newer\n\n# GCC's have false positive warnings with it on Linux (which prove a pain to\n\n# fix). For example:\n\n#   http://gcc.gnu.org/PR41874\n\n#   http://gcc.gnu.org/PR41838\n\n#\n\n# We can revisit this when LLVM/Clang support it.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Set up Clang's tblgen.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###\n\n# Clang Top Level specific stuff.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "interpreter/llvm/src/tools/clang/docs/Makefile" : {
      "ObjectId" : "2608046f1f85a1b2e0e3a2a62b71e862e54299b8",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- docs/Makefile ---------------------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#IMAGES     := $(wildcard $(PROJ_SRC_DIR)/img/*.*)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Live documentation is generated for the web site using this target:\n\n# 'make generated BUILD_FOR_WEBSITE=1'\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\t$(Verb) $(DataInstall) $(IMAGES) $(DESTDIR)$(PROJ_docsdir)/html/img\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "interpreter/llvm/src/tools/clang/docs/analyzer/Makefile" : {
      "ObjectId" : "14f5e60246de9f26b44df0fe19c926770e2b2821",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "interpreter/llvm/src/tools/clang/docs/tools/Makefile" : {
      "ObjectId" : "5521d6b764c961f8eef983b7b84eb212666e472f",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- docs/tools/Makefile ---------------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FIXME: This was copied from the CommandGuide makefile. Figure out\n\n# how to get this stuff on the website.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This special case is for keeping the CommandGuide on the LLVM web site\n\n# up to date automatically as the documents are checked in. It must build\n\n# the POD files to HTML only and keep them in the src directories. It must also\n\n# build in an unconfigured tree, hence the ifdef. To use this, run\n\n# make -s BUILD_FOR_WEBSITE=1 inside the cvs commit script.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If we are in BUILD_FOR_WEBSITE mode, default to the all target.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# To create other directories, as needed, and timestamp their creation\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Otherwise, if not in BUILD_FOR_WEBSITE mode, use the project info.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "interpreter/llvm/src/tools/clang/examples/CMakeLists.txt" : {
      "ObjectId" : "84a5d2cecbe4e1e32b7cf41717caadd6a2717d5b",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/examples/Makefile" : {
      "ObjectId" : "d8d902874ae0a5eba87a3591d8ca04040cf355dc",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- examples/Makefile -----------------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/examples/PrintFunctionNames/CMakeLists.txt" : {
      "ObjectId" : "ba6a350cd95403ce5ced275ef89bb82bfaf25a93",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/examples/PrintFunctionNames/Makefile" : {
      "ObjectId" : "23a53054019d126efc3a4ed71fbe59a6f5d1b5f6",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- examples/PrintFunctionNames/Makefile ----------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If we don't need RTTI or EH, there's no reason to export anything\n\n# from the plugin.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/clang/examples/analyzer-plugin/CMakeLists.txt" : {
      "ObjectId" : "ba73030cc37b65a0072868e4343277ef8496279f",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/examples/analyzer-plugin/Makefile" : {
      "ObjectId" : "8b83bef9245a53ea7b3a9c84adfd79a3173129e4",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- examples/analyzer-plugin/Makefile -------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/examples/clang-interpreter/CMakeLists.txt" : {
      "ObjectId" : "451b4b8672224002d8c1c8b4a6a209946a832a01",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/examples/clang-interpreter/Makefile" : {
      "ObjectId" : "0c4d35c8ebd2cc15c4319d21ad83a3af59b378df",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- examples/clang-interpreter/Makefile -----------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# No plugins, optimize startup time.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/clang/include/CMakeLists.txt" : {
      "ObjectId" : "253a09b1012fbb1ed22808a79989363e2a2c6aa8",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/include/Makefile" : {
      "ObjectId" : "79b9adfb7282cac0db644220a017031b6f0a9487",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/include/clang-c/Makefile" : {
      "ObjectId" : "b29e29ea1ef8e3481f2527bb9d2dc9786369fccd",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/include/clang/AST/CMakeLists.txt" : {
      "ObjectId" : "ba54fa2aa92b2415be1e8db4e384cd43d74ee904",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/include/clang/AST/Makefile" : {
      "ObjectId" : "ae84bcfd58175e8dd818a613492d86a14696394e",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/include/clang/Basic/CMakeLists.txt" : {
      "ObjectId" : "274b94da8eda144b9597e7181aaaba05cccbdb59",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ARM NEON\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/include/clang/Basic/Makefile" : {
      "ObjectId" : "6a3313325216fbabaf314c32004fda1a5aa5950a",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Compute the Clang version from the LLVM version, unless specified explicitly.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/include/clang/CMakeLists.txt" : {
      "ObjectId" : "71c37fda7891ca5cfafc9f8b22b572f4b25aeb14",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/include/clang/Config/config.h.cmake" : {
      "ObjectId" : "c18c4cc86f765b75800c7a621d145309cee70306",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* Bug report URL. */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* Relative directory for resource files */",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Directories clang will search for headers */",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* Default <path> to all compiler invocations for --sysroot=<path>. */",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Directory where gcc is installed. */",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "interpreter/llvm/src/tools/clang/include/clang/Driver/CMakeLists.txt" : {
      "ObjectId" : "1277d51edb82c69d1b9e5d357346d383d0a01bc4",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/include/clang/Driver/Makefile" : {
      "ObjectId" : "7d066c77b377deff5acefcae7e0b7d7e5e1dd831",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/include/clang/Lex/CMakeLists.txt" : {
      "ObjectId" : "38055ebb64dd4e420fd3075115151aae8d0ad524",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/include/clang/Lex/Makefile" : {
      "ObjectId" : "762b9a2587582c0b3fda2a14cd9ad6804b393139",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/include/clang/Makefile" : {
      "ObjectId" : "5f2077d2f04159f33c44f982c3da5780e6568e6a",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/include/clang/Parse/CMakeLists.txt" : {
      "ObjectId" : "d1ff2abfee66ab4cd68016cd2315618e0a8aec51",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/include/clang/Parse/Makefile" : {
      "ObjectId" : "296892c5b6edfd024ac44af841e544106d877667",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/include/clang/Sema/CMakeLists.txt" : {
      "ObjectId" : "6b5d222b5d562aaa43afd5459c16f7bd7a421c51",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/include/clang/Sema/Makefile" : {
      "ObjectId" : "7d658a7c11ef360bae7956171401d74faebfefff",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/include/clang/Serialization/CMakeLists.txt" : {
      "ObjectId" : "d91513da99979d5a6b8e55e4d6759a86c0f5d5b1",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/include/clang/Serialization/Makefile" : {
      "ObjectId" : "386f453761750aaf4362e7e7160aca4090b48e4b",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/lib/ARCMigrate/CMakeLists.txt" : {
      "ObjectId" : "da51d6db83b8ec35a604671b5213d37fa6985ce2",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/lib/ARCMigrate/Makefile" : {
      "ObjectId" : "5232c5e5aff4000903801ee6ccd25a22be0bf566",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- clang/lib/ARCMigrate/Makefile --------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n\n#\n\n# This implements code transformation to ARC mode.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/lib/AST/CMakeLists.txt" : {
      "ObjectId" : "e804fe7205582972a0cdfdf9a0db9511f53aa42c",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/lib/AST/Makefile" : {
      "ObjectId" : "65383c5552d41765c901755ec3acad0cf6df6e69",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- clang/lib/AST/Makefile ------------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n\n#\n\n#  This implements the AST library for the C-Language front-end.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/lib/ASTMatchers/CMakeLists.txt" : {
      "ObjectId" : "86560d61c9d31f6e64027157ffc133108b9a2718",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/lib/ASTMatchers/Makefile" : {
      "ObjectId" : "76d82719a103c337dfb6ec579050128c318485b8",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- clang/lib/ASTMatchers/Makefile ----------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/lib/Analysis/CMakeLists.txt" : {
      "ObjectId" : "ca166669fc89dd8d2991196248ee1f4d87dba896",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/lib/Analysis/Makefile" : {
      "ObjectId" : "fbbb83d7100348dfda3e7a7335f0573239fffaa5",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- clang/lib/Analysis/Makefile -------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n\n#\n\n# This implements analyses built on top of source-level CFGs. \n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/lib/Basic/CMakeLists.txt" : {
      "ObjectId" : "34111691c82e6dc1f5df7c7fcaa0a75377681ab4",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Determine Subversion revision.\n\n# FIXME: This only gets updated when CMake is run, so this revision number\n\n# may be out-of-date!\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# See PR 8437\n",
        "Line" : 28,
        "CharPositionInLine" : 44
      },
      "2" : {
        "Text" : "# Create custom target to generate the Subversion version include.\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Mark the generated header as being generated.\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Tell Version.cpp that it needs to build with -DHAVE_SVN_VERSION_INC.\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# clangBasic depends on the version.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "interpreter/llvm/src/tools/clang/lib/Basic/Makefile" : {
      "ObjectId" : "fe2c515622751c023d0b7bf869491a4b47690dcc",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- clang/lib/Basic/Makefile ----------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n\n#\n\n#  This implements the Basic library for the C-Language front-end.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/lib/CMakeLists.txt" : {
      "ObjectId" : "053320ced1d085e7e0459f6c1deb564847c2b420",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/lib/CodeGen/CMakeLists.txt" : {
      "ObjectId" : "9ca2295a9229e0b494ccc1c45a44697df8173ac1",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/lib/CodeGen/Makefile" : {
      "ObjectId" : "6032dffec1a5be60116a394c842d736799340a98",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- clang/lib/CodeGen/Makefile --------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n\n#\n\n# This implements the AST -> LLVM code generation library for the \n\n# C-Language front-end.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/lib/Driver/CMakeLists.txt" : {
      "ObjectId" : "4ada7d92c3d12dc1d1291a6379742bc1c59456ac",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/lib/Driver/Makefile" : {
      "ObjectId" : "454ab8626c2ca1e2cd41817189e41f82adfdc19b",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- clang/lib/Driver/Makefile ---------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/lib/Edit/CMakeLists.txt" : {
      "ObjectId" : "cce1c197ae5051ede5db61cab124f1fb26828b3f",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/lib/Edit/Makefile" : {
      "ObjectId" : "92a67ebc8291979f55a1fe49540f1a579af85655",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- clang/lib/Edit/Makefile -----------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/lib/Format/CMakeLists.txt" : {
      "ObjectId" : "d8630eeeead3cd828ad30a06ebbfcfd055994fd3",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/lib/Format/Makefile" : {
      "ObjectId" : "f4d2b985b12eefcdb21a1109c043f69908e9560a",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- clang/lib/Format/Makefile ---------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/lib/Frontend/CMakeLists.txt" : {
      "ObjectId" : "0566d54f36a72cf5ab56e3c362c28bd3b99b25a7",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/lib/Frontend/Makefile" : {
      "ObjectId" : "3c13ad69cc678e9a9600537b17400c1e06a3ed32",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- clang/lib/Frontend/Makefile -------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/lib/FrontendTool/CMakeLists.txt" : {
      "ObjectId" : "176511b0e4c8280eb7b623e66d6944e1386d10ec",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/lib/FrontendTool/Makefile" : {
      "ObjectId" : "9ce4b767fe586df7d58ba271bb3506b49f711f37",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- clang/lib/FrontendTool/Makefile ---------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/lib/Headers/CMakeLists.txt" : {
      "ObjectId" : "5e727a7b2e27721813b8013be7d6285df155a800",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we are in an IDE that has a configuration directory, we need to\n\n# create a second copy of the headers so that 'clang' can find them if\n\n# it's run from the build directory.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generate arm_neon.h\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/clang/lib/Headers/Makefile" : {
      "ObjectId" : "42219c4082be839fb08817d107464d49d4778ddc",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- clang/lib/Headers/Makefile --------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hook into the standard Makefile rules.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/clang/lib/Lex/CMakeLists.txt" : {
      "ObjectId" : "2ee468294ae74270b3187872f683593e0b609ad8",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: Add -maltivec when ARCH is PowerPC.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/lib/Lex/Makefile" : {
      "ObjectId" : "d80fb55c78a7c69967f6bc6020a2cd1f705a384a",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- clang/lib/Lex/Makefile ------------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n\n#\n\n#  This implements the Lexer library for the C-Language front-end.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/lib/Makefile" : {
      "ObjectId" : "2e32dfec35a4a7c907cdb5e0c7806bb2e922c69d",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- lib/Makefile ----------------------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ARCMigrate and Rewrite are always needed because of libclang.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/clang/lib/Parse/CMakeLists.txt" : {
      "ObjectId" : "939998ecb1af939509c58888b74784842f783fc1",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/lib/Parse/Makefile" : {
      "ObjectId" : "666a64dd09543350dc0e440d9b91c981ee1eb3d4",
      "LastModified" : "2013-04-26T11:45:17Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- clang/lib/Parse/Makefile ----------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n\n#\n\n#  This implements the Parser library for the C-Language front-end.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To find moved RAIIObjectsForParser.h\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/clang/lib/Rewrite/CMakeLists.txt" : {
      "ObjectId" : "d3d75430233fe70c727c512085af3e24f9e816d8",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/lib/Rewrite/Core/CMakeLists.txt" : {
      "ObjectId" : "07978187ff190f56c8aa7e9cb069ad48ca79be74",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/lib/Rewrite/Core/Makefile" : {
      "ObjectId" : "8c8d2e47813544052ed81c4488b0161930f45143",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- clang/lib/Rewrite/Makefile --------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n\n#\n\n# This implements code transformation / rewriting facilities.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/lib/Rewrite/Frontend/CMakeLists.txt" : {
      "ObjectId" : "903a3ef8d50d45aa932adc861e661a3daf7f7cd4",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/lib/Rewrite/Frontend/Makefile" : {
      "ObjectId" : "ac97d4074ecbc832c811bbfdca0e0d0e05750990",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- clang/lib/Rewrite/Makefile --------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n\n#\n\n# This implements code transformation / rewriting facilities.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/lib/Rewrite/Makefile" : {
      "ObjectId" : "0be84d406405b33a90630f5d453167fc3f72e6de",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- clang/lib/StaticAnalyzer/Makefile -------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/lib/Sema/CMakeLists.txt" : {
      "ObjectId" : "e92f76713422cbc506d8c701456940a092e335e6",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/lib/Sema/Makefile" : {
      "ObjectId" : "2c02739d268f45bbe4ec26546b0a9c467a0be5ab",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- clang/lib/Sema/Makefile -----------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n\n#\n\n#  This implements the semantic analyzer and AST builder library for the \n\n#  C-Language front-end.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/lib/Serialization/CMakeLists.txt" : {
      "ObjectId" : "3c68b64625e998c1cf043f8ac556094915f82c6b",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/lib/Serialization/Makefile" : {
      "ObjectId" : "e89ddc38ec9413a2aac318b9b5612c8846eb9a2f",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- clang/lib/Serialization/Makefile --------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n\n#\n\n#  This implements the semantic analyzer and AST builder library for the \n\n#  C-Language front-end.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/lib/StaticAnalyzer/CMakeLists.txt" : {
      "ObjectId" : "3d1509254f52ff5f442a091cd462be57b6760c65",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/lib/StaticAnalyzer/Checkers/CMakeLists.txt" : {
      "ObjectId" : "b7df10e7ffbe8c2d5870d3920cc60ddbb48655ef",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/lib/StaticAnalyzer/Checkers/Makefile" : {
      "ObjectId" : "2582908b95d00507e58841f176da4c8a6ed13e50",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- clang/lib/Checker/Makefile --------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n\n#\n\n# This implements analyses built on top of source-level CFGs. \n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/lib/StaticAnalyzer/Core/CMakeLists.txt" : {
      "ObjectId" : "91f15b31da637c4c8cba5c07b9e27213a177c29b",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/lib/StaticAnalyzer/Core/Makefile" : {
      "ObjectId" : "4aebc163dddc2e5d5cd161de1473f11443a6de4c",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- clang/lib/StaticAnalyzer/Core/Makefile --------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n\n#\n\n# This implements analyses built on top of source-level CFGs. \n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/lib/StaticAnalyzer/Frontend/CMakeLists.txt" : {
      "ObjectId" : "aafb249c587f746cdcd82dc62e18a2bc33b1b188",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/lib/StaticAnalyzer/Frontend/Makefile" : {
      "ObjectId" : "2698120d9098de092b8e43bead31afec453fb7da",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- clang/lib/StaticAnalyzer/Frontend/Makefile ----------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n\n#\n\n# Starting point into the static analyzer land for the driver.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/lib/StaticAnalyzer/Makefile" : {
      "ObjectId" : "c166f063f9259191bed360615c0be771a39ee150",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- clang/lib/StaticAnalyzer/Makefile -------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n\n#\n\n# This implements analyses built on top of source-level CFGs. \n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/lib/Tooling/CMakeLists.txt" : {
      "ObjectId" : "d29e564e34fe819944a394321a8b11c63db9b7cb",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/lib/Tooling/Makefile" : {
      "ObjectId" : "0d2e7a29bcf96ef7e47d31650e6c39d8b547d661",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- clang/lib/Tooling/Makefile ---------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/runtime/CMakeLists.txt" : {
      "ObjectId" : "68ee266ecae92ab5337ac8a30e4ac2d3c71bc1e6",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: Set the install directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/runtime/Makefile" : {
      "ObjectId" : "4b0625d4b612c5e475763d1a35dc4dd845b091eb",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- runtime/Makefile ------------------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/runtime/compiler-rt/Makefile" : {
      "ObjectId" : "e946de21a1dcf549ce661881a9b2c2d1e6d803be",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- clang/runtime/compiler-rt/Makefile ------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n\n#\n\n# This file defines support for building the Clang runtime libraries (which are\n\n# implemented by compiler-rt) and placing them in the proper locations in the\n\n# Clang resources directory (i.e., where the driver expects them).\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Expect compiler-rt to be in llvm/projects/compiler-rt\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We don't currently support building runtime libraries when we are\n\n# cross-compiling. The issue is that we really want to be set up so that the\n\n# available compiler targets are independent of the current build.\n\n#\n\n# Since we have to build the runtime libraries for the target, it requires we\n\n# have a cross compiler from the build machine to the target. Although in the\n\n# case where for the current build (host == target), we do have such a cross\n\n# compiler, but not defined in a way that is easy for us to reuse. Regardless,\n\n# that also wouldn't help for other possible compiler configurations.\n\n#\n\n# Thus, the simple set up we currently use is to assume that we will be using\n\n# the just built Clang to compile the compiler-rt libraries. As we grow better\n\n# cross compilation support inside Clang and tool support in LLVM, this makes it\n\n# easier for us to achieve the goal of having the compiler targets be easily\n\n# selected at configure time. However, this design does currently preclude the\n\n# building of compiler-rt libraries when the Clang itself is being cross\n\n# compiled.\n\n#\n\n# There are three possible solutions:\n\n#  1. Require building a build-target version of Clang when cross compiling. This\n\n#     is simplest, but als greatly increases the build time of cross builds.\n\n#\n\n#  2. Require cross builds have a build-target version of Clang available for\n\n#     use. This is a reasonable compromise on #1, as the compiler-rt libraries\n\n#     are simple enough that there is not a strong desire to ensure they are\n\n#     built with the exact version of Clang being used. Similarly, as Clang\n\n#     becomes a better cross compiler it is also increasingly more likely that\n\n#     the cross compiler being used will already be a version of Clang.\n\n#\n\n#  3. Come up with an alternate mechanism to define all the toolchain\n\n#     information that compiler-rt would need to build libraries for all the\n\n#     requested targets. This might be a simple short term solution, but is\n\n#     likely to be unwieldly and irritating to maintain in the long term.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Select the compiler-rt configuration to use, and install directory.\n\n#\n\n# FIXME: Eventually, we want some kind of configure support for this. We want to\n\n# build/install runtime libraries for as many targets as clang was configured to\n\n# support.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# On Linux, include a library which has all the runtime functions.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# TryCompile compiler source flags\n\n# Returns exit code of running a compiler invocation.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# We currently only try to generate runtime libraries on x86.\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# We need to build 32-bit ASan/UBsan libraries on 64-bit platform, and add them\n\n# to the list of runtime libraries to make\n\n# \"clang -fsanitize=(address|undefined) -m32\" work.\n\n# We check that Clang can produce working 32-bit binaries by compiling a simple\n\n# executable.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "####\n\n# The build rules below are designed to be generic and should only need to be\n\n# modified based on changes in the compiler-rt layout or build system.\n\n####\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Rule to build the compiler-rt libraries we need.\n\n#\n\n# We build all the libraries in a single shot to avoid recursive make as much as\n\n# possible.\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Expand rules for copying/installing each individual library. We can't use\n\n# implicit rules here because we need to match against multiple things.\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Rule to copy the libraries to their resource directory location.\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Rule to install runtime libraries.\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Hook into the standard Makefile rules.\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "interpreter/llvm/src/tools/clang/runtime/libcxx/Makefile" : {
      "ObjectId" : "42322dc8a3ada7bca5cd541c489eec04191e11f9",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- clang/runtime/libcxx/Makefile -----------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n\n#\n\n# This file defines support for installing a copy of the libcxx headers where\n\n# the driver expects them.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Expect libcxx to be in llvm/projects/libcxx\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/clang/tools/CMakeLists.txt" : {
      "ObjectId" : "eb5e366cfd717be9a6ceff160cb04c413bf6057b",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We support checking out the clang-tools-extra repository into the 'extra'\n\n# subdirectory. It contains tools developed as part of the Clang/LLVM project\n\n# on top of the Clang tooling platform. We keep them in a separate repository\n\n# to keep the primary Clang repository small and focused.\n\n# It also may be included by LLVM_EXTERNAL_CLANG_TOOLS_EXTRA_SOURCE_DIR.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/tools/Makefile" : {
      "ObjectId" : "39fbde81819f45c80aaef09094622280dab91411",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/Makefile --------------------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Recurse into the extra repository of tools if present.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/clang/tools/arcmt-test/CMakeLists.txt" : {
      "ObjectId" : "3d85d05af5454c933e464ab5d87949c8013f5b97",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/tools/arcmt-test/Makefile" : {
      "ObjectId" : "52898ceab7e21f87298497b8fc3ae2c9051f085e",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/arcmt-test/Makefile ---------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# No plugins, optimize startup time.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Don't install this. It is used for tests.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "interpreter/llvm/src/tools/clang/tools/c-arcmt-test/CMakeLists.txt" : {
      "ObjectId" : "1e72261b2192affdad8a200d281f839c904667f9",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/tools/c-arcmt-test/Makefile" : {
      "ObjectId" : "02b8ab7bd6870ca208f945e3660d9ba4703c849c",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/c-arcmt-test/Makefile -------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# No plugins, optimize startup time.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Don't install this. It is used for tests.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include this here so we can get the configuration of the targets that have\n\n# been configured for construction. We have to do this early so we can set up\n\n# LINK_COMPONENTS before including Makefile.rules\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Note that 'USEDLIBS' must include all of the core clang libraries\n\n# when -static is given to linker on cygming.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "interpreter/llvm/src/tools/clang/tools/c-index-test/CMakeLists.txt" : {
      "ObjectId" : "d90dc6d95c3a53af0817a841dac8de4ee182683d",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If libxml2 is available, make it available for c-index-test.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/tools/c-index-test/Makefile" : {
      "ObjectId" : "7723115263ee8b63c81e043b8806b6a5684bfe10",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/index-test/Makefile ---------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If a separate install prefix was specified for internal tools, use it\n\n# when installing c-index-test.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# No plugins, optimize startup time.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include this here so we can get the configuration of the targets that have\n\n# been configured for construction. We have to do this early so we can set up\n\n# LINK_COMPONENTS before including Makefile.rules\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Note that 'USEDLIBS' must include all of the core clang libraries\n\n# when -static is given to linker on cygming.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "interpreter/llvm/src/tools/clang/tools/clang-check/CMakeLists.txt" : {
      "ObjectId" : "e8d0d0a18abd4f17ca00e3e1433944d336e9913a",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/tools/clang-check/Makefile" : {
      "ObjectId" : "7d6505edc1144d4153938ce33f3bb13f5ee1247f",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/clang-check/Makefile --------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# No plugins, optimize startup time.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/clang/tools/clang-format/CMakeLists.txt" : {
      "ObjectId" : "c86a920841c6261130a8b0d76c1097581fcfa122",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/tools/clang-format/Makefile" : {
      "ObjectId" : "d869267a76f6bc1dc774b803e45ede807c0106dd",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- clang-format/Makefile -------------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# No plugins, optimize startup time.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/clang/tools/diagtool/CMakeLists.txt" : {
      "ObjectId" : "8aa2d21d62553be5e8d465d84d4601c599dacc35",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/tools/diagtool/Makefile" : {
      "ObjectId" : "94f9c7663add67b6827b47e55c991522296e7609",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/diagtool/Makefile -----------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# No plugins, optimize startup time.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Don't install this.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "interpreter/llvm/src/tools/clang/tools/driver/CMakeLists.txt" : {
      "ObjectId" : "97ac7a46c1940d1b97daa73ca81ea906d1bd85d1",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create a relative symlink\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create the clang++ symlink in the build directory.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create the clang++ symlink at installation time.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "interpreter/llvm/src/tools/clang/tools/driver/Makefile" : {
      "ObjectId" : "cdf3b5248c312e51d2663fd75779deacca7f353f",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/driver/Makefile -------------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We don't currently expect production Clang builds to be interested in\n\n# plugins. This is important for startup performance.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include tool version information on OS X.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include this here so we can get the configuration of the targets that have\n\n# been configured for construction. We have to do this early so we can set up\n\n# LINK_COMPONENTS before including Makefile.rules\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set the tool version information values.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "interpreter/llvm/src/tools/clang/tools/driver/clang_symlink.cmake" : {
      "ObjectId" : "c7341cb2fa613ad4155e97386ffbbf7e4b5dfa8e",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We need to execute this script at installation time because the\n\n# DESTDIR environment variable may be unset at configuration time.\n\n# See PR8397.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMAKE_EXECUTABLE_SUFFIX is undefined on cmake scripts. See PR9286.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/clang/tools/libclang/CMakeLists.txt" : {
      "ObjectId" : "c5a975b637607840fd03433b26595c36fbcff9d1",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/tools/libclang/Makefile" : {
      "ObjectId" : "f33f345f94f7bbf44483cdefbc46d5426f12c224",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/libclang/Makefile -----------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add soname to the library.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##===----------------------------------------------------------------------===##\n\n# FIXME: This is copied from the 'lto' makefile.  Should we share this?\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set dylib internal version number to submission number.\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Extra options to override libtool defaults.\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Mac OS X 10.4 and earlier tools do not allow a second -install_name on command line\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# If we're doing an Apple-style build, add the LTO object path.\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7,
      "Errorlog" : "line 53:79 token recognition error at: '\\1'\n"
    },
    "interpreter/llvm/src/tools/clang/unittests/Format/CMakeLists.txt" : {
      "ObjectId" : "16d5764faa921ee0536dae6cee2d194240b2f44f",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/unittests/Format/Makefile" : {
      "ObjectId" : "e9d0cbbbb4f608daf44f593387473930638f1f7f",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- unittests/Format/Makefile ---------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/unittests/Makefile" : {
      "ObjectId" : "0ed420d8986a9e8336b073fe399401297b63e9b2",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/utils/ABITest/layout/Makefile" : {
      "ObjectId" : "0520625fcf29f850a47fe9e095adfabd2ced6810",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Usage: make test.N.report \n\n#\n\n# COUNT can be over-ridden to change the number of tests generated per\n\n# file, and TESTARGS is used to change the type generation. Make sure\n\n# to 'make clean' after changing either of these parameters.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/clang/utils/ABITest/return-types-32/Makefile" : {
      "ObjectId" : "df1c53f1a16685ef1e8c5a9c54e1847030cde915",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/utils/ABITest/return-types-64/Makefile" : {
      "ObjectId" : "9616e45cba949cfbdfa6a6c5d3cc70ed1e06bca2",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/utils/ABITest/single-args-32/Makefile" : {
      "ObjectId" : "9ff417fc29e592d5448b669262b9e83bd66c1642",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/utils/ABITest/single-args-64/Makefile" : {
      "ObjectId" : "b8acb70c1354dd00f2a33a964637480e8486e3e9",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Usage: make test.N.report \n\n#\n\n# COUNT can be over-ridden to change the number of tests generated per\n\n# file, and TESTARGS is used to change the type generation. Make sure\n\n# to 'make clean' after changing either of these parameters.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/clang/utils/TableGen/CMakeLists.txt" : {
      "ObjectId" : "a858a214b03d9fbfd96b638243b362dc2743243b",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/clang/utils/TableGen/Makefile" : {
      "ObjectId" : "1fde852ebc47074c9c38696c1fab0728a26ecfe7",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- utils/TableGen/Makefile -----------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/clang/utils/VtableTest/Makefile" : {
      "ObjectId" : "dd615aef6a921ff3120f206bd329a398e1a92fa3",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/gold/CMakeLists.txt" : {
      "ObjectId" : "2cc132ff78e4019d126c448b261b1ccbeb30d7ec",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Nothing to say.\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Because off_t is used in the public API, the largefile parts are required for\n\n# ABI compatibility.\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Makefile.rules contains a special cases for OpenBSD, Darwin and\n\n# Windows. We restrict ourselves to Linux for the time being.\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Force re-linking when the exports file changes. Actually, it\n\n# forces recompilation of gold-plugin.cpp. The LINK_DEPENDS target\n\n# property only works for makefile-based generators.\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "interpreter/llvm/src/tools/gold/Makefile" : {
      "ObjectId" : "496e31cc391acef9621fdd44f8be8bdd5151c05f",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#===- tools/gold/Makefile ----------------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include this here so we can get the configuration of the targets\n\n# that have been configured for construction. We have to do this \n\n# early so we can set up LINK_COMPONENTS before including Makefile.rules\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Because off_t is used in the public API, the largefile parts are required for\n\n# ABI compatibility.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "interpreter/llvm/src/tools/llc/CMakeLists.txt" : {
      "ObjectId" : "e5a5550e9ea6bd60fc5052c202e29bc5f2ce27ff",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/llc/Makefile" : {
      "ObjectId" : "c24f378bc53891d2c94be103d6c06e5bbf868c71",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#===- tools/llc/Makefile -----------------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/lli/CMakeLists.txt" : {
      "ObjectId" : "aaa6598e7118a005352edafd8afa338142c7827a",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/lli/Makefile" : {
      "ObjectId" : "a6530584a2e9c33b4799cb789d410f5c03199ebf",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/lli/Makefile ------------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If Intel JIT Events support is confiured, link against the LLVM Intel JIT\n\n# Events interface library\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If oprofile support is confiured, link against the LLVM oprofile interface\n\n# library\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "interpreter/llvm/src/tools/llvm-ar/CMakeLists.txt" : {
      "ObjectId" : "70eb7603fdc60e700f56d6614ee7ed362f41b93c",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: Support check-local.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/llvm-ar/Makefile" : {
      "ObjectId" : "fafb14bc12a1705bf73be69b2ff52329c96c715b",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/llvm-ar/Makefile ------------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/llvm-as/CMakeLists.txt" : {
      "ObjectId" : "d5620e72971b8fb8f162c3357327356e41065384",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/llvm-as/Makefile" : {
      "ObjectId" : "dfd71b295a9a81f4fb64ae76e3f8b9c7189c351b",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/llvm-as/Makefile ------------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/llvm-bcanalyzer/CMakeLists.txt" : {
      "ObjectId" : "0151ea9b4f6568a6b9fadca0d57d2e54d0961577",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/llvm-bcanalyzer/Makefile" : {
      "ObjectId" : "2fc61dbd62a7d5b8927e965c0e8c310f6e038399",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/llvm-bcanalyzer/Makefile ----------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/llvm-config/CMakeLists.txt" : {
      "ObjectId" : "5ad58bf9df47b2bd62d3a66266472ed48795af09",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We need to generate the BuildVariables.inc file containing values which are\n\n# only defined when under certain build modes. Unfortunately, that precludes\n\n# doing this inside CMake so we have to shell out to sed. For now, that means we\n\n# can't expect to build llvm-config on Window.s\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compute the substitution values for various items.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: Use general flags for linking! not just for shared libs:\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Add the llvm-config tool.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add the dependency on the generation step.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "interpreter/llvm/src/tools/llvm-config/Makefile" : {
      "ObjectId" : "b20b6bf4a4bec174c7c93dea9963e616571648a7",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/llvm-config/Makefile---------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We generate sources in the build directory, make sure it is in the include\n\n# paths.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Note that we have to use lazy expansion here.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Combine preprocessor flags (except for -I) and CXX flags.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This is blank for now.  We need to be careful about adding stuff here:\n\n# LDFLAGS tend not to be portable, and we don't currently require the\n\n# user to use libtool when linking against LLVM.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# When cross-compiling, install a version of llvm-config that runs on the host.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "interpreter/llvm/src/tools/llvm-cov/CMakeLists.txt" : {
      "ObjectId" : "7184b9ebde937f793291e91fd683ef66ab1930a2",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/llvm-cov/Makefile" : {
      "ObjectId" : "2d47ce4d4b65a9c3cc5c7ddc9356fcc056350c7a",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/llvm-cov/Makefile -----------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/llvm-diff/CMakeLists.txt" : {
      "ObjectId" : "0df8b9ed79e21d2e600ecac7719000e1bafd6795",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/llvm-diff/Makefile" : {
      "ObjectId" : "bd97a6a9f5e92cb60a1daf9691008f4eeb95c059",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/llvm-diff/Makefile ----------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/llvm-dis/CMakeLists.txt" : {
      "ObjectId" : "9f12ecb66641d1f4fb237c41fb892b0a7633339d",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/llvm-dis/Makefile" : {
      "ObjectId" : "aeeeed0d68c9f94a9fae1cc835b37803ad375934",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/llvm-dis/Makefile ------------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/llvm-dwarfdump/CMakeLists.txt" : {
      "ObjectId" : "05aad3f0b05b3cc94e290f5d1c4e4eb9601ebb52",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/llvm-dwarfdump/Makefile" : {
      "ObjectId" : "7ca1a8d877d028a31a5fd54c16b5e3539e6bd77b",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/llvm-dwarfdump/Makefile -----------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/llvm-extract/CMakeLists.txt" : {
      "ObjectId" : "3163c4bbbddb28a35f1be91322bec7a25b9a0f1d",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/llvm-extract/Makefile" : {
      "ObjectId" : "d371c54759263a83a244cf40dd2e9a2b4691339a",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/llvm-extract/Makefile -------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/llvm-jitlistener/CMakeLists.txt" : {
      "ObjectId" : "5d1245964cfebeea99bb03a3f8f27807175fa6e3",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This tool is excluded from the CMake build if Intel JIT events are disabled.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/llvm-jitlistener/Makefile" : {
      "ObjectId" : "328aab6c0aec206d74a6e55acb4a2949b73903c9",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/llvm-jitlistener/Makefile ---------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If Intel JIT Events support is configured, link against the LLVM Intel JIT\n\n# Events interface library.  If not, this tool will do nothing useful, but it\n\n# will build correctly.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "interpreter/llvm/src/tools/llvm-link/CMakeLists.txt" : {
      "ObjectId" : "4df53564e182d6e0f314f00fed871c3135153742",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/llvm-link/Makefile" : {
      "ObjectId" : "ed30d2d256b8eb2aab05893b7eced6c90536f7d5",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/llvm-link/Makefile ----------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/llvm-mc/CMakeLists.txt" : {
      "ObjectId" : "805caf403a19e668bc9c2bb648a2cf38bc17ce32",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/llvm-mc/Makefile" : {
      "ObjectId" : "b147fadb5747b956122cf9b8bdf5bc3ef0fdbec8",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/llvm-mc/Makefile ------------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/llvm-mcmarkup/CMakeLists.txt" : {
      "ObjectId" : "0a51e99f1953e70205321e81eb06f320a05e7ef6",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/llvm-mcmarkup/Makefile" : {
      "ObjectId" : "5633a9c301a3b8346d16b4ddaaa873f0c3fb6bdf",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/llvm-mcmarkup/Makefile ------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/llvm-nm/CMakeLists.txt" : {
      "ObjectId" : "b6cd80b477a996bdc4c8cdf5b125c9a1100adb89",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/llvm-nm/Makefile" : {
      "ObjectId" : "d9cee989950dbabeb59a427022476c69ab7ba93b",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/llvm-nm/Makefile ------------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/llvm-objdump/CMakeLists.txt" : {
      "ObjectId" : "0c49d0b457f2f0b1179389a9c2e58d73e95f2881",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/llvm-objdump/Makefile" : {
      "ObjectId" : "4616b78adb2ee1e55539c65bfc59fd4254af36f4",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/llvm-objdump/Makefile -------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/llvm-prof/CMakeLists.txt" : {
      "ObjectId" : "442112bc88ed5dc0a3f2fae1884d118d8f323003",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/llvm-prof/Makefile" : {
      "ObjectId" : "f8297867652c036b3093044fbe0701648848d508",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/llvm-prof/Makefile ----------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/llvm-ranlib/CMakeLists.txt" : {
      "ObjectId" : "2d7defee11f3a7569a4cfda299e1bb15bf88ed76",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/llvm-ranlib/Makefile" : {
      "ObjectId" : "cca95013f486bbc859ccab431747096d406cda74",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/llvm-ranlib/Makefile --------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/llvm-readobj/CMakeLists.txt" : {
      "ObjectId" : "3d20def8f51c181344ef9092e7ed591acf5dd4f2",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/llvm-readobj/Makefile" : {
      "ObjectId" : "1bb72955f08f753922d3536a7ca6fcc4320f2702",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/llvm-readobj/Makefile -----------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/llvm-rtdyld/CMakeLists.txt" : {
      "ObjectId" : "8d161d366da7d83074c44cda4ebc0d5d3e42dc97",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/llvm-rtdyld/Makefile" : {
      "ObjectId" : "fabdd683a99774c6e74eb015241399917bd6e3f3",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/llvm-rtdyld/Makefile --------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/llvm-shlib/Makefile" : {
      "ObjectId" : "6d6c6e9f14be50aca9b9bfc097921ed04f760d21",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/shlib/Makefile --------------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# It is needed to force static-stdc++.a linked.\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Include all archives in libLLVM.(so|dylib) except the ones that have\n\n# their own dynamic libraries and TableGen.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set dylib internal version number to llvmCore submission number\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Include everything from the .a's into the shared library.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# extra options to override libtool defaults \n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Mac OS X 10.4 and earlier tools do not allow a second -install_name on command line\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Include everything from the .a's into the shared library.\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Add soname to the library.\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Don't allow unresolved symbols.\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# add -z allextract ahead of other libraries on Solaris\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11,
      "Errorlog" : "line 58:79 token recognition error at: '\\1'\nline 102:6 token recognition error at: '\"s/^.* T _\\([^.][^.]*\\)$$/\\1'\nline 103:36 token recognition error at: '\\1'\nline 103:45 token recognition error at: '\" \\\\n\\t\\t\\t$(SHLIB_FRAGS) \\\\n\\t\\t | sort -u) > $@\\n\\n$(ObjDir)/$(LIBRARYNAME).a.o: $(LLVMLibsPaths) $(ObjDir)/.dir\\n\\t$(Echo) Linking all LLVMLibs together for $(LIBRARYNAME)\\n\\t$(Verb) $(Link) -nostartfiles -Wl,-r -nodefaultlibs -o $@ \\\\n\\t\\t\\t-Wl,--whole-archive $(LLVMLibsPaths) \\\\n\\t\\t\\t-Wl,--no-whole-archive\\n\\n$(ObjDir)/stdc++.a.o: $(ObjDir)/.dir\\n\\t$(Echo) Linking all libs together for static libstdc++.a\\n\\t$(Verb) $(Link) -nostartfiles -Wl,-r -nodefaultlibs -o $@ \\\\n\\t\\t\\t-Wl,--whole-archive -lstdc++ \\\\n\\t\\t\\t-Wl,--no-whole-archive\\n# FIXME: workaround to invalidate -lstdc++\\n\\t$(Echo) Making dummy -lstdc++ to lib\\n\\t$(Verb) $(AR) rc $(ToolDir)/libstdc++.dll.a\\n# FIXME: Is install-local needed?\\n\\nclean-local::\\n\\t$(Verb) $(RM) -f $(ToolDir)/libstdc++.dll.a\\n\\nendif\\n\u0000'\n"
    },
    "interpreter/llvm/src/tools/llvm-size/CMakeLists.txt" : {
      "ObjectId" : "933cc75c3fe920abbb6831e0e913fb76b6afede5",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/llvm-size/Makefile" : {
      "ObjectId" : "0622eb108978fa7fce315a590541946c50fc9d39",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/llvm-size/Makefile ----------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/llvm-stress/CMakeLists.txt" : {
      "ObjectId" : "e2d07a5dda20287bfc52c4edf4e12a3864edab8c",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/llvm-stress/Makefile" : {
      "ObjectId" : "8767cbe4176781a8070302ab16ccc91028d0e19b",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/llvm-stress/Makefile --------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/llvm-symbolizer/CMakeLists.txt" : {
      "ObjectId" : "5967b891f4155c262d2fb1d162592f177d45ea19",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: As we plan to execute llvm-symbolizer binary from compiler-rt\n\n# libraries, it has to be compiled for all supported targets (x86_64, i386 etc).\n\n# This means that we need LLVM libraries to be compiled for these\n\n# targets as well. Currently, there is no support for such a build strategy.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/llvm-symbolizer/Makefile" : {
      "ObjectId" : "5ac83a58137d04b6279e1b1386dada39723f3a67",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/llvm-symbolizer/Makefile ----------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/lto/CMakeLists.txt" : {
      "ObjectId" : "5820b1415be7d854d286a624c348933af1c726c6",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/lto/Makefile" : {
      "ObjectId" : "ab2e16e5fab625cf22ed892916d96f7240045dd1",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/lto/Makefile ----------------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If we're doing an Apple-style build, add the LTO object path.\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2,
      "Errorlog" : "line 46:79 token recognition error at: '\\1'\n"
    },
    "interpreter/llvm/src/tools/macho-dump/CMakeLists.txt" : {
      "ObjectId" : "d55e1d5c413910ac8f199eaa129ddf64206525cc",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/macho-dump/Makefile" : {
      "ObjectId" : "0843e982e1afbc590d727a582eb5cb8f1f4d9768",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/macho-dump/Makefile ---------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/tools/obj2yaml/CMakeLists.txt" : {
      "ObjectId" : "d64bf1bad866b7a78c02df8969e72be5e484df68",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/obj2yaml/Makefile" : {
      "ObjectId" : "95f393ddd6f41fa47a2f6f6780e0f635f105a212",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- utils/obj2yaml/Makefile ----------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Don't install this utility\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "interpreter/llvm/src/tools/opt/CMakeLists.txt" : {
      "ObjectId" : "91959119e4911947e8a3520b51614be11e05dd05",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/opt/Makefile" : {
      "ObjectId" : "a451005574a55b591a0aeb04799ebcd86d635e5d",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- tools/opt/Makefile ----------------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/tools/yaml2obj/CMakeLists.txt" : {
      "ObjectId" : "f8b119752462674b95a561edacfbd450784c3625",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/tools/yaml2obj/Makefile" : {
      "ObjectId" : "cb6f47724b6923928539e0d33efa9d19238a642f",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- utils/yaml2obj/Makefile ----------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Don't install this utility\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "interpreter/llvm/src/unittests/IR/CMakeLists.txt" : {
      "ObjectId" : "aed45979c06929cc5d25e1bcaad9416871e0a8d7",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# MSVC9 and 8 cannot compile ValueMapTest.cpp due to their bug.\n\n# See issue#331418 in Visual Studio.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# HACK: Declare a couple of source files as optionally compiled to satisfy the\n\n# missing-file-checker in LLVM's weird CMake build.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/unittests/IR/Makefile" : {
      "ObjectId" : "7c59003c92a7cf35752ec4fb5fd532e388b122c0",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- unittests/IR/Makefile -------------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/unittests/Makefile" : {
      "ObjectId" : "3d6ccb5790c62244ffa0b1d8428744b9bd7bd018",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- unittests/Makefile ----------------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/unittests/Option/CMakeLists.txt" : {
      "ObjectId" : "185d503912fd862fa953b79e94c2948eeea73495",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/utils/FileCheck/CMakeLists.txt" : {
      "ObjectId" : "fa56f92a8f2877cfcd32bcef531aa292ab765fe8",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/utils/FileCheck/Makefile" : {
      "ObjectId" : "268b7bc919a17a690596b24547abf0af36ef16b6",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- utils/FileCheck/Makefile ----------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Don't install this utility\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "interpreter/llvm/src/utils/FileUpdate/CMakeLists.txt" : {
      "ObjectId" : "655aaec3bc2a1cf29eff0a1073e4c28e3104df8d",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/utils/FileUpdate/Makefile" : {
      "ObjectId" : "1e6c0a838c27a585e8fe6d4321eaae44ba18f170",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- utils/FileUpdate/Makefile ---------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Don't install this utility\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "interpreter/llvm/src/utils/KillTheDoctor/CMakeLists.txt" : {
      "ObjectId" : "37c2b7ceb467a082d0ca5eba0851c7102cdde352",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/utils/Makefile" : {
      "ObjectId" : "ecb30bed7c63ee81644dba03377754c580378fdc",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- utils/Makefile --------------------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/utils/PerfectShuffle/Makefile" : {
      "ObjectId" : "28709fefd319bd1307501ccc3698ed2d9d5426d3",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- utils/PerfectShuffle/Makefile -----------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/utils/TableGen/CMakeLists.txt" : {
      "ObjectId" : "3ee19744313152e6a54f36cdf52eec4552e9fd33",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/utils/TableGen/Makefile" : {
      "ObjectId" : "9bfd94b7576bd24fdedbf838e67e07e127f0cff0",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- utils/TableGen/Makefile -----------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "interpreter/llvm/src/utils/count/CMakeLists.txt" : {
      "ObjectId" : "4e0d371334e473d643d791ae839ea51a953f0c7f",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/utils/count/Makefile" : {
      "ObjectId" : "8de076a8803b0161081e6410e58fcfa1f6f007bb",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- utils/count/Makefile --------------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Don't install this utility\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "interpreter/llvm/src/utils/fpcmp/Makefile" : {
      "ObjectId" : "81db3b9c3f6ee642c9ba58788c6b99769ee51f5c",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- utils/fpcmp/Makefile --------------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/utils/llvm-lit/CMakeLists.txt" : {
      "ObjectId" : "602cc881cd5af7ae9f6095de72ff8d7dab146f69",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/utils/llvm-lit/Makefile" : {
      "ObjectId" : "77021bbc2436cf9a15312c9d427b1e5db727a054",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- utils/llvm-lit/Makefile -----------------------------*- Makefile -*-===##\n\n# \n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n# \n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/utils/not/CMakeLists.txt" : {
      "ObjectId" : "f4c02290d7d1d32229c734516824094e0c714b0d",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/utils/not/Makefile" : {
      "ObjectId" : "f37f166c6c7be247e947b3ac2a9ca13c50aa6909",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- utils/not/Makefile ----------------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Don't install this utility\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "interpreter/llvm/src/utils/unittest/CMakeLists.txt" : {
      "ObjectId" : "70ed35df2e6c18d10dd40892708ad81d0a89401c",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# Experimental CMake build script for Google Test.\n\n#\n\n# Consider this a prototype.  It will change drastically.  For now,\n\n# this is only for people on the cutting edge.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n\n########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Where gtest's .h files can be found.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Visual Studio 2012 only supports up to 8 template parameters in\n\n# std::tr1::tuple by default, but gtest requires 10\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "interpreter/llvm/src/utils/unittest/Makefile" : {
      "ObjectId" : "6a09341832bc3d23858ea22f5f30709369c65fda",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- utils/unittest/Makefile -----------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "interpreter/llvm/src/utils/unittest/UnitTestMain/Makefile" : {
      "ObjectId" : "7bcb7249504925e943e06891c841f9dab59eaa5f",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- utils/unittest/UnitTestMain/Makefile ----------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# libstdc++'s TR1 <tuple> header depends on RTTI and uses C++'0x features not\n\n# supported by Clang, so force googletest to use its own tuple implementation.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Disable pthreads if LLVM was configured without them.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "interpreter/llvm/src/utils/unittest/googletest/Makefile" : {
      "ObjectId" : "bf736704f5498dc37ad3d31bd4d6f81dd7d48e14",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- utils/unittest/googletest/Makefile ------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note that these flags are duplicated when building individual tests in\n\n# unittests/Makefile.unittest and ../UnitTestMain/Makefile; ensure that any\n\n# changes are made to both.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# libstdc++'s TR1 <tuple> header depends on RTTI and uses C++'0x features not\n\n# supported by Clang, so force googletest to use its own tuple implementation.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Disable pthreads if LLVM was configured without them.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "interpreter/llvm/src/utils/yaml-bench/CMakeLists.txt" : {
      "ObjectId" : "403182ceee2a8e9b5d187f8137ec8128c29ea6a4",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "interpreter/llvm/src/utils/yaml-bench/Makefile" : {
      "ObjectId" : "07e91226c7a99bd3156881f1159dc14b51d493d4",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##===- utils/yaml-bench/Makefile ---------------------------*- Makefile -*-===##\n\n#\n\n#                     The LLVM Compiler Infrastructure\n\n#\n\n# This file is distributed under the University of Illinois Open Source\n\n# License. See LICENSE.TXT for details.\n\n#\n\n##===----------------------------------------------------------------------===##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This tool has no plugins, optimize startup time.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Don't install this utility\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "io/CMakeLists.txt" : {
      "ObjectId" : "9b516a93ee1874cd059e5d1268ef8fce1b713621",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# special CMakeListst.txt \n",
        "Line" : 1,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "io/castor/CMakeLists.txt" : {
      "ObjectId" : "4bc912dedf639644727f683ab7613d2fe4b0dea9",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT io/castor package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "io/io/CMakeLists.txt" : {
      "ObjectId" : "d150b1ef72f75184fcb9da8c9a8f14ea5ddd5728",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT io/io package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#--- Extra rules ----------------------------------------------------------\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "io/rfio/CMakeLists.txt" : {
      "ObjectId" : "a656a67a69c6db55123e242534fe9b976f4bd8ed",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT io/rfio package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "io/sql/CMakeLists.txt" : {
      "ObjectId" : "d59a18ab2c729863a414fc6979261ee9d3baa7fa",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT io/sql package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "io/xml/CMakeLists.txt" : {
      "ObjectId" : "17731ce041f35dfa118e63d1859d3f91b660c378",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT io/xml package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "io/xmlparser/CMakeLists.txt" : {
      "ObjectId" : "886968b615cef6e8d5a53d9116540e9691d2692a",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT io/xmlparser package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "main/CMakeLists.txt" : {
      "ObjectId" : "30dcfaf258acde520372852eb73420ff7b2b3eb9",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT main package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ROOT_EXECUTABLE(h2root h2root.cxx LIBRARIES Core RIO Net Hist Graf Graf3d Gpad Tree Matrix MathCore Thread minicern)\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "math/CMakeLists.txt" : {
      "ObjectId" : "3078df7fac47c7a45389dc15e8b43c3d79478e85",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(mathcore/test EXCLUDE_FROM_ALL)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "math/fftw/CMakeLists.txt" : {
      "ObjectId" : "f09810fcadb2dc4909e3aecd286c62ddb46b1a77",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT math/fftw package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "math/foam/CMakeLists.txt" : {
      "ObjectId" : "ca2d3e50c2b3b299c3a60cf4c13d67ada6b6a1ce",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT math/foam package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "math/fumili/CMakeLists.txt" : {
      "ObjectId" : "fd10ba7c15d873cd560fc471b7ff2b9180669362",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT math/fumili package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "math/genetic/CMakeLists.txt" : {
      "ObjectId" : "d2108f2ed860cad4110946c2221fbf266b02dc42",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT math/genetic package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "math/genetic/test/Makefile" : {
      "ObjectId" : "e4a5d2a8a1bf22d61083f83a2a0160a6a3ee734c",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for the ROOT test programs.\n\n# This Makefile shows nicely how to compile and link applications\n\n# using the ROOT libraries on all supported platforms.\n\n#\n\n# Copyright (c) 2000 Rene Brun and Fons Rademakers\n\n#\n\n# Author: Fons Rademakers, 29/2/2000\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#------------------------------------------------------------------------------\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#CXXFLAGS += -D_GLIBCXX_PARALLEL -fopenmp\n\n#LDFLAGS += -fopenmp \n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "math/genvector/CMakeLists.txt" : {
      "ObjectId" : "85d0bc9369fefc8d6f684adbddb6e5f8cd89ab7c",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT math/genvector package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "math/genvector/build/Makefile.am" : {
      "ObjectId" : "4b5f254f5d79bb1f79921944bee9b855e228e530",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# @(#)root/mathcore:$Id$\n\n# Author: L. Moneta    2005  \n\n#\n\n## Process this file with automake to produce Makefile.in .\n\n#\n\n#\n\n# The following is set, otherwise it would follow GNU conventions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# A trick to add options to the aclocal command.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make the documentation in the build directory\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "math/genvector/test/Makefile" : {
      "ObjectId" : "aa045a4d154638cea5944baab7a7dc0ade96cdda",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for the ROOT test programs.\n\n# This Makefile shows nicely how to compile and link applications\n\n# using the ROOT libraries on all supported platforms.\n\n#\n\n# Copyright (c) 2000 Rene Brun and Fons Rademakers\n\n#\n\n# Author: Fons Rademakers, 29/2/2000\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#------------------------------------------------------------------------------\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# use reflex\n\n#useReflex=yes\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if have clhep\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#EXTRALIBS+=  $(CLHEPBASE)/lib/libCLHEP.a\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#VECTORSCALEOBJ     = testVectorScale.$(ObjSuf)\n\n#VECTORSCALESRC     = testVectorScale.$(SrcSuf)\n\n#VECTORSCALE        = testVectorScale$(ExeSuf)\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# $(VECTORSCALE):   \t$(VECTORSCALEOBJ)\n\n# \t\t    $(LD) $(LDFLAGS) $^ $(LIBS) $(EXTRALIBS) $(EXTRAIOLIBS) $(OutPutOpt)$@\n\n# \t\t    @echo \"$@ done\"\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# We need to make both the .dylib and the .so\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "math/mathcore/CMakeLists.txt" : {
      "ObjectId" : "4d12e2ebf04de601a7e1dd306d51642c35ef63f6",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT io/io package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Explicit to avoid circular dependencies mathcore <--> hist :-(\n",
        "Line" : 6,
        "CharPositionInLine" : 56
      },
      "CommentCount" : 2
    },
    "math/mathcore/build/Makefile.am" : {
      "ObjectId" : "56112e5050aa3a6b9b19fc35a0dadab187f7d820",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# @(#)root/mathcore:$Id$\n\n# Author: L. Moneta    2005  \n\n#\n\n## Process this file with automake to produce Makefile.in .\n\n#\n\n#\n\n# The following is set, otherwise it would follow GNU conventions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# A trick to add options to the aclocal command.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#tests \n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Make the documentation in the build directory\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "math/mathcore/test/CMakeLists.txt" : {
      "ObjectId" : "4512172c5cc8c2da3e3ebb82cc6d101a3e02801f",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "math/mathcore/test/Makefile" : {
      "ObjectId" : "034b62d8dd86f0f1c72e7b6363f531aaca268115",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for the ROOT test programs.\n\n# This Makefile shows nicely how to compile and link applications\n\n# using the ROOT libraries on all supported platforms.\n\n#\n\n# Copyright (c) 2000 Rene Brun and Fons Rademakers\n\n#\n\n# Author: Fons Rademakers, 29/2/2000\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#------------------------------------------------------------------------------\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if have clhep\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#EXTRALIBS+=  $(CLHEPBASE)/lib/libCLHEP.a\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add MathMore lib\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "math/mathcore/test/fit/Makefile" : {
      "ObjectId" : "ced8e4a545a4ba67d53ebed15fea2d9a7228cdbc",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for the ROOT test programs.\n\n# This Makefile shows nicely how to compile and link applications\n\n# using the ROOT libraries on all supported platforms.\n\n#\n\n# Copyright (c) 2000 Rene Brun and Fons Rademakers\n\n#\n\n# Author: Fons Rademakers, 29/2/2000\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#------------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "math/mathmore/CMakeLists.txt" : {
      "ObjectId" : "3ed2457be49bc799c9e291168a4801843d00c14d",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT math/mathmore package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "math/mathmore/build/Makefile.am" : {
      "ObjectId" : "fa40a25bd74575459e0ecb7387eaa9bd4591e2c8",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# @(#)root/mathcore:$Id$\n\n# Author: L. Moneta    2005  \n\n#\n\n## Process this file with automake to produce Makefile.in .\n\n#\n\n#\n\n# The following is set, otherwise it would follow GNU conventions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# A trick to add options to the aclocal command.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#tests \n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Make the documentation in the build directory\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "math/mathmore/test/Makefile" : {
      "ObjectId" : "2c0c385256b4728df3ef628d38a61d07442ef3eb",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for the ROOT test programs.\n\n# This Makefile shows nicely how to compile and link applications\n\n# using the ROOT libraries on all supported platforms.\n\n#\n\n# Copyright (c) 2000 Rene Brun and Fons Rademakers\n\n#\n\n# Author: Fons Rademakers, 29/2/2000\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#------------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#--- gsl libraries\n\n#CXXFLAGS += `gsl-config --cflags`\n\n#EXTRALIBS += `gsl-config --libs`\n\n#---\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "math/matrix/CMakeLists.txt" : {
      "ObjectId" : "019677bb5eb62763d9fba4e35208fc80e90f748d",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT math/matrix package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "math/minuit/CMakeLists.txt" : {
      "ObjectId" : "65cc6ab7ddc67555a02da91f3b85211402846653",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT math/minuit package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "math/minuit2/CMakeLists.txt" : {
      "ObjectId" : "8b6b07fd2b48c661131f016c2611dbb52e3bccd9",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT math/minuit2 package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---Deal with the parallel option on Minuit2. Probably it should be done using a build 'option' and not\n\n#   using a environment variable  -- NOT TESTED --- \n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "math/minuit2/build/Makefile.am" : {
      "ObjectId" : "56afa46207272bcc4d475cfcd996a7ff79020f9d",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n\n# \n\n# Author: Paul_Kunz@slac.stanford.edu\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The following is set, otherwise it would have to follow GNU conventions.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# A trick to add options to the aclocal command.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## The subdirectories.  \n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#EXTRA_DIST = BuildFile makefile.msc\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The following is for platforms where automake dependencies don't work.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Make the documentation in the build directory\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# extra clean targets for Sun CC compiler and generated distribution file\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "math/minuit2/test/Makefile" : {
      "ObjectId" : "c77435e39cab809a10c518d738a66b47fa232630",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for the ROOT test programs.\n\n# This Makefile shows nicely how to compile and link applications\n\n# using the ROOT libraries on all supported platforms.\n\n#\n\n# Copyright (c) 2000 Rene Brun and Fons Rademakers\n\n#\n\n# Author: Fons Rademakers, 29/2/2000\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#------------------------------------------------------------------------------\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for using with MPI\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "math/minuit2/test/MnSim/Makefile" : {
      "ObjectId" : "af44d08dc712dc67c51e8d5022c74f56da9be7db",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for the ROOT test programs.\n\n# This Makefile shows nicely how to compile and link applications\n\n# using the ROOT libraries on all supported platforms.\n\n#\n\n# Copyright (c) 2000 Rene Brun and Fons Rademakers\n\n#\n\n# Author: Fons Rademakers, 29/2/2000\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#------------------------------------------------------------------------------\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for using with MPI\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "math/minuit2/test/MnTutorial/Makefile" : {
      "ObjectId" : "34c1c1237d4c891da6e0f925057b219f8a6ab7eb",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for the ROOT test programs.\n\n# This Makefile shows nicely how to compile and link applications\n\n# using the ROOT libraries on all supported platforms.\n\n#\n\n# Copyright (c) 2000 Rene Brun and Fons Rademakers\n\n#\n\n# Author: Fons Rademakers, 29/2/2000\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#------------------------------------------------------------------------------\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for using with MPI\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "math/mlp/CMakeLists.txt" : {
      "ObjectId" : "077e191b78dc4a43116935ab2d27fa34d8634718",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT math/physics package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "math/physics/CMakeLists.txt" : {
      "ObjectId" : "832a9d75c1563a19d1ad4e29d65d492d7adb3a9d",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT math/physics package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "math/quadp/CMakeLists.txt" : {
      "ObjectId" : "9a0cbe52b6b6881c66b0026c65b928db955e7e20",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT math/physics package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "math/smatrix/CMakeLists.txt" : {
      "ObjectId" : "fdb1f55a2b2aab442f4e35e49f672b2550c89a75",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT math/smatrix package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "math/smatrix/build/Makefile.am" : {
      "ObjectId" : "e0859a869d97fae583215fff5dd4fba06bb7590b",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# @(#)root/mathcore:$Id$\n\n# Author: L. Moneta    2005  \n\n#\n\n## Process this file with automake to produce Makefile.in .\n\n#\n\n#\n\n# The following is set, otherwise it would follow GNU conventions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# A trick to add options to the aclocal command.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#tests \n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Make the documentation in the build directory\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "math/smatrix/test/Makefile" : {
      "ObjectId" : "c70cc38cde281fc42287e1995a74ef2282c45939",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for the ROOT test programs.\n\n# This Makefile shows nicely how to compile and link applications\n\n# using the ROOT libraries on all supported platforms.\n\n#\n\n# Copyright (c) 2000 Rene Brun and Fons Rademakers\n\n#\n\n# Author: Fons Rademakers, 29/2/2000\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#------------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ifeq ($(PLATFORM),macosx) \n\n# #unroll loop better on gcc > 4\n\n# CXXFLAGS+= -O3 -g  -funroll-loops \n\n# endif\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if have clhep\n\n#CLHEPBASE=/Users/moneta/mathlibs/CLHEP-1.9.2.2\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#EXTRALIBS+=  $(CLHEPBASE)/lib/libCLHEP.a\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We need to make both the .dylib and the .so\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "math/splot/CMakeLists.txt" : {
      "ObjectId" : "6dbca1b8e0316235287ae23e44817218c1fc5d5a",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT math/splot package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "math/unuran/CMakeLists.txt" : {
      "ObjectId" : "a91d1433bd4c2f12fbbd9cc093c7a7946f660ce7",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT math/unurun package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---Define package related variables----------------------------------------------------------------- \n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---Untar sources at configuration/generation time (needed for listing sources)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---Define special compiler settings for unurun-----------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#---configure unuran (required for creating the config.h used by unuran source files)----------------\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "math/unuran/test/Makefile" : {
      "ObjectId" : "29c65f75bfce9eeb2f3004f4251c8ed712f85524",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for the ROOT test programs.\n\n# This Makefile shows nicely how to compile and link applications\n\n# using the ROOT libraries on all supported platforms.\n\n#\n\n# Copyright (c) 2000 Rene Brun and Fons Rademakers\n\n#\n\n# Author: Fons Rademakers, 29/2/2000\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#------------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# $(TESTUNURAN):  $(TESTUNURANOBJ)\n\n# \t\t$(LD) $(LDFLAGS) $^ $(LIBS) $(EXTRALIBS) $(OutPutOpt)$@\n\n# \t\t@echo \"$@ done\"\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "misc/CMakeLists.txt" : {
      "ObjectId" : "f451e0455e03f271ebd4542e59973390267c38c1",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "misc/memstat/CMakeLists.txt" : {
      "ObjectId" : "e3b8f7637bb89acc688f6b5655e84d5c716dcdf0",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT misc/memstat package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "misc/memstat/doc/Makefile" : {
      "ObjectId" : "72b6decdfe4979a1f8db51df73a0afb919a5fade",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#IMGS= \\\n\timportant.png\\\n\ttip.png\\\n\twarning.png\\\n\tnote.png\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#IMG_DIR = img\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#XMLTO_PARAM=-vv -o $(HTML_OUT_DIR) xhtml -m config.xsl\n\n#XMLTO_PARAM_NOCHUNKS=-o $(HTML_OUT_DIR) xhtml-nochunks -m config.xsl\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#$(HTML_OUT_DIR)/%.png:\n\n#\t@echo \"Copying images...\"\n\n#\t@cp ${addprefix $(IMG_DIR)/, $(IMGS)} $(HTML_OUT_DIR)/\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#img_files: ${addprefix $(HTML_OUT_DIR)/, $(IMGS)}\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#gen_html: $(HTML_OUT_DIR) css_files img_files html_files\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "misc/minicern/CMakeLists.txt" : {
      "ObjectId" : "89bbe95524c52edf711677610e7cc781e5462015",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT misc/minicern package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "misc/table/CMakeLists.txt" : {
      "ObjectId" : "4feb7de27bdfe190ef26cfe73aaa4049a27e5618",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT misc/table package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "montecarlo/CMakeLists.txt" : {
      "ObjectId" : "7f89b01ddedb26cd2c8f6b901870e6ecaa8f04f0",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "montecarlo/eg/CMakeLists.txt" : {
      "ObjectId" : "37aadae25dd2ce1058de03ef25f3a56051cb02c0",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT montecarlo/eg package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "montecarlo/pythia6/CMakeLists.txt" : {
      "ObjectId" : "3ed2f82ff71fd77bed0f75aff3d319e7d5680331",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT montecarlo/pythia6 package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "montecarlo/pythia8/CMakeLists.txt" : {
      "ObjectId" : "863768fede93ff63469335b1f6cb16a554042474",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT montecarlo/pythia8 package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "montecarlo/vmc/CMakeLists.txt" : {
      "ObjectId" : "0a8c129e911d92071df63219b43f1f63a233cd70",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT montecarlo/vmc package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "net/CMakeLists.txt" : {
      "ObjectId" : "c60734a3edd80cb19d44c0f41585bfd16ff180bb",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# special CMakeListst.txt\n",
        "Line" : 2,
        "CharPositionInLine" : 24
      },
      "CommentCount" : 1
    },
    "net/alien/CMakeLists.txt" : {
      "ObjectId" : "f1e484b91bc96f0a8f8b174f75bea09abb6b6f2c",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT net/alien package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "net/auth/CMakeLists.txt" : {
      "ObjectId" : "d9d8769fe8952ce7cc4d17961c8a0e6237a3edac",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT net/auth package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---static library needed for rootd and proofd --------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "net/bonjour/CMakeLists.txt" : {
      "ObjectId" : "4c15d93b05d53100368f2486bfdce24d4a4d29dd",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT net/bonjour package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "net/krb5auth/CMakeLists.txt" : {
      "ObjectId" : "4022b3a24b9464ceeadd331a46b5cc2d0f2c8700",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT net/krb5auth package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "net/monalisa/CMakeLists.txt" : {
      "ObjectId" : "11909cbc64ea09e0b36a40b28e3b313b517ca829",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT net/monalisa package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set_directory_properties(PROPERTIES COMPILE_DEFINITIONS R__KRB5INIT=\"${KRB5_INIT}\")\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "net/net/CMakeLists.txt" : {
      "ObjectId" : "dd2ffc91d7300c0373a3ab67435397da50ca6b5d",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT net/net package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "net/netx/CMakeLists.txt" : {
      "ObjectId" : "d2e413e48fdd0dbe0ae2f2dfaf1e5c7a9ad5f4d0",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT net/netx package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---------------------------------------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "net/rpdutils/CMakeLists.txt" : {
      "ObjectId" : "06a20e72377299ca56e1779e722ffebd4ad100dc",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT net/rpdutils package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---Authentication methods-----------------------------------------------------------------\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---static library needed for rootd and proofd --------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "proof/CMakeLists.txt" : {
      "ObjectId" : "69540d1871927b05930391c467101638fbba70f2",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# special CMakeListst.txt\n",
        "Line" : 2,
        "CharPositionInLine" : 30
      },
      "CommentCount" : 1
    },
    "proof/afdsmgrd/CMakeLists.txt" : {
      "ObjectId" : "3170388e2e8e4e8590aeac8e500aca5d09aed410",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building PROOF's afdsmgrd\n\n# @author Dario Berzano\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Variables for afdsmgrd: all of them are *absolute* paths\n\n#\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Taking MonALISA from MONALISA_DIR, if defined, or from AliEn. If neither\n\n# MonALISA nor AliEn are enabled, don't build afdsmgrd with MonALISA support\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# MonALISA is disabled when no MonALISA directory was given\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Pass all possible ROOT include paths to underlying CMake\n\n#\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Get all possible include paths into a variable (one path per line)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Separate paths with colons\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Build targets\n\n#\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# afdsmgrd steering target, always built (i.e., \"phony\", i.e., always ood). Let\n\n# this target depend on ALL known ROOT libraries (TODO: Maybe there is a better\n\n# way to get the list of ROOT libs?)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# make install on afdsmgrd\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Workaround: on some configurations libdir is not created (because there is\n\n# no need to) causing subsequent \"install\" command to fail\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# CMake configuration of afdsmgrd\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# The file afdsmgrdPrepare is created to signal a success: reset it\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Create build directory\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Run cmake on the afdsmgrd project: mind the EXTRA_INCDIR variable\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# The following command won't be executed if previous command has failed\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Unpacks afdsmgrd tar.gz found in source directory into build directory (which\n\n# is current working directory by default)\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#\n\n# Install targets -- note that the trailing slashes are fundamental\n\n#\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# etc --> <prefix>/etc/proof\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# bin --> <prefix>/bin\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# lib --> <prefix>/etc/proof/lib\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# libexec --> <prefix>/etc/proof\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# var --> <prefix>/etc/proof/var\n\n# Nothing goes here for the moment!\n\n#install(\n\n#  DIRECTORY ${AFDSMGRD_INSTALL_DIR}/var/\n\n#  DESTINATION ${CMAKE_INSTALL_PREFIX}/etc/proof/var\n\n#  USE_SOURCE_PERMISSIONS\n\n#)\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# share --> <prefix>/etc/proof/utils/afdsmgrd\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "proof/proof/CMakeLists.txt" : {
      "ObjectId" : "15bfb451f6eebc9506155fdd39cfe21ff628832b",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT proof/proof package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To avoid circular dependencies :-(\n",
        "Line" : 10,
        "CharPositionInLine" : 64
      },
      "2" : {
        "Text" : "#--- AliEn Dataset manager only if AliEn is available\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#--- if gcc 4.5.2 on Linux (Debian) use -O instead of -O2 (compiler bug)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "proof/proofd/CMakeLists.txt" : {
      "ObjectId" : "c5bd6e2962a0815ec82d5c0471c528b2275c69cd",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT proof/proofd package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "proof/proofplayer/CMakeLists.txt" : {
      "ObjectId" : "15cb9321801bd8cd2b4c85f1e592e82cd3a1436c",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT proof/proofplayer package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "proof/proofx/CMakeLists.txt" : {
      "ObjectId" : "875dfeaa46c87b0bfb9467b9d3fd4a1813001d9a",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT proof/proofx package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "roofit/CMakeLists.txt" : {
      "ObjectId" : "a921698a837bf04b8a8cd0785efa6270ff08a075",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "roofit/histfactory/CMakeLists.txt" : {
      "ObjectId" : "7aa3cff3a099c09835a941d784e46087775eed4c",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT rootfit/histfactory package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ROOT_INSTALL_HEADERS()\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "roofit/roofit/CMakeLists.txt" : {
      "ObjectId" : "9b8f010f9da903908a278ce8fe439c2037ff2997",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT rootfit package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "roofit/roofitcore/CMakeLists.txt" : {
      "ObjectId" : "13bb55317907c3a4f657a88287e818e475b5221d",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT roofitcore package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "roofit/roostats/CMakeLists.txt" : {
      "ObjectId" : "d3ddaa2799aa501c18da41e4e0196536d660a5c0",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT roostats package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ROOT_INSTALL_HEADERS()\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "rootx/CMakeLists.txt" : {
      "ObjectId" : "3c1ea69de86a1ff11d728c62bb7d3791c050db03",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT rootx package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "sql/CMakeLists.txt" : {
      "ObjectId" : "9d2507d9b2bc2aca87c49048774210253462ef6c",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sql/mysql/CMakeLists.txt" : {
      "ObjectId" : "87b843092287772d075ba894ecda18f505a5f3a2",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT sql/mysql package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "sql/odbc/CMakeLists.txt" : {
      "ObjectId" : "a477252a4e647c835f6702e5dfcf530294d5dcc0",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT sql/odbc package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "sql/oracle/CMakeLists.txt" : {
      "ObjectId" : "034958e58aeb6150752f239b5b79a5c7b51d8610",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT sql/oracle package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "sql/pgsql/CMakeLists.txt" : {
      "ObjectId" : "6e10b2af30012bb532858749ccba236ada94b385",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT sql/pgsql package\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "7e3091c271eb922a24c0567ce83544961883fb63",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt for the ROOT test programs.\n\n# This shows nicely how to compile and link applications\n\n# using the ROOT libraries on all supported platforms.\n\n#\n\n# Author: Pere Mato, 25/10/2010\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Testing using the binary tree\n",
        "Line" : 14,
        "CharPositionInLine" : 29
      },
      "2" : {
        "Text" : "#---environment-------------------------------------------------------------------------------\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---hworld------------------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---event-------------------------------------------------------------------------------------\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---hsimple------------------------------------------------------------------------------------\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#--minexam-------------------------------------------------------------------------------------\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#--tstring-------------------------------------------------------------------------------------\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#--tcollex-------------------------------------------------------------------------------------\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#--tcollbm------------------------------------------------------------------------------------\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#--vvector------------------------------------------------------------------------------------\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#--vmatrix------------------------------------------------------------------------------------\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#--vlazy------------------------------------------------------------------------------------\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#--helloso------------------------------------------------------------------------------------\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#--Aclockso------------------------------------------------------------------------------------\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#--bench------------------------------------------------------------------------------------\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#--stress------------------------------------------------------------------------------------\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#--stressShapes------------------------------------------------------------------------------------\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#--stressGeometry------------------------------------------------------------------------------------\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#--stressLinear------------------------------------------------------------------------------------\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#--stressGraphics------------------------------------------------------------------------------------\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#--stressHistogram------------------------------------------------------------------------------------\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#--stressGUI---------------------------------------------------------------------------------------\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#---Cannot run GUI test in batch mode--------------------\n\n#configure_file(stressGUI.ref stressGUI.ref @COPY_ONLY)\n\n#ROOT_ADD_TEST(test-stressgui COMMAND stressGUI -ref FAILREGEX \"FAILED\")\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#--stressSpectrum----------------------------------------------------------------------------------\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#--stressVector------------------------------------------------------------------------------------\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#--stressTMVA--------------------------------------------------------------------------------------\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#--stressMathMore----------------------------------------------------------------------------------\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#--stressMathCore----------------------------------------------------------------------------------\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#--stressRooFit----------------------------------------------------------------------------------\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#--stressRooStats----------------------------------------------------------------------------------\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#--stressFit---------------------------------------------------------------------------------\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#--stressHistoFit-----------------------------------------------------------------------------\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#--stressEntryList---------------------------------------------------------------------------\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#--stressIterators---------------------------------------------------------------------------\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#--stressInterpreter-------------------------------------------------------------------------\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#--stressHepix-------------------------------------------------------------------------------\n\n#ROOT_EXECUTABLE(stressHepix stressHepix.cxx LIBRARIES Core)\n\n#ROOT_ADD_TEST(test-stressHepix COMMAND stressHepix FAILREGEX \"FAILED\")\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#--stressProof-------------------------------------------------------------------------------\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#--testbits----------------------------------------------------------------------------------\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#--ctorture----------------------------------------------------------------------------------\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#--qprandom----------------------------------------------------------------------------------\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#--threads----------------------------------------------------------------------------------\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#ROOT_ADD_TEST(test-threads COMMAND threads)  \n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 43
    },
    "test/Makefile" : {
      "ObjectId" : "026c770e6d855e9bf7021117c8265163da54d62f",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for the ROOT test programs.\n\n# This Makefile shows nicely how to compile and link applications\n\n# using the ROOT libraries on all supported platforms.\n\n#\n\n# Copyright (c) 2000 Rene Brun and Fons Rademakers\n\n#\n\n# Author: Fons Rademakers, 29/2/2000\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tutorials dir needed by stressProof\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2,
      "Errorlog" : "line 26:62 token recognition error at: '\"s|.*\\\"\\(.*\\)\\\"|\\1'\nline 789:51 token recognition error at: '\"\\n\\t\\t\\tgenreflex TrackMathCore.h --selection_file=TrackMathCoreRflx.xml -o TrackMathCoreRflx.cxx  -I$(ROOTSYS)/include\\n\\n.$(SrcSuf).$(ObjSuf):\\n\\t$(CXX)  $(CXXFLAGS) -c $<\\n\\nifeq ($(GCC_MAJOR),4)\\nifeq ($(GCC_MINOR),1)\\nTBenchDict.o: CXXFLAGS += -Wno-strict-aliasing\\nendif\\nendif\\n\u0000'\n"
    },
    "test/RootIDE/Makefile" : {
      "ObjectId" : "037ab0a44ffebfd2e06f72d04da8e5707a03a57d",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for the ROOT test programs.\n\n# This Makefile shows nicely how to compile and link applications\n\n# using the ROOT libraries on all supported platforms.\n\n#\n\n# Copyright (c) 2000 Rene Brun and Fons Rademakers\n\n#\n\n# Author: Fons Rademakers, 29/2/2000\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#------------------------------------------------------------------------------\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/RootShower/Makefile" : {
      "ObjectId" : "0696c3ee582d55ffda7e443aa0bc3cebe23ca04c",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for the RootShower program.\n\n# This Makefile shows nicely how to compile and link applications\n\n# using the ROOT libraries on all supported platforms.\n\n#\n\n# Copyright (c) 2000 Rene Brun and Fons Rademakers\n\n#\n\n# Author: Fons Rademakers, 12/2/2003\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#------------------------------------------------------------------------------\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#------------------------------------------------------------------------------\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4,
      "Errorlog" : "line 49:25 token recognition error at: '\\l'\nline 49:29 token recognition error at: '\\l'\nline 49:52 token recognition error at: '\\l'\nline 49:56 token recognition error at: '\\l'\nline 50:13 token recognition error at: '\\l'\nline 50:17 token recognition error at: '\\l'\n"
    },
    "test/histviewer/Makefile" : {
      "ObjectId" : "1c3d8d647b10acf015e9c338755831176b322c03",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "############# MACROS ##############\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############# RULES ###############\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "############# TARGETS #############\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/periodic/Makefile" : {
      "ObjectId" : "ce36e064e075793bcff59cea65e34ab74aa7b3a5",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "############# MACROS ##############\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############# RULES ###############\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "############# TARGETS #############\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/rhtml/Makefile" : {
      "ObjectId" : "d7c6fdf5c6655b677378c9920d070a6a2dfa85e6",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for the ROOT test programs.\n\n# This Makefile shows nicely how to compile and link applications\n\n# using the ROOT libraries on all supported platforms.\n\n#\n\n# Copyright (c) 2000 Rene Brun and Fons Rademakers\n\n#\n\n# Author: Fons Rademakers, 29/2/2000\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#------------------------------------------------------------------------------\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/rootDownloadData.cmake" : {
      "ObjectId" : "3b13b1d97cfa9e93e765b905e6a488cad4d23bf8",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n# ROOT download test data files\n\n#   Script arguments: \n\n#     DST destination directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tmva/CMakeLists.txt" : {
      "ObjectId" : "ab558c50fa283b1752339676011b0b2d3a17b66d",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT tmva package\n\n# @author Pere Mato, CERN\n\n############################################################################\n\n#---The following is needed becuase client codes of TMVA (in ROOT itself) assumes to find header files under /TVMA\n\n#execute_process(COMMAND cmake -E create_symlink ${CMAKE_CURRENT_SOURCE_DIR}/inc ${CMAKE_CURRENT_SOURCE_DIR}/inc/TMVA)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---Need to suffix each header name by TMVA/  -----------------\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tmva/Makefile" : {
      "ObjectId" : "9aa8de9fef996e802fb6567ee1d6a01bc96450bf",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "######################################################################\n\n# Project: TMVA - Toolkit for Multivariate Data Analysis             #\n\n# Code   : Source                                                    #\n\n###################################################################### \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Internal configuration\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of all source files to build\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# List of all object files to build\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Implicit rule to compile all classes\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Rule to make the dictionary\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Rule to set up a symbolic links to the created shared library\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##############################\n\n# The dependencies section   \n\n# - the purpose of the .d files is to keep track of the\n\n#   header file dependence\n\n# - this can be achieved using the makedepend command \n\n##############################\n\n# .d tries to pre-process .cc\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8,
      "Errorlog" : "line 174:110 token recognition error at: '\"s-src/\\(.*\\).o\\(: .*\\)-$(DEPDIR)\\/\\1'\nline 174:160 token recognition error at: '\\1'\nline 174:164 token recognition error at: '\\2'\nline 208:12 token recognition error at: '\"\\n\\n# Useful build targets\\nlib: $(LIBFILE) \\n\\nshlib: $(LIBDIR)/$(SHLIBFILE) $(ROOTMAP)\\n\\nwinlib: $(DLLIBFILE)\\n\\nvars:\\n\\t#echo $(patsubst src/%,%,$(wildcard src/*.$(SrcSuf)))\\n\\techo $(OLIST) $(DICTO)\\n\\nclean:\\n\\trm -rf obj\\n\\trm -rf lib\\n\\trm -f TMVA \\n\\trm -f $(DICTS) $(DICTS:.C=.h)\\n\\trm -f $(OBJDIR)/*.o\\n\\trm -f $(DEPDIR)/*.d\\n\\trm -f $(LIBFILE)\\n\\trm -f $(LIBDIR)/$(SHLIBFILE)\\n\\trm -f lib/lib$(PACKAGE).1.so\\n\\trm -f lib/lib$(PACKAGE).1.dylib\\n\\trm -f $(ROOTMAP)\\n\\trm -f $(DLLIBFILE)\\n\\ndistclean:\\n\\trm -rf obj \\n\\trm -f *~\\n\\trm -f $(DICTFILE) $(DICTHEAD)\\n\\trm -f $(LIBFILE)\\n\\trm -f $(LIBDIR)/$(SHLIBFILE\\t)\\n\\trm -f lib/lib$(PACKAGE).1.so\\n\\trm -f lib/lib$(PACKAGE).1.dylib\\n\\trm -f $(ROOTMAP)\\n\\trm -f $(DLLIBFILE)\\n\\n.PHONY : winlib shlib lib default clean\\n\\n# DO NOT DELETE\\n\u0000'\n"
    },
    "tmva/test/Makefile" : {
      "ObjectId" : "41c7fe2b1d8332e5da41db51ca333ed82756a35b",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "######################################################################\n\n# Project: TMVA - Toolkit for Multivariate Data Analysis             #\n\n# Code   : Example usage for TMVA analyses                           #\n\n###################################################################### \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tree/CMakeLists.txt" : {
      "ObjectId" : "442e9c724cc58519a4532f60c4c239a41edd0c10",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# special CMakeLists.txt\n\n# special CMakeLists.txt\n\n# special CMakeLists.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 30
      },
      "CommentCount" : 1
    },
    "tree/tree/CMakeLists.txt" : {
      "ObjectId" : "3c44b21415bf0d02fc31bacece956ca0442cd3c1",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT tree/tree package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ROOT_GENERATE_DICTIONARY(ManualTree TTree.h  LINKDEF LinkDef2.h)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tree/treeplayer/CMakeLists.txt" : {
      "ObjectId" : "3241370eeaff522d06f9e22301a85824fc4d0de9",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT tree/treeplayer package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---Extra rules-------------------------------------------------------\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tree/treeviewer/CMakeLists.txt" : {
      "ObjectId" : "5b8e7d804b3cf7b4c3aee107f683feb61acdf705",
      "LastModified" : "2013-04-26T10:41:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# CMakeLists.txt file for building ROOT tree/treeviewer package\n\n# @author Pere Mato, CERN\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 421,
    "CMAKESOURCE" : 4,
    "QMAKE" : 6,
    "MAKEFILE" : 294,
    "AUTOMAKE" : 5
  },
  "ElapsedTime" : 15088
}