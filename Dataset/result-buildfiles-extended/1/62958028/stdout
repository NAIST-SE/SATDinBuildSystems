{
  "Repository" : "62958028",
  "Revision" : "HEAD",
  "ObjectId" : "3b5d9642d831f699bdbe44c63f3195bdc127a918",
  "CommitTime" : "2019-04-12T23:59:41Z",
  "Files" : {
    "docs/Makefile" : {
      "ObjectId" : "cd34294383a84b8d4f721117a7390534fe2247e2",
      "LastModified" : "2018-11-19T15:49:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Minimal makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Put it first so that \"make\" without argument is like \"make help\".\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Catch-all target: route all unknown targets to Sphinx using the new\n\n# \"make mode\" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "voxblox/CMakeLists.txt" : {
      "ObjectId" : "faed5b387541cf515b22771e8ce250ea226309fe",
      "LastModified" : "2019-04-10T15:02:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############\n\n# PROTOBUF #\n\n############\n\n# General idea: first check if we have protobuf catkin, then use that.\n\n# Otherwise use system protobuf.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "####################\n\n# SET SOURCE FILES #\n\n####################\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#############\n\n# LIBRARIES #\n\n#############\n\n# NOTE(mereweth@jpl.nasa.gov) - Be careful when compiling Proto cc files. It is\n\n# best to do so only once (make a shared library for each set of Proto files).\n\n# Otherwise, at some point, you will get errors from double-adding protobuf\n\n# formats, of the following form:\n\n# [libprotobuf ERROR google/protobuf/descriptor_database.cc:57]\n\n# File already exists in database: Block.proto\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Avoid having multiple compiled copies of the same .pb.cc\n\n# file sharing a single copy of libprotobuf.so\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Specify proto headers as public headers so we can install them later.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We need the binary folder in the include directories so we can find the proto\n\n# headers within this library and all dependent packages.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "############\n\n# BINARIES #\n\n############\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#########\n\n# TESTS #\n\n#########\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#add_definitions(-DVISUALIZE_UNIT_TEST_RESULTS)\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##########\n\n# EXPORT #\n\n##########\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# The proto headers are not installed automatically with cs_install,\n\n# we need to specify this here.\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "voxblox_msgs/CMakeLists.txt" : {
      "ObjectId" : "23dba5f86b300aac935a6aab997fb6990a6b4ad7",
      "LastModified" : "2017-08-30T11:55:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##########\n\n# EXPORT #\n\n##########\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "voxblox_ros/CMakeLists.txt" : {
      "ObjectId" : "afefc8580b0a9aee207c498b50bfe3377e27cfcd",
      "LastModified" : "2018-08-13T14:51:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#############\n\n# LIBRARIES #\n\n#############\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############\n\n# BINARIES #\n\n############\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##########\n\n# EXPORT #\n\n##########\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "voxblox_rviz_plugin/CMakeLists.txt" : {
      "ObjectId" : "5b8442ccc643dedd8c4c1bc5d9d19c62a74754dc",
      "LastModified" : "2019-04-10T15:02:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## This setting causes Qt's \"MOC\" generation to happen automatically.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## This plugin includes Qt widgets, so we must include Qt.\n\n## We'll use the version that rviz used so they are compatible.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## pull in all required include dirs, define QT_LIBRARIES, etc.\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "## make target_link_libraries(${QT_LIBRARIES}) pull in all required dependencies\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "## Avoid Qt signals and slots defining \"emit\", \"slots\", etc.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##########\n\n# EXPORT #\n\n##########\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    }
  },
  "FileTypes" : {
    "CMAKE" : 4,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1100
}