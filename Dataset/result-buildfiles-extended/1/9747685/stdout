{
  "Repository" : "9747685",
  "Revision" : "HEAD",
  "ObjectId" : "4b3f8df82953bf25119a9d16d0ae403b7b944d76",
  "CommitTime" : "2019-04-04T11:58:15Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "2bba307c6b6af5ac155e88bf871c51bdf308894e",
      "LastModified" : "2019-04-04T10:01:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# needed for the OpenMP test to work in C++-only project\n\n# (see http://public.kitware.com/Bug/view.php?id=11910)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for target_include_directories\n",
        "Line" : 3,
        "CharPositionInLine" : 39
      },
      "2" : {
        "Text" : "# the policies we care about:\n\n# - CMP0025 - make CMake distinguis between Apple and LLVM clang\n\n# - CMP0042 - make CMake use RPATHs on OSX\n\n# - CMP0060 - make CMake always keep absoult RPATHs, even if installing in implicit directory\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# explicit, since policy CMP0042 didn't work...\n",
        "Line" : 17,
        "CharPositionInLine" : 27
      },
      "4" : {
        "Text" : "# using include() istead of find_package(libcloudph++) to use local CMake code\n\n# and not the system-installed one\n\n#include(${CMAKE_SOURCE_DIR}/libcloudph++-config.cmake)\n\n#if (NOT libcloudphxx_FOUND)\n\n#  message(FATAL_ERROR \"local libcloudph++-config.cmake not found!\")\n\n#endif()\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set a default build type for single-configuration\n\n# CMake generators if no build type is set.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# pointing to local headers\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# enabling additional warnings\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# enabling c++11\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# config-specific flags\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#############################################################################################\n\n# OpenMP\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# maybe some hints are here: https://github.com/src-d/kmcuda/issues/6\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "############################################################################################\n\n# CUDA\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# -std=c++11 will not work, TODO: actually now it would\n",
        "Line" : 71,
        "CharPositionInLine" : 35
      },
      "14" : {
        "Text" : "# trying to figure out compute capability of the current \n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# find the lowest compute capability and set it as virtual architecture, see:\n\n# https://docs.nvidia.com/cuda/cuda-compiler-driver-nvcc/index.html#gpu-compilation\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# see https://devtalk.nvidia.com/default/topic/606195/-solved-nvcc-fatal-unsupported-gpu-architecture-compute_21-/\n",
        "Line" : 129,
        "CharPositionInLine" : 27
      },
      "17" : {
        "Text" : "# enabling c++11\n",
        "Line" : 138,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Release with debug info mode cuda flags\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Debug mode cuda flags\n",
        "Line" : 151,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Release mode cuda flags\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "############################################################################################\n\n# Thrust, location of Thrust can be hinted by setting THRUST_INCLUDE_DIR\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# make nvcc include the thrust found here instead of the one shipped with cuda\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "############################################################################################\n\n# Boost libraries\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#TODO: if boost is not linked in some program, link boost libs to libcloudphxx_lgrngn.so ?\n\n#  set(libcloudphxx_LIBRARIES \"${libcloudphxx_LIBRARIES};${Boost_LIBRARIES}\")\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#TODO: check separately for optional and mandatory components\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "############################################################################################\n\n# BOOST ODEINT VERSION TEST\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# generate a header file with git revision id\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 28
    },
    "bindings/CMakeLists.txt" : {
      "ObjectId" : "147956ae539e01b3a1b1f228eefd916786da0b2e",
      "LastModified" : "2014-10-10T20:25:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "bindings/python/CMakeLists.txt" : {
      "ObjectId" : "cd2719bc4790d066566fdd49a61d36082a609aa9",
      "LastModified" : "2019-02-04T11:14:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# e.g. Mac defaults to .dylib which is not looked for by Python\n",
        "Line" : 3,
        "CharPositionInLine" : 57
      },
      "1" : {
        "Text" : "# informing the Python bindings where to find Python\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# informing the Python bindings where to find Boost.Python \n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# boost python 1.65.0 replaced the booost::python::numeric API with boost::python::numpy\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# requireing Blitz++\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#to retain rpath to libcloudphxx_lgrngn.so linked by libcloudphxx.so after installation\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# where to install python modules (see http://stackoverflow.com/questions/1242904/finding-python-site-packages-directory-with-cmake)\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/FindThrust.cmake" : {
      "ObjectId" : "38e8fc47561bb9997dc6350fc9de9abdb1946ec3",
      "LastModified" : "2019-03-20T10:47:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##=============================================================================\n\n##\n\n##  Copyright (c) Kitware, Inc.\n\n##  All rights reserved.\n\n##  See LICENSE_VTKm.txt for details.\n\n##\n\n##  This software is distributed WITHOUT ANY WARRANTY; without even\n\n##  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n##  PURPOSE.  See the above copyright notice for more information.\n\n##\n\n##  Copyright 2012 Sandia Corporation.\n\n##  Under the terms of Contract DE-AC04-94AL85000 with Sandia Corporation,\n\n##  the U.S. Government retains certain rights in this software.\n\n##\n\n##=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# FindThrust\n\n#\n\n# This module finds the Thrust header files and extrats their version.  It\n\n# sets the following variables.\n\n#\n\n# THRUST_INCLUDE_DIR -  Include directory for thrust header files.  (All header\n\n#                       files will actually be in the thrust subdirectory.)\n\n# THRUST_VERSION -      Version of thrust in the form \"major.minor.patch\".\n\n#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find thrust version\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check for required components\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "include/CMakeLists.txt" : {
      "ObjectId" : "3fbb0e893867e99b624187325a76b3309d76cca6",
      "LastModified" : "2019-03-20T10:47:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libcloudph++-config.cmake" : {
      "ObjectId" : "aff5ba2be499e57b809e35b27bdc1098c9ce4a67",
      "LastModified" : "2019-03-20T10:47:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################################\n\n# the following variables will be set:\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############################################################################################\n\n# libcloudphxx libs and headers \n\n# also work for non-default install location (i.e. for make DESTDIR=<dir> install)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "############################################################################################\n\n# Boost libraries\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#TODO: if boost is not linked in some program, link boost libs to libcloudphxx_lgrngn.so ?\n\n#  set(libcloudphxx_LIBRARIES \"${libcloudphxx_LIBRARIES};${Boost_LIBRARIES}\")\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#TODO: check separately for optional and mandatory components\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "############################################################################################\n\n#list(REMOVE_DUPLICATES libcloudpxxx_INCLUDE_DIRS)\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "models/kinematic_2D/CMakeLists.txt" : {
      "ObjectId" : "ac25c9462bdc9573ae25fd9fcd9e6c36333db06e",
      "LastModified" : "2019-03-20T10:25:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# for CMakePushCheckState\n",
        "Line" : 1,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : "# search for a local version of libcloudphxx\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if no local version found, look for an installed one\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# make the Release flags the default\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# ignore CMake defaults\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "models/kinematic_2D/src/CMakeLists.txt" : {
      "ObjectId" : "3bef82875f92c65a2a5169d296944ce7056e9c7d",
      "LastModified" : "2019-03-20T10:47:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# std::future\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "models/kinematic_2D/tests/CMakeLists.txt" : {
      "ObjectId" : "41cf27c9fe3579e10d5edf9cb2696776052ee71b",
      "LastModified" : "2019-03-20T10:47:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "models/kinematic_2D/tests/paper_GMD_2015/CMakeLists.txt" : {
      "ObjectId" : "c9ceb2a44ce98afe29020fdc8bb3da1476db1259",
      "LastModified" : "2019-03-20T10:47:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11\")\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "models/kinematic_2D/tests/paper_GMD_2015/fig_a/CMakeLists.txt" : {
      "ObjectId" : "3ba39157a89c987a6a80b8be0d7abb2c7d38f868",
      "LastModified" : "2019-03-20T10:47:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# tests from GMD_2015 paper (should be run on CUDA)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO  - test and find correct epsilons (especially for lagrangian sims as they cannot be run on travis)\n\n#add_test(2D_kin_cloud_dims bash -c \"\n\n#  for dir in out_blk_1m out_blk_2m out_lgrngn; do\n\n#    echo 'comparing const.h5'\n\n#    if h5diff $dir/const.h5 ${CMAKE_CURRENT_SOURCE_DIR}/refdata/$dir/const.h5 | grep 'not comparable'; then\n\n#      exit 1    \n\n#    else          # If h5diff encounters files that cannot be compared (for example with different dimesions)\n\n#      exit 0      # it does not return exit 1. Instead it prints out a warning that 'Some files are not comparable'.\n\n#    fi\n\n#  done  \n\n#\")\n\n#add_test(2D_kin_cloud_diff bash -c \"\n\n#  for dir in out_blk_1m out_blk_2m out_lgrngn; do\n\n#    echo 'comparing const.h5'\n\n#    h5diff -v $dir/const.h5                ${CMAKE_CURRENT_SOURCE_DIR}/refdata/$dir/const.h5                                &&\n\n#    echo 'comparing timestep0000000000.h5'                                                                                  &&\n\n#    h5diff  -v $dir/timestep0000000000.h5  ${CMAKE_CURRENT_SOURCE_DIR}/refdata/$dir/timestep0000000000.h5                   &&\n\n#    echo 'comparing timestep0000009000.h5'                                                                                  &&\n\n#    h5diff  -v $dir/timestep0000009000.h5  ${CMAKE_CURRENT_SOURCE_DIR}/refdata/$dir/timestep0000009000.h5                   || exit 1;\n\n#  done  \n\n#\")\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# tests for travis (or any other case where libcloud can't use CUDA)\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "models/kinematic_2D/tests/paper_GMD_2015/fig_b/CMakeLists.txt" : {
      "ObjectId" : "73e7f776bbdde0750dfe5690bb9eccbae18f8a85",
      "LastModified" : "2019-03-20T10:47:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "models/kinematic_2D/tests/paper_GMD_2015/fig_c/CMakeLists.txt" : {
      "ObjectId" : "5008f17763264fa8c8c04c4a0046b22fb3bea9b4",
      "LastModified" : "2019-03-20T10:47:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "models/kinematic_2D/tests/thesis_AJ_2017/CMakeLists.txt" : {
      "ObjectId" : "4e806f7dc2436232a286405e89f897717b26f1a9",
      "LastModified" : "2019-03-20T10:47:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "models/kinematic_2D/tests/thesis_AJ_2017/thesis_chap_6/CMakeLists.txt" : {
      "ObjectId" : "f9cf0aec37ed190dff1bfe4635e9f47901a8b497",
      "LastModified" : "2019-03-20T10:47:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "2ba624c9db6b7b23df63fae4ff6c807469196565",
      "LastModified" : "2019-03-20T10:47:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# allowing runtime choice between CUDA, CPP and OpenMP backends\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "46814056a0e2e22388ad1b18323725e41890b9ae",
      "LastModified" : "2019-03-20T10:47:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#TODO: add test_cuda\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: target_compile_options() // added to CMake on Jun 3rd 2013\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/blk2m_hello_world/CMakeLists.txt" : {
      "ObjectId" : "e4044cfa9935bacc013cae09ff13512f49d03cc4",
      "LastModified" : "2019-03-20T10:47:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/common/CMakeLists.txt" : {
      "ObjectId" : "d692d4a2bc749bd1d5716fef93ee97fcc2e83c67",
      "LastModified" : "2019-03-20T10:47:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/fake_units/CMakeLists.txt" : {
      "ObjectId" : "60f92514eb4cca6b14a203bdd84ab622251d82a2",
      "LastModified" : "2019-03-20T10:47:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/particles/CMakeLists.txt" : {
      "ObjectId" : "b55e7e7d88c80a2d1c01f040790b7c71e9565ea3",
      "LastModified" : "2019-03-20T10:47:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/python/CMakeLists.txt" : {
      "ObjectId" : "b1a3040e44b3373780dbc6c01c36890fce3548a2",
      "LastModified" : "2019-03-20T10:47:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#TODO: search pytest?\n\n#TODO: local search path for python modules (to make it work before make install)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find_interp first, find_libs should find a matching version of libs\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# requireing NumPy\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/python/physics/CMakeLists.txt" : {
      "ObjectId" : "89b85a1234947d48aa0f46ba0bde6d36530bc530",
      "LastModified" : "2019-03-20T10:47:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#TODO: search scipy?\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# non-pytest tests\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the coalescence_onishi_hall test is turned off as not specific enough\n",
        "Line" : 4,
        "CharPositionInLine" : 112
      },
      "3" : {
        "Text" : "#TODO: indicate that tests depend on the lib\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "tests/python/unit/CMakeLists.txt" : {
      "ObjectId" : "f644ea2a7afd39871bc05a4b9e610f9d637b271e",
      "LastModified" : "2019-03-20T10:47:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# non-pytest tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#TODO: indicate that tests depend on the lib\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "## pytest tests run with \"python -m pytest\"\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#TODO: indicate that tests depend on the lib\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "tests/theta/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-03-20T10:47:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/toms748/CMakeLists.txt" : {
      "ObjectId" : "3eb7cd09863e0a202f3651d73138680ae1b4c889",
      "LastModified" : "2019-03-20T10:47:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/zip/CMakeLists.txt" : {
      "ObjectId" : "24672c1e3edc1e83d339dd784f969f5d417f41f6",
      "LastModified" : "2019-03-20T10:47:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 27
  },
  "ElapsedTime" : 1165
}