{
  "Repository" : "3470",
  "Revision" : "HEAD",
  "ObjectId" : "563d41088436fc7c46634e375e013a45a795181a",
  "CommitTime" : "2019-04-14T04:30:41Z",
  "Files" : {
    "tests/frontend-regression-tests/Makefile" : {
      "ObjectId" : "c060fabc7b91c02feab9478b3969582f73e5bb9b",
      "LastModified" : "2016-07-17T21:59:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# a micro-test that can run super quickly during development\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "v3/codeopticon/js/Makefile" : {
      "ObjectId" : "aa0ce4dd4d6e161e63bc48d3640f070aa0971c06",
      "LastModified" : "2016-05-28T20:11:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# compile typescript into javascript\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "v3/codeopticon/server/Makefile" : {
      "ObjectId" : "e40a1ca4b41473474fd98a3496bef7f3c1878002",
      "LastModified" : "2016-05-28T16:18:59Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "v3/opt_togetherjs/Makefile" : {
      "ObjectId" : "d2f3fc45b6ea5db1891c90cdcc9b604957722372",
      "LastModified" : "2017-10-28T19:18:15Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# --host 0.0.0.0 is required to make the server PUBLIC-FACING!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# install globally\n",
        "Line" : 7,
        "CharPositionInLine" : 31
      },
      "2" : {
        "Text" : "# install locally\n",
        "Line" : 8,
        "CharPositionInLine" : 40
      },
      "3" : {
        "Text" : "#jshint server.js && forever -l togetherjs_server.log server.js --host 0.0.0.0 --port 30035\n",
        "Line" : 11,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Try to run with the following options to (hopefully!) prevent it from\n\n# mysteriously crashing and failing to restart (use --spinSleepTime to\n\n# wait a bit longer before attempting to restart it upon a crash)\n\n#\n\n# on Linode:\n",
        "Line" : 13,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 5
    },
    "v4-cokapi/Makefile" : {
      "ObjectId" : "1133f369e92b9d71a7ad49788d167277049de49b",
      "LastModified" : "2018-08-13T18:13:40Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# start both http and https servers\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make dependencies for cokapi\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "v4-cokapi/backends/c_cpp/Makefile" : {
      "ObjectId" : "6b7738c83985c2b44b53b4904d2f368e90f61387",
      "LastModified" : "2018-03-06T05:34:33Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Docker-specific targets\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# build a docker container\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# build everything first HERE outside the container (yeah, #leaky #abstraction)\n",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "3" : {
        "Text" : "# build and install the latest Valgrind with my custom pgbovine code\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# older targets\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "v4-cokapi/backends/c_cpp/tests/Makefile" : {
      "ObjectId" : "49abdc1274f025ea5110a54f145125ba6b6a8dd6",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# old crufty code ...\n\n#%.trace: %.c ../valgrind-3.11.0/inst/bin/valgrind\n\n#\t@gcc -ggdb -O0 -fno-omit-frame-pointer $< -o $(basename $@).exe\n\n#\t@stdbuf -o0 ../valgrind-3.11.0/inst/bin/valgrind --tool=memcheck --source-filename=$< --trace-filename=$(basename $<).vgtrace ./$(basename $<).exe || true\n\n#\t@python ../vg_to_opt_trace.py --prettydump $< > $(basename $<).trace || true\n\n#\n\n#%.trace: %.cpp ../valgrind-3.11.0/inst/bin/valgrind\n\n#\t@g++ -ggdb -O0 -fno-omit-frame-pointer $< -o $(basename $@).exe\n\n#\t@stdbuf -o0 ../valgrind-3.11.0/inst/bin/valgrind --tool=memcheck --source-filename=$< --trace-filename=$(basename $<).vgtrace ./$(basename $<).exe || true\n\n#\t@python ../vg_to_opt_trace.py --prettydump $< > $(basename $<).trace || true\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/Makefile.am" : {
      "ObjectId" : "4ad7b16755fd19fab7ddfefcfed6254c5d97980f",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Put docs last because building the HTML is slow and we want to get\n\n# everything else working before we try it.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We include all the base .supp files in the distribution, but not\n\n# default.supp, as it is built from the base .supp files at compile-time.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Preprend @PERL@ because tests/vg_regtest isn't executable\n\n## Ensure make exits with error if PERL fails or post_regtest_checks fails.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Nb: gdbserver_tests are put in exp-regtest rather than nonexp-regtest\n\n# because they are tested with various valgrind tools, so might be using\n\n# an experimental tool.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Preprend @PERL@ because tests/vg_perf isn't executable\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Nb: no need to include any Makefile.am files here, or files included from\n\n# them, as automake includes them automatically.  Also not COPYING, README\n\n# or NEWS.\n\n# We include valgrind.spec as well as valgrind.spec.in to save packagers\n\n# from having to run configure (bug 188560).\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Need config.h in the installed tree, since some files depend on it\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/auxprogs/Makefile.am" : {
      "ObjectId" : "f5654c169210423851f5cd314509933040028761",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# valgrind_listener  (built for the primary target only)\n\n# valgrind-di-server (ditto)\n\n#----------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If there is no secondary platform, and the platforms include x86-darwin,\n\n# then the primary platform must be x86-darwin.  Hence:\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If there is no secondary platform, and the platforms include x86-darwin,\n\n# then the primary platform must be x86-darwin.  Hence:\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# getoff-<platform>\n\n# Used to retrieve user space various offsets, using user space libraries.\n\n#----------------------------------------------------------------------------\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The link flags for this are tricky, because we want to build it for\n\n# both the primary and secondary platforms, and add \n\n# \"-Wl,-read_only_relocs -Wl,suppress\" to whichever of those is x86-darwin,\n\n# if any.  Hence there's a double-nested conditional that adds to the\n\n# LDFLAGS in both cases.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If there is no secondary platform, and the platforms include x86-darwin,\n\n# then the primary platform must be x86-darwin.  Hence:\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If there is a secondary platform, and the platforms include x86-darwin,\n\n# then the primary platform must be amd64-darwin and the secondary platform\n\n# must be x86-darwin.  Hence:\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# General stuff\n\n#----------------------------------------------------------------------------\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/cachegrind/Makefile.am" : {
      "ObjectId" : "a587d2412459419c88e23e296197949b4490aed1",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Headers, etc\n\n#----------------------------------------------------------------------------\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# cg_merge (built for the primary target only)\n\n#----------------------------------------------------------------------------\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If there is no secondary platform, and the platforms include x86-darwin,\n\n# then the primary platform must be x86-darwin.  Hence:\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# cachegrind-<platform>\n\n#----------------------------------------------------------------------------\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/cachegrind/tests/Makefile.am" : {
      "ObjectId" : "e21d52d5c3385ce4e580422cd8283149b480ddae",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# C ones\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/cachegrind/tests/x86/Makefile.am" : {
      "ObjectId" : "1d141efc4a9d3fbcd6a8f922bcd6b2a6eb16ef67",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/callgrind/Makefile.am" : {
      "ObjectId" : "56e8a04c239733514006e3dcae95444ad8088a1c",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Headers, etc\n\n#----------------------------------------------------------------------------\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# callgrind-<platform>\n\n#----------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We sneakily include \"cg_branchpred.c\" and \"cg_arch.c\" from cachegrind\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/callgrind/tests/Makefile.am" : {
      "ObjectId" : "da4a426cdcf3f290d44bfd246aa82eecc458bd79",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/coregrind/Makefile.am" : {
      "ObjectId" : "7f25f489df61d0e7d3620c6ce0bf103c1e96649a",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Be very careful when renaming any files, targets, whatever, in this\n\n# Makefile.  Various parts of the system rely on these names having\n\n# particular forms.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Basics, flags\n\n#----------------------------------------------------------------------------\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# The launcher.  Built for the primary target only.\n\n#----------------------------------------------------------------------------\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If there is no secondary platform, and the platforms include x86-darwin,\n\n# then the primary platform must be x86-darwin.  Hence:\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# On Android we must ask for non-executable stack, not sure why.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Some darwin specific stuff is needed as ptrace is not\n\n# fully supported on MacOS. Till we find someone courageous\n\n# having access to Darwin, 'none' implementation is used.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If there is no secondary platform, and the platforms include x86-darwin,\n\n# then the primary platform must be x86-darwin.  Hence:\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Darwin Mach stuff\n\n#----------------------------------------------------------------------------\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Mach RPC interface definitions\n\n# Here are some more .defs files that are not used, but could be in the\n\n# future:\n\n#\tclock.defs \\\n#\tclock_priv.defs \\\n#\tclock_reply.defs \\\n#\texc.defs \\\n#\thost_priv.defs \\\n#\thost_security.defs \\\n#\tledger.defs \\\n#\tlock_set.defs \\\n#\tmach_host.defs \\\n#\tmach_port.defs \\\n#\tnotify.defs \\\n#\tprocessor.defs \\\n#\tprocessor_set.defs \\\n#\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Be careful w.r.t. parallel builds.  See section 27.9 of the automake info\n\n# page, \"Handling Tools that Produce many Outputs\".\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Headers\n\n#----------------------------------------------------------------------------\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# libcoregrind-<platform>.a\n\n#----------------------------------------------------------------------------\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# libreplacemalloc_toolpreload-<platform>.a\n\n#----------------------------------------------------------------------------\n",
        "Line" : 495,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# vgpreload_core-<platform>.a\n\n#----------------------------------------------------------------------------\n",
        "Line" : 519,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Give the vgpreload_core library a proper soname so it can be easily\n\n# recognized during reading of debug information.\n",
        "Line" : 550,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# gdbserver xml target descriptions\n\n#----------------------------------------------------------------------------\n",
        "Line" : 560,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# so as to make sure these get copied into the install tree\n",
        "Line" : 661,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# so as to make sure these get copied into the tarball\n",
        "Line" : 665,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# General stuff\n\n#----------------------------------------------------------------------------\n",
        "Line" : 668,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Darwin linker kludges\n\n#----------------------------------------------------------------------------\n",
        "Line" : 685,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/docs/Makefile.am" : {
      "ObjectId" : "bdb36cbf69db4efe37f961a860f08b1ab73ad9c4",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##-------------------------------------------------------------\n\n## HACK: stuff to avoid making the print docs if installing the\n\n## tools to do so is impractical / too difficult\n\n##-------------------------------------------------------------\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Comment out the next line to skip building print docs.  The default\n\n# is not to skip building print docs.  Note, after changing it\n\n# you need to re-run autogen.sh and configure to make it take effect.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##-------------------------------------------------------------\n\n## END OF HACK\n\n##-------------------------------------------------------------\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##-------------------------------------------------------------------\n\n## Below here is more ordinary make stuff...\n\n##-------------------------------------------------------------------\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# file to log print output to\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# validation stuff\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# validate with docbook 4.3 'cos it supports xml:base natively\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# stylesheet processor\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# stylesheets\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# The text version of the FAQ.\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# the valgrind manpages\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# chunked html, on a chapter-by-chapter basis\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# pdf and postscript\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# If the docs have been built, install them.  But don't worry if they have \n\n# not -- developers do 'make install' not from a 'make dist'-ified distro all\n\n# the time.\n\n#\n\n# Note: this is done at 'make install' time.\n\n# Note 2: the ifeq/else/endif have to be indented one space \n\n# because otherwise it seems that automake thinks it should\n\n# be the one to handle the else/endif parts, not GNU make\n\n# as we intend.\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This is done at 'make dist' time.  It builds the html docs, print\n\n# docs and man pages and copies them into the docs/ directory in the\n\n# tarball.\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# -----------------------------------------------------------------------\n\n# Note: the rest of this file is nothing to do with the normal build\n\n# tree.  The stuff below contains special targets for web-site\n\n# artefacts.\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# chunked html with no html/body tags, css, or top nav, to fit into the website\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# valkyrie carries around her own copy of the valgrind manual\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# html.tar.bz2, .pdf, .ps.bz2 files for downloading from the website\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/drd/Makefile.am" : {
      "ObjectId" : "9ba4c58e00ad44239a98cf94616b4fe066a23511",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Headers, flags\n\n#----------------------------------------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#DRD_CFLAGS += -DENABLE_DRD_CONSISTENCY_CHECKS\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# drd-<platform>\n\n#----------------------------------------------------------------------------\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# vgpreload_drd-<platform>.so\n\n#----------------------------------------------------------------------------\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/drd/tests/Makefile.am" : {
      "ObjectId" : "2885391638ee06148bf291a601f9a2dd54eed25a",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# clang 3.3 will generate errors about libstdc++ headers from \n\n# gcc (Ubuntu/Linaro 4.6.3-1ubuntu5) 4.6.3\n",
        "Line" : 412,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# nothing, i.e. not -lpthread\n",
        "Line" : 479,
        "CharPositionInLine" : 30
      },
      "2" : {
        "Text" : "# nothing, i.e. not -lpthread\n",
        "Line" : 482,
        "CharPositionInLine" : 30
      },
      "3" : {
        "Text" : "# Note: -Wl,--no-as-needed is a workaround for\n\n# https://bugs.launchpad.net/ubuntu/+source/gcc-defaults/+bug/1228201\n",
        "Line" : 539,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/exp-bbv/Makefile.am" : {
      "ObjectId" : "78d9e53287cfdeff18cb02391e270c190dffa51b",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# exp-bbv-<platform>\n\n#----------------------------------------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/exp-bbv/tests/Makefile.am" : {
      "ObjectId" : "5261cee8ed65f6761f044394c76e827862e1c86d",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Platform-specific tests\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/exp-bbv/tests/amd64-linux/Makefile.am" : {
      "ObjectId" : "d3eddb3e2385db01bc7bd05a2570bd1de9bdd2b9",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# To compile the ll testcase, the compiler needs to support -Xassembler\n\n# ICC does not do that\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/exp-bbv/tests/arm-linux/Makefile.am" : {
      "ObjectId" : "9b91b287506be44fb178b2e725a80cd225f929bf",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/exp-bbv/tests/ppc32-linux/Makefile.am" : {
      "ObjectId" : "56646f4a1a6fe8b528a4ca57425cd23f37c3396c",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/exp-bbv/tests/x86-linux/Makefile.am" : {
      "ObjectId" : "a16061f7aa68ffcef5cafade086b53e5d492a537",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/exp-bbv/tests/x86/Makefile.am" : {
      "ObjectId" : "3857aaef2e45ffe3903756de60b2a124b4a291a4",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/exp-dhat/Makefile.am" : {
      "ObjectId" : "647b72bb28f0a7afa3cdff8a7b546f1c2698f3c3",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#SUBDIRS += perf\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Headers, etc\n\n#----------------------------------------------------------------------------\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#bin_SCRIPTS = dh_print\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# exp_dhat-<platform>\n\n#----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# vgpreload_exp_dhat-<platform>.so\n\n#----------------------------------------------------------------------------\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/exp-dhat/tests/Makefile.am" : {
      "ObjectId" : "8b137891791fe96927ad78e64b0aad7bded08bdc",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/exp-sgcheck/Makefile.am" : {
      "ObjectId" : "211a5ffaddcb7aa1c47da1eb1590d150dbebcd6a",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Headers, etc\n\n#----------------------------------------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# exp-sgcheck-<platform>\n\n#----------------------------------------------------------------------------\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# vgpreload_exp-sgcheck-<platform>.so\n\n#----------------------------------------------------------------------------\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/exp-sgcheck/tests/Makefile.am" : {
      "ObjectId" : "fadf0e1df7673cd81ed18874890827ccb7e68cd9",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# DDD: not sure if these ones should work on Darwin or not... if not, should\n\n# be moved into x86-linux/.\n\n#if ! VGCONF_OS_IS_DARWIN\n\n#   check_PROGRAMS += \\\n#\tccc\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#endif\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# To make it a bit more realistic, build hackedbz2.c with at \n\n# least some optimisation.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C ones\n\n#pth_create_LDADD\t= -lpthread\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ ones\n\n#ccc_SOURCES\t\t= ccc.cpp\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build shared object for preen_invars\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/gdbserver_tests/Makefile.am" : {
      "ObjectId" : "bdf0c5b84b52ed64e572623bacacb5011837ec09",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# OS-specific tests \n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/gdbserver_tests/solaris/Makefile.am" : {
      "ObjectId" : "e9ebcc8fcc3e3241d5abdac1a14d2ac6e6a3dc4f",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/helgrind/Makefile.am" : {
      "ObjectId" : "b6f1b894bbd97a8a07bbd6123da932bde4e63537",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Headers, etc\n\n#----------------------------------------------------------------------------\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# helgrind-<platform>\n\n#----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# vgpreload_helgrind-<platform>.so\n\n#----------------------------------------------------------------------------\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/helgrind/tests/Makefile.am" : {
      "ObjectId" : "8a0d6e650db768f115050d89d3b7196e56e065bd",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Wrapper headers used by some check programs.\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# XXX: tc18_semabuse uses operations that are unsupported on Darwin.  It\n\n# should be conditionally compiled like tc20_verifywrap is.\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# DDD: it seg faults, and then the Valgrind exit path hangs\n\n# JRS 29 July 09: it craps out in the stack unwinder, in\n\n#==13480==    at 0xF00B81FF: ??? f00b8180 VG_(get_StackTrace_wrk)\n\n#==13480==    by 0xF00B83F8: ??? f00b8340 VG_(get_StackTrace)\n\n#==13480==    by 0xF009FE19: ??? f009fd70 record_ExeContext_wrk\n\n#==13480==    by 0xF009D92E: ??? f009d8c0 construct_error\n\n#==13480==    by 0xF009F001: ??? f009eef0 VG_(maybe_record_error)\n\n#==13480==    by 0xF0081F80: ??? f0081f00 HG_(record_error_misc)\n\n#==13480==    by 0xF0089C00: ??? f0089b80 evh__pre_thread_ll_exit\n\n#==13480==    by 0xF01111D1: ??? f0111070 run_a_thread_NORETURN\n\n#==13480==    by 0xF0111512: ??? f0111500 start_thread_NORETURN\n\n# when the thread being unwound is at __bsdthread_terminate+0\n\n#\n\n# Like Tom says, the stack unwinder protection is bollocks.\n\n# We should junk all previous schemes and simply get the \n\n# stack unwinder to consult aspacem at each frame (cache-accelerated,\n\n# of course) to check each page it visits is accessible.\n\n#\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/include/Makefile.am" : {
      "ObjectId" : "ccfcd2778feb0517f1e5b956d056afc969161e03",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# The \"nobase\" means that the vki/ path on some of them will be preserved\n\n# when they are installed into $(includedir)/valgrind.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/lackey/Makefile.am" : {
      "ObjectId" : "39ada21fddc6715948f8a6f14700959285edb780",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# lackey-<platform>\n\n#----------------------------------------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/lackey/tests/Makefile.am" : {
      "ObjectId" : "e16c9a13edd0e0862c4d90ac9f2eba49c44f297b",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/massif/Makefile.am" : {
      "ObjectId" : "29334035d460b186c9f137ee4a7dc452d26fe88b",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Headers, etc\n\n#----------------------------------------------------------------------------\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# massif-<platform>\n\n#----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# vgpreload_massif-<platform>.so\n\n#----------------------------------------------------------------------------\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/massif/tests/Makefile.am" : {
      "ObjectId" : "531d8e6e18a68bd27e54de412ba87e3a1db71a7e",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# C++ tests\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/memcheck/Makefile.am" : {
      "ObjectId" : "476bc70dfa7954f6e561eeb26131c53a91a2979d",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Headers\n\n#----------------------------------------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# memcheck-<platform>\n\n#----------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# mc_main.c contains the helper function for memcheck that get called\n\n# all the time. To maximise performance compile with -fomit-frame-pointer\n\n# Primary beneficiary is x86.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# vgpreload_memcheck-<platform>.so\n\n#----------------------------------------------------------------------------\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# mc_replace_strmem.c runs on the simulated CPU, and it often appears\n\n# in stack traces shown to the user.  It is built with\n\n# -fno-omit-frame-pointer so as to guarantee robust backtraces on x86,\n\n# on which CFI based unwinding is not the \"normal\" case and so is\n\n# sometimes fragile.\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/memcheck/tests/Makefile.am" : {
      "ObjectId" : "68d9ca16e5374e482d6fcc4d744988b287ee0297",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Arch-specific tests.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# OS-specific tests\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Platform-specific tests\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sun Studio assembler fails on \"IDENT too long\"\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#AM_CFLAGS   += -mfloat-abi=softfp\n\n#AM_CXXFLAGS += -mfloat-abi=softfp\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This requires optimisation in order to get just one resulting error.\n",
        "Line" : 480,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Apply -O so as to run in reasonable time.\n",
        "Line" : 483,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Don't allow GCC to inline memcpy() and strcpy(),\n\n# because then we can't intercept it\n",
        "Line" : 487,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# To make it a bit more realistic, have some optimisation enabled\n\n# for the varinfo tests.  We still expect sane results.\n",
        "Line" : 519,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Build shared object for varinfo5\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Build shared object for wrap7\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/memcheck/tests/amd64-linux/Makefile.am" : {
      "ObjectId" : "9b31b8001c10531dfe436ebee830fbb03344082a",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/memcheck/tests/amd64-solaris/Makefile.am" : {
      "ObjectId" : "4d0ea14e4731ac5266f3045688fa2764184034b8",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/memcheck/tests/amd64/Makefile.am" : {
      "ObjectId" : "dc48f417c61f7ff0ac258b91c11698291ae8d60d",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# clang 3.5.0 barfs about -mfancy-math-387\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/memcheck/tests/common/Makefile.am" : {
      "ObjectId" : "d10f9a49ed523ffda0579cf8f6a3524380da6883",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/memcheck/tests/darwin/Makefile.am" : {
      "ObjectId" : "4e34a22ec2f7fbf408e6e091bf8987685f81c42b",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/memcheck/tests/linux/Makefile.am" : {
      "ObjectId" : "d8a7d4d94184e42bb13fd67f491fa01986088ee9",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/memcheck/tests/ppc32/Makefile.am" : {
      "ObjectId" : "26b95a22446de485acd7eeeb92a74478e0ac9d1d",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/memcheck/tests/ppc64/Makefile.am" : {
      "ObjectId" : "176d680f097e875c2f07e288f0034b7c3950ba29",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/memcheck/tests/s390x/Makefile.am" : {
      "ObjectId" : "67ae8c293498a9b3ff163aca4bba9bc290a8bb64",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/memcheck/tests/solaris/Makefile.am" : {
      "ObjectId" : "0adfa6a43f5ce320ee6aac44685078d9e72a348a",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/memcheck/tests/vbit-test/Makefile.am" : {
      "ObjectId" : "9888fadf64493f3dffee1119e7180739c2dee658",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Headers\n\n#----------------------------------------------------------------------------\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# vbit_test\n\n#----------------------------------------------------------------------------\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/memcheck/tests/x86-linux/Makefile.am" : {
      "ObjectId" : "e9fdbac5b3b5326a4876776feb6b5bd7626ee2ba",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/memcheck/tests/x86-solaris/Makefile.am" : {
      "ObjectId" : "3759fe667d36059f32b598870ee85e1443b61f46",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/memcheck/tests/x86/Makefile.am" : {
      "ObjectId" : "557de6b11a62142e9fffd79805d8620f1495b978",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# fpeflags must use these flags -- bug only occurred with them.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/mpi/Makefile.am" : {
      "ObjectId" : "fca5d648ee822b2bb685c05004601f55ba062fcb",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# HACK WARNING: automake isn't good at supporting non-$(CC) compilers.\n\n# But we need to use $(MPI_CC) for the MPI stuff.  So we have this mpi stuff\n\n# in its own directory so we can use the following blunt instruments, which\n\n# override the C compiler and all the default flags.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# libmpiwrap-<platform>.so\n\n#----------------------------------------------------------------------------\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## NOTE: this logic, the AM_FLAG_M3264_ logic in ../Makefile.all.am, and the\n\n## mflag_primary/mflag_secondary logic in ../configure.in unfortunately all need\n\n## to be kept in sync with each other\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# General stuff\n\n#----------------------------------------------------------------------------\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/none/Makefile.am" : {
      "ObjectId" : "753687eecbaa1da6c41e516b1ea128ccce9e81d8",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# none-<platform>\n\n#----------------------------------------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/none/tests/Makefile.am" : {
      "ObjectId" : "54f2a7eec34753c1b98c5e6f1b591acce625435a",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Arch-specific tests.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# OS-specific tests\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Platform-specific tests\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This doesn't appear to be compilable on Darwin.\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# clang does now know -ansi\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Extra stuff for C tests\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# C++ tests\n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/none/tests/amd64-darwin/Makefile.am" : {
      "ObjectId" : "b231b30fcbeaa19fb7f8e4c00121690a2eb22bac",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/none/tests/amd64-linux/Makefile.am" : {
      "ObjectId" : "3e5a959aae6e377f2a11a76d2adb870e72def77c",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/none/tests/amd64-solaris/Makefile.am" : {
      "ObjectId" : "3830fbee0e2b7456ca99d38c07095e10fe5b4f9e",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/none/tests/amd64/Makefile.am" : {
      "ObjectId" : "be4113b6c800ce0dda6ba5908141014c40d1182b",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Explicitly include insn_sse3 even if ! BUILD_SSE3_TESTS, \n\n# to avoid packaging screwups if 'make dist' is run on a machine\n\n# which failed the BUILD_SSE3_TESTS test in configure.in.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DDD: these need to be made to work on Darwin like the x86/ ones were.\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# generic C ones\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/none/tests/arm/Makefile.am" : {
      "ObjectId" : "4507a20b469043e844b39647b53b10cce7c71a7c",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# These two are specific to their ARM/Thumb respectively and so we\n\n# hardwire -marm/-mthumb.  neon64 and neon128 are compilable on both,\n\n# however, ask for them to be compiled on thumb, as that looks\n\n# like that's going to be the more common use case.  They also\n\n# need special helping w.r.t -mfpu and -mfloat-abi, though.\n\n# Also force -O0 since -O takes hundreds of MB of memory \n\n# for v6intThumb.c.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/none/tests/arm64/Makefile.am" : {
      "ObjectId" : "f06e30b89fe3450e14398c03a7c2999618b61606",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/none/tests/darwin/Makefile.am" : {
      "ObjectId" : "1473e80089e53aa4efcddfa2afc262d95ec6d1e7",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/none/tests/linux/Makefile.am" : {
      "ObjectId" : "f407cb473abe485b3065abd179e673e96450127c",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Special needs\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/none/tests/mips32/Makefile.am" : {
      "ObjectId" : "fb6fa239db0af063ca7e4d53eb1ad4dd440fb0eb",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# C++ tests\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/none/tests/mips64/Makefile.am" : {
      "ObjectId" : "2876030afef5bdf252183e6d249e820cd7b3b315",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# C++ tests\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/none/tests/ppc32/Makefile.am" : {
      "ObjectId" : "196239e0b9f2014b3ef2f6ae8f7a8dc47e559e03",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/none/tests/ppc64/Makefile.am" : {
      "ObjectId" : "a4f71e2624f1b711b55b141f658744725ebeaa80",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/none/tests/s390x/Makefile.am" : {
      "ObjectId" : "6545117e32347929a43b60db5f075596084ec31a",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/none/tests/scripts/Makefile.am" : {
      "ObjectId" : "07b4c8e32e9e6cb7ea3f91b890daaae1ceafc0d3",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/none/tests/solaris/Makefile.am" : {
      "ObjectId" : "1860bf89d59cec403cfb2ee2f82e880bebed273a",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/none/tests/tilegx/Makefile.am" : {
      "ObjectId" : "e779ce62fa4cc47de5986e0c8824eadfa021c64d",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/none/tests/x86-darwin/Makefile.am" : {
      "ObjectId" : "a11fd45d192e97b891fc3352201ecfe65957fb68",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/none/tests/x86-linux/Makefile.am" : {
      "ObjectId" : "2c866935910b09aff5f19a7df7dbfe6ef158115c",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/none/tests/x86-solaris/Makefile.am" : {
      "ObjectId" : "ee69b23539907c1b7816f42f7ac8a17b444382a7",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/none/tests/x86/Makefile.am" : {
      "ObjectId" : "2b35cd9056e3a5a697f0b43bfc15d2c476b48466",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Sun Studio assembler fails to build some tests (illegal mnemonic).\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sun Studio assembler fails to build some tests (illegal mnemonic).\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Explicitly include insn_sse3 even if ! BUILD_SSE3_TESTS, \n\n# to avoid packaging screwups if 'make dist' is run on a machine\n\n# which failed the BUILD_SSE3_TESTS test in configure.in.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## FIXME: move lzcnt32 to SSE4 conditionalisation, when that happens.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Sun Studio assembler fails to assemble the bound instruction\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# clang errors out complaining that %eax as the 1st operand in the bound\n\n# insn is an invalid operand.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Sun Studio assembler fails to assemble pushw %fs, popw %fs\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Some of the tests (bug125959_x86, bug152818_x86, insn_*) need\n\n# -mdynamic-no-pic.  I tried setting *_CFLAGS separately for all of them,\n\n# but it caused problems with the generation of insn_*.c.  So just use this\n\n# crude approach of setting -mdynamic-no-pic for all tests in this\n\n# directory.\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# fpu_lazy_eflags must use these flags -- the bug only occurred with them.\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/perf/Makefile.am" : {
      "ObjectId" : "ab504e937530cad9657d0157a5d21e9bea9d1a50",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Extra stuff\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/shared/Makefile.am" : {
      "ObjectId" : "df3a4ac07de7e6524476322e69168a7ab26baab8",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# We need to list all source files here to make sure they are included in\n\n# the make dist target.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/solaris/Makefile.am" : {
      "ObjectId" : "6e663798e227d887c8097c6d2374d7fb39e9f76f",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# We need to list all files here to make sure they are included in\n\n# the make dist target.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "v4-cokapi/backends/c_cpp/valgrind-3.11.0/tests/Makefile.am" : {
      "ObjectId" : "9c0cc3a053272e39e5dfa754e66de1ef038a745b",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/java/Makefile" : {
      "ObjectId" : "6d1b595855c77dc196b09c35f834246e5c7730d1",
      "LastModified" : "2018-03-06T18:20:47Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# build a docker container\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# test running the Java backend in the docker container on a simple test input JSON passed as a command-line arg:\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "v4-cokapi/backends/java/java_jail/cp/Makefile" : {
      "ObjectId" : "2707e1e756551a34f746192ec44128a9e2c81076",
      "LastModified" : "2018-03-06T18:20:47Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "v4-cokapi/backends/javascript/Makefile" : {
      "ObjectId" : "3f6c471950aadb021280ba46bb86b6c7f49a6614",
      "LastModified" : "2018-03-05T05:00:05Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Docker-specific targets\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# build a docker container\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# run regression test suite as root\n",
        "Line" : 11,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# older targets\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# to run on a specific input file: make infile=tests/fact.js\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# to run on a specific input file: make trace infile=tests/fact.js\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# to run on a specific input file: make pretty infile=tests/fact.js\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# rely on package.json\n",
        "Line" : 43,
        "CharPositionInLine" : 13
      },
      "CommentCount" : 8
    },
    "v4-cokapi/backends/python-anaconda/Makefile" : {
      "ObjectId" : "5a457cb46679f1ada9b0a63033321e0fa12ba6ab",
      "LastModified" : "2018-08-13T18:13:40Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Docker-specific targets\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# build a docker container\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# run this *first*!!!\n",
        "Line" : 5,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 3
    },
    "v4-cokapi/backends/ruby/Makefile" : {
      "ObjectId" : "64c190bee7b9e7e11aba3da2af83e6a781313cbb",
      "LastModified" : "2018-08-13T18:13:40Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# build a docker container\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# run regression test suite as root\n",
        "Line" : 9,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "v5-unity/tests/frontend-tests/Makefile" : {
      "ObjectId" : "deedc226ccb3eb14258d7f90f896c447b46c3a65",
      "LastModified" : "2018-08-13T18:13:40Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# remove all out files and diff files\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 13,
    "AUTOMAKE" : 74
  },
  "ElapsedTime" : 1185
}