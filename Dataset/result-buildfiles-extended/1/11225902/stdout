{
  "Repository" : "11225902",
  "Revision" : "HEAD",
  "ObjectId" : "67875b71ef68511277ec2dc8224f613487cefce9",
  "CommitTime" : "2019-03-21T17:30:14Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "e50d7ebc59d59f0838a15a030e8cacf74c9bba88",
      "LastModified" : "2019-02-28T04:56:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake 3.3 or later is required for COMPILE_LANGUAGE.\n\n# It can be easily obtained and used without superuser privileges\n\n# even if the system has an older version of CMake installed.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake 3.0 is used for generator expressions in install(FILES).\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Set the path to CMake modules.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the c++11 flag without GNU extensions.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable @rpath support on OS X.\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Only interpret `if` arguments as variables or keywords when unquoted.\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Set output directories.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Set the default Java search path.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Get optional modules.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Checks if the C compiler supports flag and if it does, adds it to the target.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Sets ${var} to TRUE if module ${name} is enabled.\n\n# Usage:\n\n#   check_module(<name> <var> [EXTERNAL])\n\n# If EXTERNAL is specified, check_module initializes an external dependency\n\n# in thirdparty/${name}.\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Module already checked.\n",
        "Line" : 96,
        "CharPositionInLine" : 14
      },
      "12" : {
        "Text" : "# Get a dependency using git.\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Disable useless MSVC warnings suggesting nonportable \"secure\" alternatives.\n",
        "Line" : 130,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Adds a prefix to arguments.\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Adds a shared AMPL library which by convention doesn't have any prefix\n\n# and has a suffix \".dll\" on all platforms.\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Specify RUNTIME DESTINATION and LIBRARY DESTINATION, but not\n\n# DESTINATION or ARCHIVE_DESTINATION because we don't want import\n\n# libraries installed.\n",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Get object files.\n",
        "Line" : 179,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Add library.\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Add library linked with dynamic runtime.\n",
        "Line" : 202,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Link libraries.\n",
        "Line" : 215,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Link target with libraries built with dynamic runtime.\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# use wine if cross compiling from unix to windows\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Produce a warning because expr-info.cc can be out of date but cannot be\n\n# re-generated because we are cross compiling.\n",
        "Line" : 252,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Link with librt for clock_gettime (Linux on i386).\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Check if variadic templates are working and not affected by GCC bug 39653:\n\n# https://gcc.gnu.org/bugzilla/show_bug.cgi?id=39653\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# GSL tests are run separately\n",
        "Line" : 330,
        "CharPositionInLine" : 28
      },
      "27" : {
        "Text" : "# Add a target that generates a file with solver and library versions.\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Check for invalid module names.\n",
        "Line" : 353,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "dc4d3d3680d831345d6e631d2678fb64709620f4",
      "LastModified" : "2016-03-25T18:54:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check requirements.\n\n# Use specific version of Sphinx which fixes local search and has\n\n# better C++ support.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get .rst file names from amplgsl.cc.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add a command to extract the amplgsl documentation from amplgsl.cc.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add commands to copy .rst files to the binary directory.\n\n# This is needed because some of the .rst files are autogenerated and\n\n# therefore should be placed in the binary directory, while Sphinx only\n\n# looks for source files in subdirectories of the directory containing\n\n# the master file (index.rst).\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "solvers/CMakeLists.txt" : {
      "ObjectId" : "aa9eb481aed62eb71964ef623e29a8438fe64183",
      "LastModified" : "2018-05-04T10:35:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Assigns the value of input_var to output_var if input_var is defined.\n\n# Otherwise assigns the values of ARGN to output_var.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Adds an AMPL solver.\n\n#\n\n# Usage:\n\n#   add_ampl_solver(<name> [DLL_RUNTIME] [MODULE module]\n\n#     [source...] [INCLUDE_DIRS dir...] [LIBRARIES lib...] [EXTERNAL])\n\n#\n\n# If DLL_RUNTIME option is given the solver is linked with DLL MSVC runtime\n\n# on Windows.\n\n#\n\n# The MODULE option specifies the CMake module name used to check for solver\n\n# libraries. If it is omitted, add_ampl_solver looks in support/cmake for\n\n# a module with a name matching Find<name>.cmake (case-insensitive).\n\n#\n\n# Sources are relative to the solver diretory. If no sources are passed to\n\n# add_ampl_solver, it uses the default list of sources <name>.cc, <name>.h.\n\n#\n\n# INCLUDE_DIRS gives a list of solver include directories. If omitted,\n\n# add_ampl_solver uses <module>_INCLUDE_DIRS.\n\n#\n\n# LIBRARIES gives a list of solver libraries. If omitted, add_ampl_solver\n\n# uses <module>_LIBRARIES.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check if the solver is installed.\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Handle arguments.\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Add directory name to sources.\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Add a solver static library to be linked with the shared library and\n\n# the executable.\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Add a solver shared library.\n",
        "Line" : 112,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Add a solver executable.\n",
        "Line" : 118,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Remove -pedantic because it causes warnings about long string literals\n\n# when compiling the cplex driver.\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Excludes targets from the default build.\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Exclude unused Gecode targets from the build.\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Copy CPLEX DLL to the target directory.\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Copy LocalSolver DLL to the target directory.\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "solvers/cplex/CMakeLists.txt" : {
      "ObjectId" : "d0828c94cfd66180414ad91bf8231cb769610261",
      "LastModified" : "2014-12-17T18:24:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake build script for the IBM ILOG CPLEX solver for AMPL.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Adds a cplex solver.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Suppress warnings.\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Version of CPLEX with SOCP transformations.\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "solvers/jacop/CMakeLists.txt" : {
      "ObjectId" : "9b8cd91afb88571a7bb5d375d519a00827484c5d",
      "LastModified" : "2015-08-07T18:00:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake build script for the AMPL/JaCoP solver.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set CMAKE_SYSTEM_PROCESSOR to make sure FindJNI finds the correct\n\n# AWT and JVM libraries.\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Add libmawt.so to JNI_LIBRARIES to avoid linkage errors on Ubuntu 10.04.\n",
        "Line" : 17,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# Get jacop version.\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "solvers/path/CMakeLists.txt" : {
      "ObjectId" : "3f07e6850efa2190bbb42d269a3ba324b2590b1c",
      "LastModified" : "2014-08-20T00:27:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake build script for the AMPL/Path solver.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/amplsig/CMakeLists.txt" : {
      "ObjectId" : "6e9f21fe9149574c0e32b4e3a82e6f24f4c8b984",
      "LastModified" : "2014-10-01T20:00:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake build script for the amplsig library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# amplsig is only needed on Windows due to broken implementation\n\n# of signals on this platform.\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "src/asl/CMakeLists.txt" : {
      "ObjectId" : "1790a5e0665f74a06c6764207d5fa78da82259eb",
      "LastModified" : "2019-02-28T04:56:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generate arith.h\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Integer type used by arith.h checks.\n",
        "Line" : 19,
        "CharPositionInLine" : 18
      },
      "2" : {
        "Text" : "# Check long long.\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Check ssize_t.\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Use a custom target for arith.h, because including a file generated by a\n\n# custom command in more than one target may result in it being generated\n\n# multiple times in a parallel build which doesn't work reliably in msbuild\n\n# (#62). See also http://www.cmake.org/pipermail/cmake/2008-October/024492.html\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Changing the floating point precision is not supported on x64.\n",
        "Line" : 201,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Compile C sources separately to be able to specify compile options.\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Public ASL headers.\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# add_c_compiler_flags cannot detect that GCC doesn't support\n\n# -Wno-string-plus-int, so add this option for clang only.\n",
        "Line" : 319,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Link with system socket libraries.\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Suppress warnings in ASL and tableproxy.\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "src/cp/CMakeLists.txt" : {
      "ObjectId" : "c50e7a53c35a41258c39fd399ef749ca53e86ed6",
      "LastModified" : "2014-08-11T18:09:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake build script for the cp library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/gsl/CMakeLists.txt" : {
      "ObjectId" : "6ef465f9b99b2fd3fbc1a337ce2e672ef6a201fd",
      "LastModified" : "2015-11-17T22:53:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake build script for the GSL wrapper for AMPL.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "support/cmake/FindCPLEX.cmake" : {
      "ObjectId" : "fc867de037139838a5c5fde4504d55731709ae7b",
      "LastModified" : "2018-05-04T10:35:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the CPLEX, Concert, IloCplex and CP Optimizer libraries.\n\n#\n\n# Once done this will add the following imported targets:\n\n#\n\n#  cplex-library - the CPLEX library\n\n#  cplex-concert - the Concert library\n\n#  ilocplex - the IloCplex library\n\n#  cplex-cp - the CP Optimizer library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find the path to CPLEX Studio.\n\n# CPLEX Studio 12.4 can be installed in the following default locations:\n\n#   /opt/ibm/ILOG/CPLEX_Studio<edition>124 - Linux\n\n#   /opt/IBM/ILOG/CPLEX_Studio<edition>124 - UNIX\n\n#   ~/Applications/IBM/ILOG/CPLEX_Studio<edition>124 - Mac OS X\n\n#   C:\\Program Files\\IBM\\ILOG\\CPLEX_Studio<edition>124 - Windows\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Amended for VS and its various toolsets\n",
        "Line" : 43,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# https://cmake.org/cmake/help/v3.11/variable/MSVC_VERSION.html\n\n# Can use GREATER_EQUAL instead of the mess below if cmake version >= 3.7\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# to support VS2015 with 2013 libraries change below\n",
        "Line" : 49,
        "CharPositionInLine" : 40
      },
      "5" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CPLEX\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Find the CPLEX include directory.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Find the CPLEX library.\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# On Windows the version is appended to the library name which cannot be\n\n# handled by find_library, so search manually.\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set CPLEX_FOUND to TRUE\n\n# if all listed variables are TRUE.\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Concert\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Find the Concert include directory.\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Find the Concert library.\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set CPLEX_CONCERT_FOUND to\n\n# TRUE if all listed variables are TRUE.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Require standard compliance.\n",
        "Line" : 192,
        "CharPositionInLine" : 41
      },
      "15" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# IloCplex - depends on CPLEX and Concert\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Required if -pedantic is used.\n",
        "Line" : 203,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Find the IloCplex include directory - normally the same as the one for CPLEX\n\n# but check if ilocplex.h is there anyway.\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Find the IloCplex library.\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set CPLEX_ILOCPLEX_FOUND to\n\n# TRUE if all listed variables are TRUE.\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# CP Optimizer - depends on Concert\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Find the CP Optimizer include directory.\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Find the CP Optimizer library.\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set CPLEX_CP_FOUND to TRUE\n\n# if all listed variables are TRUE.\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "support/cmake/FindLocalSolver.cmake" : {
      "ObjectId" : "1eb6a643af1f09bd1801d11bdb80698bc09b1af8",
      "LastModified" : "2015-11-17T22:53:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the LocalSolver library.\n\n#\n\n# Once done this will add the following imported targets:\n\n#\n\n#  localsolver-library - the LocalSolver library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set LOCALSOLVER_FOUND to TRUE\n\n# if all listed variables are TRUE.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "support/cmake/FindMATLAB.cmake" : {
      "ObjectId" : "b6fbbee982e0d52242b609aab1b4b349891356f8",
      "LastModified" : "2015-11-17T22:53:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find MATLAB.\n\n#\n\n# Once done this will define the following variable:\n\n#\n\n#  MATLAB_FOUND - found MATLAB\n\n#  MATLAB_MEX   - path to the MATLAB mex executable\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set MATLAB_FOUND to TRUE\n\n# if all listed variables are TRUE.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "support/cmake/FindODBC.cmake" : {
      "ObjectId" : "c9f3f23ea963e8cd9c9593158fd38b8db6a95bfe",
      "LastModified" : "2015-11-17T22:53:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the ODBC libraries.\n\n#\n\n# Once done this will define\n\n#\n\n#  ODBC_FOUND - System has ODBC\n\n#  ODBC_INCLUDE_DIRS - The ODBC include directories\n\n#  ODBC_LIBRARIES - The libraries needed to use ODBC\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set ODBC_FOUND to TRUE\n\n# if all listed variables are TRUE.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "support/cmake/FindSulum.cmake" : {
      "ObjectId" : "08e28cb534e5f36e40f08b35e6308a9dcc461895",
      "LastModified" : "2015-11-17T22:53:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the Sulum library.\n\n#\n\n# Once done this will add the following imported targets:\n\n#\n\n#  sulum-library - the Sulum library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set SULUM_FOUND to TRUE\n\n# if all listed variables are TRUE.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "support/cmake/c_flag_overrides.cmake" : {
      "ObjectId" : "4a97ec1cec32b6bc1d313d8c4438a18e7b381649",
      "LastModified" : "2015-11-17T22:53:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "support/cmake/cxx_flag_overrides.cmake" : {
      "ObjectId" : "b63871bb30553996a10f17e1cc23980d71bca7cf",
      "LastModified" : "2015-11-17T22:53:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "support/cmake/init.cmake" : {
      "ObjectId" : "5a5a68430793047afc58f07fc1afde35124a1622",
      "LastModified" : "2018-05-04T10:35:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake initialization code that should be run before the project command.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Joins arguments and sets the result to <var>.\n\n# Usage:\n\n#   join(<var> [<arg>...])\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sets cache variable <var> to the value <value>. The arguments\n\n# following <type> are joined into a single docstring which allows\n\n# breaking long documentation into smaller strings.\n\n# Usage:\n\n#   set_cache(<var> <value> <type> docstring... [FORCE])\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the default CMAKE_BUILD_TYPE to Release.\n\n# This should be done before the project command since the latter sets\n\n# CMAKE_BUILD_TYPE itself.\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Use static MSVC runtime.\n\n# This should be done before the project command.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Find Windows SDK.\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Call SetEnv.cmd and set environment variables accordingly.\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# If Microsoft SDK is installed create script run-msbuild.bat that\n\n# calls SetEnv.cmd to set up build environment and runs msbuild.\n\n# It is useful when building Visual Studio projects with the SDK\n\n# toolchain rather than Visual Studio.\n\n# Set FrameworkPathOverride to get rid of MSB3644 warnings.\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "1950b72a6af8678138025a46038d7cfe3df193ba",
      "LastModified" : "2019-03-21T17:29:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Fix error C1128: number of sections exceeded object file format limit.\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Add gtest library with some extra features.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Workaround GTest bug https://github.com/google/googletest/issues/705.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Workaround a bug in implementation of variadic templates in MSVC11.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Adds an MP test.\n\n# Usage:\n\n#   add_mp_test(name sources... [LIBS libraries])\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "test/asl/CMakeLists.txt" : {
      "ObjectId" : "9164f74fa457eb28fed1a160674e8f6aa48715e4",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/cmake/init-test.cmake" : {
      "ObjectId" : "ebd7aefa2a22ca6b4ea7d7a59244e334e5361fa0",
      "LastModified" : "2015-11-17T22:53:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/solvers/CMakeLists.txt" : {
      "ObjectId" : "713a39e091c2359041db500f91bbe308490e74bb",
      "LastModified" : "2018-05-04T10:35:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include the gtest source in test instead of linking with the library to\n\n# avoid a problem when gtest is built with a different runtime than ilogcp.\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "test/tables/CMakeLists.txt" : {
      "ObjectId" : "4d109f5ca287a39c00d36b1ad79a3f44fa32d68f",
      "LastModified" : "2019-02-28T04:56:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 23
  },
  "ElapsedTime" : 1902
}