{
  "Repository" : "332061",
  "Revision" : "HEAD",
  "ObjectId" : "50edb6d3af4eebce14407f5476fab0f88106a4d8",
  "CommitTime" : "2019-04-02T19:10:20Z",
  "Files" : {
    "pom.xml" : {
      "ObjectId" : "eae04b34888e3a3bb92247d7262503dc9ddd25dc",
      "LastModified" : "2019-04-02T18:59:10Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Added in order to support github-release-plugin.\n    This information is also useful itself for semantic purposes.\n     ",
        "Line" : 15,
        "CharPositionInLine" : 9
      },
      "1" : {
        "Text" : " Trick to use mvn deploy goal\n     We don't have any 'Nexus'-like deploy target yet.\n     However I want to be able to use a convenient command mvn clean deploy\n     so I specify local storage here ",
        "Line" : 24,
        "CharPositionInLine" : 41
      },
      "2" : {
        "Text" : " I like keeping scope as more precise as possible\n            However log4j2 developers say that making it compile\n            may improve performance for custom plugins\n             ",
        "Line" : 46,
        "CharPositionInLine" : 17
      },
      "3" : {
        "Text" : " To try improved lambdas in tests, if it succeeds\n        we may use it in core as well ",
        "Line" : 79,
        "CharPositionInLine" : 42
      },
      "4" : {
        "Text" : " When we upgrade to Java9 we should change to simply jool ",
        "Line" : 82,
        "CharPositionInLine" : 78
      },
      "5" : {
        "Text" : " I'm reluctant to update to 27.0.1 because of https://groups.google.com/forum/#!topic/guava-announce/Km82fZG68Sw\n            and a weird additional empty artifact which comes with guava then ",
        "Line" : 93,
        "CharPositionInLine" : 82
      },
      "6" : {
        "Text" : " The exclusions are done due to https://github.com/google/guava/issues/2824 ",
        "Line" : 95,
        "CharPositionInLine" : 96
      },
      "7" : {
        "Text" : " Additionally configuring maven clean plug-in in order to clean the deploy directory and thus remove potential old artifacts ",
        "Line" : 131,
        "CharPositionInLine" : 145
      },
      "8" : {
        "Text" : " Let's clean just jars. For example old logs might be useful ",
        "Line" : 140,
        "CharPositionInLine" : 101
      },
      "9" : {
        "Text" : " Copy dependencies into the deploy directory ",
        "Line" : 148,
        "CharPositionInLine" : 65
      },
      "10" : {
        "Text" : " We're interested only in compile&runtime dependencies ",
        "Line" : 161,
        "CharPositionInLine" : 91
      },
      "11" : {
        "Text" : " Set up Jar generation properties, e.g. automatic generation of manifest ",
        "Line" : 169,
        "CharPositionInLine" : 84
      },
      "12" : {
        "Text" : " thus avoiding IT tests run ",
        "Line" : 205,
        "CharPositionInLine" : 56
      },
      "13" : {
        "Text" : " XML is required for pitest plugin in SonarQube (default is HTML) ",
        "Line" : 209,
        "CharPositionInLine" : 94
      },
      "14" : {
        "Text" : " Assembly plug-in will allow us create a *.zip artifact with binaries\n             which previously was created manually ",
        "Line" : 217,
        "CharPositionInLine" : 55
      },
      "15" : {
        "Text" : " As an alternative we might use a separate profile.\n                         Specifying the phase that is earlier than deploy which our release-plugin is bound to ",
        "Line" : 231,
        "CharPositionInLine" : 115
      },
      "16" : {
        "Text" : " Thanks to this plug-in we'll be able to upload releases to GitHub ",
        "Line" : 239,
        "CharPositionInLine" : 87
      },
      "17" : {
        "Text" : " Automatically it's based on SNAPSHOT presence, however in chess at the moment\n                     we consider all 0.* as pre-releases ",
        "Line" : 251,
        "CharPositionInLine" : 61
      },
      "18" : {
        "Text" : " The sources will be added by default. Adding binaries here ",
        "Line" : 255,
        "CharPositionInLine" : 88
      },
      "19" : {
        "Text" : " Using the wildcard because maven-assembly-plugin by default adds\n                                 suffix with assembly id (like '-bin')",
        "Line" : 261,
        "CharPositionInLine" : 74
      },
      "20" : {
        "Text" : " The most recent plugin at 2019-02-17, although the versioning scheme is unclear ",
        "Line" : 283,
        "CharPositionInLine" : 109
      },
      "21" : {
        "Text" : " NOTE: it should be used in pair with maven deploy plug-in of the same version ",
        "Line" : 284,
        "CharPositionInLine" : 107
      },
      "22" : {
        "Text" : " Although we're not using it directly, it's part of Maven lifecycle ",
        "Line" : 302,
        "CharPositionInLine" : 92
      },
      "23" : {
        "Text" : " BEGIN: Specific to mapping unit tests and covered code (Sonar)",
        "Line" : 313,
        "CharPositionInLine" : 73
      },
      "24" : {
        "Text" : " Minimal supported version is 2.4 ",
        "Line" : 322,
        "CharPositionInLine" : 54
      },
      "25" : {
        "Text" : " Preventing [WARNING] Using platform encoding to copy filtered resources ",
        "Line" : 349,
        "CharPositionInLine" : 89
      },
      "26" : {
        "Text" : " Naming convention inspired by http://stackoverflow.com/a/30318342/1429367 ",
        "Line" : 353,
        "CharPositionInLine" : 91
      },
      "CommentCount" : 27
    }
  },
  "FileTypes" : {
    "MAVEN" : 1
  },
  "ElapsedTime" : 598
}