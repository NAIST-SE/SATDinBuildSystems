{
  "Repository" : "17740801",
  "Revision" : "HEAD",
  "ObjectId" : "9c3a45d618a4f7a33a6f3da3987e2c1947d1588b",
  "CommitTime" : "2018-11-07T13:00:24Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "b706ed935107367057cd61861ee7c995ebb187f8",
      "LastModified" : "2018-01-19T16:21:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We need a newer version on apple otherwise compling objective-c files fails when mixed with C/C++ source\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the RPATH to be used when installing\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# i386 for 32bit and x86_64 for 64bit\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Used by deflate lib\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#set( CMAKE_VERBOSE_MAKEFILE on )\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The version number.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable Visual Studio solution \"folders\"\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# CMake defaults to leaving CMAKE_BUILD_TYPE empty. This screws up\n\n# differentiation between debug and release builds.\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#message(\"RELEASE set\")\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# On Linux gtest needs pthreads\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#SET_PROPERTY(TARGET 1a-lsr PROPERTY FOLDER \"3rdparty\")\n\n#SET_PROPERTY(TARGET 1-delay-clear PROPERTY FOLDER \"3rdparty\")\n\n#SET_PROPERTY(TARGET 3-options-input-fn PROPERTY FOLDER \"3rdparty\")\n\n#SET_PROPERTY(TARGET deinstall PROPERTY FOLDER \"3rdparty\")\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#SET_PROPERTY(TARGET soxr-lsr PROPERTY FOLDER \"3rdparty\")\n\n#SET_PROPERTY(TARGET test-vectors PROPERTY FOLDER \"3rdparty\")\n\n#SET_PROPERTY(TARGET vector-cmp PROPERTY FOLDER \"3rdparty\")\n\n#SET_PROPERTY(TARGET vector-gen PROPERTY FOLDER \"3rdparty\")\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#cotire(Alive)\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#cotire(oddlib)\n",
        "Line" : 469,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Hook dll used for hacking/reversing hard coded game logic\n\n# to reimplement in ALIVE\n",
        "Line" : 477,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Bake binary test files in C array/header files\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Helper to take file foo.dat in any path and place it in generated headers as foo.dat.g.h with\n\n# var name of foo\n",
        "Line" : 544,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#cotire(Tests)\n",
        "Line" : 633,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Generate header containing window title/version information\n",
        "Line" : 643,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Fix link path to look in the bundle\n",
        "Line" : 668,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Build cpp files on all cores\n",
        "Line" : 751,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Warnings added in VS2013 and later\n",
        "Line" : 755,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Warnings added in VS2017 and later or existing warnings that have started to appear in SDK headers\n",
        "Line" : 760,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Use default flags on 3rd party things that generate warnings on max levels\n",
        "Line" : 766,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# C++14 by default\n",
        "Line" : 783,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# Enable C++14, you may need to use -std=c++0x if using an older gcc compiler\n",
        "Line" : 786,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "# debug, no optimisation\n",
        "Line" : 789,
        "CharPositionInLine" : 57
      },
      "27" : {
        "Text" : "# enabling coverage\n",
        "Line" : 790,
        "CharPositionInLine" : 61
      },
      "28" : {
        "Text" : "# we dont want high warning levels on 3rd party things since we won't be fixing those warnings\n",
        "Line" : 792,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "#OS SPECIFIC \n",
        "Line" : 799,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# On Windows generate MSI packages\n",
        "Line" : 801,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# If empty assume release\n\n#if (\"${CMAKE_BUILD_TYPE}\" STREQUAL \"\" OR \"${CMAKE_BUILD_TYPE}\" STREQUAL \"release\")\n\n#    message(\"RELEASE installer build\")\n\n#else()\n\n#    message(\"DEBUG installer build\")\n\n#endif()\n",
        "Line" : 810,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# On Linux generate TAR.GZ,DEB and RPM packages\n\n#Find out what architecture are we running on and set the package architecture \n",
        "Line" : 820,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 33
    },
    "cmake/FindSDL2.cmake" : {
      "ObjectId" : "290e787225eb444849b43cf25a70bfed8f4a6468",
      "LastModified" : "2015-06-24T16:42:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate SDL2 library\n\n# This module defines\n\n# SDL2_LIBRARY, the name of the library to link against\n\n# SDL2_FOUND, if false, do not try to link to SDL2\n\n# SDL2_INCLUDE_DIR, where to find SDL.h\n\n#\n\n# This module responds to the the flag:\n\n# SDL2_BUILDING_LIBRARY\n\n# If this is defined, then no SDL2_main will be linked in because\n\n# only applications need main().\n\n# Otherwise, it is assumed you are building an application and this\n\n# module will attempt to locate and set the the proper link flags\n\n# as part of the returned SDL2_LIBRARY variable.\n\n#\n\n# Don't forget to include SDL2main.h and SDL2main.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDL2main which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL2 library\n\n# (SDL2.dll, libsdl2.so, SDL2.framework, etc).\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2DIR\n\n# used in building SDL2.\n\n# l.e.galup  9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL2 guidelines.\n\n# Added a search for SDL2main which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL2 convention\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\n\n#\n\n# Ported by Johnny Patterson. This is a literal port for SDL2 of the FindSDL.cmake\n\n# module with the minor edit of changing \"SDL\" to \"SDL2\" where necessary. This\n\n# was not created for redistribution, and exists temporarily pending official\n\n# SDL2 CMake modules.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 83,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 84,
        "CharPositionInLine" : 13
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 85,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "#MESSAGE(\"SDL2_INCLUDE_DIR is ${SDL2_INCLUDE_DIR}\")\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#MESSAGE(\"SDL2_LIBRARY_TEMP is ${SDL2_LIBRARY_TEMP}\")\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDL2main. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDL2main for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# SDL2 may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# MinGW needs an additional library, mwindows\n\n# It's total link flags should look like -lmingw32 -lSDL2main -lSDL2 -lmwindows\n\n# (Actually on second look, I think it only needs one of the m* libraries.)\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# For SDL2main\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# For MinGW library\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 174,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 16
    },
    "tools/engine_hook/EngineHook/CMakeLists.txt" : {
      "ObjectId" : "5b04aef0ee2d92c47d6160cb6af16c00e97f142e",
      "LastModified" : "2016-10-18T11:40:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# the name of the target operating system\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# here is the target environment located\n",
        "Line" : 20,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# which compilers to use for C and C++\n",
        "Line" : 23,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search \n\n# programs in the host environment\n",
        "Line" : 28,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# -pedantic\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Enable the \"resource\" language to allow CMake to understand RC files\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -s means: Omit all symbol information from the output file.\n",
        "Line" : 89,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    }
  },
  "FileTypes" : {
    "CMAKE" : 3
  },
  "ElapsedTime" : 1653
}