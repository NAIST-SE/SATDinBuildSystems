{
  "Repository" : "20879959",
  "Revision" : "HEAD",
  "ObjectId" : "788df9e5c1c2c54a60c6aa58565655ba52157389",
  "CommitTime" : "2019-04-12T07:52:08Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "99daa24c3abd13a1c18b600b8ec22a2ca05d8209",
      "LastModified" : "2019-03-21T20:37:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add connectivity firmware building\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Common source files\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Assume Linux\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# SDK source files, different per API version\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Newer codecs from nRF5 SDK are backwards compatible to SoftDevice API v3\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set C, CPP and platform source file groups and properties\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Force .c files to be compiled with the C++ compiler\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Add common compiler definitions\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Adds support for Link Control packets according to the HCI standard\n",
        "Line" : 100,
        "CharPositionInLine" : 23
      },
      "9" : {
        "Text" : "# Add libraries\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Object library, from which both shared and static will be built\n",
        "Line" : 109,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# shared libraries need PIC\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# actual shared and static libraries built from the same object files\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Set common include directories\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Set per-SD API version include directories and compiler definitions\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Newer codecs from nRF5 SDK are backwards compatible to SoftDevice API v3\n",
        "Line" : 230,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Provide the NRF_SD_BLE_API_VERSION macro to each variant\n",
        "Line" : 252,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "#MESSAGE( STATUS \"compiler def: \" \"${SD_API_VER_COMPILER_DEF_NUM}\" )\n",
        "Line" : 255,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Additional special linkage libraries\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Assume Linux\n",
        "Line" : 268,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# Specify libraries to link serialization library with\n",
        "Line" : 273,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Add tests\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Add examples\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Add install target\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Create package\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#Assume Linux\n",
        "Line" : 316,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 26
    },
    "cmake/apple.cmake" : {
      "ObjectId" : "c413cfa7ec690ab1292fdd0efb3d262e98539138",
      "LastModified" : "2018-12-12T09:01:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/clang-dev-tools.cmake" : {
      "ObjectId" : "596adcbab6748c55785cca1550ed10f52451bde3",
      "LastModified" : "2019-03-11T09:23:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For the target not to fail:\n",
        "Line" : 6,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# For the target not to fail:\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# This will create build/compile_commands.json\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Configuration of rules are picked up from .clang-tidy\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/clang.cmake" : {
      "ObjectId" : "091ded87ea158ad35b29609f8b35c7d07b0c3b9f",
      "LastModified" : "2018-12-12T09:01:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Skip RPATH\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/gcc.cmake" : {
      "ObjectId" : "01bfb538dffea44db2ca9036005b87ea513935e5",
      "LastModified" : "2018-12-12T09:01:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Skip RPATH\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/install-target.cmake" : {
      "ObjectId" : "f750cca36b5eb5d19fb73fdb556e070a117bafde",
      "LastModified" : "2019-03-11T09:23:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Create install target\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create a template package config file\n\n# This part is required because SoftDevice to compile is dynamic\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/msvc.cmake" : {
      "ObjectId" : "a49817dcf6d77196dbe6a410db0aacab5149a7c9",
      "LastModified" : "2018-12-12T09:01:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Issue with VC and disabling of C4200: https://connect.microsoft.com/VisualStudio/feedback/details/1114440\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/nrf-apply-patches.cmake" : {
      "ObjectId" : "2bd99111b1784df2470203041650ddb5a7fd1022",
      "LastModified" : "2018-12-12T09:01:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check if we are inside a git work tree, if so, git apply will\n\n# not apply the patch if the files to patcha are not in the git\n\n# index. We only want to use git as a patch utlity without any\n\n# of the git features.\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "cmake/nrf-ble-driver.cmake" : {
      "ObjectId" : "1b6bdd190d0e2fcc7736d1a3da69b9db64acef1c",
      "LastModified" : "2019-03-11T09:23:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include guard\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Default to compiler architecture\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set C++ standard to use\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Compiler specific\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add or remove SD API versions here\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set internal variable names based on the list of version numbers\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Append it to the list\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Set project and variable names\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# pc-ble-driver root folder\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# pc-ble-driver hex folder\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# pc-ble-driver include path\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Get the latest abbreviated commit hash of the working branch\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Get the current working branch\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Get the Git Remote\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 14
    },
    "cmake/nrf-download-distfile.cmake" : {
      "ObjectId" : "03df878df3bfa9eb8095bbaa1a004a3dd9df114f",
      "LastModified" : "2019-03-11T09:23:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tries to download the file.\n",
        "Line" : 43,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "532410e00be06a475ed4e28b291a50b184034df8",
      "LastModified" : "2019-03-20T13:13:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build executable\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Assume Linux\n",
        "Line" : 20,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 2
    },
    "hex/CMakeLists.txt" : {
      "ObjectId" : "f9ea7f4ebcf908385829fcf85600f6ebaf82f72a",
      "LastModified" : "2019-04-11T07:58:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#[[\n    This CMake file uses directory structure conventions in the SDKs\n    supported (v11 and v15) to supply information to targets and create them.\n]]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#message(STATUS \"GCC_TOOLCHAIN_PATH: ${GCC_TOOLCHAIN_PATH}\")\n\n#message(STATUS \"MERGEHEX: ${MERGEHEX}\")\n\n#message(STATUS \"NRFUTIL: ${NRFUTIL}\")\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(STATUS \"Searching for projects within project ${PROJECT_FULL_PATH}\")\n",
        "Line" : 144,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#message(STATUS \"Found projects: ${FOUND_PROJECTS}\")\n",
        "Line" : 149,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "#message(STATUS \"APP_HEX_PATH: ${APP_HEX_PATH} SOFTDEVICE_HEX_PATH: ${SOFTDEVICE_HEX_PATH}\")\n",
        "Line" : 176,
        "CharPositionInLine" : 20
      },
      "5" : {
        "Text" : "# Check if target name already exists\n",
        "Line" : 187,
        "CharPositionInLine" : 20
      },
      "6" : {
        "Text" : "# Add CFLAGS that specify application version, used by SDFU\n",
        "Line" : 196,
        "CharPositionInLine" : 24
      },
      "7" : {
        "Text" : "# Compile project\n",
        "Line" : 203,
        "CharPositionInLine" : 24
      },
      "8" : {
        "Text" : "# Merge SoftDevice and application\n",
        "Line" : 212,
        "CharPositionInLine" : 24
      },
      "9" : {
        "Text" : "# Copy merged file to binary directory\n",
        "Line" : 234,
        "CharPositionInLine" : 24
      },
      "10" : {
        "Text" : "# Create a DFU package if it is a nRF52 device with USB support\n",
        "Line" : 240,
        "CharPositionInLine" : 24
      },
      "11" : {
        "Text" : "# Copy connectivity hex file to binary make_directory\n",
        "Line" : 255,
        "CharPositionInLine" : 32
      },
      "CommentCount" : 12
    },
    "hex/cmake/util.cmake" : {
      "ObjectId" : "74110efc4d794e308c73112dee430a14b39351b5",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure armgcc related files (if armgcc is available)\n",
        "Line" : 14,
        "CharPositionInLine" : 5
      },
      "1" : {
        "Text" : "# Get gcc version\n",
        "Line" : 18,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Environment variables are quoted, remove the quote\n",
        "Line" : 24,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# SDKv15 requires bin in addition to GCCARMEMB_TOOLCHAIN_PATH set by gccvar\n",
        "Line" : 39,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Assume POSIX if not WIN32\n",
        "Line" : 88,
        "CharPositionInLine" : 16
      },
      "5" : {
        "Text" : "# Make the file into a list since the ^$ expressions will not work\n",
        "Line" : 107,
        "CharPositionInLine" : 16
      },
      "6" : {
        "Text" : "#message(STATUS \"L:${LINE}\")\n",
        "Line" : 112,
        "CharPositionInLine" : 20
      },
      "7" : {
        "Text" : "#message(STATUS \"M:${MAKEFILE_LINE}\")\n",
        "Line" : 115,
        "CharPositionInLine" : 20
      },
      "8" : {
        "Text" : "#message(STATUS \"Makefile content after change: ${MAKEFILE_CONTENT}\")\n",
        "Line" : 121,
        "CharPositionInLine" : 16
      },
      "9" : {
        "Text" : "#[[\n    Function that prepares the SDK by:\n        - downloading the SDK\n        - applying patches\n        - modifying the SDK source code so that baud rate and version number is configurable in the build steps\n    The function sets the parent scope variable SDK to location of the prepared SDK\n]]",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#message(STATUS \"URLS: ${nrf_prepare_sdk_URLS}\")\n\n#message(STATUS \"FILENAME: ${nrf_prepare_sdk_FILENAME}\")\n\n#message(STATUS \"SHA512: ${nrf_prepare_sdk_SHA512}\")\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Detect if it is an old or new directory structure in the SDK\n",
        "Line" : 211,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# New structure\n",
        "Line" : 213,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "#message(STATUS \"SD_VERSION:${_SD_VERSION} SOC_FAMILY:${_SOC_FAMILY} SD_API_VERSION:${_SD_API_VERSION} SD_ID:${_SD_ID}\")\n",
        "Line" : 299,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "#message(STATUS \"SD_VERSION:${SD_VERSION} SOC_FAMILY:${SD_VERSION} SD_API_VERSION:${SD_API_VERSION} SD_ID:${SD_ID}\")\n",
        "Line" : 341,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#message(STATUS \"No newer SoftDevice found.\")\n",
        "Line" : 370,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 16
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "bf88df6ada62db0562354d98f5c1f84e11f7f0ca",
      "LastModified" : "2019-04-11T07:58:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Basic sanity checks\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Extract hex filename only\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Link tests together so they are ran in sequence\n",
        "Line" : 153,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# SoftDevice API version -> SoftDevice version -> PCBA\n\n#\n\n# SDv6:\n\n#    S132: PCA10040\n\n#    S140: PCA10056\n",
        "Line" : 186,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# SDv5:\n\n#    S132: PCA10040\n\n#    S132: PCA10056\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# SDv3:\n\n#    S132: PCA10040\n\n#    S132: PCA10056\n",
        "Line" : 196,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# SDv2:\n\n#    S130: PCA10028\n\n#    S130: PCA10031\n",
        "Line" : 200,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# SDv2\n",
        "Line" : 208,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# SDv2\n",
        "Line" : 224,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# SDv3\n",
        "Line" : 240,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# SDv5\n",
        "Line" : 254,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# SDv6\n",
        "Line" : 268,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# SDv3\n",
        "Line" : 284,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# SDv5\n",
        "Line" : 298,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# SDv6\n",
        "Line" : 312,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# SDv3\n",
        "Line" : 328,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# SDv5\n",
        "Line" : 342,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# SDv6\n",
        "Line" : 356,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "#message(STATUS \"softdevice_api_ver:${softdevice_api_ver} source_file:${source_file} source_testcases:${source_testcases} test_list:${test_list}\")\n",
        "Line" : 390,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Build executable\n",
        "Line" : 395,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Assume Linux\n",
        "Line" : 407,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# Use any SD API version for linking object files common between SD API versions\n",
        "Line" : 438,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 22
    }
  },
  "FileTypes" : {
    "CMAKE" : 14
  },
  "ElapsedTime" : 1339
}