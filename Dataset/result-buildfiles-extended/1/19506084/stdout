{
  "Repository" : "19506084",
  "Revision" : "HEAD",
  "ObjectId" : "a94dec20b768446b64641cf6930f64df882d241e",
  "CommitTime" : "2019-03-26T17:04:28Z",
  "Files" : {
    "docs/src/Makefile" : {
      "ObjectId" : "4b14b72e66886b4d5441e73818fbb4ce7c7bae17",
      "LastModified" : "2015-11-24T09:55:20Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "generator/bindings_files/templates/csharp/CMakeLists.txt" : {
      "ObjectId" : "36da162b122b4a7f557eae54768d0ba19748bcbc",
      "LastModified" : "2016-05-17T07:44:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####################################################################\n\n#\n\n# determine local dependencies, so as to re-swig if one of them changed\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "####################################################################\n\n#\n\n# create correct assembly information file\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Remove SWIG wrappers if requested\n\n#\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "####################################################################\n\n#\n\n# SWIG C# bindings\n\n#\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Determine the csharp installation directory\n\n#\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "####################################################################\n\n#\n\n# Build native library\n\n#\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# if name starts with 'lib' drop the prefix, otherwise we get 'liblibXXX'\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "####################################################################\n\n#\n\n# build managed library\n\n#\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "generator/bindings_files/templates/csharp/native.cmake" : {
      "ObjectId" : "147f588667f400f68d1b594f8e41d2c9c69a8308",
      "LastModified" : "2016-05-09T08:35:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find all sources\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# convert paths\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# read file, prepend using statement, write again ... \n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# delete file if it exists\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the compile run disables the following warnings\n\n# -  105: warning CS0105: The using directive for `x' appeared previously \n\n#         in this namespace (needed because of swig 3.0.2)\n\n# -  108: 'method name' hides inherited member 'base member name'. Use the \n\n#         new keyword if hiding was intended.\n\n# -  114: 'method name' hides inherited member 'base member name'. To make \n\n#         the current member override that implementation, add the override \n\n#         keyword. Otherwise add the new keyword.\n\n# - 1570: XML comment on 'class name' has badly formed XML.\n\n# - 1572: XML comment on 'method name' has a param tag for 'parameter name'\n\n#         but there is no parameter by that name.\n\n# - 1573: Parameter 'parameter name' has no matching param tag in the XML \n\n#         comment for 'method name' (but other parameters do).\n\n# - 1574: XML comment on 'method name' has cref attribute 'method name' \n\n#         that could not be resolved.\n\n# - 1591: Missing XML comment for publicly visible type or member 'method\n\n#         name'\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# compile files\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# # print variables for debug purposes\n\n# message(\"BIN_DIRECTORY     : ${BIN_DIRECTORY}\")\n\n# message(\"SRC_DIRECTORY     : ${SRC_DIRECTORY}\")\n\n# message(\"CSHARP_COMPILER   : ${CSHARP_COMPILER}\")\n\n# message(\"CSHARP_EXTRA_ARGS : ${CSHARP_EXTRA_ARGS}\")\n\n# \n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# delete testrunner if it exists\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# find all test files\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# convert paths\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# compile tests\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "generator/bindings_files/templates/java/CMakeLists.txt" : {
      "ObjectId" : "bd78b599f92bbd37c843d50c28658790353c2431",
      "LastModified" : "2018-10-02T09:44:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####################################################################\n\n#\n\n# create manifest file\n\n# \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "####################################################################\n\n#\n\n# ensure that javac, jar and python are available\n\n# \n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "####################################################################\n\n#\n\n# determine local dependencies, so as to re-swig if one of them changed\n\n# \n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# \n\n# Determine the installation directory\n\n#\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Remove SWIG wrappers if requested\n\n#\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "####################################################################\n\n#\n\n# Swig bindings\n\n#\n\n#\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# if additional directories are set be sure to include them\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "generator/bindings_files/templates/java/native.cmake" : {
      "ObjectId" : "56d6724580ae4965f8fcc52224ddc18e5786327d",
      "LastModified" : "2018-10-02T09:44:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find all sources\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# convert paths\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# delete file if it exists\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# compile files\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# enumerate class files\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# create jar\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# # print variables for debug purposes \n\n# message(\"BIN_DIRECTORY         : ${BIN_DIRECTORY}\")\n\n# message(\"Java_JAVAC_EXECUTABLE : ${Java_JAVAC_EXECUTABLE}\")\n\n# message(\"Java_JAR_EXECUTABLE   : ${Java_JAR_EXECUTABLE}\")\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "generator/bindings_files/templates/python/CMakeLists.txt" : {
      "ObjectId" : "36c729e8c10996d3403ef4161e6f4fdc414036e9",
      "LastModified" : "2018-10-02T13:11:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# specify that the same python library should be found \n\n# as the one the selected interpreter uses\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "####################################################################\n\n#\n\n# determine local dependencies, so as to re-swig if one of them changed\n\n# \n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Remove SWIG wrappers if requested\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "####################################################################\n\n#\n\n# Build native library\n\n#\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the build fails when compiled with packages as the object file is too \n\n# big adding the big flag makes it work!\n",
        "Line" : 101,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# \n\n# Determine the python installation directory\n\n#\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "generator/bindings_files/templates/python/add_version.cmake" : {
      "ObjectId" : "276a6f42d166f89e2abc08f976d3bc7e2f2b28a3",
      "LastModified" : "2018-10-02T13:11:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "generator/cmake_files/templates/bindings/CMakeLists.txt" : {
      "ObjectId" : "56fa3ffffefabd3cdd4826ca62cd2b0819907b8b",
      "LastModified" : "2018-10-02T13:11:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# When checked removes all generated SWIG wrappers upon configure\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# and build selected language bindings\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "generator/cmake_files/templates/code/CMakeLists.txt" : {
      "ObjectId" : "533b503479ed68085537de19982c36c97e08b7e9",
      "LastModified" : "2018-10-02T13:11:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# Description       : CMake build script for libSBML\n\n# \n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# generate configuration for this system\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Replace: @PACKAGE_VERSION@ and @LIBSBML_VERSION_NUMERIC@\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###############################################################################\n\n#\n\n# mark header files for installation\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# install generated headers\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###############################################################################\n\n#\n\n# specify include directories\n\n#\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###############################################################################\n\n#\n\n# Find all sources\n\n#\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# create source group for IDEs\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# add to libsbml sources\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "###############################################################################\n\n#\n\n# this is a directory level operation!\n\n#\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "###############################################################################\n\n#\n\n# Build library\n\n#\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# don't decorate static library \n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "generator/cmake_files/templates/src/CMakeLists.txt" : {
      "ObjectId" : "74a6aa7abf696fc2d6c1dbe4249da0ba19a00cfd",
      "LastModified" : "2018-10-02T13:11:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# Initialize SBML sources\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n#\n\n# utility macro for copying files only if they have changed, for this it is\n\n# assumed that the source file is always created. Then the macro is called.\n\n# If the target file will only be overwritten if it does not yet exist, or\n\n# its content is different. At the end the source file will be removed.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# message(\n\n# \"\n\n# copy_if_different_and_remove called with:\n\n#     source = ${source}\n\n#     target = ${target}\n\n# \"\n\n# )\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# message(\"target exists\")\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#message(\"content is different\")\n",
        "Line" : 29,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "#message(\"target does not exist\")\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "###############################################################################\n\n#\n\n# create libsbml-config-common.h\n\n#\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# test_big_endian seems to fail with nmake (VS 2010) on windows\n\n# however, windows is always little endian, so catch this here\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# for whatever reason some of the values are not correctly picked up\n\n# so we encode these values here\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# generate configuration for this system\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Replace: @PACKAGE_VERSION@ and @LIBSBML_VERSION_NUMERIC@\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "###############################################################################\n\n#\n\n# mark header files for installation\n\n#\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "###############################################################################\n\n#\n\n# copy build specific header files\n\n#\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "###############################################################################\n\n#\n\n# specify include directories\n\n#\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "###############################################################################\n\n#\n\n# Find all sources\n\n#\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Set the constraint files to be 'headers' as they don't have to be compiled\n\n# since they don't contain symbols but rather are included directly.  Could\n\n# remove them, but that keeps their content from being found in searches, etc.\n\n# in IDEs such as VisualStudio.\n",
        "Line" : 166,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "#              list(REMOVE_ITEM temp \"${tempFile}\")\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# create source group for IDEs\n",
        "Line" : 188,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# add to libsbml sources\n",
        "Line" : 191,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "###############################################################################\n\n#\n\n# this is a directory level operation!\n\n#\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "###############################################################################\n\n#\n\n# Build library\n\n#\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# don't decorate static library \n",
        "Line" : 252,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "##############################################################################\n\n#\n\n# add native tests\n\n#\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\n\n#\n\n# construct list of all header files to create dependency list for \n\n# language bindings\n\n#\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\n\n#\n\n# create language bindings\n\n#\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "generator/cmake_files/templates/top-level/CMakeLists.txt" : {
      "ObjectId" : "4cfce49ad181b99421f1c258d2e5e7e4946fe05d",
      "LastModified" : "2019-01-10T14:36:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# Parse VERSION.txt to determine the package version\n\n#\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add make dist and make check target as they are already familiar for\n\n# everyone using the gnumake build\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n#\n\n# The next lines configure the parameters for packaging the binaries.\n\n# They can be invoked with \"make package\" or \"nmake package\" or by using\n\n# cpack -G zip|deb|rpm|dmg|nsis\n\n#\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###############################################################################\n\n#\n\n# Here we have the main configuration options for libsbml.\n\n#\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build static / shared library\n\n# option(BUILD_SHARED_LIBS  \"Build shared library. (Set to OFF to build static libraries.)\" OFF)\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Whether to compile examples\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Which language bindings should be built\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add an option to compile with all warnings shown\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Use the version number in the shared library.\n\n#\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable the generation of unit tests. If enabled, all test runners\n\n# will be created and can be run with \"make test\" or ctest.\n\n# This won't work in Visual Studio 2003, so we disable this option there.\n\n#\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Use C++ namespace.\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Generate documentation.\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# marks as advanced, so as to hide documentation generation\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Re-generate the swig bindings? This really should be on by default\n\n# otherwise one might have the wrong wrapper code without support for\n\n# the libsbml packages one wants.\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Set build type default.\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Set the default dependency directory.\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "###############################################################################\n\n#\n\n# If WITH_SWIG is selected, we need to find swig\n\n#\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "###############################################################################\n\n#\n\n# Locate libsbml\n\n#\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "###############################################################################\n\n#\n\n# list of additional files to link against.\n\n#\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "###############################################################################\n\n#\n\n# Locate zlib\n\n#\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# make sure that we have a valid zip library\n",
        "Line" : 309,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# this is odd, but on windows this check always fails! must be a\n\n# bug in the current cmake version so for now only issue this\n\n# warning on linux\n",
        "Line" : 312,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "###############################################################################\n\n#\n\n# Find the C# compiler to use and set name for resulting library\n\n#\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# mark libsbml library as x86\n",
        "Line" : 341,
        "CharPositionInLine" : 12
      },
      "24" : {
        "Text" : "# mark libsbml library as x64\n",
        "Line" : 344,
        "CharPositionInLine" : 12
      },
      "25" : {
        "Text" : "###############################################################################\n\n#\n\n# Enable support for testing ... can be invoked by running ctest\n\n# or make test\n\n#\n",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# we do use tests, that require 2.8.4\n",
        "Line" : 360,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "###############################################################################\n\n#\n\n# Need some variables set up, such as the name for the libSBML\n\n# library and the Path and file separator characters. The\n\n# MISC_PREFIX variable will cause libsbml bindings, examples and\n\n# documentation to be installed in PREFIX/${MISC_PREFIX}.\n\n#\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# On some Linux  (64bit) systems (64bit) the libraries should be installed into lib64 rather\n\n# than lib. It will default to 'lib' but can be overwritten.\n",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "###############################################################################\n\n#\n\n# Set up remaining variables, add option for universal binaries\n\n#\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# on osx starting with xcode 4.3 the system root is in\n\n# the app bundle, however cmake (up to 2.8.8) does not seem\n\n# to update the path, so lets try it here\n",
        "Line" : 434,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# Since we are encountering errors with the use of libc++ on OSX\n\n# this option allows to override which stdlib to use\n",
        "Line" : 445,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# On OSX it is common to build universal binaries to support multiple\n\n# processor architectures. The default behavior is not to build\n\n# multiple architectures, as most users might not need that.\n",
        "Line" : 454,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# if universal binaries are requested and none defined so far\n\n# overwrite them with all three common architectures. If the user\n\n# specified their own list of architectures do not touch!\n",
        "Line" : 462,
        "CharPositionInLine" : 12
      },
      "34" : {
        "Text" : "# OSX Lion no longer supports ppc architecture\n",
        "Line" : 469,
        "CharPositionInLine" : 19
      },
      "35" : {
        "Text" : "# on cygwin all code is position independent so -fPIC is not needed\n",
        "Line" : 482,
        "CharPositionInLine" : 12
      },
      "36" : {
        "Text" : "# CMake no longer creates PDB files for static libraries after 2.8.11\n\n# so we store debug information in the object files instead\n",
        "Line" : 529,
        "CharPositionInLine" : 6
      },
      "37" : {
        "Text" : "# populate EXTRA_LIBS variable\n",
        "Line" : 551,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "# this is necessary to build with libxml2 on mingw\n",
        "Line" : 566,
        "CharPositionInLine" : 12
      },
      "39" : {
        "Text" : "###############################################################################\n\n#\n\n# Disable in-source build\n\n#\n",
        "Line" : 574,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "###############################################################################\n\n#\n\n# Build the actual libSBML library\n\n#\n",
        "Line" : 588,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "###############################################################################\n\n#\n\n# Initialize LIBSBML sources\n\n#\n",
        "Line" : 593,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "###############################################################################\n\n#\n\n# utility macro for copying files only if they have changed, for this it is\n\n# assumed that the source file is always created. Then the macro is called.\n\n# If the target file will only be overwritten if it does not yet exist, or\n\n# its content is different. At the end the source file will be removed.\n\n#\n",
        "Line" : 599,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# message(\n\n# \"\n\n# copy_if_different_and_remove called with:\n\n#   source = ${source}\n\n#   target = ${target}\n\n# \"\n\n# )\n",
        "Line" : 607,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# message(\"target exists\")\n",
        "Line" : 617,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "#message(\"content is different\")\n",
        "Line" : 621,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "#message(\"target does not exist\")\n",
        "Line" : 625,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "###############################################################################\n\n#\n\n# create libsbml-config-common.h\n\n#\n",
        "Line" : 634,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# test_big_endian seems to fail with nmake (VS 2010) on windows\n\n# however, windows is always little endian, so catch this here\n",
        "Line" : 655,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# for whatever reason some of the values are not correctly picked up\n\n# so we encode these values here\n",
        "Line" : 660,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "##############################################################################\n\n#\n\n# create library\n\n# \n",
        "Line" : 670,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "##############################################################################\n\n#\n\n# create language bindings\n\n# \n",
        "Line" : 676,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "###############################################################################\n\n#\n\n# Build examples if specified\n\n#\n",
        "Line" : 685,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# code that builds the examples\n",
        "Line" : 692,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "#\n\n#\n\n#if(WITH_DOXYGEN)\n\n#    add_subdirectory(docs)\n\n#endif()\n",
        "Line" : 696,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "###############################################################################\n\n#\n\n# Install documentation\n\n#\n",
        "Line" : 703,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "###############################################################################\n\n#\n\n# Print Summary\n\n#\n",
        "Line" : 717,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# print selected packages if configured previously\n",
        "Line" : 835,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "## To compile a test program simply comment out the lines below ...\n\n#\n\n#OPTION(WITH_TEST_PROGRAM \" COMPILE SMALL TEST PROGRAM \" ON)\n\n#\n\n#if(WITH_TEST_PROGRAM)\n\n#\n\n#include_directories(${CMAKE_CURRENT_SOURCE_DIR})\n\n#\n\n#add_executable(libsbml_test test.cpp)\n\n#target_link_libraries(libsbml_test ${LIBSBML_LIBRARY}-static)\n\n#\n\n#endif()\n\n#\n",
        "Line" : 882,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 59
    },
    "generator/code_files/templates/CMakeLists.txt" : {
      "ObjectId" : "2909062b6474daa8cd2d62a5abd6910a94537fd9",
      "LastModified" : "2019-01-10T14:36:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# Description       : CMake build script for libSBML\n\n# \n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# generate configuration for this system\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Replace: @PACKAGE_VERSION@ and @LIBSBML_VERSION_NUMERIC@\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###############################################################################\n\n#\n\n# mark header files for installation\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# install generated headers\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###############################################################################\n\n#\n\n# specify include directories\n\n#\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###############################################################################\n\n#\n\n# Find all sources\n\n#\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# create source group for IDEs\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# add to libsbml sources\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "###############################################################################\n\n#\n\n# this is a directory level operation!\n\n#\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "###############################################################################\n\n#\n\n# Build library\n\n#\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# don't decorate static library \n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "generator/code_files/templates/lib-config-common.h.cmake" : {
      "ObjectId" : "a5322c588595d531d54d8502c16d6cb2ca012c6d",
      "LastModified" : "2018-10-02T13:11:54Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/**\n * @file    libsbml-config-common.h.cmake\n * @brief   Configuration variables \n */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* Define to 1 if you have the <check.h> header file. */",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Define to 1 if you have the <expat.h> header file. */",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* Define to 1 to use the Expat XML library */",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Define to 1 if you have the <errno.h> header file. */",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Define to 1 if you have the <ieeefp.h> header file. */",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Define to 1 if you have the ANSI C header files. */",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* Define to 1 if you have the <math.h> header file. */",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* Define to 1 if you have the <sys/types.h> header file. */",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* Define to 1 if you have the `m' library (-lm). */",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Define to 1 to enable primitive memory tracing. */",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Define to 1 if your processor stores words with the most significant byte\n   first (like Motorola and SPARC, unlike Intel and VAX). */",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "generator/code_files/templates/lib-namespace.h.cmake" : {
      "ObjectId" : "0a3fa857a100b910179886d83c2b4e5590119346",
      "LastModified" : "2018-10-02T13:11:54Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/**\n * @file    libsbml-namespace.h\n * @brief   Defines C++ namespace of libSBML\n */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/*\n *\n * The idea of the following marcors are borrowed from \n * Xerces-C++ XML Parser (http://xerces.apache.org/xerces-c/).\n *\n */",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Define to enable libSBML C++ namespace */",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* C++ namespace of libSBML */",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "generator/code_files/templates/lib-version.h.cmake" : {
      "ObjectId" : "689e565200c57994a0efa008f1af60da508b6de5",
      "LastModified" : "2018-10-02T13:11:54Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/**\n * @file    libsbml-version.h\n * @brief   Define libSBML version numbers for access from client software.\n *\n */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/**\n * LIBSBML_DOTTED_VERSION:\n *\n * A version string of the form \"1.2.3\".\n */",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/**\n * LIBSBML_VERSION:\n *\n * The version as an integer: version 1.2.3 becomes 10203.  Since the major\n * number comes first, the overall number will always increase when a new\n * libSBML is released, making it easy to use less-than and greater-than\n * comparisons when testing versions numbers.\n */",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/**\n * LIBSBML_VERSION_STRING:\n *\n * The numeric version as a string: version 1.2.3 becomes \"10203\".\n */",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/**\n * Returns the version number of this copy of libSBML as an integer.\n *\n * @return the libSBML version as an integer; version 1.2.3 becomes 10203.\n */",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/**\n * Returns the version number of this copy of libSBML as a string.\n *\n * @return the libSBML version as a string; version 1.2.3 becomes\n * \"1.2.3\".\n *\n * @see getLibSBMLVersionString()\n */",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/**\n * Returns the version number of this copy of libSBML as a string without\n * periods.\n *\n * @return the libSBML version as a string: version 1.2.3 becomes \"10203\".\n *\n * @see getLibSBMLDottedVersion()\n */",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "generator/tests/test_cmake_code/test-cmake/examples/CMakeLists.txt" : {
      "ObjectId" : "16b003a73ec1798121b93274ca03bc1b06904ee2",
      "LastModified" : "2019-02-27T16:38:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n## @file CMakeLists.txt\n\n## @brief CMake build scripts for example programs\n\n## @author SBMLTeam\n\n##\n\n## <!--------------------------------------------------------------------------\n\n## This file is part of libSBML. Please visit http://sbml.org for more\n\n## information about SBML, and the latest version of libSBML.\n\n##\n\n## Copyright (C) 2019 jointly by the following organizations:\n\n## 1. California Institute of Technology, Pasadena, CA, USA\n\n## 2. University of Heidelberg, Heidelberg, Germany\n\n##\n\n## Copyright (C) 2013-2018 jointly by the following organizations:\n\n## 1. California Institute of Technology, Pasadena, CA, USA\n\n## 2. EMBL European Bioinformatics Institute (EMBL-EBI), Hinxton, UK\n\n## 3. University of Heidelberg, Heidelberg, Germany\n\n##\n\n## Copyright (C) 2009-2013 jointly by the following organizations:\n\n## 1. California Institute of Technology, Pasadena, CA, USA\n\n## 2. EMBL European Bioinformatics Institute (EMBL-EBI), Hinxton, UK\n\n##\n\n## Copyright (C) 2006-2008 by the California Institute of Technology,\n\n## Pasadena, CA, USA\n\n##\n\n## Copyright (C) 2002-2005 jointly by the following organizations:\n\n## 1. California Institute of Technology, Pasadena, CA, USA\n\n## 2. Japan Science and Technology Agency, Japan\n\n##\n\n## This library is free software; you can redistribute it and/or modify it\n\n## under the terms of the GNU Lesser General Public License as published by the\n\n## Free Software Foundation. A copy of the license agreement is provided in the\n\n## file named \"LICENSE.txt\" included with this software distribution and also\n\n## available online as http://sbml.org/software/libsbml/license.html\n\n## ------------------------------------------------------------------------ -->\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##\n",
        "Line" : 36,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# install c++ examples\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "generator/tests/test_cmake_code/test-cmake/examples/groups-package.cmake" : {
      "ObjectId" : "cdbb5078ae32222517ff169daf82be16990392aa",
      "LastModified" : "2019-02-27T16:38:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# @file groups-package.cmake\n\n# @brief Examples CMake file for groups package\n\n# @author SBMLTeam\n\n#\n\n# <!--------------------------------------------------------------------------\n\n# This file is part of libSBML. Please visit http://sbml.org for more\n\n# information about SBML, and the latest version of libSBML.\n\n#\n\n# Copyright (C) 2019 jointly by the following organizations:\n\n# 1. California Institute of Technology, Pasadena, CA, USA\n\n# 2. University of Heidelberg, Heidelberg, Germany\n\n#\n\n# Copyright (C) 2013-2018 jointly by the following organizations:\n\n# 1. California Institute of Technology, Pasadena, CA, USA\n\n# 2. EMBL European Bioinformatics Institute (EMBL-EBI), Hinxton, UK\n\n# 3. University of Heidelberg, Heidelberg, Germany\n\n#\n\n# Copyright (C) 2009-2013 jointly by the following organizations:\n\n# 1. California Institute of Technology, Pasadena, CA, USA\n\n# 2. EMBL European Bioinformatics Institute (EMBL-EBI), Hinxton, UK\n\n#\n\n# Copyright (C) 2006-2008 by the California Institute of Technology,\n\n# Pasadena, CA, USA\n\n#\n\n# Copyright (C) 2002-2005 jointly by the following organizations:\n\n# 1. California Institute of Technology, Pasadena, CA, USA\n\n# 2. Japan Science and Technology Agency, Japan\n\n#\n\n# This library is free software; you can redistribute it and/or modify it\n\n# under the terms of the GNU Lesser General Public License as published by the\n\n# Free Software Foundation. A copy of the license agreement is provided in the\n\n# file named \"LICENSE.txt\" included with this software distribution and also\n\n# available online as http://sbml.org/software/libsbml/license.html\n\n# ------------------------------------------------------------------------ -->\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "generator/tests/test_cmake_code/test-cmake/examples/spatial-package.cmake" : {
      "ObjectId" : "b12c0387358f75b5dc6ad0acc5201249cea6b7e3",
      "LastModified" : "2019-02-27T16:38:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# @file spatial-package.cmake\n\n# @brief Examples CMake file for spatial package\n\n# @author SBMLTeam\n\n#\n\n# <!--------------------------------------------------------------------------\n\n# This file is part of libSBML. Please visit http://sbml.org for more\n\n# information about SBML, and the latest version of libSBML.\n\n#\n\n# Copyright (C) 2019 jointly by the following organizations:\n\n# 1. California Institute of Technology, Pasadena, CA, USA\n\n# 2. University of Heidelberg, Heidelberg, Germany\n\n#\n\n# Copyright (C) 2013-2018 jointly by the following organizations:\n\n# 1. California Institute of Technology, Pasadena, CA, USA\n\n# 2. EMBL European Bioinformatics Institute (EMBL-EBI), Hinxton, UK\n\n# 3. University of Heidelberg, Heidelberg, Germany\n\n#\n\n# Copyright (C) 2009-2013 jointly by the following organizations:\n\n# 1. California Institute of Technology, Pasadena, CA, USA\n\n# 2. EMBL European Bioinformatics Institute (EMBL-EBI), Hinxton, UK\n\n#\n\n# Copyright (C) 2006-2008 by the California Institute of Technology,\n\n# Pasadena, CA, USA\n\n#\n\n# Copyright (C) 2002-2005 jointly by the following organizations:\n\n# 1. California Institute of Technology, Pasadena, CA, USA\n\n# 2. Japan Science and Technology Agency, Japan\n\n#\n\n# This library is free software; you can redistribute it and/or modify it\n\n# under the terms of the GNU Lesser General Public License as published by the\n\n# Free Software Foundation. A copy of the license agreement is provided in the\n\n# file named \"LICENSE.txt\" included with this software distribution and also\n\n# available online as http://sbml.org/software/libsbml/license.html\n\n# ------------------------------------------------------------------------ -->\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "generator/tests/test_cmake_code/test-cmake/spatial-package.cmake" : {
      "ObjectId" : "9f005ada87aab8a679ed4c32a4e108845ae4000e",
      "LastModified" : "2019-02-27T16:38:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# @file spatial-package.cmake\n\n# @brief Top-level CMake file for spatial package\n\n# @author SBMLTeam\n\n#\n\n# <!--------------------------------------------------------------------------\n\n# This file is part of libSBML. Please visit http://sbml.org for more\n\n# information about SBML, and the latest version of libSBML.\n\n#\n\n# Copyright (C) 2019 jointly by the following organizations:\n\n# 1. California Institute of Technology, Pasadena, CA, USA\n\n# 2. University of Heidelberg, Heidelberg, Germany\n\n#\n\n# Copyright (C) 2013-2018 jointly by the following organizations:\n\n# 1. California Institute of Technology, Pasadena, CA, USA\n\n# 2. EMBL European Bioinformatics Institute (EMBL-EBI), Hinxton, UK\n\n# 3. University of Heidelberg, Heidelberg, Germany\n\n#\n\n# Copyright (C) 2009-2013 jointly by the following organizations:\n\n# 1. California Institute of Technology, Pasadena, CA, USA\n\n# 2. EMBL European Bioinformatics Institute (EMBL-EBI), Hinxton, UK\n\n#\n\n# Copyright (C) 2006-2008 by the California Institute of Technology,\n\n# Pasadena, CA, USA\n\n#\n\n# Copyright (C) 2002-2005 jointly by the following organizations:\n\n# 1. California Institute of Technology, Pasadena, CA, USA\n\n# 2. Japan Science and Technology Agency, Japan\n\n#\n\n# This library is free software; you can redistribute it and/or modify it\n\n# under the terms of the GNU Lesser General Public License as published by the\n\n# Free Software Foundation. A copy of the license agreement is provided in the\n\n# file named \"LICENSE.txt\" included with this software distribution and also\n\n# available online as http://sbml.org/software/libsbml/license.html\n\n# ------------------------------------------------------------------------ -->\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# provide summary status\n",
        "Line" : 40,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "generator/tests/test_cmake_code/test-cmake/src/spatial-package.cmake" : {
      "ObjectId" : "bc6001eaae8c6c8146bab5d0247d06f5d831215b",
      "LastModified" : "2019-02-27T16:38:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# @file spatial-package.cmake\n\n# @brief Src CMake file for spatial package\n\n# @author SBMLTeam\n\n#\n\n# <!--------------------------------------------------------------------------\n\n# This file is part of libSBML. Please visit http://sbml.org for more\n\n# information about SBML, and the latest version of libSBML.\n\n#\n\n# Copyright (C) 2019 jointly by the following organizations:\n\n# 1. California Institute of Technology, Pasadena, CA, USA\n\n# 2. University of Heidelberg, Heidelberg, Germany\n\n#\n\n# Copyright (C) 2013-2018 jointly by the following organizations:\n\n# 1. California Institute of Technology, Pasadena, CA, USA\n\n# 2. EMBL European Bioinformatics Institute (EMBL-EBI), Hinxton, UK\n\n# 3. University of Heidelberg, Heidelberg, Germany\n\n#\n\n# Copyright (C) 2009-2013 jointly by the following organizations:\n\n# 1. California Institute of Technology, Pasadena, CA, USA\n\n# 2. EMBL European Bioinformatics Institute (EMBL-EBI), Hinxton, UK\n\n#\n\n# Copyright (C) 2006-2008 by the California Institute of Technology,\n\n# Pasadena, CA, USA\n\n#\n\n# Copyright (C) 2002-2005 jointly by the following organizations:\n\n# 1. California Institute of Technology, Pasadena, CA, USA\n\n# 2. Japan Science and Technology Agency, Japan\n\n#\n\n# This library is free software; you can redistribute it and/or modify it\n\n# under the terms of the GNU Lesser General Public License as published by the\n\n# Free Software Foundation. A copy of the license agreement is provided in the\n\n# file named \"LICENSE.txt\" included with this software distribution and also\n\n# available online as http://sbml.org/software/libsbml/license.html\n\n# ------------------------------------------------------------------------ -->\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# build up sources\n",
        "Line" : 42,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# go through all directories\n",
        "Line" : 45,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# add to include directory\n",
        "Line" : 48,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# file sources\n",
        "Line" : 51,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# add sources\n",
        "Line" : 56,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# mark headers for installation\n",
        "Line" : 59,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# create source group for IDEs\n",
        "Line" : 66,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# add spatial sources to SBML sources\n",
        "Line" : 69,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "#################################################\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\n\n# add test scripts\n\n#\n",
        "Line" : 73,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 12
    },
    "generator/tests/test_other_library/test-code/omex/cmake/CMakeLists.txt" : {
      "ObjectId" : "713c1f8d40d6aebdcbe8bee98aa141e49d92d03d",
      "LastModified" : "2019-02-27T16:38:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# Parse VERSION.txt to determine the package version\n\n#\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add make dist and make check target as they are already familiar for\n\n# everyone using the gnumake build\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n#\n\n# The next lines configure the parameters for packaging the binaries.\n\n# They can be invoked with \"make package\" or \"nmake package\" or by using\n\n# cpack -G zip|deb|rpm|dmg|nsis\n\n#\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###############################################################################\n\n#\n\n# Here we have the main configuration options for libcombine.\n\n#\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build static / shared library\n\n# option(BUILD_SHARED_LIBS  \"Build shared library. (Set to OFF to build static libraries.)\" OFF)\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Whether to compile examples\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Which language bindings should be built\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add an option to compile with all warnings shown\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Use the version number in the shared library.\n\n#\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable the generation of unit tests. If enabled, all test runners\n\n# will be created and can be run with \"make test\" or ctest.\n\n# This won't work in Visual Studio 2003, so we disable this option there.\n\n#\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Use C++ namespace.\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Generate documentation.\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# marks as advanced, so as to hide documentation generation\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Re-generate the swig bindings? This really should be on by default\n\n# otherwise one might have the wrong wrapper code without support for\n\n# the libcombine packages one wants.\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Set build type default.\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Set the default dependency directory.\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "###############################################################################\n\n#\n\n# If WITH_SWIG is selected, we need to find swig\n\n#\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "###############################################################################\n\n#\n\n# Locate libsbml\n\n#\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "###############################################################################\n\n#\n\n# list of additional files to link against.\n\n#\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "###############################################################################\n\n#\n\n# Locate zlib\n\n#\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# make sure that we have a valid zip library\n",
        "Line" : 300,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# this is odd, but on windows this check always fails! must be a\n\n# bug in the current cmake version so for now only issue this\n\n# warning on linux\n",
        "Line" : 303,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "###############################################################################\n\n#\n\n# Find the C# compiler to use and set name for resulting library\n\n#\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# mark libcombine library as x86\n",
        "Line" : 332,
        "CharPositionInLine" : 12
      },
      "24" : {
        "Text" : "# mark libcombine library as x64\n",
        "Line" : 335,
        "CharPositionInLine" : 12
      },
      "25" : {
        "Text" : "###############################################################################\n\n#\n\n# Enable support for testing ... can be invoked by running ctest\n\n# or make test\n\n#\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# we do use tests, that require 2.8.4\n",
        "Line" : 351,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "###############################################################################\n\n#\n\n# Need some variables set up, such as the name for the libCombine\n\n# library and the Path and file separator characters. The\n\n# MISC_PREFIX variable will cause libcombine bindings, examples and\n\n# documentation to be installed in PREFIX/${MISC_PREFIX}.\n\n#\n",
        "Line" : 379,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# On some Linux  (64bit) systems (64bit) the libraries should be installed into lib64 rather\n\n# than lib. It will default to 'lib' but can be overwritten.\n",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "###############################################################################\n\n#\n\n# Set up remaining variables, add option for universal binaries\n\n#\n",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# on osx starting with xcode 4.3 the system root is in\n\n# the app bundle, however cmake (up to 2.8.8) does not seem\n\n# to update the path, so lets try it here\n",
        "Line" : 425,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# Since we are encountering errors with the use of libc++ on OSX\n\n# this option allows to override which stdlib to use\n",
        "Line" : 436,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# On OSX it is common to build universal binaries to support multiple\n\n# processor architectures. The default behavior is not to build\n\n# multiple architectures, as most users might not need that.\n",
        "Line" : 445,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# if universal binaries are requested and none defined so far\n\n# overwrite them with all three common architectures. If the user\n\n# specified their own list of architectures do not touch!\n",
        "Line" : 453,
        "CharPositionInLine" : 12
      },
      "34" : {
        "Text" : "# OSX Lion no longer supports ppc architecture\n",
        "Line" : 460,
        "CharPositionInLine" : 19
      },
      "35" : {
        "Text" : "# on cygwin all code is position independent so -fPIC is not needed\n",
        "Line" : 473,
        "CharPositionInLine" : 12
      },
      "36" : {
        "Text" : "# CMake no longer creates PDB files for static libraries after 2.8.11\n\n# so we store debug information in the object files instead\n",
        "Line" : 517,
        "CharPositionInLine" : 6
      },
      "37" : {
        "Text" : "# populate EXTRA_LIBS variable\n",
        "Line" : 539,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "# this is necessary to build with libxml2 on mingw\n",
        "Line" : 554,
        "CharPositionInLine" : 12
      },
      "39" : {
        "Text" : "###############################################################################\n\n#\n\n# Disable in-source build\n\n#\n",
        "Line" : 562,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "###############################################################################\n\n#\n\n# Build the actual libCombine library\n\n#\n",
        "Line" : 576,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "###############################################################################\n\n#\n\n# Initialize LIBCOMBINE sources\n\n#\n",
        "Line" : 581,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "###############################################################################\n\n#\n\n# utility macro for copying files only if they have changed, for this it is\n\n# assumed that the source file is always created. Then the macro is called.\n\n# If the target file will only be overwritten if it does not yet exist, or\n\n# its content is different. At the end the source file will be removed.\n\n#\n",
        "Line" : 587,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# message(\n\n# \"\n\n# copy_if_different_and_remove called with:\n\n#   source = ${source}\n\n#   target = ${target}\n\n# \"\n\n# )\n",
        "Line" : 595,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# message(\"target exists\")\n",
        "Line" : 605,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "#message(\"content is different\")\n",
        "Line" : 609,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "#message(\"target does not exist\")\n",
        "Line" : 613,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "###############################################################################\n\n#\n\n# create libcombine-config-common.h\n\n#\n",
        "Line" : 622,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# test_big_endian seems to fail with nmake (VS 2010) on windows\n\n# however, windows is always little endian, so catch this here\n",
        "Line" : 643,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# for whatever reason some of the values are not correctly picked up\n\n# so we encode these values here\n",
        "Line" : 648,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "##############################################################################\n\n#\n\n# create library\n\n# \n",
        "Line" : 658,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "##############################################################################\n\n#\n\n# create language bindings\n\n# \n",
        "Line" : 664,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "###############################################################################\n\n#\n\n# Build examples if specified\n\n#\n",
        "Line" : 673,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# code that builds the examples\n",
        "Line" : 680,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "#\n\n#\n\n#if(WITH_DOXYGEN)\n\n#    add_subdirectory(docs)\n\n#endif()\n",
        "Line" : 684,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "###############################################################################\n\n#\n\n# Install documentation\n\n#\n",
        "Line" : 691,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "###############################################################################\n\n#\n\n# Print Summary\n\n#\n",
        "Line" : 705,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# print selected packages if configured previously\n",
        "Line" : 818,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "## To compile a test program simply comment out the lines below ...\n\n#\n\n#OPTION(WITH_TEST_PROGRAM \" COMPILE SMALL TEST PROGRAM \" ON)\n\n#\n\n#if(WITH_TEST_PROGRAM)\n\n#\n\n#include_directories(${CMAKE_CURRENT_SOURCE_DIR})\n\n#\n\n#add_executable(libcombine_test test.cpp)\n\n#target_link_libraries(libcombine_test ${LIBCOMBINE_LIBRARY}-static)\n\n#\n\n#endif()\n\n#\n",
        "Line" : 865,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 59
    },
    "generator/tests/test_other_library/test-code/omex/cmake/src/CMakeLists.txt" : {
      "ObjectId" : "73a2e72f10b9b286ed389bca7944f7ecb4e1bca2",
      "LastModified" : "2019-02-27T16:38:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# Initialize Ca sources\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n#\n\n# utility macro for copying files only if they have changed, for this it is\n\n# assumed that the source file is always created. Then the macro is called.\n\n# If the target file will only be overwritten if it does not yet exist, or\n\n# its content is different. At the end the source file will be removed.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# message(\n\n# \"\n\n# copy_if_different_and_remove called with:\n\n#     source = ${source}\n\n#     target = ${target}\n\n# \"\n\n# )\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# message(\"target exists\")\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#message(\"content is different\")\n",
        "Line" : 29,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "#message(\"target does not exist\")\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "###############################################################################\n\n#\n\n# create libcombine-config-common.h\n\n#\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# test_big_endian seems to fail with nmake (VS 2010) on windows\n\n# however, windows is always little endian, so catch this here\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# for whatever reason some of the values are not correctly picked up\n\n# so we encode these values here\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# generate configuration for this system\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Replace: @PACKAGE_VERSION@ and @LIBCOMBINE_VERSION_NUMERIC@\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "###############################################################################\n\n#\n\n# mark header files for installation\n\n#\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "###############################################################################\n\n#\n\n# copy build specific header files\n\n#\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "###############################################################################\n\n#\n\n# specify include directories\n\n#\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "###############################################################################\n\n#\n\n# Find all sources\n\n#\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Set the constraint files to be 'headers' as they don't have to be compiled\n\n# since they don't contain symbols but rather are included directly.  Could\n\n# remove them, but that keeps their content from being found in searches, etc.\n\n# in IDEs such as VisualStudio.\n",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "#              list(REMOVE_ITEM temp \"${tempFile}\")\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# create source group for IDEs\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# add to libcombine sources\n",
        "Line" : 185,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "###############################################################################\n\n#\n\n# this is a directory level operation!\n\n#\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "###############################################################################\n\n#\n\n# Build library\n\n#\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# don't decorate static library \n",
        "Line" : 246,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "##############################################################################\n\n#\n\n# add native tests\n\n#\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\n\n#\n\n# construct list of all header files to create dependency list for \n\n# language bindings\n\n#\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\n\n#\n\n# create language bindings\n\n#\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "generator/tests/test_other_library/test-code/omex/cmake/src/bindings/CMakeLists.txt" : {
      "ObjectId" : "06f09e7cde1cf039caeffa390858570f49135014",
      "LastModified" : "2019-02-27T16:38:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# When checked removes all generated SWIG wrappers upon configure\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# and build selected language bindings\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "generator/tests/test_other_library/test-code/omex/cmake/src/omex/CMakeLists.txt" : {
      "ObjectId" : "bf99bf996a5d2258daa671c0e3d5e2db2d1e5c5f",
      "LastModified" : "2019-02-27T16:38:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# Description       : CMake build script for libCombine\n\n# \n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# generate configuration for this system\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Replace: @PACKAGE_VERSION@ and @LIBCOMBINE_VERSION_NUMERIC@\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###############################################################################\n\n#\n\n# mark header files for installation\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# install generated headers\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###############################################################################\n\n#\n\n# specify include directories\n\n#\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###############################################################################\n\n#\n\n# Find all sources\n\n#\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# create source group for IDEs\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# add to libcombine sources\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "###############################################################################\n\n#\n\n# this is a directory level operation!\n\n#\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "###############################################################################\n\n#\n\n# Build library\n\n#\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# don't decorate static library \n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "generator/tests/test_other_library/test-code/omex/csharp/CMakeLists.txt" : {
      "ObjectId" : "c080cc12ecd7de120b371abccb168ff016e45508",
      "LastModified" : "2019-02-27T16:38:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####################################################################\n\n#\n\n# determine local dependencies, so as to re-swig if one of them changed\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "####################################################################\n\n#\n\n# create correct assembly information file\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Remove SWIG wrappers if requested\n\n#\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "####################################################################\n\n#\n\n# SWIG C# bindings\n\n#\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Determine the csharp installation directory\n\n#\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "####################################################################\n\n#\n\n# Build native library\n\n#\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# if name starts with 'lib' drop the prefix, otherwise we get 'liblibXXX'\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "####################################################################\n\n#\n\n# build managed library\n\n#\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "generator/tests/test_other_library/test-code/omex/csharp/compile-native-files.cmake" : {
      "ObjectId" : "4480277e5df1338fc72ca1f18b2695c4da9e98e6",
      "LastModified" : "2019-02-27T17:04:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# @file compile-native-files.cmake\n\n# @brief Base file\n\n# @author DEVISER\n\n#\n\n# <!--------------------------------------------------------------------------\n\n# This file is part of libSBML. Please visit http://sbml.org for more\n\n# information about SBML, and the latest version of libSBML.\n\n#\n\n# Copyright (C) 2019 jointly by the following organizations:\n\n# 1. California Institute of Technology, Pasadena, CA, USA\n\n# 2. University of Heidelberg, Heidelberg, Germany\n\n#\n\n# Copyright (C) 2013-2018 jointly by the following organizations:\n\n# 1. California Institute of Technology, Pasadena, CA, USA\n\n# 2. EMBL European Bioinformatics Institute (EMBL-EBI), Hinxton, UK\n\n# 3. University of Heidelberg, Heidelberg, Germany\n\n#\n\n# Copyright (C) 2009-2013 jointly by the following organizations:\n\n# 1. California Institute of Technology, Pasadena, CA, USA\n\n# 2. EMBL European Bioinformatics Institute (EMBL-EBI), Hinxton, UK\n\n#\n\n# Copyright (C) 2006-2008 by the California Institute of Technology,\n\n# Pasadena, CA, USA\n\n#\n\n# Copyright (C) 2002-2005 jointly by the following organizations:\n\n# 1. California Institute of Technology, Pasadena, CA, USA\n\n# 2. Japan Science and Technology Agency, Japan\n\n#\n\n# This library is free software; you can redistribute it and/or modify it\n\n# under the terms of the GNU Lesser General Public License as published by the\n\n# Free Software Foundation. A copy of the license agreement is provided in the\n\n# file named \"LICENSE.txt\" included with this software distribution and also\n\n# available online as http://sbml.org/software/libsbml/license.html\n\n# ------------------------------------------------------------------------ -->\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# find all sources\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# convert paths\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# read file, prepend using statement, write again ... \n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# delete file if it exists\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# the compile run disables the following warnings\n\n# -  105: warning CS0105: The using directive for `x' appeared previously \n\n#         in this namespace (needed because of swig 3.0.2)\n\n# -  108: 'method name' hides inherited member 'base member name'. Use the \n\n#         new keyword if hiding was intended.\n\n# -  114: 'method name' hides inherited member 'base member name'. To make \n\n#         the current member override that implementation, add the override \n\n#         keyword. Otherwise add the new keyword.\n\n# - 1570: XML comment on 'class name' has badly formed XML.\n\n# - 1572: XML comment on 'method name' has a param tag for 'parameter name'\n\n#         but there is no parameter by that name.\n\n# - 1573: Parameter 'parameter name' has no matching param tag in the XML \n\n#         comment for 'method name' (but other parameters do).\n\n# - 1574: XML comment on 'method name' has cref attribute 'method name' \n\n#         that could not be resolved.\n\n# - 1591: Missing XML comment for publicly visible type or member 'method\n\n#         name'\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# compile files\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# # print variables for debug purposes\n\n# message(\"BIN_DIRECTORY     : ${BIN_DIRECTORY}\")\n\n# message(\"SRC_DIRECTORY     : ${SRC_DIRECTORY}\")\n\n# message(\"CSHARP_COMPILER   : ${CSHARP_COMPILER}\")\n\n# message(\"CSHARP_EXTRA_ARGS : ${CSHARP_EXTRA_ARGS}\")\n\n# \n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# delete testrunner if it exists\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# find all test files\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# convert paths\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# compile tests\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "generator/tests/test_other_library/test-code/omex/libcombine-config-common.h.cmake" : {
      "ObjectId" : "01b9b88a725031cc5ef3ba090781629db4d2c2e7",
      "LastModified" : "2019-02-27T16:38:20Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/**\n * @file    libcombine-config-common.h.cmake\n * @brief   Configuration variables \n */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* Define to 1 if you have the <check.h> header file. */",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Define to 1 if you have the <expat.h> header file. */",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* Define to 1 to use the Expat XML library */",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Define to 1 if you have the <errno.h> header file. */",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Define to 1 if you have the <ieeefp.h> header file. */",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Define to 1 if you have the ANSI C header files. */",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* Define to 1 if you have the <math.h> header file. */",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* Define to 1 if you have the <sys/types.h> header file. */",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* Define to 1 if you have the `m' library (-lm). */",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Define to 1 to enable primitive memory tracing. */",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Define to 1 if your processor stores words with the most significant byte\n   first (like Motorola and SPARC, unlike Intel and VAX). */",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "generator/tests/test_other_library/test-code/omex/libcombine-namespace.h.cmake" : {
      "ObjectId" : "8600eabad594a7b32753afc90c7992830f3740ff",
      "LastModified" : "2019-02-27T16:38:20Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/**\n * @file    libcombine-namespace.h\n * @brief   Defines C++ namespace of libCombine\n */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/*\n *\n * The idea of the following marcors are borrowed from \n * Xerces-C++ XML Parser (http://xerces.apache.org/xerces-c/).\n *\n */",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Define to enable libCombine C++ namespace */",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* C++ namespace of libCombine */",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "generator/tests/test_other_library/test-code/omex/libcombine-version.h.cmake" : {
      "ObjectId" : "ec5dfee68fa78648af3b7b6c0df33cf5d565381e",
      "LastModified" : "2019-02-27T16:38:20Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/**\n * @file    libcombine-version.h\n * @brief   Define libCombine version numbers for access from client software.\n *\n */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/**\n * LIBCOMBINE_DOTTED_VERSION:\n *\n * A version string of the form \"1.2.3\".\n */",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/**\n * LIBCOMBINE_VERSION:\n *\n * The version as an integer: version 1.2.3 becomes 10203.  Since the major\n * number comes first, the overall number will always increase when a new\n * libCombine is released, making it easy to use less-than and greater-than\n * comparisons when testing versions numbers.\n */",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/**\n * LIBCOMBINE_VERSION_STRING:\n *\n * The numeric version as a string: version 1.2.3 becomes \"10203\".\n */",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/**\n * Returns the version number of this copy of libCombine as an integer.\n *\n * @return the libCombine version as an integer; version 1.2.3 becomes 10203.\n */",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/**\n * Returns the version number of this copy of libCombine as a string.\n *\n * @return the libCombine version as a string; version 1.2.3 becomes\n * \"1.2.3\".\n *\n * @see getLibCombineVersionString()\n */",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/**\n * Returns the version number of this copy of libCombine as a string without\n * periods.\n *\n * @return the libCombine version as a string: version 1.2.3 becomes \"10203\".\n *\n * @see getLibCombineDottedVersion()\n */",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "generator/tests/test_other_library/test-code/sedml/cmake/CMakeLists.txt" : {
      "ObjectId" : "95d9416974f613608e86e7a7cedb567d3288bd59",
      "LastModified" : "2019-02-27T16:38:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# Parse VERSION.txt to determine the package version\n\n#\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add make dist and make check target as they are already familiar for\n\n# everyone using the gnumake build\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n#\n\n# The next lines configure the parameters for packaging the binaries.\n\n# They can be invoked with \"make package\" or \"nmake package\" or by using\n\n# cpack -G zip|deb|rpm|dmg|nsis\n\n#\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###############################################################################\n\n#\n\n# Here we have the main configuration options for libsedml.\n\n#\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build static / shared library\n\n# option(BUILD_SHARED_LIBS  \"Build shared library. (Set to OFF to build static libraries.)\" OFF)\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Whether to compile examples\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Which language bindings should be built\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add an option to compile with all warnings shown\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Use the version number in the shared library.\n\n#\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enable the generation of unit tests. If enabled, all test runners\n\n# will be created and can be run with \"make test\" or ctest.\n\n# This won't work in Visual Studio 2003, so we disable this option there.\n\n#\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Use C++ namespace.\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Generate documentation.\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# marks as advanced, so as to hide documentation generation\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Re-generate the swig bindings? This really should be on by default\n\n# otherwise one might have the wrong wrapper code without support for\n\n# the libsedml packages one wants.\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Set build type default.\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Set the default dependency directory.\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "###############################################################################\n\n#\n\n# If WITH_SWIG is selected, we need to find swig\n\n#\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "###############################################################################\n\n#\n\n# Locate libsbml\n\n#\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "###############################################################################\n\n#\n\n# list of additional files to link against.\n\n#\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "###############################################################################\n\n#\n\n# Locate zlib\n\n#\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# make sure that we have a valid zip library\n",
        "Line" : 325,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# this is odd, but on windows this check always fails! must be a\n\n# bug in the current cmake version so for now only issue this\n\n# warning on linux\n",
        "Line" : 328,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "###############################################################################\n\n#\n\n# Find the C# compiler to use and set name for resulting library\n\n#\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# mark libsedml library as x86\n",
        "Line" : 357,
        "CharPositionInLine" : 12
      },
      "24" : {
        "Text" : "# mark libsedml library as x64\n",
        "Line" : 360,
        "CharPositionInLine" : 12
      },
      "25" : {
        "Text" : "###############################################################################\n\n#\n\n# Enable support for testing ... can be invoked by running ctest\n\n# or make test\n\n#\n",
        "Line" : 368,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# we do use tests, that require 2.8.4\n",
        "Line" : 376,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "###############################################################################\n\n#\n\n# Need some variables set up, such as the name for the libSEDML\n\n# library and the Path and file separator characters. The\n\n# MISC_PREFIX variable will cause libsedml bindings, examples and\n\n# documentation to be installed in PREFIX/${MISC_PREFIX}.\n\n#\n",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# On some Linux  (64bit) systems (64bit) the libraries should be installed into lib64 rather\n\n# than lib. It will default to 'lib' but can be overwritten.\n",
        "Line" : 429,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "###############################################################################\n\n#\n\n# Set up remaining variables, add option for universal binaries\n\n#\n",
        "Line" : 435,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# on osx starting with xcode 4.3 the system root is in\n\n# the app bundle, however cmake (up to 2.8.8) does not seem\n\n# to update the path, so lets try it here\n",
        "Line" : 450,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# Since we are encountering errors with the use of libc++ on OSX\n\n# this option allows to override which stdlib to use\n",
        "Line" : 461,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# On OSX it is common to build universal binaries to support multiple\n\n# processor architectures. The default behavior is not to build\n\n# multiple architectures, as most users might not need that.\n",
        "Line" : 470,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# if universal binaries are requested and none defined so far\n\n# overwrite them with all three common architectures. If the user\n\n# specified their own list of architectures do not touch!\n",
        "Line" : 478,
        "CharPositionInLine" : 12
      },
      "34" : {
        "Text" : "# OSX Lion no longer supports ppc architecture\n",
        "Line" : 485,
        "CharPositionInLine" : 19
      },
      "35" : {
        "Text" : "# on cygwin all code is position independent so -fPIC is not needed\n",
        "Line" : 498,
        "CharPositionInLine" : 12
      },
      "36" : {
        "Text" : "# CMake no longer creates PDB files for static libraries after 2.8.11\n\n# so we store debug information in the object files instead\n",
        "Line" : 549,
        "CharPositionInLine" : 6
      },
      "37" : {
        "Text" : "# populate EXTRA_LIBS variable\n",
        "Line" : 571,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "# this is necessary to build with libxml2 on mingw\n",
        "Line" : 586,
        "CharPositionInLine" : 12
      },
      "39" : {
        "Text" : "###############################################################################\n\n#\n\n# Disable in-source build\n\n#\n",
        "Line" : 594,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "###############################################################################\n\n#\n\n# Build the actual libSEDML library\n\n#\n",
        "Line" : 608,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "###############################################################################\n\n#\n\n# Initialize LIBSEDML sources\n\n#\n",
        "Line" : 613,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "###############################################################################\n\n#\n\n# utility macro for copying files only if they have changed, for this it is\n\n# assumed that the source file is always created. Then the macro is called.\n\n# If the target file will only be overwritten if it does not yet exist, or\n\n# its content is different. At the end the source file will be removed.\n\n#\n",
        "Line" : 619,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# message(\n\n# \"\n\n# copy_if_different_and_remove called with:\n\n#   source = ${source}\n\n#   target = ${target}\n\n# \"\n\n# )\n",
        "Line" : 627,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# message(\"target exists\")\n",
        "Line" : 637,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "#message(\"content is different\")\n",
        "Line" : 641,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "#message(\"target does not exist\")\n",
        "Line" : 645,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "###############################################################################\n\n#\n\n# create libsedml-config-common.h\n\n#\n",
        "Line" : 654,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# test_big_endian seems to fail with nmake (VS 2010) on windows\n\n# however, windows is always little endian, so catch this here\n",
        "Line" : 675,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# for whatever reason some of the values are not correctly picked up\n\n# so we encode these values here\n",
        "Line" : 680,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "##############################################################################\n\n#\n\n# create library\n\n# \n",
        "Line" : 690,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "##############################################################################\n\n#\n\n# create language bindings\n\n# \n",
        "Line" : 696,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "###############################################################################\n\n#\n\n# Build examples if specified\n\n#\n",
        "Line" : 705,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# code that builds the examples\n",
        "Line" : 712,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "#\n\n#\n\n#if(WITH_DOXYGEN)\n\n#    add_subdirectory(docs)\n\n#endif()\n",
        "Line" : 716,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "###############################################################################\n\n#\n\n# Install documentation\n\n#\n",
        "Line" : 723,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "###############################################################################\n\n#\n\n# Print Summary\n\n#\n",
        "Line" : 737,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# print selected packages if configured previously\n",
        "Line" : 853,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "## To compile a test program simply comment out the lines below ...\n\n#\n\n#OPTION(WITH_TEST_PROGRAM \" COMPILE SMALL TEST PROGRAM \" ON)\n\n#\n\n#if(WITH_TEST_PROGRAM)\n\n#\n\n#include_directories(${CMAKE_CURRENT_SOURCE_DIR})\n\n#\n\n#add_executable(libsedml_test test.cpp)\n\n#target_link_libraries(libsedml_test ${LIBSEDML_LIBRARY}-static)\n\n#\n\n#endif()\n\n#\n",
        "Line" : 900,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 59
    },
    "generator/tests/test_other_library/test-code/sedml/cmake/src/CMakeLists.txt" : {
      "ObjectId" : "5f3a103c5c1cfe2a8e9a1db5e67746009e9eba3b",
      "LastModified" : "2019-02-27T16:38:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# Initialize Sed sources\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n#\n\n# utility macro for copying files only if they have changed, for this it is\n\n# assumed that the source file is always created. Then the macro is called.\n\n# If the target file will only be overwritten if it does not yet exist, or\n\n# its content is different. At the end the source file will be removed.\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# message(\n\n# \"\n\n# copy_if_different_and_remove called with:\n\n#     source = ${source}\n\n#     target = ${target}\n\n# \"\n\n# )\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# message(\"target exists\")\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#message(\"content is different\")\n",
        "Line" : 29,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "#message(\"target does not exist\")\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "###############################################################################\n\n#\n\n# create libsedml-config-common.h\n\n#\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# test_big_endian seems to fail with nmake (VS 2010) on windows\n\n# however, windows is always little endian, so catch this here\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# for whatever reason some of the values are not correctly picked up\n\n# so we encode these values here\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# generate configuration for this system\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Replace: @PACKAGE_VERSION@ and @LIBSEDML_VERSION_NUMERIC@\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "###############################################################################\n\n#\n\n# mark header files for installation\n\n#\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "###############################################################################\n\n#\n\n# copy build specific header files\n\n#\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "###############################################################################\n\n#\n\n# specify include directories\n\n#\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "###############################################################################\n\n#\n\n# Find all sources\n\n#\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Set the constraint files to be 'headers' as they don't have to be compiled\n\n# since they don't contain symbols but rather are included directly.  Could\n\n# remove them, but that keeps their content from being found in searches, etc.\n\n# in IDEs such as VisualStudio.\n",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "#              list(REMOVE_ITEM temp \"${tempFile}\")\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# create source group for IDEs\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# add to libsedml sources\n",
        "Line" : 185,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "###############################################################################\n\n#\n\n# this is a directory level operation!\n\n#\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "###############################################################################\n\n#\n\n# Build library\n\n#\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# don't decorate static library \n",
        "Line" : 246,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "##############################################################################\n\n#\n\n# add native tests\n\n#\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\n\n#\n\n# construct list of all header files to create dependency list for \n\n# language bindings\n\n#\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\n\n#\n\n# create language bindings\n\n#\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "generator/tests/test_other_library/test-code/sedml/cmake/src/bindings/CMakeLists.txt" : {
      "ObjectId" : "93abc4533f8b6ed97c6b9cf9fff6c2874b83fad7",
      "LastModified" : "2019-02-27T16:38:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# When checked removes all generated SWIG wrappers upon configure\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# and build selected language bindings\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "generator/tests/test_other_library/test-code/sedml/cmake/src/sedml/CMakeLists.txt" : {
      "ObjectId" : "588981bdcf56b2529f3f272c4d2b4c78320a192a",
      "LastModified" : "2019-02-27T16:38:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# Description       : CMake build script for libSEDML\n\n# \n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# generate configuration for this system\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Replace: @PACKAGE_VERSION@ and @LIBSEDML_VERSION_NUMERIC@\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###############################################################################\n\n#\n\n# mark header files for installation\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# install generated headers\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###############################################################################\n\n#\n\n# specify include directories\n\n#\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###############################################################################\n\n#\n\n# Find all sources\n\n#\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# create source group for IDEs\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# add to libsedml sources\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "###############################################################################\n\n#\n\n# this is a directory level operation!\n\n#\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "###############################################################################\n\n#\n\n# Build library\n\n#\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# don't decorate static library \n",
        "Line" : 141,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "generator/tests/test_other_library/test-code/sedml/csharp/CMakeLists.txt" : {
      "ObjectId" : "f3f4238e370b8e6ffaa0a89084fe21f058e239fe",
      "LastModified" : "2019-02-27T16:38:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####################################################################\n\n#\n\n# determine local dependencies, so as to re-swig if one of them changed\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "####################################################################\n\n#\n\n# create correct assembly information file\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Remove SWIG wrappers if requested\n\n#\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "####################################################################\n\n#\n\n# SWIG C# bindings\n\n#\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Determine the csharp installation directory\n\n#\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "####################################################################\n\n#\n\n# Build native library\n\n#\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# if name starts with 'lib' drop the prefix, otherwise we get 'liblibXXX'\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "####################################################################\n\n#\n\n# build managed library\n\n#\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "generator/tests/test_other_library/test-code/sedml/csharp/compile-native-files.cmake" : {
      "ObjectId" : "63f5cb35671a98f314b501ecba509bd063df9136",
      "LastModified" : "2019-02-27T16:38:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# @file compile-native-files.cmake\n\n# @brief Base file\n\n# @author DEVISER\n\n#\n\n# <!--------------------------------------------------------------------------\n\n# This file is part of libSEDML. Please visit http://sed-ml.org for more\n\n# information about SED-ML. The latest version of libSEDML can be found on\n\n# github: https://github.com/fbergmann/libSEDML/\n\n# \n",
        "Line" : 2,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Copyright (c) 2013-2019, Frank T. Bergmann\n\n# All rights reserved.\n\n# \n",
        "Line" : 12,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n# \n",
        "Line" : 16,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# 1. Redistributions of source code must retain the above copyright notice,\n\n# this\n\n# list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n\n# this list of conditions and the following disclaimer in the documentation\n\n# and/or other materials provided with the distribution.\n\n#\n\n# This library is free software; you can redistribute it and/or modify it\n\n# under the terms of the GNU Lesser General Public License as published by the\n\n# Free Software Foundation. A copy of the license agreement is provided in the\n\n# file named \"LICENSE.txt\" included with this software distribution and also\n\n# available online as http://sbml.org/software/libsbml/license.html\n\n# ------------------------------------------------------------------------ -->\n\n#\n",
        "Line" : 20,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# find all sources\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# convert paths\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# read file, prepend using statement, write again ... \n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# delete file if it exists\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# the compile run disables the following warnings\n\n# -  105: warning CS0105: The using directive for `x' appeared previously \n\n#         in this namespace (needed because of swig 3.0.2)\n\n# -  108: 'method name' hides inherited member 'base member name'. Use the \n\n#         new keyword if hiding was intended.\n\n# -  114: 'method name' hides inherited member 'base member name'. To make \n\n#         the current member override that implementation, add the override \n\n#         keyword. Otherwise add the new keyword.\n\n# - 1570: XML comment on 'class name' has badly formed XML.\n\n# - 1572: XML comment on 'method name' has a param tag for 'parameter name'\n\n#         but there is no parameter by that name.\n\n# - 1573: Parameter 'parameter name' has no matching param tag in the XML \n\n#         comment for 'method name' (but other parameters do).\n\n# - 1574: XML comment on 'method name' has cref attribute 'method name' \n\n#         that could not be resolved.\n\n# - 1591: Missing XML comment for publicly visible type or member 'method\n\n#         name'\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# compile files\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# # print variables for debug purposes\n\n# message(\"BIN_DIRECTORY     : ${BIN_DIRECTORY}\")\n\n# message(\"SRC_DIRECTORY     : ${SRC_DIRECTORY}\")\n\n# message(\"CSHARP_COMPILER   : ${CSHARP_COMPILER}\")\n\n# message(\"CSHARP_EXTRA_ARGS : ${CSHARP_EXTRA_ARGS}\")\n\n# \n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# delete testrunner if it exists\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# find all test files\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# convert paths\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# compile tests\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "generator/tests/test_other_library/test-code/sedml/libsedml-config-common.h.cmake" : {
      "ObjectId" : "916353d976d84f883a1f726e780693b16a6d676b",
      "LastModified" : "2019-02-27T16:38:20Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/**\n * @file    libsedml-config-common.h.cmake\n * @brief   Configuration variables \n */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* Define to 1 if you have the <check.h> header file. */",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Define to 1 if you have the <expat.h> header file. */",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* Define to 1 to use the Expat XML library */",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Define to 1 if you have the <errno.h> header file. */",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Define to 1 if you have the <ieeefp.h> header file. */",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Define to 1 if you have the ANSI C header files. */",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* Define to 1 if you have the <math.h> header file. */",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* Define to 1 if you have the <sys/types.h> header file. */",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* Define to 1 if you have the `m' library (-lm). */",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Define to 1 to enable primitive memory tracing. */",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Define to 1 if your processor stores words with the most significant byte\n   first (like Motorola and SPARC, unlike Intel and VAX). */",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "generator/tests/test_other_library/test-code/sedml/libsedml-namespace.h.cmake" : {
      "ObjectId" : "91df688d1fb28deb93c564ef52c4fa6ed22e614b",
      "LastModified" : "2019-02-27T16:38:20Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/**\n * @file    libsedml-namespace.h\n * @brief   Defines C++ namespace of libSEDML\n */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/*\n *\n * The idea of the following marcors are borrowed from \n * Xerces-C++ XML Parser (http://xerces.apache.org/xerces-c/).\n *\n */",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Define to enable libSEDML C++ namespace */",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* C++ namespace of libSEDML */",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "generator/tests/test_other_library/test-code/sedml/libsedml-version.h.cmake" : {
      "ObjectId" : "e52f45a6648fbc46f224d03c789311cc63b4bf2c",
      "LastModified" : "2019-02-27T16:38:20Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/**\n * @file    libsedml-version.h\n * @brief   Define libSEDML version numbers for access from client software.\n *\n */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/**\n * LIBSEDML_DOTTED_VERSION:\n *\n * A version string of the form \"1.2.3\".\n */",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/**\n * LIBSEDML_VERSION:\n *\n * The version as an integer: version 1.2.3 becomes 10203.  Since the major\n * number comes first, the overall number will always increase when a new\n * libSEDML is released, making it easy to use less-than and greater-than\n * comparisons when testing versions numbers.\n */",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/**\n * LIBSEDML_VERSION_STRING:\n *\n * The numeric version as a string: version 1.2.3 becomes \"10203\".\n */",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/**\n * Returns the version number of this copy of libSEDML as an integer.\n *\n * @return the libSEDML version as an integer; version 1.2.3 becomes 10203.\n */",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/**\n * Returns the version number of this copy of libSEDML as a string.\n *\n * @return the libSEDML version as a string; version 1.2.3 becomes\n * \"1.2.3\".\n *\n * @see getLibSEDMLVersionString()\n */",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/**\n * Returns the version number of this copy of libSEDML as a string without\n * periods.\n *\n * @return the libSEDML version as a string: version 1.2.3 becomes \"10203\".\n *\n * @see getLibSEDMLDottedVersion()\n */",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    }
  },
  "FileTypes" : {
    "CMAKE" : 28,
    "CMAKESOURCE" : 9,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 2545
}