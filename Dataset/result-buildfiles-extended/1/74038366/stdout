{
  "Repository" : "74038366",
  "Revision" : "HEAD",
  "ObjectId" : "155c214df07d2fbfe4a96aa1d41b49f9c24f8061",
  "CommitTime" : "2019-01-25T21:11:30Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "8e94d1a1b6e03943b6906cbf5195e3de9c88e093",
      "LastModified" : "2019-01-22T16:04:58Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# NOTE: This defaults the container image version to the branch that's active\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Python packages to install only from source (not from binary wheels)\n\n# Comma separated list\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Determine appropriate shasum command\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Get the branch information from git\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TAR build parameters\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# UI flag files\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# remove ui build artifacts\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove temporary build files, compiled Python files.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# convenience target to assert environment variables are defined\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# can't inherit from system ansible, it's py2\n",
        "Line" : 162,
        "CharPositionInLine" : 49
      },
      "10" : {
        "Text" : "# Install third-party requirements needed for AWX's environment.\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#$(VENV_BASE)/awx/bin/pip uninstall --yes -r requirements/requirements_tower_uninstall.txt\n",
        "Line" : 185,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# \"Install\" awx package in development mode.\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Do any one-time init tasks.\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Refresh development environment after pulling new code.\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Create Django superuser.\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Create database tables and apply any new migrations.\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Run after making changes to the models to create a new migration.\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# access database shell, asks for password\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Use with iterm2's native tmux protocol support\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Alternate approach to tmux to run all development tasks specified in\n\n# Procfile.\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Run the built-in development webserver (by default on http://localhost:8013).\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Run to start the background task dispatcher for development.\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Run to start the zeromq callback receiver\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# pyflakes pylint\n",
        "Line" : 367,
        "CharPositionInLine" : 19
      },
      "25" : {
        "Text" : "# Run all API unit tests.\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Run all API unit tests with coverage enabled.\n",
        "Line" : 398,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Output test coverage as HTML (into htmlcov directory).\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Run API unit tests across multiple Python/Django versions with Tox.\n",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Make fake data\n",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# l10n TASKS\n\n# --------------------------------------\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# check for UI po files\n",
        "Line" : 424,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Should be 'Language: zh-CN' but not 'Language: zh_CN' in zh_CN.po\n",
        "Line" : 428,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# generate UI .pot\n",
        "Line" : 454,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# generate django .pot .po\n",
        "Line" : 458,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# generate l10n .json .mo\n",
        "Line" : 466,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# End l10n TASKS\n\n# --------------------------------------\n",
        "Line" : 474,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# UI RELEASE TASKS\n\n# --------------------------------------\n",
        "Line" : 477,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# END UI RELEASE TASKS\n\n# --------------------------------------\n",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# UI TASKS\n\n# --------------------------------------\n",
        "Line" : 492,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Native docker. Builds UI and raises BrowserSync & filesystem polling.\n",
        "Line" : 507,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Builds UI with development UI without raising browser-sync or filesystem polling.\n",
        "Line" : 511,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# A standard go-to target for API developers to use building the frontend\n",
        "Line" : 518,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# END UI TASKS\n\n# --------------------------------------\n",
        "Line" : 529,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Build a pip-installable package into dist/ with a timestamped version number.\n",
        "Line" : 532,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Build a pip-installable package into dist/ with the release version number.\n",
        "Line" : 536,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Build setup bundle tarball\n",
        "Line" : 558,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Docker isolated rampart\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Docker Compose Development environment\n",
        "Line" : 575,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Ignore differences in whitespace with -b\n",
        "Line" : 598,
        "CharPositionInLine" : 1
      },
      "50" : {
        "Text" : "# Base development image build\n",
        "Line" : 607,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#docker push $(DEV_DOCKER_TAG_BASE)/awx_devel:$(COMPOSE_TAG)\n",
        "Line" : 611,
        "CharPositionInLine" : 1
      },
      "52" : {
        "Text" : "# For use when developing on \"isolated\" AWX deployments\n",
        "Line" : 613,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "#docker push $(DEV_DOCKER_TAG_BASE)/awx_isolated:$(COMPOSE_TAG)\n",
        "Line" : 617,
        "CharPositionInLine" : 1
      },
      "54" : {
        "Text" : "# Docker Development Environment with Elastic Stack Connected\n",
        "Line" : 627,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 55
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 3646
}