{
  "Repository" : "10343041",
  "Revision" : "HEAD",
  "ObjectId" : "cbe7ffb1c3222b5c1801eb7bc8b703253540e6b1",
  "CommitTime" : "2019-03-28T08:18:33Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "5a97c992e85de132d34ee326e5eb67bcf0abde76",
      "LastModified" : "2019-02-13T15:27:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=========================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=========================================================\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=========================================================\n\n# Configure Dart testing support.  This should be done before any\n\n# MESSAGE(FATAL_ERROR ...) commands are invoked.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#=========================================================\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#=========================================================\n\n# Help function to debug CMake\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#=========================================================\n\n# Default build type\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#=========================================================\n\n# Option to use visualisation feature of G4\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#=========================================================\n\n# Refuse to build with MT geant4, allow dev override\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#OPTION(GATE_ALLOW_MT_GEANT4 \"Allow multithreaded geant4 (for MT Gate development)\" OFF)\n\n#IF(Geant4_multithreaded_FOUND)\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#IF(GATE_ALLOW_MT_GEANT4)\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#MESSAGE(WARNING \"GATE does not yet work correctly with multithreaded Geant4, proceed with caution...\")\n",
        "Line" : 55,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "#ELSE()\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#MESSAGE(FATAL_ERROR \"GATE should be compiled with a non-multithreaded installation of Geant4\")\n",
        "Line" : 57,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "#ENDIF()\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#ENDIF()\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Check if OpenGL headers are still available\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#=========================================================\n\n# Build variables for G4 Version\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#MESSAGE(${Geant4_VERSION})\n\n#MESSAGE(${G4VERSION_MAJOR})\n\n#MESSAGE(${G4VERSION_MINOR})\n\n#MESSAGE(${G4VERSION_PATCH})\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#=========================================================\n\n# Option for Root use\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#=========================================================\n\n# RTK / ITK\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#=========================================================\n\n# ROOT\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#MESSAGE(\"Found Root in ${ROOT_INCLUDE_DIR} ${ROOT_LIBRARY_DIR} ${ROOT_LIBRARIES}\")\n\n#IF(ROOT_INCLUDE_DIR)\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "#MESSAGE(\"Your current Root version is ${ROOT_VERSION}\")\n",
        "Line" : 109,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "#ELSE()\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "#=========================================================\n\n# Option for Optical Photon use\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#=========================================================\n\n# Option for XRAYLIB use\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#=========================================================\n\n# Option for Davis model\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#=========================================================\n\n# Option for Clhep use\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#MESSAGE(\"Found Clhep in ${CLHEP_INCLUDE_DIR} ${CLHEP_LIBRARY}\")\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "#=========================================================\n\n# Option for GPU use\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#=========================================================\n\n# Option for LMF use\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#MESSAGE(\"Found Lmf in ${LMF_INCLUDE_DIR} ${LMF_LIBRARIES} ${LMF_LIBRARY}\")\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "#=========================================================\n\n# Option for ECAT7 use\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#MESSAGE(\"Found Ecat in ${ECAT7_INCLUDE_DIR} ${ECAT7_LIBRARIES} ${ECAT7_LIBRARY}\")\n",
        "Line" : 184,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "#=========================================================\n\n# Create configuration file\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#=========================================================\n\n# Setup Geant4 include directories and compile definitions\n\n# Setup include directory for this project\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#=========================================================\n\n# Locate sources and headers for this project\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#=========================================================\n\n# RTK\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#=========================================================\n\n# Add the executable, and link it to the Geant4/ROOT/CLHEP/ITK libraries\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#=========================================================\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#=========================================================\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#=========================================================\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#=========================================================\n\n# We remove the warning option \"shadow\", because there are tons of\n\n# such warning related to clhep/g4 system of units. Additionally,\n\n# we force the c++11 std. This is mandatory for Geant4 >= 10.2.\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#=========================================================\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#=========================================================\n\n# Display Geant4 version\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#=========================================================\n\n# Add gprof to RELWITHDEBINFO target\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#=========================================================\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "35f87a7aa639f04b8fdc9005dc70453c4bfb3652",
      "LastModified" : "2014-12-24T17:55:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "benchmarks/CMakeLists.txt" : {
      "ObjectId" : "99ad70d78482df610104cde9a10db10505f3a038",
      "LastModified" : "2018-11-07T17:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# to upload in http://midas3.kitware.com/midas/community/28\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GateAddBenchmarkData(\"DATA{benchRT/output/Config-gamma-Edep.hdr}\")\n\n# GateAddBenchmarkData(\"DATA{benchRT/output/Config-gamma-Edep.img}\")\n\n# GateAddBenchmarkData(\"DATA{benchRT/output/Config-proton-Edep.hdr}\")\n\n# GateAddBenchmarkData(\"DATA{benchRT/output/Config-proton-Edep.img}\")\n\n# GateAddBenchmarkData(\"DATA{benchRT/output/benchmarkRT.gif}\")\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cluster_tools/filemerger/Makefile" : {
      "ObjectId" : "1d4fa0cc5fcb8678caa982bad81edfc097f7d191",
      "LastModified" : "2014-12-24T17:55:45Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "cluster_tools/jobsplitter/Makefile" : {
      "ObjectId" : "e98a064e072c915571ea60c1c89728c480a5e7a4",
      "LastModified" : "2014-12-24T17:55:45Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "cmake-modules/CMakeMacroParseArguments.cmake" : {
      "ObjectId" : "7ce4c49ae5b0c5a4003d4a45a2da6e3cd38bbbff",
      "LastModified" : "2014-12-24T17:55:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMAKE_PARSE_ARGUMENTS(<prefix> <options> <one_value_keywords> <multi_value_keywords> args...)\n\n#\n\n# CMAKE_PARSE_ARGUMENTS() is intended to be used in macros or functions for\n\n# parsing the arguments given to that macro or function.\n\n# It processes the arguments and defines a set of variables which hold the\n\n# values of the respective options.\n\n#\n\n# The <options> argument contains all options for the respective macro,\n\n# i.e. keywords which can be used when calling the macro without any value\n\n# following, like e.g. the OPTIONAL keyword of the install() command.\n\n#\n\n# The <one_value_keywords> argument contains all keywords for this macro\n\n# which are followed by one value, like e.g. DESTINATION keyword of the\n\n# install() command.\n\n#\n\n# The <multi_value_keywords> argument contains all keywords for this macro\n\n# which can be followed by more than one value, like e.g. the TARGETS or\n\n# FILES keywords of the install() command.\n\n#\n\n# When done, CMAKE_PARSE_ARGUMENTS() will have defined for each of the\n\n# keywords listed in <options>, <one_value_keywords> and\n\n# <multi_value_keywords> a variable composed of the given <prefix>\n\n# followed by \"_\" and the name of the respective keyword.\n\n# These variables will then hold the respective value from the argument list.\n\n# For the <options> keywords this will be TRUE or FALSE.\n\n#\n\n# All remaining arguments are collected in a variable\n\n# <prefix>_UNPARSED_ARGUMENTS, this can be checked afterwards to see whether\n\n# your macro was called with unrecognized parameters.\n\n#\n\n# As an example here a my_install() macro, which takes similar arguments as the\n\n# real install() command:\n\n#\n\n#   function(MY_INSTALL)\n\n#     set(options OPTIONAL FAST)\n\n#     set(oneValueArgs DESTINATION RENAME)\n\n#     set(multiValueArgs TARGETS CONFIGURATIONS)\n\n#     cmake_parse_arguments(MY_INSTALL \"${options}\" \"${oneValueArgs}\" \"${multiValueArgs}\" ${ARGN} )\n\n#     ...\n\n#\n\n# Assume my_install() has been called like this:\n\n#   my_install(TARGETS foo bar DESTINATION bin OPTIONAL blub)\n\n#\n\n# After the cmake_parse_arguments() call the macro will have set the following\n\n# variables:\n\n#   MY_INSTALL_OPTIONAL = TRUE\n\n#   MY_INSTALL_FAST = FALSE (this option was not used when calling my_install()\n\n#   MY_INSTALL_DESTINATION = \"bin\"\n\n#   MY_INSTALL_RENAME = \"\" (was not used)\n\n#   MY_INSTALL_TARGETS = \"foo;bar\"\n\n#   MY_INSTALL_CONFIGURATIONS = \"\" (was not used)\n\n#   MY_INSTALL_UNPARSED_ARGUMENTS = \"blub\" (no value expected after \"OPTIONAL\"\n\n#\n\n# You can the continue and process these variables.\n\n#\n\n# Keywords terminate lists of values, e.g. if directly after a one_value_keyword\n\n# another recognized keyword follows, this is interpreted as the beginning of\n\n# the new option.\n\n# E.g. my_install(TARGETS foo DESTINATION OPTIONAL) would result in\n\n# MY_INSTALL_DESTINATION set to \"OPTIONAL\", but MY_INSTALL_DESTINATION would\n\n# be empty and MY_INSTALL_OPTIONAL would be set to TRUE therefor.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# first set all result variables to empty/FALSE\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# now iterate over all arguments and fill the result variables\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 100,
        "CharPositionInLine" : 57
      },
      "5" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 101,
        "CharPositionInLine" : 63
      },
      "6" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 102,
        "CharPositionInLine" : 61
      },
      "7" : {
        "Text" : "# propagate the result variables to the caller:\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "cmake-modules/ExternalData.cmake" : {
      "ObjectId" : "50669bd294742409d9efa1f5931e8d03e5f6834e",
      "LastModified" : "2014-12-24T17:55:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Manage data files stored outside source tree\n\n# Use this module to unambiguously reference data files stored outside the\n\n# source tree and fetch them at build time from arbitrary local and remote\n\n# content-addressed locations.  Functions provided by this module recognize\n\n# arguments with the syntax \"DATA{<name>}\" as references to external data,\n\n# replace them with full paths to local copies of those data, and create build\n\n# rules to fetch and update the local copies.\n\n#\n\n# The DATA{} syntax is literal and the <name> is a full or relative path\n\n# within the source tree.  The source tree must contain either a real data\n\n# file at <name> or a \"content link\" at <name><ext> containing a hash of the\n\n# real file using a hash algorithm corresponding to <ext>.  For example, the\n\n# argument \"DATA{img.png}\" may be satisfied by either a real \"img.png\" file in\n\n# the current source directory or a \"img.png.md5\" file containing its MD5 sum.\n\n#\n\n# The 'ExternalData_Expand_Arguments' function evaluates DATA{} references\n\n# in its arguments and constructs a new list of arguments:\n\n#  ExternalData_Expand_Arguments(\n\n#    <target>   # Name of data management target\n\n#    <outVar>   # Output variable\n\n#    [args...]  # Input arguments, DATA{} allowed\n\n#    )\n\n# It replaces each DATA{} reference in an argument with the full path of a\n\n# real data file on disk that will exist after the <target> builds.\n\n#\n\n# The 'ExternalData_Add_Test' function wraps around the CMake add_test()\n\n# command but supports DATA{} references in its arguments:\n\n#  ExternalData_Add_Test(\n\n#    <target>   # Name of data management target\n\n#    ...        # Arguments of add_test(), DATA{} allowed\n\n#    )\n\n# It passes its arguments through ExternalData_Expand_Arguments and then\n\n# invokes add_test() using the results.\n\n#\n\n# The 'ExternalData_Add_Target' function creates a custom target to manage\n\n# local instances of data files stored externally:\n\n#  ExternalData_Add_Target(\n\n#    <target>   # Name of data management target\n\n#    )\n\n# It creates custom commands in the target as necessary to make data files\n\n# available for each DATA{} reference previously evaluated by other functions\n\n# provided by this module.  A list of URL templates must be provided in the\n\n# variable ExternalData_URL_TEMPLATES using the placeholders \"%(algo)\" and\n\n# \"%(hash)\" in each template.  Data fetch rules try each URL template in order\n\n# by substituting the hash algorithm name for \"%(algo)\" and the hash value for\n\n# \"%(hash)\".\n\n#\n\n# The following hash algorithms are supported:\n\n#    %(algo)     <ext>     Description\n\n#    -------     -----     -----------\n\n#    MD5         .md5      Message-Digest Algorithm 5, RFC 1321\n\n#    SHA1        .sha1     US Secure Hash Algorithm 1, RFC 3174\n\n#    SHA224      .sha224   US Secure Hash Algorithms, RFC 4634\n\n#    SHA256      .sha256   US Secure Hash Algorithms, RFC 4634\n\n#    SHA384      .sha384   US Secure Hash Algorithms, RFC 4634\n\n#    SHA512      .sha512   US Secure Hash Algorithms, RFC 4634\n\n# Note that the hashes are used only for unique data identification and\n\n# download verification.  This is not security software.\n\n#\n\n# Example usage:\n\n#   include(ExternalData)\n\n#   set(ExternalData_URL_TEMPLATES \"file:///local/%(algo)/%(hash)\"\n\n#                                  \"http://data.org/%(algo)/%(hash)\")\n\n#   ExternalData_Add_Test(MyData\n\n#     NAME MyTest\n\n#     COMMAND MyExe DATA{MyInput.png}\n\n#     )\n\n#   ExternalData_Add_Target(MyData)\n\n# When test \"MyTest\" runs the \"DATA{MyInput.png}\" argument will be replaced by\n\n# the full path to a real instance of the data file \"MyInput.png\" on disk.  If\n\n# the source tree contains a content link such as \"MyInput.png.md5\" then the\n\n# \"MyData\" target creates a real \"MyInput.png\" in the build tree.\n\n#\n\n# The DATA{} syntax can be told to fetch a file series using the form\n\n# \"DATA{<name>,:}\", where the \":\" is literal.  If the source tree contains a\n\n# group of files or content links named like a series then a reference to one\n\n# member adds rules to fetch all of them.  Although all members of a series\n\n# are fetched, only the file originally named by the DATA{} argument is\n\n# substituted for it.  The default configuration recognizes file series names\n\n# ending with \"#.ext\", \"_#.ext\", \".#.ext\", or \"-#.ext\" where \"#\" is a sequence\n\n# of decimal digits and \".ext\" is any single extension.  Configure it with a\n\n# regex that parses <number> and <suffix> parts from the end of <name>:\n\n#  ExternalData_SERIES_PARSE = regex of the form (<number>)(<suffix>)$\n\n# For more complicated cases set:\n\n#  ExternalData_SERIES_PARSE = regex with at least two () groups\n\n#  ExternalData_SERIES_PARSE_PREFIX = <prefix> regex group number, if any\n\n#  ExternalData_SERIES_PARSE_NUMBER = <number> regex group number\n\n#  ExternalData_SERIES_PARSE_SUFFIX = <suffix> regex group number\n\n# Configure series number matching with a regex that matches the\n\n# <number> part of series members named <prefix><number><suffix>:\n\n#  ExternalData_SERIES_MATCH = regex matching <number> in all series members\n\n# Note that the <suffix> of a series does not include a hash-algorithm\n\n# extension.\n\n#\n\n# The DATA{} syntax can alternatively match files associated with the named\n\n# file and contained in the same directory.  Associated files may be specified\n\n# by options using the syntax DATA{<name>,<opt1>,<opt2>,...}.  Each option may\n\n# specify one file by name or specify a regular expression to match file names\n\n# using the syntax REGEX:<regex>.  For example, the arguments\n\n#   DATA{MyData/MyInput.mhd,MyInput.img}                   # File pair\n\n#   DATA{MyData/MyFrames00.png,REGEX:MyFrames[0-9]+\\\\.png} # Series\n\n# will pass MyInput.mha and MyFrames00.png on the command line but ensure\n\n# that the associated files are present next to them.\n\n#\n\n# The DATA{} syntax may reference a directory using a trailing slash and a\n\n# list of associated files.  The form DATA{<name>/,<opt1>,<opt2>,...} adds\n\n# rules to fetch any files in the directory that match one of the associated\n\n# file options.  For example, the argument DATA{MyDataDir/,REGEX:.*} will pass\n\n# the full path to a MyDataDir directory on the command line and ensure that\n\n# the directory contains files corresponding to every file or content link in\n\n# the MyDataDir source directory.\n\n#\n\n# The variable ExternalData_LINK_CONTENT may be set to the name of a supported\n\n# hash algorithm to enable automatic conversion of real data files referenced\n\n# by the DATA{} syntax into content links.  For each such <file> a content\n\n# link named \"<file><ext>\" is created.  The original file is renamed to the\n\n# form \".ExternalData_<algo>_<hash>\" to stage it for future transmission to\n\n# one of the locations in the list of URL templates (by means outside the\n\n# scope of this module).  The data fetch rule created for the content link\n\n# will use the staged object if it cannot be found using any URL template.\n\n#\n\n# The variable ExternalData_OBJECT_STORES may be set to a list of local\n\n# directories that store objects using the layout <dir>/%(algo)/%(hash).\n\n# These directories will be searched first for a needed object.  If the object\n\n# is not available in any store then it will be fetched remotely using the URL\n\n# templates and added to the first local store listed.  If no stores are\n\n# specified the default is a location inside the build tree.\n\n#\n\n# The variable ExternalData_SOURCE_ROOT may be set to the highest source\n\n# directory containing any path named by a DATA{} reference.  The default is\n\n# CMAKE_SOURCE_DIR.  ExternalData_SOURCE_ROOT and CMAKE_SOURCE_DIR must refer\n\n# to directories within a single source distribution (e.g. they come together\n\n# in one tarball).\n\n#\n\n# The variable ExternalData_BINARY_ROOT may be set to the directory to hold\n\n# the real data files named by expanded DATA{} references.  The default is\n\n# CMAKE_BINARY_DIR.  The directory layout will mirror that of content links\n\n# under ExternalData_SOURCE_ROOT.\n\n#\n\n# Variables ExternalData_TIMEOUT_INACTIVITY and ExternalData_TIMEOUT_ABSOLUTE\n\n# set the download inactivity and absolute timeouts, in seconds.  The defaults\n\n# are 60 seconds and 300 seconds, respectively.  Set either timeout to 0\n\n# seconds to disable enforcement.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010-2013 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Expand all arguments as a single string to preserve escaped semicolons.\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Set \"_ExternalData_FILE_${file}\" for each output file to avoid duplicate\n\n# rules.  Use local data first to prefer real files over content links.\n",
        "Line" : 176,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Custom commands to copy or link local data.\n",
        "Line" : 179,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Custom commands to fetch remote data.\n",
        "Line" : 201,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Users care about the data file, so hide the hash/timestamp file.\n",
        "Line" : 212,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# The hash/timestamp file is the output from the build perspective.\n\n# List the real file as a second output in case it is a broken link.\n\n# The files must be listed in this order so CMake can hide from the\n\n# make tool that a symlink target may not be newer than the input.\n",
        "Line" : 214,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Run the data fetch/update script.\n",
        "Line" : 219,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Update whenever the object hash changes.\n",
        "Line" : 225,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Custom target to drive all update commands.\n",
        "Line" : 232,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Replace DATA{} references with real arguments.\n",
        "Line" : 237,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# This list expansion un-escapes semicolons in list element values so we\n\n# must re-escape them below anywhere a new list expansion will occur.\n",
        "Line" : 241,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Re-escape in-value semicolons before expansion in foreach below.\n",
        "Line" : 245,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# Split argument into DATA{}-pieces and other pieces.\n",
        "Line" : 247,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# Compose output argument with DATA{}-pieces replaced.\n",
        "Line" : 249,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# Replace this DATA{}-piece with a file path.\n",
        "Line" : 253,
        "CharPositionInLine" : 10
      },
      "17" : {
        "Text" : "# No replacement needed for this piece.\n",
        "Line" : 258,
        "CharPositionInLine" : 10
      },
      "18" : {
        "Text" : "# No replacements needed in this argument.\n",
        "Line" : 263,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# Re-escape in-value semicolons in resulting list.\n",
        "Line" : 266,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Private helper interface\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Separate data path from the options.\n",
        "Line" : 328,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Interpret trailing slashes as directories.\n",
        "Line" : 333,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Convert to full path.\n",
        "Line" : 340,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Convert to relative path under the source tree.\n",
        "Line" : 348,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Handle in-source builds gracefully.\n",
        "Line" : 372,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Entries external to the source tree.\n\n# Entries internal to the source tree.\n",
        "Line" : 381,
        "CharPositionInLine" : 19
      },
      "27" : {
        "Text" : "# Process options.\n",
        "Line" : 385,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Regular expression to match associated files.\n",
        "Line" : 391,
        "CharPositionInLine" : 6
      },
      "29" : {
        "Text" : "# Activate series matching.\n",
        "Line" : 395,
        "CharPositionInLine" : 6
      },
      "30" : {
        "Text" : "# Specific associated file.\n",
        "Line" : 398,
        "CharPositionInLine" : 6
      },
      "31" : {
        "Text" : "# Load a whole file series.\n",
        "Line" : 413,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# Load listed/matching associated files in the directory.\n",
        "Line" : 417,
        "CharPositionInLine" : 6
      },
      "33" : {
        "Text" : "# Load the named data file.\n",
        "Line" : 425,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Load listed/matching associated files.\n",
        "Line" : 428,
        "CharPositionInLine" : 6
      },
      "35" : {
        "Text" : "# Make the series available in the build tree.\n",
        "Line" : 442,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# The whole series is in the source tree.\n",
        "Line" : 449,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# Associated files lie in the same directory.\n",
        "Line" : 455,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# Find files named explicitly.\n",
        "Line" : 466,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# Find files matching the given regular expressions.\n",
        "Line" : 472,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# Match only the named data by itself.\n",
        "Line" : 483,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Configure series parsing and matching.\n",
        "Line" : 489,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# Parse the base, number, and extension components of the series.\n",
        "Line" : 522,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# Glob files that might match the series.\n\n# Then match base, number, and extension.\n",
        "Line" : 536,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# matches\n",
        "Line" : 554,
        "CharPositionInLine" : 43
      },
      "45" : {
        "Text" : "# not a directory\n",
        "Line" : 555,
        "CharPositionInLine" : 51
      },
      "46" : {
        "Text" : "# not staged obj\n",
        "Line" : 556,
        "CharPositionInLine" : 63
      },
      "47" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Private script mode interface\n",
        "Line" : 578,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Create a temporary file first.\n",
        "Line" : 593,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# Create a symbolic link.\n",
        "Line" : 599,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# Use relative path if files are close enough.\n",
        "Line" : 602,
        "CharPositionInLine" : 6
      },
      "51" : {
        "Text" : "# Create a copy.\n",
        "Line" : 612,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# Atomically create/replace the real destination.\n",
        "Line" : 620,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# Search all object stores for an existing object.\n",
        "Line" : 665,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# Download object to the first store.\n",
        "Line" : 675,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# Verify downloaded object.\n",
        "Line" : 692,
        "CharPositionInLine" : 6
      },
      "56" : {
        "Text" : "# Check if file already corresponds to the object.\n",
        "Line" : 741,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "#message(STATUS \"File already corresponds to object\")\n",
        "Line" : 748,
        "CharPositionInLine" : 6
      },
      "58" : {
        "Text" : "# Touch the file to convince the build system it is up to date.\n",
        "Line" : 754,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "# Atomically update the hash/timestamp file to record the object referenced.\n",
        "Line" : 760,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 60
    },
    "cmake-modules/FindCLHEP.cmake" : {
      "ObjectId" : "8b59f1c0adbaae9e0fd345a7797b8464c002ade7",
      "LastModified" : "2016-05-04T05:13:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the CLHEP High Energy Physics library and headers\n\n# Usage of this module is as follows\n\n#\n\n# == Using any header-only components of CLHEP: ==\n\n#\n\n#     find_package( CLHEP 2.3.1.0 )\n\n#     if(CLHEP_FOUND)\n\n#         include_directories(${CLHEP_INCLUDE_DIRS})\n\n#         add_executable(foo foo.cc)\n\n#     endif()\n\n#\n\n# == Using the binary CLHEP library ==\n\n#\n\n#     find_package( CLHEP 2.3.1.0 )\n\n#     if(CLHEP_FOUND)\n\n#         include_directories(${CLHEP_INCLUDE_DIRS})\n\n#         add_executable(foo foo.cc)\n\n#         target_link_libraries(foo ${CLHEP_LIBRARIES})\n\n#     endif()\n\n#\n\n# You can provide a minimum version number that should be used.\n\n# If you provide this version number and specify the REQUIRED attribute,\n\n# this module will fail if it can't find a CLHEP of the specified version\n\n# or higher. If you further specify the EXACT attribute, then this module\n\n# will fail if it can't find a CLHEP with a version eaxctly as specified.\n\n#\n\n# ===========================================================================\n\n# Variables used by this module which can be used to change the default\n\n# behaviour, and hence need to be set before calling find_package:\n\n#\n\n#  CLHEP_ROOT_DIR        The preferred installation prefix for searching for\n\n#                        CLHEP. Set this if the module has problems finding\n\n#                        the proper CLHEP installation.\n\n#\n\n# If you don't supply CLHEP_ROOT_DIR, the module will search on the standard\n\n# system paths. On UNIX, the module will also try to find the clhep-config\n\n# program in the PATH, and if found will use the prefix supplied by this\n\n# program as a HINT on where to find the CLHEP headers and libraries.\n\n#\n\n# You can re-run CMake with a different version of CLHEP_ROOT_DIR to\n\n# force a new search for CLHEP using the new version of CLHEP_ROOT_DIR.\n\n# CLHEP_ROOT_DIR is cached and so can be editted in the CMake curses\n\n# and GUI interfaces\n\n#\n\n# ============================================================================\n\n# Variables set by this module:\n\n#\n\n#  CLHEP_FOUND           System has CLHEP.\n\n#\n\n#  CLHEP_INCLUDE_DIRS    CLHEP include directories: not cached.\n\n#\n\n#  CLHEP_LIBRARIES       Link to these to use the CLHEP library: not cached.\n\n#\n\n# ===========================================================================\n\n# If CLHEP is installed in a non-standard way, e.g. a non GNU-style install\n\n# of <prefix>/{lib,include}, then this module may fail to locate the headers\n\n# and libraries as needed. In this case, the following cached variables can\n\n# be editted to point to the correct locations.\n\n#\n\n#  CLHEP_INCLUDE_DIR    The path to the CLHEP include directory: cached\n\n#\n\n#  CLHEP_LIBRARY        The path to the CLHEP library: cached\n\n#\n\n# You should not need to set these in the vast majority of cases\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#============================================================================\n\n# Copyright (C) 2010,2011 Ben Morgan <Ben.Morgan@warwick.ac.uk>\n\n# Copyright (C) 2010,2011 University of Warwick\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice,\n\n#   this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n#\n\n# * Neither the name of the University of Warwick nor the names of its\n\n#   contributors may be used to endorse or promote products derived from\n\n#   this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n\n# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\n# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\n# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\n# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n\n# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n\n# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n\n# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#============================================================================\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# Define library components for use if requested\n\n#\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# - and their interdependencies (taken from CLHEP webpage, may not\n\n# be totally up to date, but assumed to be complete\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Enable re-search if known CLHEP_ROOT_DIR changes?\n\n#\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#set(CLHEP_INCLUDE_DIR CLHEP_INCLUDE_DIR-NOTFOUND)\n\n#set(CLHEP_LIBRARY CLHEP_LIBRARY-NOTFOUND)\n\n#foreach(__clhep_comp ${CLHEP_COMPONENTS})\n\n#set(CLHEP_${__clhep_comp}_LIBRARY CLHEP_${__clhep_comp}_LIBRARY-NOTFOUND)\n\n#endforeach()\n\n#set(CLHEP_CONFIG_EXECUTABLE CLHEP_CONFIG_EXECUTABLE-NOTFOUND)\n",
        "Line" : 136,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# - If we already found CLHEP, be quiet\n\n#\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Set up HINTS on where to look for CLHEP\n\n# If we're on UNIX, see if we can find clhep-config and use its --prefix\n\n# as an extra hint.\n\n#\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Try and find clhep-config in the user's path, but hint at the bin\n\n# directory under CLHEP_ROOT_DIR because we'd ideally like to pick up\n\n# the config program that matches the libraries/headers.\n\n# We only use it as a fallback though.\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Do we need to set suitable defaults?\n",
        "Line" : 187,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Find the CLHEP headers\n\n# Use Units/defs.h as locator as this is pretty consistent through versions\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Extract the CLHEP version from defs.h\n\n# Versions COMPATIBLE if RequestedVersion > FoundVersion\n\n# Also check if versions exact\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Find the CLHEP library - AFTER version checking because CLHEP component\n\n# libs are named including the version number\n\n# Prefer lib64 if available.\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Resolve dependencies of requested components\n",
        "Line" : 240,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Construct an error message for FPHSA\n\n#\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Handle the QUIETLY and REQUIRED arguments, setting CLHEP_FOUND to TRUE if\n\n# all listed variables are TRUE\n\n#\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# If we found CLHEP, set the needed non-cache variables\n\n#\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Create imported targets\n",
        "Line" : 314,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Construct imported target name\n",
        "Line" : 316,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Create both CLHEP and CLHEP::CLHEP targets\n",
        "Line" : 320,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# Have a component target - these are always namespaced\n\n# Note that at present, link interfaces aren't created...\n",
        "Line" : 336,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Mark cache variables that can be adjusted as advanced\n\n#\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "cmake-modules/FindLIBXML2.cmake" : {
      "ObjectId" : "3ecb3281acd1ee744219e978a5705b49ac04cac8",
      "LastModified" : "2014-12-24T17:55:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LibXml2\n\n# Once done this will define\n\n#  LIBXML2_FOUND - System has LibXml2\n\n#  LIBXML2_INCLUDE_DIRS - The LibXml2 include directories\n\n#  LIBXML2_LIBRARIES - The libraries needed to use LibXml2\n\n#  LIBXML2_DEFINITIONS - Compiler switches required for using LibXml2\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBXML2_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake-modules/FindLIBXRL.cmake" : {
      "ObjectId" : "524f474fca57768b0d977b69dc2b8987840adab5",
      "LastModified" : "2018-11-07T17:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libxrl\n\n# Once done this will define\n\n#  LIBXRL_FOUND - System has libxrl\n\n#  LIBXRL_INCLUDE_DIRS - The libxrl include directories\n\n#  LIBXRL_LIBRARIES - The libraries needed to use libxrl\n\n#  LIBXRL_DEFINITIONS - Compiler switches required for using libxrl\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBXRL_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake-modules/FindROOT.cmake" : {
      "ObjectId" : "69d9097b4346ff489ab551da98b42b16ea075126",
      "LastModified" : "2018-11-07T17:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Finds ROOT instalation\n\n# This module sets up ROOT information\n\n# It defines:\n\n# ROOT_FOUND          If the ROOT is found\n\n# ROOT_INCLUDE_DIR    PATH to the include directory\n\n# ROOT_LIBRARIES      Most common libraries\n\n# ROOT_LIBRARY_DIR    PATH to the library directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(ROOT_LIBRARIES ${ROOT_LIBRARIES} -lThread -lMinuit -lHtml -lVMC -lEG -lGeom -lTreePlayer -lXMLIO -lProof)\n\n#set(ROOT_LIBRARIES ${ROOT_LIBRARIES} -lProofPlayer -lMLP -lSpectrum -lEve -lRGL -lGed -lXMLParser -lPhysics)\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Make variables changeble to the advanced user\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# function ROOT_GENERATE_DICTIONARY( dictionary\n\n#                                    header1 header2 ...\n\n#                                    LINKDEF linkdef1 ...\n\n#                                    OPTIONS opt1...)\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---Get the list of header files-------------------------\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#---Get the list of include directories------------------\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#---Get LinkDef.h file------------------------------------\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#---call rootcint------------------------------------------\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "cmake-modules/GateExternalData.cmake" : {
      "ObjectId" : "b3833d7bcc7020a08f5d500d207cf0ed313ee7a9",
      "LastModified" : "2018-11-07T17:55:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Data used to be published by MIDAS\n\n# \"https://midas3.kitware.com/midas/api/rest?method=midas.bitstream.download&checksum=%(hash)&algorithm=%(algo)\"\n\n# New data server at KitWare, with new RESTful API, which only supports sha512 hashes (no md5)\n\n# To look at the collection (not super informative), go to:\n\n# https://data.kitware.com/#collection/5be2bffb8d777f21798e28bb\n\n# If you want to add data, ask David S. or David B.\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "source/externals/itk-mhd/CMakeLists.txt" : {
      "ObjectId" : "c070b9228db7dc30c54aa71d73d2ec035591cbd3",
      "LastModified" : "2018-11-07T17:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ADD_EXECUTABLE(testmhd testmhd.cxx)\n\n# TARGET_LINK_LIBRARIES(testmhd ITKMetaIO itkzlib)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/externals/itk-mhd/itkThirdParty.cmake" : {
      "ObjectId" : "caa88c0c1326de391834825314555b72d517bdb8",
      "LastModified" : "2018-11-07T17:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# The in-tree third-party libraries are not exported.  We only need\n\n# the include directory inside the tree.  If using a third-party\n\n# library from the system, though, make sure the system include\n\n# directory is consistent inside and outside the tree.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "source/externals/itk-mhd/itkzlib/CMakeLists.txt" : {
      "ObjectId" : "c14cfec699365c5a0049f33641d1ee41be4cf3cc",
      "LastModified" : "2018-11-07T17:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# source files for zlib\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for windows add the .def and .rc files to the source list\n\n# if building shared libs\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Apply user-defined properties to the library target.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#INSTALL(TARGETS itkzlib\n\n#  RUNTIME DESTINATION ${ITK_INSTALL_BIN_DIR_CM24} COMPONENT RuntimeLibraries\n\n#  LIBRARY DESTINATION ${ITK_INSTALL_LIB_DIR_CM24} COMPONENT RuntimeLibraries\n\n#  ARCHIVE DESTINATION ${ITK_INSTALL_LIB_DIR_CM24} COMPONENT Development)\n\n#\n\n#INSTALL(FILES\n\n#  ${ITKZLIB_SOURCE_DIR}/zlib.h\n\n#  ${ITKZLIB_SOURCE_DIR}/zconf.h\n\n#  ${ITKZLIB_SOURCE_DIR}/itk_zlib_mangle.h\n\n#  ${ITKZLIB_BINARY_DIR}/zlibDllConfig.h\n\n#  DESTINATION ${ITK_INSTALL_INCLUDE_DIR_CM24}/Utilities/itkzlib\n\n#  COMPONENT Development)\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "source/externals/itk-mhd/src/CMakeLists.txt" : {
      "ObjectId" : "6fbb52063e7716273301fedbdc33881e1d672bc7",
      "LastModified" : "2018-11-07T17:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# MetaIO\n\n# Copyright 2000-2011 Insight Software Consortium\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Need nsl to resolve gethostbyname on SunOS-5.8\n\n# and socket also\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ADD_SUBDIRECTORY(tests)\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO: Install Copyright.txt\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    }
  },
  "FileTypes" : {
    "CMAKE" : 14,
    "MAKEFILE" : 2
  },
  "ElapsedTime" : 1480
}