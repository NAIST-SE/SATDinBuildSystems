{
  "Repository" : "50053",
  "Revision" : "HEAD",
  "ObjectId" : "b0a6e17b082ce0d35426c4419ab1c183d3f55b4b",
  "CommitTime" : "2019-04-15T19:53:33Z",
  "Files" : {
    "build.xml" : {
      "ObjectId" : "528aa4b06d3cdbe443527ef66e2e08fb88cf37d5",
      "LastModified" : "2019-04-05T19:41:28Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " Default build compiles all platform-independent stuff as well\n       as the JNI bits for the current platform, using the arch model\n       of the current Java VM to determine whether 32- or 64-bit\n       binaries are built (ANT_OPTS=-d32/-d64 to switch on platforms that\n       support it).\n\n       Cross-compile by specifying -Dos.prefix={name-arch} to ant\n       (cross-compile currently only configured/tested on w32ce-arm and\n       android targets) \n\n       Use ANT_OPTS=-D-native=true to build native parts, or directly\n         invoke the native or test targets\n       Use ANT_OPTS=-Dheadless to run tests headless\n       Use ANT_OPTS=-Drelease to stage a final, non-snapshot version\n    ",
        "Line" : 22,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n  Conventions (since ant can't easily specify arbitrary file dependencies):\n  The uptodate property for a given target TARGET is \"-TARGET\"; the actual\n  target to generate the uptodate property is named \":TARGET\".\n\n  Properties (except for uptodate properties) separate words by dots, targets\n  by dashes.\n  ",
        "Line" : 31,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : " global properties ",
        "Line" : 33,
        "CharPositionInLine" : 29
      },
      "3" : {
        "Text" : " (all build-related props should go in -dynamic-properties) ",
        "Line" : 34,
        "CharPositionInLine" : 70
      },
      "4" : {
        "Text" : " JNA library release version - android versionCode is derived from mjar/minor/revision ",
        "Line" : 60,
        "CharPositionInLine" : 97
      },
      "5" : {
        "Text" : "${build.number}",
        "Line" : 64,
        "CharPositionInLine" : 64
      },
      "6" : {
        "Text" : " jnidispatch library release version ",
        "Line" : 72,
        "CharPositionInLine" : 47
      },
      "7" : {
        "Text" : "${build.number}",
        "Line" : 76,
        "CharPositionInLine" : 64
      },
      "8" : {
        "Text" : " Set up restrictions for w32ce, based on JavaME/CDC ",
        "Line" : 86,
        "CharPositionInLine" : 62
      },
      "9" : {
        "Text" : "\n    Default compatibility, 1.6, or whatever version is running\n\n    Release builds of JNA target 1.6 and should be build on JDK 8, as JDK 9\n    introduced changes in the ByteBuffer class, which result in classes, that\n    can't be loaded on Java 6.\n\n    JDK 11 is the last JDK, that supports creation of Java 6 compatible class\n    files.\n  ",
        "Line" : 103,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : " JNA tests require at least 1.8 compatiblity ",
        "Line" : 114,
        "CharPositionInLine" : 55
      },
      "11" : {
        "Text" : " Maven ",
        "Line" : 127,
        "CharPositionInLine" : 17
      },
      "12" : {
        "Text" : " define Maven coordinates ",
        "Line" : 128,
        "CharPositionInLine" : 36
      },
      "13" : {
        "Text" : " defined maven snapshots and staging repository id and url ",
        "Line" : 142,
        "CharPositionInLine" : 69
      },
      "14" : {
        "Text" : " Miscellaneous ",
        "Line" : 148,
        "CharPositionInLine" : 25
      },
      "15" : {
        "Text" : " Prepare additional ant task ",
        "Line" : 158,
        "CharPositionInLine" : 39
      },
      "16" : {
        "Text" : " Add other supported platforms here ",
        "Line" : 246,
        "CharPositionInLine" : 48
      },
      "17" : {
        "Text" : " Darwin builds are universal, no arch required ",
        "Line" : 286,
        "CharPositionInLine" : 59
      },
      "18" : {
        "Text" : " Keep all natives separate ",
        "Line" : 306,
        "CharPositionInLine" : 39
      },
      "19" : {
        "Text" : " Bundle native components with primary jar to facilitate\n         easy distribution to common platforms.\n      ",
        "Line" : 410,
        "CharPositionInLine" : 10
      },
      "20" : {
        "Text" : "\n            OSGi Bundle attributes\n            See http://www.osgi.org/Specifications/Reference\n          ",
        "Line" : 425,
        "CharPositionInLine" : 14
      },
      "21" : {
        "Text" : " Note that no terminal \"*\" is included in this list,\n             which will force failure on unsupported platforms.\n          ",
        "Line" : 438,
        "CharPositionInLine" : 14
      },
      "22" : {
        "Text" : " Dummy entries in R.txt and the string resources are needed or a grails\n         build using this library will fail (tested with Android Studio 2.2.3 ",
        "Line" : 596,
        "CharPositionInLine" : 82
      },
      "23" : {
        "Text" : " OSGi manifest properties ",
        "Line" : 651,
        "CharPositionInLine" : 40
      },
      "24" : {
        "Text" : " Sources package as required by maven ",
        "Line" : 661,
        "CharPositionInLine" : 50
      },
      "25" : {
        "Text" : " args are based on GNU grep, other versions may differ ",
        "Line" : 693,
        "CharPositionInLine" : 67
      },
      "26" : {
        "Text" : " Clean up gcj javah output to match that of Sun's javah ",
        "Line" : 701,
        "CharPositionInLine" : 68
      },
      "27" : {
        "Text" : " Invalidate native libraries when native API changes ",
        "Line" : 729,
        "CharPositionInLine" : 63
      },
      "28" : {
        "Text" : " Ensure Makefile ARCH property properly set ",
        "Line" : 816,
        "CharPositionInLine" : 56
      },
      "29" : {
        "Text" : " ensure ARCH is set properly for 64-bit capable platforms ",
        "Line" : 847,
        "CharPositionInLine" : 70
      },
      "30" : {
        "Text" : " use ANT_OPTS=-d64/-d32 to build 64-bit/32-bit if not the platform default ",
        "Line" : 848,
        "CharPositionInLine" : 87
      },
      "31" : {
        "Text" : " Windows' drive letters and spaces in absolute paths wreak havoc on\n         make ",
        "Line" : 906,
        "CharPositionInLine" : 18
      },
      "32" : {
        "Text" : " Allow explicit override of make variables ",
        "Line" : 928,
        "CharPositionInLine" : 55
      },
      "33" : {
        "Text" : " Native resource path within jna.jar ",
        "Line" : 932,
        "CharPositionInLine" : 49
      },
      "34" : {
        "Text" : " Default make program ",
        "Line" : 935,
        "CharPositionInLine" : 34
      },
      "35" : {
        "Text" : " Exclude generated files from the ZIP ",
        "Line" : 978,
        "CharPositionInLine" : 58
      },
      "36" : {
        "Text" : " For web start, native libraries may be provided in the root of ",
        "Line" : 1029,
        "CharPositionInLine" : 76
      },
      "37" : {
        "Text" : " an included jar file ",
        "Line" : 1030,
        "CharPositionInLine" : 34
      },
      "38" : {
        "Text" : " Embed testlib-jar at root and at default resource path ",
        "Line" : 1075,
        "CharPositionInLine" : 68
      },
      "39" : {
        "Text" : " Create a jar for easy movement of tests, and jar load test ",
        "Line" : 1092,
        "CharPositionInLine" : 72
      },
      "40" : {
        "Text" : " Ensure jar-based library is unavailable on FS-based class path ",
        "Line" : 1103,
        "CharPositionInLine" : 76
      },
      "41" : {
        "Text" : " To allow JNLP tests to run, import the JNA testing certificate as a CA ",
        "Line" : 1117,
        "CharPositionInLine" : 84
      },
      "42" : {
        "Text" : " keytool -exportcert -file jna.csr -keystore jna.keystore -alias jna ",
        "Line" : 1118,
        "CharPositionInLine" : 81
      },
      "43" : {
        "Text" : " javaws -viewer (security tab, import CSR as CA",
        "Line" : 1119,
        "CharPositionInLine" : 59
      },
      "44" : {
        "Text" : "\n    <signjar alias=\"jna\" keystore=\"jna.keystore\" storepass=\"jnadev\" lazy=\"true\">\n      <fileset dir=\"${build}/jws\" includes=\"${jar},${testjar},junit.jar,jnidispatch.jar,clover.jar\"/>\n    </signjar>\n    ",
        "Line" : 1124,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : " 'shared' should be the path to a folder mounted as the mobile\n         device/simulator storage card. ",
        "Line" : 1130,
        "CharPositionInLine" : 44
      },
      "46" : {
        "Text" : " 'shared' should be the path to a folder mounted as the mobile\n         device/simulator storage card. ",
        "Line" : 1137,
        "CharPositionInLine" : 44
      },
      "47" : {
        "Text" : " w32ce arm testing ",
        "Line" : 1139,
        "CharPositionInLine" : 31
      },
      "48" : {
        "Text" : " When running tests from an IDE, be sure to set jna.library.path ",
        "Line" : 1174,
        "CharPositionInLine" : 75
      },
      "49" : {
        "Text" : " to where the test library (testlib) is found.                   ",
        "Line" : 1175,
        "CharPositionInLine" : 75
      },
      "50" : {
        "Text" : " optionally run headless ",
        "Line" : 1218,
        "CharPositionInLine" : 39
      },
      "51" : {
        "Text" : " avoid VM conflicts with JNA protected mode ",
        "Line" : 1220,
        "CharPositionInLine" : 58
      },
      "52" : {
        "Text" : " Ignore any system install of JNA ",
        "Line" : 1224,
        "CharPositionInLine" : 48
      },
      "53" : {
        "Text" : " stylesheetfile=\"${stylesheet}\" ",
        "Line" : 1310,
        "CharPositionInLine" : 46
      },
      "54" : {
        "Text" : " Javadoc ",
        "Line" : 1360,
        "CharPositionInLine" : 21
      },
      "55" : {
        "Text" : " JNA sources only, for use in Linux build from source/shared libffi ",
        "Line" : 1361,
        "CharPositionInLine" : 80
      },
      "56" : {
        "Text" : " Full sources required to build and test everything ",
        "Line" : 1369,
        "CharPositionInLine" : 64
      },
      "57" : {
        "Text" : " Sources package as required by maven ",
        "Line" : 1376,
        "CharPositionInLine" : 50
      },
      "58" : {
        "Text" : " NOTE: The 'deploy' target works only if the version (jna.version in build.xml) ends in '-SNAPSHOT'. ",
        "Line" : 1422,
        "CharPositionInLine" : 111
      },
      "59" : {
        "Text" : " sign and deploy the jna,  artifact ",
        "Line" : 1451,
        "CharPositionInLine" : 48
      },
      "60" : {
        "Text" : " sign and deploy the platform artifact ",
        "Line" : 1464,
        "CharPositionInLine" : 51
      },
      "CommentCount" : 61
    },
    "contrib/alphamaskdemo/build.xml" : {
      "ObjectId" : "a9bead9eab96c3611042004e44f361d42abf72a3",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " Locations ",
        "Line" : 4,
        "CharPositionInLine" : 23
      },
      "1" : {
        "Text" : " Run Demo. ",
        "Line" : 19,
        "CharPositionInLine" : 23
      },
      "2" : {
        "Text" : " Delete class and jar files. ",
        "Line" : 29,
        "CharPositionInLine" : 41
      },
      "3" : {
        "Text" : " Compile all classes. ",
        "Line" : 36,
        "CharPositionInLine" : 34
      },
      "4" : {
        "Text" : " Compile the project. ",
        "Line" : 39,
        "CharPositionInLine" : 38
      },
      "5" : {
        "Text" : " Create jar-file. ",
        "Line" : 48,
        "CharPositionInLine" : 30
      },
      "6" : {
        "Text" : " Copy all non-java files to classes. ",
        "Line" : 50,
        "CharPositionInLine" : 53
      },
      "7" : {
        "Text" : " platform ",
        "Line" : 60,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : " jna ",
        "Line" : 62,
        "CharPositionInLine" : 25
      },
      "CommentCount" : 9
    },
    "contrib/balloonmanagerdemo/build.xml" : {
      "ObjectId" : "7f53f329e2f3f1052dd0b37557da3576026c00d9",
      "LastModified" : "2017-05-14T19:32:47Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " Locations ",
        "Line" : 4,
        "CharPositionInLine" : 23
      },
      "1" : {
        "Text" : " Run Demo. ",
        "Line" : 19,
        "CharPositionInLine" : 23
      },
      "2" : {
        "Text" : " Delete class and jar files. ",
        "Line" : 29,
        "CharPositionInLine" : 41
      },
      "3" : {
        "Text" : " Compile all classes. ",
        "Line" : 36,
        "CharPositionInLine" : 34
      },
      "4" : {
        "Text" : " Compile the project. ",
        "Line" : 39,
        "CharPositionInLine" : 38
      },
      "5" : {
        "Text" : " Create jar-file. ",
        "Line" : 48,
        "CharPositionInLine" : 30
      },
      "6" : {
        "Text" : " Copy all non-java files to classes. ",
        "Line" : 51,
        "CharPositionInLine" : 53
      },
      "7" : {
        "Text" : " platform ",
        "Line" : 62,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : " jna ",
        "Line" : 64,
        "CharPositionInLine" : 25
      },
      "CommentCount" : 9
    },
    "contrib/balloontips/build.xml" : {
      "ObjectId" : "594b65f95edbc5cb907c7ff24b53c7ea7fa4d0d0",
      "LastModified" : "2017-05-14T19:32:47Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " Locations ",
        "Line" : 4,
        "CharPositionInLine" : 23
      },
      "1" : {
        "Text" : " Run Demo. ",
        "Line" : 19,
        "CharPositionInLine" : 23
      },
      "2" : {
        "Text" : " Delete class and jar files. ",
        "Line" : 29,
        "CharPositionInLine" : 41
      },
      "3" : {
        "Text" : " Compile all classes. ",
        "Line" : 36,
        "CharPositionInLine" : 34
      },
      "4" : {
        "Text" : " Compile the project. ",
        "Line" : 39,
        "CharPositionInLine" : 38
      },
      "5" : {
        "Text" : " Create jar-file. ",
        "Line" : 48,
        "CharPositionInLine" : 30
      },
      "6" : {
        "Text" : " Copy all non-java files to classes. ",
        "Line" : 51,
        "CharPositionInLine" : 53
      },
      "7" : {
        "Text" : " platform ",
        "Line" : 62,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : " jna ",
        "Line" : 64,
        "CharPositionInLine" : 25
      },
      "CommentCount" : 9
    },
    "contrib/dnddemo/build.xml" : {
      "ObjectId" : "4fab70a8318d24f29f71a093eb6bee181173ae10",
      "LastModified" : "2017-05-14T19:32:47Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " Locations ",
        "Line" : 4,
        "CharPositionInLine" : 23
      },
      "1" : {
        "Text" : " Run Demo. ",
        "Line" : 19,
        "CharPositionInLine" : 23
      },
      "2" : {
        "Text" : " Delete class and jar files. ",
        "Line" : 29,
        "CharPositionInLine" : 41
      },
      "3" : {
        "Text" : " Compile all classes. ",
        "Line" : 36,
        "CharPositionInLine" : 34
      },
      "4" : {
        "Text" : " Compile the project. ",
        "Line" : 39,
        "CharPositionInLine" : 38
      },
      "5" : {
        "Text" : " Create jar-file. ",
        "Line" : 48,
        "CharPositionInLine" : 30
      },
      "6" : {
        "Text" : " Copy all non-java files to classes. ",
        "Line" : 51,
        "CharPositionInLine" : 53
      },
      "7" : {
        "Text" : " platform ",
        "Line" : 62,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : " jna ",
        "Line" : 64,
        "CharPositionInLine" : 25
      },
      "CommentCount" : 9
    },
    "contrib/monitordemo/build.xml" : {
      "ObjectId" : "79d2322830f5e30e2b6223f192d77f343d31cd02",
      "LastModified" : "2017-05-14T19:32:47Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " Locations ",
        "Line" : 4,
        "CharPositionInLine" : 23
      },
      "1" : {
        "Text" : " Run Demo. ",
        "Line" : 19,
        "CharPositionInLine" : 23
      },
      "2" : {
        "Text" : " Delete class and jar files. ",
        "Line" : 29,
        "CharPositionInLine" : 41
      },
      "3" : {
        "Text" : " Compile all classes. ",
        "Line" : 36,
        "CharPositionInLine" : 34
      },
      "4" : {
        "Text" : " Compile the project. ",
        "Line" : 39,
        "CharPositionInLine" : 38
      },
      "5" : {
        "Text" : " Create jar-file. ",
        "Line" : 48,
        "CharPositionInLine" : 30
      },
      "6" : {
        "Text" : " Copy all non-java files to classes. ",
        "Line" : 51,
        "CharPositionInLine" : 53
      },
      "7" : {
        "Text" : " platform ",
        "Line" : 62,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : " jna ",
        "Line" : 64,
        "CharPositionInLine" : 25
      },
      "CommentCount" : 9
    },
    "contrib/msoffice/build.xml" : {
      "ObjectId" : "50452b0847b24753838ebd5a6048e29abb4acfca",
      "LastModified" : "2017-05-14T19:32:47Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " Locations ",
        "Line" : 4,
        "CharPositionInLine" : 23
      },
      "1" : {
        "Text" : " Run Demo. ",
        "Line" : 19,
        "CharPositionInLine" : 23
      },
      "2" : {
        "Text" : " Delete class and jar files. ",
        "Line" : 29,
        "CharPositionInLine" : 41
      },
      "3" : {
        "Text" : " Compile all classes. ",
        "Line" : 36,
        "CharPositionInLine" : 34
      },
      "4" : {
        "Text" : " Compile the project. ",
        "Line" : 39,
        "CharPositionInLine" : 38
      },
      "5" : {
        "Text" : " Create jar-file. ",
        "Line" : 48,
        "CharPositionInLine" : 30
      },
      "6" : {
        "Text" : " Copy all non-java files to classes. ",
        "Line" : 51,
        "CharPositionInLine" : 53
      },
      "7" : {
        "Text" : " platform ",
        "Line" : 62,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : " jna ",
        "Line" : 64,
        "CharPositionInLine" : 25
      },
      "CommentCount" : 9
    },
    "contrib/native_window_msg/build.xml" : {
      "ObjectId" : "1c30c729a0b49059c75ff7da719bb9efd1211dfb",
      "LastModified" : "2017-05-14T19:32:47Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " Locations ",
        "Line" : 4,
        "CharPositionInLine" : 23
      },
      "1" : {
        "Text" : " Run Demo. ",
        "Line" : 19,
        "CharPositionInLine" : 23
      },
      "2" : {
        "Text" : " Delete class and jar files. ",
        "Line" : 29,
        "CharPositionInLine" : 41
      },
      "3" : {
        "Text" : " Compile all classes. ",
        "Line" : 36,
        "CharPositionInLine" : 34
      },
      "4" : {
        "Text" : " Compile the project. ",
        "Line" : 39,
        "CharPositionInLine" : 38
      },
      "5" : {
        "Text" : " Create jar-file. ",
        "Line" : 48,
        "CharPositionInLine" : 30
      },
      "6" : {
        "Text" : " Copy all non-java files to classes. ",
        "Line" : 51,
        "CharPositionInLine" : 53
      },
      "7" : {
        "Text" : " platform ",
        "Line" : 62,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : " jna ",
        "Line" : 64,
        "CharPositionInLine" : 25
      },
      "CommentCount" : 9
    },
    "contrib/ntservice/build.xml" : {
      "ObjectId" : "0ebd3c4f9fbe634c70cfa23d5f76bdab24577804",
      "LastModified" : "2017-05-14T19:32:47Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " You may freely edit this file. See commented blocks below for ",
        "Line" : 2,
        "CharPositionInLine" : 71
      },
      "1" : {
        "Text" : " some examples of how to customize the build. ",
        "Line" : 3,
        "CharPositionInLine" : 54
      },
      "2" : {
        "Text" : " (If you delete it and reopen the project it will be recreated.) ",
        "Line" : 4,
        "CharPositionInLine" : 73
      },
      "3" : {
        "Text" : " By default, only the Clean and Build commands use this build script. ",
        "Line" : 5,
        "CharPositionInLine" : 78
      },
      "4" : {
        "Text" : " Commands such as Run, Debug, and Test only use this build script if ",
        "Line" : 6,
        "CharPositionInLine" : 77
      },
      "5" : {
        "Text" : " the Compile on Save feature is turned off for the project. ",
        "Line" : 7,
        "CharPositionInLine" : 68
      },
      "6" : {
        "Text" : " You can turn off the Compile on Save (or Deploy on Save) setting ",
        "Line" : 8,
        "CharPositionInLine" : 74
      },
      "7" : {
        "Text" : " in the project's Project Properties dialog box.",
        "Line" : 9,
        "CharPositionInLine" : 56
      },
      "8" : {
        "Text" : "\n\n    There exist several targets which are by default empty and which can be \n    used for execution of your tasks. These targets are usually executed \n    before and after some main targets. They are: \n\n      -pre-init:                 called before initialization of project properties\n      -post-init:                called after initialization of project properties\n      -pre-compile:              called before javac compilation\n      -post-compile:             called after javac compilation\n      -pre-compile-single:       called before javac compilation of single file\n      -post-compile-single:      called after javac compilation of single file\n      -pre-compile-test:         called before javac compilation of JUnit tests\n      -post-compile-test:        called after javac compilation of JUnit tests\n      -pre-compile-test-single:  called before javac compilation of single JUnit test\n      -post-compile-test-single: called after javac compilation of single JUunit test\n      -pre-jar:                  called before JAR building\n      -post-jar:                 called after JAR building\n      -post-clean:               called after cleaning build products\n\n    (Targets beginning with '-' are not intended to be called on their own.)\n\n    Example of inserting an obfuscator after compilation could look like this:\n\n        <target name=\"-post-compile\">\n            <obfuscate>\n                <fileset dir=\"${build.classes.dir}\"/>\n            </obfuscate>\n        </target>\n\n    For list of available properties check the imported \n    nbproject/build-impl.xml file. \n\n\n    Another way to customize the build is by overriding existing main targets.\n    The targets of interest are: \n\n      -init-macrodef-javac:     defines macro for javac compilation\n      -init-macrodef-junit:     defines macro for junit execution\n      -init-macrodef-debug:     defines macro for class debugging\n      -init-macrodef-java:      defines macro for class execution\n      -do-jar:                  JAR building\n      run:                      execution of project \n      -javadoc-build:           Javadoc generation\n      test-report:              JUnit report generation\n\n    An example of overriding the target for project execution could look like this:\n\n        <target name=\"run\" depends=\"ntservice-impl.jar\">\n            <exec dir=\"bin\" executable=\"launcher.exe\">\n                <arg file=\"${dist.jar}\"/>\n            </exec>\n        </target>\n\n    Notice that the overridden target depends on the jar target and not only on \n    the compile target as the regular run target does. Again, for a list of available \n    properties which you can use, check the target you are overriding in the\n    nbproject/build-impl.xml file. \n\n    ",
        "Line" : 72,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 9
    },
    "contrib/platform/build.xml" : {
      "ObjectId" : "6c4656b9791eed62d6585dd1bf14ca8452de91e3",
      "LastModified" : "2019-04-05T19:41:28Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n\n    There exist several targets which are by default empty and which can be \n    used for execution of your tasks. These targets are usually executed \n    before and after some main targets. They are: \n\n      -pre-init:                 called before initialization of project properties\n      -post-init:                called after initialization of project properties\n      -pre-compile:              called before javac compilation\n      -post-compile:             called after javac compilation\n      -pre-compile-single:       called before javac compilation of single file\n      -post-compile-single:      called after javac compilation of single file\n      -pre-compile-test:         called before javac compilation of JUnit tests\n      -post-compile-test:        called after javac compilation of JUnit tests\n      -pre-compile-test-single:  called before javac compilation of single JUnit test\n      -post-compile-test-single: called after javac compilation of single JUunit test\n      -pre-jar:                  called before JAR building\n      -post-jar:                 called after JAR building\n      -post-clean:               called after cleaning build products\n\n    (Targets beginning with '-' are not intended to be called on their own.)\n\n    Example of inserting an obfuscator after compilation could look like this:\n\n        <target name=\"-post-compile\">\n            <obfuscate>\n                <fileset dir=\"${build.classes.dir}\"/>\n            </obfuscate>\n        </target>\n\n    For list of available properties check the imported \n    nbproject/build-impl.xml file. \n\n\n    Another way to customize the build is by overriding existing main targets.\n    The targets of interest are: \n\n      -init-macrodef-javac:     defines macro for javac compilation\n      -init-macrodef-junit:     defines macro for junit execution\n      -init-macrodef-debug:     defines macro for class debugging\n      -init-macrodef-java:      defines macro for class execution\n      -do-jar-with-manifest:    JAR building (if you are using a manifest)\n      -do-jar-without-manifest: JAR building (if you are not using a manifest)\n      run:                      execution of project \n      -javadoc-build:           Javadoc generation\n      test-report:              JUnit report generation\n\n    An example of overriding the target for project execution could look like this:\n\n        <target name=\"run\" depends=\"JnaContrib-impl.jar\">\n            <exec dir=\"bin\" executable=\"launcher.exe\">\n                <arg file=\"${dist.jar}\"/>\n            </exec>\n        </target>\n\n    Notice that the overridden target depends on the jar target and not only on\n    the compile target as the regular run target does. Again, for a list of available\n    properties which you can use, check the target you are overriding in the\n    nbproject/build-impl.xml file.\n\n    ",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : " Prepare additional ant task ",
        "Line" : 70,
        "CharPositionInLine" : 41
      },
      "2" : {
        "Text" : " the -init-macrodef-copylibs target superseeds the target defined in\n    build-impl.xml. The classpath that the base copylibs target adds to the\n    MANIFEST.MF interferes with spring-boot and tomcat   ",
        "Line" : 81,
        "CharPositionInLine" : 61
      },
      "3" : {
        "Text" : "<attribute name=\"Class-Path\" value=\"${jar.classpath}\"/>",
        "Line" : 106,
        "CharPositionInLine" : 87
      },
      "4" : {
        "Text" : "\n               OSGi Bundle attributes\n               See http://www.osgi.org/Specifications/Reference\n             ",
        "Line" : 128,
        "CharPositionInLine" : 17
      },
      "5" : {
        "Text" : " Sun 64-bit VM for windows doesn't support the -d64 switch ",
        "Line" : 210,
        "CharPositionInLine" : 77
      },
      "6" : {
        "Text" : " optionally run headless ",
        "Line" : 223,
        "CharPositionInLine" : 41
      },
      "7" : {
        "Text" : " avoid VM conflicts with JNA protected mode ",
        "Line" : 225,
        "CharPositionInLine" : 60
      },
      "8" : {
        "Text" : " Ignore any system install of JNA ",
        "Line" : 227,
        "CharPositionInLine" : 50
      },
      "9" : {
        "Text" : " Until StructureFieldOrderTest gets fixed up a little ",
        "Line" : 235,
        "CharPositionInLine" : 74
      },
      "10" : {
        "Text" : " One-off test to check field order definitions ",
        "Line" : 255,
        "CharPositionInLine" : 59
      },
      "11" : {
        "Text" : "<property name=\"test.includes\" value=\"com/sun/jna/platform/**/*.java\"/>",
        "Line" : 257,
        "CharPositionInLine" : 87
      },
      "CommentCount" : 12
    },
    "contrib/shapedwindowdemo/build.xml" : {
      "ObjectId" : "cbcb1eea59ca05a090644dec11a543edecaf8ed5",
      "LastModified" : "2017-05-14T19:32:47Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " Locations ",
        "Line" : 4,
        "CharPositionInLine" : 23
      },
      "1" : {
        "Text" : " Run Demo. ",
        "Line" : 19,
        "CharPositionInLine" : 23
      },
      "2" : {
        "Text" : " Delete class and jar files. ",
        "Line" : 29,
        "CharPositionInLine" : 41
      },
      "3" : {
        "Text" : " Compile all classes. ",
        "Line" : 36,
        "CharPositionInLine" : 34
      },
      "4" : {
        "Text" : " Compile the project. ",
        "Line" : 39,
        "CharPositionInLine" : 38
      },
      "5" : {
        "Text" : " Create jar-file. ",
        "Line" : 48,
        "CharPositionInLine" : 30
      },
      "6" : {
        "Text" : " Copy all non-java files to classes. ",
        "Line" : 51,
        "CharPositionInLine" : 53
      },
      "7" : {
        "Text" : " platform ",
        "Line" : 62,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : " jna ",
        "Line" : 64,
        "CharPositionInLine" : 25
      },
      "CommentCount" : 9
    },
    "contrib/w32keyhook/build.xml" : {
      "ObjectId" : "1f4e6aad8f61724c19b8998045dde5b24a30cf77",
      "LastModified" : "2017-05-14T19:32:47Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " Locations ",
        "Line" : 4,
        "CharPositionInLine" : 23
      },
      "1" : {
        "Text" : " Run Demo. ",
        "Line" : 19,
        "CharPositionInLine" : 23
      },
      "2" : {
        "Text" : " Delete class and jar files. ",
        "Line" : 29,
        "CharPositionInLine" : 41
      },
      "3" : {
        "Text" : " Compile all classes. ",
        "Line" : 36,
        "CharPositionInLine" : 34
      },
      "4" : {
        "Text" : " Compile the project. ",
        "Line" : 39,
        "CharPositionInLine" : 38
      },
      "5" : {
        "Text" : " Create jar-file. ",
        "Line" : 48,
        "CharPositionInLine" : 30
      },
      "6" : {
        "Text" : " Copy all non-java files to classes. ",
        "Line" : 51,
        "CharPositionInLine" : 53
      },
      "7" : {
        "Text" : " platform ",
        "Line" : 62,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : " jna ",
        "Line" : 64,
        "CharPositionInLine" : 25
      },
      "CommentCount" : 9
    },
    "contrib/w32printing/build.xml" : {
      "ObjectId" : "296d8ca227ade0ab225772c3524f2388e8543e6f",
      "LastModified" : "2017-05-14T19:32:47Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " Locations ",
        "Line" : 4,
        "CharPositionInLine" : 23
      },
      "1" : {
        "Text" : " Delete class and jar files. ",
        "Line" : 19,
        "CharPositionInLine" : 41
      },
      "2" : {
        "Text" : " Compile all classes. ",
        "Line" : 26,
        "CharPositionInLine" : 34
      },
      "3" : {
        "Text" : " Compile the project. ",
        "Line" : 29,
        "CharPositionInLine" : 38
      },
      "4" : {
        "Text" : " Create jar-file. ",
        "Line" : 38,
        "CharPositionInLine" : 30
      },
      "5" : {
        "Text" : " Copy all non-java files to classes. ",
        "Line" : 41,
        "CharPositionInLine" : 53
      },
      "6" : {
        "Text" : " platform ",
        "Line" : 52,
        "CharPositionInLine" : 30
      },
      "7" : {
        "Text" : " jna ",
        "Line" : 54,
        "CharPositionInLine" : 25
      },
      "CommentCount" : 8
    },
    "contrib/x11/build.xml" : {
      "ObjectId" : "6f93186818859626b5356d668d62a4e14c9ec4f7",
      "LastModified" : "2017-05-14T19:32:47Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " Locations ",
        "Line" : 4,
        "CharPositionInLine" : 23
      },
      "1" : {
        "Text" : " Run XDesktopDemo. ",
        "Line" : 18,
        "CharPositionInLine" : 31
      },
      "2" : {
        "Text" : " Run XTestDemo. ",
        "Line" : 28,
        "CharPositionInLine" : 28
      },
      "3" : {
        "Text" : " Delete class and jar files. ",
        "Line" : 38,
        "CharPositionInLine" : 41
      },
      "4" : {
        "Text" : " Compile all classes. ",
        "Line" : 45,
        "CharPositionInLine" : 34
      },
      "5" : {
        "Text" : " Compile the project. ",
        "Line" : 48,
        "CharPositionInLine" : 38
      },
      "6" : {
        "Text" : " Create jar-file. ",
        "Line" : 57,
        "CharPositionInLine" : 30
      },
      "7" : {
        "Text" : " Copy all non-java files to classes. ",
        "Line" : 60,
        "CharPositionInLine" : 53
      },
      "8" : {
        "Text" : " platform ",
        "Line" : 71,
        "CharPositionInLine" : 30
      },
      "9" : {
        "Text" : " jna ",
        "Line" : 73,
        "CharPositionInLine" : 25
      },
      "CommentCount" : 10
    },
    "native/Makefile" : {
      "ObjectId" : "1bea2dc77b8f0f3495fa06b40a9696295cc5917a",
      "LastModified" : "2018-04-25T23:08:04Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Makefile for JNA native bits\n\n# Copyright (c) 2007-2014 Timothy Wall All Rights Reserved\n\n#\n\n# You may need to run 'ant javah' at the root before performing a build from\n\n# this directory.\n\n#\n\n# To build with debug information, use 'make DEBUG=true'\n\n#\n\n# Supported platforms (built and tested):\n\n#\n\n#   Windows 2000/XP/2003/Vista (x86/amd64)\n\n#   Windows CE/Mobile (arm)\n\n#   Darwin/OS X (i386/x86_64/ppc)\n\n#   Linux (i386/amd64/ppc/arm)\n\n#   Solaris (i386/amd64/sparc/sparcv9)\n\n#   AIX (ppc/ppc64)\n\n#   FreeBSD/OpenBSD/NetBSD (i386/amd64)\n\n#   Android (arm/armv7/aarch64/x86/x86-64/mipsel/mips64el)\n\n#\n\n# Built, but with outstanding bugs (not necessarily within JNA):\n\n#\n\n#   Linux (ppc64/ppc64le/ia64)\n\n#\n\n# The w32ce build requires cegcc and phoneME for cross-compilation; if these\n\n# tools are available on the path then \"ant -Dos.prefix=w32ce-arm\" should\n\n# result in a proper build.\n\n#\n\n# The android build requires the android SDK+NDK for cross-compilation;\n\n# make the tools available on the path and compile with\n\n# \"ant -Dos.prefix=android-{arm|x86}\".  Put the NDK tools in the path and adjust\n\n# NDK_PLATFORM below or set it in your environment.\n\n#\n\n# The windows build requires a cygwin installation.  The build will use MSVC\n\n# for compilation if cl.exe is found on the PATH, otherwise the build will fall \n\n# back to mingw.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Systems which support POSIX signals may be able to support VM crash\n\n# protection simply by defining HAVE_PROTECTION.  This option has been only\n\n# been enabled for those platforms on which it has been tested successfully.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# auto-generated by ant\n",
        "Line" : 53,
        "CharPositionInLine" : 22
      },
      "3" : {
        "Text" : "# auto-generated by ant\n",
        "Line" : 54,
        "CharPositionInLine" : 42
      },
      "4" : {
        "Text" : "# Reasonable defaults based on GCC\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Default to Sun recommendations for JNI compilation\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Need windres from mingw distribution, even if building with MSVC\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MS compiler\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Mingw compiler\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Ensure we bind to local libffi symbols\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# alter CC instead of PCFLAGS, since we need to pass it down to libffi\n\n# configure and some of the other settings in PCFLAGS might make the build\n\n# choke\n",
        "Line" : 293,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# CC_OPTS only applied to objects build for jnidispatch, not for libffi\n\n# -Wno-unknown-warning-option \n\n#                => Suppress warning for unknown warnings\n\n# -Werror        => Treat warnings as errors\n\n# -Wno-clobbered => Silence GCC warning about clobbered automatic variables.\n\n#                   The \"longjmp\" case only happens in protect.h in the logic\n\n#                   that implements \"protected\" mode. In that case an exception\n\n#                   is raised and the value of the potentially clobbered\n\n#                   variables is ignored.\n\n#\n\n# Enable this only on GCC versions, that can work with it. It is assumed, that\n\n# GCC version 4.X is the lower bound. That version is problematic, as it\n\n# does not support -Wno-unknown-warning-option\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Enable 64-bit builds if the arch demands it\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Xcode 3 options\n\n# not supported on XCode 4+\n",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Xcode 4+ options\n",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# JAWT no longer supported on OSX\n",
        "Line" : 411,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# JAWT linkage handled by -framework JavaVM\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Unfortunately, we have to use different libffi include files depending on\n\n# the target, so we can't do a simple universal build on darwin.  Do\n\n# separate builds, then merge the results.\n",
        "Line" : 425,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# These targets provide for different shared library loading methods\n\n# without getting into native library load conflicts\n",
        "Line" : 465,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#EOF\n",
        "Line" : 518,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20,
      "Errorlog" : "line 376:83 token recognition error at: '\\1'\nline 414:83 token recognition error at: '\\1'\n"
    },
    "native/build.xml" : {
      "ObjectId" : "c7129efcde9db726dea4c4220be0958a8154b4b1",
      "LastModified" : "2017-05-14T19:32:47Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " ############### Determine architecture value #################### ",
        "Line" : 8,
        "CharPositionInLine" : 79
      },
      "1" : {
        "Text" : " Darwin builds are universal, no arch required ",
        "Line" : 18,
        "CharPositionInLine" : 59
      },
      "2" : {
        "Text" : " Keep all natives separate ",
        "Line" : 39,
        "CharPositionInLine" : 39
      },
      "3" : {
        "Text" : " ################# figure out the compatibility version ################## ",
        "Line" : 42,
        "CharPositionInLine" : 87
      },
      "4" : {
        "Text" : " Set up restrictions for w32ce, based on JavaME/CDC ",
        "Line" : 43,
        "CharPositionInLine" : 64
      },
      "5" : {
        "Text" : " Default compatibility, 1.6, or whatever version is running ",
        "Line" : 50,
        "CharPositionInLine" : 72
      },
      "6" : {
        "Text" : " Platform default compatibility, 1.5+ ",
        "Line" : 54,
        "CharPositionInLine" : 50
      },
      "7" : {
        "Text" : " ################# figure out JDK home ################## ",
        "Line" : 59,
        "CharPositionInLine" : 70
      },
      "8" : {
        "Text" : " compile the core so we can run 'javah' on it ",
        "Line" : 90,
        "CharPositionInLine" : 58
      },
      "9" : {
        "Text" : " TODO change these values when the core is Maven-ized as well ",
        "Line" : 91,
        "CharPositionInLine" : 74
      },
      "10" : {
        "Text" : " args are based on GNU grep, other versions may differ ",
        "Line" : 121,
        "CharPositionInLine" : 71
      },
      "11" : {
        "Text" : " Clean up gcj javah output to match that of Sun's javah ",
        "Line" : 129,
        "CharPositionInLine" : 72
      },
      "12" : {
        "Text" : " ########### W32 version resource ################ ",
        "Line" : 153,
        "CharPositionInLine" : 63
      },
      "13" : {
        "Text" : " jnidispatch library release version ",
        "Line" : 165,
        "CharPositionInLine" : 49
      },
      "14" : {
        "Text" : "${build.number}",
        "Line" : 169,
        "CharPositionInLine" : 66
      },
      "15" : {
        "Text" : " Handle cross-compilation ",
        "Line" : 220,
        "CharPositionInLine" : 42
      },
      "16" : {
        "Text" : " Ensure Makefile ARCH property properly set ",
        "Line" : 228,
        "CharPositionInLine" : 60
      },
      "17" : {
        "Text" : " ensure ARCH is set properly for 64-bit capable platforms ",
        "Line" : 259,
        "CharPositionInLine" : 74
      },
      "18" : {
        "Text" : " use ANT_OPTS=-d64/-d32 to build 64-bit/32-bit if not the platform default ",
        "Line" : 260,
        "CharPositionInLine" : 91
      },
      "19" : {
        "Text" : " Windows drive letters, separator and spaces in absolute paths wreak havoc on make ",
        "Line" : 321,
        "CharPositionInLine" : 99
      },
      "20" : {
        "Text" : " Allow explicit override of make variables ",
        "Line" : 334,
        "CharPositionInLine" : 59
      },
      "21" : {
        "Text" : " Default make program if no specific override",
        "Line" : 355,
        "CharPositionInLine" : 61
      },
      "22" : {
        "Text" : " Native resource path within jna.jar ",
        "Line" : 358,
        "CharPositionInLine" : 53
      },
      "CommentCount" : 23
    },
    "native/libffi/Makefile.am" : {
      "ObjectId" : "0e4045100adafdd02ac7477c2b49305abe0331bc",
      "LastModified" : "2017-05-14T19:32:47Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this with automake to create Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## ################################################################\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##\n\n## This section is for make and multilib madness.\n\n##\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Work around what appears to be a GNU make bug handling MAKEFLAGS\n\n# values defined in terms of make variables, as is the case for CC and\n\n# friends when we are called from the top level Makefile.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Subdir rules rely on $(FLAGS_TO_PASS)\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build debug. Define FFI_DEBUG on the commandline so that, when building with\n\n# MSVC, it can link against the debug CRT.\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "native/libffi/include/Makefile.am" : {
      "ObjectId" : "fd28024973191098d27dd6afdf566d38ada7e525",
      "LastModified" : "2017-05-14T19:32:47Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this with automake to create Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "native/libffi/man/Makefile.am" : {
      "ObjectId" : "afcbfb69f1d3de0cce6c171f357c5927972db76b",
      "LastModified" : "2017-05-14T19:32:47Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this with automake to create Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "native/libffi/testsuite/Makefile.am" : {
      "ObjectId" : "da10465d283c266d93aebd13ececdcd9075ca304",
      "LastModified" : "2017-05-14T19:32:47Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "native/pom.xml" : {
      "ObjectId" : "4dff01066bbb5890cd2565ba4a265576431dca8f",
      "LastModified" : "2017-05-14T19:32:47Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Super POM included by all other sub-POM(s)",
        "Line" : 2,
        "CharPositionInLine" : 51
      },
      "1" : {
        "Text" : " see http://stackoverflow.com/questions/2022622/java-home-gets-mangled-by-maven ",
        "Line" : 35,
        "CharPositionInLine" : 124
      },
      "2" : {
        "Text" : " property name=\"build.compiler\" value=\"extJavac\"/ ",
        "Line" : 36,
        "CharPositionInLine" : 94
      },
      "3" : {
        "Text" : " do not install the POM or artifacts since they are embedded inside the JAR ",
        "Line" : 43,
        "CharPositionInLine" : 108
      },
      "4" : {
        "Text" : " TODO consider installing the DLL(s) and using their settings.localRepository location ",
        "Line" : 45,
        "CharPositionInLine" : 130
      },
      "5" : {
        "Text" : " do not deploy the POM or artifacts since they are embedded inside the JAR ",
        "Line" : 49,
        "CharPositionInLine" : 107
      },
      "CommentCount" : 6
    },
    "parent/pom.xml" : {
      "ObjectId" : "3cdfd88ae3312057c4baf1518cefc171ab90fa20",
      "LastModified" : "2017-05-14T19:32:47Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " ### TODO find some way to import build.version.properties ### ",
        "Line" : 53,
        "CharPositionInLine" : 79
      },
      "1" : {
        "Text" : " expected JVM versions ",
        "Line" : 55,
        "CharPositionInLine" : 39
      },
      "2" : {
        "Text" : "This plugin's configuration is used to store Eclipse\n                    m2e settings only. It has no influence on the Maven build itself. ",
        "Line" : 98,
        "CharPositionInLine" : 90
      },
      "3" : {
        "Text" : " see http://maven.apache.org/shared/maven-archiver/index.html ",
        "Line" : 154,
        "CharPositionInLine" : 94
      },
      "4" : {
        "Text" : " Extra attributes added to the MANIFEST.MF file ",
        "Line" : 162,
        "CharPositionInLine" : 84
      },
      "5" : {
        "Text" : " see Package constructor using Manifest ",
        "Line" : 167,
        "CharPositionInLine" : 80
      },
      "6" : {
        "Text" : " automatically download dependency sources - useful for debugging ",
        "Line" : 187,
        "CharPositionInLine" : 117
      },
      "7" : {
        "Text" : "Artificial dependency for tools.jar in case we invoke javac or javah ",
        "Line" : 213,
        "CharPositionInLine" : 117
      },
      "CommentCount" : 8
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 1,
    "AUTOMAKE" : 4,
    "ANT" : 15,
    "MAVEN" : 2
  },
  "ElapsedTime" : 7034
}