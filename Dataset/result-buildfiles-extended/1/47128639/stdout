{
  "Repository" : "47128639",
  "Revision" : "HEAD",
  "ObjectId" : "83f9174005cef2bb6edcc868ddacd93ef668ab3a",
  "CommitTime" : "2019-02-24T19:52:50Z",
  "Files" : {
    "Makefile.am" : {
      "ObjectId" : "a13e85dcbe21bc6534fa931d928eb56359eeaade",
      "LastModified" : "2018-01-16T12:48:08Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# to automatically update libtool script if it becomes out of date\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# From autoconf manual: \n\n#   ... if you use aclocal from Automake to generate aclocal.m4, you must also \n\n#   set ACLOCAL_AMFLAGS = -I dir in your top-level Makefile.am. \n\n#   Due to a limitation in the Autoconf implementation of autoreconf, these \n\n#   include directives currently must be set on a single line in Makefile.am, \n\n#   without any backslash-newlines\n\n# Introspection does this. \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if ENABLE_GOBJECT_COND\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# endif\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# doc_DATA = AUTHORS COPYING NEWS.md README.md ChangeLog\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# cmakedir = $(datadir)/cmake/Modules\n\n# cmake_DATA = FindDDCUtil.cmake\n\n# EXTRA_DIST += FindDDCUtil.cmake\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# libddcdoc_DATA = AUTHORS\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Too many false positives: \n\n#  alpha.clone.CloneChecker\n\n#  alpha.deadcode.UnreachableCode\n\n#  alpha.core.CastToStruct\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Copied and adapted from colord\n\n# is calling autogen.sh within this file dangerous?\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# \t$(foreach v, $(.VARIABLES), @echo \"$v = $$v\")\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# rpmarch=`$(RPM) --showrc | grep \"^build arc\" | \\\n# \tsed 's/\\(.*: \\)\\(.*\\)/\\2/'`; \\\n#\techo \"$$rpmarch\" ;\\\n#test -z \"obs/$$rpmarch\" || \\\n#\t( mv obs/$$rpmarch/* . && rm -rf /obs/$$rpmarch )\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#rm -rf obs/$(distdir)\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "data/Makefile.am" : {
      "ObjectId" : "31a72dbbf3399d681f2c234e39c1e66cbfdcd766",
      "LastModified" : "2019-02-07T14:08:13Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# resdir: not used\n\n# resdir = $(datadir)/ddcutil/data\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ddcutil_DATA requires ddcutildir\n\n# Causes files (w/o directory structure) to be installed in /usr/local/share/ddcutil/data:\n\n# or /usr/share/ddcutil/data\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Causes files (with directory structure) to be included in tarball:\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# @xxx@ names are not defined, names with $() are \n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "data/usr/share/cmake/Modules/FindDDCUtil.cmake" : {
      "ObjectId" : "cf5b0247898a2e8389e9a1f4d60f5dcb17615a33",
      "LastModified" : "2017-04-27T12:40:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Libddcutil\n\n# Once done this will define\n\n#\n\n#  DDCUTIL_FOUND - system has DDCUtil\n\n#  DDCUTIL_INCLUDE_DIR - the libddcutil include directory\n\n#  DDCUTIL_LIBS - The libddcutil libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2017, Dorian Vogel, <dorianvogel@gmail.com>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# 1. Redistributions of source code must retain the above copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the above copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n# 3. Neither the name of the University nor the names of its contributors\n\n#    may be used to endorse or promote products derived from this software\n\n#    without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE\n\n# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n\n# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n\n# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n\n# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n\n# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n\n# SUCH DAMAGE.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBDDCUTIL_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "docs/Makefile.am" : {
      "ObjectId" : "c866864adca88a3e57c632843ff636d564db4d7a",
      "LastModified" : "2017-05-21T01:32:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# SUBDIRS += ddcutil\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# uninstall-data-hook doesn't exist, use uninstall-hook: \n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "docs/doxygen/Makefile.am" : {
      "ObjectId" : "95ce140e218d6acd289f9f8514f2fcbbfa1d05eb",
      "LastModified" : "2017-04-27T12:40:49Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "man/Makefile.am" : {
      "ObjectId" : "c385bf3145c7b439f8808798746556418bb3ceb2",
      "LastModified" : "2017-04-27T12:40:49Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# dist_man1_MANS = \\\n#    ddcutil.1\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/Makefile.am" : {
      "ObjectId" : "96f71f53c4b8704acffc9a21df281cf0ce8b1a57",
      "LastModified" : "2019-02-07T14:08:13Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# todo: factor out swig \n\n# todo: fails if swig/.libs doesn't exist\n\n# rm -rf swig/ddc_swig_wrap.c swig/ddc_swig.py swig/ddc_swig.pyc\n\n# Plo files in deps directories are automatically included in generated Makefiles for some reason\n\n# test -z `find . -name \".deps\"   -type d` || rm -rf `find . -name \".deps\"   -type d`\n\n# For conditionally included files, e.g. those in usb_util, make clean does not delete \n\n# the .lo files.  Hence the instructions here to delete all of them\n\n# Fails: test: too many arguments:\n\n# test -z `find . -name \"*lo\" -type f` || rm `find . -name \"*lo\" -type f`\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Execuatables \n\n#\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Intermediate Libraries\n\n#\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Convenience library containing code shared between ddcutil executable and libddcutil shared library\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Convenience library to collect code used only in ddcutil executable\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Public Shared Libraries\n\n#\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# noinst_LTLIBRARIES += libhack.la\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Files only in ddcutil executable\n\n#\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# it's a hack for using API calls in standalone executable\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n# Files only in libddcutil\n\n#\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# libhack_la_SOURCES = \\\n# libmain/ddcutil_c_api.c  \n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Despite what the Autotools book says, all-local is executed aftar all, not before \n\n# So this ensures that the NEXT execution of all will compile build_info.c \n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# removed from all-local:\n\n# \ttouch base/build_info.c\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Never executed:\n\n# all-hook:\n\n#\t@echo \"Executing hook all-hook...\"\n\n#\ttouch base/build_info.c\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# fails\n\n# base/build_info.o: .FORCE\n\n#\t@echo \"Executing phony rule for build_info.o\"\n\n#\ttouch base/built_info.c\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#\n\n# libcommon contains the source files that are \n\n# shared between ddcutil and libddcutil: \n\n#\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Notes: \n\n# 1) Without -prune option, the following line fails because list of file is archived internally, get file not found errors after remove\n\n#\tfind $(top_distdir) -name \".deps\" -exec rm -rf {} \\;\n\n# 2) Piping to xargs fails on if there are no files, which occurs if \"make dist\" is invoked without anything having bee built.\n\n#    find $(top_distdir) -name \".deps\" | xargs rm\n\n# 3) Why explicit copy of .h files?\n\n# 4) find statements in src/usb_util/Makefile.am find nothing, but those here work.  why?\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Header files\n\n# trying to get i2c-dev.h from /usr/include/linux causes errors\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\n\n# C Pre-Processor Flags\n\n#\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#  $(SYSTEMD_CFLAGS) removed, libsystemd not currently needed\n\n# GLIB_CFLAGS contains output of pkgconfig --cflags glib-2.0\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# if HAVE_ADL_COND\n\n# AM_CPPFLAGS +=               \\\n# -I@ADL_HEADER_DIR@  \n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# endif\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\n\n# Compiler flags\n\n#\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# AM_CFLAGS = -Wall -Werror\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# AM_CFLAGS += -Wpedantic\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# AM_CFLAGS += $(PYTHON_CPPFLAGS)\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# unnessary, will use AM_CFLAGS if xxx_CFLAGS undefined\n\n# libcommon_la_CFLAGS     = $(AM_CFLAGS)\n\n# libddcutil_la_CFLAGS    = $(AM_CFLAGS)\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#\n\n# Link the libraries \n\n#\n\n# Be careful about library ordering. \n\n# A library must be listed after any libraries that depend on it\n\n#\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# libapp_la_LIBADD += \\\n# app_common/libappcommon.la \n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# $(SYSTEMD_LIBS) removed from list, libsystemd not currently used\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# libddcutil_la_LIBADD = -lz\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# libhack_la_LIBADD = $(ZLIB_LIBS)\n\n# libhack_la_LIBADD += libcommon.la  libddcutil.la\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# -export-dynamic not required for failsim: \n\n# if ENABLE_FAILSIM_COND\n\n# libddcutil_la_LDFLAGS += -export-dynamic\n\n# else\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# endif\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# libddcutil_la_LDFLAGS += -init _ddca_init\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# doesn't prevent creation of .la \n\n# try disabling to create libddcutil.a - doesnt do it\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# libhack_la_LDFLAGS = $(libddcutil_la_LDFLAGS)\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\n\n# Link the executables\n\n#\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# ddcutil statically links libcommon, rather than using libddcutil.so\n\n# so it needs LDADD references to external libraries as well\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#needed?\n",
        "Line" : 297,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# -export-dynamic needed for failsim\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# laclient_LDADD                = libddcutil.la \n\n# demo_global_settings_LDADD    = libddcutil.la\n\n# demo_vcpinfo_LDADD            = libddcutil.la\n\n# demo_get_set_vcp_LDADD        = libddcutil.la\n\n# demo_display_selection_LDADD  = libddcutil.la\n",
        "Line" : 303,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# laclient_LDFLAGS                = -pie\n\n# demo_global_settings_LDFLAGS    = -pie\n\n# demo_vcpinfo_LDFLAGS            = -pie\n\n# demo_get_set_vcp_LDFLAGS        = -pie\n\n# demo_display_selection_LDFLAGS  = -pie\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# debug-install-hook:\n\n#  \tls -ld $(DESTDIR)$(libdir)\n\n# \tls -l $(DESTDIR)$(libdir)/*la\n\n# \t@echo \"  pythondir       = $(pythondir)\"\n\n# \t@echo \"  pyexecdir       = $(pyexecdir)\"\n\n# \t@echo  $(DESTDIR)$(libdir)\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\t@if [ -f $(DESTDIR)$(libdir)/libddcutil.la ] ; then \\\n#\t\trm $(DESTDIR)$(libdir)/libddcutil.la ; \\\n#\tfi\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\t@if [ -f $(DESTDIR)$(libdir)/libddcutil.a ] ; then \\\n#\t\trm $(DESTDIR)$(libdir)/libddcutil.a ; \\\n#\tfi\n",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\t@if [ -f $(DESTDIR)$(libdir)/libddcutil.la ] ; then \\\n#\t  echo \"(install-exec-hook) Stripping dependency_libs from libddcutil.la\" ; \\\n#\t  sed -i \"/dependency_libs/ s/'.*'/''/\" $(DESTDIR)$(libdir)/libddcutil.la ; \\\n#\tfi\n",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# objdump -p $(DESTDIR)$(libdir)/libddcutil.so | sed -n -e's/^[[:space:]]*SONAME[[:space:]]*//p' |  sed -r -e's/([0-9])\\.so\\./\\1-/; s/\\.so(\\.|$)//; y/_/-/; s/(.*)/\\L&/'\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 49
    },
    "src/adl/Makefile.am" : {
      "ObjectId" : "5b236b148897e37410545f2985e439535bba9761",
      "LastModified" : "2019-02-07T14:08:13Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Intermediate Library\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/app_sysenv/Makefile.am" : {
      "ObjectId" : "7aff8a94878e62a83150510f004d12832e2b8210",
      "LastModified" : "2019-02-07T14:08:13Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# AM_CFLAGS += -Wpedantic\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Intermediate Library\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/base/Makefile.am" : {
      "ObjectId" : "2a38856a4252b5e819ddc118b938f789441f8e58",
      "LastModified" : "2019-02-07T14:08:13Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# AM_CFLAGS += -Wpedantic\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Intermediate Library\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/cffi/Makefile.am" : {
      "ObjectId" : "2064731c394b5758109b6cc68d2b91c4512ec82e",
      "LastModified" : "2019-02-07T14:08:13Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Python extension modules, installed in $(py2execdir) or $(py3execdir)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# nodist_py3exec_PYTHON = \n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Python 2 version \n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Generated C file is version agnostic, but unfortunately the \n\n# initialization entry point name must match the .so file name, \n\n# and the only way to force this is use different c file names \n\n# in build_cffi.py\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Module source code, nodist because ddc_cffi.c is generated\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags when compiling files in ddc_cffi2_SOURCES\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Global and order-independent shared library and program linker config flags and options \n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Link in the core library\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Python 3 version\n\n#\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Generated C file is version agnostic, but unfortunately the \n\n# initialization entry point name must match the .so file name, \n\n# and the only way to force this is use different c file names \n\n# in build_cffi.py\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# nodist because ddc_cffi.c is generated\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Flags when compiling files in ddc_cffi3_SOURCES\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Global and order-independent shared library and program linker config flags and options \n\n# -module          forces libtool to generate a dynamically loadable module\n\n# -static          do not link against shared libraries, all external references must be resolved from static libraries\n\n# -shared          create a shared library\n\n# -export-dynamic  add all symbols to dynamic symbol table, needed for dlopen\n\n# -avoid-version   avoid versioning if possible (any effect on Linux?)\n\n# -version-info\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Link in the core library\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Add show_vars to dependencies for debugging\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ld vars:\n\n#@echo \"  PY2_EXECDIR               = $(PY2_EXECDIR)\"\n\n# @echo \"  PY3_EXECDIR               = $(PY3_EXECDIR)\"\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "src/cmdline/Makefile.am" : {
      "ObjectId" : "e8719017abca5db4b3757ea2fcf7f60755a19ed0",
      "LastModified" : "2019-02-07T14:08:13Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# flags g_option parser structs in cmd_parser_goption.c\n\n# AM_CFLAGS += -Wpedantic\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Intermediate Library\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/cython/Makefile.am" : {
      "ObjectId" : "9a84e849328772fbb6cc64faafeb292ab3af583d",
      "LastModified" : "2019-02-07T14:08:13Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Python extension modules, installed in $(py2execdir) or $(py3execdir)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# nodist_py3exec_PYTHON = \n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Python 2 version \n\n#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Module source code, nodist because cyddc2.c is generated\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Flags when compiling files in cyddc2_SOURCES\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Global and order-independent shared library and program linker config flags and options \n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Link in the core library\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Python 3 version\n\n#\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# nodist because cyddc3.c is generated\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Flags when compiling files in cyddc3_SOURCES\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Global and order-independent shared library and program linker config flags and options \n\n# -module          forces libtool to generate a dynamically loadable module\n\n# -static          do not link against shared libraries, all external references must be resolved from static libraries\n\n# -shared          create a shared library\n\n# -export-dynamic  add all symbols to dynamic symbol table, needed for dlopen\n\n# -avoid-version   avoid versioning if possible (any effect on Linux?)\n\n# -version-info\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Link in the core library\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Add show_vars to dependencies for debugging\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ld vars:\n\n#@echo \"  PY2_EXECDIR               = $(PY2_EXECDIR)\"\n\n# @echo \"  PY3_EXECDIR               = $(PY3_EXECDIR)\"\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "src/ddc/Makefile.am" : {
      "ObjectId" : "35cb34bcfc37bec235b567cb723f2b3179c51af3",
      "LastModified" : "2019-02-07T14:08:13Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Causes PROGRAM_LOGIC_ERROR() macro to fail:\n\n# AM_CFLAGS += -Wpedantic\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Intermediate Library\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/dynvcp/Makefile.am" : {
      "ObjectId" : "948f0f12f14a04fb346c24ffbecce0e7bc3a6bfb",
      "LastModified" : "2019-02-07T14:08:13Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Causes PROGRAM_LOGIC_ERROR() macro to fail:\n\n# AM_CFLAGS += -Wpedantic\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Intermediate Library\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/gobject_api/Makefile.am" : {
      "ObjectId" : "3dcfd498ff5f9814a857ab5d76d02320afa717d7",
      "LastModified" : "2019-02-07T14:08:13Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile for GObject introspection\n\n# Adapted from that for colord by Richard Hughes\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The library that exposes the ddcutil GObject API\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Files implementing GObject API for introspection: \n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if use ddcg_gobjects.h to pull in all the .h files, get strange errors re unexpected semicolons\n\n# gobject_api_headers = \\\n# gobject_api/ddcg_gobjects.h\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# files only in goclient:\n\n# Normally, sample code would be in a separate directory. \n\n# gomain.c has been moved here to consolidate the mothballed GObject introspection code.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# C Pre-Processor Flags:\n\n#\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Be careful about library ordering\n\n# A library must be listed AFTER any libraries that depend on it.\n\n# libcommon.la included because gobject code directly calls \n\n# dbgtrc and rpt_str, which are not exported by libddcutil\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# libddcgobj_la_LDFLAGS += -version-info '0:1:1'\n\n# libddcgobj_la_LDFLAGS += -export-dynamic \n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# \n\n# Sample client program.  \n\n# \n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Compiler flags\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# libddcutil is in the list because goclient uses function dbgtrc() \n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Comments from /usr/share/gobject-introspection-1.0/Makefile.introspection:\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\n\n# * Input variables:\n\n#\n\n#   INTROSPECTION_GIRS - List of GIRS that should be generated\n\n#   INTROSPECTION_SCANNER - Command to invoke scanner, normally set by\n\n#      GOBJECT_INTROSPECTION_REQUIRE/CHECK() in introspection.m4\n\n#   INTROSPECTION_SCANNER_ARGS - Additional args to pass in to the scanner\n\n#   INTROSPECTION_SCANNER_ENV - Environment variables to set before running\n\n#      the scanner\n\n#   INTROSPECTION_COMPILER - Command to invoke compiler, normally set by\n\n#      GOBJECT_INTROSPECTION_REQUIRE/CHECK() in introspection.m4\n\n#   INTROSPECTION_COMPILER_ARGS - Additional args to pass in to the compiler\n\n#\n\n# * Simple tutorial\n\n#\n\n# Add this to configure.ac:\n\n#   -Wno-portability to AM_INIT_AUTOMAKE\n\n#   GOBJECT_INTROSPECTION_CHECK([0.6.7])\n\n#\n\n# Add this to Makefile.am where your library/program is built:\n\n#   include $(INTROSPECTION_MAKEFILE)\n\n#   INTROSPECTION_GIRS = YourLib-1.0.gir\n\n#   YourLib-1.0.gir: libyourlib.la\n\n#   YourLib_1_0_gir_NAMESPACE = YourLib\n\n#   YourLib_1_0_gir_VERSION = 1.0\n\n#   YourLib_1_0_gir_LIBS = libyourlib.la\n\n#   YourLib_1_0_gir_FILES = $(libyourlib_1_0_SOURCES)\n\n#   girdir = $(datadir)/gir-1.0\n\n#   dist_gir_DATA = YourLib-1.0.gir\n\n#   typelibdir = $(libdir)/girepository-1.0\n\n#   typelib_DATA = YourLib-1.0.typelib\n\n#   CLEANFILES = $(dist_gir_DATA) $(typelib_DATA)\n\n#\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# And later in file: \n\n#\n\n# Creates a GIR by scanning C headers/sources\n\n# $(1) - Name of the gir file (output)\n\n#\n\n# If output is Gtk-2.0.gir then you should name the variables like\n\n# Gtk_2_0_gir_NAMESPACE, Gtk_2_0_gir_VERSION etc.\n\n# Required variables:\n\n# FILES - C sources and headers which should be scanned\n\n#\n\n# One of these variables are required:\n\n# LIBS - Library where the symbol represented in the gir can be found\n\n# PROGRAM - Program where the symbol represented in the gir can be found\n\n#\n\n# Optional variables\n\n# NAMESPACE - Namespace of the gir, first letter capital,\n\n#   rest should be lower case, for instance: 'Gtk', 'Clutter', 'ClutterGtk'.\n\n#   If not present the namespace will be fetched from the gir filename,\n\n#   the part before the first dash. For 'Gtk-2.0', namespace will be 'Gtk'.\n\n# VERSION - Version of the gir, if not present, will be fetched from gir\n\n# filename, the part after the first dash. For 'Gtk-2.0', version will be '2.0'.\n\n# LIBTOOL - Command to invoke libtool, usually set by automake\n\n# SCANNERFLAGS - Flags to pass in to the scanner, see g-ir-scanner(1) for a list\n\n# CFLAGS - Flags to pass in to the parser when scanning headers\n\n# LDFLAGS - Linker flags used by the scanner\n\n# PACKAGES - list of pkg-config names which cflags are required to parse\n\n#   the headers of this gir\n\n# INCLUDES - Gir files to include without the .gir suffix, for instance\n\n#   GLib-2.0, Gtk-2.0. This is needed for all libraries which you depend on that\n\n#   provides introspection information.\n\n# EXPORT_PACKAGES - list of pkg-config names that are provided by this gir.\n\n#   By default the names in the PACKAGES variable will be used.\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# INTROSPECTION_SCANNER_ARGS = --add-include-path=$(srcdir) --warn-all --verbose --identifier-prefix=Ddcg --symbol-prefix=ddcg\n\n# INTROSPECTION_COMPILER_ARGS = --includedir=$(srcdir) --verbose\n",
        "Line" : 161,
        "CharPositionInLine" : 3
      },
      "15" : {
        "Text" : "# add the target:\n",
        "Line" : 170,
        "CharPositionInLine" : 3
      },
      "16" : {
        "Text" : "# Colord_1_0_gir_INCLUDES = GObject-2.0 Gio-2.0\n\n# Colord_1_0_gir_CFLAGS = $(AM_CPPFLAGS) -DCD_DISABLE_DEPRECATED\n",
        "Line" : 175,
        "CharPositionInLine" : 3
      },
      "17" : {
        "Text" : "# ddcutil_1_0_gir_NAMESPACE=Ddcg\n\n# ddcutil_1_0_gir_VERSION=1.0\n",
        "Line" : 178,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "# Colord_1_0_gir_SCANNERFLAGS = --identifier-prefix=Cd \\\n   #       --symbol-prefix=cd \\\n   #       --warn-all \\\n   #       --add-include-path=$(srcdir) \\\n   #       --c-include=\"colord.h\"\n",
        "Line" : 185,
        "CharPositionInLine" : 3
      },
      "19" : {
        "Text" : "# dist_gir_DATA=$(INTROSPECTION_GIRS)\n",
        "Line" : 199,
        "CharPositionInLine" : 3
      },
      "20" : {
        "Text" : "# CLEANFILES += $(gir_DATA) $(typelib_DATA) *.log *.trs *.test\n",
        "Line" : 206,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 21
    },
    "src/i2c/Makefile.am" : {
      "ObjectId" : "8ab7cf8c905c7891efed88055cff31c9f182ba17",
      "LastModified" : "2019-02-07T14:08:13Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# AM_CFLAGS += -Wpedantic\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Intermediate Library\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/sample_clients/Makefile.am" : {
      "ObjectId" : "e69e780ebc65017e091c8b2d0854124504f0e1d6",
      "LastModified" : "2019-02-07T14:08:13Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# File src/sample_clients/Makefile.am\n\n# Makefile for sample and test programs for libddcutil\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sample C client program for shared library:\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make this a dependency of something to enable it:\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/swig/Makefile.am" : {
      "ObjectId" : "9ac4d17bc61eedd4008e8a476664a471d4d4e785",
      "LastModified" : "2019-02-07T14:08:13Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Adapted from code by tschoonj\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ddc_swig.pyc       \\\n# ddc_swig.pyo\t\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# deleting files from distribution fails if done here\n\n# needs to be done from src/Makefile.am - why?\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# For some reason, if ddc_swig.py is in CLEANFILES, it is not deleted.   \n\n# Just do the work in clean-local\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Python extension modules, installed in $(py2execdir) or $(py3execdir)\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Corresponding extension module Python files\n\n# Files in PYTHON primary are byte-compiled into .pyc and .pyo at install time.\n\n# Uses pyexec_ prefix so it will be installed in same site-packages exec directory as the extension module\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Flags when compiling files in _ddc_swig_la_SOURCES\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# _ddc_swig_la_CPPFLAGS = -I$(top_srcdir)/src -I$(top_srcdir)/src/public $(PYTHON_CPPFLAGS)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Link in the core library\n\n# Any reason to just refer to libddcutil.so instead?\n\n# By statically linking we can control the symbols visible.\n\n# But the only usefully visible symbols are those used by SWIG\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# The source code for the extension module, nodist because this file will be generated by swig\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Global and order-independent shared library and program linker config flags and options \n\n# -module          forces libtool to generate a dynamically loadable module\n\n# -static          do not link against shared libraries, all external references must be resolved from static libraries\n\n# -shared          create a shared library\n\n# -export-dynamic  add all symbols to dynamic symbol table, needed for dlopen\n\n# -avoid-version   avoid versioning if possible (any effect on Linux?)\n\n# -version-info\n\n#\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# should we use --avoid-version instead?  all examples seem to\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\n\n# Python 3 version\n\n#\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Flags when compiling files in _ddc_swig3_la_SOURCES\n\n# _ddc_swig3_la_CFLAGS = $(PYTHON3_CFLAGS) \n\n# _ddc_swig3_la_CPPFLAGS = -I$(top_srcdir)/src -I$(top_srcdir)/src/public $(PYTHON3_CPPFLAGS)\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Link in the core library\n\n# Any reason to just refer to libddcutil.so instead?\n\n# By statically linking we can control the symbols visible.\n\n# But the only usefully visible symbols are those used by SWIG\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# The source code for the extension module, nodist because this file will be generated by swig\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Global and order-independent shared library and program linker config flags and options \n\n# -module          forces libtool to generate a dynamically loadable module\n\n# -static          do not link against shared libraries, all external references must be resolved from static libraries\n\n# -shared          create a shared library\n\n# -export-dynamic  add all symbols to dynamic symbol table, needed for dlopen\n\n# -avoid-version   avoid versioning if possible (any effect on Linux?)\n\n# -version-info\n\n#\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# should we use --avoid-version instead?  all examples seem to\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#\n\n# Run swig\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# For debugging\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# old vars:\n\n# @echo \"  PY2_EXECDIR               = $(PY2_EXECDIR)\"\n\n# @echo \"  PY3_EXECDIR               = $(PY3_EXECDIR)\"\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# hack, how to look up compile include directory?   BUT NO LONGER NEEDED \n\n# swig_incs=-I/usr/lib/gcc/x86_64-linux-gnu/5/include -I/usr/include \n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# add show_vars to dependencies for debugging\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "src/test/Makefile.am" : {
      "ObjectId" : "925f1e396b126953b6841518576d520a5fcd35fc",
      "LastModified" : "2019-02-07T14:08:13Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Intermediate library\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/usb/Makefile.am" : {
      "ObjectId" : "cea8644248e9030e7837619d709a60dce3ccfc69",
      "LastModified" : "2019-02-07T14:08:13Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# AM_CFLAGS += -Wpedantic\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Intermediate library\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/usb_util/Makefile.am" : {
      "ObjectId" : "f01e849776c22534484cb72623f0167f697b062f",
      "LastModified" : "2019-02-07T14:08:13Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# lots of arguments for %p in format strings need (void*) casts if -Wpedantic\n\n# AM_CFLAGS += -Wpedantic\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The dist-hook find statements here find nothing, but the corresponding \n\n# statements in src/Makefile.am do.   why?\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Intermediate Libraries\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/util/Makefile.am" : {
      "ObjectId" : "eaadfd997e513b2fce42c03ddde33bb56a5b2113",
      "LastModified" : "2019-02-07T14:08:13Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# -pedantic issues warnings re code that doesn't conform to ISO C\n\n#  Alas, -m modifier on sscanf is a POSIX extension, not ISO C\n\n#  In combination with -Werror, causes device_util.c to fail compilation\n\n# AM_CFLAGS += -pedantic\n\n# AM_CFLAGS += -H\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Intermediate Libraries\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# libutil_la_SOURCES += systemd_util.c\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/vcp/Makefile.am" : {
      "ObjectId" : "d441928725ff0754b3e3f5f3da44f281234264de",
      "LastModified" : "2019-02-07T14:08:13Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# vcp_feature_codes.c requires extensive changes if -Wpedantic\n\n# AM_CFLAGS += -Wpedantic\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Intermediate Library\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 1,
    "AUTOMAKE" : 23
  },
  "ElapsedTime" : 1534
}