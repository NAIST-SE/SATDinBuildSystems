{
  "Repository" : "21813",
  "Revision" : "HEAD",
  "ObjectId" : "971c2c2e908f53b15cd06fc74e7e053814b145e7",
  "CommitTime" : "2019-04-12T13:26:02Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "4dcb0c354247482d09cb0f8be75670bb87d587bf",
      "LastModified" : "2019-03-20T16:09:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# OpenSceneGraph CMake build file\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set to 0 when not a release candidate, non zero means that any generated\n\n# git tags will be treated as release candidates of given number\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Works around warnings libraries linked against that don't\n\n# have absolute paths (e.g. -lpthreads)\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Works around warnings about escaped quotes in ADD_DEFINITIONS\n\n# statements.\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# tell CMake to prefer CMake's own CMake modules when available\n\n# only available from cmake-2.8.4\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Get OSX version in MAJOR.MINOR format\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Set OSX architecture flags here, since they must be specified before\n\n# creating the actual OSG project.\n\n# Note that the CMAKE_OSX_* variables are not well documented in\n\n# CMake 2.8, but they do officially exist.\n\n# See https://cmake.org/Bug/view.php?id=14695#c34953\n\n# Additionally, OSG_WINDOWING_SYSTEM is set here for OSX since its\n\n# value is needed to find the correct version of OpenGL (X11 or Cocoa).\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# custom option to flag an iOS build\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# set sdk and min versions\n",
        "Line" : 59,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# get full path to sdk from requested versions\n",
        "Line" : 63,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# optionally enable bitcode for the build\n",
        "Line" : 67,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# seamless toggle between device and simulator\n",
        "Line" : 70,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# set deployment target to min version\n",
        "Line" : 73,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Set standard architectures\n",
        "Line" : 76,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# macOS >= 10.5 uses Cocoa windowing system, otherwise Carbon\n",
        "Line" : 80,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Set macOS architectures for Universal Binaries.\n",
        "Line" : 87,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# x86_64 only\n",
        "Line" : 89,
        "CharPositionInLine" : 12
      },
      "17" : {
        "Text" : "# libstdc++ is no longer supported\n",
        "Line" : 92,
        "CharPositionInLine" : 12
      },
      "18" : {
        "Text" : "# i386 is no longer supported\n",
        "Line" : 96,
        "CharPositionInLine" : 12
      },
      "19" : {
        "Text" : "# ppc is no longer supported\n",
        "Line" : 100,
        "CharPositionInLine" : 12
      },
      "20" : {
        "Text" : "# 64-bit compiles are not supported with Carbon.\n",
        "Line" : 103,
        "CharPositionInLine" : 12
      },
      "21" : {
        "Text" : "# 64-bit compiles are not supported with Carbon.\n",
        "Line" : 107,
        "CharPositionInLine" : 12
      },
      "22" : {
        "Text" : "# No Universal Binary support and SDK detection is too unreliable.\n\n# Warn user and continue at their own peril.\n",
        "Line" : 110,
        "CharPositionInLine" : 12
      },
      "23" : {
        "Text" : "# We want to build SONAMES shared librariess\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# We have some custom .cmake scripts not in the official distribution.\n\n# Maybe this can be used override existing behavior if needed?\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Change the default build type to Release\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Okay, here's the problem: On some platforms, linking against OpenThreads\n\n# is not enough and explicit linking to the underlying thread library\n\n# is also required (e.g. FreeBSD). But OpenThreads may be built with different\n\n# backends (Pthreads, Sproc, Windows) so we don't know what the underlying\n\n# thread library is because some platforms support multiple backends (e.g.\n\n# IRIX supports Sproc and Pthreads). Linking all libraries won't work\n\n# because the libraries may be incompatible.\n\n# So the current solution is to attempt best guess linking and exempt certain\n\n# cases. With IRIX, we're going to hope explicit linking to the underlying\n\n# library is not necessary. We currently don't case for pthreads on Windows\n\n# which might be an issue on things like Cygwin. This may need to be fixed.\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Erase CMAKE_THREAD_LIBS_INIT and hope it works\n",
        "Line" : 169,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "#\n\n# Provide target for tagging a release\n\n#\n",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "#\n\n# Provide target for generating ChangeLog\n\n#\n",
        "Line" : 213,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# set the sdk path as our sysroot, if we set this before the project is defined cmake fails to build its test program\n",
        "Line" : 230,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# Set the path to OpenGL library\n",
        "Line" : 233,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# Apple OS X: Find OpenGL and AGL based on OSG_WINDOWING_SYSTEM\n\n# This is the accepted way of finding X11/OpenGL on OSX, as\n\n# documented in CMake's FindOpenGL module.\n\n# Note that without this check, libosg would use Cocoa/OpenGL but\n\n# libosgViewer would use X11/OpenGL, which causes compatibility\n\n# issues for applications using OSG.\n",
        "Line" : 239,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# Use X11 version of OpenGL as seed for CMake FindOpenGL\n",
        "Line" : 253,
        "CharPositionInLine" : 10
      },
      "34" : {
        "Text" : "# AGL needed for Carbon windowing systems\n",
        "Line" : 259,
        "CharPositionInLine" : 10
      },
      "35" : {
        "Text" : "# Non-Apple: Find OpenGL\n",
        "Line" : 271,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# Not sure what this will do on Cygwin and Msys\n\n# Also, remember OS X X11 is a user installed option so it may not exist.\n",
        "Line" : 282,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# Some Unicies need explicit linkage to the Math library or the build fails.\n",
        "Line" : 285,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# change from NOTFOUND to empty when passed to linker\n",
        "Line" : 290,
        "CharPositionInLine" : 27
      },
      "39" : {
        "Text" : "# Make the headers visible to everything\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Common global definitions\n\n#ADD_DEFINITIONS(-D)\n\n# Platform specific definitions\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Check window version\n",
        "Line" : 318,
        "CharPositionInLine" : 8
      },
      "42" : {
        "Text" : "# This option is to enable the /MP switch for Visual Studio 2005 and above compilers\n",
        "Line" : 325,
        "CharPositionInLine" : 8
      },
      "43" : {
        "Text" : "# turn off various warnings\n\n# foreach(warning 4244 4251 4267 4275 4290 4786 4305 4996)\n\n#     SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /wd${warning}\")\n\n# endforeach(warning)\n",
        "Line" : 332,
        "CharPositionInLine" : 8
      },
      "44" : {
        "Text" : "# This option is to enable the /DYNAMICBASE switch\n\n# It is used to workaround a bug in Windows 7 when linking in release, which results in corrupt\n\n# binaries. See this page for details: http://www.wintellect.com/CS/blogs/jrobbins/archive/2009/01/24/the-case-of-the-corrupt-pe-binaries.aspx\n",
        "Line" : 337,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : "# More MSVC specific compilation flags\n",
        "Line" : 346,
        "CharPositionInLine" : 8
      },
      "46" : {
        "Text" : "#needed for net plugin\n",
        "Line" : 372,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "# Both Cygwin and Msys need -DNOMINMAX ???\n",
        "Line" : 374,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "########################################################################################################\n\n# the following options are MSVC specific,\n\n# the first OSG_MSVC_VERSIONED_DLL activate a custom build-time layout that should allow to run examples and application\n\n# fron bin folder without requiring installation step.\n\n# it also prepend \"osg${OPENSCENEGRAPH_SOVERSION}-\" to only .dll files, leaving .lib files untouched in lib\n\n# it also use a hack to get rid of Debug and Release folder in MSVC projects\n\n# all the .dll and .pdb are in bin and all the .lib and .exp are in lib\n\n#\n\n# the second option disable incremental linking in debug build , that is enabled by default by CMake\n\n##########################################################################################################\n",
        "Line" : 379,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "########################################################################################################\n\n##### these were settings located in SetupCommon.cmake used in Luigi builds.... find out what are useful\n\n########################################################################################################\n\n#luigi#SET(CMAKE_VERBOSE_MAKEFILE TRUE)\n\n#luigi#SET(CMAKE_SKIP_RPATH TRUE)\n\n#luigi#SET(CMAKE_SKIP_RULE_DEPENDENCY TRUE)\n\n#luigi#IF(UNIX)\n\n#luigi#    LIST_CONTAINS(contains \"g++\" ${CMAKE_CXX_COMPILER_LIST})\n\n#luigi#    IF (contains)\n\n#luigi#        MESSAGE(${MY_MESSAGE_DEFAULT} \"${CMAKE_CURRENT_LIST_FILE}:${CMAKE_CURRENT_LIST_LINE} setting  CMAKE_CXX_COMPILER to g++\")\n\n#luigi#        SET(CMAKE_CXX_COMPILER \"g++\")\n\n#luigi#        SET(CMAKE_CXX_COMPILER_LOADED 2)\n\n#luigi#        SET(CMAKE_CXX_COMPILER_WORKS 2)\n\n#luigi#    ENDIF (contains)\n\n#luigi#    SET(CMAKE_CXX_FLAGS_RELEASE \"-O2\")\n\n#luigi#    SET(CMAKE_CXX_FLAGS_DEBUG \"-ggdb -gstabs\")\n\n#luigi#ENDIF(UNIX)\n\n########################################################################################################\n",
        "Line" : 403,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Map the OPENGL_PROFILE to OSG_GL*_AVAILABLE settings\n",
        "Line" : 457,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Map the OSG_GL*_AVAILABLE settings to OSG_GL_* settings\n",
        "Line" : 502,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Map the OSG_GL*_AVAILABLE settings to OpenGL header settings\n",
        "Line" : 530,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "################################################################################\n\n# Set Config header file\n",
        "Line" : 651,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "################################################################################\n\n# Set OpenGL header file\n",
        "Line" : 659,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "#SET(CMAKE_REQUIRED_INCLUDES ${CMAKE_REQUIRED_INCLUDES} ${OPENGL_INCLUDE_DIR})\n",
        "Line" : 663,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# INSTALL_FILES(/include/osg/ FILES \"${OPENSCENEGRAPH_CONFIG_HEADER}\")\n",
        "Line" : 683,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "################################################################################\n\n# Set Version header file\n",
        "Line" : 686,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "################################################################################\n\n# Set Version Info resource file\n",
        "Line" : 693,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "################################################################################\n\n# Optional build components\n",
        "Line" : 703,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# OSG Applications\n",
        "Line" : 706,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# OSG Examples\n",
        "Line" : 709,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# OSG Plugins disable option for apple build on travis ci test - full build job runs over time limit of 50 min.\n",
        "Line" : 712,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "################################################################################\n\n# 3rd Party Dependency Stuff\n",
        "Line" : 715,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "#\n\n# If you want to prevent CMake from picking up on any of the following optional 3rd Party dependencies in CMake 2.8 onwards\n\n# you can use the following style of command line option when invoking Cmake (here illustrating ignoring PythonLibs) :\n\n# cmake -DCMAKE_DISABLE_FIND_PACKAGE_PythonLibs=1 .\n\n#\n",
        "Line" : 723,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Common to all platforms except android:\n",
        "Line" : 731,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# V8 and Python plugins are tests for linking against these libraries but aren't functionality beyond this.\n\n# FIND_PACKAGE(V8)\n\n# FIND_PACKAGE(PythonLibs)\n",
        "Line" : 772,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "# Include macro utilities here\n",
        "Line" : 777,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "#optional example related dependencies\n",
        "Line" : 781,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Platform specific:\n\n# (We can approach this one of two ways. We can try to FIND everything\n\n# and simply check if we found the packages before actually building\n\n# or we can hardcode the cases. The advantage of the former is that\n\n# packages that are installed on platforms that don't require them\n\n# will still get built (presuming no compatibility issues). But this\n\n# also means modules that are redundant may get built. For example,\n\n# OS X doesn't need GIF, JPEG, PNG, TIFF, etc because it uses QuickTime.\n\n# Also, it will clutter the CMake menu with \"NOT_FOUND\".\n\n# The downside to the latter is that it is harder to build those\n\n# potentially redundant modules.)\n",
        "Line" : 793,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Image readers/writers depend on 3rd party libraries except for OS X which\n\n# can use Quicktime.\n",
        "Line" : 805,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# QuickTime is required for OS X, but optional for Windows.\n",
        "Line" : 813,
        "CharPositionInLine" : 8
      },
      "72" : {
        "Text" : "################################################################################\n\n# Create bin and lib directories if required\n",
        "Line" : 829,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "################################################################################\n\n# Installation stuff\n",
        "Line" : 837,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Correct any incorrect case usage in CMAKE_BUILD_TYPE\n",
        "Line" : 845,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Set the build postfix extension according to what configuration is being built.\n",
        "Line" : 856,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Set OSG_INSTALL_LIBDIR to specify the installation directories of object code libraries\n",
        "Line" : 879,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Use LIB_POSTFIX if defined\n",
        "Line" : 881,
        "CharPositionInLine" : 2
      },
      "78" : {
        "Text" : "# Use the GNU standard installation directories for CMake >= 2.8.5\n",
        "Line" : 896,
        "CharPositionInLine" : 4
      },
      "79" : {
        "Text" : "# Set installation variables\n",
        "Line" : 902,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# If the version is equal to or greater than 2.8.8, then we can use the\n\n# CMakePackageConfigHelpers module, which we use for configuring the package\n\n# config file. If we are not producing the package config file, then there is no\n\n# point in exporting the targets.\n",
        "Line" : 913,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Tell the project that we will be exporting targets\n",
        "Line" : 920,
        "CharPositionInLine" : 4
      },
      "82" : {
        "Text" : "# Set the package namespace for exporting\n",
        "Line" : 923,
        "CharPositionInLine" : 4
      },
      "83" : {
        "Text" : "# We don't support exporting creating config files or exporting targets without >=2.8.8\n",
        "Line" : 956,
        "CharPositionInLine" : 4
      },
      "84" : {
        "Text" : "# Here we apparently do some funky stuff with making the bin/ and lib/\n\n# folders which is probably needed to work around a very old CMake bug?\n",
        "Line" : 963,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "#SET(OUTPUT_BINDIR ${PROJECT_BINARY_DIR}/bin/${CMAKE_SYSTEM_NAME})\n",
        "Line" : 966,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "#SET(OUTPUT_LIBDIR ${PROJECT_BINARY_DIR}/lib/${CMAKE_SYSTEM_NAME})\n",
        "Line" : 973,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# CMake >= 2.8.1 changed the output directory algorithm (See doc).\n\n# Here we also set per-configuration directories (CMAKE_*_OUTPUT_DIRECTORY_<CONFIG>), or else binaries are generated in /bin/Debug and /bin/Release, etc. with MSVC and Xcode.\n\n# (Doc reads \"multi-configuration generators (VS, Xcode) do NOT append a per-configuration subdirectory to the specified directory\").\n\n# The workaround for 2.6.x (adding \"../\" as an output prefix for each target) seem to have no effect in >=2.8.1, so there is no need to change this.\n",
        "Line" : 980,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# Testing CMAKE_VERSION is possible in >= 2.6.4 only\n",
        "Line" : 992,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# If CMake >= 2.8.1\n",
        "Line" : 994,
        "CharPositionInLine" : 27
      },
      "90" : {
        "Text" : "# For each configuration (Debug, Release, MinSizeRel... and/or anything the user chooses)\n\n# Go uppercase (DEBUG, RELEASE...)\n",
        "Line" : 995,
        "CharPositionInLine" : 54
      },
      "91" : {
        "Text" : "#SET(INSTALL_BINDIR OpenSceneGraph/bin)\n\n#SET(INSTALL_INCDIR OpenSceneGraph/include)\n\n#SET(INSTALL_LIBDIR OpenSceneGraph/lib)\n\n#SET(INSTALL_DOCDIR OpenSceneGraph/doc)\n",
        "Line" : 1007,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "################################################################################\n\n# User Options\n",
        "Line" : 1012,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# Expose CMAKE_INCLUDE_PATH and CMAKE_LIBARY_PATH to the GUI so users\n\n# may set these values without needing to manipulate the environment.\n",
        "Line" : 1016,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# We are proposing that a new variable called CMAKE_PREFIX_PATH be introduced\n\n# to CMake to compliment CMAKE_INCLUDE_PATH and CMAKE_LIBRARY_PATH.\n\n# A formal feature request has been submited to CMake, Bug #4947.\n\n# It is intended for those users who have common prefixes for their INCLUDE\n\n# and LIBRARY locations. So if users have headers in /usr/local/include\n\n# and libraries in /usr/local/lib, the common prefix is /usr/local.\n\n# It should also cover the case where headers and libraries are\n\n# in the same directory.\n\n# Our proposal expects that FIND_* commands will automatically search for\n\n# CMAKE_PREFIX_PATH right after CMAKE_INCLUDE_PATH or CMAKE_LIBRARY_PATH.\n\n# Obviously, since CMake does not currently support this, we must write\n\n# our Find*.cmake modules to explicitly support this. Otherwise, this variable\n\n# will have no impact.\n\n# This is unofficial so this may be removed or changed at anytime.\n",
        "Line" : 1020,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# This is for an advanced option to give aggressive warnings\n\n# under different compilers. If yours is not implemented, this option\n\n# will not be made available.\n",
        "Line" : 1037,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# To be complete, we might also do GNUCC flags,\n\n# but everything here is C++ code.\n\n# -Wshadow and -Woverloaded-virtual are also interesting flags, but OSG\n\n# returns too many hits.\n\n# FYI, if we do implement GNUCC, then -Wmissing-prototypes in another\n\n# interesting C-specific flag.\n\n# Also, there is a bug in gcc 4.0. Under C++, -pedantic will create\n\n# errors instead of warnings for certain issues, including superfluous\n\n# semicolons and commas, and the use of long long. -fpermissive seems\n\n# to be the workaround.\n",
        "Line" : 1041,
        "CharPositionInLine" : 4
      },
      "97" : {
        "Text" : "# -Wmisleading-indentation (in -Wall) generates less warnings when interpreting tab as 4 spaces instead of the default of 8\n\n# SET(OSG_AGGRESSIVE_WARNING_FLAGS ${OSG_AGGRESSIVE_WARNING_FLAGS} -ftabstop=4)\n",
        "Line" : 1059,
        "CharPositionInLine" : 16
      },
      "98" : {
        "Text" : "# Previous included -Wformat=2 in OSG_AGGRESSIVE_WARNING_FLAGS but had to remove it due to standard library errors\n",
        "Line" : 1066,
        "CharPositionInLine" : 4
      },
      "99" : {
        "Text" : "#disable specific warning level 4 warnings:\n\n#C4100 'identifier' : unreferenced formal parameter\n\n#C4127 Error Message conditional expression is constant\n\n#C4706 assignment within conditional expression\n\n#C4589: Constructor of abstract class 'osgGA::CameraManipulator' ignores initializer for virtual base class 'osg::Object'\n",
        "Line" : 1069,
        "CharPositionInLine" : 4
      },
      "100" : {
        "Text" : "# remove existing flags\n",
        "Line" : 1082,
        "CharPositionInLine" : 8
      },
      "101" : {
        "Text" : "# This part is for the CMake menu option to toggle the warnings on/off.\n\n# This will only be made available if we set values for OSG_AGGRESSIVE_WARNING_FLAGS.\n",
        "Line" : 1108,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "# Add flags defined by OSG_AGGRESSIVE_WARNING_FLAGS if they aren't already there\n",
        "Line" : 1123,
        "CharPositionInLine" : 8
      },
      "103" : {
        "Text" : "# Remove all flags considered aggressive\n",
        "Line" : 1130,
        "CharPositionInLine" : 8
      },
      "104" : {
        "Text" : "# Dynamic vs Static Linking\n",
        "Line" : 1138,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "# OSG Core\n",
        "Line" : 1147,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "# set osg window system to iOS\n",
        "Line" : 1163,
        "CharPositionInLine" : 8
      },
      "107" : {
        "Text" : "# set osg default image plugin\n",
        "Line" : 1166,
        "CharPositionInLine" : 8
      },
      "108" : {
        "Text" : "# ensure app bundles for example app\n",
        "Line" : 1169,
        "CharPositionInLine" : 8
      },
      "109" : {
        "Text" : "# Set defaults for Universal Binaries. We want 32-bit Intel/PPC on 10.4\n\n# and 32/64-bit Intel/PPC on >= 10.5. Anything <= 10.3 doesn't support.\n",
        "Line" : 1174,
        "CharPositionInLine" : 8
      },
      "110" : {
        "Text" : "# These are just defaults/recommendations, but how we want to build\n\n# out of the box. But the user needs to be able to change these options.\n\n# So we must only set the values the first time CMake is run, or we\n\n# will overwrite any changes the user sets.\n\n# FORCE is used because the options are not reflected in the UI otherwise.\n\n# Seems like a good place to add version specific compiler flags too.\n",
        "Line" : 1177,
        "CharPositionInLine" : 8
      },
      "111" : {
        "Text" : "# For Doxygen\n",
        "Line" : 1206,
        "CharPositionInLine" : 0
      },
      "112" : {
        "Text" : "# To build the documention, you will have to enable it\n\n# and then do the equivalent of \"make doc_openscenegraph doc_openthreads\".\n",
        "Line" : 1210,
        "CharPositionInLine" : 0
      },
      "113" : {
        "Text" : "# If html help generation was requested. DOCUMENTATION_HTML_HELP is defined by Documentation.cmake\n",
        "Line" : 1234,
        "CharPositionInLine" : 4
      },
      "114" : {
        "Text" : "# on windows Documentation.cmake finds the html help workshop if it exists. On u*ix we might have it with wine but no way to point it out\n",
        "Line" : 1237,
        "CharPositionInLine" : 8
      },
      "115" : {
        "Text" : "# this var sets a proper value in .doxygen files when configuring them below\n",
        "Line" : 1242,
        "CharPositionInLine" : 8
      },
      "116" : {
        "Text" : "# This processes our doxyfile.cmake and substitutes paths to generate\n\n# a final Doxyfile\n",
        "Line" : 1246,
        "CharPositionInLine" : 4
      },
      "117" : {
        "Text" : "# copy the osg logo to documentations target folder\n",
        "Line" : 1251,
        "CharPositionInLine" : 4
      },
      "118" : {
        "Text" : "#INSTALL(FILES ${PROJECT_BINARY_DIR}/doc/${PROJECT_NAME}ReferenceDocs-${OPENSCENEGRAPH_VERSION}.chm DESTINATION doc OPTIONAL COMPONENT openscenegraph-doc)\n",
        "Line" : 1255,
        "CharPositionInLine" : 4
      },
      "119" : {
        "Text" : "# now set up openthreads documentation generation\n",
        "Line" : 1258,
        "CharPositionInLine" : 4
      },
      "120" : {
        "Text" : "# This processes our openthreads.doxyfile.cmake and generate a final doxyfile\n",
        "Line" : 1263,
        "CharPositionInLine" : 4
      },
      "121" : {
        "Text" : "# copy the osg logo to documentations target folder\n",
        "Line" : 1267,
        "CharPositionInLine" : 4
      },
      "122" : {
        "Text" : "#INSTALL(FILES ${PROJECT_BINARY_DIR}/doc/${PROJECT_NAME}ReferenceDocs-${OPENSCENEGRAPH_VERSION}.chm DESTINATION doc OPTIONAL COMPONENT openscenegraph-doc)\n",
        "Line" : 1271,
        "CharPositionInLine" : 4
      },
      "123" : {
        "Text" : "# Process our other doxyfiles but don't create targets for these\n",
        "Line" : 1274,
        "CharPositionInLine" : 4
      },
      "124" : {
        "Text" : "# This creates a new target to build documentation.\n\n# It runs ${DOXYGEN} which is the full path and executable to\n\n# Doxygen on your system, set by the FindDoxygen.cmake module\n\n# (called by FindDocumentation.cmake).\n\n# It runs the final generated Doxyfile against it.\n\n# The DOT_PATH is substituted into the Doxyfile.\n",
        "Line" : 1282,
        "CharPositionInLine" : 4
      },
      "125" : {
        "Text" : "# The following are required to uses Dart and the Cdash dashboard\n\n# viewable here : http://cdash.openscenegraph.org/index.php?project=OpenSceneGraph\n",
        "Line" : 1301,
        "CharPositionInLine" : 0
      },
      "126" : {
        "Text" : "# present the packaging option only if we have the cpack command defined (effectively >= 2.6.0)\n",
        "Line" : 1306,
        "CharPositionInLine" : 0
      },
      "127" : {
        "Text" : "# Run this as late as possible so users can easier spot the message\n",
        "Line" : 1315,
        "CharPositionInLine" : 0
      },
      "128" : {
        "Text" : "# emit a message during installation.\n",
        "Line" : 1350,
        "CharPositionInLine" : 8
      },
      "129" : {
        "Text" : "# This needs to be run very last so other parts of the scripts can take\n\n# advantage of this.\n",
        "Line" : 1360,
        "CharPositionInLine" : 0
      },
      "130" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# add clobber build target to clear all the non git registered files/directories\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1366,
        "CharPositionInLine" : 0
      },
      "131" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n### uninstall target\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1373,
        "CharPositionInLine" : 0
      },
      "132" : {
        "Text" : "#\n",
        "Line" : 1383,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 133
    },
    "CMakeModules/CheckAtomicOps.cmake" : {
      "ObjectId" : "11ddae566677cd108170340e7e9a36860142ba28",
      "LastModified" : "2014-11-21T10:21:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check for availability of atomic operations\n\n# This module defines\n\n# OPENTHREADS_HAVE_ATOMIC_OPS\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# as the test does not work for IOS hardcode the ATOMIC implementation\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Do step by step checking,\n",
        "Line" : 31,
        "CharPositionInLine" : 7
      },
      "3" : {
        "Text" : "# MinGW can set both WIN32_INTERLOCKED and GCC_BUILTINS to true which results in compliation errors\n",
        "Line" : 148,
        "CharPositionInLine" : 7
      },
      "4" : {
        "Text" : "# In this case we prefer the GCC_BUILTINS\n",
        "Line" : 150,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 5
    },
    "CMakeModules/Find3rdPartyDependencies.cmake" : {
      "ObjectId" : "bb0a5f24882a0fb7623fe812d8466e868b215417",
      "LastModified" : "2017-03-22T17:27:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################################\n\n# this Macro find a generic dependency, handling debug suffix\n\n# all the paramenter are required, in case of lists, use \"\" in calling\n\n################################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#MESSAGE( \" ${DEPNAME}_INCLUDE_DIR --> ${${DEPNAME}_INCLUDE_DIR}<--\")\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#MESSAGE( \" ${DEPNAME}_LIBRARY --> ${${DEPNAME}_LIBRARY}<--\")\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "################################################################################################\n\n# this Macro is tailored to Mike and Torbens dependencies\n\n################################################################################################\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#forcing subsequent FindFreeType stuff to not search for other variables.... kind of a hack\n",
        "Line" : 70,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "#forcing subsequent FindGlut stuff to not search for other variables.... kind of a hack\n",
        "Line" : 81,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "#forcing subsequent FindPNG stuff to not search for other variables.... kind of a hack\n",
        "Line" : 90,
        "CharPositionInLine" : 16
      },
      "7" : {
        "Text" : "# CMakes default module to find libxml2 will not find the in\n",
        "Line" : 96,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# The CMAKE find libxml module uses LIBXML2_LIBRARIES -> fill it.... kind of a hack\n",
        "Line" : 99,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "#    SET(LIBXML2_XMLLINT_EXECUTABLE ${OSG_3RDPARTY_BIN}/bin/xmllint.exe CACHE FILEPATH \"Path to xmllint executable\" FORCE)\n",
        "Line" : 101,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "#FIND_DEPENDENCY(DEPNAME INCLUDEFILE LIBRARY_NAMES_BASE SEARCHPATHLIST DEBUGSUFFIX EXSUFFIX)\n",
        "Line" : 103,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "#luigi#INCLUDE(FindOSGDepends.cmake)\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "################################################################################################\n\n# this is code for handling optional 3RDPARTY usage\n\n################################################################################################\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Check Architecture\n",
        "Line" : 118,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# kept for backcompatibility\n",
        "Line" : 145,
        "CharPositionInLine" : 54
      },
      "CommentCount" : 15
    },
    "CMakeModules/FindAVFoundation.cmake" : {
      "ObjectId" : "efbc260be88b5ea249598686e6985f1ece7978e5",
      "LastModified" : "2016-08-26T17:00:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Apple AVFoundation (next-generation QTKit)\n\n# This module defines\n\n# AV_FOUNDATION_LIBRARY\n\n# AV_FOUNDATION_FOUND, if false, do not try to link to gdal\n\n#\n\n# $AV_FOUNDATION_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$AV_FOUNDATION_DIR\n\n#\n\n# Created by Stephan Maximilian Huber\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# AVFoundation exists ON iOS, too -- good support for SDK 6.0 and greater\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# AVFoundation exists since 10.7, but only 10.8 has all features necessary for OSG\n\n# so check the SDK-setting\n",
        "Line" : 30,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "CMakeModules/FindAndroidNDK.cmake" : {
      "ObjectId" : "d4fa37906b9b52363edb15c2dadbe943ca25fb01",
      "LastModified" : "2011-06-14T18:10:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate AndroidNDK\n\n# This module defines\n\n# ANDROID_NDK\n\n# ANDROID_FOUND, if false, do not try to use AndroidNDK\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# search for r5c\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# search for r5b\n",
        "Line" : 27,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# search for r5\n",
        "Line" : 32,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# search for r4-crystax\n",
        "Line" : 37,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "CMakeModules/FindAsio.cmake" : {
      "ObjectId" : "433d5c73cc4b1cb8de9ff48d9810d21a9fb6a518",
      "LastModified" : "2015-08-11T08:43:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate ASIO-headers (http://think-async.com/Asio)\n\n# This module defines\n\n# ASIO_FOUND, if false, do not try to link to gdal\n\n# ASIO_INCLUDE_DIR, where to find the headers\n\n#\n\n# Created by Stephan Maximilian Huber\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeModules/FindCOLLADA.cmake" : {
      "ObjectId" : "36678feb152716c0b90423eb4fea92f699461d52",
      "LastModified" : "2019-03-26T08:06:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Collada\n\n# This module defines:\n\n# COLLADA_INCLUDE_DIR, where to find the headers\n\n#\n\n# COLLADA_LIBRARY, COLLADA_LIBRARY_DEBUG\n\n# COLLADA_FOUND, if false, do not try to link to Collada dynamically\n\n#\n\n# COLLADA_LIBRARY_STATIC, COLLADA_LIBRARY_STATIC_DEBUG\n\n# COLLADA_STATIC_FOUND, if false, do not try to link to Collada statically\n\n#\n\n# $COLLADA_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$COLLADA_DIR\n\n#\n\n# Created by Robert Osfield.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check if COLLADA_DIR is set, otherwise use ACTUAL_3DPARTY_DIR:\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#macports\n",
        "Line" : 70,
        "CharPositionInLine" : 34
      },
      "3" : {
        "Text" : "# Fink\n",
        "Line" : 73,
        "CharPositionInLine" : 16
      },
      "4" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 74,
        "CharPositionInLine" : 23
      },
      "5" : {
        "Text" : "# Blastwave\n",
        "Line" : 75,
        "CharPositionInLine" : 21
      },
      "6" : {
        "Text" : "#macports\n",
        "Line" : 98,
        "CharPositionInLine" : 34
      },
      "7" : {
        "Text" : "#macports\n",
        "Line" : 122,
        "CharPositionInLine" : 34
      },
      "8" : {
        "Text" : "#macports\n",
        "Line" : 145,
        "CharPositionInLine" : 34
      },
      "9" : {
        "Text" : "#macports\n",
        "Line" : 168,
        "CharPositionInLine" : 34
      },
      "10" : {
        "Text" : "# find extra libraries that the static linking requires\n",
        "Line" : 181,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "CMakeModules/FindCoreMedia.cmake" : {
      "ObjectId" : "3e7eb629b54680f0c52fdeeb49cacc8efa512367",
      "LastModified" : "2012-10-02T14:07:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Apple CoreMedia\n\n# This module defines\n\n# COREMEDIA_LIBRARY\n\n# COREMEDIA_FOUND, if false, do not try to link to gdal \n\n# COREMEDIA_INCLUDE_DIR, where to find the headers\n\n#\n\n# $COREMEDIA_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$COREMEDIA_DIR\n\n#\n\n# Created by Stephan Maximilian Huber. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeModules/FindCoreVideo.cmake" : {
      "ObjectId" : "19b372eb99be302e42e93fe2d5175207e56dcff0",
      "LastModified" : "2012-10-02T14:07:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Apple CoreVideo (next-generation QuickTime)\n\n# This module defines\n\n# COREVIDEO_LIBRARY\n\n# COREVIDEO_FOUND, if false, do not try to link to gdal \n\n# COREVIDEO_INCLUDE_DIR, where to find the headers\n\n#\n\n# $COREVIDEO_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$COREVIDEO_DIR\n\n#\n\n# Created by Eric Wing. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CoreVideo on OS X looks different than CoreVideo for Windows,\n\n# so I am going to case the two.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeModules/FindDirectInput.cmake" : {
      "ObjectId" : "f00b871e89a7dab7813e7c14919bb4357f358eda",
      "LastModified" : "2012-10-02T14:07:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate directinput\n\n# This module defines\n\n# DIRECTINPUT_LIBRARIES\n\n# DIRECTINPUT_FOUND, if false, do not try to link to directinput\n\n# DIRECTINPUT_INCLUDE_DIR, where to find the headers\n\n#\n\n# $DIRECTINPUT_DIR is an environment variable that would\n\n# point to the this path in the plateform devkit (Samples\\Multimedia\\DirectShow)\n\n#\n\n# Created by Cedric Pinson.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeModules/FindDirectShow.cmake" : {
      "ObjectId" : "e3729facfa183bfddbad21a644b727145d8e54c7",
      "LastModified" : "2012-10-02T14:07:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate directshow\n\n# This module defines\n\n# DIRECTSHOW_LIBRARIES\n\n# DIRECTSHOW_FOUND, if false, do not try to link to directshow\n\n# DIRECTSHOW_INCLUDE_DIR, where to find the headers\n\n#\n\n# $DIRECTSHOW_DIR is an environment variable that would\n\n# point to the this path in the plateform devkit (Samples\\Multimedia\\DirectShow)\n\n#\n\n# Created by Cedric Pinson.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# sdk 6.1\n",
        "Line" : 27,
        "CharPositionInLine" : 56
      },
      "2" : {
        "Text" : "# sdk 6.1\n",
        "Line" : 28,
        "CharPositionInLine" : 60
      },
      "3" : {
        "Text" : "# sdk 2003\n",
        "Line" : 29,
        "CharPositionInLine" : 52
      },
      "4" : {
        "Text" : "# sdk 2003\n",
        "Line" : 30,
        "CharPositionInLine" : 54
      },
      "5" : {
        "Text" : "# sdk 6.1\n",
        "Line" : 36,
        "CharPositionInLine" : 55
      },
      "6" : {
        "Text" : "# sdk 6.1\n",
        "Line" : 37,
        "CharPositionInLine" : 58
      },
      "7" : {
        "Text" : "# sdk 2003\n",
        "Line" : 38,
        "CharPositionInLine" : 50
      },
      "8" : {
        "Text" : "# sdk 2003\n",
        "Line" : 39,
        "CharPositionInLine" : 53
      },
      "CommentCount" : 9
    },
    "CMakeModules/FindEGL.cmake" : {
      "ObjectId" : "83cb60acdbf80b6201ce2f69c3a6235fb549ab6b",
      "LastModified" : "2016-10-14T10:06:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Finds EGL header and library\n\n#\n\n# This script defines the following:\n\n#  EGL_FOUND // Set to TRUE if EGL is found\n\n#  EGL_INCLUDE_DIR // Parent directory of directory EGL/egl.h header.\n\n#\n\n# EGL_DIR can be set as an environment variable or a CMake variable,\n\n# to the parent directory of the EGL header.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set\n\n# EGL_FOUND to TRUE as appropriate\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeModules/FindFBX.cmake" : {
      "ObjectId" : "7e0ffb6d607e71acd33281b58e859a3f591c5ee2",
      "LastModified" : "2018-10-29T08:14:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate FBX\n\n# This module defines:\n\n# FBX_INCLUDE_DIR, where to find the headers\n\n#\n\n# FBX_LIBRARY, FBX_LIBRARY_DEBUG\n\n# FBX_FOUND\n\n#\n\n# $FBX_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$FBX_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# using regular Clang or AppleClang\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# do nothing\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#try to use 2015.1 or 2014.2 version\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# search for headers & debug/release libraries\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Once one of the calls succeeds the result variable will be set and stored in the cache so that no call will search again.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#no debug d suffix, search in debug folder only\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#try to use 2014.1 version\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# search for headers & debug/release libraries\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#try to use 2013.3 version\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# search for headers & debug/release libraries\n",
        "Line" : 169,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "CMakeModules/FindFFmpeg.cmake" : {
      "ObjectId" : "d548e7a98d4ae3b1a7d4a50c850155073931d1b0",
      "LastModified" : "2017-08-16T08:04:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate ffmpeg\n\n# This module defines\n\n# FFMPEG_LIBRARIES\n\n# FFMPEG_FOUND, if false, do not try to link to ffmpeg\n\n# FFMPEG_INCLUDE_DIR, where to find the headers\n\n#\n\n# $FFMPEG_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$FFMPEG_DIR\n\n#\n\n# Created by Robert Osfield.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#In ffmpeg code, old version use \"#include <header.h>\" and newer use \"#include <libname/header.h>\"\n\n#In OSG ffmpeg plugin, we used \"#include <header.h>\" for compatibility with old version of ffmpeg\n\n#With the new version of FFmpeg, a file named \"time.h\" was added that breaks compatibility with the old version of ffmpeg.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#We have to search the path which contain the header.h (useful for old version)\n\n#and search the path which contain the libname/header.h (useful for new version)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Then we need to include ${FFMPEG_libname_INCLUDE_DIRS} (in old version case, use by ffmpeg header and osg plugin code)\n\n#                                                       (in new version case, use by ffmpeg header) \n\n#and ${FFMPEG_libname_INCLUDE_DIRS/libname}             (in new version case, use by osg plugin code)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Macro to find header and lib directories\n\n# example: FFMPEG_FIND(AVFORMAT avformat avformat.h)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# old version of ffmpeg put header in $prefix/include/[ffmpeg]\n\n# so try to find header in include directory\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Fink\n",
        "Line" : 41,
        "CharPositionInLine" : 20
      },
      "7" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 42,
        "CharPositionInLine" : 27
      },
      "8" : {
        "Text" : "# Blastwave\n",
        "Line" : 43,
        "CharPositionInLine" : 25
      },
      "9" : {
        "Text" : "# Fink\n",
        "Line" : 60,
        "CharPositionInLine" : 20
      },
      "10" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 61,
        "CharPositionInLine" : 27
      },
      "11" : {
        "Text" : "# Blastwave\n",
        "Line" : 62,
        "CharPositionInLine" : 25
      },
      "12" : {
        "Text" : "# find stdint.h\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Fink\n",
        "Line" : 109,
        "CharPositionInLine" : 20
      },
      "14" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 110,
        "CharPositionInLine" : 27
      },
      "15" : {
        "Text" : "# Blastwave\n",
        "Line" : 111,
        "CharPositionInLine" : 25
      },
      "16" : {
        "Text" : "# not sure about the header to look for here.\n",
        "Line" : 134,
        "CharPositionInLine" : 45
      },
      "17" : {
        "Text" : "# Note we don't check FFMPEG_LIBSWSCALE_FOUND here, it's optional.\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Using the new include style for FFmpeg prevents issues with #include <time.h>\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Note we don't add FFMPEG_LIBSWSCALE_LIBRARIES here, it will be added if found later.\n",
        "Line" : 161,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "#    MESSAGE(STATUS \"Could not find FFMPEG\")\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "CMakeModules/FindFLTK.cmake" : {
      "ObjectId" : "74583d37f55af4469b181e7cc1be0cde071f5117",
      "LastModified" : "2016-10-14T10:06:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate FLTK\n\n# This module defines\n\n# FLTK_LIBRARY\n\n# FLTK_FOUND, if false, do not try to link to gdal \n\n# FLTK_INCLUDE_DIR, where to find the headers\n\n#\n\n# $FLTK_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$FLTK_DIR\n\n#\n\n# Created by Robert Osfield. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# prefer FindFLTK from cmake distribution\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 28,
        "CharPositionInLine" : 16
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 29,
        "CharPositionInLine" : 23
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 30,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 5
    },
    "CMakeModules/FindFOX.cmake" : {
      "ObjectId" : "730764cce10cb7cdf5963bc759565d95fda12da3",
      "LastModified" : "2016-10-14T10:06:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate gdal\n\n# This module defines\n\n# FOX_LIBRARY\n\n# FOX_FOUND, if false, do not try to link to gdal \n\n# FOX_INCLUDE_DIR, where to find the headers\n\n#\n\n# $FOX_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$FOX_DIR\n\n#\n\n# Created by Robert Osfield. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fink\n",
        "Line" : 19,
        "CharPositionInLine" : 24
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 20,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "# Blastwave\n",
        "Line" : 21,
        "CharPositionInLine" : 29
      },
      "4" : {
        "Text" : "# Fink\n",
        "Line" : 30,
        "CharPositionInLine" : 16
      },
      "5" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 31,
        "CharPositionInLine" : 23
      },
      "6" : {
        "Text" : "# Blastwave\n",
        "Line" : 32,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 7
    },
    "CMakeModules/FindFreetype.cmake" : {
      "ObjectId" : "f24372b34136cfc9958e95cb5796d9f8f37b9916",
      "LastModified" : "2016-10-14T10:06:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindFreetype\n\n# ------------\n\n#\n\n# Locate FreeType library\n\n#\n\n# This module defines\n\n#\n\n# ::\n\n#\n\n#   FREETYPE_LIBRARIES, the library to link against\n\n#   FREETYPE_FOUND, if false, do not try to link to FREETYPE\n\n#   FREETYPE_INCLUDE_DIRS, where to find headers.\n\n#   FREETYPE_VERSION_STRING, the version of freetype found (since CMake 2.8.8)\n\n#   This is the concatenation of the paths:\n\n#   FREETYPE_INCLUDE_DIR_ft2build\n\n#   FREETYPE_INCLUDE_DIR_freetype2\n\n#\n\n#\n\n#\n\n# $FREETYPE_DIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$FREETYPE_DIR used in building FREETYPE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2000-2016 Kitware, Inc.\n\n# Copyright 2000-2011 Insight Software Consortium\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Created by Eric Wing.\n\n# Modifications by Alexander Neundorf.\n\n# This file has been renamed to \"FindFreetype.cmake\" instead of the correct\n\n# \"FindFreeType.cmake\" in order to be compatible with the one from KDE4, Alex.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Ugh, FreeType seems to use some #include trickery which\n\n# makes this harder than it should be. It looks like they\n\n# put ft2build.h in a common/easier-to-find location which\n\n# then contains a #include to a more specific header in a\n\n# more specific location (#include <freetype/config/ftheader.h>).\n\n# Then from there, they need to set a bunch of #define's\n\n# so you can do something like:\n\n# #include FT_FREETYPE_H\n\n# Unfortunately, using CMake's mechanisms like include_directories()\n\n# wants explicit full paths and this trickery doesn't work too well.\n\n# I'm going to attempt to cut out the middleman and hope\n\n# everything still works.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Adapted for OpenSceneGraph until the updates here for finding the debug Windows library freetyped are released with CMake\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#OSG Look in CMake Modules dir\n",
        "Line" : 132,
        "CharPositionInLine" : 39
      },
      "6" : {
        "Text" : "# set the user variables\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set FREETYPE_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#OSG Look in CMake Modules dir\n",
        "Line" : 174,
        "CharPositionInLine" : 39
      },
      "CommentCount" : 9
    },
    "CMakeModules/FindGDAL.cmake" : {
      "ObjectId" : "3b963c4c4906eeaa9b542882c3364e1754d8f525",
      "LastModified" : "2016-10-14T10:06:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate gdal\n\n# This module defines\n\n# GDAL_LIBRARY\n\n# GDAL_FOUND, if false, do not try to link to gdal \n\n# GDAL_INCLUDE_DIR, where to find the headers\n\n#\n\n# $GDALDIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$GDAL_DIR\n\n# used in building gdal.\n\n#\n\n# Created by Eric Wing. I'm not a gdal user, but OpenSceneGraph uses it \n\n# for osgTerrain so I whipped this module together for completeness.\n\n# I actually don't know the conventions or where files are typically\n\n# placed in distros.\n\n# Any real gdal users are encouraged to correct this (but please don't\n\n# break the OS X framework stuff when doing so which is what usually seems \n\n# to happen).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This makes the presumption that you are include gdal.h like\n\n# #include \"gdal.h\"\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# prefer FindGDAL from cmake distribution\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Unofficial: We are proposing this.\n",
        "Line" : 39,
        "CharPositionInLine" : 31
      },
      "4" : {
        "Text" : "# Fink\n",
        "Line" : 56,
        "CharPositionInLine" : 14
      },
      "5" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 59,
        "CharPositionInLine" : 21
      },
      "6" : {
        "Text" : "# Blastwave\n",
        "Line" : 62,
        "CharPositionInLine" : 19
      },
      "7" : {
        "Text" : "# Unofficial: We are proposing this.\n",
        "Line" : 77,
        "CharPositionInLine" : 29
      },
      "CommentCount" : 8
    },
    "CMakeModules/FindGIFLIB.cmake" : {
      "ObjectId" : "33c16f9ebfb178c62122ef7831b54347faecdf40",
      "LastModified" : "2016-10-14T10:06:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module defines\n\n# GIFLIB_LIBRARY\n\n# GIFLIB_FOUND, if false, do not try to link \n\n# GIFLIB_INCLUDE_DIR, where to find the headers\n\n#\n\n# $GIFLIB_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$GIFLIB_DIR\n\n#\n\n# Created by Eric Wing. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Unofficial: We are proposing this.\n",
        "Line" : 19,
        "CharPositionInLine" : 29
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 30,
        "CharPositionInLine" : 14
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 31,
        "CharPositionInLine" : 21
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 32,
        "CharPositionInLine" : 19
      },
      "5" : {
        "Text" : "# Unofficial: We are proposing this.\n",
        "Line" : 47,
        "CharPositionInLine" : 29
      },
      "CommentCount" : 6
    },
    "CMakeModules/FindGLCORE.cmake" : {
      "ObjectId" : "18c0347c8d79d1f48b60d6e651340c6e3aeb2324",
      "LastModified" : "2016-10-14T10:06:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Finds the OpenGL Core Profile (cp) header file.\n\n# Looks for glcorearb.h\n\n# \n\n# This script defines the following:\n\n#  GLCORE_FOUND // Set to TRUE if glcorearb.h is found\n\n#  GLCORE_INCLUDE_DIR // Parent directory of directory (gl, GL3, or OpenGL) containing the CP header.\n\n#  GLCORE_GLCOREARB_HEADER // advanced\n\n#\n\n# GLCORE_ROOT can be set as an environment variable or a CMake variable,\n\n# to the parent directory of the gl, GL3, or OpenGL directory containing the CP header.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set\n\n# GLCORE_FOUND to TRUE as appropriate\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeModules/FindGLIB.cmake" : {
      "ObjectId" : "7ddb64027905d546888f9328226f645e215dc3a9",
      "LastModified" : "2016-10-14T10:06:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Glib and its components (gio, gobject etc)\n\n# Once done, this will define\n\n#\n\n#  GLIB_FOUND - system has Glib\n\n#  GLIB_INCLUDE_DIRS - the Glib include directories\n\n#  GLIB_LIBRARIES - link these to use Glib\n\n#\n\n# Optionally, the COMPONENTS keyword can be passed to find_package()\n\n# and Glib components can be looked for.  Currently, the following\n\n# components can be used, and they define the following variables if\n\n# found:\n\n#\n\n#  gio:             GLIB_GIO_LIBRARIES\n\n#  gobject:         GLIB_GOBJECT_LIBRARIES\n\n#  gmodule:         GLIB_GMODULE_LIBRARIES\n\n#  gthread:         GLIB_GTHREAD_LIBRARIES\n\n#\n\n# Note that the respective _INCLUDE_DIR variables are not set, since\n\n# all headers are in the same directory as GLIB_INCLUDE_DIRS.\n\n#\n\n# Copyright (C) 2012 Raphael Kubo da Costa <rakuco@webkit.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# 1.  Redistributions of source code must retain the above copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n# 2.  Redistributions in binary form must reproduce the above copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND ITS CONTRIBUTORS ``AS\n\n# IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n\n# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\n# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR ITS\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\n# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\n# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n\n# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n\n# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n\n# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Files in glib's main include path may include glibconfig.h, which,\n\n# for some odd reason, is normally in $LIBDIR/glib-2.0/include.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Version detection\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Additional Glib components.  We only look for libraries, as not all of them\n\n# have corresponding headers and all headers are installed alongside the main\n\n# glib ones.\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# gio-unix is compiled as part of the gio library, but the include paths\n\n# are separate from the shared glib ones. Since this is currently only used\n\n# by WebKitGTK+ we don't go to extraordinary measures beyond pkg-config.\n",
        "Line" : 117,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 5
    },
    "CMakeModules/FindGStreamer.cmake" : {
      "ObjectId" : "c5f10ebe2302e08774a49401e1e0d7d5c2c5dda5",
      "LastModified" : "2016-10-14T10:06:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GStreamer and its plugins\n\n# Once done, this will define\n\n#\n\n#  GSTREAMER_FOUND - system has GStreamer\n\n#  GSTREAMER_INCLUDE_DIRS - the GStreamer include directories\n\n#  GSTREAMER_LIBRARIES - link these to use GStreamer\n\n#\n\n# Additionally, gstreamer-base is always looked for and required, and\n\n# the following related variables are defined:\n\n#\n\n#  GSTREAMER_BASE_INCLUDE_DIRS - gstreamer-base's include directory\n\n#  GSTREAMER_BASE_LIBRARIES - link to these to use gstreamer-base\n\n#\n\n# Optionally, the COMPONENTS keyword can be passed to find_package()\n\n# and GStreamer plugins can be looked for.  Currently, the following\n\n# plugins can be searched, and they define the following variables if\n\n# found:\n\n#\n\n#  gstreamer-app:        GSTREAMER_APP_INCLUDE_DIRS and GSTREAMER_APP_LIBRARIES\n\n#  gstreamer-audio:      GSTREAMER_AUDIO_INCLUDE_DIRS and GSTREAMER_AUDIO_LIBRARIES\n\n#  gstreamer-fft:        GSTREAMER_FFT_INCLUDE_DIRS and GSTREAMER_FFT_LIBRARIES\n\n#  gstreamer-pbutils:    GSTREAMER_PBUTILS_INCLUDE_DIRS and GSTREAMER_PBUTILS_LIBRARIES\n\n#  gstreamer-video:      GSTREAMER_VIDEO_INCLUDE_DIRS and GSTREAMER_VIDEO_LIBRARIES\n\n#\n\n# Copyright (C) 2012 Raphael Kubo da Costa <rakuco@webkit.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# 1.  Redistributions of source code must retain the above copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n# 2.  Redistributions in binary form must reproduce the above copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND ITS CONTRIBUTORS ``AS\n\n# IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n\n# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\n# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR ITS\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\n# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\n# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n\n# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n\n# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n\n# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Helper macro to find a GStreamer plugin (or GStreamer itself)\n\n#   _component_prefix is prepended to the _INCLUDE_DIRS and _LIBRARIES variables (eg. \"GSTREAMER_AUDIO\")\n\n#   _pkgconfig_name is the component's pkg-config name (eg. \"gstreamer-1.0\", or \"gstreamer-video-1.0\").\n\n#   _header is the component's header, relative to the gstreamer-1.0 directory (eg. \"gst/gst.h\").\n\n#   _library is the component's library name (eg. \"gstreamer-1.0\" or \"gstvideo-1.0\")\n\n#macro(FIND_GSTREAMER_COMPONENT _component_prefix _pkgconfig_name _header _library)\n\n#    pkg_check_modules(PC_${_component_prefix} QUIET ${_pkgconfig_name})\n\n#\n\n#    find_path(${_component_prefix}_INCLUDE_DIRS\n\n#        NAMES ${_header}\n\n#        HINTS ${PC_${_component_prefix}_INCLUDE_DIRS} ${PC_${_component_prefix}_INCLUDEDIR}\n\n#        PATH_SUFFIXES gstreamer-1.0\n\n#    )\n\n#\n\n#    find_library(${_component_prefix}_LIBRARIES\n\n#        NAMES ${_library}\n\n#        HINTS ${PC_${_component_prefix}_LIBRARY_DIRS} ${PC_${_component_prefix}_LIBDIR}\n\n#    )\n\n#endmacro()\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#        find_path(${_component_prefix}_INCLUDE_DIRS\n\n#            NAMES ${_header}\n\n#            HINTS ${PC_${_component_prefix}_INCLUDE_DIRS} ${PC_${_component_prefix}_INCLUDEDIR}\n\n#            PATH_SUFFIXES gstreamer-1.0\n\n#        )\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#        find_library(${_component_prefix}_LIBRARIES\n\n#            NAMES ${_library}\n\n#            HINTS ${PC_${_component_prefix}_LIBRARY_DIRS} ${PC_${_component_prefix}_LIBDIR}\n\n#        )\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ------------------------\n\n# 1. Find GStreamer itself\n\n# ------------------------\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# 1.1. Find headers and libraries\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# 1.2. Check GStreamer version\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# -------------------------\n\n# 2. Find GStreamer plugins\n\n# -------------------------\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ------------------------------------------------\n\n# 3. Process the COMPONENTS passed to FIND_PACKAGE\n\n# ------------------------------------------------\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "CMakeModules/FindGTA.cmake" : {
      "ObjectId" : "e483ad3c5ee9ea6818d28e402253089c0e9f0e85",
      "LastModified" : "2018-10-29T08:14:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate libgta\n\n# This module defines\n\n# GTA_FOUND, if false, do not try to link to libgta\n\n# GTA_INCLUDE_DIRS, where to find the headers\n\n# GTA_LIBRARIES\n\n#\n\n# $GTA_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$GTA_DIR\n\n# used in building libgta.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fink\n",
        "Line" : 29,
        "CharPositionInLine" : 20
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 30,
        "CharPositionInLine" : 27
      },
      "3" : {
        "Text" : "# Blastwave\n",
        "Line" : 31,
        "CharPositionInLine" : 25
      },
      "CommentCount" : 4
    },
    "CMakeModules/FindGtkGl.cmake" : {
      "ObjectId" : "321cede6c89c6ff28bff48f32ece2886bfb3e39f",
      "LastModified" : "2016-10-14T10:06:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#use pkg-config to find various modues\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeModules/FindInventor.cmake" : {
      "ObjectId" : "0c1fdfdfa3c1fc19ed9be1d442a7b5e5c2351a6a",
      "LastModified" : "2016-10-14T10:06:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Find Open Inventor\n\n#\n\n# This module defines:\n\n#  INVENTOR_FOUND, if false, do not try to link against Inventor.\n\n#  INVENTOR_INCLUDE_DIR, where to find headers.\n\n#  INVENTOR_LIBRARY, the library to link against.\n\n#  INVENTOR_LIBRARY_DEBUG, the debug library to link against.\n\n#  INVENTOR_SOWIN_LIBRARY, the SoWin library - window binding library for Inventor\n\n#  INVENTOR_SOWIN_LIBRARY, the SoWin debug library\n\n#  INVENTOR_SOXT_LIBRARY, the SoXt library - window binding library for Inventor\n\n#  INVENTOR_SOXT_LIBRARY, the SoXt debug library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#  Inventor\n\n#\n\n#  notes:\n\n#  - Coin is honored over SGI Inventor\n\n#  - Coin is detected by coin-config script, COINDIR environment variable,\n\n#    and finally standard system locations are searched\n\n#  - SGI Inventor is searched at standard system locations only\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# coin-config tells much of Coin instalation (if present)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# try to find Inventor includes (priority paths)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# try to find Inventor includes (regular paths)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# default Inventor lib search paths\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# try to find Coin release lib (priority paths)\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# try to find Coin release lib (regular paths)\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# try to find SGI Inventor lib\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# try to find Coin debug lib (priority paths)\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# try to find Coin debug lib (regular paths)\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# set release to debug if only debug found\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# set debug to release (if only release found)\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# INVENTOR_LIBRARY\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# set INVENTOR_FOUND appropriately\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\n\n#  SoWin\n\n#\n\n# notes: SoWin is searched by COINDIR environment variable\n\n#        (as expected to be located at Windows platform)\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# try to find SoWin lib (priority paths)\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# try to find SoWin lib (regular paths)\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# try to find SoWin debug lib (priority paths)\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# try to find SoWin debug lib (regular paths)\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# SoWin debug library defaults to non-debug lib\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#\n\n#  SoXt\n\n#\n\n#  notes:\n\n#  - SoXt is detected by soxt-config script (as expected by\n\n#    Coin's SoXt on Linux/Unix) and on standard system locations\n\n#  - SGI's InventorXt support is missing now\n\n#\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# soxt-config tells much of SoXt instalation (if present)\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# try to find SoXt lib (priority paths)\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# try to find SoXt lib (regular paths)\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# try to find SoXt debug lib (priority paths)\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# try to find SoXt debug lib (regular paths)\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# SoXt debug library defaults to non-debug lib\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 28
    },
    "CMakeModules/FindJasper.cmake" : {
      "ObjectId" : "4b1a2dd38c9382593c23f9119385afe3259d31aa",
      "LastModified" : "2016-10-14T10:06:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate gdal\n\n# This module defines\n\n# JASPER_LIBRARY\n\n# JASPER_FOUND, if false, do not try to link to gdal \n\n# JASPER_INCLUDE_DIR, where to find the headers\n\n#\n\n# $JASPER_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$JASPER_DIR\n\n#\n\n# Created by Robert Osfield. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# prefer FindJasper from cmake distribution\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 29,
        "CharPositionInLine" : 16
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 30,
        "CharPositionInLine" : 23
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 31,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 5
    },
    "CMakeModules/FindLIBLAS.cmake" : {
      "ObjectId" : "1c9a7ee01792d763c3f88252fcb5fc7a4cc4beff",
      "LastModified" : "2018-10-29T08:14:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---\n\n# File: FindLIBLAS.cmake\n\n#\n\n# Find the native LIBLAS includes and library\n\n#\n\n#  LIBLAS_INCLUDE_DIRS - where to find liblas's includes.\n\n#  LIBLAS_LIBRARIES    - List of libraries when using liblas.\n\n#  LIBLAS_FOUND        - True if liblas found.\n\n#---\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the include dir:\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Macro for setting libraries:\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# used by LIBLAS\n",
        "Line" : 100,
        "CharPositionInLine" : 24
      },
      "CommentCount" : 4
    },
    "CMakeModules/FindLibVNCServer.cmake" : {
      "ObjectId" : "563e25e2120488b8abf0372d7e7934e8c22241c1",
      "LastModified" : "2016-10-14T10:06:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate libvncserver\n\n# This module defines\n\n# LIBVNCSERVER_LIBRARY\n\n# LIBVNCSERVER_FOUND, if false, do not try to link to libvncserver \n\n# LIBVNCSERVER_INCLUDE_DIR, where to find the headers\n\n#\n\n# $LIBVNCSERVER_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$LIBVNCSERVER_DIR\n\n# used in building libvncserver.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fink\n",
        "Line" : 18,
        "CharPositionInLine" : 16
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 19,
        "CharPositionInLine" : 23
      },
      "3" : {
        "Text" : "# Blastwave\n",
        "Line" : 20,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 4
    },
    "CMakeModules/FindLua52.cmake" : {
      "ObjectId" : "3ec17c65c7e932c3118591de28320cbf7fbf5595",
      "LastModified" : "2016-10-14T10:06:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Lua library\n\n# This module defines\n\n#  LUA51_FOUND, if false, do not try to link to Lua\n\n#  LUA_LIBRARIES\n\n#  LUA_INCLUDE_DIR, where to find lua.h\n\n#  LUA_VERSION_STRING, the version of Lua found (since CMake 2.8.8)\n\n#\n\n# Note that the expected include convention is\n\n#  #include \"lua.h\"\n\n# and not\n\n#  #include <lua/lua.h>\n\n# This is because, the lua location is not standardized and may exist\n\n# in locations other than lua/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 35,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 36,
        "CharPositionInLine" : 13
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 37,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# include the math library for Unix\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# For Windows and Mac, don't need to explicitly include the math library\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LUA_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "CMakeModules/FindNVTT.cmake" : {
      "ObjectId" : "d0e7414acbd20bd462e358e7cbc3b958d1862125",
      "LastModified" : "2018-10-29T08:14:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate nvidia-texture-tools\n\n# This module defines\n\n# NVTT_LIBRARY\n\n# NVTT_FOUND, if false, do not try to link to nvtt\n\n# NVTT_INCLUDE_DIR, where to find the headers\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# NVTT\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NVIMAGE\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# NVMATH\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# NVCORE\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# NVTHREAD\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# SQUISH\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# BC6H\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# BC7\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "CMakeModules/FindOSG.cmake" : {
      "ObjectId" : "5d8f783c0f3aa74f02860fe351df0bc50d23e80b",
      "LastModified" : "2016-10-14T10:06:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate gdal\n\n# This module defines\n\n# OSG_LIBRARY\n\n# OSG_FOUND, if false, do not try to link to gdal\n\n# OSG_INCLUDE_DIR, where to find the headers\n\n#\n\n# $OSG_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$OSG_DIR\n\n#\n\n# Created by Robert Osfield.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeModules/FindOpenCascade.cmake" : {
      "ObjectId" : "13dd33966229a1c9c88b6d4925f4e608e3dafe0d",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# LocateOPENCASCADE\n\n# This module defines\n\n# OPENCASCADE_LIBRARY\n\n# OPENCASCADE_FOUND, if false, do not try to link to OPENCASCADE\n\n# OPENCASCADE_INCLUDE_DIR, where to find the headers\n\n#\n\n# $OPENCASCADE_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$OPENCASCADE_DIR\n\n# used in building OPENCASCADE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fink\n",
        "Line" : 19,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 20,
        "CharPositionInLine" : 15
      },
      "3" : {
        "Text" : "# Blastwave\n",
        "Line" : 21,
        "CharPositionInLine" : 13
      },
      "4" : {
        "Text" : "# set type of OCCT libraries\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "CMakeModules/FindOpenEXR.cmake" : {
      "ObjectId" : "233be972b90be50ef8f3a5311c04f9e17eb0b256",
      "LastModified" : "2018-10-29T08:14:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate OpenEXR\n\n# This module defines\n\n# OPENEXR_LIBRARY\n\n# OPENEXR_FOUND, if false, do not try to link to OpenEXR \n\n# OPENEXR_INCLUDE_DIR, where to find the headers\n\n#\n\n# $OPENEXR_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$OPENEXR_DIR\n\n#\n\n# Created by Robert Osfield. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fink\n",
        "Line" : 20,
        "CharPositionInLine" : 16
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 21,
        "CharPositionInLine" : 23
      },
      "3" : {
        "Text" : "# Blastwave\n",
        "Line" : 22,
        "CharPositionInLine" : 21
      },
      "4" : {
        "Text" : "# Macro to find exr libraries (deduplicating search paths)\n\n# example: OPENEXR_FIND_VAR(OPENEXR_IlmImf_LIBRARY IlmImf)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Macro to find exr libraries (and debug versions)\n\n# example: OPENEXR_FIND(IlmImf)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "CMakeModules/FindOpenThreads.cmake" : {
      "ObjectId" : "8a19ea8863be755b027d9e3a5db088459c6e4b06",
      "LastModified" : "2016-10-14T10:06:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# OpenThreads is a C++ based threading library. Its largest userbase \n\n# seems to OpenSceneGraph so you might notice I accept OSGDIR as an\n\n# environment path.\n\n# I consider this part of the Findosg* suite used to find OpenSceneGraph \n\n# components.\n\n# Each component is separate and you must opt in to each module.\n\n# \n\n# Locate OpenThreads\n\n# This module defines\n\n# OPENTHREADS_LIBRARY\n\n# OPENTHREADS_FOUND, if false, do not try to link to OpenThreads\n\n# OPENTHREADS_INCLUDE_DIR, where to find the headers\n\n#\n\n# $OPENTHREADS_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$OPENTHREADS_DIR\n\n# used in building osg.\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# prefer FindOpenThreads from cmake distribution\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Header files are presumed to be included like\n\n# #include <OpenThreads/Thread>\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# To make it easier for one-step automated configuration/builds,\n\n# we leverage environmental paths. This is preferable \n\n# to the -DVAR=value switches because it insulates the \n\n# users from changes we may make in this script.\n\n# It also offers a little more flexibility than setting\n\n# the CMAKE_*_PATH since we can target specific components.\n\n# However, the default CMake behavior will search system paths\n\n# before anything else. This is problematic in the cases\n\n# where you have an older (stable) version installed, but\n\n# are trying to build a newer version.\n\n# CMake doesn't offer a nice way to globally control this behavior\n\n# so we have to do a nasty \"double FIND_\" in this module.\n\n# The first FIND disables the CMAKE_ search paths and only checks\n\n# the environmental paths.\n\n# If nothing is found, then the second find will search the\n\n# standard install paths.\n\n# Explicit -DVAR=value arguments should still be able to override everything.\n\n# Note: We have added an additional check for ${CMAKE_PREFIX_PATH}.\n\n# This is not an official CMake variable, but one we are proposing be\n\n# added to CMake. Be warned that this may go away or the variable name\n\n# may change.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Unofficial: We are proposing this.\n",
        "Line" : 69,
        "CharPositionInLine" : 31
      },
      "5" : {
        "Text" : "# Fink\n",
        "Line" : 79,
        "CharPositionInLine" : 16
      },
      "6" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 80,
        "CharPositionInLine" : 23
      },
      "7" : {
        "Text" : "# Blastwave\n",
        "Line" : 81,
        "CharPositionInLine" : 21
      },
      "8" : {
        "Text" : "# Unofficial: We are proposing this.\n",
        "Line" : 107,
        "CharPositionInLine" : 29
      },
      "9" : {
        "Text" : "# Unofficial: We are proposing this.\n",
        "Line" : 154,
        "CharPositionInLine" : 31
      },
      "10" : {
        "Text" : "#MESSAGE(\"-- Warning Debug OpenThreads not found, using: ${OPENTHREADS_LIBRARY}\")\n\n#SET(OPENTHREADS_LIBRARY_DEBUG \"${OPENTHREADS_LIBRARY}\")\n",
        "Line" : 181,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# MESSAGE(\"-- Found OpenThreads: \"${OPENTHREADS_LIBRARY})\n",
        "Line" : 190,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "CMakeModules/FindOpenVRML.cmake" : {
      "ObjectId" : "e40e8f85175f5f60133346a941e89f3e084de4f1",
      "LastModified" : "2016-10-14T10:06:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate openvml library\n\n# This module defines\n\n# OPENVRML_LIBRARY\n\n# OPENVRML_FOUND, if false, do not try to link to vrml \n\n# OPENVRML_INCLUDE_DIR, where to find the headers\n\n#\n\n# $OPENVRML_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$OPENVRML_DIR\n\n#\n\n# Created by Robert Osfield. \n\n# Modified for the debug library by Jean-S�bastien Guay.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fink\n",
        "Line" : 20,
        "CharPositionInLine" : 16
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 21,
        "CharPositionInLine" : 23
      },
      "3" : {
        "Text" : "# Blastwave\n",
        "Line" : 22,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 4
    },
    "CMakeModules/FindPerformer.cmake" : {
      "ObjectId" : "79a69e6406748872fc45d61393668183885191d0",
      "LastModified" : "2016-10-14T10:06:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Performer\n\n# This module defines\n\n# PERFORMER_LIBRARY\n\n# PERFORMER_FOUND, if false, do not try to link to gdal \n\n# PERFORMER_INCLUDE_DIR, where to find the headers\n\n#\n\n# $PERFORMER_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$PERFORMER_DIR\n\n#\n\n# Created by Robert Osfield. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fink\n",
        "Line" : 21,
        "CharPositionInLine" : 16
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 22,
        "CharPositionInLine" : 23
      },
      "3" : {
        "Text" : "# Blastwave\n",
        "Line" : 23,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 4
    },
    "CMakeModules/FindPoppler-glib.cmake" : {
      "ObjectId" : "d89a186f28cca073cb156eba5bc31ecc5ae74272",
      "LastModified" : "2016-10-14T10:06:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#use pkg-config to find various modues\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Do step by step checking,\n",
        "Line" : 17,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "#    IF (POPPLER_FOUND AND (NOT POPPLER_LIBRARIES OR NOT POPPLER_INCLUDE_DIRS) )\n\n#        SET(POPPLER_FOUND FALSE)\n\n#    ENDIF()\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMakeModules/FindQTKit.cmake" : {
      "ObjectId" : "238c6617566cf36c9d27c56d252dea3edcc8aa0f",
      "LastModified" : "2016-10-14T10:06:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Apple QTKit (next-generation QuickTime)\n\n# This module defines\n\n# QTKIT_LIBRARY\n\n# QTKIT_FOUND, if false, do not try to link to gdal \n\n# QTKIT_INCLUDE_DIR, where to find the headers\n\n#\n\n# $QTKIT_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$QTKIT_DIR\n\n#\n\n# Created by Eric Wing. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# QTKit on OS X looks different than QTKit for Windows,\n\n# so I am going to case the two.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Technically QTKit is 64-bit capable, but the QTKit plug-in currently uses\n\n# a few 32-bit only APIs to bridge QTKit and Core Video.\n\n# As such, the plugin won't compile for 64-bit until Apple fixes this hole \n\n# in their API.\n\n# For simplicitly, I pretend QTKit is only 32-bit, but if/when Apple fixes\n\n# this, we need an OS version check.\n\n# Snow Leopard still lacks a 64-bit path for this.\n\n#First check to see if we are running with a native 64-bit compiler (10.6 default) and implicit arch\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#Otherwise check to see if 64-bit is explicitly called for.\n",
        "Line" : 42,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "CMakeModules/FindQuartzCore.cmake" : {
      "ObjectId" : "cb1c353031110e0d8aa170324bc04a1d24d0a0c4",
      "LastModified" : "2016-10-14T10:06:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Apple QuartzCore\n\n# This module defines\n\n# QUARTZCORE_LIBRARY\n\n# QUARTZCORE_FOUND, if false, do not try to link to QUARTZCORE \n\n# QUARTZCORE_INCLUDE_DIR, where to find the headers\n\n#\n\n# $QUARTZCORE_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$QUARTZCORE_DIR\n\n#\n\n# Created by Stephan Maximilian Huber. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeModules/FindQuickTime.cmake" : {
      "ObjectId" : "a9ea895f035c723d17dfdc5f62e04f0498af8407",
      "LastModified" : "2016-10-14T10:06:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate QuickTime\n\n# This module defines\n\n# QUICKTIME_LIBRARY\n\n# QUICKTIME_FOUND, if false, do not try to link to gdal\n\n# QUICKTIME_INCLUDE_DIR, where to find the headers\n\n#\n\n# $QUICKTIME_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$QUICKTIME_DIR\n\n#\n\n# Created by Eric Wing.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# QuickTime on OS X looks different than QuickTime for Windows,\n\n# so I am going to case the two.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Unofficial: We are proposing this.\n",
        "Line" : 26,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "# Unofficial: We are proposing this.\n",
        "Line" : 38,
        "CharPositionInLine" : 31
      },
      "4" : {
        "Text" : "#Quicktime is not supported under 64bit OSX build so we need to detect it and disable it.\n\n#First check to see if we are running with a native 64-bit compiler (10.6 default) and implicit arch\n",
        "Line" : 55,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Quicktime officially deprecated starting 10.7\n",
        "Line" : 61,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "#Otherwise check to see if 64-bit is explicitly called for.\n",
        "Line" : 65,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 7
    },
    "CMakeModules/FindRSVG.cmake" : {
      "ObjectId" : "8d219ff21d7bb0e0eb5a812c08d6465863834aa8",
      "LastModified" : "2016-10-14T10:06:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#use pkg-config to find various modues\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Version 2.35 introduces the rsvg_cleanup function which is used\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "CMakeModules/FindSDL2.cmake" : {
      "ObjectId" : "91724d6639178547778bd4f3b74cc39dfe5443e5",
      "LastModified" : "2016-10-14T10:06:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Locate SDL library\n\n# This module defines\n\n#  SDL2_LIBRARY, the name of the library to link against\n\n#  SDL2_FOUND, if false, do not try to link to SDL\n\n#  SDL2_INCLUDE_DIR, where to find SDL.h\n\n#  SDL2_VERSION_STRING, human-readable string containing the version of SDL\n\n#\n\n# This module responds to the flag:\n\n#  SDL2_BUILDING_LIBRARY\n\n#    If this is defined, then no SDL2_main will be linked in because\n\n#    only applications need main().\n\n#    Otherwise, it is assumed you are building an application and this\n\n#    module will attempt to locate and set the proper link flags\n\n#    as part of the returned SDL2_LIBRARY variable.\n\n#\n\n# Don't forget to include SDLmain.h and SDLmain.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDLmain which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL library\n\n# (SDL.dll, libsdl.so, SDL.framework, etc).\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDLDIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDLDIR\n\n# used in building SDL.\n\n# l.e.galup  9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL guidelines.\n\n# Added a search for SDLmain which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL convention\n\n# is #include \"SDL.h\", not <SDL/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL/ (see FreeBSD).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n# Copyright 2012 Benjamin Eikel\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# SDL-1.1 is the name used by FreeBSD ports...\n\n# don't confuse it for the version number.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDLmain. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDLmain for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# SDL may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# MinGW needs an additional library, mwindows\n\n# It's total link flags should look like -lmingw32 -lSDLmain -lSDL -lmwindows\n\n# (Actually on second look, I think it only needs one of the m* libraries.)\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# For SDLmain\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# For OS X, SDL uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 130,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# For MinGW library\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 152,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 154,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "CMakeModules/FindV8.cmake" : {
      "ObjectId" : "63d2a57a4d4f7d01f6bed6fbfa3a23f9e2159c1e",
      "LastModified" : "2016-10-14T10:06:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate V8\n\n# This module defines\n\n# V8_LIBRARY\n\n# V8_FOUND, if false, do not try to link to gdal\n\n# V8_INCLUDE_DIR, where to find the headers\n\n#\n\n# $V8_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$V8_DIR\n\n#\n\n# Created by Robert Osfield (based on FindFLTK.cmake)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fink\n",
        "Line" : 19,
        "CharPositionInLine" : 16
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 20,
        "CharPositionInLine" : 23
      },
      "3" : {
        "Text" : "# Blastwave\n",
        "Line" : 21,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 4
    },
    "CMakeModules/FindXine.cmake" : {
      "ObjectId" : "04e1b6a58af5f4af592f5c86a63aff9d68d216b7",
      "LastModified" : "2016-10-14T10:06:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate gdal\n\n# This module defines\n\n# XINE_LIBRARY\n\n# XINE_FOUND, if false, do not try to link to gdal \n\n# XINE_INCLUDE_DIR, where to find the headers\n\n#\n\n# $XINE_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$XINE_DIR\n\n#\n\n# Created by Robert Osfield. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fink\n",
        "Line" : 19,
        "CharPositionInLine" : 16
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 20,
        "CharPositionInLine" : 23
      },
      "3" : {
        "Text" : "# Blastwave\n",
        "Line" : 21,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 4
    },
    "CMakeModules/FindZeroConf.cmake" : {
      "ObjectId" : "36b858e303d1554cfa5be2f7ccb1282ca24cf6e3",
      "LastModified" : "2016-10-14T10:06:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate ZeroConf / Bonjour\n\n# This module defines\n\n# ZEROCONF_LIBRARY\n\n# ZEROCONF_FOUND, if false, do not try to link to gdal \n\n# ZEROCONF_INCLUDE_DIR, where to find the headers\n\n#\n\n# $ZEROCONF_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$ZEROCONF_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Created by Stephan Maximilian Huber \n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# bonjour is part of the system on os x / ios\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# find the Bonjour SDK\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Unofficial: We are proposing this.\n",
        "Line" : 26,
        "CharPositionInLine" : 33
      },
      "5" : {
        "Text" : "# Unofficial: We are proposing this.\n",
        "Line" : 33,
        "CharPositionInLine" : 33
      },
      "6" : {
        "Text" : "# TODO find AVAHI on linux\n",
        "Line" : 45,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 7
    },
    "CMakeModules/Findilmbase.cmake" : {
      "ObjectId" : "4b076c7c94b0a78f38ac3dd8b3ec23839ba25c73",
      "LastModified" : "2018-10-29T08:14:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate ILMBASE\n\n# This module defines\n\n# ILMBASE_LIBRARY\n\n# ILMBASE_FOUND, if false, do not try to link to ILMBASE \n\n# ILMBASE_INCLUDE_DIR, where to find the headers\n\n#\n\n# $ILMBASE_DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$ILMBASE_DIR\n\n#\n\n# Created by Robert Osfield. \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fink\n",
        "Line" : 20,
        "CharPositionInLine" : 16
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 21,
        "CharPositionInLine" : 23
      },
      "3" : {
        "Text" : "# Blastwave\n",
        "Line" : 22,
        "CharPositionInLine" : 21
      },
      "4" : {
        "Text" : "# Macro to find ilmbase libraries\n\n# example: ILMBASE_FIND_VAR(OPENEXR_IlmThread_LIBRARY IlmThread)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Macro to find exr libraries (and debug versions)\n\n# example: ILMBASE_FIND(OPENEXR_IlmThread_LIBRARY IlmThread)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "CMakeModules/ListHandle.cmake" : {
      "ObjectId" : "bb725addc079ffb6b1cc433da36a96e052ca24de",
      "LastModified" : "2018-10-29T08:14:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#miscellaneous macros\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################### macros from http://www.cmake.org/Wiki/CMakeMacroListOperations\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "######### LIST_CONTAINS usage\n\n#SET(MYLIST hello world foo bar)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#LIST_CONTAINS(contains foo ${MYLIST})\n\n#IF (contains)\n\n#  MESSAGE(\"MYLIST contains foo\")\n\n#ENDIF (contains)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#LIST_CONTAINS(contains baz ${MYLIST})\n\n#IF (NOT contains)\n\n#  MESSAGE(\"MYLIST does not contain baz\")\n\n#ENDIF (NOT contains)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "############################################################\n\n################### macros from http://www.cmake.org/Wiki/CMakeMacroParseArguments\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#MESSAGE(\"!!!! ${prefix} args-->${arg_names}<-- opt-->${option_names}<--\")\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#debug#MESSAGE(\"---->${arg}<------\")\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#############################################################\n\n#MACRO(SHOW_USAGE_OF_PARSE_ARGUMENTS)\n\n#  PARSE_ARGUMENTS(PLUGIN\n\n#    \"EXPORTS;AUTOLOAD_SCRIPTS;LINK_LIBRARIES;DEPENDS\"\n\n#    \"AUTO_INSTALL;NO_MODULE\"\n\n#    ${ARGN}\n\n#    )\n\n#  CAR(PLUGIN_NAME ${PLUGIN_DEFAULT_ARGS})\n\n#  CDR(PLUGIN_SOURCES ${PLUGIN_DEFAULT_ARGS})\n\n#\n\n#  MESSAGE(\"*** Arguments for ${PLUGIN_NAME}\")\n\n#  MESSAGE(\"Sources: ${PLUGIN_SOURCES}\")\n\n#  MESSAGE(\"Exports: ${PLUGIN_EXPORTS}\")\n\n#  MESSAGE(\"Autoload scripts: ${PLUGIN_AUTOLOAD_SCRIPTS}\")\n\n#  MESSAGE(\"Link libraries: ${PLUGIN_LINK_LIBRARIES}\")\n\n#  MESSAGE(\"Depends: ${PLUGIN_DEPENDS}\")\n\n#  IF (PLUGIN_AUTO_INSTALL)\n\n#    MESSAGE(\"Auto install\")\n\n#  ENDIF (PLUGIN_AUTO_INSTALL)\n\n#  IF (PLUGIN_NO_MODULE)\n\n#    MESSAGE(\"No module\")\n\n#  ENDIF (PLUGIN_NO_MODULE)\n\n#ENDMACRO(SHOW_USAGE_OF_PARSE_ARGUMENTS)\n\n#examples\n\n#SHOW_USAGE_OF_PARSE_ARGUMENTS(MyAppCore NO_MODULE CoreSource1.cxx CoreSource2.cxx EXPORTS RequiredObject1 RequredObject2 AUTOLOAD_SCRIPTS startup.py initialize.py)\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#SHOW_USAGE_OF_PARSE_ARGUMENTS(MyAppDefaultComponents\n\n#  Component1.cxx Component2.cxx\n\n#  EXPORTS Component1 Component2\n\n#  DEPENDS MyAppCore\n\n#  AUTO_INSTALL\n\n#  )\n\n########################################################\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "CMakeModules/ModuleInstall.cmake" : {
      "ObjectId" : "5f66de799b11b158fcc3be9d60b668cba64b3920",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# INSTALL and SOURCE_GROUP commands for OSG/OT/Producer Modules\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Required Vars:\n\n# ${LIB_NAME}\n\n# ${TARGET_H}\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# These two libraries are special cases because they will always be included\n\n# by the config-file.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# MESSAGE(\"${OSG_COMPILE_FRAMEWORKS_INSTALL_NAME_DIR}\")\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Install pkgconfig file for this component\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Skip OpenThreads because that's handled separately\n",
        "Line" : 98,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 6
    },
    "CMakeModules/OsgAndroidMacroUtils.cmake" : {
      "ObjectId" : "50c22e0f1f5bea1a80c16ea0ceecd2291e2b0c39",
      "LastModified" : "2018-10-29T08:14:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#foreach(arg ${TARGET_LIBRARIES})\n\n#    set(MODULE_LIBS \"${MODULE_LIBS} -l${arg}\")\n\n#endforeach(arg ${TARGET_LIBRARIES})\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#We only include source files, not header files, this removes anoying warnings\n",
        "Line" : 10,
        "CharPositionInLine" : 12
      },
      "2" : {
        "Text" : "#SET(MODULE_INCLUDES \"${CMAKE_SOURCE_DIR}/include include\") \n",
        "Line" : 15,
        "CharPositionInLine" : 7
      },
      "3" : {
        "Text" : "#TODO: determine if GLES2 or GLES\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#${MODULE_LIBS}\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "################################################\n\n#JPEG\n\n################################################\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#set(ENV{AND_OSG_LIB_NAMES} \"$ENV{AND_OSG_LIB_NAMES} libjpeg\")\n\n#set(ENV{AND_OSG_LIB_PATHS} \"$ENV{AND_OSG_LIB_PATHS}include ${JPEG_INCLUDE_DIR}/Android.mk \\n\")\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "################################################\n\n#PNG\n\n################################################\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#set(ENV{AND_OSG_LIB_NAMES} \"$ENV{AND_OSG_LIB_NAMES} libpng\")\n\n#set(ENV{AND_OSG_LIB_PATHS} \"$ENV{AND_OSG_LIB_PATHS}include ${PNG_INCLUDE_DIR}/Android.mk \\n\")\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "################################################\n\n#GIF\n\n################################################\n",
        "Line" : 96,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#set(ENV{AND_OSG_LIB_NAMES} \"$ENV{AND_OSG_LIB_NAMES} libgif\")\n\n#set(ENV{AND_OSG_LIB_PATHS} \"$ENV{AND_OSG_LIB_PATHS}include ${GIFLIB_INCLUDE_DIR}/Android.mk \\n\")\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "################################################\n\n#TIF\n\n################################################\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#set(ENV{AND_OSG_LIB_NAMES} \"$ENV{AND_OSG_LIB_NAMES} libtiff\")\n\n#set(ENV{AND_OSG_LIB_PATHS} \"$ENV{AND_OSG_LIB_PATHS}include ${TIFF_INCLUDE_DIR}/Android.mk \\n\")\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "################################################\n\n#ZLIB\n\n################################################\n\n#FIND_PATH(ZLIB_INCLUDE_DIR Android.mk\n\n#    ${CMAKE_SOURCE_DIR}/3rdparty/zlib\n\n#)\n\n#set(ENV{AND_OSG_LIB_NAMES} \"$ENV{AND_OSG_LIB_NAMES} zlib\")\n\n#set(ENV{AND_OSG_LIB_PATHS} \"$ENV{AND_OSG_LIB_PATHS}include ${ZLIB_INCLUDE_DIR}/Android.mk \\n\")\n\n#if(ZLIB_INCLUDE_DIR)\n\n#    message(STATUS \"ZLIB found ${ZLIB_INCLUDE_DIR}\" )\n\n#    set(ZLIB_FOUND \"Yes\")\n\n#    install(DIRECTORY 3rdparty/build/libjpeg/ DESTINATION ./ )\n\n#else(ZLIB_INCLUDE_DIR)\n\n#    message(STATUS \"ZLIB missing\" )\n\n#endif()\n\n################################################\n\n#CURL\n\n################################################\n",
        "Line" : 126,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#set(ENV{AND_OSG_LIB_NAMES} \"$ENV{AND_OSG_LIB_NAMES} libcurl\")\n\n#set(ENV{AND_OSG_LIB_PATHS} \"$ENV{AND_OSG_LIB_PATHS}include ${CURL_DIR}/Android.mk \\n\")\n",
        "Line" : 147,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#Both are defined in FindCurl\n",
        "Line" : 150,
        "CharPositionInLine" : 47
      },
      "16" : {
        "Text" : "################################################\n\n#FREETYPE\n\n################################################\n",
        "Line" : 158,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "#set(ENV{AND_OSG_LIB_NAMES} \"$ENV{AND_OSG_LIB_NAMES} libft2\")\n\n#set(ENV{AND_OSG_LIB_PATHS} \"$ENV{AND_OSG_LIB_PATHS}include ${FREETYPE_DIR}/Android.mk \\n\")\n",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "################################################\n\n#GDAL\n\n################################################\n",
        "Line" : 174,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 19
    },
    "CMakeModules/OsgCPack.cmake" : {
      "ObjectId" : "8fcb37680eb963564d16a77bc77c012f091c8756",
      "LastModified" : "2018-10-29T08:14:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This script sets up packaging targets for each \"COMPONENT\" as specified in INSTALL commands\n\n#\n\n# for each component a CPackConfig-<component>.cmake is generated in the build tree\n\n# and a target is added to call cpack for it (e.g. package_openscenegaph\n\n# A target for generating a package with everything that gets INSTALLED is generated (package_openscenegraph-all)\n\n# A target for making all of the abaove packages is generated (package_ALL)\n\n#\n\n# package filenames are created on the form <package>-<platform>-<arch>[-<compiler>]-<build_type>[-static].tar.gz\n\n# ...where compiler optionally set using a cmake gui (OSG_CPACK_COMPILER). This script tries to guess compiler version for msvc generators\n\n# ...build_type matches CMAKE_BUILD_TYPE for all generators but the msvc ones\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# resolve architecture. The reason i \"change\" i686 to i386 is that debian packages\n\n# require i386 so this is for the future\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set a default system name - use CMake setting (Linux|Windows|...)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#message(STATUS \"CMAKE_SYSTEM_NAME ${CMAKE_SYSTEM_NAME}\")\n\n#message(STATUS \"CMAKE_SYSTEM_PROCESSOR ${CMAKE_SYSTEM_PROCESSOR}\")\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# for msvc the SYSTEM_NAME is set win32/64 instead of \"Windows\"\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Guess the compiler (is this desired for other platforms than windows?)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# expose the compiler setting to the user\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## variables that apply to all packages\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# these goes for all platforms. Setting these stops the CPack.cmake script from generating options about other package compression formats (.z .tz, etc.)\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# for ms visual studio we use it's internally defined variable to get the configuration (debug,release, ...)\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# on un*x an empty CMAKE_BUILD_TYPE means release\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Get all defined components\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# cmake 2.6.0 don't supply the COMPONENTS property.\n\n# I set it manually to be the packages that can always be packaged\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Create a target that will be used to generate all packages defined below\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# cpack configuration for debian packages\n",
        "Line" : 87,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# set debian dependencies AND conflicts\n",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# the doc packages don't need a system-arch specification\n",
        "Line" : 168,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# This is naive and will probably need fixing eventually\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Set in and out archive filenames. Windows = zip, others = tar.gz\n",
        "Line" : 189,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Create a target that creates the current package\n\n# and rename the package to give it proper filename\n",
        "Line" : 196,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Add the exact same custom command to the all package generating target.\n\n# I can't use add_dependencies to do this because it would allow parallel building of packages so am going brute here\n",
        "Line" : 205,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Create configs and targets for a package including all components\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Create configs and targets for each component\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "CMakeModules/OsgDetermineCompiler.cmake" : {
      "ObjectId" : "7b7640bf05abfd5f10e4bb2878b792dfbf3933bf",
      "LastModified" : "2018-10-29T08:14:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - If Visual Studio is being used, this script sets the variable OSG_COMPILER\n\n# The principal reason for this is due to MSVC 8.0 SP0 vs SP1 builds.\n\n#\n\n# Variable:\n\n#   OSG_COMPILER\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Not currently used...\n\n#IF(CMAKE_COMPILER_IS_GNUCXX)\n\n#    EXEC_PROGRAM(\n\n#        ${CMAKE_CXX_COMPILER}  \n\n#        ARGS     ${CMAKE_CXX_COMPILER_ARG1} -dumpversion \n\n#        OUTPUT_VARIABLE gcc_compiler_version\n\n#    )\n\n#    #MESSAGE(\"GCC Version: ${gcc_compiler_version}\")\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# parse for exact compiler version\n",
        "Line" : 42,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "#MESSAGE(\"${vc_compiler_version}\")\n",
        "Line" : 45,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Standard vc80 is 14.00.50727.42, sp1 14.00.50727.762, sp2?\n\n# Standard vc90 is 9.0.30729.1, sp1 ?\n",
        "Line" : 53,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# parse for exact visual studio version\n\n#IF(MSVC_IDE)\n\n# string(REGEX MATCH \"Visual Studio Version [0-9]+.[0-9]+.[0-9]+.[0-9]+\" vs_version \"${OUTPUT}\")\n\n# IF(vs_version)\n\n# MESSAGE(\"${vs_version}\")\n\n# string(REGEX MATCHALL \"[0-9]+\" VS_VERSION_LIST \"${vs_version}\")\n\n# list(GET VS_VERSION_LIST 0 VS_MAJOR_VERSION)\n\n# list(GET VS_VERSION_LIST 1 VS_MINOR_VERSION)\n\n# list(GET VS_VERSION_LIST 2 VS_PATCH_VERSION)\n\n# list(GET VS_VERSION_LIST 3 VS_EXTRA_VERSION)\n\n# ENDIF(vs_version)\n\n#ENDIF(MSVC_IDE)\n",
        "Line" : 61,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 6
    },
    "CMakeModules/OsgDetermineWinVersion.cmake" : {
      "ObjectId" : "9d7a0619d191728523e617785d129eab3085513f",
      "LastModified" : "2018-10-29T08:14:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - If Windows is used, this script sets the variable WIN32_WINNT to the corresponding windows version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check for Windows 10, b/c we'll need to convert to hex 'A'.\n",
        "Line" : 10,
        "CharPositionInLine" : 12
      },
      "2" : {
        "Text" : "# Remove all remaining '.' characters.\n",
        "Line" : 15,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# Prepend each digit with a zero.\n",
        "Line" : 17,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 4
    },
    "CMakeModules/OsgMacroUtils.cmake" : {
      "ObjectId" : "838f63424f77e9bb0b94762956266d1249d9c358",
      "LastModified" : "2019-03-20T15:56:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################################################################################\n\n#  macro for linking libraries that come from Findxxxx commands, so there is a variable that contains the\n\n#  full path of the library name. in order to differentiate release and debug, this macro get the\n\n#  NAME of the variables, so the macro gets as arguments the target name and the following list of parameters\n\n#  is intended as a list of variable names each one containing  the path of the libraries to link to\n\n#  The existence of a variable name with _DEBUG appended is tested and, in case it' s value is used\n\n#  for linking to when in debug mode\n\n#  the content of this library for linking when in debugging\n\n#######################################################################################################\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# VALID_BUILDER_VERSION: used for replacing CMAKE_VERSION (available in v2.6.3 RC9) and VERSION_GREATER/VERSION_LESS (available in 2.6.2 RC4).\n\n# This can be replaced by \"IF(${CMAKE_VERSION} VERSION_LESS \"x.y.z\")\" from 2.6.4.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CMAKE_VERSION_TEST: Define whether \"IF(${CMAKE_VERSION} VERSION_LESS \"x.y.z\")\" can be used or not.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# >= 2.8.0\n",
        "Line" : 33,
        "CharPositionInLine" : 56
      },
      "4" : {
        "Text" : "#when using versioned names, the .dll name differ from .lib name, there is a problem with that:\n\n#CMake 2.4.7, at least seem to use PREFIX instead of IMPORT_PREFIX  for computing linkage info to use into projects,\n\n# so we full path name to specify linkage, this prevent automatic inferencing of dependencies, so we add explicit depemdencies\n\n#to library targets used\n",
        "Line" : 58,
        "CharPositionInLine" : 16
      },
      "5" : {
        "Text" : "#######################################################################################################\n\n#  macro for common setup of core libraries: it links OPENGL_LIBRARIES in undifferentiated mode\n\n#######################################################################################################\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#SET(ALL_GL_LIBRARIES ${OPENGL_LIBRARIES})\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#######################################################################################################\n\n#  macro for common setup of plugins, examples and applications it expect some variables to be set:\n\n#  either within the local CMakeLists or higher in hierarchy\n\n#  TARGET_NAME is the name of the folder and of the actually .exe or .so or .dll\n\n#  TARGET_TARGETNAME  is the name of the target , this get buit out of a prefix, if present and TARGET_TARGETNAME\n\n#  TARGET_SRC  are the sources of the target\n\n#  TARGET_H are the eventual headers of the target\n\n#  TARGET_LIBRARIES are the libraries to link to that are internal to the project and have d suffix for debug\n\n#  TARGET_EXTERNAL_LIBRARIES are external libraries and are not differentiated with d suffix\n\n#  TARGET_LABEL is the label IDE should show up for targets\n\n##########################################################################################################\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "######################################################################\n\n#\n\n# This set up the libraries to link to, it assumes there are two variable: one common for a group of examples or plugins\n\n# kept in the variable TARGET_COMMON_LIBRARIES and an example or plugin specific kept in TARGET_ADDED_LIBRARIES\n\n# they are combined in a single list checked for unicity\n\n# the suffix ${CMAKE_DEBUG_POSTFIX} is used for differentiating optimized and debug\n\n#\n\n# a second variable TARGET_EXTERNAL_LIBRARIES hold the list of  libraries not differentiated between debug and optimized\n\n##################################################################################\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#SET(ALL_GL_LIBRARIES ${OPENGL_LIBRARIES})\n",
        "Line" : 134,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#    FOREACH(LINKLIB ${TARGET_LIBRARIES})\n\n#            TARGET_LINK_LIBRARIES(${TARGET_TARGETNAME} optimized ${LINKLIB} debug \"${LINKLIB}${CMAKE_DEBUG_POSTFIX}\")\n\n#    ENDFOREACH(LINKLIB)\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#    FOREACH(LINKLIB ${TARGET_EXTERNAL_LIBRARIES})\n\n#            TARGET_LINK_LIBRARIES(${TARGET_TARGETNAME} ${LINKLIB})\n\n#    ENDFOREACH(LINKLIB)\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#when using full path name to specify linkage, it seems that already linked libs must be specified\n",
        "Line" : 152,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "############################################################################################\n\n# this is the common set of command for all the plugins\n\n#\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Sets the output directory property for CMake >= 2.6.0, giving an output path RELATIVE to default one\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# If CMake <= 2.8.0 (Testing CMAKE_VERSION is possible in >= 2.6.4)\n",
        "Line" : 166,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# Using the \"prefix\" hack\n",
        "Line" : 168,
        "CharPositionInLine" : 12
      },
      "17" : {
        "Text" : "# Using the output directory properties\n",
        "Line" : 174,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# Global properties (All generators but VS & Xcode)\n",
        "Line" : 176,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# Per-configuration property (VS, Xcode)\n",
        "Line" : 184,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# For each configuration (Debug, Release, MinSizeRel... and/or anything the user chooses)\n\n# Go uppercase (DEBUG, RELEASE...)\n",
        "Line" : 185,
        "CharPositionInLine" : 58
      },
      "21" : {
        "Text" : "# We use \"FILE(TO_CMAKE_PATH\", to create nice looking paths\n",
        "Line" : 188,
        "CharPositionInLine" : 12
      },
      "22" : {
        "Text" : "#######################################################################################################\n\n#  macro for common setup of libraries it expect some variables to be set:\n\n#  either within the local CMakeLists or higher in hierarchy\n\n#  LIB_NAME  is the name of the target library\n\n#  TARGET_SRC  are the sources of the target\n\n#  TARGET_H are the eventual headers of the target\n\n#  TARGET_H_NO_MODULE_INSTALL are headers that belong to target but shouldn't get installed by the ModuleInstall script\n\n#  TARGET_LIBRARIES are the libraries to link to that are internal to the project and have d suffix for debug\n\n#  TARGET_EXTERNAL_LIBRARIES are external libraries and are not differentiated with d suffix\n\n#  TARGET_LABEL is the label IDE should show up for targets\n\n##########################################################################################################\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#MESSAGE(\"in -->SETUP_PLUGIN<-- ${TARGET_NAME}-->${TARGET_SRC} <--> ${TARGET_H}<--\")\n",
        "Line" : 265,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "## we have set up the target label and targetname by taking into account global prfix (osgdb_)\n",
        "Line" : 267,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "## plugins gets put in libopenscenegraph by default\n",
        "Line" : 276,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# add cpack config variables for plugin with own package\n",
        "Line" : 280,
        "CharPositionInLine" : 6
      },
      "27" : {
        "Text" : "# Add the VisualStudio versioning info\n",
        "Line" : 300,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# here we use the command to generate the library\n",
        "Line" : 303,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# Sets the ouput to be /osgPlugin-X.X.X ; also ensures the /Debug /Release are removed\n",
        "Line" : 313,
        "CharPositionInLine" : 86
      },
      "30" : {
        "Text" : "#this is a hack... the build place is set to lib/<debug or release> by LIBARARY_OUTPUT_PATH equal to OUTPUT_LIBDIR\n\n#the .lib will be crated in ../ so going straight in lib by the IMPORT_PREFIX property\n\n#because we want dll placed in OUTPUT_BINDIR ie the bin folder sibling of lib, we can use ../../bin to go there,\n\n#it is hardcoded, we should compute OUTPUT_BINDIR position relative to OUTPUT_LIBDIR ... to be implemented\n\n#changing bin to something else breaks this hack\n\n#the dll are placed in bin/${OSG_PLUGINS}\n",
        "Line" : 318,
        "CharPositionInLine" : 16
      },
      "31" : {
        "Text" : "#in standard mode (unversioned) the .lib and .dll are placed in lib/<debug or release>/${OSG_PLUGINS}.\n\n#here the PREFIX property has been used, the same result would be accomplidhe by prepending ${OSG_PLUGINS}/ to OUTPUT_NAME target property\n",
        "Line" : 333,
        "CharPositionInLine" : 16
      },
      "32" : {
        "Text" : "#the installation path are differentiated for win32 that install in bib versus other architecture that install in ${OSG_INSTALL_LIBDIR}/${OSG_PLUGINS}\n",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#################################################################################################################\n\n# this is the macro for example and application setup\n\n###########################################################\n",
        "Line" : 371,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#MESSAGE(\"in -->SETUP_EXE<-- ${TARGET_NAME}-->${TARGET_SRC} <--> ${TARGET_H}<--\")\n",
        "Line" : 376,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# SET(MACOSX_BUNDLE_LONG_VERSION_STRING \"${OPENSCENEGRAPH_MAJOR_VERSION}.${OPENSCENEGRAPH_MINOR_VERSION}.${OPENSCENEGRAPH_PATCH_VERSION}\")\n\n# Short Version is the \"marketing version\". It is the version\n\n# the user sees in an information panel.\n",
        "Line" : 395,
        "CharPositionInLine" : 12
      },
      "36" : {
        "Text" : "# Bundle version is the version the OS looks at.\n",
        "Line" : 399,
        "CharPositionInLine" : 12
      },
      "37" : {
        "Text" : "# replace underscore by hyphen\n",
        "Line" : 402,
        "CharPositionInLine" : 12
      },
      "38" : {
        "Text" : "# SET(MACOSX_BUNDLE_ICON_FILE \"myicon.icns\")\n\n# SET(MACOSX_BUNDLE_COPYRIGHT \"\")\n\n# SET(MACOSX_BUNDLE_INFO_STRING \"Info string, localized?\")\n",
        "Line" : 405,
        "CharPositionInLine" : 12
      },
      "39" : {
        "Text" : "# Ensure the /Debug /Release are removed\n",
        "Line" : 434,
        "CharPositionInLine" : 68
      },
      "40" : {
        "Text" : "# Takes optional second argument (is_commandline_app?) in ARGV1\n",
        "Line" : 448,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Takes optional second argument (is_commandline_app?) in ARGV1\n",
        "Line" : 481,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Takes two optional arguments -- osg prefix and osg version\n",
        "Line" : 515,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#this is a hack... the build place is set to lib/<debug or release> by LIBARARY_OUTPUT_PATH equal to OUTPUT_LIBDIR\n\n#the .lib will be crated in ../ so going straight in lib by the IMPORT_PREFIX property\n\n#because we want dll placed in OUTPUT_BINDIR ie the bin folder sibling of lib, we can use ../../bin to go there,\n\n#it is hardcoded, we should compute OUTPUT_BINDIR position relative to OUTPUT_LIBDIR ... to be implemented\n\n#changing bin to something else breaks this hack\n\n#the dll are versioned by prefixing the name with osg${OPENSCENEGRAPH_SOVERSION}-\n",
        "Line" : 517,
        "CharPositionInLine" : 8
      },
      "44" : {
        "Text" : "# LIB_PREFIX: use \"osg\" by default, else whatever we've been given.\n",
        "Line" : 524,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : "# LIB_SOVERSION: use OSG's soversion by default, else whatever we've been given\n",
        "Line" : 531,
        "CharPositionInLine" : 8
      },
      "46" : {
        "Text" : "# Ensure the /Debug /Release are removed\n",
        "Line" : 538,
        "CharPositionInLine" : 59
      },
      "47" : {
        "Text" : "# If CMake < 2.8.1\n",
        "Line" : 543,
        "CharPositionInLine" : 20
      },
      "48" : {
        "Text" : "# If CMake < 2.8.1\n",
        "Line" : 564,
        "CharPositionInLine" : 20
      },
      "49" : {
        "Text" : "#     SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES PREFIX \"../../bin/osg${OPENSCENEGRAPH_SOVERSION}-\")\n\n#     SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES IMPORT_PREFIX \"../\")\n",
        "Line" : 574,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 50
    },
    "CMakeModules/UtilityMacros.cmake" : {
      "ObjectId" : "63baf17bf8c14f2473c1734b074dcf838a743361",
      "LastModified" : "2018-10-29T08:14:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---------------------------------------------------\n\n# Macro: FILTER_OUT FILTERS INPUTS OUTPUT\n\n#\n\n# Mimicks Gnu Make's $(filter-out) which removes elements \n\n# from a list that match the pattern.\n\n# Arguments:\n\n#  FILTERS - list of patterns that need to be removed\n\n#  INPUTS  - list of inputs that will be worked on\n\n#  OUTPUT  - the filtered list to be returned\n\n# \n\n# Example: \n\n#  SET(MYLIST this that and the other)\n\n#  SET(FILTS this that)\n\n#\n\n#  FILTER_OUT(\"${FILTS}\" \"${MYLIST}\" OUT)\n\n#  MESSAGE(\"OUTPUT = ${OUT}\")\n\n#\n\n# The output - \n\n#   OUTPUT = and;the;other\n\n#\n\n#---------------------------------------------------\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---------------------------------------------------\n\n# Macro: GET_HEADERS_EXTENSIONLESS DIR GLOB_PATTERN OUTPUT\n\n#\n\n#---------------------------------------------------\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#FOREACH(F ${TMP})\n\n#    MESSAGE(STATUS \"header-->${F}<--\")\n\n#ENDFOREACH(F ${TMP})\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#---------------------------------------------------\n\n# Macro: ADD_DIRS_TO_ENV_VAR _VARNAME\n\n#\n\n#---------------------------------------------------\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#SET(_CURR_ENV_PATH $ENV{PATH})\n\n#LIST(SET _CURR_ENV_PATH ${_ADD_PATH})\n\n#SET(ENV{PATH} ${_CURR_ENV_PATH})${_FILE}\n",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "#MESSAGE(\" env ${_VARNAME} --->$ENV{${_VARNAME}}<---\")\n",
        "Line" : 76,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "#---------------------------------------------------\n\n# Macro: CORRECT_PATH VAR PATH \n\n# \n\n# Corrects slashes in PATH to be cmake conformous ( / ) \n\n# and puts result in VAR \n\n#---------------------------------------------------\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#---------------------------------------------------\n\n# Macro: TARGET_LOCATIONS_SET_FILE FILE\n\n# TODO: Ok, this seems a bit ridiculuous.\n\n#---------------------------------------------------\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#---------------------------------------------------\n\n# Macro: TARGET_LOCATIONS_ACCUM TARGET_NAME\n\n# \n\n#---------------------------------------------------\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#SET(_TARGETS_LIST ${_TARGETS_LIST} \"${_FILE_LOCATION}\" CACHE INTERNAL \"lista dll\")\n\n#MESSAGE(\"adding target -->${TARGET_NAME}<-- file -->${_FILE_LOCATION}<-- to list -->${_TARGETS_LIST}<--\")\n\n#SET(ACCUM_FILE_TARGETS ${ACCUM_FILE_TARGETS} ${_FILE_LOCATION})\n",
        "Line" : 114,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "#---------------------------------------------------\n\n# Macro: TARGET_LOCATIONS_GET_LIST _VAR\n\n# \n\n#---------------------------------------------------\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#---------------------------------------------------\n\n# Macro: FIND_DEPENDENCY DEPNAME INCLUDEFILE LIBRARY SEARCHPATHLIST\n\n# \n\n#---------------------------------------------------\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#MESSAGE( \" include paths: -->${MY_PATH_INCLUDE}<--\")\n",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#MESSAGE( \" ${DEPNAME}_INCLUDE_DIR --> ${${DEPNAME}_INCLUDE_DIR}<--\")\n",
        "Line" : 157,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#MESSAGE( \" ${DEPNAME}_INCLUDE_DIR --> ${${DEPNAME}_INCLUDE_DIR}<--\")\n",
        "Line" : 163,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#MESSAGE(\"found -->${MYPATH}<-->${MYBINPATH}<--\")\n",
        "Line" : 179,
        "CharPositionInLine" : 20
      },
      "16" : {
        "Text" : "#MESSAGE(\"${DEPNAME}_BINDEP searching -->${MYLIBNAME}${CMAKE_SHARED_MODULE_SUFFIX}<--in-->${MY_PATH_BIN}<--\")\n\n#    FIND_FILE(\"${DEPNAME}_BINDEP\" \n\n#        ${MYLIBNAME}${CMAKE_SHARED_MODULE_SUFFIX}\n\n#      PATHS ${MY_PATH_BIN}\n\n#    )\n\n#    FIND_LIBRARY(\"${DEPNAME}_BINDEP\" \n\n#        NAMES ${MYLIBRARY}\n\n#      PATHS ${MY_PATH_BIN}\n\n#    )\n",
        "Line" : 186,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "#MESSAGE( \" ${DEPNAME}_LIBRARY --> ${${DEPNAME}_LIBRARY}<--\")\n",
        "Line" : 198,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#---------------------------------------------------\n\n# Macro: MACRO_MESSAGE MYTEXT\n\n#\n\n#---------------------------------------------------\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#SET(MACRO_MESSAGE_DEBUG TRUE)\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "eb58e318acfb9670847e8b22fbebf27701b1c17b",
      "LastModified" : "2018-10-29T08:14:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## This file should be placed in the root directory of your project.\n\n## Then modify the CMakeLists.txt file in the root directory of your\n\n## project to incorporate the testing dashboard.\n\n## # The following are required to uses Dart and the Cdash dashboard\n\n##   ENABLE_TESTING()\n\n##   INCLUDE(Dart)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "PlatformSpecifics/Android/android.toolchain.cmake" : {
      "ObjectId" : "fc349162fb807f6caa846bad28506fe2eeffe9ba",
      "LastModified" : "2018-10-29T08:14:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2010-2011, Ethan Rublee\n\n# Copyright (c) 2011-2014, Andrey Kamaev\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# 1.  Redistributions of source code must retain the above copyright notice,\n\n#     this list of conditions and the following disclaimer.\n\n#\n\n# 2.  Redistributions in binary form must reproduce the above copyright notice,\n\n#     this list of conditions and the following disclaimer in the documentation\n\n#     and/or other materials provided with the distribution.\n\n#\n\n# 3.  Neither the name of the copyright holder nor the names of its\n\n#     contributors may be used to endorse or promote products derived from this\n\n#     software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n#  Android CMake toolchain file, for use with the Android NDK r5-r10c\n\n#  Requires cmake 2.6.3 or newer (2.8.5 or newer is recommended).\n\n#  See home page: https://github.com/taka-no-me/android-cmake\n\n#\n\n#  Usage Linux:\n\n#   $ export ANDROID_NDK=/absolute/path/to/the/android-ndk\n\n#   $ mkdir build && cd build\n\n#   $ cmake -DCMAKE_TOOLCHAIN_FILE=path/to/the/android.toolchain.cmake ..\n\n#   $ make -j8\n\n#\n\n#  Usage Linux (using standalone toolchain):\n\n#   $ export ANDROID_STANDALONE_TOOLCHAIN=/absolute/path/to/android-toolchain\n\n#   $ mkdir build && cd build\n\n#   $ cmake -DCMAKE_TOOLCHAIN_FILE=path/to/the/android.toolchain.cmake ..\n\n#   $ make -j8\n\n#\n\n#  Usage Windows:\n\n#     You need native port of make to build your project.\n\n#     Android NDK r7 (and newer) already has make.exe on board.\n\n#     For older NDK you have to install it separately.\n\n#     For example, this one: http://gnuwin32.sourceforge.net/packages/make.htm\n\n#\n\n#   $ SET ANDROID_NDK=C:\\absolute\\path\\to\\the\\android-ndk\n\n#   $ mkdir build && cd build\n\n#   $ cmake.exe -G\"MinGW Makefiles\"\n\n#       -DCMAKE_TOOLCHAIN_FILE=path\\to\\the\\android.toolchain.cmake\n\n#       -DCMAKE_MAKE_PROGRAM=\"%ANDROID_NDK%\\prebuilt\\windows\\bin\\make.exe\" ..\n\n#   $ cmake.exe --build .\n\n#\n\n#\n\n#  Options (can be set as cmake parameters: -D<option_name>=<value>):\n\n#    ANDROID_NDK=/opt/android-ndk - path to the NDK root.\n\n#      Can be set as environment variable. Can be set only at first cmake run.\n\n#\n\n#    ANDROID_STANDALONE_TOOLCHAIN=/opt/android-toolchain - path to the\n\n#      standalone toolchain. This option is not used if full NDK is found\n\n#      (ignored if ANDROID_NDK is set).\n\n#      Can be set as environment variable. Can be set only at first cmake run.\n\n#\n\n#    ANDROID_ABI=armeabi-v7a - specifies the target Application Binary\n\n#      Interface (ABI). This option nearly matches to the APP_ABI variable\n\n#      used by ndk-build tool from Android NDK.\n\n#\n\n#      Possible targets are:\n\n#        \"armeabi\" - ARMv5TE based CPU with software floating point operations\n\n#        \"armeabi-v7a\" - ARMv7 based devices with hardware FPU instructions\n\n#            this ABI target is used by default\n\n#        \"armeabi-v7a with NEON\" - same as armeabi-v7a, but\n\n#            sets NEON as floating-point unit\n\n#        \"armeabi-v7a with VFPV3\" - same as armeabi-v7a, but\n\n#            sets VFPV3 as floating-point unit (has 32 registers instead of 16)\n\n#        \"armeabi-v6 with VFP\" - tuned for ARMv6 processors having VFP\n\n#        \"x86\" - IA-32 instruction set\n\n#        \"mips\" - MIPS32 instruction set\n\n#\n\n#      64-bit ABIs for NDK r10 and newer:\n\n#        \"arm64-v8a\" - ARMv8 AArch64 instruction set\n\n#        \"x86_64\" - Intel64 instruction set (r1)\n\n#        \"mips64\" - MIPS64 instruction set (r6)\n\n#\n\n#    ANDROID_NATIVE_API_LEVEL=android-8 - level of Android API compile for.\n\n#      Option is read-only when standalone toolchain is used.\n\n#      Note: building for \"android-L\" requires explicit configuration.\n\n#\n\n#    ANDROID_TOOLCHAIN_NAME=arm-linux-androideabi-4.9 - the name of compiler\n\n#      toolchain to be used. The list of possible values depends on the NDK\n\n#      version. For NDK r10c the possible values are:\n\n#\n\n#        * aarch64-linux-android-4.9\n\n#        * aarch64-linux-android-clang3.4\n\n#        * aarch64-linux-android-clang3.5\n\n#        * arm-linux-androideabi-4.6\n\n#        * arm-linux-androideabi-4.8\n\n#        * arm-linux-androideabi-4.9 (default)\n\n#        * arm-linux-androideabi-clang3.4\n\n#        * arm-linux-androideabi-clang3.5\n\n#        * mips64el-linux-android-4.9\n\n#        * mips64el-linux-android-clang3.4\n\n#        * mips64el-linux-android-clang3.5\n\n#        * mipsel-linux-android-4.6\n\n#        * mipsel-linux-android-4.8\n\n#        * mipsel-linux-android-4.9\n\n#        * mipsel-linux-android-clang3.4\n\n#        * mipsel-linux-android-clang3.5\n\n#        * x86-4.6\n\n#        * x86-4.8\n\n#        * x86-4.9\n\n#        * x86-clang3.4\n\n#        * x86-clang3.5\n\n#        * x86_64-4.9\n\n#        * x86_64-clang3.4\n\n#        * x86_64-clang3.5\n\n#\n\n#    ANDROID_FORCE_ARM_BUILD=OFF - set ON to generate 32-bit ARM instructions\n\n#      instead of Thumb. Is not available for \"x86\" (inapplicable) and\n\n#      \"armeabi-v6 with VFP\" (is forced to be ON) ABIs.\n\n#\n\n#    ANDROID_NO_UNDEFINED=ON - set ON to show all undefined symbols as linker\n\n#      errors even if they are not used.\n\n#\n\n#    ANDROID_SO_UNDEFINED=OFF - set ON to allow undefined symbols in shared\n\n#      libraries. Automatically turned for NDK r5x and r6x due to GLESv2\n\n#      problems.\n\n#\n\n#    LIBRARY_OUTPUT_PATH_ROOT=${CMAKE_SOURCE_DIR} - where to output binary\n\n#      files. See additional details below.\n\n#\n\n#    ANDROID_SET_OBSOLETE_VARIABLES=ON - if set, then toolchain defines some\n\n#      obsolete variables which were used by previous versions of this file for\n\n#      backward compatibility.\n\n#\n\n#    ANDROID_STL=gnustl_static - specify the runtime to use.\n\n#\n\n#      Possible values are:\n\n#        none           -> Do not configure the runtime.\n\n#        system         -> Use the default minimal system C++ runtime library.\n\n#                          Implies -fno-rtti -fno-exceptions.\n\n#                          Is not available for standalone toolchain.\n\n#        system_re      -> Use the default minimal system C++ runtime library.\n\n#                          Implies -frtti -fexceptions.\n\n#                          Is not available for standalone toolchain.\n\n#        gabi++_static  -> Use the GAbi++ runtime as a static library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        gabi++_shared  -> Use the GAbi++ runtime as a shared library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        stlport_static -> Use the STLport runtime as a static library.\n\n#                          Implies -fno-rtti -fno-exceptions for NDK before r7.\n\n#                          Implies -frtti -fno-exceptions for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        stlport_shared -> Use the STLport runtime as a shared library.\n\n#                          Implies -fno-rtti -fno-exceptions for NDK before r7.\n\n#                          Implies -frtti -fno-exceptions for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        gnustl_static  -> Use the GNU STL as a static library.\n\n#                          Implies -frtti -fexceptions.\n\n#        gnustl_shared  -> Use the GNU STL as a shared library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7b and newer.\n\n#                          Silently degrades to gnustl_static if not available.\n\n#\n\n#    ANDROID_STL_FORCE_FEATURES=ON - turn rtti and exceptions support based on\n\n#      chosen runtime. If disabled, then the user is responsible for settings\n\n#      these options.\n\n#\n\n#  What?:\n\n#    android-cmake toolchain searches for NDK/toolchain in the following order:\n\n#      ANDROID_NDK - cmake parameter\n\n#      ANDROID_NDK - environment variable\n\n#      ANDROID_STANDALONE_TOOLCHAIN - cmake parameter\n\n#      ANDROID_STANDALONE_TOOLCHAIN - environment variable\n\n#      ANDROID_NDK - default locations\n\n#      ANDROID_STANDALONE_TOOLCHAIN - default locations\n\n#\n\n#    Make sure to do the following in your scripts:\n\n#      SET( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${my_cxx_flags}\" )\n\n#      SET( CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${my_cxx_flags}\" )\n\n#    The flags will be prepopulated with critical flags, so don't loose them.\n\n#    Also be aware that toolchain also sets configuration-specific compiler\n\n#    flags and linker flags.\n\n#\n\n#    ANDROID and BUILD_ANDROID will be set to true, you may test any of these\n\n#    variables to make necessary Android-specific configuration changes.\n\n#\n\n#    Also ARMEABI or ARMEABI_V7A or X86 or MIPS or ARM64_V8A or X86_64 or MIPS64\n\n#    will be set true, mutually exclusive. NEON option will be set true\n\n#    if VFP is set to NEON.\n\n#\n\n#    LIBRARY_OUTPUT_PATH_ROOT should be set in cache to determine where Android\n\n#    libraries will be installed.\n\n#    Default is ${CMAKE_SOURCE_DIR}, and the android libs will always be\n\n#    under the ${LIBRARY_OUTPUT_PATH_ROOT}/libs/${ANDROID_NDK_ABI_NAME}\n\n#    (depending on the target ABI). This is convenient for Android packaging.\n\n#\n\n# ------------------------------------------------------------------------------\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Modified by Lasse Oorni and Yao Wei Tjong for Urho3D\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Urho3D: on Windows Cygwin-based NDK tools may fail in the linking phase with too long command line. Turn on response files to avoid this\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# subsequent toolchain loading is not really needed\n",
        "Line" : 222,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# touch toolchain variable to suppress \"unused variable\" warning\n",
        "Line" : 227,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# inherit settings in recursive loads\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# this one is important\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# this one not so much\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# rpath makes low sence for Android\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# NDK search paths\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# known ABIs\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# API level defaults\n\n# Urho3D: default to API 12\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# fight against cygwin\n",
        "Line" : 387,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# remove cygwin from PATH\n",
        "Line" : 396,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# detect current host platform\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# see if we have path to Android NDK\n",
        "Line" : 430,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# see if we have path to Android standalone toolchain\n",
        "Line" : 433,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "#try to find Android NDK in one of the the default locations\n",
        "Line" : 437,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "#try to find Android standalone toolchain in one of the the default locations\n",
        "Line" : 451,
        "CharPositionInLine" : 3
      },
      "20" : {
        "Text" : "# remember found paths\n",
        "Line" : 462,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# try to detect change\n",
        "Line" : 479,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# android NDK layout\n",
        "Line" : 503,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# try to automatically detect the layout\n",
        "Line" : 506,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# only 32-bit at the moment\n",
        "Line" : 518,
        "CharPositionInLine" : 71
      },
      "25" : {
        "Text" : "# only 32-bit at the moment\n",
        "Line" : 523,
        "CharPositionInLine" : 71
      },
      "26" : {
        "Text" : "# ANDROID_NDK_LAYOUT STREQUAL \"RELEASE\"\n",
        "Line" : 527,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# try to detect change of NDK\n",
        "Line" : 534,
        "CharPositionInLine" : 1
      },
      "28" : {
        "Text" : "# get all the details about standalone toolchain\n",
        "Line" : 548,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#message(\"machine: !${__machine}!\\narch: !${__arch}!\\nversion: !${__version}!\\ntoolchain: !${__toolchain}!\\n\")\n",
        "Line" : 615,
        "CharPositionInLine" : 3
      },
      "30" : {
        "Text" : "# get all the details about NDK\n",
        "Line" : 627,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# do not go through all toolchains if we know the name\n",
        "Line" : 636,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# we need clang to go after gcc\n",
        "Line" : 649,
        "CharPositionInLine" : 39
      },
      "33" : {
        "Text" : "# build list of available ABIs\n",
        "Line" : 667,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# choose target ABI\n",
        "Line" : 680,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# verify that target ABI is supported\n",
        "Line" : 682,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# set target ABI options\n",
        "Line" : 692,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# need always fallback to older platform\n",
        "Line" : 738,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "# really dirty hack\n\n# it is not possible to change CMAKE_SYSTEM_PROCESSOR after the first run...\n",
        "Line" : 766,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "# choose toolchain\n",
        "Line" : 779,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# choose native API level\n",
        "Line" : 828,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# adjust API level\n",
        "Line" : 832,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# validate\n",
        "Line" : 844,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# remember target ABI\n",
        "Line" : 865,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# runtime choice (STL, rtti, exceptions)\n",
        "Line" : 873,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# honor legacy ANDROID_USE_STLPORT\n",
        "Line" : 875,
        "CharPositionInLine" : 1
      },
      "46" : {
        "Text" : "# setup paths and STL for standalone toolchain\n",
        "Line" : 950,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# old location ( pre r8c )\n",
        "Line" : 959,
        "CharPositionInLine" : 3
      },
      "48" : {
        "Text" : "# always search static GNU STL to get the location of libsupc++.a\n",
        "Line" : 969,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# clang\n",
        "Line" : 1004,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# setup paths and STL for NDK\n",
        "Line" : 1028,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# do nothing\n",
        "Line" : 1034,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# before r7\n",
        "Line" : 1044,
        "CharPositionInLine" : 42
      },
      "53" : {
        "Text" : "# before r8d\n",
        "Line" : 1052,
        "CharPositionInLine" : 46
      },
      "54" : {
        "Text" : "# before r7\n",
        "Line" : 1057,
        "CharPositionInLine" : 42
      },
      "55" : {
        "Text" : "# gnustl binary for 4.7 compiler is buggy :(\n\n# TODO: look for right fix\n",
        "Line" : 1069,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# find libsupc++.a - rtti & exceptions\n",
        "Line" : 1087,
        "CharPositionInLine" : 1
      },
      "57" : {
        "Text" : "# r8b or newer\n",
        "Line" : 1089,
        "CharPositionInLine" : 137
      },
      "58" : {
        "Text" : "# r7-r8\n",
        "Line" : 1091,
        "CharPositionInLine" : 110
      },
      "59" : {
        "Text" : "# before r7\n",
        "Line" : 1093,
        "CharPositionInLine" : 36
      },
      "60" : {
        "Text" : "# case of shared STL linkage\n",
        "Line" : 1113,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# TODO: check if .so file exists before the renaming\n",
        "Line" : 1116,
        "CharPositionInLine" : 1
      },
      "62" : {
        "Text" : "# ccache support\n",
        "Line" : 1120,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# setup the cross-compiler\n",
        "Line" : 1133,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Force set compilers because standard identification works badly for us\n",
        "Line" : 1176,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# force ASM compiler (required for CMake < 2.8.5)\n",
        "Line" : 1199,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# flags and definitions\n",
        "Line" : 1207,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# try to convert path to 8.3 form\n",
        "Line" : 1213,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "# quotes can break try_compile and compiler identification\n",
        "Line" : 1228,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# NDK flags\n",
        "Line" : 1235,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# always compile ARMEABI_V6 in arm mode; otherwise there is no difference from ARMEABI\n",
        "Line" : 1252,
        "CharPositionInLine" : 2
      },
      "71" : {
        "Text" : "# good/necessary when porting desktop libraries\n",
        "Line" : 1281,
        "CharPositionInLine" : 62
      },
      "72" : {
        "Text" : "# see https://android-review.googlesource.com/#/c/47564/\n",
        "Line" : 1288,
        "CharPositionInLine" : 72
      },
      "73" : {
        "Text" : "# ABI-specific flags\n",
        "Line" : 1291,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# vfp == vfpv2\n",
        "Line" : 1302,
        "CharPositionInLine" : 91
      },
      "75" : {
        "Text" : "# STL\n",
        "Line" : 1317,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# C objects:\n",
        "Line" : 1328,
        "CharPositionInLine" : 2
      },
      "77" : {
        "Text" : "# variables controlling optional build flags\n",
        "Line" : 1346,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# before r7\n",
        "Line" : 1347,
        "CharPositionInLine" : 40
      },
      "79" : {
        "Text" : "# libGLESv2.so in NDK's prior to r7 refers to missing external symbols.\n\n# So this flag option is required for all projects using OpenGL from native.\n",
        "Line" : 1348,
        "CharPositionInLine" : 1
      },
      "80" : {
        "Text" : "# linker flags\n",
        "Line" : 1368,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# this is *required* to use the following linker flags that routes around\n\n# a CPU bug in some Cortex-A8 implementations:\n",
        "Line" : 1372,
        "CharPositionInLine" : 1
      },
      "82" : {
        "Text" : "# there is some sysroot-related problem in mips linker...\n",
        "Line" : 1379,
        "CharPositionInLine" : 2
      },
      "83" : {
        "Text" : "# after r8b\n",
        "Line" : 1400,
        "CharPositionInLine" : 48
      },
      "84" : {
        "Text" : "# version 4.6\n",
        "Line" : 1408,
        "CharPositionInLine" : 8
      },
      "85" : {
        "Text" : "# cache flags\n",
        "Line" : 1430,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Urho3D: optimise for size\n",
        "Line" : 1433,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# put flags to cache (for debug purpose only)\n",
        "Line" : 1442,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# finish flags\n",
        "Line" : 1448,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# configure rtti\n",
        "Line" : 1465,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# configure exceptios\n",
        "Line" : 1474,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# global includes and link directories\n",
        "Line" : 1485,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# avoid CMP0015 policy warning\n",
        "Line" : 1487,
        "CharPositionInLine" : 111
      },
      "93" : {
        "Text" : "# detect if need link crtbegin_so.o explicitly\n",
        "Line" : 1490,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# setup output directories\n",
        "Line" : 1527,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# Urho3D: All libraries are first generated in CMake default binary directory and only the main target library is later copied to below output path by Urho3D own build script\n",
        "Line" : 1537,
        "CharPositionInLine" : 1
      },
      "96" : {
        "Text" : "# copy shaed stl library to build directory\n",
        "Line" : 1541,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# set these global flags for cmake client scripts to change behavior\n",
        "Line" : 1553,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "# where is the target environment\n",
        "Line" : 1557,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# only search for libraries and includes in the ndk toolchain\n",
        "Line" : 1560,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# macro to find packages on the host OS\n",
        "Line" : 1566,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# macro to find programs on the host OS\n",
        "Line" : 1588,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "# export toolchain settings for the try_compile() command\n",
        "Line" : 1625,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "# force cmake to produce / instead of \\ in build commands for Ninja generator\n",
        "Line" : 1661,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "# it is a bad hack after all\n\n# CMake generates Ninja makefiles with UNIX paths only if it thinks that we are going to build with MinGW\n",
        "Line" : 1663,
        "CharPositionInLine" : 1
      },
      "105" : {
        "Text" : "# tell CMake that we are MinGW\n\n# stop recursion\n",
        "Line" : 1665,
        "CharPositionInLine" : 37
      },
      "106" : {
        "Text" : "# unset( CMAKE_COMPILER_IS_MINGW ) # can't unset because CMake does not convert back-slashes in response files without it\n",
        "Line" : 1669,
        "CharPositionInLine" : 1
      },
      "107" : {
        "Text" : "# set some obsolete variables for backward compatibility\n",
        "Line" : 1674,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "# Variables controlling behavior or set by cmake toolchain:\n\n#   ANDROID_ABI : \"armeabi-v7a\" (default), \"armeabi\", \"armeabi-v7a with NEON\", \"armeabi-v7a with VFPV3\", \"armeabi-v6 with VFP\", \"x86\", \"mips\", \"arm64-v8a\", \"x86_64\", \"mips64\"\n\n#   ANDROID_NATIVE_API_LEVEL : 3,4,5,8,9,14,15,16,17,18,19,21 (depends on NDK version)\n\n#   ANDROID_STL : gnustl_static/gnustl_shared/stlport_static/stlport_shared/gabi++_static/gabi++_shared/system_re/system/none\n\n#   ANDROID_FORBID_SYGWIN : ON/OFF\n\n#   ANDROID_NO_UNDEFINED : ON/OFF\n\n#   ANDROID_SO_UNDEFINED : OFF/ON  (default depends on NDK version)\n\n#   ANDROID_FUNCTION_LEVEL_LINKING : ON/OFF\n\n#   ANDROID_GOLD_LINKER : ON/OFF\n\n#   ANDROID_NOEXECSTACK : ON/OFF\n\n#   ANDROID_RELRO : ON/OFF\n\n#   ANDROID_FORCE_ARM_BUILD : ON/OFF\n\n#   ANDROID_STL_FORCE_FEATURES : ON/OFF\n\n#   ANDROID_SET_OBSOLETE_VARIABLES : ON/OFF\n\n# Can be set only at the first run:\n\n#   ANDROID_NDK\n\n#   ANDROID_STANDALONE_TOOLCHAIN\n\n#   ANDROID_TOOLCHAIN_NAME : the NDK name of compiler toolchain\n\n#   ANDROID_NDK_HOST_X64 : try to use x86_64 toolchain (default for x64 host systems)\n\n#   ANDROID_NDK_LAYOUT : the inner NDK structure (RELEASE, LINARO, ANDROID)\n\n#   LIBRARY_OUTPUT_PATH_ROOT : <any valid path>\n\n#   NDK_CCACHE : <path to your ccache executable>\n\n# Obsolete:\n\n#   ANDROID_API_LEVEL : superseded by ANDROID_NATIVE_API_LEVEL\n\n#   ARM_TARGET : superseded by ANDROID_ABI\n\n#   ARM_TARGETS : superseded by ANDROID_ABI (can be set only)\n\n#   ANDROID_NDK_TOOLCHAIN_ROOT : superseded by ANDROID_STANDALONE_TOOLCHAIN (can be set only)\n\n#   ANDROID_USE_STLPORT : superseded by ANDROID_STL=stlport_static\n\n#   ANDROID_LEVEL : superseded by ANDROID_NATIVE_API_LEVEL (completely removed)\n\n#\n\n# Primary read-only variables:\n\n#   ANDROID : always TRUE\n\n#   ARMEABI : TRUE for arm v6 and older devices\n\n#   ARMEABI_V6 : TRUE for arm v6\n\n#   ARMEABI_V7A : TRUE for arm v7a\n\n#   ARM64_V8A : TRUE for arm64-v8a\n\n#   NEON : TRUE if NEON unit is enabled\n\n#   VFPV3 : TRUE if VFP version 3 is enabled\n\n#   X86 : TRUE if configured for x86\n\n#   X86_64 : TRUE if configured for x86_64\n\n#   MIPS : TRUE if configured for mips\n\n#   MIPS64 : TRUE if configured for mips64\n\n#   BUILD_ANDROID : always TRUE\n\n#   BUILD_WITH_ANDROID_NDK : TRUE if NDK is used\n\n#   BUILD_WITH_STANDALONE_TOOLCHAIN : TRUE if standalone toolchain is used\n\n#   ANDROID_NDK_HOST_SYSTEM_NAME : \"windows\", \"linux-x86\" or \"darwin-x86\" depending on host platform\n\n#   ANDROID_NDK_ABI_NAME : \"armeabi\", \"armeabi-v7a\", \"x86\", \"mips\", \"arm64-v8a\", \"x86_64\", \"mips64\" depending on ANDROID_ABI\n\n#   ANDROID_NDK_RELEASE : from r5 to r10c; set only for NDK\n\n#   ANDROID_NDK_RELEASE_NUM : numeric ANDROID_NDK_RELEASE version (1000*major+minor)\n\n#   ANDROID_ARCH_NAME : \"arm\", \"x86\", \"mips\", \"arm64\", \"x86_64\", \"mips64\" depending on ANDROID_ABI\n\n#   ANDROID_SYSROOT : path to the compiler sysroot\n\n#   TOOL_OS_SUFFIX : \"\" or \".exe\" depending on host platform\n\n#   ANDROID_COMPILER_IS_CLANG : TRUE if clang compiler is used\n\n# Obsolete:\n\n#   ARMEABI_NDK_NAME : superseded by ANDROID_NDK_ABI_NAME\n\n#\n\n# Secondary (less stable) read-only variables:\n\n#   ANDROID_COMPILER_VERSION : GCC version used (not Clang version)\n\n#   ANDROID_CLANG_VERSION : version of clang compiler if clang is used\n\n#   ANDROID_CXX_FLAGS : C/C++ compiler flags required by Android platform\n\n#   ANDROID_SUPPORTED_ABIS : list of currently allowed values for ANDROID_ABI\n\n#   ANDROID_TOOLCHAIN_MACHINE_NAME : \"arm-linux-androideabi\", \"arm-eabi\" or \"i686-android-linux\"\n\n#   ANDROID_TOOLCHAIN_ROOT : path to the top level of toolchain (standalone or placed inside NDK)\n\n#   ANDROID_CLANG_TOOLCHAIN_ROOT : path to clang tools\n\n#   ANDROID_SUPPORTED_NATIVE_API_LEVELS : list of native API levels found inside NDK\n\n#   ANDROID_STL_INCLUDE_DIRS : stl include paths\n\n#   ANDROID_RTTI : if rtti is enabled by the runtime\n\n#   ANDROID_EXCEPTIONS : if exceptions are enabled by the runtime\n\n#   ANDROID_GCC_TOOLCHAIN_NAME : read-only, differs from ANDROID_TOOLCHAIN_NAME only if clang is used\n\n#   ANDROID_LIBM_PATH : path to libm.so (set to something like $(TOP)/out/target/product/<product_name>/obj/lib/libm.so) to workaround unresolved `sincos`\n\n#\n\n# Defaults:\n\n#   ANDROID_DEFAULT_NDK_API_LEVEL\n\n#   ANDROID_DEFAULT_NDK_API_LEVEL_${ARCH}\n\n#   ANDROID_NDK_SEARCH_PATHS\n\n#   ANDROID_STANDALONE_TOOLCHAIN_SEARCH_PATH\n\n#   ANDROID_SUPPORTED_ABIS_${ARCH}\n\n#   ANDROID_SUPPORTED_NDK_VERSIONS\n",
        "Line" : 1684,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 109
    },
    "applications/CMakeLists.txt" : {
      "ObjectId" : "ab491c606ab60d4c0537056afc83f53488388ede",
      "LastModified" : "2018-10-29T08:14:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# need to define this on win32 or linker cries about _declspecs\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "applications/osgarchive/CMakeLists.txt" : {
      "ObjectId" : "2ec40a1524b8dbf7474b6ba4bdcc5c0938b40390",
      "LastModified" : "2018-10-29T08:14:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "applications/osgconv/CMakeLists.txt" : {
      "ObjectId" : "4668b11e645eaaf6c2f834d39d7a64b63549fab0",
      "LastModified" : "2018-10-29T08:14:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "applications/osgfilecache/CMakeLists.txt" : {
      "ObjectId" : "4997a61f23d7eab9bfa86cc8cb723eb7c32c0d89",
      "LastModified" : "2018-10-29T08:14:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "applications/osgversion/CMakeLists.txt" : {
      "ObjectId" : "8f776ae9885fd8929ac947cd94f4c40081b12a18",
      "LastModified" : "2018-10-29T08:14:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "applications/osgviewer/CMakeLists.txt" : {
      "ObjectId" : "02ce87ce18173ca6440d33aed7b2d59d35612134",
      "LastModified" : "2018-10-29T08:14:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "applications/present3D/CMakeLists.txt" : {
      "ObjectId" : "df859d09e33875a55c2396f85418d5d9649dcfc9",
      "LastModified" : "2018-10-29T08:14:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ADD_DEFINITIONS(-DUSE_FFMPEG)\n\n# SET(TARGET_ADDED_LIBRARIES ${TARGET_ADDED_LIBRARIES} osgdb_ffmpeg)\n",
        "Line" : 88,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# to support cluster code\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "doc/Doxyfiles/doxyfile.cmake" : {
      "ObjectId" : "b59663b8d87f25d7497fc922b55a951c835eeae9",
      "LastModified" : "2018-10-29T08:14:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Doxyfile 1.5.7.1\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# Project related configuration options\n\n#---------------------------------------------------------------------------\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# Build related configuration options\n\n#---------------------------------------------------------------------------\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options related to warning and progress messages\n\n#---------------------------------------------------------------------------\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options related to the input files\n\n#---------------------------------------------------------------------------\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options related to source browsing\n\n#---------------------------------------------------------------------------\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options related to the alphabetical class index\n\n#---------------------------------------------------------------------------\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options related to the HTML output\n\n#---------------------------------------------------------------------------\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options related to the LaTeX output\n\n#---------------------------------------------------------------------------\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options related to the RTF output\n\n#---------------------------------------------------------------------------\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options related to the man page output\n\n#---------------------------------------------------------------------------\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options related to the XML output\n\n#---------------------------------------------------------------------------\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options for the AutoGen Definitions output\n\n#---------------------------------------------------------------------------\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options related to the Perl module output\n\n#---------------------------------------------------------------------------\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# Configuration options related to the preprocessor\n\n#---------------------------------------------------------------------------\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# Configuration::additions related to external references\n\n#---------------------------------------------------------------------------\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# Configuration options related to the dot tool\n\n#---------------------------------------------------------------------------\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# Configuration::additions related to the search engine\n\n#---------------------------------------------------------------------------\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "doc/Doxyfiles/openthreads.doxyfile.cmake" : {
      "ObjectId" : "d53287f4437a3979a14d8e7ef2982ed87aafa446",
      "LastModified" : "2018-10-29T08:14:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Doxyfile 1.5.7.1\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# Project related configuration options\n\n#---------------------------------------------------------------------------\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# Build related configuration options\n\n#---------------------------------------------------------------------------\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options related to warning and progress messages\n\n#---------------------------------------------------------------------------\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options related to the input files\n\n#---------------------------------------------------------------------------\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options related to source browsing\n\n#---------------------------------------------------------------------------\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options related to the alphabetical class index\n\n#---------------------------------------------------------------------------\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options related to the HTML output\n\n#---------------------------------------------------------------------------\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options related to the LaTeX output\n\n#---------------------------------------------------------------------------\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options related to the RTF output\n\n#---------------------------------------------------------------------------\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options related to the man page output\n\n#---------------------------------------------------------------------------\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options related to the XML output\n\n#---------------------------------------------------------------------------\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options for the AutoGen Definitions output\n\n#---------------------------------------------------------------------------\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options related to the Perl module output\n\n#---------------------------------------------------------------------------\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# Configuration options related to the preprocessor\n\n#---------------------------------------------------------------------------\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# Configuration::additions related to external references\n\n#---------------------------------------------------------------------------\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# Configuration options related to the dot tool\n\n#---------------------------------------------------------------------------\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# Configuration::additions related to the search engine\n\n#---------------------------------------------------------------------------\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "788e5075f5cc41ada22d5f0680debd539658da4f",
      "LastModified" : "2018-10-29T08:14:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################################\n\n# this are setting used in SETUP_EXAMPLE macro\n\n#######################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ADD_SUBDIRECTORY(osgandroidsimple)\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# ADD_SUBDIRECTORY(osgshadercompositor)\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# GL3/GL4 example\n",
        "Line" : 171,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#to add subject to find socket#ADD_SUBDIRECTORY(osgcluster)\n",
        "Line" : 240,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#needed on win32 or the linker get confused by _declspec declarations\n",
        "Line" : 243,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "examples/osg2cpp/CMakeLists.txt" : {
      "ObjectId" : "896e4580e3512052ebef46a2efc82b231035f4bc",
      "LastModified" : "2018-10-29T08:14:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgCMakeExample/CMakeLists.txt" : {
      "ObjectId" : "cd843299adde77df2936278635f4a843a67fff7a",
      "LastModified" : "2018-10-29T08:14:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/osgCMakeExampleModern/CMakeLists.txt" : {
      "ObjectId" : "2d9cbde015cc3df4930d87d1f3e2ef2e9be8ec05",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/osgSSBO/CMakeLists.txt" : {
      "ObjectId" : "d82273b23990dc46c6406d3eec3510b42587b568",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/osganalysis/CMakeLists.txt" : {
      "ObjectId" : "085dff1cf35e0ed074f8f0a0a158a4e5055c945d",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osganimate/CMakeLists.txt" : {
      "ObjectId" : "d0beaca43b0900539058b33c3be95f8a89506ac0",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osganimationeasemotion/CMakeLists.txt" : {
      "ObjectId" : "a8d657b56fe67dc56bfc2e5f73ce5f8bf66205fb",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/osganimationhardware/CMakeLists.txt" : {
      "ObjectId" : "28ee373a906f35e0dc0665f8527a6a0924d51dc6",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/osganimationmakepath/CMakeLists.txt" : {
      "ObjectId" : "159dfa55dfdfa2e36367e90a48874ee763d159ae",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/osganimationmorph/CMakeLists.txt" : {
      "ObjectId" : "9e30b61caea68b7f8db3f881aa546991c3b56ce3",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/osganimationnode/CMakeLists.txt" : {
      "ObjectId" : "f70bfec36d494337c34cab53b0312d2b8cd019c3",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/osganimationskinning/CMakeLists.txt" : {
      "ObjectId" : "0510d7c0d3d5e023214f441f756bef3320614fe8",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/osganimationsolid/CMakeLists.txt" : {
      "ObjectId" : "e4bf0ef5451b5a6133d2ba5b99348847038bdb71",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/osganimationtimeline/CMakeLists.txt" : {
      "ObjectId" : "daface860f07791d28383a0d01f612ca451dd273",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/osganimationviewer/CMakeLists.txt" : {
      "ObjectId" : "c18644a66079ecf5bdf7e1e4d1fc68b649bbfbbb",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/osgatomiccounter/CMakeLists.txt" : {
      "ObjectId" : "c08d02a739bb54fe240ef6611a1e1c2240ad1eac",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgautocapture/CMakeLists.txt" : {
      "ObjectId" : "18d580ed1cf20df63648ee760284a5d502407fe6",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgautotransform/CMakeLists.txt" : {
      "ObjectId" : "dbe4a100134bef991e7d5c8595f2a4b9ebef6cc4",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgbillboard/CMakeLists.txt" : {
      "ObjectId" : "c8ada15b7c849586a39cfb2dc29dbb3e9be50653",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgbindlesstext/CMakeLists.txt" : {
      "ObjectId" : "8dfd28a92f3dcdd2fe6de73ab8150cba05688619",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/osgblenddrawbuffers/CMakeLists.txt" : {
      "ObjectId" : "8f39db41802e96bfa415313e093ec6ddf37363b9",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgblendequation/CMakeLists.txt" : {
      "ObjectId" : "34a6e14e3ab64624d0103b15bca52790177f5bd0",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgcallback/CMakeLists.txt" : {
      "ObjectId" : "77499e9f87385adcb01a620d6faba185d2e1ec79",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgcamera/CMakeLists.txt" : {
      "ObjectId" : "507c2b22e866d25364e506d16011facaaa9a3cd2",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgcatch/CMakeLists.txt" : {
      "ObjectId" : "ec78c9ed4a5eb2821eb938ed6fa6f0ea84c44f72",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgclip/CMakeLists.txt" : {
      "ObjectId" : "f657fb111dc0635f2d3500542b3ff1edd548c64c",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgcluster/CMakeLists.txt" : {
      "ObjectId" : "5dc208732a3ab154b104d5852b2daa7b98366486",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgcompositeviewer/CMakeLists.txt" : {
      "ObjectId" : "fe25a50a009f5c040fc4b597b7d07a3fd760d56f",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgcomputeshaders/CMakeLists.txt" : {
      "ObjectId" : "b5456e846efff5f69e940c8d542efd0bf9aac566",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/osgcopy/CMakeLists.txt" : {
      "ObjectId" : "e1357cc59970692f3cbd15a98e6664f5060e5559",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgcubemap/CMakeLists.txt" : {
      "ObjectId" : "704d56d4f7c3767e759f39b910cea5a9304eda30",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgdatabaserevisions/CMakeLists.txt" : {
      "ObjectId" : "413e38109c079a12a742f1dbe9127c2e143319c3",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgdeferred/CMakeLists.txt" : {
      "ObjectId" : "cc38a23f4c2347dfc9d01173749ba42da2ae3fd2",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgdepthpartition/CMakeLists.txt" : {
      "ObjectId" : "ea0cb1bb3dea61c2d61781bd17805feab250b9ff",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgdepthpeeling/CMakeLists.txt" : {
      "ObjectId" : "d87ddd890c2177375ff78a8d3bd507fbd64791b7",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgdirectinput/CMakeLists.txt" : {
      "ObjectId" : "945bfa70b659dc57633666b0e810aa2880a0de02",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgdistortion/CMakeLists.txt" : {
      "ObjectId" : "be76799256c069fa4f66edc7d85ddcdd411995ed",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgdrawinstanced/CMakeLists.txt" : {
      "ObjectId" : "6f5c71865dd6a1d00f1d9f55cf51037ce2001e04",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgemscripten/CMakeLists.txt" : {
      "ObjectId" : "b2bc9875a5af98095c99f49be3600dcefc4d298e",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Path to OpenSceneGraph\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Specify critical OpenSceneGraph build variables.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Prevent CMake configuration error.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set special build flags:\n\n# * -O3: make compact binary, critical for web\n\n# * -s USE_SDL=2: provide SDL2\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Reference OpenSceneGraph includes and libraries.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build OpenSceneGraph if osgViewer library is missing.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build example.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Make Emscripten generate ready-to-open HTML page.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Make Emscripten preload the resource.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Copy the resource to the build directory.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Libraries must be linked in the specified order.\n\n# Otherwise you may get unsatisified linker errors.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# osgDB plugins start.\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# osgDB plugins end.\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 13
    },
    "examples/osgfadetext/CMakeLists.txt" : {
      "ObjectId" : "f82aa1497fd9cbcd93eba57f4eee1a1c0ed9375c",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgfont/CMakeLists.txt" : {
      "ObjectId" : "28172568aeefc46df1c5321e0c512686125767f1",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/osgforest/CMakeLists.txt" : {
      "ObjectId" : "9510250c413eb51b9aa8703e8ba096a283ccc8f1",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgfpdepth/CMakeLists.txt" : {
      "ObjectId" : "cf54fa5cee702cb13121d143e4b21664fa366877",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgframerenderer/CMakeLists.txt" : {
      "ObjectId" : "a2d59f05106e59be97a2cb6b0ddcfe2360f55b8f",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgfxbrowser/CMakeLists.txt" : {
      "ObjectId" : "b70541aac891d4ee777ab9e3ea8841dc20e238e0",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osggameoflife/CMakeLists.txt" : {
      "ObjectId" : "d4ea1f7195d6666eae633d85aa3213b90cf68794",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osggeometry/CMakeLists.txt" : {
      "ObjectId" : "b5a42a7b1860306349c8830c0810bb0cac27a318",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osggeometryshaders/CMakeLists.txt" : {
      "ObjectId" : "0a33915380a55c520b6bf0106ea5418f4afc85c7",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/osggpucull/CMakeLists.txt" : {
      "ObjectId" : "6cfe7a64623396c1ef2234e5a9c0d48cd85650bb",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osggpx/CMakeLists.txt" : {
      "ObjectId" : "7523603f479974b15b076c88644794d5b2d08dfc",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osggraphicscost/CMakeLists.txt" : {
      "ObjectId" : "4086ffdb3dc2e91f32bc2441b9f5aebb7ed4472f",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osghangglide/CMakeLists.txt" : {
      "ObjectId" : "76a34b50d93a77a162ba2dffa93334331e510945",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osghud/CMakeLists.txt" : {
      "ObjectId" : "b440919719977d24ee83598bf52d57490a07aa89",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgimagesequence/CMakeLists.txt" : {
      "ObjectId" : "d4763bea703cb3eddafbfbc15daf7c6179a9f1b0",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgimpostor/CMakeLists.txt" : {
      "ObjectId" : "c7b831313f6f3a402ed0c00e29f51b6490f8c216",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgintersection/CMakeLists.txt" : {
      "ObjectId" : "ef3328893d7a39d5a11f7980bdc5e05469971591",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgkdtree/CMakeLists.txt" : {
      "ObjectId" : "bc6a82ed0a714783446c844562d11c6ba0eb2de6",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgkeyboard/CMakeLists.txt" : {
      "ObjectId" : "25fbd1f2828212569496c9175e6d0f1ed3040257",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgkeyboardmouse/CMakeLists.txt" : {
      "ObjectId" : "5a4ea6991287e8938c6231972015dea508ec9271",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgkeystone/CMakeLists.txt" : {
      "ObjectId" : "dc1425c36b1c02b1d3a599d8e1864dc7b0f848c7",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osglauncher/CMakeLists.txt" : {
      "ObjectId" : "1af8829d809279e42bbf6d44509f91a8636b4050",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osglight/CMakeLists.txt" : {
      "ObjectId" : "40c296b6c4852a880c779c71476ea6d8f470fb61",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osglightpoint/CMakeLists.txt" : {
      "ObjectId" : "eee7744265230871b60924b79bd4a886545efc33",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osglogicop/CMakeLists.txt" : {
      "ObjectId" : "be2b45dc56addc70dc5d0de43a362c9a28facc95",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osglogo/CMakeLists.txt" : {
      "ObjectId" : "ac1adaaec0f5c2bbb43e447e60dae61a437e9939",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgmanipulator/CMakeLists.txt" : {
      "ObjectId" : "966b9720087850b7d96c549934c9fe84a2b3a7f5",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgmemorytest/CMakeLists.txt" : {
      "ObjectId" : "fe4600dbb389bfab902d5e96a61ca70f7dc9bbca",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgmotionblur/CMakeLists.txt" : {
      "ObjectId" : "20660e348682ac218439f6dec5ffa372ba8324c4",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgmovie/CMakeLists.txt" : {
      "ObjectId" : "ed68e7aaed5e2c3d70747d685357af3515b4cf84",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# INCLUDE_DIRECTORIES( ${OPENAL_INCLUDE_DIR} )\n\n# SET(TARGET_EXTERNAL_LIBRARIES ${OPENAL_LIBRARY} alut)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgmultiplemovies/CMakeLists.txt" : {
      "ObjectId" : "3c79f9126de900d6fb5f4ea3f3bfea16384bdcdf",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgmultiplerendertargets/CMakeLists.txt" : {
      "ObjectId" : "ede53c34d56e76c9ccae9310e80be5a429f357fb",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgmultitexture/CMakeLists.txt" : {
      "ObjectId" : "81df2b34c114f82f2ae6e685108d66b12a32e819",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgmultitexturecontrol/CMakeLists.txt" : {
      "ObjectId" : "8d346bac8837ed490db962599964fac52c6d0e7d",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgmultitouch/CMakeLists.txt" : {
      "ObjectId" : "cdf4bdb17443b414aecaf9556fbe97910436f3e6",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# On OSX, this example only compiles if using Cocoa\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgmultiviewpaging/CMakeLists.txt" : {
      "ObjectId" : "d8d1a8514f02d871bd5955e919112feac738b031",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgobjectcache/CMakeLists.txt" : {
      "ObjectId" : "1ccf8607a20decc588eba13ef9a17150d707b9a3",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgoccluder/CMakeLists.txt" : {
      "ObjectId" : "5bf1eeebf1b407a7a0daf8d600dba0f883c037b7",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgocclusionquery/CMakeLists.txt" : {
      "ObjectId" : "ebcd2d987beb7be8aa1134d367a8d0244a023105",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgoit/CMakeLists.txt" : {
      "ObjectId" : "49089945e035ce3686f601219c2890c3403d3550",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/osgoscdevice/CMakeLists.txt" : {
      "ObjectId" : "63d4a2c81c432dee2bbb77cfd631a9705c231c24",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# On OSX, this example only compiles if using Cocoa\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgoutline/CMakeLists.txt" : {
      "ObjectId" : "7ef8595b88e2ed1f9f304baecd547a838b259c0f",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgpackeddepthstencil/CMakeLists.txt" : {
      "ObjectId" : "467868f733442d1bfe7f6449f0e44d4981253d76",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgpagedlod/CMakeLists.txt" : {
      "ObjectId" : "f55ef76e61f47e7aa2db4b6064251c236586cabc",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgparametric/CMakeLists.txt" : {
      "ObjectId" : "180a09e182dea8c1fec8dce4219a1b6b8602440b",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgparticle/CMakeLists.txt" : {
      "ObjectId" : "7ba4fc029df23f7c5ccfb96f242c21d153c0e150",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgparticleeffects/CMakeLists.txt" : {
      "ObjectId" : "3b1258ce7a441f72f860facee64a3b766b1e69ad",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgparticleshader/CMakeLists.txt" : {
      "ObjectId" : "31ac461544ef4ab78cd479794a55cabd0cc1fd64",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgpdf/CMakeLists.txt" : {
      "ObjectId" : "0b2606cde35a7e9ce854748d7d7debb57e8d0568",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgphotoalbum/CMakeLists.txt" : {
      "ObjectId" : "cdf6575033284a12a214e23389202d663fc73ec7",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgpick/CMakeLists.txt" : {
      "ObjectId" : "73ed2488713b0a235222dd61c0c931672ac8c69a",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgplanets/CMakeLists.txt" : {
      "ObjectId" : "cde497c1854aa8d5ea481f70587fcf67189e72bc",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgpoints/CMakeLists.txt" : {
      "ObjectId" : "30bf3a072a6a3557fd90983376cbee96d98c38c8",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgpointsprite/CMakeLists.txt" : {
      "ObjectId" : "439a4347ce4453fec13f558e6eb1be90eaa76de8",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgposter/CMakeLists.txt" : {
      "ObjectId" : "173f64f3fd70767d50fab2ea8eadbfe3db4dd385",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/osgprecipitation/CMakeLists.txt" : {
      "ObjectId" : "2b16f1c854755cc5e1daa377d76aeef400b2aa79",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgprerender/CMakeLists.txt" : {
      "ObjectId" : "9769d0e3d365f286beb087cceabe049030f01e3a",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgprerendercubemap/CMakeLists.txt" : {
      "ObjectId" : "af3540541ffc0b792084947964b4299a7e989d14",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgpresentation/CMakeLists.txt" : {
      "ObjectId" : "9769050c98fdc1d90ce9a011a8a76d7c963f9557",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgreflect/CMakeLists.txt" : {
      "ObjectId" : "e2a6302266a4a2ee951bf24cc7733bc778e076bb",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgrobot/CMakeLists.txt" : {
      "ObjectId" : "bf7c2bce1cb46ea276fd11699f312232e14f7ea0",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgsampler/CMakeLists.txt" : {
      "ObjectId" : "126cd23098e1fe886d2acead83b05b84a5ed1e56",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/osgscalarbar/CMakeLists.txt" : {
      "ObjectId" : "30c38d94db9e961b9159f29ac6b27366c41215e0",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgscreencapture/CMakeLists.txt" : {
      "ObjectId" : "cea15ba1fb10c7e019fa7e221648ae78137026a7",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgscribe/CMakeLists.txt" : {
      "ObjectId" : "2ee88da7ff73e76c3861df01c3f3e1b4ec725dd1",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgsequence/CMakeLists.txt" : {
      "ObjectId" : "d4c5689866b4237ff7d9fcfea1490cf3f39593cc",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgshadercomposition/CMakeLists.txt" : {
      "ObjectId" : "f80525e31fff053cc8ecdca13599813740722b4d",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/osgshadergen/CMakeLists.txt" : {
      "ObjectId" : "dd45259b342ab6a465309e5292f50ee277fcb4e3",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgshadermultiviewport/CMakeLists.txt" : {
      "ObjectId" : "f357d1078f6da4a72be621f490850a477d44453d",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/osgshaderpipeline/CMakeLists.txt" : {
      "ObjectId" : "59ebbaeb4a96ab96b08e88b8d73a8d686be40dbc",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/osgshaders/CMakeLists.txt" : {
      "ObjectId" : "3e15589bcd640e59050c6aae66e1857aea550a9f",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgshaderterrain/CMakeLists.txt" : {
      "ObjectId" : "6f8fef408d7bf927f32e40be3bae1d9936f3bbfc",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgshadow/CMakeLists.txt" : {
      "ObjectId" : "174bea91a17128e474e999769ec0498d12fa9d32",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgshape/CMakeLists.txt" : {
      "ObjectId" : "409fe5c53ed0b1900431c44941327cd057efebc8",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgsharedarray/CMakeLists.txt" : {
      "ObjectId" : "6e8838922767b7540a72e79a88c4d976d382f318",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgsidebyside/CMakeLists.txt" : {
      "ObjectId" : "56c15a77eecc3fd922345602a8ccb38a4b342187",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgsimpleMDI/CMakeLists.txt" : {
      "ObjectId" : "3c14efece1a5e437c7f757f7e9b997937323a935",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgsimplegl3/CMakeLists.txt" : {
      "ObjectId" : "823502eb6583102cf70e28bf3f76ddfb43adcecf",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgsimpleshaders/CMakeLists.txt" : {
      "ObjectId" : "7b944c1562983d059a53c5a76fc48e87c9a08392",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/osgsimplifier/CMakeLists.txt" : {
      "ObjectId" : "b5bf0688dd16b49497ce649a96d0d7f005d14f6a",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgsimulation/CMakeLists.txt" : {
      "ObjectId" : "a8b293171c23019d2621809b3f62ecdc94dd8ea4",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgslice/CMakeLists.txt" : {
      "ObjectId" : "fb94ee8aeb19b692e5182334def5dd16acb068b1",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgspacewarp/CMakeLists.txt" : {
      "ObjectId" : "daf31cd28411c180fc2527493e6c487c5f662948",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgspheresegment/CMakeLists.txt" : {
      "ObjectId" : "cfed9a4affbaf16f0ec7ecec8ca51fc784a8af8c",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgspotlight/CMakeLists.txt" : {
      "ObjectId" : "f72097aa943cddc80aec94768f81a9f068ad0ee7",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgstaticviewer/CMakeLists.txt" : {
      "ObjectId" : "071ab2680efb30f55bb4327e66dade4ca34aa166",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgstereoimage/CMakeLists.txt" : {
      "ObjectId" : "d675ea39071eb7efa3812ea496cbd27f92f4dea2",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgstereomatch/CMakeLists.txt" : {
      "ObjectId" : "c17b92461635505cf8edc13becc2f8e576cd094f",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgteapot/CMakeLists.txt" : {
      "ObjectId" : "43e68aa5a3581ab282345509f42cb1a22c05c26f",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgterrain/CMakeLists.txt" : {
      "ObjectId" : "89b723654249cb01e6f4337e205230958e7a490a",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgtessellate/CMakeLists.txt" : {
      "ObjectId" : "2d409838ea000edcbf0ccef622373133158c3cdc",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgtessellationshaders/CMakeLists.txt" : {
      "ObjectId" : "4ad3c12a68cdb635063c0e29b3fbe803d9df8b4b",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/osgtext/CMakeLists.txt" : {
      "ObjectId" : "26912e9477177c5ffe7ff3e80a2dbb7e146d98f9",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgtext3D/CMakeLists.txt" : {
      "ObjectId" : "d094c7e5be991f24621344a269f4535f00ee90ff",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgtexture1D/CMakeLists.txt" : {
      "ObjectId" : "895e56aef1b3d9f1cb02d97fd777e9ee5b9be8dc",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgtexture2D/CMakeLists.txt" : {
      "ObjectId" : "6954372dff6169c985b2bcd26e96667004340601",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgtexture2DArray/CMakeLists.txt" : {
      "ObjectId" : "3573ba664a7ae19b8e4fc665b1488ece96570ee8",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgtexture3D/CMakeLists.txt" : {
      "ObjectId" : "a84252f08e824e762d7a18922c5c139b3964d084",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgtexturecompression/CMakeLists.txt" : {
      "ObjectId" : "4341318b0b3c54cdb24b8dcbf882e620b93f2714",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/osgtexturerectangle/CMakeLists.txt" : {
      "ObjectId" : "fbea0000b38822d79121324d0bbc634cba387b22",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgthirdpersonview/CMakeLists.txt" : {
      "ObjectId" : "d4ec4e154ae11ed46a63330cd941e42c149df071",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgthreadedterrain/CMakeLists.txt" : {
      "ObjectId" : "e599c57688c4f24817c6dc9bba8c0f562f24f493",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgtransferfunction/CMakeLists.txt" : {
      "ObjectId" : "bc99c2e47c16a6ffe846f4e7c72c7a441296ba4d",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgtransformfeedback/CMakeLists.txt" : {
      "ObjectId" : "46d44be280d3654625248b30f551969d098e6b21",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osguniformbuffer/CMakeLists.txt" : {
      "ObjectId" : "8b60bf455cbbe6ed8fac72ebc98ad8980a6a7b73",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgunittests/CMakeLists.txt" : {
      "ObjectId" : "e6cfaa7a7e7843c8690c805cb42adee92068eaa1",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osguserdata/CMakeLists.txt" : {
      "ObjectId" : "1e0339aae85bef748e5110cf5b7cc7ffc2e8e28d",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n## Quieten warnings that a due to optional code paths\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Remove -Wextra flag as it barfs on ffmoeg headers\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "examples/osguserstats/CMakeLists.txt" : {
      "ObjectId" : "37c323155529fddc77b4142cba038ecda9f837db",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgvertexattributes/CMakeLists.txt" : {
      "ObjectId" : "0987635893aab54125a04f16f661c0c139d6b762",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgvertexprogram/CMakeLists.txt" : {
      "ObjectId" : "dd1a04777e51002f9e44ee33b0d7534dacacf823",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgviewerCocoa/CMakeLists.txt" : {
      "ObjectId" : "601bba33c75266cd40961cc928e818c4303b9fc2",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# On OSX, this example only compiles if using Cocoa\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgviewerFLTK/CMakeLists.txt" : {
      "ObjectId" : "43c023b892c143be0f506f89fc937ad5e7beb22b",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgviewerFOX/CMakeLists.txt" : {
      "ObjectId" : "6518e4a380ad4812fbbe2809dedb105db6ee84a7",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgviewerGTK/CMakeLists.txt" : {
      "ObjectId" : "17622b70bea8b46aa27384b7735a6f6897d7a627",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/osgviewerIPhone/CMakeLists.txt" : {
      "ObjectId" : "7312207a0f972ce1256c4704c2593fee5ca6e4ee",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#backup setting\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#SET(MACOSX_DEPLOYMENT_TARGET, ${IPHONE_VERSION_MIN})\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#restore setting\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "examples/osgviewerMFC/CMakeLists.txt" : {
      "ObjectId" : "06e0b3dc795325265d7bba88ee265ad45c40a5ed",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgviewerSDL/CMakeLists.txt" : {
      "ObjectId" : "8498958ab88a8e0fa23d1180254f78972e7c8ea2",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Found a precompiled SDLmain library.\n",
        "Line" : 4,
        "CharPositionInLine" : 7
      },
      "1" : {
        "Text" : "# No SDLmain has been found.\n\n# Depending on platform, code may need to be provided for SDLmain.\n",
        "Line" : 7,
        "CharPositionInLine" : 7
      },
      "2" : {
        "Text" : "# Unhandled case. No libsdlmain has been found and no code substitute.\n\n# Depending on platform (or SDL version),\n\n# this may or may not link successfully.\n",
        "Line" : 12,
        "CharPositionInLine" : 15
      },
      "3" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "examples/osgviewerWX/CMakeLists.txt" : {
      "ObjectId" : "3ca300e1d869b3e37ef3948fbadeba8cae73af6a",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgvirtualprogram/CMakeLists.txt" : {
      "ObjectId" : "93427eeea24b10e440d4bab8bf6be13e0f7254af",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/osgvnc/CMakeLists.txt" : {
      "ObjectId" : "16ce636c772c665ab420a4e8e796db6f53fb8f68",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgvolume/CMakeLists.txt" : {
      "ObjectId" : "50add33c3192dd6fe53b5d0a60024a1493343ce3",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgwidgetaddremove/CMakeLists.txt" : {
      "ObjectId" : "aa67dad3e6f128298ea800f2e7b2e49905417d35",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgwidgetbox/CMakeLists.txt" : {
      "ObjectId" : "a4c816128c4ad4f2fc1845ebee3697f46b419330",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgwidgetcanvas/CMakeLists.txt" : {
      "ObjectId" : "df7b3b0bc753a69a37902743c0575465ad8a88bd",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgwidgetframe/CMakeLists.txt" : {
      "ObjectId" : "f2922c5a2c98c899fcafe9a69ee51ac7b9253772",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgwidgetinput/CMakeLists.txt" : {
      "ObjectId" : "240e2c4a10e05db76c23b71297cfd9d14cd1941a",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgwidgetlabel/CMakeLists.txt" : {
      "ObjectId" : "f01e1c6d56b504b0638d33d224d847a9bf853c15",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgwidgetmenu/CMakeLists.txt" : {
      "ObjectId" : "dc75087ec8129569d5dbf59ebdf93bf8e50b2246",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgwidgetmessagebox/CMakeLists.txt" : {
      "ObjectId" : "1df0fb316be8029ac441684a9da8c96b47faeea0",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgwidgetnotebook/CMakeLists.txt" : {
      "ObjectId" : "9e7fb08144a6bb0380c352c9c169b16ca25f1fd4",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgwidgetperformance/CMakeLists.txt" : {
      "ObjectId" : "c419d90822dcffa6974dbfb990b19bccd117fe5d",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgwidgetprogress/CMakeLists.txt" : {
      "ObjectId" : "01d3f25163b4447b2ec43d3e957f63962b295ee7",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgwidgetscrolled/CMakeLists.txt" : {
      "ObjectId" : "0d5e65022d19e012894ac46f33f36c7f3a524932",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/osgwidgetshader/CMakeLists.txt" : {
      "ObjectId" : "d3b023d919a080e333478203811eafb5305a891a",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgwidgetstyled/CMakeLists.txt" : {
      "ObjectId" : "10c421a69b04db2fe338459f5d4a4651e9b60246",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgwidgettable/CMakeLists.txt" : {
      "ObjectId" : "ccc97666a03180b59df93a5ac661d949b7d266a5",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgwidgetwindow/CMakeLists.txt" : {
      "ObjectId" : "9ff5cc15dc3f1c65e1b067035550aec40a4e4ca5",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/osgwindows/CMakeLists.txt" : {
      "ObjectId" : "cb3985ce0d503ae9b858d7de7226235a2079e919",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "packaging/cmake/openscenegraph-component-import-targets.cmake" : {
      "ObjectId" : "5e3b6bcea70adfce21a24863be05ec0ecabe9602",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is a utility file for importing the target (and its dependencies) of\n\n# @LIB_NAME@, a component library of OpenSceneGraph. This is designed to be used\n\n# by OpenSceneGraphConfig.cmake and should not be invoked directly.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# First we import all dependent targets (as well as their dependencies, recursively)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Note: This should never happen, because if this library was installed\n\n# and its target was exported, then its dependencies should have been\n\n# installed with their targets alongside it. If we ever land here, then\n\n# either there is a bug in the build system, or the user has broken\n\n# their installation of OpenSceneGraph.\n",
        "Line" : 9,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Then we import our own target file\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "d121eb00de23f23a13d0d784271b26b3c0d323b8",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#the old construct SUBDIRS( was substituted by ADD_SUBDIRECTORY that is to be preferred according on CMake docs.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/OpenThreads/CMakeLists.txt" : {
      "ObjectId" : "207f5d63bb489b5889c8b177bf85cf79974fd52a",
      "LastModified" : "2019-03-20T15:56:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is mainly for Windows declspec, but other platforms know\n\n# what to do with it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# User Options\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\n\n# Set Config file\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################################################################################\n\n# Set Version Info resource file\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "################################################################################\n\n## Quieten warnings that a due to optional code paths\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Remove -Wextra flag as it barfs on ffmoeg headers\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# INSTALL_FILES(/include/OpenThreads/ FILES \"${OPENTHREADS_CONFIG_HEADER}\")\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "################################################################################\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Use our modified version of FindThreads.cmake which has Sproc hacks.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add support for using Qt threads\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Maybe we should be using the FindThreads.cmake module?\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# So I think Cygwin wants to use pthreads\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Everybody else including Msys should probably go here\n",
        "Line" : 94,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# examples)\n",
        "Line" : 96,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Make sure everyone can find Config\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Generate pkg-config configuration file\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "src/OpenThreads/pthreads/CMakeLists.txt" : {
      "ObjectId" : "bd3da23a316be5821bd3c5935c85b9b79e2a6788",
      "LastModified" : "2019-03-20T15:56:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file should only be included when using Pthreads\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# define for pthread_{yield,getconcurrency,setconcurrency}\n",
        "Line" : 24,
        "CharPositionInLine" : 12
      },
      "2" : {
        "Text" : "#SET(CPP_EXTENSION \"c++\")\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# should check?\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# sched_yield appears not in libc, pthreads or whatever on some systems\n",
        "Line" : 48,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "# need to have that for pthread_setaffinity_np on linux\n",
        "Line" : 63,
        "CharPositionInLine" : 10
      },
      "6" : {
        "Text" : "# double check that pthread_setaffinity_np is available as FreeBSD header doesn't contain required function\n",
        "Line" : 80,
        "CharPositionInLine" : 10
      },
      "7" : {
        "Text" : "# Since we're building different platforms binaries in \n\n# their respective directories, we need to set the \n\n# link directory so it can find this location.\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Intentionally blank\n",
        "Line" : 175,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "#commented out# INCLUDE(ModuleInstall OPTIONAL)\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "src/OpenThreads/win32/CMakeLists.txt" : {
      "ObjectId" : "82574ebf46542404b7524ec3278e196a6d934d01",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file should only be included when WIN32\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Since we're building different platforms binaries in \n\n# their respective directories, we need to set the \n\n# link directory so it can find this location.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Intentionally blank\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#commented out# INCLUDE(ModuleInstall OPTIONAL)\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/osg/CMakeLists.txt" : {
      "ObjectId" : "97ac88882f440d835c5c5784d240ca3c10990f4b",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: For OS X, need flag for Framework or dylib\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Enable workaround for OpenGL driver crash with occlusion query\n\n#\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ADD_LIBRARY(${LIB_NAME}\n\n#    ${OPENSCENEGRAPH_USER_DEFINED_DYNAMIC_OR_STATIC}\n\n#    ${LIB_PUBLIC_HEADERS}\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We don't build this one\n\n#    Matrix_implementation.cpp\n",
        "Line" : 332,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#LINK_INTERNAL(${LIB_NAME}\n\n#    OpenThreads\n\n#)\n\n#LINK_EXTERNAL(${LIB_NAME} ${CMAKE_THREAD_LIBS_INIT}    ${MATH_LIBRARY} ${RT_LIBRARY} ${DL_LIBRARY})\n\n#LINK_CORELIB_DEFAULT(${LIB_NAME} ${CMAKE_THREAD_LIBS_INIT} ${MATH_LIBRARY} ${RT_LIBRARY} )\n",
        "Line" : 455,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#INCLUDE(ModuleInstall OPTIONAL)\n",
        "Line" : 461,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/osgAnimation/CMakeLists.txt" : {
      "ObjectId" : "61c40286f201390fa57fe2d2c915edb086d59d3a",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/osgDB/CMakeLists.txt" : {
      "ObjectId" : "9424a437032f1cb500cd9cb78d17352728c6abb5",
      "LastModified" : "2019-03-20T15:56:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add a default plugin search path component\n",
        "Line" : 9,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# Set the library extension according to what configuration is being built.\n\n# If the string is empty, don't set the define.\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# compile FileUtils.cpp as objective-c++\n",
        "Line" : 36,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# Needs CoreFoundation\n",
        "Line" : 131,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Needs CoreFoundation calls and a Carbon function\n",
        "Line" : 134,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "################################################################################\n\n## Quieten warnings that a due to optional code paths\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remove -Wextra flag as it barfs on ffmoeg headers\n",
        "Line" : 177,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "src/osgFX/CMakeLists.txt" : {
      "ObjectId" : "9befe009ce8b44938879cc8544696d2f170ae8d7",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: For OS X, need flag for Framework or dylib\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgGA/CMakeLists.txt" : {
      "ObjectId" : "db36b82c8120409bd252722863299e321fddc698",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/osgManipulator/CMakeLists.txt" : {
      "ObjectId" : "18da3aa8ac508ffa1165518ea74c24dd404ab991",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: For OS X, need flag for Framework or dylib\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgParticle/CMakeLists.txt" : {
      "ObjectId" : "04cd1898ea659e3c104c1f8576ca39bbc74e807e",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: For OS X, need flag for Framework or dylib\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/3dc/CMakeLists.txt" : {
      "ObjectId" : "e81984c3972156c29746e99a2e4c3015552342d1",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/3ds/CMakeLists.txt" : {
      "ObjectId" : "a7a01faa8d72413ad7cda13a5820bb614cd8094f",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# List of C files to be compiled as C++ (else CMake sets \".c\" to be compiled as pure C)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Modified to support OSG endianness\n",
        "Line" : 3,
        "CharPositionInLine" : 30
      },
      "2" : {
        "Text" : "#disable specific warning level 4 warnings:\n\n#C4456 declaration of 'c' hides previous local declaration\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# lib3ds is included, so we need the flag\n",
        "Line" : 46,
        "CharPositionInLine" : 42
      },
      "5" : {
        "Text" : "# Force some files to be compiled as C++\n",
        "Line" : 47,
        "CharPositionInLine" : 73
      },
      "CommentCount" : 6
    },
    "src/osgPlugins/CMakeLists.txt" : {
      "ObjectId" : "77d66f884bed76184b996249f58562eb1f4bbfd6",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---------------------------------------------------\n\n# OSG CMAKE SUPPORT\n\n# (C) by Michael Wagner, mtw@shared-reality.com 2005\n\n# (C) Eric Wing, Luigi Calori and Robert Osfield 2006-2007\n\n#---------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Macro used for adding plugins below. By default, all plugins are built\n\n# but can be disabled by setting the CMake Variable BUILD_OSG_PLUGIN_<PLUGINNAME> to 0.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "############################################################\n\n#\n\n#  NodeKit/Psudo loader plugins\n\n#\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "############################################################\n\n#\n\n#  Main native plugins\n\n#\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "############################################################\n\n#\n\n#  Viewer plugins\n\n#\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "############################################################\n\n#\n\n#  Shader plugins\n\n#\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "############################################################\n\n#\n\n#  Image plugins\n\n#\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "############################################################\n\n#\n\n# 3D Image plugins\n\n#\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "############################################################\n\n#\n\n#  3rd party 3d plugins\n\n#\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# IF(OPENAL_FOUND)\n\n#    ADD_SUBDIRECTORY(OpenAL)\n\n# ENDIF()\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "####################################################\n\n#\n\n# ScriptEngines\n\n#\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# V8 and Python plugins are tests for linking against these libraries but aren't functionality beyond this.\n\n# IF (V8_FOUND)\n\n#     ADD_PLUGIN_DIRECTORY(V8)\n\n# ENDIF()\n\n#\n\n# IF (PYTHONLIBS_FOUND)\n\n#     ADD_PLUGIN_DIRECTORY(python)\n\n# ENDIF()\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "####################################################\n\n#\n\n# Device integration plugins\n\n#\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "##########to get all the variables of Cmake\n\n#GET_CMAKE_PROPERTY(MYVARS VARIABLES)\n\n#FOREACH(myvar ${MYVARS})\n\n#    FILE(APPEND ${CMAKE_CURRENT_BINARY_DIR}/AllVariables.txt\n\n#        \"${myvar} -->${${myvar}}<-\\n\"\n\n#    )\n\n#ENDFOREACH(myvar)\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "src/osgPlugins/Inventor/CMakeLists.txt" : {
      "ObjectId" : "963a49420a3d2afb6d0a3996df224c9c9f9028b2",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/osgPlugins/OpenCASCADE/CMakeLists.txt" : {
      "ObjectId" : "28862ae9c88f14560ffa77b89bb31743e85336be",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# requires CMake 3.1 to do the following:\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/osgPlugins/OpenFlight/CMakeLists.txt" : {
      "ObjectId" : "f446368a994f0231ea738da6e17c5d5d9924b483",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/QTKit/CMakeLists.txt" : {
      "ObjectId" : "f16014d932f7f503d2577ccfe9c82212dc375325",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/RestHttpDevice/CMakeLists.txt" : {
      "ObjectId" : "8464b9df9052b46942d7bb761716b9bcae0aec1b",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/V8/CMakeLists.txt" : {
      "ObjectId" : "6d1db7e3c9cc34f692ad81bb13b9e35d92eda136",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/ZeroConfDevice/CMakeLists.txt" : {
      "ObjectId" : "1fdcabfaba753ba3a637020decc2a1be19b0e475",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/ac/CMakeLists.txt" : {
      "ObjectId" : "0c82dede494e46a0cc1987576803ae85882160de",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/avfoundation/CMakeLists.txt" : {
      "ObjectId" : "04340f2165fc5fe0b8a9aefd3d8241c285b6a58b",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# AVFoundation plugin only works with OSX/Cocoa (not X11 or Carbon)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/osgPlugins/bmp/CMakeLists.txt" : {
      "ObjectId" : "ecaba3fe680def39018c910ddf86be2ff263d080",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/bsp/CMakeLists.txt" : {
      "ObjectId" : "6d06600a60466f148da324957b31ce17b5603170",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/bvh/CMakeLists.txt" : {
      "ObjectId" : "edc399a9d7f63a1638481bff7d5a0b409ddd16e2",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/cfg/CMakeLists.txt" : {
      "ObjectId" : "4f7062ba9955450dcc4ee97cdf96bd0a5e7dde16",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# lex/yacc generated files use register that causes warnings with CLang under OSX so disable this warnings.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Android NDK r6, r6b and r7 ship with a broken gcc (armeabi)\n\n# see also\n\n# - http://gcc.gnu.org/bugzilla/show_bug.cgi?id=40836\n\n# - http://gcc.gnu.org/bugzilla/show_bug.cgi?id=37987\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/osgPlugins/curl/CMakeLists.txt" : {
      "ObjectId" : "667631f071602418701b618622a12619f2acd5ba",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/dae/CMakeLists.txt" : {
      "ObjectId" : "af03fb866c34ce33e855cd38e598fbdf90128012",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n## Quieten warnings that a due to dae headers\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Remove -Wextra flag as it barfs on ffmoeg headers\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Remove -Wshadow flag as it barfs on ffmoeg headers\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/osgPlugins/dds/CMakeLists.txt" : {
      "ObjectId" : "aa6e957989c43fef67bc9e3f26828f9083a10ee6",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/dicom/CMakeLists.txt" : {
      "ObjectId" : "37f621a7953d7eea9ea82da84d609831ffc659b9",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# note, we have to include a '/' in front of the directory string to prevent a CMake bug from ignoring the directory\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Remove -pedantic flag as it barfs on ffmpeg headers\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/osgPlugins/directshow/CMakeLists.txt" : {
      "ObjectId" : "1097a60d86ec7b05a8c104c72a987cd5cf676a7e",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For visual studio express 2005 and windows plateforme sdk 2003\n\n# i have some problem with the windows sdk to build the BaseClasses, so\n\n# here some point that will help to fix this.\n\n# https://blogs.msdn.com/mikewasson/archive/2005/05/23/421116.aspx\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# use this link to downloads vc project to build strmbase library\n\n# http://www.microsoft.com/downloads/thankyou.aspx?familyId=8af0afa9-1383-44b4-bc8b-7d6315212323&displayLang=en\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# to build strmbase.lib\n\n# modify clutil.h line 278\n\n#    operator=(LONG); \n\n#    to\n\n#    (LONG) operator=(LONG);\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add in includes directory\n\n# C:\\Program Files\\Microsoft Platform SDK for Windows Server 2003 R2\\Include\\atl    \n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# modify winutil.cpp line 2104\n\n#    for (Count = 0;Count < Result;Count++) {\n\n#    to\n\n#    for (UINT Count = 0;Count < Result;Count++) {\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# modify winutil.cpp line 2123\n\n#    for (Count = PalLoCount;INT(Count) < min(PalHiStart,iColours);Count++) {\n\n#    to\n\n#    for (UINT Count = PalLoCount;INT(Count) < min(PalHiStart,iColours);Count++) {\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# modify wxdebug.cpp line 564\n\n#    static g_dwLastRefresh = 0;\n\n#    to\n\n#    static DWORD g_dwLastRefresh = 0;\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# modify outputq.cpp line 6134\n\n#    LONG iLost = 0;\n\n#    for (long iDone = 0;\n\n#    to\n\n#    LONG iLost = 0;\n\n#    long iDone = 0;\n\n#    for (iDone = 0;\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# In the properties of the project there is a fixed path to link with strmiids.lib. Replace the ../../../.. by the name of the library\n\n# only, then the linker will find the strmiids.lib\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# After those step it should compile, becareful using unicode version will result undefined symbol ... so use multibyte version instead\n\n#\n\n# End For visual studio express 2005 and windows plateforme sdk 2003\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "src/osgPlugins/dot/CMakeLists.txt" : {
      "ObjectId" : "2570af3d4189afb24579c06f1755914591aa7e2a",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/dxf/CMakeLists.txt" : {
      "ObjectId" : "860e78cb56a87097241076ed64e500992d25ece0",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/exr/CMakeLists.txt" : {
      "ObjectId" : "6191ed18fcaf8ec19437b5991d60275ee6f64ced",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/fbx/CMakeLists.txt" : {
      "ObjectId" : "8741dfb015394d7f8b2c85f7b8c4bf09569c7382",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/ffmpeg/CMakeLists.txt" : {
      "ObjectId" : "6109f916402341f7f0010b5a3b78971c854623f5",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# MESSAGE(\"FFMPEG_LIBAVFORMAT_INCLUDE_DIRS = \"  ${FFMPEG_LIBAVFORMAT_INCLUDE_DIRS} )\n\n# MESSAGE(\"FFMPEG_LIBAVDEVICE_INCLUDE_DIRS = \"  ${FFMPEG_LIBAVDEVICE_INCLUDE_DIRS} )\n\n# MESSAGE(\"FFMPEG_LIBAVCODEC_INCLUDE_DIRS = \"  ${FFMPEG_LIBAVCODEC_INCLUDE_DIRS} )\n\n# MESSAGE(\"FFMPEG_LIBAVUTIL_INCLUDE_DIRS = \"  ${FFMPEG_LIBAVUTIL_INCLUDE_DIRS} )\n\n# MESSAGE(\"FFMPEG_LIBRARIES = \"  ${FFMPEG_LIBRARIES} )\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/osgPlugins/freetype/CMakeLists.txt" : {
      "ObjectId" : "cb7990509cebb3a91434cf67de564076799f2797",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/gdal/CMakeLists.txt" : {
      "ObjectId" : "f1b67070178924ae1c2d85e2d2abadf26284c029",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/gif/CMakeLists.txt" : {
      "ObjectId" : "642339af15c5d00afa55d5b9c14381442eac8396",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/gles/CMakeLists.txt" : {
      "ObjectId" : "fbbb36f945b2067ad48514e19e1327fdb02549df",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/glsl/CMakeLists.txt" : {
      "ObjectId" : "134510457afd06392204c2b9d96284b3bdf5c14d",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/gstreamer/CMakeLists.txt" : {
      "ObjectId" : "53c6f271c7a465858616713c4f4f87d89d749233",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/gta/CMakeLists.txt" : {
      "ObjectId" : "16466fefc69c55c4b2ff2558c4abe8c4894a3d1e",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/gz/CMakeLists.txt" : {
      "ObjectId" : "9d5e758c49a1663962fa6a9427731b1490457de6",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/hdr/CMakeLists.txt" : {
      "ObjectId" : "c2330771e90b77422794e0625bb464bd3e2e1f4b",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/imageio/CMakeLists.txt" : {
      "ObjectId" : "f53a07b3be54906ad75219fa38e0db5c518ea16f",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# compile as objective-c++\n",
        "Line" : 5,
        "CharPositionInLine" : 5
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/osgPlugins/ive/CMakeLists.txt" : {
      "ObjectId" : "784a79c7e7e41dc2e62fc94534ae20e3f66d1edb",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/jp2/CMakeLists.txt" : {
      "ObjectId" : "b95537680461d702e80138cd51700214d1128b8a",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/jpeg/CMakeLists.txt" : {
      "ObjectId" : "7117713a06623634c763ac5f8ee478355d09d7c5",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/ktx/CMakeLists.txt" : {
      "ObjectId" : "348792cf5768b01cb8710e59c886dd60ab5f8118",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/las/CMakeLists.txt" : {
      "ObjectId" : "f3cdf01234cd25f66f851a915d88cd9b8564d24f",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/logo/CMakeLists.txt" : {
      "ObjectId" : "b32eb61198586316b61d4a221b0b132d5438e433",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/lua/CMakeLists.txt" : {
      "ObjectId" : "ace3a71b42a85cd1d1c88fec8b130356bd2920e4",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#disable specific warning :\n\n#warning C4702: unreachable code\n\n#warning C4324: lua-5.2.3\\src\\ldo.c(79): warning C4324: 'lua_longjmp': structure was padded due to alignment specifier\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/osgPlugins/lua/lua-5.2.3/Makefile" : {
      "ObjectId" : "d2c7db4a2da841565b3f1f0e19a84b82dcaefe5e",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for installing Lua\n\n# See doc/readme.html for installation and customization instructions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Your platform. See PLATS for possible values.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to install. The installation starts in the src and doc directories,\n\n# so take care if INSTALL_TOP is not an absolute path. See the local target.\n\n# You may want to make INSTALL_LMOD and INSTALL_CMOD consistent with\n\n# LUA_ROOT, LUA_LDIR, and LUA_CDIR in luaconf.h.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# How to install. If your install program does not support \"-p\", then\n\n# you may have to run ranlib on the installed liblua.a.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# If you don't have \"install\" you can use \"cp\" instead.\n\n# INSTALL= cp -p\n\n# INSTALL_EXEC= $(INSTALL)\n\n# INSTALL_DATA= $(INSTALL)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Other utilities.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# == END OF USER SETTINGS -- NO NEED TO CHANGE ANYTHING BELOW THIS LINE =======\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Convenience platforms targets.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# What to install.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Lua version and release.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Targets start here.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# make may get confused with test/ and install/\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# echo config parameters\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# echo pkg-config data\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# list targets that do not create files (but not all makes understand .PHONY)\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# (end of Makefile)\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "src/osgPlugins/lua/lua-5.2.3/src/Makefile" : {
      "ObjectId" : "7b4b2b75420b876d0116b8af25c11ac44288ce10",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for building Lua\n\n# See ../doc/readme.html for installation and customization instructions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Your platform. See PLATS for possible values.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# == END OF USER SETTINGS -- NO NEED TO CHANGE ANYTHING BELOW THIS LINE =======\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Targets start here.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Convenience targets for popular platforms\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# list targets that do not create files (but not all makes understand .PHONY)\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# DO NOT DELETE\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/osgPlugins/lwo/CMakeLists.txt" : {
      "ObjectId" : "26fdf0a5606b8bb4c4ac3b698797ad4f3bcb7b87",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/lws/CMakeLists.txt" : {
      "ObjectId" : "84a6958884bc17d7a737a0b2d91f44655608c4dd",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/md2/CMakeLists.txt" : {
      "ObjectId" : "132130c00caa92e1041cdafa958e13c3e4fd3d5e",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/mdl/CMakeLists.txt" : {
      "ObjectId" : "0123e0bc4992e8a520c6b9f0c954d9ef594519a0",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/normals/CMakeLists.txt" : {
      "ObjectId" : "3ae0494789537a6c6e441302ffef1b5762a91009",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/nvtt/CMakeLists.txt" : {
      "ObjectId" : "4fc58b4ae5b3dd03d8ddea0edf3f76d734eef299",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/obj/CMakeLists.txt" : {
      "ObjectId" : "50161c50473b68ee0deacd3283c14c0dd23b6710",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/ogr/CMakeLists.txt" : {
      "ObjectId" : "01b71e360bb4e231907eac4439662ff65390fed7",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Remove -Wshadow flag as it barfs on ffmoeg headers\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/osgPlugins/osc/CMakeLists.txt" : {
      "ObjectId" : "0997edb133fb324cf7473463d72459168b22a068",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/osg/CMakeLists.txt" : {
      "ObjectId" : "180422d0360b9a1183a1ca7a3f1d3a74f03f62da",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/osga/CMakeLists.txt" : {
      "ObjectId" : "7effa11ffb02336c25ab0775d9904c7f23948abb",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/osgjs/CMakeLists.txt" : {
      "ObjectId" : "2c66731194b8b8686af7b201e1ff22107a3bed50",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/osgtgz/CMakeLists.txt" : {
      "ObjectId" : "7e0dabbfc41e515938e44185f0ce98aa114f93b1",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/p3d/CMakeLists.txt" : {
      "ObjectId" : "e5cc9bdebd30885f0b383c77b6b4d115e9a13986",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/pdf/CMakeLists.txt" : {
      "ObjectId" : "7957506540c1636db6cc0779e82cfd70b698c2ca",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/pic/CMakeLists.txt" : {
      "ObjectId" : "88b0b89d02a95ece09ff873ca5e3991ff0522a93",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/ply/CMakeLists.txt" : {
      "ObjectId" : "c83bab123f6940d51796d960a402adb69a34663e",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this file is automatically generated \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/osgPlugins/png/CMakeLists.txt" : {
      "ObjectId" : "33df903d273ebf0fc933c52b801c5f6f61f379b5",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/pnm/CMakeLists.txt" : {
      "ObjectId" : "810fd89a02ff8026899b25858e1e6dd5d5b57422",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/pov/CMakeLists.txt" : {
      "ObjectId" : "f47b6ceb0fe151e8ff8cd5f10b943bd3584dafc2",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/osgPlugins/pvr/CMakeLists.txt" : {
      "ObjectId" : "28605d29eee17e1d37ebdd8c598ac7461b28625b",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/python/CMakeLists.txt" : {
      "ObjectId" : "6041c271c27c8458ac25036ef366cf2c0b59c6b8",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/quicktime/CMakeLists.txt" : {
      "ObjectId" : "f80ac67741802add743952d9abbd93265e158bce",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/revisions/CMakeLists.txt" : {
      "ObjectId" : "9d1f93957d38d950f9da2a13c43b91de70a1c7b6",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/rgb/CMakeLists.txt" : {
      "ObjectId" : "53c8461076d9c98b53be45772351a36d76193c97",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/rot/CMakeLists.txt" : {
      "ObjectId" : "989639a5303e5891a79004850ffe9e0adbb9d17f",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/scale/CMakeLists.txt" : {
      "ObjectId" : "2aaa0cee7fd7f7af0fde1a89d03934ed3922580e",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/sdl/CMakeLists.txt" : {
      "ObjectId" : "ff1502e36fdc952fd62188f06459e8f3fbec5f6c",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/shadow/CMakeLists.txt" : {
      "ObjectId" : "aebfae343368910bd7a587eeeb3a49ba7e8a946f",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/shp/CMakeLists.txt" : {
      "ObjectId" : "1819fe1d4bfc0b3351988a7585c2051d653ae044",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/stl/CMakeLists.txt" : {
      "ObjectId" : "79da1386d873491ea3b9b1511ec3927dc82f1958",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/svg/CMakeLists.txt" : {
      "ObjectId" : "1d7b5265d28f971ed8d32a6c0009d4c808d0231c",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Remove -pedantic flag as it barfs on ffmoeg headers\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/osgPlugins/terrain/CMakeLists.txt" : {
      "ObjectId" : "a383e2ac4aa12befa3eb9619782783a3b709f2c5",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/tf/CMakeLists.txt" : {
      "ObjectId" : "f968c8b842de3b2806468e8b778ca86fb743bd71",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/tga/CMakeLists.txt" : {
      "ObjectId" : "60e4c5473b0f4d659103eef9f62104ff9439cc77",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/tgz/CMakeLists.txt" : {
      "ObjectId" : "9c51e036c893c6d9e1b4dde7fbad76fb79188c5b",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/tiff/CMakeLists.txt" : {
      "ObjectId" : "fc945d68e49ea026b207b3e2f8e11b8180b04ee4",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/trans/CMakeLists.txt" : {
      "ObjectId" : "be4b5cba467b2c6b2d4703837a2317b0831c5ebd",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/trk/CMakeLists.txt" : {
      "ObjectId" : "f3501d0271295a606835334983c761ff1b8b7a00",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/txf/CMakeLists.txt" : {
      "ObjectId" : "bb2e482835e08501d3eee166b365148f57cb7e05",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/txp/CMakeLists.txt" : {
      "ObjectId" : "1013bbe69ef180838518810d31b5a4f1ade1826b",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/view/CMakeLists.txt" : {
      "ObjectId" : "1955b24b6a344e2cd4655d4de17cc6d0c255164a",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/vnc/CMakeLists.txt" : {
      "ObjectId" : "9a54b2bf23f3fcbfba5e8b66f8993e49fe625dc2",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/vrml/CMakeLists.txt" : {
      "ObjectId" : "194bb9a19163e41851fe0850dc98394164fd82ce",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/vtf/CMakeLists.txt" : {
      "ObjectId" : "ad76f2a1ad4298bd02dd861119ab9ae43ff58ee7",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/x/CMakeLists.txt" : {
      "ObjectId" : "14d49c98c564730d7c3bd723b59fb86b0c2ad71d",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgPlugins/zip/CMakeLists.txt" : {
      "ObjectId" : "e805b418159397182abed7d6579f78d6ed64872a",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/osgPresentation/CMakeLists.txt" : {
      "ObjectId" : "9c02db922fd53b9719b8febd161a0e8cee26c563",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: For OS X, need flag for Framework or dylib\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgShadow/CMakeLists.txt" : {
      "ObjectId" : "35c15bc18b4163f1f0abd4c7ddaf1828303cae69",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n## Quieten warnings that a due to optional code paths\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Remove -Wextra flag as it barfs on ffmoeg headers\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# FIXME: For OS X, need flag for Framework or dylib\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/osgSim/CMakeLists.txt" : {
      "ObjectId" : "f16880e60f8d84b76ab14aa095406f58227a4300",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: For OS X, need flag for Framework or dylib\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgTerrain/CMakeLists.txt" : {
      "ObjectId" : "fe4e71dc906549fbab1e5e52024accf2837c2933",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: For OS X, need flag for Framework or dylib\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgText/CMakeLists.txt" : {
      "ObjectId" : "d9987bfc076c600b255632db716af3b5a225da8c",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: For OS X, need flag for Framework or dylib\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgUI/CMakeLists.txt" : {
      "ObjectId" : "36cefa79316fa48b0098dc59232a7017052a8b39",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/osgUtil/CMakeLists.txt" : {
      "ObjectId" : "708aa0ece0c0206251f2cb1a2516b440ea5a1ce0",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: For OS X, need flag for Framework or dylib\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgViewer/CMakeLists.txt" : {
      "ObjectId" : "06db2e986fd1736f5b60e146208d65130394313f",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: For OS X, need flag for Framework or dylib\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n\n## Quieten warnings that a due to optional code paths\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Remove -Wextra flag as it barfs on ffmoeg headers\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Collect all the configuration files\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Enable workaround for OpenGL driver issues when used in multithreaded/multiscreen with NVidia drivers on Windows XP\n\n# For example: osgviewer dumptruck.osg was showing total garbage (screen looked like shattered, splashed hedgehog)\n\n# There were also serious issues with render to texture cameras.\n\n# Workaround repeats makeCurrentContext call as it was found that this causes the problems to disappear.\n\n#\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#${HEADER_PATH}/api/IOS/PixelBufferIOS\n",
        "Line" : 160,
        "CharPositionInLine" : 16
      },
      "6" : {
        "Text" : "# X11 for everybody else\n",
        "Line" : 173,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# X11 on Apple requires X11 library plus OpenGL linking hack on Leopard\n",
        "Line" : 223,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# hack for finding the iphone opengl es lib\n",
        "Line" : 225,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# install these headers manually since setup_library and moduleinstall\n\n# wouldn't keep the structure, e.g. api/X11/xyz.h\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# get relative path to graphics system dependent header\n",
        "Line" : 271,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# for structure in ide\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "src/osgVolume/CMakeLists.txt" : {
      "ObjectId" : "6b6b582066de3dd62c1e32c91fbe862c43cfbdb5",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: For OS X, need flag for Framework or dylib\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgWidget/CMakeLists.txt" : {
      "ObjectId" : "229ae94e1b8fda7c111c74a90a4046eb7a2c249e",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n## Quieten warnings that a due to optional code paths\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Remove -Wextra flag as it barfs on ffmoeg headers\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# FIXME: For OS X, need flag for Framework or dylib\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/osgWrappers/deprecated-dotosg/CMakeLists.txt" : {
      "ObjectId" : "074126b1341462c1e4ba52c913af080661680819",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---------------------------------------------------\n\n# OSG CMAKE SUPPORT\n\n# (C) by Michael Wagner, mtw@shared-reality.com 2005\n\n# (C) Eric Wing, Luigi Calori and Robert Osfield 2006-2007\n\n#---------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgWrappers/deprecated-dotosg/osg/CMakeLists.txt" : {
      "ObjectId" : "722e5c57a08f5d23dfefccac753dff0cf39b22b7",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgWrappers/deprecated-dotosg/osgAnimation/CMakeLists.txt" : {
      "ObjectId" : "a4f50231ddbb7197f895632e43885f8c49210a3e",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgWrappers/deprecated-dotosg/osgFX/CMakeLists.txt" : {
      "ObjectId" : "a2ca1a0ebd4f866e10eae12e6ebc328f1480e559",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgWrappers/deprecated-dotosg/osgParticle/CMakeLists.txt" : {
      "ObjectId" : "da911147b6ec7b2c844451fd9b9812758f640ee5",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgWrappers/deprecated-dotosg/osgShadow/CMakeLists.txt" : {
      "ObjectId" : "699f18aa36b0ab9dfe3856009fa91424caf99297",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgWrappers/deprecated-dotosg/osgSim/CMakeLists.txt" : {
      "ObjectId" : "3439c67d4fd6e2b7bc940e85deb484e3fed7b967",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgWrappers/deprecated-dotosg/osgTerrain/CMakeLists.txt" : {
      "ObjectId" : "2a1995fe87c8b1ba31ac458769d9411bb82b3e0c",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgWrappers/deprecated-dotosg/osgText/CMakeLists.txt" : {
      "ObjectId" : "fd0360469fb9e7aec59a93449daa867b77929b47",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgWrappers/deprecated-dotosg/osgViewer/CMakeLists.txt" : {
      "ObjectId" : "98bee4867f617d35231818a0c7d92c5a944539ff",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgWrappers/deprecated-dotosg/osgVolume/CMakeLists.txt" : {
      "ObjectId" : "52ae7233d27504a99d162bfbf9b0dfb940ed3445",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgWrappers/deprecated-dotosg/osgWidget/CMakeLists.txt" : {
      "ObjectId" : "89377d78b264ba3de1f4c2644ca6854b7435ccf9",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgWrappers/serializers/CMakeLists.txt" : {
      "ObjectId" : "22d49e35485a951e8c351914eefa0983a970f40d",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---------------------------------------------------\n\n# OSG CMAKE SUPPORT\n\n# (C) by Michael Wagner, mtw@shared-reality.com 2005\n\n# (C) Eric Wing, Luigi Calori and Robert Osfield 2006-2007\n\n#---------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Avoid C4121 warnings\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "################################################################################\n\n## Quieten warnings that a due to optional code paths\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Remove -Wextra flag as it barfs on ffmoeg headers\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "src/osgWrappers/serializers/osg/CMakeLists.txt" : {
      "ObjectId" : "722e5c57a08f5d23dfefccac753dff0cf39b22b7",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgWrappers/serializers/osgAnimation/CMakeLists.txt" : {
      "ObjectId" : "0b0c556880fc5692959c863eecabc246147377b4",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgWrappers/serializers/osgFX/CMakeLists.txt" : {
      "ObjectId" : "a2ca1a0ebd4f866e10eae12e6ebc328f1480e559",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgWrappers/serializers/osgGA/CMakeLists.txt" : {
      "ObjectId" : "ac118865da06b7103094e9e30ec9198a0b23d602",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgWrappers/serializers/osgManipulator/CMakeLists.txt" : {
      "ObjectId" : "b278fbb0239e43c115100e5343f4c5e0384b3af7",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgWrappers/serializers/osgParticle/CMakeLists.txt" : {
      "ObjectId" : "da911147b6ec7b2c844451fd9b9812758f640ee5",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgWrappers/serializers/osgShadow/CMakeLists.txt" : {
      "ObjectId" : "699f18aa36b0ab9dfe3856009fa91424caf99297",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgWrappers/serializers/osgSim/CMakeLists.txt" : {
      "ObjectId" : "3439c67d4fd6e2b7bc940e85deb484e3fed7b967",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgWrappers/serializers/osgTerrain/CMakeLists.txt" : {
      "ObjectId" : "b98eeed23a79a25c433ca29f72dcab22e7bc4003",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgWrappers/serializers/osgText/CMakeLists.txt" : {
      "ObjectId" : "fd0360469fb9e7aec59a93449daa867b77929b47",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgWrappers/serializers/osgUI/CMakeLists.txt" : {
      "ObjectId" : "d5c382587aff7e06c241e39b309af3b6f90fbf0a",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgWrappers/serializers/osgUtil/CMakeLists.txt" : {
      "ObjectId" : "e75aedf4fbf6e20b3d3b3cb6ff36c7ab87c37f8c",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgWrappers/serializers/osgViewer/CMakeLists.txt" : {
      "ObjectId" : "98bee4867f617d35231818a0c7d92c5a944539ff",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/osgWrappers/serializers/osgVolume/CMakeLists.txt" : {
      "ObjectId" : "7e665993be937416d2c1dd340448965274c85cbd",
      "LastModified" : "2019-02-20T17:01:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#### end var setup  ###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 382,
    "MAKEFILE" : 2
  },
  "ElapsedTime" : 7233
}