{
  "Repository" : "12170731",
  "Revision" : "HEAD",
  "ObjectId" : "08c82f06fc73f17918b8edcc7e6583080d06d14b",
  "CommitTime" : "2019-04-15T15:18:25Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "2b239b7dcefff0113d71170a3a0ed3085fdd394f",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Skip all *nix-style installing for a while. Use DESTDIR\n",
        "Line" : 9,
        "CharPositionInLine" : 30
      },
      "1" : {
        "Text" : "# chmod 755\n",
        "Line" : 22,
        "CharPositionInLine" : 30
      },
      "2" : {
        "Text" : "# Use only if install defined outside target directory(like luabind, for example)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# chmod 755\n",
        "Line" : 44,
        "CharPositionInLine" : 58
      },
      "4" : {
        "Text" : "#set (SANITIZE_FLAGS \"-fsanitize=address  -fsanitize=leak -fno-omit-frame-pointer -g -fsanitize=undefined -fno-sanitize=vptr\")\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#self-explanatory\n",
        "Line" : 106,
        "CharPositionInLine" : 40
      },
      "6" : {
        "Text" : "# for ODE\n",
        "Line" : 107,
        "CharPositionInLine" : 27
      },
      "CommentCount" : 7
    },
    "Externals/CMakeLists.txt" : {
      "ObjectId" : "b03734e8e05e529ba2b45d96ffc4149faa1d8c31",
      "LastModified" : "2018-12-28T14:51:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(lzo)\n\n#add_subdirectory(NVTT)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_subdirectory(gli)\n\n#add_subdirectory(glew)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Externals/NVTT/CMakeLists.txt" : {
      "ObjectId" : "2c63a27232ef27dcbda5ff8be23fc5e8f5cc20ad",
      "LastModified" : "2018-05-28T20:48:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Externals/NVTT/src/nvcore/CMakeLists.txt" : {
      "ObjectId" : "2e3aba3158ed5d772a094897c79b4e58be89968b",
      "LastModified" : "2018-05-28T20:48:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# targets\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Externals/NVTT/src/nvcore/poshlib/CMakeLists.txt" : {
      "ObjectId" : "a0f639efa46572c2e16864512d6b5707f09d5f41",
      "LastModified" : "2018-05-28T20:48:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Externals/NVTT/src/nvimage/CMakeLists.txt" : {
      "ObjectId" : "ae762366bd143513637f434fad56fadf6e9fd6d3",
      "LastModified" : "2018-05-28T20:48:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# targets\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Externals/NVTT/src/nvmath/CMakeLists.txt" : {
      "ObjectId" : "7c6a765ab1ed3b188a0b4aa11838994807b29992",
      "LastModified" : "2018-05-28T20:48:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# targets\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Externals/NVTT/src/nvtt/CMakeLists.txt" : {
      "ObjectId" : "a3fd451510f797ccddc8af0d85f4bf4fd96f7606",
      "LastModified" : "2018-05-28T20:48:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# test executables\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# UI tools\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#QT4_ADD_RESOURCES(RCCS tools/configdialog.rc)\n",
        "Line" : 106,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "Externals/NVTT/src/nvtt/squish/CMakeLists.txt" : {
      "ObjectId" : "2edc683f6d474f9c1dac35e6884e8d5bb6a9cd72",
      "LastModified" : "2018-05-28T20:48:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Externals/NVTT/src/nvtt/squish/Makefile" : {
      "ObjectId" : "75a72fecebe35af7d0737921203948671f419cb4",
      "LastModified" : "2018-05-28T20:48:02Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "Externals/OPCODE/CMakeLists.txt" : {
      "ObjectId" : "f8deeb92a4826de78d6ce90d767f5a34bb0e2711",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Externals/cmake/FindReadline.cmake" : {
      "ObjectId" : "5401a9b4273fa11de9abcf5c94b3e78f2a73c303",
      "LastModified" : "2018-09-08T16:27:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Readline\n\n# Once done this will define\n\n#  READLINE_FOUND - System has readline\n\n#  READLINE_INCLUDE_DIRS - The readline include directories\n\n#  READLINE_LIBRARIES - The libraries needed to use readline\n\n#  READLINE_DEFINITIONS - Compiler switches required for using readline\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set READLINE_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Externals/cximage/CMakeLists.txt" : {
      "ObjectId" : "40dec1de3b7b53ff0a5812dca385d2802f7405ab",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Externals/luajit.cmake" : {
      "ObjectId" : "20b91c6709e72b7f15cf70cb0e7f3ee8713dea9e",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2007-2013 LuaDist.\n\n# Created by Peter Draho≈°\n\n# Redistribution and use of this file is allowed according to the terms of the MIT license.\n\n# For details see the COPYRIGHT file distributed with LuaDist.\n\n# Please note that the package source code is licensed under its own license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# NOTE: This build is currently only supporting x86 targets, for other targets use the original makefile. Please do not submit bugs to the LuaJIT author in case this build fails, instead use http://github.com/LuaDist/luajit\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## CONFIGURATION\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Default configuration (we assume POSIX by default)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Version\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Extra flags\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Tunable variables\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## SETUP\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This will set up relative paths to lib\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Direct path to installation\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Windows systems\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Paths (Double escapes needed)\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "## LIBRARY DETECTION\n\n# Optional libraries\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Setup needed variables and libraries\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# On POSIX Lua links to standard math library \"m\"\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Link to dynamic linker library \"dl\"\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Add readline\n",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Add curses\n",
        "Line" : 130,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "## SOURCES\n\n# Generate luaconf.h\n\n#configure_file ( ${LUAJIT_DIR}/luaconf.h.in ${CMAKE_CURRENT_BINARY_DIR}/luaconf.h )\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#if ( LUA_USE_RELATIVE_LOADLIB )\n\n#  list ( APPEND LJLIB_C ${LUAJIT_DIR}/lib_package_rel.c )\n\n#else ()\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#endif ()\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## GENERATE VM\n\n# Build minilua\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Dynasm\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# 2DO: Proper detection of flags\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Raspberry PI, ARM\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Windows is ... special\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# 32bit vs 64bit\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Generate buildvm arch header\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Buildvm\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "## LuaJIT Library\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#if(${BUILD_STATIC_LIB})\n\n#\tadd_library( ${LIB_NAME} STATIC ${LJCORE_C} ${DEPS} )\n\n#\ttarget_link_libraries ( ${LIB_NAME} ${LIBS} )\n\n#else()\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#endif()\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "## LuaJIT Executable\n",
        "Line" : 330,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# On Windows build a no-console variant also\n",
        "Line" : 334,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 34
    },
    "Externals/ode/CMakeLists.txt" : {
      "ObjectId" : "b7e7cc52143ab4565f6a00ca8b14264aa13f1fbd",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindCrypto++.cmake" : {
      "ObjectId" : "6143e69afb01b8521969e0f09d3c96b68420055d",
      "LastModified" : "2018-09-08T16:27:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#https://raw.githubusercontent.com/harningt/cryptoface/7332799df7d9c78012eaa153f6598dcfa7debbc4/Modules/FindCrypto%2B%2B.cmake\n\n# - Find Crypto++\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindFreeImage.cmake" : {
      "ObjectId" : "3e03c123e99499bc3bd2124401a6c168942d9656",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#https://github.com/castano/nvidia-texture-tools/blob/48f5dd4603c9f8ce8d47e8547b8b3c1c71d27da7/cmake/FindFreeImage.cmake\n\n#\n\n# Try to find the FreeImage library and include path.\n\n# Once done this will define\n\n#\n\n# FREEIMAGE_FOUND\n\n# FREEIMAGE_INCLUDE_PATH\n\n# FREEIMAGE_LIBRARY\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindLZO.cmake" : {
      "ObjectId" : "8fdd814c689b1a59128ae411d9d2d94f95e0ed3f",
      "LastModified" : "2018-09-08T16:27:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#https://raw.githubusercontent.com/dfelinto/blender/master/build_files/cmake/Modules/FindLZO.cmake\n\n# - Find LZO library\n\n# Find the native LZO includes and library\n\n# This module defines\n\n#  LZO_INCLUDE_DIRS, where to find lzo1x.h, Set when\n\n#                        LZO_INCLUDE_DIR is found.\n\n#  LZO_LIBRARIES, libraries to link against to use LZO.\n\n#  LZO_ROOT_DIR, The base directory to search for LZO.\n\n#                    This can also be an environment variable.\n\n#  LZO_FOUND, If false, do not try to use LZO.\n\n#\n\n# also defined, but not for general use are\n\n#  LZO_LIBRARY, where to find the LZO library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2015 Blender Foundation.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If LZO_ROOT_DIR was defined in the environment, use it.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Fink\n",
        "Line" : 34,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 35,
        "CharPositionInLine" : 13
      },
      "5" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LZO_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/FindLockFile.cmake" : {
      "ObjectId" : "5334dca873e323d9fa2f17fe807c5627c23fc2ed",
      "LastModified" : "2018-10-07T05:42:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindOGG.cmake" : {
      "ObjectId" : "3d657f8f6e7e79e85d2c5ccefdbd9b06b7888fc4",
      "LastModified" : "2018-10-07T05:42:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#https://raw.githubusercontent.com/freeorion/freeorion/master/cmake/FindOgg.cmake\n\n#.rst:\n\n# FindOgg\n\n# -------\n\n#\n\n# Find the native Ogg includes and library.\n\n#\n\n# IMPORTED Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines :prop_tgt:`IMPORTED` target ``Ogg::Ogg``, if\n\n# Ogg has been found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following variables:\n\n#\n\n# ::\n\n#\n\n#   OGG_INCLUDE_DIRS    - where to find ogg.h, etc.\n\n#   OGG_LIBRARIES       - List of libraries when using ogg.\n\n#   OGG_FOUND           - True if ogg found.\n\n#\n\n# Hints\n\n# ^^^^^\n\n#\n\n# A user may set ``OGGDIR`` environment to a ogg installation root\n\n# to tell this module where to look.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Search OGGDIR first when is set.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Normal search.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Allow OGG_LIBRARY to be set manually, as the location of the\n\n# ogg library\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED argument and set OGG_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindPCRE.cmake" : {
      "ObjectId" : "dbbd60adaa147e1d4ae3bed989386614efc08c55",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2007-2009 LuaDist.\n\n# Created by Peter Kapec <kapecp@gmail.com>\n\n# Redistribution and use of this file is allowed according to the terms of the MIT license.\n\n# For details see the COPYRIGHT file distributed with LuaDist.\n\n#\tNote:\n\n#\t\tSearching headers and libraries is very simple and is NOT as powerful as scripts\n\n#\t\tdistributed with CMake, because LuaDist defines directories to search for.\n\n#\t\tEveryone is encouraged to contact the author with improvements. Maybe this file\n\n#\t\tbecomes part of CMake distribution sometimes.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Find pcre\n\n# Find the native PCRE headers and libraries.\n\n#\n\n# PCRE_INCLUDE_DIRS\t- where to find pcre.h, etc.\n\n# PCRE_LIBRARIES\t- List of libraries when using pcre.\n\n# PCRE_FOUND\t- True if pcre found.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look for the library.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set PCRE_FOUND to TRUE if all listed variables are TRUE.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Copy the results to the output variables.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/FindSDL2.cmake" : {
      "ObjectId" : "58240ecd33a0bea81dbdf4f708097bbfa183dd17",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#https://raw.githubusercontent.com/freeorion/freeorion/master/cmake/FindSDL.cmake\n\n#.rst:\n\n# FindSDL\n\n# -------\n\n#\n\n# Find the native SDL includes and library.\n\n#\n\n# IMPORTED Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines :prop_tgt:`IMPORTED` targets\n\n#\n\n# ::\n\n#\n\n#   ``SDL::SDL``      - The SDL library.\n\n#   ``SDL::main``     - The SDLmain library.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following variables:\n\n#\n\n# ::\n\n#\n\n#   SDL_INCLUDE_DIRS  - where to find SDL.h, etc.\n\n#   SDL_LIBRARIES     - List of librarie when using SDL\n\n#   SDL_VERSION       - SDL version from SDL_version.hpp\n\n#   SDL_MAJOR_VERSION - SDL major version number (X in X.y.z)\n\n#   SDL_MINOR_VERSION - SDL minor version number (Y in x.Y.z)\n\n#   SDL_PATCH_VERSION - SDL patch version number (Z in x.y.Z)\n\n#   SDL_FOUND         - True if SDL found.\n\n#\n\n# Controls\n\n# ^^^^^^^^\n\n#\n\n# ::\n\n#\n\n#   SDL_NO_MAIN       - If set to true the SDLmain library is skipped\n\n#                       from the SDL_LIBRARIES to let the application\n\n#                       handle the various entry point variants used\n\n#                       by different operating systems.\n\n#\n\n# Hints\n\n# ^^^^^\n\n#\n\n# A user may set ``SDL_ROOT`` to a SDL installation root to tell this\n\n# module where to look.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of SDL2_LIBRARY to\n\n# override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n# Copyright 2012 Benjamin Eikel\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search SDL_ROOT first when is set.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Normal search.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Allow SDL_LIBRARY to be set manually, as the location of the\n\n# SDL library\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDL2main. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDL2main for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 109,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# For SDL2main\n",
        "Line" : 127,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\n",
        "Line" : 133,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 8
    },
    "cmake/FindTBB.cmake" : {
      "ObjectId" : "5b4df33db70ae34797d56ea0917217e228af1c2e",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#https://github.com/facebook/hhvm/blob/c45055fc3cc6f4db445e0f5efd979f693f65bd8a/CMake/FindTBB.cmake\n\n# Locate Intel Threading Building Blocks include paths and libraries\n\n# TBB can be found at http://www.threadingbuildingblocks.org/\n\n# Written by Hannes Hofmann, hannes.hofmann _at_ informatik.uni-erlangen.de\n\n# Adapted by Gino van den Bergen gino _at_ dtecta.com\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GvdB: This module uses the environment variable TBB_ARCH_PLATFORM which defines architecture and compiler.\n\n#   e.g. \"ia32/vc8\" or \"em64t/cc4.1.0_libc2.4_kernel2.6.16.21\"\n\n#   TBB_ARCH_PLATFORM is set by the build script tbbvars[.bat|.sh|.csh], which can be found\n\n#   in the TBB installation directory (TBB_INSTALL_DIR).\n\n#\n\n# For backwards compatibility, you may explicitly set the CMake variables TBB_ARCHITECTURE and TBB_COMPILER.\n\n# TBB_ARCHITECTURE     [ ia32 | em64t | itanium ]\n\n#   which architecture to use\n\n# TBB_COMPILER         e.g. vc9 or cc3.2.3_libc2.3.2_kernel2.4.21 or cc4.0.1_os10.4.9\n\n#   which compiler to use (detected automatically on Windows)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This module respects\n\n# TBB_INSTALL_DIR or $ENV{TBB21_INSTALL_DIR} or $ENV{TBB_INSTALL_DIR}\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This module defines\n\n# TBB_INCLUDE_DIRS, where to find task_scheduler_init.h, etc.\n\n# TBB_LIBRARY_DIRS, where to find libtbb, libtbbmalloc\n\n# TBB_INSTALL_DIR, the base TBB install directory\n\n# TBB_LIBRARIES, the libraries to link against to use TBB.\n\n# TBB_DEBUG_LIBRARIES, the libraries to link against to use TBB with debug symbols.\n\n# TBB_FOUND, If false, don't try to use TBB.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# lets try in the obvious places first\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# has em64t/vc8   em64t/vc9\n\n# has ia32/vc7.1  ia32/vc8   ia32/vc9\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#  set(_TBB_LIB_MALLOC_PROXY_NAME \"${_TBB_LIB_NAME}malloc_proxy\")\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# MAC\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# libs: libtbb.dylib, libtbbmalloc.dylib, *_debug\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#    set(_TBB_LIB_MALLOC_PROXY_NAME \"${_TBB_LIB_NAME}malloc_proxy\")\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# has only one flavor: ia32/cc4.0.1_os10.4.9\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# LINUX\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#    set(_TBB_LIB_MALLOC_PROXY_NAME \"${_TBB_LIB_NAME}malloc_proxy\")\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# has em64t/cc3.2.3_libc2.3.2_kernel2.4.21  em64t/cc3.3.3_libc2.3.3_kernel2.6.5  em64t/cc3.4.3_libc2.3.4_kernel2.6.9  em64t/cc4.1.0_libc2.4_kernel2.6.16.21\n\n# has ia32/*\n\n# has itanium/*\n",
        "Line" : 96,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Fix for clang compiler\n\n# https://www.threadingbuildingblocks.org/docs/help/reference/appendices/known_issues/linux_os.html\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# SUN\n\n# not yet supported\n\n# has em64t/cc3.4.3_kernel5.10\n\n# has ia32/*\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#-- Clear the public variables\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#-- Find TBB install dir and set ${_TBB_INSTALL_DIR} and cached ${TBB_INSTALL_DIR}\n\n# first: use CMake variable TBB_INSTALL_DIR\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# second: use environment variable\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Intel recommends setting TBB21_INSTALL_DIR\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# third: try to find path automatically\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# sanity check\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#  find_library(TBB_MALLOC_PROXY_LIBRARY ${_TBB_LIB_MALLOC_PROXY_NAME} ${TBB_LIBRARY_DIR})\n",
        "Line" : 149,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# finally: set the cached CMake variable TBB_INSTALL_DIR\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "#-- Look for include directory and set ${TBB_INCLUDE_DIR}\n",
        "Line" : 164,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "#-- Look for libraries\n\n# GvdB: $ENV{TBB_ARCH_PLATFORM} is set by the build script tbbvars[.bat|.sh|.csh]\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Undeprecated to allow for Windows use.\n",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "#  find_library(TBB_MALLOC_PROXY_LIBRARY ${_TBB_LIB_MALLOC_PROXY_NAME} ${TBB_LIBRARY_DIR} NO_DEFAULT_PATH)\n",
        "Line" : 184,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "#-- Look for debug libraries\n",
        "Line" : 188,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# do only throw fatal, if this pkg is REQUIRED\n",
        "Line" : 215,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 30
    },
    "cmake/FindTheora.cmake" : {
      "ObjectId" : "841f090d62e06334f6eeaa055fcf4dab8d538b64",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#https://raw.githubusercontent.com/Andrettin/Wyrmgus/master/cmake/modules/FindTheora.cmake\n\n# Option for build or not Theora\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006,2007 Laurent Montel, <montel@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 11,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "cmake/cotire.cmake" : {
      "ObjectId" : "97275d649708355f5d8da0f695378e2b9ad9483e",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - cotire (compile time reducer)\n\n#\n\n# See the cotire manual for usage hints.\n\n#\n\n#=============================================================================\n\n# Copyright 2012-2018 Sascha Kratky\n\n#\n\n# Permission is hereby granted, free of charge, to any person\n\n# obtaining a copy of this software and associated documentation\n\n# files (the \"Software\"), to deal in the Software without\n\n# restriction, including without limitation the rights to use,\n\n# copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following\n\n# conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be\n\n# included in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\n# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\n# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\n# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\n# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\n# OTHER DEALINGS IN THE SOFTWARE.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# call cmake_minimum_required, but prevent modification of the CMake policy stack in include mode\n\n# cmake_minimum_required also sets the policy version as a side effect, which we have to avoid\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# activate select policies\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Compiler id for Apple Clang is now AppleClang\n",
        "Line" : 50,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# disallow use of the LOCATION target property\n",
        "Line" : 55,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# targets may not link directly to themselves\n",
        "Line" : 60,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# utility targets may not have link dependencies\n",
        "Line" : 65,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# target in the TARGET signature of add_custom_command() must exist\n",
        "Line" : 70,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# error on non-existent target in get_target_property\n",
        "Line" : 75,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# error on non-existent dependency in add_dependencies\n",
        "Line" : 80,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# do not expand variables in target source entries\n",
        "Line" : 85,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# disallow add_custom_command SOURCE signatures\n",
        "Line" : 90,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# include TARGET_OBJECTS expressions in a target's SOURCES property\n",
        "Line" : 95,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# simplify variable reference and escape sequence evaluation\n",
        "Line" : 100,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# only interpret if() arguments as variables or keywords when unquoted\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# strict checking for break() command\n",
        "Line" : 110,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# get_filename_component returns extension from first occurrence of . in file name\n\n# this function computes the extension from last occurrence of . in file name\n",
        "Line" : 134,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# as of CMake 3.1 target sources may contain generator expressions\n\n# since we cannot obtain required property information about source files added\n\n# through generator expressions at configure time, we filter them out\n",
        "Line" : 187,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# consider source file unless it is excluded explicitly\n",
        "Line" : 209,
        "CharPositionInLine" : 7
      },
      "19" : {
        "Text" : "# add to excluded sources, if file is not ignored and has correct language without having the correct extension\n",
        "Line" : 219,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# separate filtered source files from already cotired ones\n\n# the COTIRE_TARGET property of a source file may be set while a target is being processed by cotire\n",
        "Line" : 228,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# add to excluded sources, if file has custom compile flags\n",
        "Line" : 239,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# add to excluded sources, if file has list of custom compile options\n",
        "Line" : 244,
        "CharPositionInLine" : 5
      },
      "23" : {
        "Text" : "# remove from head\n",
        "Line" : 338,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# BFS traversal of transitive libraries\n",
        "Line" : 350,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# option with separate argument\n",
        "Line" : 374,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# remember option\n",
        "Line" : 378,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# option with joined argument\n",
        "Line" : 381,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# flush remembered option\n",
        "Line" : 385,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# add to unfiltered options\n",
        "Line" : 390,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# collect options from CMake language variables\n",
        "Line" : 428,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "# add target compile flags\n",
        "Line" : 437,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# target compile options\n",
        "Line" : 450,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# interface compile options from linked library targets\n",
        "Line" : 457,
        "CharPositionInLine" : 1
      },
      "34" : {
        "Text" : "# handle language standard properties\n",
        "Line" : 468,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "# used compiler supports language standard levels\n",
        "Line" : 470,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# handle the POSITION_INDEPENDENT_CODE target property\n",
        "Line" : 488,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# handle visibility target properties\n",
        "Line" : 500,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "# platform specific flags\n",
        "Line" : 511,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "# default include dirs\n",
        "Line" : 546,
        "CharPositionInLine" : 1
      },
      "40" : {
        "Text" : "# parse additional include directories from target compile flags\n",
        "Line" : 553,
        "CharPositionInLine" : 1
      },
      "41" : {
        "Text" : "# parse additional system include directories from target compile flags\n",
        "Line" : 565,
        "CharPositionInLine" : 1
      },
      "42" : {
        "Text" : "# target include directories\n",
        "Line" : 577,
        "CharPositionInLine" : 1
      },
      "43" : {
        "Text" : "# interface include directories from linked library targets\n",
        "Line" : 589,
        "CharPositionInLine" : 1
      },
      "44" : {
        "Text" : "# CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE refers to CMAKE_CURRENT_BINARY_DIR and CMAKE_CURRENT_SOURCE_DIR\n\n# at the time, when the target was created. These correspond to the target properties BINARY_DIR and SOURCE_DIR\n\n# which are only available with CMake 3.4 or later.\n",
        "Line" : 597,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# convert Windows paths in include directories to CMake paths\n",
        "Line" : 647,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# CMAKE_INTDIR for multi-configuration build systems\n",
        "Line" : 693,
        "CharPositionInLine" : 1
      },
      "47" : {
        "Text" : "# target export define symbol\n",
        "Line" : 697,
        "CharPositionInLine" : 1
      },
      "48" : {
        "Text" : "# directory compile definitions\n",
        "Line" : 702,
        "CharPositionInLine" : 1
      },
      "49" : {
        "Text" : "# target compile definitions\n",
        "Line" : 711,
        "CharPositionInLine" : 1
      },
      "50" : {
        "Text" : "# interface compile definitions from linked library targets\n",
        "Line" : 720,
        "CharPositionInLine" : 1
      },
      "51" : {
        "Text" : "# parse additional compile definitions from target compile flags\n\n# and do not look at directory compile definitions, which we already handled\n",
        "Line" : 729,
        "CharPositionInLine" : 1
      },
      "52" : {
        "Text" : "# parse target compile flags omitting compile definitions and include directives\n",
        "Line" : 745,
        "CharPositionInLine" : 1
      },
      "53" : {
        "Text" : "# compiler launcher is only supported for Makefile and Ninja\n",
        "Line" : 903,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# IS_NEWER_THAN returns TRUE if both files have the same timestamp\n\n# thus we do the comparison in both directions to exclude ties\n",
        "Line" : 992,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# if path matches exactly, return short non-empty string\n",
        "Line" : 1036,
        "CharPositionInLine" : 3
      },
      "56" : {
        "Text" : "# check header path against ignored and honored include directories\n",
        "Line" : 1044,
        "CharPositionInLine" : 1
      },
      "57" : {
        "Text" : "# header is inside, but could be become outside if there is a shorter outside match\n",
        "Line" : 1047,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# header is outside\n",
        "Line" : 1061,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# heuristic: ignore C headers with embedded parent directory references or \"-fixed\" or \"_fixed\" in path\n\n# these often stem from using GCC #include_next tricks, which may break the precompiled header compilation\n\n# with the error message \"error: no include path in which to search for header.h\"\n",
        "Line" : 1072,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# check header file extension\n",
        "Line" : 1082,
        "CharPositionInLine" : 1
      },
      "61" : {
        "Text" : "# cl.exe /showIncludes produces different output, depending on the language pack used, e.g.:\n\n# English: \"Note: including file:   C:\\directory\\file\"\n\n# German: \"Hinweis: Einlesen der Datei:   C:\\directory\\file\"\n\n# We use a very general regular expression, relying on the presence of the : characters\n",
        "Line" : 1095,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# GCC like output\n",
        "Line" : 1108,
        "CharPositionInLine" : 3
      },
      "63" : {
        "Text" : "# prevent CMake macro invocation errors due to backslash characters in Windows paths\n",
        "Line" : 1124,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "# canonize slashes\n",
        "Line" : 1127,
        "CharPositionInLine" : 1
      },
      "65" : {
        "Text" : "# prevent semicolon from being interpreted as a line separator\n",
        "Line" : 1129,
        "CharPositionInLine" : 1
      },
      "66" : {
        "Text" : "# then separate lines\n",
        "Line" : 1131,
        "CharPositionInLine" : 1
      },
      "67" : {
        "Text" : "# remove duplicate lines to speed up parsing\n",
        "Line" : 1134,
        "CharPositionInLine" : 1
      },
      "68" : {
        "Text" : "# stack keeps track of inside/outside project status of processed header files\n",
        "Line" : 1152,
        "CharPositionInLine" : 1
      },
      "69" : {
        "Text" : "# update stack\n",
        "Line" : 1162,
        "CharPositionInLine" : 4
      },
      "70" : {
        "Text" : "# header is a candidate if it is outside project\n",
        "Line" : 1178,
        "CharPositionInLine" : 4
      },
      "71" : {
        "Text" : "# get parent header file's inside/outside status\n",
        "Line" : 1180,
        "CharPositionInLine" : 5
      },
      "72" : {
        "Text" : "# select header file if parent header file is inside project\n\n# (e.g., a project header file that includes a standard header file)\n",
        "Line" : 1187,
        "CharPositionInLine" : 5
      },
      "73" : {
        "Text" : "# fix header's inside status on stack, it is ignored by extension now\n",
        "Line" : 1196,
        "CharPositionInLine" : 8
      },
      "74" : {
        "Text" : "# for cl.exe do not keep unparsed lines which solely consist of a source file name\n",
        "Line" : 1208,
        "CharPositionInLine" : 5
      },
      "75" : {
        "Text" : "# only consider existing source files for scanning\n",
        "Line" : 1246,
        "CharPositionInLine" : 1
      },
      "76" : {
        "Text" : "# add source files to be scanned\n",
        "Line" : 1257,
        "CharPositionInLine" : 1
      },
      "77" : {
        "Text" : "# cl.exe messes with the output streams unless the environment variable VS_UNICODE_OUTPUT is cleared\n",
        "Line" : 1270,
        "CharPositionInLine" : 2
      },
      "78" : {
        "Text" : "# use absolute path as source file location\n",
        "Line" : 1421,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "# create empty log file\n",
        "Line" : 1462,
        "CharPositionInLine" : 3
      },
      "80" : {
        "Text" : "# Intel compiler requires hdrstop pragma to stop generating PCH file\n",
        "Line" : 1478,
        "CharPositionInLine" : 2
      },
      "81" : {
        "Text" : "# cl.exe options used\n\n# /nologo suppresses display of sign-on banner\n\n# /TC treat all files named on the command line as C source files\n\n# /TP treat all files named on the command line as C++ source files\n\n# /EP preprocess to stdout without #line directives\n\n# /showIncludes list include files\n",
        "Line" : 1520,
        "CharPositionInLine" : 2
      },
      "82" : {
        "Text" : "# append to list\n",
        "Line" : 1529,
        "CharPositionInLine" : 3
      },
      "83" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1532,
        "CharPositionInLine" : 3
      },
      "84" : {
        "Text" : "# GCC options used\n\n# -H print the name of each header file used\n\n# -E invoke preprocessor\n\n# -fdirectives-only do not expand macros, requires GCC >= 4.3\n",
        "Line" : 1536,
        "CharPositionInLine" : 2
      },
      "85" : {
        "Text" : "# append to list\n",
        "Line" : 1541,
        "CharPositionInLine" : 3
      },
      "86" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1547,
        "CharPositionInLine" : 3
      },
      "87" : {
        "Text" : "# Clang options used\n\n# -H print the name of each header file used\n\n# -E invoke preprocessor\n\n# -fno-color-diagnostics do not print diagnostics in color\n\n# -Eonly just run preprocessor, no output\n",
        "Line" : 1555,
        "CharPositionInLine" : 3
      },
      "88" : {
        "Text" : "# append to list\n",
        "Line" : 1561,
        "CharPositionInLine" : 4
      },
      "89" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1564,
        "CharPositionInLine" : 4
      },
      "90" : {
        "Text" : "# Clang-cl.exe options used\n\n# /TC treat all files named on the command line as C source files\n\n# /TP treat all files named on the command line as C++ source files\n\n# /EP preprocess to stdout without #line directives\n\n# -H print the name of each header file used\n\n# -fno-color-diagnostics do not print diagnostics in color\n\n# -Eonly just run preprocessor, no output\n",
        "Line" : 1568,
        "CharPositionInLine" : 3
      },
      "91" : {
        "Text" : "# append to list\n",
        "Line" : 1578,
        "CharPositionInLine" : 4
      },
      "92" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1581,
        "CharPositionInLine" : 4
      },
      "93" : {
        "Text" : "# Windows Intel options used\n\n# /nologo do not display compiler version information\n\n# /QH display the include file order\n\n# /EP preprocess to stdout, omitting #line directives\n\n# /TC process all source or unrecognized file types as C source files\n\n# /TP process all source or unrecognized file types as C++ source files\n",
        "Line" : 1587,
        "CharPositionInLine" : 3
      },
      "94" : {
        "Text" : "# append to list\n",
        "Line" : 1596,
        "CharPositionInLine" : 4
      },
      "95" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1599,
        "CharPositionInLine" : 4
      },
      "96" : {
        "Text" : "# Linux / Mac OS X Intel options used\n\n# -H print the name of each header file used\n\n# -EP preprocess to stdout, omitting #line directives\n\n# -Kc++ process all source or unrecognized file types as C++ source files\n",
        "Line" : 1603,
        "CharPositionInLine" : 3
      },
      "97" : {
        "Text" : "# append to list\n",
        "Line" : 1608,
        "CharPositionInLine" : 4
      },
      "98" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1614,
        "CharPositionInLine" : 4
      },
      "99" : {
        "Text" : "# cl.exe options used\n\n# /Yc creates a precompiled header file\n\n# /Fp specifies precompiled header binary file name\n\n# /FI forces inclusion of file\n\n# /TC treat all files named on the command line as C source files\n\n# /TP treat all files named on the command line as C++ source files\n\n# /Zs syntax check only\n\n# /Zm precompiled header memory allocation scaling factor\n",
        "Line" : 1633,
        "CharPositionInLine" : 2
      },
      "100" : {
        "Text" : "# append to list\n",
        "Line" : 1644,
        "CharPositionInLine" : 3
      },
      "101" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1651,
        "CharPositionInLine" : 3
      },
      "102" : {
        "Text" : "# GCC options used\n\n# -x specify the source language\n\n# -c compile but do not link\n\n# -o place output in file\n\n# note that we cannot use -w to suppress all warnings upon pre-compiling, because turning off a warning may\n\n# alter compile flags as a side effect (e.g., -Wwrite-string implies -fconst-strings)\n",
        "Line" : 1658,
        "CharPositionInLine" : 2
      },
      "103" : {
        "Text" : "# append to list\n",
        "Line" : 1667,
        "CharPositionInLine" : 3
      },
      "104" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1670,
        "CharPositionInLine" : 3
      },
      "105" : {
        "Text" : "# Clang options used\n\n# -x specify the source language\n\n# -c compile but do not link\n\n# -o place output in file\n\n# -fno-pch-timestamp disable inclusion of timestamp in precompiled headers (clang 4.0.0+)\n",
        "Line" : 1675,
        "CharPositionInLine" : 3
      },
      "106" : {
        "Text" : "# append to list\n",
        "Line" : 1683,
        "CharPositionInLine" : 4
      },
      "107" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1689,
        "CharPositionInLine" : 4
      },
      "108" : {
        "Text" : "# Clang-cl.exe options used\n\n# /Yc creates a precompiled header file\n\n# /Fp specifies precompiled header binary file name\n\n# /FI forces inclusion of file\n\n# /Zs syntax check only\n\n# /TC treat all files named on the command line as C source files\n\n# /TP treat all files named on the command line as C++ source files\n",
        "Line" : 1696,
        "CharPositionInLine" : 3
      },
      "109" : {
        "Text" : "# append to list\n",
        "Line" : 1706,
        "CharPositionInLine" : 4
      },
      "110" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1710,
        "CharPositionInLine" : 4
      },
      "111" : {
        "Text" : "# Windows Intel options used\n\n# /nologo do not display compiler version information\n\n# /Yc create a precompiled header (PCH) file\n\n# /Fp specify a path or file name for precompiled header files\n\n# /FI tells the preprocessor to include a specified file name as the header file\n\n# /TC process all source or unrecognized file types as C source files\n\n# /TP process all source or unrecognized file types as C++ source files\n\n# /Zs syntax check only\n\n# /Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1719,
        "CharPositionInLine" : 3
      },
      "112" : {
        "Text" : "# append to list\n",
        "Line" : 1731,
        "CharPositionInLine" : 4
      },
      "113" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1738,
        "CharPositionInLine" : 4
      },
      "114" : {
        "Text" : "# Linux / Mac OS X Intel options used\n\n# -pch-dir location for precompiled header files\n\n# -pch-create name of the precompiled header (PCH) to create\n\n# -Kc++ process all source or unrecognized file types as C++ source files\n\n# -fsyntax-only check only for correct syntax\n\n# -Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1745,
        "CharPositionInLine" : 3
      },
      "115" : {
        "Text" : "# append to list\n",
        "Line" : 1760,
        "CharPositionInLine" : 4
      },
      "116" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1771,
        "CharPositionInLine" : 4
      },
      "117" : {
        "Text" : "# cl.exe options used\n\n# /Yu uses a precompiled header file during build\n\n# /Fp specifies precompiled header binary file name\n\n# /FI forces inclusion of file\n\n# /Zm precompiled header memory allocation scaling factor\n",
        "Line" : 1790,
        "CharPositionInLine" : 2
      },
      "118" : {
        "Text" : "# append to list\n",
        "Line" : 1798,
        "CharPositionInLine" : 4
      },
      "119" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1804,
        "CharPositionInLine" : 4
      },
      "120" : {
        "Text" : "# no precompiled header, force inclusion of prefix header\n",
        "Line" : 1811,
        "CharPositionInLine" : 3
      },
      "121" : {
        "Text" : "# append to list\n",
        "Line" : 1813,
        "CharPositionInLine" : 4
      },
      "122" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1816,
        "CharPositionInLine" : 4
      },
      "123" : {
        "Text" : "# GCC options used\n\n# -include process include file as the first line of the primary source file\n\n# -Winvalid-pch warns if precompiled header is found but cannot be used\n\n# note: ccache requires the -include flag to be used in order to process precompiled header correctly\n",
        "Line" : 1821,
        "CharPositionInLine" : 2
      },
      "124" : {
        "Text" : "# append to list\n",
        "Line" : 1826,
        "CharPositionInLine" : 3
      },
      "125" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1829,
        "CharPositionInLine" : 3
      },
      "126" : {
        "Text" : "# Clang options used\n\n# -include process include file as the first line of the primary source file\n\n# note: ccache requires the -include flag to be used in order to process precompiled header correctly\n",
        "Line" : 1834,
        "CharPositionInLine" : 3
      },
      "127" : {
        "Text" : "# append to list\n",
        "Line" : 1838,
        "CharPositionInLine" : 4
      },
      "128" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1841,
        "CharPositionInLine" : 4
      },
      "129" : {
        "Text" : "# Clang-cl.exe options used\n\n# /Yu uses a precompiled header file during build\n\n# /Fp specifies precompiled header binary file name\n\n# /FI forces inclusion of file\n",
        "Line" : 1845,
        "CharPositionInLine" : 3
      },
      "130" : {
        "Text" : "# append to list\n",
        "Line" : 1851,
        "CharPositionInLine" : 5
      },
      "131" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1854,
        "CharPositionInLine" : 5
      },
      "132" : {
        "Text" : "# no precompiled header, force inclusion of prefix header\n",
        "Line" : 1858,
        "CharPositionInLine" : 4
      },
      "133" : {
        "Text" : "# append to list\n",
        "Line" : 1860,
        "CharPositionInLine" : 5
      },
      "134" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1863,
        "CharPositionInLine" : 5
      },
      "135" : {
        "Text" : "# Windows Intel options used\n\n# /Yu use a precompiled header (PCH) file\n\n# /Fp specify a path or file name for precompiled header files\n\n# /FI tells the preprocessor to include a specified file name as the header file\n\n# /Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1871,
        "CharPositionInLine" : 3
      },
      "136" : {
        "Text" : "# append to list\n",
        "Line" : 1879,
        "CharPositionInLine" : 5
      },
      "137" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1885,
        "CharPositionInLine" : 5
      },
      "138" : {
        "Text" : "# no precompiled header, force inclusion of prefix header\n",
        "Line" : 1892,
        "CharPositionInLine" : 4
      },
      "139" : {
        "Text" : "# append to list\n",
        "Line" : 1894,
        "CharPositionInLine" : 5
      },
      "140" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1897,
        "CharPositionInLine" : 5
      },
      "141" : {
        "Text" : "# Linux / Mac OS X Intel options used\n\n# -pch-dir location for precompiled header files\n\n# -pch-use name of the precompiled header (PCH) to use\n\n# -include process include file as the first line of the primary source file\n\n# -Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1902,
        "CharPositionInLine" : 3
      },
      "142" : {
        "Text" : "# append to list\n",
        "Line" : 1915,
        "CharPositionInLine" : 5
      },
      "143" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1923,
        "CharPositionInLine" : 5
      },
      "144" : {
        "Text" : "# no precompiled header, force inclusion of prefix header\n",
        "Line" : 1932,
        "CharPositionInLine" : 4
      },
      "145" : {
        "Text" : "# append to list\n",
        "Line" : 1934,
        "CharPositionInLine" : 5
      },
      "146" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1937,
        "CharPositionInLine" : 5
      },
      "147" : {
        "Text" : "# cl.exe messes with the output streams unless the environment variable VS_UNICODE_OUTPUT is cleared\n",
        "Line" : 1974,
        "CharPositionInLine" : 2
      },
      "148" : {
        "Text" : "# Newer versions of Clang embed a compilation timestamp into the precompiled header binary,\n\n# which results in \"file has been modified since the precompiled header was built\" errors if ccache is used.\n\n# We work around the problem by disabling ccache upon pre-compiling the prefix header.\n",
        "Line" : 1979,
        "CharPositionInLine" : 3
      },
      "149" : {
        "Text" : "# PCH supported since Visual Studio C++ 6.0\n\n# and CMake does not support an earlier version\n",
        "Line" : 1998,
        "CharPositionInLine" : 2
      },
      "150" : {
        "Text" : "# GCC PCH support requires version >= 3.4\n",
        "Line" : 2002,
        "CharPositionInLine" : 2
      },
      "151" : {
        "Text" : "# all Unix Clang versions have PCH support\n",
        "Line" : 2010,
        "CharPositionInLine" : 3
      },
      "152" : {
        "Text" : "# only clang-cl is supported under Windows\n",
        "Line" : 2013,
        "CharPositionInLine" : 3
      },
      "153" : {
        "Text" : "# Intel PCH support requires version >= 8.0.0\n",
        "Line" : 2020,
        "CharPositionInLine" : 2
      },
      "154" : {
        "Text" : "# check if ccache is used as a compiler launcher\n",
        "Line" : 2029,
        "CharPositionInLine" : 1
      },
      "155" : {
        "Text" : "# verify that ccache configuration is compatible with precompiled headers\n\n# always check environment variable CCACHE_SLOPPINESS, because earlier versions of ccache\n\n# do not report the \"sloppiness\" setting correctly upon printing ccache configuration\n",
        "Line" : 2033,
        "CharPositionInLine" : 2
      },
      "156" : {
        "Text" : "# PCH compilation not supported by GCC / Clang for multi-architecture builds (e.g., i386, x86_64)\n",
        "Line" : 2066,
        "CharPositionInLine" : 2
      },
      "157" : {
        "Text" : "# ${CMAKE_CFG_INTDIR} may reference a build-time variable when using a generator which supports configuration types\n",
        "Line" : 2085,
        "CharPositionInLine" : 1
      },
      "158" : {
        "Text" : "# start new unity file segment\n",
        "Line" : 2128,
        "CharPositionInLine" : 4
      },
      "159" : {
        "Text" : "# there is only a single unity file\n",
        "Line" : 2139,
        "CharPositionInLine" : 2
      },
      "160" : {
        "Text" : "# end with final unity file segment\n",
        "Line" : 2142,
        "CharPositionInLine" : 2
      },
      "161" : {
        "Text" : "# For Xcode, we completely hand off the compilation of the prefix header to the IDE\n",
        "Line" : 2213,
        "CharPositionInLine" : 4
      },
      "162" : {
        "Text" : "# MSVC uses the extension .pch added to the prefix header base name\n",
        "Line" : 2218,
        "CharPositionInLine" : 4
      },
      "163" : {
        "Text" : "# Clang looks for a precompiled header corresponding to the prefix header with the extension .pch appended\n",
        "Line" : 2221,
        "CharPositionInLine" : 4
      },
      "164" : {
        "Text" : "# GCC looks for a precompiled header corresponding to the prefix header with the extension .gch appended\n",
        "Line" : 2224,
        "CharPositionInLine" : 4
      },
      "165" : {
        "Text" : "# Intel uses the extension .pchi added to the prefix header base name\n",
        "Line" : 2227,
        "CharPositionInLine" : 4
      },
      "166" : {
        "Text" : "# depend on target's generated source files\n",
        "Line" : 2259,
        "CharPositionInLine" : 1
      },
      "167" : {
        "Text" : "# but omit all generated source files that have the COTIRE_EXCLUDED property set to true\n",
        "Line" : 2263,
        "CharPositionInLine" : 2
      },
      "168" : {
        "Text" : "# and omit all generated source files that have the COTIRE_DEPENDENCY property set to false explicitly\n",
        "Line" : 2268,
        "CharPositionInLine" : 2
      },
      "169" : {
        "Text" : "# depend on target source files marked with custom COTIRE_DEPENDENCY property\n",
        "Line" : 2285,
        "CharPositionInLine" : 1
      },
      "170" : {
        "Text" : "# set up variables to be configured\n",
        "Line" : 2298,
        "CharPositionInLine" : 1
      },
      "171" : {
        "Text" : "# set up COTIRE_TARGET_SOURCES\n",
        "Line" : 2323,
        "CharPositionInLine" : 1
      },
      "172" : {
        "Text" : "# use absolute paths for generated files only, retrieving the LOCATION property is an expensive operation\n",
        "Line" : 2328,
        "CharPositionInLine" : 3
      },
      "173" : {
        "Text" : "# copy variable definitions to cotire target script\n",
        "Line" : 2335,
        "CharPositionInLine" : 1
      },
      "174" : {
        "Text" : "# omit COTIRE_*_INIT variables\n",
        "Line" : 2338,
        "CharPositionInLine" : 1
      },
      "175" : {
        "Text" : "# omit COTIRE_VERBOSE which is passed as a CMake define on command line\n",
        "Line" : 2343,
        "CharPositionInLine" : 1
      },
      "176" : {
        "Text" : "# generate target script file\n",
        "Line" : 2366,
        "CharPositionInLine" : 1
      },
      "177" : {
        "Text" : "# use file(GENERATE ...) to expand generator expressions in the target script at CMake generate-time\n",
        "Line" : 2371,
        "CharPositionInLine" : 2
      },
      "178" : {
        "Text" : "# for MSVC, Intel and Clang-cl, we attach the precompiled header compilation to the host file\n\n# the remaining files include the precompiled header, see cotire_setup_pch_file_inclusion\n",
        "Line" : 2386,
        "CharPositionInLine" : 2
      },
      "179" : {
        "Text" : "# make object file generated from host file depend on prefix header\n",
        "Line" : 2395,
        "CharPositionInLine" : 3
      },
      "180" : {
        "Text" : "# mark host file as cotired to prevent it from being used in another cotired target\n",
        "Line" : 2397,
        "CharPositionInLine" : 3
      },
      "181" : {
        "Text" : "# for makefile based generator, we add a custom command to precompile the prefix header\n",
        "Line" : 2401,
        "CharPositionInLine" : 2
      },
      "182" : {
        "Text" : "# make precompiled header compilation depend on the actual compiler executable used to force\n\n# re-compilation when the compiler executable is updated. This prevents \"created by a different GCC executable\"\n\n# warnings when the precompiled header is included.\n",
        "Line" : 2410,
        "CharPositionInLine" : 3
      },
      "183" : {
        "Text" : "# for MSVC, Intel and clang-cl, we include the precompiled header in all but the host file\n\n# the host file does the precompiled header compilation, see cotire_setup_pch_file_compilation\n",
        "Line" : 2433,
        "CharPositionInLine" : 2
      },
      "184" : {
        "Text" : "# mark sources as cotired to prevent them from being used in another cotired target\n",
        "Line" : 2438,
        "CharPositionInLine" : 3
      },
      "185" : {
        "Text" : "# make object files generated from source files depend on precompiled header\n",
        "Line" : 2445,
        "CharPositionInLine" : 3
      },
      "186" : {
        "Text" : "# for makefile based generator, we force the inclusion of the prefix header for a subset\n\n# of the source files, if this is a multi-language target or has excluded files\n",
        "Line" : 2451,
        "CharPositionInLine" : 3
      },
      "187" : {
        "Text" : "# mark sources as cotired to prevent them from being used in another cotired target\n",
        "Line" : 2458,
        "CharPositionInLine" : 3
      },
      "188" : {
        "Text" : "# make object files generated from source files depend on precompiled header\n",
        "Line" : 2461,
        "CharPositionInLine" : 2
      },
      "189" : {
        "Text" : "# force the inclusion of the prefix header for the given source files\n",
        "Line" : 2468,
        "CharPositionInLine" : 1
      },
      "190" : {
        "Text" : "# mark sources as cotired to prevent them from being used in another cotired target\n",
        "Line" : 2475,
        "CharPositionInLine" : 1
      },
      "191" : {
        "Text" : "# make object files generated from source files depend on prefix header\n",
        "Line" : 2477,
        "CharPositionInLine" : 1
      },
      "192" : {
        "Text" : "# for Xcode, we attach a pre-build action to generate the unity sources and prefix headers\n",
        "Line" : 2541,
        "CharPositionInLine" : 2
      },
      "193" : {
        "Text" : "# we also generate a generic, single prefix header which includes all language specific prefix headers\n",
        "Line" : 2552,
        "CharPositionInLine" : 3
      },
      "194" : {
        "Text" : "# because CMake PRE_BUILD command does not support dependencies,\n\n# we check dependencies explicity in cotire script mode when the pre-build action is run\n",
        "Line" : 2563,
        "CharPositionInLine" : 2
      },
      "195" : {
        "Text" : "# make Xcode precompile the generated prefix header with ProcessPCH and ProcessPCH++\n",
        "Line" : 2571,
        "CharPositionInLine" : 2
      },
      "196" : {
        "Text" : "# for makefile based generator, we force inclusion of the prefix header for all target source files\n\n# if this is a single-language target without any excluded files\n",
        "Line" : 2575,
        "CharPositionInLine" : 2
      },
      "197" : {
        "Text" : "# for MSVC, Intel and clang-cl, precompiled header inclusion is always done on the source file level\n\n# see cotire_setup_pch_file_inclusion\n",
        "Line" : 2579,
        "CharPositionInLine" : 3
      },
      "198" : {
        "Text" : "# set up compiled unity source dependencies via OBJECT_DEPENDS\n\n# this ensures that missing source files are generated before the unity file is compiled\n",
        "Line" : 2602,
        "CharPositionInLine" : 2
      },
      "199" : {
        "Text" : "# the OBJECT_DEPENDS property requires a list of full paths\n",
        "Line" : 2608,
        "CharPositionInLine" : 3
      },
      "200" : {
        "Text" : "# unity file compilation results in potentially huge object file,\n\n# thus use /bigobj by default unter cl.exe and Windows Intel\n",
        "Line" : 2617,
        "CharPositionInLine" : 3
      },
      "201" : {
        "Text" : "# CMake 3.1.0 supports generator expressions in arguments to DEPENDS\n",
        "Line" : 2626,
        "CharPositionInLine" : 3
      },
      "202" : {
        "Text" : "# make prefix header generation depend on the actual compiler executable used to force\n\n# re-generation when the compiler executable is updated. This prevents \"file not found\"\n\n# errors for compiler version specific system header files.\n",
        "Line" : 2656,
        "CharPositionInLine" : 1
      },
      "203" : {
        "Text" : "# prevent pre-processing errors upon generating the prefix header when a target's generated include file does not yet exist\n\n# we do not add a file-level dependency for the target's generated files though, because we only want to depend on their existence\n\n# thus we make the prefix header generation depend on a custom helper target which triggers the generation of the files\n",
        "Line" : 2674,
        "CharPositionInLine" : 1
      },
      "204" : {
        "Text" : "# custom helper target has already been generated while processing a different language\n",
        "Line" : 2679,
        "CharPositionInLine" : 2
      },
      "205" : {
        "Text" : "# GNU and Clang require indirect compilation of the prefix header to make them honor the system_header pragma\n",
        "Line" : 2704,
        "CharPositionInLine" : 2
      },
      "206" : {
        "Text" : "# set up generation of a prefix source file which includes the prefix header\n",
        "Line" : 2713,
        "CharPositionInLine" : 2
      },
      "207" : {
        "Text" : "# GNU and Clang require indirect compilation of the prefix header to make them honor the system_header pragma\n",
        "Line" : 2722,
        "CharPositionInLine" : 2
      },
      "208" : {
        "Text" : "# set up generation of a prefix source file which includes the prefix header\n",
        "Line" : 2729,
        "CharPositionInLine" : 2
      },
      "209" : {
        "Text" : "# for Xcode, we cannot apply the precompiled header to individual sources, only to the whole target\n",
        "Line" : 2907,
        "CharPositionInLine" : 3
      },
      "210" : {
        "Text" : "# for Xcode, we cannot apply the required PRE_BUILD action to generate the prefix header to an OBJECT_LIBRARY target\n",
        "Line" : 2911,
        "CharPositionInLine" : 3
      },
      "211" : {
        "Text" : "# disable unity builds if automatic Qt processing is used\n",
        "Line" : 2917,
        "CharPositionInLine" : 2
      },
      "212" : {
        "Text" : "# cache message to avoid redundant messages on re-configure\n",
        "Line" : 2939,
        "CharPositionInLine" : 3
      },
      "213" : {
        "Text" : "# use all available cores\n",
        "Line" : 2963,
        "CharPositionInLine" : 3
      },
      "214" : {
        "Text" : "# check for user provided unity source file list\n",
        "Line" : 2988,
        "CharPositionInLine" : 1
      },
      "215" : {
        "Text" : "# set up unity files for parallel compilation\n",
        "Line" : 2995,
        "CharPositionInLine" : 1
      },
      "216" : {
        "Text" : "# set up single unity file for prefix header generation\n",
        "Line" : 3005,
        "CharPositionInLine" : 1
      },
      "217" : {
        "Text" : "# set up prefix header\n",
        "Line" : 3010,
        "CharPositionInLine" : 1
      },
      "218" : {
        "Text" : "# check for user provided prefix header files\n",
        "Line" : 3012,
        "CharPositionInLine" : 2
      },
      "219" : {
        "Text" : "# check if selected language has enough sources at all\n",
        "Line" : 3021,
        "CharPositionInLine" : 2
      },
      "220" : {
        "Text" : "# first file in _sourceFiles is passed as the host file\n",
        "Line" : 3031,
        "CharPositionInLine" : 4
      },
      "221" : {
        "Text" : "# user provided prefix header must be included unconditionally\n",
        "Line" : 3038,
        "CharPositionInLine" : 3
      },
      "222" : {
        "Text" : "# mark target as cotired for language\n",
        "Line" : 3042,
        "CharPositionInLine" : 1
      },
      "223" : {
        "Text" : "# for makefile based generators, we add a custom target to trigger the generation of the cotire related files\n",
        "Line" : 3070,
        "CharPositionInLine" : 2
      },
      "224" : {
        "Text" : "# MSVC, Intel and clang-cl only create precompiled header as a side effect\n",
        "Line" : 3076,
        "CharPositionInLine" : 4
      },
      "225" : {
        "Text" : "# for other generators, we add the \"clean all\" target to clean up the precompiled header\n",
        "Line" : 3091,
        "CharPositionInLine" : 2
      },
      "226" : {
        "Text" : "# remove source files that are included in the unity source\n",
        "Line" : 3112,
        "CharPositionInLine" : 3
      },
      "227" : {
        "Text" : "# add unity source files instead\n",
        "Line" : 3120,
        "CharPositionInLine" : 3
      },
      "228" : {
        "Text" : "# handle object libraries which are part of the target's sources\n",
        "Line" : 3124,
        "CharPositionInLine" : 1
      },
      "229" : {
        "Text" : "# user provided prefix header must be included unconditionally by unity sources\n",
        "Line" : 3144,
        "CharPositionInLine" : 4
      },
      "230" : {
        "Text" : "# determine unity target sub type\n",
        "Line" : 3156,
        "CharPositionInLine" : 1
      },
      "231" : {
        "Text" : "# determine unity target sources\n",
        "Line" : 3166,
        "CharPositionInLine" : 1
      },
      "232" : {
        "Text" : "# prevent AUTOMOC, AUTOUIC and AUTORCC properties from being set when the unity target is created\n",
        "Line" : 3169,
        "CharPositionInLine" : 1
      },
      "233" : {
        "Text" : "# generate unity target\n",
        "Line" : 3176,
        "CharPositionInLine" : 1
      },
      "234" : {
        "Text" : "# copy output location properties\n",
        "Line" : 3182,
        "CharPositionInLine" : 1
      },
      "235" : {
        "Text" : "# append relative COTIRE_UNITY_OUTPUT_DIRECTORY to target's actual output directory\n",
        "Line" : 3192,
        "CharPositionInLine" : 3
      },
      "236" : {
        "Text" : "# copy output name\n",
        "Line" : 3217,
        "CharPositionInLine" : 1
      },
      "237" : {
        "Text" : "# copy compile stuff\n",
        "Line" : 3225,
        "CharPositionInLine" : 1
      },
      "238" : {
        "Text" : "# copy compile features\n",
        "Line" : 3237,
        "CharPositionInLine" : 1
      },
      "239" : {
        "Text" : "# copy interface stuff\n",
        "Line" : 3242,
        "CharPositionInLine" : 1
      },
      "240" : {
        "Text" : "# copy link stuff\n",
        "Line" : 3250,
        "CharPositionInLine" : 1
      },
      "241" : {
        "Text" : "# copy cmake stuff\n",
        "Line" : 3262,
        "CharPositionInLine" : 1
      },
      "242" : {
        "Text" : "# copy Apple platform specific stuff\n",
        "Line" : 3265,
        "CharPositionInLine" : 1
      },
      "243" : {
        "Text" : "# copy Windows platform specific stuff\n",
        "Line" : 3271,
        "CharPositionInLine" : 1
      },
      "244" : {
        "Text" : "# copy Android platform specific stuff\n",
        "Line" : 3287,
        "CharPositionInLine" : 1
      },
      "245" : {
        "Text" : "# copy CUDA platform specific stuff\n",
        "Line" : 3295,
        "CharPositionInLine" : 1
      },
      "246" : {
        "Text" : "# use output name from original target\n",
        "Line" : 3299,
        "CharPositionInLine" : 1
      },
      "247" : {
        "Text" : "# use export symbol from original target\n",
        "Line" : 3304,
        "CharPositionInLine" : 1
      },
      "248" : {
        "Text" : "# enable parallel compilation for MSVC\n",
        "Line" : 3312,
        "CharPositionInLine" : 1
      },
      "249" : {
        "Text" : "# check if cotire can be applied to target at all\n",
        "Line" : 3335,
        "CharPositionInLine" : 1
      },
      "250" : {
        "Text" : "# resolve alias\n",
        "Line" : 3347,
        "CharPositionInLine" : 1
      },
      "251" : {
        "Text" : "# check if target needs to be cotired for build type\n\n# when using configuration types, the test is performed at build time\n",
        "Line" : 3355,
        "CharPositionInLine" : 1
      },
      "252" : {
        "Text" : "# when not using configuration types, immediately create cotire intermediate dir\n",
        "Line" : 3371,
        "CharPositionInLine" : 1
      },
      "253" : {
        "Text" : "# choose languages that apply to the target\n",
        "Line" : 3376,
        "CharPositionInLine" : 1
      },
      "254" : {
        "Text" : "# use target's corresponding unity target, if available\n",
        "Line" : 3425,
        "CharPositionInLine" : 4
      },
      "255" : {
        "Text" : "# filter files in intermediate directory\n",
        "Line" : 3494,
        "CharPositionInLine" : 1
      },
      "256" : {
        "Text" : "# cotire is being run in script mode\n\n# locate -P on command args\n",
        "Line" : 3581,
        "CharPositionInLine" : 1
      },
      "257" : {
        "Text" : "# include target script if available\n",
        "Line" : 3593,
        "CharPositionInLine" : 1
      },
      "258" : {
        "Text" : "# the included target scripts sets up additional variables relating to the target (e.g., COTIRE_TARGET_SOURCES)\n",
        "Line" : 3595,
        "CharPositionInLine" : 2
      },
      "259" : {
        "Text" : "# check if target has been cotired for actual build type COTIRE_BUILD_TYPE\n",
        "Line" : 3611,
        "CharPositionInLine" : 1
      },
      "260" : {
        "Text" : "# executing pre-build action under Xcode, check dependency on target script\n",
        "Line" : 3631,
        "CharPositionInLine" : 3
      },
      "261" : {
        "Text" : "# executing custom command, no need to re-check for dependencies\n",
        "Line" : 3634,
        "CharPositionInLine" : 3
      },
      "262" : {
        "Text" : "# executing pre-build action under Xcode, check dependency on unity file and prefix dependencies\n",
        "Line" : 3653,
        "CharPositionInLine" : 3
      },
      "263" : {
        "Text" : "# executing custom command, no need to re-check for dependencies\n",
        "Line" : 3656,
        "CharPositionInLine" : 3
      },
      "264" : {
        "Text" : "# executing pre-build action under Xcode, check dependency on files to be combined\n",
        "Line" : 3724,
        "CharPositionInLine" : 3
      },
      "265" : {
        "Text" : "# executing custom command, no need to re-check for dependencies\n",
        "Line" : 3727,
        "CharPositionInLine" : 3
      },
      "266" : {
        "Text" : "# cotire is being run in include mode\n\n# set up all variable and property definitions\n",
        "Line" : 3750,
        "CharPositionInLine" : 1
      },
      "267" : {
        "Text" : "# enable parallelization for generators that run multiple jobs by default\n",
        "Line" : 3787,
        "CharPositionInLine" : 3
      },
      "268" : {
        "Text" : "# MSVC default PCH memory scaling factor of 100 percent (75 MB) is too small for template heavy C++ code\n\n# use a bigger default factor of 170 percent (128 MB)\n",
        "Line" : 3821,
        "CharPositionInLine" : 2
      },
      "269" : {
        "Text" : "# generated Ninja build files do not work if the unity target produces the same output file as the cotired target\n",
        "Line" : 3835,
        "CharPositionInLine" : 3
      },
      "270" : {
        "Text" : "# define cotire cache variables\n",
        "Line" : 3842,
        "CharPositionInLine" : 1
      },
      "271" : {
        "Text" : "# define cotire directory properties\n",
        "Line" : 3895,
        "CharPositionInLine" : 1
      },
      "272" : {
        "Text" : "# define cotire target properties\n",
        "Line" : 3967,
        "CharPositionInLine" : 1
      },
      "273" : {
        "Text" : "# define cotire source properties\n",
        "Line" : 4131,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 274
    },
    "cmake/utils.cmake" : {
      "ObjectId" : "c380e23740f22b55e15092c893463728bc0f1f70",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "ccece4ac50b0e976ab07e7d525c84def9d0ab057",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Layers/CMakeLists.txt" : {
      "ObjectId" : "2ac726ff79a0248c29bc98a8bbeb50fff95a942c",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(xrRenderPC_R1)\n\n#add_subdirectory(xrRenderPC_R2)\n\n#add_subdirectory(xrRenderPC_R3)\n\n#add_subdirectory(xrRenderPC_R4)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/Layers/xrAPI/CMakeLists.txt" : {
      "ObjectId" : "5f4f0df6ab7a43382833f3e065c93aead30b2ff1",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Layers/xrRenderPC_GL/CMakeLists.txt" : {
      "ObjectId" : "754dd2fa315ebb2d490bcf0e74a520c2a28098aa",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Layers/xrRenderPC_R1/CMakeLists.txt" : {
      "ObjectId" : "16162f75f66bcec29b03023fe867f0e2b96ecbe3",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#list(REMOVE_ITEM ${PROJECT_NAME}__SOURCES \"${CMAKE_CURRENT_SOURCE_DIR}/./LevelCompilerLoggerWindow.cpp\")\n\n#list(REMOVE_ITEM ${PROJECT_NAME}__INCLUDES \"${CMAKE_CURRENT_SOURCE_DIR}/./LevelCompilerLoggerWindow.hpp\")\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/utils/CMakeLists.txt" : {
      "ObjectId" : "3613b9be9f0db414760c6a9a1339e461800ae0cd",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/utils/mp_gpprof_server/Makefile" : {
      "ObjectId" : "7dc8d8d175e42035ccf769ba3f60b3a6440546fe",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#use these to specify debug and release configurations\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/utils/mp_gpprof_server/libraries/fcgi-2.4.0/Makefile.am" : {
      "ObjectId" : "f666b13758b6bf800ed131376f46780acc340640",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n#  Makefile for FastCGI development kit\n\n#\n\n#  $Id: Makefile.am,v 1.7 2001/12/22 13:05:39 robs Exp $\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/utils/mp_gpprof_server/libraries/fcgi-2.4.0/cgi-fcgi/Makefile.am" : {
      "ObjectId" : "4a5c685bce01b380ec578800f6c564c72ca14cf8",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# $Id: Makefile.am,v 1.4 2001/12/22 03:16:22 robs Exp $\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/utils/mp_gpprof_server/libraries/fcgi-2.4.0/include/Makefile.am" : {
      "ObjectId" : "417a561372b5668ad42d4d1873d635389cca354a",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# $Id: Makefile.am,v 1.2 2001/09/24 18:03:05 skimo Exp $\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/utils/mp_gpprof_server/libraries/fcgi-2.4.0/libfcgi/Makefile.am" : {
      "ObjectId" : "0f1461566a35197c054f5e6894c2eade6e6993c3",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# $Id: Makefile.am,v 1.9 2001/12/22 03:16:20 robs Exp $\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/utils/mp_gpprof_server/libraries/gamespy/GP/gptestc/gplinux/Makefile" : {
      "ObjectId" : "50a91293f07a4a1998bb85d6ccbce366c009c23e",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# GameSpy Presence & Messaging SDK Makefile\n\n# Copyright 2004 GameSpy Industries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#use these cflags to optimize it\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#use these when debugging \n\n#CFLAGS=$(BASE_CFLAGS) -g\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#############################################################################\n\n# SETUP AND BUILD\n\n#############################################################################\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#############################################################################\n\n# MISC\n\n#############################################################################\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/utils/mp_gpprof_server/libraries/gamespy/GP/gptestc/gpmacosx/Makefile" : {
      "ObjectId" : "2699eeae28c5166466966bcc9d13f4a865c09b24",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# GameSpy Presence & Messaging SDK Makefile - Mac OSX\n\n# Copyright 2006 GameSpy Industries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Include the stuff common to the GameSpy.net SDKs\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/utils/mp_gpprof_server/libraries/gamespy/GP/gptestc/gpps2/Makefile" : {
      "ObjectId" : "e20765f7978588c2a14310e95f446b12d9f79529",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#GameSpy.net PS2 Makefile\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#SDK-specific compiler flags\n\n#If the SDK uses Unique IDs, add \"-DUNIQUEID\"\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#SDK-specific libraries\n\n#If the SDK needs Logitech audio libraries, add \"$(LIBDIR)/liblgaud.a\"\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Name of the SDK sample\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#All the object files needed for this SDK\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Include the stuff common to the GameSpy.net SDKs\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/utils/mp_gpprof_server/libraries/gamespy/GP/gptestc/gpps3/Makefile" : {
      "ObjectId" : "e03f78d97baa0edf8b440568181faf757dd7cb64",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#GameSpy.net PS3 Makefile\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#SDK-specific compiler flags\n\n#If the SDK uses Unique IDs, add \"-DUNIQUEID\"\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#SDK-specific libraries\n\n#If the SDK needs Logitech audio libraries, add \"$(LIBDIR)/liblgaud.a\"\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Name of the SDK sample\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#All the object files needed for this SDK\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Include the stuff common to the GameSpy.net SDKs\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/utils/mp_gpprof_server/libraries/gamespy/GP/gptestc/gppsp/Makefile" : {
      "ObjectId" : "4f4897f9f1661c0b8dcc42d38e3aa8802e3ea759",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#GameSpy.net PSP Makefile\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#SDK-specific compiler flags\n\n#If the SDK uses Unique IDs, add \"-DUNIQUEID\"\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#SDK-specific libraries\n\n#If the SDK needs Logitech audio libraries, add \"$(LIBDIR)/liblgaud.a\"\n\n#SDK_LIBS    = \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Name of the SDK sample\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#All the object files needed for this SDK\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Include the stuff common to the GameSpy.net SDKs\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/utils/mp_gpprof_server/libraries/gamespy/common/linux/Makefile" : {
      "ObjectId" : "5add2c95853208b99d9e4c266337a296a092e5ef",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/utils/mp_gpprof_server/libraries/gamespy/common/macosx/Makefile" : {
      "ObjectId" : "d39190849b9c6357c05b02d35165a188c8aa95bb",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/utils/mp_gpprof_server/libraries/gamespy/common/ps2/Makefile" : {
      "ObjectId" : "9d7390f348c8d3adf64321a086eb32185d39f895",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/utils/mp_gpprof_server/libraries/gamespy/ghttp/ghttpc/ghttplinux/Makefile" : {
      "ObjectId" : "e42d6417ad9b17759aaefe06f431ff3a4601a86f",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# HTTP SDK Makefile\n\n# Copyright 2004 GameSpy Industries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#use these cflags to optimize it\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#use these when debugging \n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#############################################################################\n\n# SETUP AND BUILD\n\n#############################################################################\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#############################################################################\n\n# MISC\n\n#############################################################################\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/utils/mp_gpprof_server/libraries/gamespy/ghttp/ghttpc/ghttpmacosx/Makefile" : {
      "ObjectId" : "098ac1a461cd176881cdfe3686e06388f88302e9",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# HTTP SDK Makefile - Mac OSX\n\n# Copyright 2006 GameSpy Industries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Include the stuff common to the GameSpy.net SDKs\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/utils/mp_gpprof_server/libraries/gamespy/ghttp/ghttpc/ghttpps2/Makefile" : {
      "ObjectId" : "a04bef91975cc18b2bd65a081bd53e0a6737e48e",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#GameSpy.net PS2 Makefile\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#SDK-specific compiler flags\n\n#If the SDK uses Unique IDs, add \"-DUNIQUEID\"\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#SDK-specific libraries\n\n#If the SDK needs Logitech audio libraries, add \"$(LIBDIR)/liblgaud.a\"\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Name of the SDK sample\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#All the object files needed for this SDK\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Include the stuff common to the GameSpy.net SDKs\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/utils/mp_gpprof_server/libraries/gamespy/ghttp/ghttpc/ghttpps3/Makefile" : {
      "ObjectId" : "d0934737f4a9deb2068cd281b32d8d737ef37123",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#GameSpy.net PS3 Makefile\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#SDK-specific compiler flags\n\n#If the SDK uses Unique IDs, add \"-DUNIQUEID\"\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#SDK-specific libraries\n\n#If the SDK needs Logitech audio libraries, add \"$(LIBDIR)/liblgaud.a\"\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Name of the SDK sample\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#All the object files needed for this SDK\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Include the stuff common to the GameSpy.net SDKs\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/utils/mp_gpprof_server/libraries/gamespy/gt2/gt2testc/gt2linux/Makefile" : {
      "ObjectId" : "9efd38b2d80c6d9fdae6d75fd66ef8f4ac21599c",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# GameSpy Transport 2 SDK Makefile\n\n# Copyright 2004 GameSpy Industries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#use these cflags to optimize it\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#use these when debugging \n\n#CFLAGS=$(BASE_CFLAGS) -g\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#############################################################################\n\n# SETUP AND BUILD\n\n#############################################################################\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#############################################################################\n\n# MISC\n\n#############################################################################\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/utils/mp_gpprof_server/libraries/gamespy/gt2/gt2testc/gt2macosx/Makefile" : {
      "ObjectId" : "ae863a6550583365c7e1834522ed03cd18624225",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# GameSpy Transport 2 SDK Makefile - Mac OSX\n\n# Copyright 2006 GameSpy Industries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Include the stuff common to the GameSpy.net SDKs\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/utils/mp_gpprof_server/libraries/gamespy/gt2/gt2testc/gt2ps2/Makefile" : {
      "ObjectId" : "01cef12f38bcd984142f48c9c202451b7c7a0ad3",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#GameSpy.net PS2 Makefile\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#SDK-specific compiler flags\n\n#If the SDK uses Unique IDs, add \"-DUNIQUEID\"\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#SDK-specific libraries\n\n#If the SDK needs Logitech audio libraries, add \"$(LIBDIR)/liblgaud.a\"\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Name of the SDK sample\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#All the object files needed for this SDK\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Include the stuff common to the GameSpy.net SDKs\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/utils/mp_gpprof_server/libraries/gamespy/gt2/gt2testc/gt2ps3/Makefile" : {
      "ObjectId" : "5fac27a9a91cce59cd285a61937ebdfabdc6045a",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#GameSpy.net PS3 Makefile\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#SDK-specific compiler flags\n\n#If the SDK uses Unique IDs, add \"-DUNIQUEID\"\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#SDK-specific libraries\n\n#If the SDK needs Logitech audio libraries, add \"$(LIBDIR)/liblgaud.a\"\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Name of the SDK sample\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#All the object files needed for this SDK\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Include the stuff common to the GameSpy.net SDKs\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/utils/mp_gpprof_server/libraries/gamespy/sake/saketest/sakelinux/Makefile" : {
      "ObjectId" : "19f0ee83b3be0350974b5a9473512ee09c6d31c0",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# SAKE SDK Makefile\n\n# Copyright 2004 GameSpy Industries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#use these cflags to optimize it\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#use these when debugging \n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#############################################################################\n\n# SETUP AND BUILD\n\n#############################################################################\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#############################################################################\n\n# MISC\n\n#############################################################################\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/utils/mp_gpprof_server/libraries/gamespy/sake/saketest/sakemacosx/Makefile" : {
      "ObjectId" : "e76b9936dc32adde8bd5422d8173dfdd293442f2",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Sake SDK Makefile - Mac OSX\n\n# Copyright 2006 GameSpy Industries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Include the stuff common to the GameSpy.net SDKs\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/utils/mp_gpprof_server/libraries/pthreads-w32-2-8-0-release/Makefile" : {
      "ObjectId" : "f10cbef10bf9cfb04ffa8f4f8dd94cfed2010569",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This makefile is compatible with MS nmake and can be used as a\n\n# replacement for buildlib.bat. I've changed the target from an ordinary dll\n\n# (/LD) to a debugging dll (/LDd).\n\n# \n\n# The variables $DLLDEST and $LIBDEST hold the destination directories for the\n\n# dll and the lib, respectively. Probably all that needs to change is $DEVROOT.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DLL_VER:\n\n# See pthread.h and README - This number is computed as 'current - age'\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Default cleanup style\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ Exceptions\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Structured Exceptions\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#C cleanup code\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Aggregate modules for inlinability\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Separate modules for minimising the size of statically linked images\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# The so-called inlined DLL is just a single translation unit with\n\n# inlining optimisation turned on.\n\n#\n",
        "Line" : 415,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9,
      "Errorlog" : "line 16:20 token recognition error at: '\\D'\nline 17:20 token recognition error at: '\\L'\nline 18:20 token recognition error at: '\\I'\n"
    },
    "src/utils/xrLCUtil/CMakeLists.txt" : {
      "ObjectId" : "90a53d71ea66d031fe3e11c26be10b6a55a30615",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/utils/xrLC_Light/CMakeLists.txt" : {
      "ObjectId" : "1c440f368613639a01f2bb05c7fe46a956cd6039",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#list(REMOVE_ITEM ${PROJECT_NAME}__SOURCES \"${CMAKE_CURRENT_SOURCE_DIR}/./LevelCompilerLoggerWindow.cpp\")\n\n#list(REMOVE_ITEM ${PROJECT_NAME}__INCLUDES \"${CMAKE_CURRENT_SOURCE_DIR}/./LevelCompilerLoggerWindow.hpp\")\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/utils/xrMiscMath/CMakeLists.txt" : {
      "ObjectId" : "7352fc5fe6ac92cd19463cd8fac7f786abe54719",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#list(REMOVE_ITEM ${PROJECT_NAME}__SOURCES \"${CMAKE_CURRENT_SOURCE_DIR}/./LevelCompilerLoggerWindow.cpp\")\n\n#ist(REMOVE_ITEM ${PROJECT_NAME}__INCLUDES \"${CMAKE_CURRENT_SOURCE_DIR}/./LevelCompilerLoggerWindow.hpp\")\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/utils/xrQSlim/CMakeLists.txt" : {
      "ObjectId" : "73bdbf82802c5eb1b763d14157f0a4365a143a9d",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#list(REMOVE_ITEM ${PROJECT_NAME}__SOURCES \"${CMAKE_CURRENT_SOURCE_DIR}/./LevelCompilerLoggerWindow.cpp\")\n\n#ist(REMOVE_ITEM ${PROJECT_NAME}__INCLUDES \"${CMAKE_CURRENT_SOURCE_DIR}/./LevelCompilerLoggerWindow.hpp\")\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/xrAICore/CMakeLists.txt" : {
      "ObjectId" : "01c1f3d90ad8852f1653c0128bc5199b63c14fe9",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#foreach(header ${${PROJECT_NAME}__INCLUDES})\n\n#\tif (${header} MATCHES _inline.h$)\n\n#\t\tlist(REMOVE_ITEM ${PROJECT_NAME}__INCLUDES ${header})\n\n#\tendif()\n\n#endforeach()\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/xrCDB/CMakeLists.txt" : {
      "ObjectId" : "ebceb0029583b20a244c627e4e338e263fb82004",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/xrCore/CMakeLists.txt" : {
      "ObjectId" : "256e7e8214ce0cc4db8238f876115e5a7be5b2ff",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/xrEngine/CMakeLists.txt" : {
      "ObjectId" : "7398336ad455b6d0590cbc4806cc488351f259fb",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/xrGame/CMakeLists.txt" : {
      "ObjectId" : "8b01a3d7d3b64eaaca05842ad83191a80cf3e3ed",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/xrGameSpy/CMakeLists.txt" : {
      "ObjectId" : "f2d9672f0c0e00a79be87676966dd510a8b16f7a",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#list(REMOVE_ITEM ${PROJECT_NAME}__SOURCES \"${CMAKE_CURRENT_SOURCE_DIR}/./atlas_stalkercs_v1.c\")\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#list(REMOVE_ITEM ${PROJECT_NAME}__INCLUDES \"${CMAKE_CURRENT_SOURCE_DIR}/./atlas_stalkercs_v1.h\")\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/xrNetServer/CMakeLists.txt" : {
      "ObjectId" : "9f91de91a42912f24787460765e639ad7e3fc8b7",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/xrParticles/CMakeLists.txt" : {
      "ObjectId" : "b3d57a0cb7fb0da72cc7339958046659c81b99ba",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#list(REMOVE_ITEM ${PROJECT_NAME}__SOURCES \"${CMAKE_CURRENT_SOURCE_DIR}/./xr_cda.cpp\")\n\n#list(REMOVE_ITEM ${PROJECT_NAME}__INCLUDES \"${CMAKE_CURRENT_SOURCE_DIR}/./xr_cda.h\")\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/xrPhysics/CMakeLists.txt" : {
      "ObjectId" : "f86bd742699db29093344ebc32cc693bf14488c5",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#list(REMOVE_ITEM ${PROJECT_NAME}__INCLUDES \"${CMAKE_CURRENT_SOURCE_DIR}/./xr_cda.h\")\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/xrScriptEngine/CMakeLists.txt" : {
      "ObjectId" : "011e100c4aa53dab02852278280749e6593216c4",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# uncomment next string for debug script engine\n\n#add_definitions(-DCONFIG_SCRIPT_ENGINE_LOG_EXPORTS -DCONFIG_SCRIPT_ENGINE_LOG_SKIPPED_EXPORTS)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/xrSound/CMakeLists.txt" : {
      "ObjectId" : "25d961daeac7b6e2b1fbe2818067778ce4478dc0",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\t${CMAKE_CURRENT_SOURCE_DIR}/../../Externals/libogg/include\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/xrUICore/CMakeLists.txt" : {
      "ObjectId" : "3bcd57fa953011e655e13fe2887caed17f22a5f5",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######################################################\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##########################################\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/xr_3da/CMakeLists.txt" : {
      "ObjectId" : "d7163e9912175a99082c68d1661a9836859ab3fd",
      "LastModified" : "2019-04-01T20:43:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Yes, we have shell\n",
        "Line" : 22,
        "CharPositionInLine" : 9
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 48,
    "MAKEFILE" : 21,
    "AUTOMAKE" : 4
  },
  "ElapsedTime" : 5844
}