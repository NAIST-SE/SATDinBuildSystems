{
  "Repository" : "7406864",
  "Revision" : "HEAD",
  "ObjectId" : "d1f83b19c573d283e564f5140189138236385ef2",
  "CommitTime" : "2016-11-20T20:40:24Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "0891e42674b16ebf1f0a0c90a3b1df2a9344957d",
      "LastModified" : "2016-10-16T15:49:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include build configuration.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add some useful compile flags.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Non-macro identifiers inside #if outside of defined()\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# sizeof() on function types or void\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Casting function types to non-matching types\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# extern declaration within a function\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Dead code (removed in newer versions of GCC, might still be in clang)\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Additional format checks for printf/scanf/etc not enabled by -Wall\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Declarations like int i = i\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Local variables or types that shadow another variable, parameter, type,\n\n# built-in function, etc.\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Global function defined without a previous declaration.\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Variable that may be clobbered by a setjmp call\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Testing floating point values for equality\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Suspicious uses of logical operators in expressions\n",
        "Line" : 51,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Pointer casting with increased alignment (char * -> int *)\n",
        "Line" : 53,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Casting const char * to char *\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Assigning signed int to unsigned int\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Loop indices that could potentially overflow\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Redundant (multiple same) declarations\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Turn warnings into errors?\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Compiling on GNU/Linux.\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 21
    },
    "client/CMakeLists.txt" : {
      "ObjectId" : "c4e1d639cc358c8b83dc4a3c4f407844989a4799",
      "LastModified" : "2016-10-16T15:49:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The Atrinik CMakeLists file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add our includes.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# SDL is required to run the client.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# SDL_image is also required, otherwise no bitmaps or map images could be\n\n# displayed.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# SDL_ttf is used for all text drawing, so it's required.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# LibXML2 is required.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# SDL_mixer is optional, as sound is not a must-have.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add sources.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Compile the sources into an executable.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Link all the available libraries.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Link SDL_mixer if available.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Get all the include directories used to compile the client.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Go through the include directories and construct a string.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Go through the source files and construct a string.\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Installer.\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Configure the .h file with the configuration options (size of long,\n\n# package version, etc).\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "common/toolkit/CMakeLists.txt" : {
      "ObjectId" : "150ecc17c0414404794c88a5c4cfbc3d05c10bbc",
      "LastModified" : "2016-10-16T15:49:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The Atrinik toolkit CMakeLists file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# cURL is required by the metaserver.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Try to find some GNU/Linux libraries.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Try to find X11 XMU.\n",
        "Line" : 30,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# This is very ugly. There is essentially a namespace clash between newer\n\n# MinGW and the Windows port of pthreads, and they both define a timespec\n\n# structure. This would be OK if both checked for its existence, but the\n\n# bigger problem is that the two definitions are *INCOMPATIBLE*. Indeed,\n\n# the pthread.h version uses a 32-bit integer for the seconds timestamp,\n\n# while the MinGW time.h one uses a 64-bit one.\n\n#\n\n# The solution below disables the pthread.h declaration. This means that\n\n# any code working with a timespec assumes the MinGW structure declaration,\n\n# and if there is any code involving pthreads that passes around a\n\n# timespec... tough luck.\n\n#\n\n# Also, we need it here, otherwise the threads check below will not set the\n\n# correct libraries to use.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check for various include files.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Check for various functions.\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Generate the CMake configuration header file.\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Generate a header file with the Git version used to compile the library.\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Link math...\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Link crypt.\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Link readline if available.\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Link X11 if available.\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Link X11 XMU if available.\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "server/CMakeLists.txt" : {
      "ObjectId" : "2524b926127b259720aa7a7bfead4097c7aa2acf",
      "LastModified" : "2016-10-16T15:49:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The Atrinik server CMakeLists file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Need Flex...\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# libdl is required.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add our includes.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Scan for lexers.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add command to parse the lexer files with flex.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add sources.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Check is used for unit tests, but is optional.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# GD is used for world maker, but like unit tests, is also optional.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Find unit test source files if check is installed.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Find the world maker files, if enabled.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Compile the sources into an executable.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Link libraries.\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Link check.\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Link GD.\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Get all the include directories used to compile the server.\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Go through the include directories and construct a string.\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Go through the source files and construct a string.\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Go through the source files and construct a string.\n",
        "Line" : 156,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Create a 'proto' build target, which generates the proto.h file.\n",
        "Line" : 162,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Create the Arena plugin.\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Set the preferred order of Python versions to find.\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# And try to find Python.\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Create the Python plugin, if Python was found.\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Configure the .h file with the configuration options (size of long,\n\n# package version, etc).\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    }
  },
  "FileTypes" : {
    "CMAKE" : 4
  },
  "ElapsedTime" : 2199
}