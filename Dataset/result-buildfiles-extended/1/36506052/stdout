{
  "Repository" : "36506052",
  "Revision" : "HEAD",
  "ObjectId" : "bb29d1540d5b8bffc5594b3d96395c9aba11bb06",
  "CommitTime" : "2019-04-16T21:44:50Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "822f1fcb110c631303128aa78a68d3607ae46ace",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# - Enforce an out-of-source builds before anything else\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Above cache variable isn't immediately set in first build\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Prefix our module paths for preference over CMake ones if exist\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# clear CMAKE_PREFIX_PATH if not explicitly specified on command line\n\n# - this helps find_package() ensure the current package being search for\n\n#   has <package_name>_ROOT and/or <package_name>_DIR at the beginning\n\n#   of CMAKE_PREFIX_PATH\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# BUILD_CXXSTD\n\n# Choose C++ Standard to build against, if supported.\n\n# Mark as advanced because most users will not need it.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#------------------------------------------------------------------------------#\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#------------------------------------------------------------------------------#\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#------------------------------------------------------------------------------#\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "a958cbcc98b1afeadcd34ff13561d9dd66bc53a1",
      "LastModified" : "2017-12-13T01:35:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# CMake - Cross Platform Makefile Generator\n\n# Copyright 2000-2009 Kitware, Inc., Insight Software Consortium\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if CTEST_SITE was not provided\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# [A] if CTEST_SITE set at configure\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# [B] if CTEST_SITE not set at configure, grab the HOSTNAME\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# either [A] or [B]\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "Makefile.am" : {
      "ObjectId" : "f186154af3029fe0a5913e7969d3f112673ac63f",
      "LastModified" : "2017-04-26T07:35:33Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/Architecture.cmake" : {
      "ObjectId" : "0c086ad0ec401985043ac2bae05e043eccb482e8",
      "LastModified" : "2017-11-28T00:58:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# taken from the Intel ORM\n\n# http://www.intel.com/content/www/us/en/processors/architectures-software-developer-manuals.html\n\n# CPUID Signature Values of Of Recent Intel Microarchitectures\n\n# 4E 5E       | Skylake microarchitecture\n\n# 3D 47 56    | Broadwell microarchitecture\n\n# 3C 45 46 3F | Haswell microarchitecture\n\n# 3A 3E       | Ivy Bridge microarchitecture\n\n# 2A 2D       | Sandy Bridge microarchitecture\n\n# 25 2C 2F    | Intel microarchitecture Westmere\n\n# 1A 1E 1F 2E | Intel microarchitecture Nehalem\n\n# 17 1D       | Enhanced Intel Core microarchitecture\n\n# 0F          | Intel Core microarchitecture\n\n#\n\n# Intel SDM Vol. 3C 35-1 / December 2016:\n\n# 57          | Xeon Phi 3200, 5200, 7200  [Knights Landing]\n\n# 85          | Future Xeon Phi\n\n# 8E 9E       | 7th gen. Core              [Kaby Lake]\n\n# 55          | Future Xeon                [Skylake w/ AVX512]\n\n# 4E 5E       | 6th gen. Core / E3 v5      [Skylake w/o AVX512]\n\n# 56          | Xeon D-1500                [Broadwell]\n\n# 4F          | Xeon E5 v4, E7 v4, i7-69xx [Broadwell]\n\n# 47          | 5th gen. Core / Xeon E3 v4 [Broadwell]\n\n# 3D          | M-5xxx / 5th gen.          [Broadwell]\n\n# 3F          | Xeon E5 v3, E7 v3, i7-59xx [Haswell-E]\n\n# 3C 45 46    | 4th gen. Core, Xeon E3 v3  [Haswell]\n\n# 3E          | Xeon E5 v2, E7 v2, i7-49xx [Ivy Bridge-E]\n\n# 3A          | 3rd gen. Core, Xeon E3 v2  [Ivy Bridge]\n\n# 2D          | Xeon E5, i7-39xx           [Sandy Bridge]\n\n# 2F          | Xeon E7\n\n# 2A          | Xeon E3, 2nd gen. Core     [Sandy Bridge]\n\n# 2E          | Xeon 7500, 6500 series\n\n# 25 2C       | Xeon 3600, 5600 series, Core i7, i5 and i3\n\n#\n\n# Values from the Intel SDE:\n\n# 5C | Goldmont\n\n# 5A | Silvermont\n\n# 57 | Knights Landing\n\n# 66 | Cannonlake\n\n# 55 | Skylake Server\n\n# 4E | Skylake Client\n\n# 3C | Broadwell (likely a bug in the SDE)\n\n# 3C | Haswell\n",
        "Line" : 32,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "# 57\n",
        "Line" : 83,
        "CharPositionInLine" : 36
      },
      "2" : {
        "Text" : "# Knights Landing\n",
        "Line" : 84,
        "CharPositionInLine" : 48
      },
      "3" : {
        "Text" : "# 8E, 9E\n",
        "Line" : 91,
        "CharPositionInLine" : 65
      },
      "4" : {
        "Text" : "# 55\n",
        "Line" : 93,
        "CharPositionInLine" : 40
      },
      "5" : {
        "Text" : "# 4E, 5E\n",
        "Line" : 95,
        "CharPositionInLine" : 63
      },
      "6" : {
        "Text" : "# 3D, 47, 4F, 56\n",
        "Line" : 98,
        "CharPositionInLine" : 64
      },
      "7" : {
        "Text" : "# Itanium (not supported)\n",
        "Line" : 129,
        "CharPositionInLine" : 36
      },
      "8" : {
        "Text" : "# NetBurst\n",
        "Line" : 132,
        "CharPositionInLine" : 37
      },
      "9" : {
        "Text" : "# Not sure whether this must be 3 or even 4 instead\n",
        "Line" : 134,
        "CharPositionInLine" : 37
      },
      "10" : {
        "Text" : "# 16h\n",
        "Line" : 141,
        "CharPositionInLine" : 37
      },
      "11" : {
        "Text" : "# 15h\n",
        "Line" : 143,
        "CharPositionInLine" : 37
      },
      "12" : {
        "Text" : "# 14h\n",
        "Line" : 149,
        "CharPositionInLine" : 37
      },
      "13" : {
        "Text" : "# 12h\n\n# 10h\n",
        "Line" : 151,
        "CharPositionInLine" : 37
      },
      "14" : {
        "Text" : "# =============================================================================#\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# not MSVC and not ICC => GCC, Clang, Open64\n",
        "Line" : 195,
        "CharPositionInLine" : 11
      },
      "16" : {
        "Text" : "# =============================================================================#\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "cmake/Modules/BuildModes.cmake" : {
      "ObjectId" : "09856208cd2b04da22747bbd584f58c52721542b",
      "LastModified" : "2017-11-03T22:20:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Add ${CMAKE_PROJECT_NAME} specific build modes and additional flags\n\n#\n\n# This follows the guide on adding a new mode on the CMake wiki:\n\n#\n\n# http://www.cmake.org/Wiki/CMake_FAQ#How_can_I_extend_the_build_modes_with_a_custom_made_one_.3F\n\n#\n\n# ${CMAKE_PROJECT_NAME} supports the standard CMake build types/configurations of\n\n#\n\n# Release Debug MinSizeRel RelWithDebInfo\n\n#\n\n# In addition, two types specifically for development are added:\n\n#\n\n# TestRelease:\n\n#   For trial production and extended testing. It has verbose\n\n#   output, has debugging symbols, and adds definitions to allow FPE\n\n#   and physics conservation law testing where supported.\n\n#\n\n# Maintainer:\n\n#   For development of the toolkit. It adds debugging, and enables the use\n\n#   of library specific debugging via standardized definitions.\n\n#\n\n# Compiler flags specific to these build types are set in the cache, and\n\n# the  types are added to the CMAKE_BUILD_TYPE cache string and to\n\n# CMAKE_CONFIGURATION_TYPES if appropriate to the build tool being used.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# Update build type information ONLY for single mode build tools, adding\n\n# default type if none has been set, but otherwise leaving value alone.\n\n# NB: this doesn't allow \"None\" for the build type - would need something\n\n# more sophiticated using an internal cache variable.\n\n#\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Default to a Release build if nothing else...\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Force to the cache, but use existing value.\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# Update build flags for each build type\n\n#\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/Modules/CMakeUninstallTarget.cmake" : {
      "ObjectId" : "ea4f3db03f941313a15aadef56f910daafa2bc95",
      "LastModified" : "2017-11-03T22:20:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - create an uninstall target for CMake installed projects\n\n#\n\n# Taken from example on CMake Wiki:\n\n#\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Can_I_do_.22make_uninstall.22_with_CMake.3F\n\n#\n\n# Available under Attribution 2.5 license\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create uninstall target template file, if it doesn't exist...\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# BEGIN actual write to file...\n",
        "Line" : 15,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# END of appending to file...\n",
        "Line" : 41,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# Call the file writing function, if needed\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Configure the file that reads the install manifest and processes the files\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add the uninstall target\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/Modules/Compilers.cmake" : {
      "ObjectId" : "e5f49e2f45d5cf66603961ba3d55091236be81a6",
      "LastModified" : "2017-12-12T04:36:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#\n\n#        Compilers\n\n#\n\n################################################################################\n\n#\n\n#   sets (cached):\n\n#\n\n#       CMAKE_C_COMPILER_IS_<TYPE>\n\n#       CMAKE_CXX_COMPILER_IS_<TYPE>\n\n#\n\n#\n\n#\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include guard\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\n\n# macro generate a test compile file\n\n################################################################################\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################################################################################\n\n# macro converting string to list\n\n################################################################################\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "################################################################################\n\n# macro converting string to list\n\n################################################################################\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "################################################################################\n\n#   Macro to add to string\n\n################################################################################\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "################################################################################\n\n# macro to remove duplicates from string\n\n################################################################################\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# remove the duplicates\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# create list of flags\n",
        "Line" : 83,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "################################################################################\n\n# function for test compiling with flags\n\n################################################################################\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# recursion requires this\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# generate test file\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# try compiling with flag\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# add flag if successful\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "################################################################################\n\n# macro for adding C/C++ compiler flags to variable\n\n################################################################################\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# test whole string\n",
        "Line" : 133,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# add whole string if worked\n",
        "Line" : 136,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# test individually\n",
        "Line" : 139,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# check individual flag\n",
        "Line" : 142,
        "CharPositionInLine" : 12
      },
      "19" : {
        "Text" : "# add individual flag\n",
        "Line" : 146,
        "CharPositionInLine" : 16
      },
      "20" : {
        "Text" : "# set the variable to the working flags\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# remove the duplicates\n",
        "Line" : 154,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "################################################################################\n\n# macro for adding C compiler flags to variable\n\n################################################################################\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# cache the flags to test\n",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# if flags were changed or not previously processed\n",
        "Line" : 167,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# test flags\n",
        "Line" : 170,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "# cache the valid flags\n",
        "Line" : 172,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# set the ${_VAR} to the valid flags\n",
        "Line" : 177,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# cache the flags that were tested\n",
        "Line" : 179,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "################################################################################\n\n# macro for adding C++ compiler flags to variable\n\n################################################################################\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# cache the flags to test\n",
        "Line" : 189,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# if flags were changed or not previously processed\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# test flags\n",
        "Line" : 195,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# cache the valid flags\n",
        "Line" : 197,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# set the ${_VAR} to the valid flags\n",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# cache the flags that were tested\n",
        "Line" : 204,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "################################################################################\n\n# determine compiler types for each language\n\n################################################################################\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# GNU compiler\n",
        "Line" : 225,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "# Intel icc compiler\n",
        "Line" : 230,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : "# Intel icpc compiler\n",
        "Line" : 236,
        "CharPositionInLine" : 8
      },
      "40" : {
        "Text" : "# Clang/LLVM compiler\n",
        "Line" : 242,
        "CharPositionInLine" : 8
      },
      "41" : {
        "Text" : "# PGI compiler\n",
        "Line" : 247,
        "CharPositionInLine" : 8
      },
      "42" : {
        "Text" : "# IBM xlC compiler\n",
        "Line" : 252,
        "CharPositionInLine" : 8
      },
      "43" : {
        "Text" : "# HP aC++ compiler\n",
        "Line" : 257,
        "CharPositionInLine" : 8
      },
      "44" : {
        "Text" : "# IRIX MIPSpro CC Compiler\n",
        "Line" : 263,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : "# set other to no\n",
        "Line" : 279,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 46
    },
    "cmake/Modules/ConfigureCXXSTD.cmake" : {
      "ObjectId" : "3044e0a816eb919c4c317923babc5323616eec76",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Include guard\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make C++11 required for compilers that recognise standards\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# - Rough n'Ready setup of CXX compile features for Intel\n\n#\n\n#-----------------------------------------------------------------------\n\n# Add compile features for Intel - should eventually be placed\n\n# into a module, as it will need exporting for use by clients\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Now version selection, focus on version 15 and above as that is the\n\n# baseline - means that this isn't comprehensive for lower versions\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# c++98 should be supported for all(?) versions we may encounter, and\n\n# make it the default as required for compilers that recognise standards\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# 15 and higher also allow c++14...\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Now the compile features... Eventually want to do these in the same\n\n# way as CMake does (using compile time checks on compiler version\n\n# etc - may also allow checks on GCC version in use), but for now\n\n# *assume* that the underlying library will support.\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#cxx_return_type_deduction?\n",
        "Line" : 55,
        "CharPositionInLine" : 24
      },
      "8" : {
        "Text" : "# Not explicit in Intel notes but should do...\n",
        "Line" : 102,
        "CharPositionInLine" : 33
      },
      "9" : {
        "Text" : "# Linux/OSX only\n",
        "Line" : 110,
        "CharPositionInLine" : 32
      },
      "10" : {
        "Text" : "# Linux/OSX only\n",
        "Line" : 111,
        "CharPositionInLine" : 25
      },
      "11" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# Configure/Select C++ Standard\n\n# Require at least C++11 with no extensions and the following features\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Features that MSVC 18.0 cannot support but in list of coding\n\n# guidelines - to be required once support for that compiler is dropped.\n\n# Version 10.2 is coded without these being required.\n\n#cxx_deleted_functions\n\n#cxx_generalized_initializers\n",
        "Line" : 141,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#cxx_inheriting_constructors\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# - BUILD_CXXSTD\n\n# Choose C++ Standard to build against from supported list. Allow user\n\n# to supply it as a simple year or as 'c++XY'. If the latter, post process\n\n# to remove the 'c++'\n\n# Mark as advanced because most users will not need it\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# If a standard higher than 11 has been selected, check that compiler has\n\n# at least one feature from that standard and append these to the required\n\n# feature list\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "cmake/Modules/Coverage.cmake" : {
      "ObjectId" : "dd426fdb6da19d9b56cc3eb2e38a99e0c1631b75",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2012 - 2017, Lars Bilke\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without modification,\n\n# are permitted provided that the following conditions are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright notice, this\n\n#    list of conditions and the following disclaimer.\n\n#\n\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n# 3. Neither the name of the copyright holder nor the names of its contributors\n\n#    may be used to endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n\n# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# CHANGES:\n\n#\n\n# 2012-01-31, Lars Bilke\n\n# - Enable Code Coverage\n\n#\n\n# 2013-09-17, Joakim Söderberg\n\n# - Added support for Clang.\n\n# - Some additional usage instructions.\n\n#\n\n# 2016-02-03, Lars Bilke\n\n# - Refactored functions to use named parameters\n\n#\n\n# 2017-06-02, Lars Bilke\n\n# - Merged with modified version from github.com/ufz/ogs\n\n#\n\n#\n\n# USAGE:\n\n#\n\n# 1. Copy this file into your cmake modules path.\n\n#\n\n# 2. Add the following line to your CMakeLists.txt:\n\n#      include(CodeCoverage)\n\n#\n\n# 3. Append necessary compiler flags:\n\n#      APPEND_COVERAGE_COMPILER_FLAGS()\n\n#\n\n# 4. If you need to exclude additional directories from the report, specify them\n\n#    using the COVERAGE_EXCLUDES variable before calling SETUP_TARGET_FOR_COVERAGE.\n\n#    Example:\n\n#      set(COVERAGE_EXCLUDES 'dir1/*' 'dir2/*')\n\n#\n\n# 5. Use the functions described below to create a custom make target which\n\n#    runs your test executable and produces a code coverage report.\n\n#\n\n# 6. Build a Debug build:\n\n#      cmake -DCMAKE_BUILD_TYPE=Debug ..\n\n#      make\n\n#      make my_coverage_target\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check prereqs\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NOT GCOV_PATH\n",
        "Line" : 79,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# NOT CMAKE_BUILD_TYPE STREQUAL \"Debug\"\n",
        "Line" : 118,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Defines a target for running and collection code coverage information\n\n# Builds dependencies, runs the given executable and outputs reports.\n\n# NOTE! The executable should always have a ZERO as exit code otherwise\n\n# the coverage generation will not complete.\n\n#\n\n# SETUP_TARGET_FOR_COVERAGE(\n\n#     NAME testrunner_coverage                    # New target name\n\n#     EXECUTABLE testrunner -j ${PROCESSOR_COUNT} # Executable in PROJECT_BINARY_DIR\n\n#     DEPENDENCIES testrunner                     # Dependencies to build first\n\n# )\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# NOT LCOV_PATH\n",
        "Line" : 139,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# NOT GENHTML_PATH\n",
        "Line" : 143,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# Setup target\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Cleanup lcov\n",
        "Line" : 148,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Create baseline to make sure untouched files show up in the report\n",
        "Line" : 150,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Run tests\n",
        "Line" : 153,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Capturing lcov counters and generating report\n",
        "Line" : 156,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# add baseline counters\n",
        "Line" : 158,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 169,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE\n",
        "Line" : 175,
        "CharPositionInLine" : 14
      },
      "15" : {
        "Text" : "# Defines a target for running and collection code coverage information\n\n# Builds dependencies, runs the given executable and outputs reports.\n\n# NOTE! The executable should always have a ZERO as exit code otherwise\n\n# the coverage generation will not complete.\n\n#\n\n# SETUP_TARGET_FOR_COVERAGE_COBERTURA(\n\n#     NAME ctest_coverage                    # New target name\n\n#     EXECUTABLE ctest -j ${PROCESSOR_COUNT} # Executable in PROJECT_BINARY_DIR\n\n#     DEPENDENCIES executable_target         # Dependencies to build first\n\n# )\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# NOT GCOVR_PATH\n",
        "Line" : 196,
        "CharPositionInLine" : 12
      },
      "17" : {
        "Text" : "# Combine excludes to several -e arguments\n",
        "Line" : 198,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Run tests\n",
        "Line" : 206,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# Running gcovr\n",
        "Line" : 209,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 217,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE_COBERTURA\n",
        "Line" : 223,
        "CharPositionInLine" : 14
      },
      "CommentCount" : 22
    },
    "cmake/Modules/Documentation.cmake" : {
      "ObjectId" : "22d96af4d88280079fceadc0205b92c541ad37ee",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Create a \"make doc\" target using Doxygen\n\n# Prototype:\n\n#     GENERATE_DOCUMENTATION(doxygen_config_file)\n\n# Parameters:\n\n#    doxygen_config_file    Doxygen configuration file (must in the\n\n# root of the source directory)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if BUILD_DOXYGEN_DOCS = ON, we want to build docs quietly\n\n# else, don't build quietly\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# GraphViz dot program is used to build call graphs, caller graphs, class graphs\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# available Doxygen doc formats\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# we want HTML, LATEX, and MAN to be default\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# find if we want it on\n",
        "Line" : 52,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# if doc format is MAN and it is not a UNIX machine --> turn off\n",
        "Line" : 54,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# set ON/OFF\n",
        "Line" : 58,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# add option\n",
        "Line" : 64,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# loop over doc formats and set GENERATE_DOXYGEN_${_doc_format}_DOC to YES/NO\n\n# GENERATE_DOXYGEN_${_doc_format}_DOC is used in configure_file @ONLY\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# options to turn generation of class, call, and caller graphs\n",
        "Line" : 83,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# create CMake doc string\n",
        "Line" : 85,
        "CharPositionInLine" : 12
      },
      "13" : {
        "Text" : "# add option\n",
        "Line" : 87,
        "CharPositionInLine" : 12
      },
      "14" : {
        "Text" : "# set GENERATE_DOXYGEN_${_graph_type}_GRAPH to YES/NO\n\n# GENERATE_DOXYGEN_${_graph_type}_GRAPH is used in configure_file @ONLY\n",
        "Line" : 90,
        "CharPositionInLine" : 12
      },
      "15" : {
        "Text" : "# get the buildtree directories\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# if the headers are in include/ and sources are in src/\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# define BUILDTREE_DIRS which is used in configure_file @ONLY\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# if there were src/ folders, add them\n",
        "Line" : 124,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Doxyfiles was spaces not semi-colon separated lists\n",
        "Line" : 131,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "#-----------------------------------------------------------------------\n",
        "Line" : 134,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "#message(STATUS \"SUBDIRECTORIES : ${_sub}\")\n",
        "Line" : 151,
        "CharPositionInLine" : 24
      },
      "22" : {
        "Text" : "#-----------------------------------------------------------------------\n",
        "Line" : 165,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "#-----------------------------------------------------------------------\n",
        "Line" : 173,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# DOXYGEN_DOCS\n",
        "Line" : 185,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "#-----------------------------------------------------------------------\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Macro to generate documentation\n\n# from:\n\n#   http://www.cmake.org/pipermail/cmake/2007-May/014174.html\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Add target\n",
        "Line" : 209,
        "CharPositionInLine" : 12
      },
      "28" : {
        "Text" : "#-----------------------------------------------------------------------\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Macro to generate PDF manual from LaTeX using pdflatex\n\n# assumes manual is in ${CMAKE_SOURCE_DIR}/doc\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# name with no path is given\n",
        "Line" : 256,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# set to full path\n",
        "Line" : 258,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 32
    },
    "cmake/Modules/GenerateConfigHeader.cmake" : {
      "ObjectId" : "873f145a72a99d43aff8d42e8a89a06c87390ef7",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n\n#\n\n#   Write a config file for installation (writes preprocessor definitions)\n\n#\n\n################################################################################\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# write the version fields\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# if DEBUG, add ${PROJECT_NAME}_DEBUG and same for NDEBUG\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#==============================================================================#\n\n#   Function to convert a boolean ON/OFF into DEFINE/UNDEFINE\n\n#       flag for SET_MACRO_FIELDS (below)\n\n#\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#==============================================================================#\n\n#   function to assign the corresponding macro fields for LABEL \"X\"\n\n#   - e.g. label \"HAVE_XML\" needs to define:\n\n#       HAVE_XML_LABEL  - the name of the macro\n\n#       HAVE_XML_MACRO   - the signature of macro (only different from\n\n#                         LABEL if macro is function i.e., F77_FUNC(xxx)\n\n#       HAVE_XML_ENTRY  - what to set define statement to\n\n#       HAVE_XML_MSG    - the comment\n\n#\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# LABEL and MACRO are *typically* the same\n",
        "Line" : 199,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#==============================================================================#\n\n#   function to see if header exists\n\n#   - it creates an empty main that includes the header and checks that\n\n#     it compiles\n\n#\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 297,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 342,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 387,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 403,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 412,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 420,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 436,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 444,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 453,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 461,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 470,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 478,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 487,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 495,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 503,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#==============================================================================#\n\n#==============================================================================#\n\n#\n\n#           PACKAGE DETAILS\n\n#\n\n#==============================================================================#\n\n#==============================================================================#\n",
        "Line" : 512,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 541,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 549,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 556,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 563,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 570,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 577,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 591,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#==============================================================================#\n",
        "Line" : 598,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "#==============================================================================#\n\n#==============================================================================#\n\n#\n\n#       GENERATE CONFIG FILE\n\n#\n\n#==============================================================================#\n\n#==============================================================================#\n",
        "Line" : 603,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# write a build specific config.h header file\n",
        "Line" : 612,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 51
    },
    "cmake/Modules/GenerateExamples.cmake" : {
      "ObjectId" : "1a3d3354caf9549a90d461cb19471bebae39861d",
      "LastModified" : "2018-02-06T20:53:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#------------------------------------------------------------------------------#\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#------------------------------------------------------------------------------#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#------------------------------------------------------------------------------#\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# -- Global variable settings\n\n#------------------------------------------------------------------------------#\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#------------------------------------------------------------------------------#\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# failed so don't proceed\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#------------------------------------------------------------------------------#\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# failed so don't proceed\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#------------------------------------------------------------------------------#\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#------------------------------------------------------------------------------#\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# failed so don't proceed\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# -- Add shell tests\n\n#------------------------------------------------------------------------------#\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# add the test\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# set the properties\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# -- return if no SLURM\n\n#------------------------------------------------------------------------------#\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# ------------------------------------------------------------------------ #\n\n# -- SLURM examples\n\n# ------------------------------------------------------------------------ #\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#------------------------------------------------------------------------------#\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# SLURM example tests\n\n#------------------------------------------------------------------------------#\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# add the test\n",
        "Line" : 166,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# set the properties\n",
        "Line" : 177,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "#------------------------------------------------------------------------------#\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "cmake/Modules/GenericFunctions.cmake" : {
      "ObjectId" : "f2f74b7f140349a536ad3ddf5f7f49bb1dfe0f7c",
      "LastModified" : "2018-02-06T20:53:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Include guard\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n\n#   OPTIONS TAKING STRING\n\n################################################################################\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\n\n#   Macro to add to string\n\n################################################################################\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################################################################################\n\n# function - capitalize - make a string capitalized (first letter is capital)\n\n#   usage:\n\n#       capitalize(\"SHARED\" CShared)\n\n#   message(STATUS \"-- CShared is \\\"${CShared}\\\"\")\n\n#   $ -- CShared is \"Shared\"\n\n################################################################################\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# make string lower\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "################################################################################\n\n#   Set project version\n\n################################################################################\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "################################################################################\n\n#    Get version components\n\n################################################################################\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "################################################################################\n\n#    Remove duplicates if string exists\n\n################################################################################\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "################################################################################\n\n#   set the two digit version\n\n################################################################################\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "################################################################################\n\n#   remove a file from a list of files\n\n################################################################################\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# loop over the list\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# get the base filename\n",
        "Line" : 145,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# check if full filename or base filename is exact match for\n\n# name provided\n",
        "Line" : 147,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# remove from list\n",
        "Line" : 151,
        "CharPositionInLine" : 12
      },
      "14" : {
        "Text" : "################################################################################\n\n#   check a RESULT_VARIABLE from execute_process(...)\n\n################################################################################\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "################################################################################\n\n#   numerically sort a list\n\n################################################################################\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "################################################################################\n\n#   Get a parameter from a CMake file\n\n#   - useful when variable is set to CACHE but needed as non-cache\n\n################################################################################\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "################################################################################\n\n#   get value in [0-9][0-9] format\n\n################################################################################\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "################################################################################\n\n# Get the hostname\n\n################################################################################\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "################################################################################\n\n# Function for usine \"uname\" for OS data\n\n################################################################################\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# checking if worked\n",
        "Line" : 250,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# iteration limiting\n",
        "Line" : 252,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# empty\n",
        "Line" : 254,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# fail if not successful\n",
        "Line" : 264,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# set the variable in parent scope\n",
        "Line" : 269,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "################################################################################\n\n# Get the OS system name (e.g. Darwin, Linux)\n\n################################################################################\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "################################################################################\n\n# Get the OS node name (e.g. JRM-macOS-DOE.local, cori09)\n\n################################################################################\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "################################################################################\n\n# Get the OS machine hardware name (e.g. x86_64)\n\n################################################################################\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 28
    },
    "cmake/Modules/GenericOptions.cmake" : {
      "ObjectId" : "9f6c24bc230393f97f959379f595a40c91270783",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Include guard\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n\n# Add option + feature\n\n################################################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\n\n# RPATH Relink Options\n\n################################################################################\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the RPATH to be used when installing\n",
        "Line" : 38,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# use, i.e. don't skip the full RPATH for the build tree\n",
        "Line" : 45,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# when building, don't use the install RPATH already\n\n# (but later on when installing)\n",
        "Line" : 48,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# add the automatically determined parts of the RPATH\n\n# which point to directories outside the build tree to the install RPATH\n",
        "Line" : 52,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# the RPATH to be used when installing, but only if it's not a system directory\n",
        "Line" : 56,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "################################################################################\n\n# Turn on GProf based profiling\n\n################################################################################\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "################################################################################\n\n# Look for accelerate, if found, add proper includes\n\n################################################################################\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/Modules/InstallDirs.cmake" : {
      "ObjectId" : "70f5147b088aa5e264e58f0c1d17f5aefbcdebaa",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Define GNU standard installation directories\n\n#\n\n# Provides install directory variables as defined by the\n\n# `GNU Coding Standards`_.\n\n#\n\n# .. _`GNU Coding Standards`: https://www.gnu.org/prep/standards/html_node/Directory-Variables.html\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# Inclusion of this module defines the following variables:\n\n#\n\n#   CMAKE_INSTALL_<dir>\n\n#\n\n#   Destination for files of a given type.  This value may be passed to\n\n#   the   DESTINATION   options of :command:`install` commands for the\n\n#   corresponding file type.\n\n#\n\n#   CMAKE_INSTALL_FULL_<dir>\n\n#\n\n#   The absolute path generated from the corresponding   CMAKE_INSTALL_<dir>\n\n#   value.  If the value is not already an absolute path, an absolute path\n\n#   is constructed typically by prepending the value of the\n\n#   :variable:`CMAKE_INSTALL_PREFIX` variable.  However, there are some\n\n#   `special cases`_ as documented below.\n\n#\n\n# where   <dir>   is one of:\n\n#\n\n#   BINDIR\n\n#       user executables (bin)\n\n#   SBINDIR\n\n#       system admin executables (sbin)\n\n#   LIBEXECDIR\n\n#       program executables (libexec)\n\n#   SYSCONFDIR\n\n#       read-only single-machine data (etc)\n\n#   SHAREDSTATEDIR\n\n#       modifiable architecture-independent data (com)\n\n#   LOCALSTATEDIR\n\n#       modifiable single-machine data (var)\n\n#   LIBDIR\n\n#       object code libraries (lib or lib64 or lib/<multiarch-tuple> on Debian)\n\n#   INCLUDEDIR\n\n#       C header files (include)\n\n#   OLDINCLUDEDIR\n\n#       C header files for non-gcc (/usr/include)\n\n#   DATAROOTDIR\n\n#       read-only architecture-independent data root (share)\n\n#   DATADIR\n\n#       read-only architecture-independent data (DATAROOTDIR)\n\n#   INFODIR\n\n#       info documentation (DATAROOTDIR/info)\n\n#   LOCALEDIR\n\n#       locale-dependent data (DATAROOTDIR/locale)\n\n#   MANDIR\n\n#       man documentation (DATAROOTDIR/man)\n\n#   DOCDIR\n\n#       documentation root (DATAROOTDIR/doc/PROJECT_NAME)\n\n#\n\n# ---------------------------------------------------------------------------- #\n\n#   Use default GNU install directories script\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ---------------------------------------------------------------------------- #\n\n#   Store the _LIBDIR_DEFAULT variable\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ---------------------------------------------------------------------------- #\n\n#   Add one for cmake export\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ---------------------------------------------------------------------------- #\n\n#   Add one for cmake export\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ---------------------------------------------------------------------------- #\n\n#   Add the cmake full directory variable\n\n#\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ---------------------------------------------------------------------------- #\n\n#   Function for getting a relative path to an installation directory\n\n#\n\n#   INSTALL_RELATIVE_PATH(<VAR> <TYPE> <REFERENCE_FOLDER>)\n\n#       VAR:               variable name\n\n#       TYPE:              install directory type (e.g. BIN, INCLUDE, LIB, etc.)\n\n#       REFERENCE_FOLDER:  relative to this directory\n\n#\n\n#   example: getting relative path of include directory from cmake directory\n\n#       INSTALL_RELATIVE_PATH(cmake_incdir INCLUDE ${CMAKE_INSTALL_FULL_CMAKEDIR})\n\n#\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/Modules/LibraryBuildOptions.cmake" : {
      "ObjectId" : "59aec8251d3aaf2357172ce3519ef44f657e1301",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Setup of general build options for  Libraries\n\n#\n\n# In addition to the core compiler/linker flags (configured in the\n\n# MakeRules_<LANG>.cmake files), the build may require\n\n# further configuration. This module performs this task whicj includes:\n\n#\n\n#  1) Extra build modes for developers\n\n#  2) Additional compiler definitions to optimize\n\n#     performance.\n\n#  3) Additional compiler flags which may be added optionally.\n\n#  4) Whether to build shared and/or static libraries.\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# Set up Build types or configurations\n\n# If further tuning of compiler flags is needed then it should be done here.\n\n# (It can't be done in the make rules override section).\n\n# However, exercise care when doing this not to override existing flags!!\n\n# We don't do this on WIN32 platforms yet because of some teething issues\n\n# with compiler specifics and linker flags\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# Setup Shared and/or Static Library builds\n\n# We name these options without a '${PROJECT_NAME}_' prefix because they are\n\n# really higher level CMake options.\n\n# Default to building shared libraries, mark options as advanced because\n\n# most user should not have to touch them.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Because both could be switched off accidently, FATAL_ERROR if neither\n\n# option has been selected.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/Modules/LibrarySuffixes.cmake" : {
      "ObjectId" : "385834228154a5113d35ceec78b00320e972cf84",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CMAKE_EXECUTABLE_SUFFIX     \"-debug${DEFAULT_EXECUTABLE_SUFFIX}\")\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#set(CMAKE_EXECUTABLE_SUFFIX     \"-rdebug${DEFAULT_EXECUTABLE_SUFFIX}\")\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#set(CMAKE_EXECUTABLE_SUFFIX     \"-minsize${DEFAULT_EXECUTABLE_SUFFIX}\")\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/Modules/MacroDefineModule.cmake" : {
      "ObjectId" : "c85d25e9dbbf5ee16a386a4c6bfc90855bf08369",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Macros for organizing and specializing code in modules\n\n#\n\n# This file defines the following macros for  developers needing\n\n# utlities for specializing source file properties\n\n#\n\n#\n\n# It will also add the module include directory to the list of directories\n\n# using include_directories\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Include guard\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# macro add_compile_flags(SOURCES <source1> ... <sourceN>\n\n#                                      COMPILE_FLAGS <def1> ... <defN>\n\n#                                      )\n\n#       Add extra compile definitions to a specific list of sources.\n\n#       Macroized to handle the need to specify absolute paths.\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We assume that the sources have been added at the level of a\n\n# a sources.cmake, so are inside the src subdir of the sources.cmake\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Now for each file, add the definitions\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# add base path\n",
        "Line" : 42,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Extract any existing compile definitions\n",
        "Line" : 49,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# quote compile defs because this must epand to space separated list\n",
        "Line" : 61,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# macro define_module(NAME <name>\n\n#           HEADER_EXT <header_ext1> <header_ext2> ... <header_extN>\n\n#           SOURCE_EXT <source_ext1> <source_ext2> ... <source_extN>\n\n#           LINK_LIBRARIES <lib1> ... <lib2>)\n\n#       Define a  Module's source extensions and what internal and external\n\n#       libraries it links to.\n\n#\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# set the filename\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# get the path\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Header directory\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Source directory\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# list of files\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# GLOB the headers with provided extensions\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# GLOB the sources with provided extensions\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Append the linked libraries\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Check for files in custom target list\n",
        "Line" : 134,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# loop over the source extensions\n",
        "Line" : 145,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# Remove the explicitly excluded files\n",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# loop over the header extensions\n",
        "Line" : 166,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# loop over the source extensions\n",
        "Line" : 173,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# Tell the user this file is not being compiled\n",
        "Line" : 182,
        "CharPositionInLine" : 11
      },
      "23" : {
        "Text" : "# include the directory\n",
        "Line" : 186,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# check for existance of modules.cmake and if it exists\n\n# add it to list of files to include\n",
        "Line" : 193,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 25
    },
    "cmake/Modules/MacroLibraryTargets.cmake" : {
      "ObjectId" : "1f292771aafe7d9229112fea829b8998107b28ef",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Define useful macros\n\n#\n\n# A custom compile definition \"DEVELOPER_<CONFIG>\" is set on\n\n# each target using the target property COMPILE_DEFINITIONS_<CONFIG>\n\n# target property\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# function compile_definitions_config(<target>)\n\n#          Set a custom compile definition for a  target on a\n\n#          per configuration basis:\n\n#            For mode <CONFIG>, define DEVELOPER_<CONFIG>\n\n#\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# - Multimode tools\n",
        "Line" : 27,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# - Single mode tools, only if set\n",
        "Line" : 35,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# - OBJECT_TARGET\n\n# General build of a  library target\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We have to distinguish the static from shared lib, so use -static in\n\n# name. Link its dependencies, and ensure we actually link to the\n\n# -static targets (We should strictly do this for the external\n\n# libraries as well if we want a pure static build).\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# from DEFINE_MODULE\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# - GLOBAL_OBJECT_TARGET\n\n# Build and install of a  category library\n\n#\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# We loop over the component sources one at a time,\n\n# appending properties as we go.\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# In case we have a global lib with one component, ensure name gets set\n",
        "Line" : 96,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Filter out duplicates in LINK_LIBRARIES\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Header install?\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Store the include path of the component so that the build tree\n\n# config file can pick up all needed header paths\n",
        "Line" : 133,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 13
    },
    "cmake/Modules/MacroUtilities.cmake" : {
      "ObjectId" : "175824ab076a6f71584d6b0eb09f6638b2137de3",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# MacroUtilities - useful macros and functions for generic tasks\n\n#\n\n# CMake Extensions\n\n# ----------------\n\n# macro set_ifnot(<var> <value>)\n\n#       If variable var is not set, set its value to that provided\n\n#\n\n# function enum_option(<option>\n\n#                      VALUES <value1> ... <valueN>\n\n#                      TYPE   <valuetype>\n\n#                      DOC    <docstring>\n\n#                      [DEFAULT <elem>]\n\n#                      [CASE_INSENSITIVE])\n\n#          Declare a cache variable <option> that can only take values\n\n#          listed in VALUES. TYPE may be FILEPATH, PATH or STRING.\n\n#          <docstring> should describe that option, and will appear in\n\n#          the interactive CMake interfaces. If DEFAULT is provided,\n\n#          <elem> will be taken as the zero-indexed element in VALUES\n\n#          to which the value of <option> should default to if not\n\n#          provided. Otherwise, the default is taken as the first\n\n#          entry in VALUES. If CASE_INSENSITIVE is present, then\n\n#          checks of the value of <option> against the allowed values\n\n#          will ignore the case when performing string comparison.\n\n#\n\n#\n\n# General\n\n# --------------\n\n# function add_feature(<NAME> <DOCSTRING>)\n\n#          Add a  feature, whose activation is specified by the\n\n#          existence of the variable <NAME>, to the list of enabled/disabled\n\n#          features, plus a docstring describing the feature\n\n#\n\n# function print_enabled_features()\n\n#          Print enabled  features plus their docstrings.\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Include guard\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# CMAKE EXTENSIONS\n\n#-----------------------------------------------------------------------\n\n# macro set_ifnot(<var> <value>)\n\n#       If variable var is not set, set its value to that provided\n\n#\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# macro set_ifnot_match(<var> <value>)\n\n#       If variable var is not set, set its value to that provided\n\n#\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# macro cache_ifnot(<var> <value>)\n\n#       If variable var is not set, set its value to that provided and cache it\n\n#\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# function enum_option(<option>\n\n#                      VALUES <value1> ... <valueN>\n\n#                      TYPE   <valuetype>\n\n#                      DOC    <docstring>\n\n#                      [DEFAULT <elem>]\n\n#                      [CASE_INSENSITIVE])\n\n#          Declare a cache variable <option> that can only take values\n\n#          listed in VALUES. TYPE may be FILEPATH, PATH or STRING.\n\n#          <docstring> should describe that option, and will appear in\n\n#          the interactive CMake interfaces. If DEFAULT is provided,\n\n#          <elem> will be taken as the zero-indexed element in VALUES\n\n#          to which the value of <option> should default to if not\n\n#          provided. Otherwise, the default is taken as the first\n\n#          entry in VALUES. If CASE_INSENSITIVE is present, then\n\n#          checks of the value of <option> against the allowed values\n\n#          will ignore the case when performing string comparison.\n\n#\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# - Validation as needed arguments\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# - Set argument defaults as needed\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# - convert to lowercase\n",
        "Line" : 141,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# from\n\n#   http://www.cmake.org/pipermail/cmake/2008-April/021345.html\n\n#-----------------------------------------------------------------------\n\n#\n\n#\n\n# Adds a file or directory to the FILES_TO_DELETE var so that it is removed\n\n# when \"make distclean\" is run\n\n#\n\n# Prototype:\n\n#    ADD_TO_DISTCLEAN(file)\n\n# Parameters:\n\n#    file    A file or dir\n\n#\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# from\n\n#   http://www.cmake.org/pipermail/cmake/2008-April/021345.html\n\n#-----------------------------------------------------------------------\n\n#\n\n# Create a \"make distclean\" target\n\n#\n\n# Prototype:\n\n#    GENERATE_DISTCLEAN_TARGET()\n\n# Parameters:\n\n#    (none)\n\n#\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This code does not work yet. I don't know why CPACK_GENERATOR is null.\n",
        "Line" : 201,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Unix\n",
        "Line" : 246,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# Determine if two paths are the same\n\n#\n\n#-----------------------------------------------------------------------\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# Resolve symbolic links, remove duplicates, and remove system paths\n\n#   in CMAKE_PREFIX_PATH\n\n#\n\n#-----------------------------------------------------------------------\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# loop over system path types\n",
        "Line" : 284,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# loop over system paths\n",
        "Line" : 286,
        "CharPositionInLine" : 12
      },
      "17" : {
        "Text" : "# check if equal\n",
        "Line" : 288,
        "CharPositionInLine" : 16
      },
      "18" : {
        "Text" : "# exit loop if equal\n",
        "Line" : 290,
        "CharPositionInLine" : 16
      },
      "19" : {
        "Text" : "# exit loop if equal\n",
        "Line" : 295,
        "CharPositionInLine" : 12
      },
      "20" : {
        "Text" : "# if not a system path\n",
        "Line" : 300,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# remove any duplicates\n",
        "Line" : 305,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# force the new prefix path\n",
        "Line" : 309,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# Add a defined ${PACKAGE_NAME}_ROOT variable defined via CMake or in\n\n# environment to the CMAKE_PREFIX_PATH\n\n#\n\n# This macro should NOT be called directly, instead call\n\n# ConfigureRootSearchPath (i.e. with \"_\" prefix)\n\n#-----------------------------------------------------------------------\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# if ROOT not already defined and ENV variable defines it\n",
        "Line" : 326,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# if ROOT is still not defined, check upper case and capitalize version\n\n# and return\n",
        "Line" : 333,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# if ROOT is defined and has changed\n",
        "Line" : 348,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# make sure it exists and is a directory\n",
        "Line" : 354,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# store previous root to see if it changed\n",
        "Line" : 359,
        "CharPositionInLine" : 12
      },
      "29" : {
        "Text" : "# root changed so we want to refind the package\n",
        "Line" : 367,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# skip maintain\n",
        "Line" : 380,
        "CharPositionInLine" : 16
      },
      "31" : {
        "Text" : "# loop over cached variables\n",
        "Line" : 382,
        "CharPositionInLine" : 20
      },
      "32" : {
        "Text" : "# store previous root to see if it changed\n",
        "Line" : 411,
        "CharPositionInLine" : 12
      },
      "33" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# Add a defined ${PACKAGE_NAME}_ROOT variable defined via CMake or in\n\n# environment to the CMAKE_PREFIX_PATH\n\n#\n\n# Different from _ConfigureRootSearchPath\n\n#-----------------------------------------------------------------------\n",
        "Line" : 423,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# GENERAL\n\n#-----------------------------------------------------------------------\n\n# function add_feature(<NAME> <DOCSTRING>)\n\n#          Add a project feature, whose activation is specified by the\n\n#          existence of the variable <NAME>, to the list of enabled/disabled\n\n#          features, plus a docstring describing the feature\n\n#\n",
        "Line" : 439,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#set(${_var} ${${_var}} CACHE INTERNAL \"${_description}${EXTRA_DESC}\")\n",
        "Line" : 457,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# function add_subfeature(<ROOT_OPTION> <NAME> <DOCSTRING>)\n\n#          Add a subfeature, whose activation is specified by the\n\n#          existence of the variable <NAME>, to the list of enabled/disabled\n\n#          features, plus a docstring describing the feature\n\n#\n",
        "Line" : 462,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#set(${_var} ${${_var}} CACHE INTERNAL \"${_description}${EXTRA_DESC}\")\n",
        "Line" : 479,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# function add_option(<OPTION_NAME> <DOCSRING> <DEFAULT_SETTING> [NO_FEATURE])\n\n#          Add an option and add as a feature if NO_FEATURE is not provided\n\n#\n",
        "Line" : 484,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# function add_dependent_option(<OPTION_NAME> <DOCSRING>\n\n#                               <CONDITION_TRUE_SETTING> <CONDITION>\n\n#                               <DEFAULT_SETTING> [NO_FEATURE])\n\n#          Add an option and add as a feature if NO_FEATURE is not provided\n\n#\n",
        "Line" : 499,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# function print_enabled_features()\n\n#          Print enabled  features plus their docstrings.\n\n#\n",
        "Line" : 517,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# add feature to text\n",
        "Line" : 531,
        "CharPositionInLine" : 12
      },
      "42" : {
        "Text" : "# get description\n",
        "Line" : 533,
        "CharPositionInLine" : 12
      },
      "43" : {
        "Text" : "# print description, if not standard ON/OFF, print what is set to\n",
        "Line" : 535,
        "CharPositionInLine" : 12
      },
      "44" : {
        "Text" : "# check for subfeatures\n",
        "Line" : 556,
        "CharPositionInLine" : 12
      },
      "45" : {
        "Text" : "# remove duplicates and sort if subfeatures exist\n",
        "Line" : 558,
        "CharPositionInLine" : 12
      },
      "46" : {
        "Text" : "# sort enabled and disabled features into lists\n",
        "Line" : 564,
        "CharPositionInLine" : 12
      },
      "47" : {
        "Text" : "# loop over enabled subfeatures\n",
        "Line" : 575,
        "CharPositionInLine" : 12
      },
      "48" : {
        "Text" : "# add subfeature to text\n",
        "Line" : 577,
        "CharPositionInLine" : 16
      },
      "49" : {
        "Text" : "# get subfeature description\n",
        "Line" : 579,
        "CharPositionInLine" : 16
      },
      "50" : {
        "Text" : "# print subfeature description. If not standard ON/OFF, print\n\n# what is set to\n",
        "Line" : 581,
        "CharPositionInLine" : 16
      },
      "51" : {
        "Text" : "# loop over disabled subfeatures\n",
        "Line" : 594,
        "CharPositionInLine" : 12
      },
      "52" : {
        "Text" : "# add subfeature to text\n",
        "Line" : 596,
        "CharPositionInLine" : 16
      },
      "53" : {
        "Text" : "# get subfeature description\n",
        "Line" : 598,
        "CharPositionInLine" : 16
      },
      "54" : {
        "Text" : "# print subfeature description.\n",
        "Line" : 600,
        "CharPositionInLine" : 16
      },
      "55" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# function print_disabled_features()\n\n#          Print disabled features plus their docstrings.\n\n#\n",
        "Line" : 616,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# function print_features()\n\n#          Print all features plus their docstrings.\n\n#\n",
        "Line" : 646,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "#------------------------------------------------------------------------------#\n",
        "Line" : 656,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Override this default 'lib' with 'lib64' if:\n\n#  - we are on Linux system but NOT cross-compiling\n\n#  - we are NOT on debian\n\n#  - we are on a 64 bits system\n\n# reason is: amd64 ABI: http://www.x86-64.org/documentation/abi.pdf\n\n# Note that the future of multi-arch handling may be even\n\n# more complicated than that: http://wiki.debian.org/Multiarch\n",
        "Line" : 659,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# __LAST_LIBDIR_DEFAULT is the default value that we compute from\n\n# _GNUInstallDirs_LAST_CMAKE_INSTALL_PREFIX, not a cache entry for\n\n# the value that was last used as the default.\n\n# This value is used to figure out whether the user changed the\n\n# CMAKE_INSTALL_LIBDIR value manually, or if the value was the\n\n# default one. When CMAKE_INSTALL_PREFIX changes, the value is\n\n# updated to the new default, unless the user explicitly changed it.\n",
        "Line" : 668,
        "CharPositionInLine" : 6
      },
      "60" : {
        "Text" : "# is this a debian system ?\n",
        "Line" : 678,
        "CharPositionInLine" : 40
      },
      "61" : {
        "Text" : "# not debian, rely on CMAKE_SIZEOF_VOID_P:\n",
        "Line" : 688,
        "CharPositionInLine" : 13
      },
      "62" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# macro CACHE_VARIABLES_FOR_REFERENCE(...)\n\n#           Provide a list of variables that will be stored in the cache\n\n#               as {variable_name}_REF for later reference\n\n#           This version does not force the cache to be updated\n",
        "Line" : 706,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# macro CACHE_VARIABLES_FOR_REFERENCE(...)\n\n#           Provide a list of variables that will be stored in the cache\n\n#              as {variable_name}_REF for later reference\n\n#           This version forces the cache to be updated\n",
        "Line" : 717,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "#------------------------------------------------------------------------------#\n",
        "Line" : 728,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 65
    },
    "cmake/Modules/MakeRulesC.cmake" : {
      "ObjectId" : "fcc14ac315adbf91c7363dd51c55ffd474fe3a4a",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - MakeRulesC\n\n# Sets the default make rules for a C build, specifically the\n\n# initialization of the compiler flags on a platform and compiler\n\n# dependent basis\n\n#\n\n# Settings for each compiler are handled in a dedicated function.\n\n# Whilst we only handle GNU, Clang and Intel, these are sufficiently\n\n# different in the required flags that individual handling is needed.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# MSVC\n\n#------------------------------------------------------------------------------#\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# macro for cleaning variables used by MakeRulesC.cmake and MakeRuleCXX.cmake\n\n#------------------------------------------------------------------------------#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# macro for finding the x86intrin.h header path that needs to be explicitly\n\n# in the search path\n\n#   - Otherwise, icc/icpc will use the GNU x86intrin.h header and\n\n#     this header causes quite a bit of compilation problems\n\n# - The Intel compiler has alot of links and not an easy structure to search\n\n#   so this macro pretty much assumes the x86intrinc.h file will be in\n\n#   an icc/ folder although (icpc/ and icl/) are also permitted)\n\n# - When explicitly setting this folder, be sure to include icc/ or whatever\n\n#   the parent directory is\n\n#------------------------------------------------------------------------------#\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#--------------------------------------------------------------------------#\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#--------------------------------------------------------------------------#\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#--------------------------------------------------------------------------#\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#--------------------------------------------------------------------------#\n",
        "Line" : 96,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# GNU C++ or LLVM/Clang Compiler on all(?) platforms\n\n#\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# Intel C++ Compilers\n\n#\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# IBM xlC compiler\n\n#\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# HP aC++ Compiler\n\n#\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# IRIX MIPSpro CC Compiler\n\n#\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# Unknown compiler\n\n#\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "cmake/Modules/MakeRulesCXX.cmake" : {
      "ObjectId" : "3a0d8b8513e06e653876350de742bdc96e9ce24b",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - MakeRulesCXX\n\n# Sets the default make rules for a CXX build, specifically the\n\n# initialization of the compiler flags on a platform and compiler\n\n# dependent basis\n\n#\n\n# Settings for each compiler are handled in a dedicated function.\n\n# Whilst we only handle GNU, Clang and Intel, these are sufficiently\n\n# different in the required flags that individual handling is needed.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# MSVC\n\n#------------------------------------------------------------------------------#\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# macro for cleaning variables used by MakeRulesC.cmake and MakeRuleCXX.cmake\n\n#------------------------------------------------------------------------------#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# macro for finding the x86intrin.h header path that needs to be explicitly\n\n# in the search path\n\n#   - Otherwise, icc/icpc will use the GNU x86intrin.h header and\n\n#     this header causes quite a bit of compilation problems\n\n# - The Intel compiler has alot of links and not an easy structure to search\n\n#   so this macro pretty much assumes the x86intrinc.h file will be in\n\n#   an icc/ folder although (icpc/ and icl/) are also permitted)\n\n# - When explicitly setting this folder, be sure to include icc/ or whatever\n\n#   the parent directory is\n\n#------------------------------------------------------------------------------#\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#--------------------------------------------------------------------------#\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#--------------------------------------------------------------------------#\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#--------------------------------------------------------------------------#\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#--------------------------------------------------------------------------#\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# GNU C++ or LLVM/Clang Compiler on all(?) platforms\n\n#\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# Intel C++ Compilers\n\n#\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#-----------------------------------------------------------------------\n\n# IBM xlC compiler\n\n#\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#---------------------------------------------------------------------\n\n# HP aC++ Compiler\n\n#\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#---------------------------------------------------------------------\n\n# IRIX MIPSpro CC Compiler\n\n#\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# Unknown compiler\n\n#\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "cmake/Modules/Testing.cmake" : {
      "ObjectId" : "1961b8687590555f389e24712659a9a06b21a6b7",
      "LastModified" : "2018-02-06T20:53:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# if this is directory we are running CDash (don't set to ON)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# slurm config\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ------------------------------------------------------------------------ #\n\n# -- SLURM variables\n\n# ------------------------------------------------------------------------ #\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# first value is default so if TARGET_ARCHITECTURE is known, then use it\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# set the machines (first value is default)\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# ------------------------------------------------------------------------ #\n\n# -- Miscellaneous\n\n# ------------------------------------------------------------------------ #\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# environment variables\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ------------------------------------------------------------------------ #\n\n# -- Function to create a temporary directory\n\n# ------------------------------------------------------------------------ #\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# create a root working directory\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# make temporary directory\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# ------------------------------------------------------------------------ #\n\n# -- Configure Branch label\n\n# ------------------------------------------------------------------------ #\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ------------------------------------------------------------------------ #\n\n# -- Add options\n\n# ------------------------------------------------------------------------ #\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#string(REPLACE \" \" \"\\n\\t\" _tmp \"${${VARIABLE}}\")\n\n#message(STATUS \"${VARIABLE} : \\n\\t${_tmp}\")\n",
        "Line" : 158,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# ------------------------------------------------------------------------ #\n\n# -- Configure CTest for CDash\n\n# ------------------------------------------------------------------------ #\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# get temporary directory for dashboard testing\n",
        "Line" : 171,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# set the CMake configure options\n",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "## -- CTest Config\n",
        "Line" : 187,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "## -- CTest Setup\n",
        "Line" : 199,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "## -- CTest Custom\n",
        "Line" : 204,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# ------------------------------------------------------------------------ #\n\n# -- Configure CTest tests\n\n# ------------------------------------------------------------------------ #\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# ------------------------------------------------------------------------ #\n\n# get the python tests\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# ------------------------------------------------------------------------ #\n\n# add CXX unit test\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# set the properties\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# ------------------------------------------------------------------------ #\n\n# add Python unit tests\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# name of python test\n",
        "Line" : 242,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# add the test\n",
        "Line" : 246,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# set the properties\n",
        "Line" : 250,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# ------------------------------------------------------------------------ #\n\n# coverage\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# add the test\n",
        "Line" : 258,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# set the properties\n",
        "Line" : 264,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# ------------------------------------------------------------------------ #\n\n# examples\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "cmake/Packages/FindBLAS.cmake" : {
      "ObjectId" : "35bf578704f661da918ea02e8317617e4ea4b074",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find a BLAS library (no includes)\n\n# This module defines\n\n#  BLAS_LIBRARIES, the libraries needed to use BLAS.\n\n#  BLAS_FOUND, If false, do not try to use BLAS.\n\n# also defined, but not for general use are\n\n#  BLAS_LIBRARY, where to find the BLAS library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Packages/FindElemental.cmake" : {
      "ObjectId" : "07f65d2f92c0aa09d9da8205e80e9d70ce469658",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Module for locating Elemental.\n\n#\n\n# Customizable variables:\n\n#   Elemental_ROOT\n\n#       Specifies Elemental's root directory.\n\n#\n\n# Read-only variables:\n\n#   Elemental_FOUND\n\n#       Indicates whether the library has been found.\n\n#\n\n#   Elemental_INCLUDE_DIRS\n\n#       Specifies Elemental's include directory.\n\n#\n\n#   Elemental_LIBRARIES\n\n#       Specifies Elemental libraries that should be passed to target_link_libararies.\n\n#\n\n#   Elemental_<COMPONENT>_LIBRARIES\n\n#       Specifies the libraries of a specific <COMPONENT>.\n\n#\n\n#   Elemental_<COMPONENT>_FOUND\n\n#       Indicates whether the specified <COMPONENT> was found.\n\n#\n\n#   Elemental_CXX_LINK_FLAGS\n\n#       C++ linker compile flags\n\n#\n\n# Copyright (c) 2017 Jonathan Madsen\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTElementalLAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set to OFF. Elemental is a very bad CMake installation\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#----- Elemental installation root\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#----- Elemental include directory\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#----- Elemental library\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#----- Elemental library\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#----- Elemental library\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#----- Elemental library\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#----- Elemental library\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#----- Determine library's version\n",
        "Line" : 118,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# -dev suffix will screw up CMake version check\n\n#STRING (REPLACE \"-dev\" \"\" Elemental_VERSION_MINOR \"${Elemental_VERSION_MINOR}\")\n",
        "Line" : 129,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#----- Elemental library\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "cmake/Packages/FindFFTW3.cmake" : {
      "ObjectId" : "554327130ede6a68ba4b3fdf97cecf841cc6dc11",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Module for locating Fast Fourier Transform 3 Library (FFTW3).\n\n#\n\n# Customizable variables:\n\n#   FFTW3_ROOT\n\n#       Specifies FFTW3's root directory.\n\n##\n\n# Read-only variables:\n\n#   FFTW3_FOUND\n\n#       Indicates whether the library has been found.\n\n#\n\n#   FFTW3_INCLUDE_DIRS\n\n#       Specifies FFTW3's include directory.\n\n#\n\n#   FFTW3_LIBRARIES\n\n#       Specifies FFTW3 libraries that should be passed to target_link_libararies.\n\n#\n\n#   FFTW3_<COMPONENT>_LIBRARIES\n\n#       Specifies the libraries of a specific <COMPONENT>.\n\n#\n\n#   FFTW3_<COMPONENT>_FOUND\n\n#       Indicates whether the specified <COMPONENT> was found.\n\n#\n\n#   FFTW3_CXX_LINK_FLAGS\n\n#       C++ linker compile flags\n\n#\n\n# Copyright (c) 2017 Jonathan Madsen\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----- FFTW3 default components\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#----- FFTW3 installation root\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#----- FFTW3 include directory\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#----- Component options\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#----- Find components\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Component missing: record it for a later report\n",
        "Line" : 136,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# setup the FFTW3_<COMPONENT>_LIBRARIES variable\n",
        "Line" : 144,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "#----- Missing components\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Display missing components indented, each on a separate line\n",
        "Line" : 157,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "#----- Components\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "cmake/Packages/FindGOMP.cmake" : {
      "ObjectId" : "863c11fee6e9ac61da98dcb8f9360337efa64374",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Module for locating GCC OpenMP library (gomp).\n\n#\n\n# Customizable variables:\n\n#   GOMP_ROOT\n\n#       Specifies GOMP's root directory.\n\n#\n\n# Read-only variables:\n\n#   GOMP_FOUND\n\n#       Indicates whether the library has been found.\n\n#\n\n#   GOMP_INCLUDE_DIRS\n\n#       Specifies GOMP's include directory.\n\n#\n\n#   GOMP_LIBRARIES\n\n#       Specifies GOMP libraries that should be passed to target_link_libararies.\n\n#\n\n# Copyright (c) 2017 Jonathan Madsen\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTGOMPLAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----- GOMP suffixes\n\n#----- works for Ubuntu. Not sure about other systems\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#----- GOMP installation root\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#----- GOMP include directory\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#----- GOMP library\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#----- assume the compiler can find it\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#----- Standard arguments\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#----- FindGOMP non-cache variables\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#----- Hide in advanced section of GUI\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/Packages/FindIMF.cmake" : {
      "ObjectId" : "47908e402c5f6c23593ef6c8961633930ef1dabe",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Module for locating Intel's Math Kernel Library (IMF).\n\n#\n\n# Customizable variables:\n\n#   IMF_ROOT\n\n#       Specifies IMF's root directory.\n\n#\n\n# Read-only variables:\n\n#   IMF_FOUND\n\n#       Indicates whether the library has been found.\n\n#\n\n#   IMF_LIBRARIES\n\n#       Specifies IMF libraries that should be passed to target_link_libararies.\n\n#\n\n#   IMF_CXX_LINK_FLAGS\n\n#       C++ linker compile flags\n\n#\n\n# Copyright (c) 2017 Jonathan Madsen\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTIMFLAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# get compiler dir, e.g. linux/bin/intel64\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# go back up one more dir, e.g. linux/bin/\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# go back up one more dir, e.g. linux/\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#----- IMF installation root\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#----- IMF include directory\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#----- Library suffix\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#----- IMF runtime library\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/Packages/FindLAPACK.cmake" : {
      "ObjectId" : "6fd76f3ce24d758288a9254f0760f4cc0f823d4c",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find a LAPACK library (no includes)\n\n# This module defines\n\n#  LAPACK_LIBRARIES, the libraries needed to use LAPACK.\n\n#  LAPACK_FOUND, If false, do not try to use LAPACK.\n\n# also defined, but not for general use are\n\n#  LAPACK_LIBRARY, where to find the LAPACK library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Packages/FindMKL.cmake" : {
      "ObjectId" : "eaa7bb2cdc2e66beacc6541e4b3d1b79585682ad",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Module for locating Intel's Math Kernel Library (MKL).\n\n#\n\n# Customizable variables:\n\n#   MKL_ROOT\n\n#       Specifies MKL's root directory.\n\n#\n\n#   MKL_64BIT_INTEGER\n\n#       Enable MKL with 64-bit integer\n\n#\n\n#   MKL_THREADING\n\n#       MKL threading model (options: sequential, OpenMP, TBB)\n\n#\n\n# Read-only variables:\n\n#   MKL_FOUND\n\n#       Indicates whether the library has been found.\n\n#\n\n#   MKL_INCLUDE_DIRS\n\n#       Specifies MKL's include directory.\n\n#\n\n#   MKL_LIBRARIES\n\n#       Specifies MKL libraries that should be passed to target_link_libararies.\n\n#\n\n#   MKL_<COMPONENT>_LIBRARIES\n\n#       Specifies the libraries of a specific <COMPONENT>.\n\n#\n\n#   MKL_<COMPONENT>_FOUND\n\n#       Indicates whether the specified <COMPONENT> was found.\n\n#\n\n#   MKL_CXX_LINK_FLAGS\n\n#       C++ linker compile flags\n\n#\n\n# Copyright (c) 2017 Jonathan Madsen\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTMKLLAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----- MKL installation root\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#----- MKL include directory\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#----- Library suffix\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#----- MKL runtime library\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#----- Component options\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#----- Find components\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Component missing: record it for a later report\n",
        "Line" : 160,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# setup the MKL_<COMPONENT>_LIBRARIES variable\n",
        "Line" : 168,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "#----- Missing components\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Display missing components indented, each on a separate line\n",
        "Line" : 181,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "#----- Determine library's version\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#----- Threading\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#----- Components\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#----- Threading\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#----- 64 bit integer support\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#----- Threading\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#----- libm and libdl libraries\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "cmake/Packages/FindMPI.cmake" : {
      "ObjectId" : "f2b57216d1c877bec6da2dfbc0fbee882902d977",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindMPI\n\n# -------\n\n#\n\n# Find a Message Passing Interface (MPI) implementation\n\n#\n\n# The Message Passing Interface (MPI) is a library used to write\n\n# high-performance distributed-memory parallel applications, and is\n\n# typically deployed on a cluster.  MPI is a standard interface (defined\n\n# by the MPI forum) for which many implementations are available.  All\n\n# of them have somewhat different include paths, libraries to link\n\n# against, etc., and this module tries to smooth out those differences.\n\n#\n\n# === Variables ===\n\n#\n\n# This module will set the following variables per language in your\n\n# project, where <lang> is one of C, CXX, or Fortran:\n\n#\n\n# ::\n\n#\n\n#    MPI_<lang>_FOUND           TRUE if FindMPI found MPI flags for <lang>\n\n#    MPI_<lang>_COMPILER        MPI Compiler wrapper for <lang>\n\n#    MPI_<lang>_COMPILE_FLAGS   Compilation flags for MPI programs\n\n#    MPI_<lang>_INCLUDE_PATH    Include path(s) for MPI header\n\n#    MPI_<lang>_LINK_FLAGS      Linking flags for MPI programs\n\n#    MPI_<lang>_LIBRARIES       All libraries to link MPI programs against\n\n#\n\n# Additionally, FindMPI sets the following variables for running MPI\n\n# programs from the command line:\n\n#\n\n# ::\n\n#\n\n#    MPIEXEC                    Executable for running MPI programs\n\n#    MPIEXEC_NUMPROC_FLAG       Flag to pass to MPIEXEC before giving\n\n#                               it the number of processors to run on\n\n#    MPIEXEC_PREFLAGS           Flags to pass to MPIEXEC directly\n\n#                               before the executable to run.\n\n#    MPIEXEC_POSTFLAGS          Flags to pass to MPIEXEC after other flags\n\n#\n\n# === Usage ===\n\n#\n\n# To use this module, simply call FindMPI from a CMakeLists.txt file, or\n\n# run find_package(MPI), then run CMake.  If you are happy with the\n\n# auto- detected configuration for your language, then you're done.  If\n\n# not, you have two options:\n\n#\n\n# ::\n\n#\n\n#    1. Set MPI_<lang>_COMPILER to the MPI wrapper (mpicc, etc.) of your\n\n#       choice and reconfigure.  FindMPI will attempt to determine all the\n\n#       necessary variables using THAT compiler's compile and link flags.\n\n#    2. If this fails, or if your MPI implementation does not come with\n\n#       a compiler wrapper, then set both MPI_<lang>_LIBRARIES and\n\n#       MPI_<lang>_INCLUDE_PATH.  You may also set any other variables\n\n#       listed above, but these two are required.  This will circumvent\n\n#       autodetection entirely.\n\n#\n\n# When configuration is successful, MPI_<lang>_COMPILER will be set to\n\n# the compiler wrapper for <lang>, if it was found.  MPI_<lang>_FOUND\n\n# and other variables above will be set if any MPI implementation was\n\n# found for <lang>, regardless of whether a compiler was found.\n\n#\n\n# When using MPIEXEC to execute MPI applications, you should typically\n\n# use all of the MPIEXEC flags as follows:\n\n#\n\n# ::\n\n#\n\n#    ${MPIEXEC} ${MPIEXEC_NUMPROC_FLAG} PROCS\n\n#      ${MPIEXEC_PREFLAGS} EXECUTABLE ${MPIEXEC_POSTFLAGS} ARGS\n\n#\n\n# where PROCS is the number of processors on which to execute the\n\n# program, EXECUTABLE is the MPI program, and ARGS are the arguments to\n\n# pass to the MPI program.\n\n#\n\n# === Backward Compatibility ===\n\n#\n\n# For backward compatibility with older versions of FindMPI, these\n\n# variables are set, but deprecated:\n\n#\n\n# ::\n\n#\n\n#    MPI_FOUND           MPI_COMPILER        MPI_LIBRARY\n\n#    MPI_COMPILE_FLAGS   MPI_INCLUDE_PATH    MPI_EXTRA_LIBRARY\n\n#    MPI_LINK_FLAGS      MPI_LIBRARIES\n\n#\n\n# In new projects, please use the MPI_<lang>_XXX equivalents.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2011 Kitware, Inc.\n\n# Copyright 2010-2011 Todd Gamblin tgamblin@llnl.gov\n\n# Copyright 2001-2009 Dave Partyka\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include this to handle the QUIETLY and REQUIRED arguments\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# This part detects MPI compilers, attempting to wade through the mess of compiler names in\n\n# a sensible way.\n\n#\n\n# The compilers are detected in this order:\n\n#\n\n# 1. Try to find the most generic available MPI compiler, as this is usually set up by\n\n#    cluster admins.  e.g., if plain old mpicc is available, we'll use it and assume it's\n\n#    the right compiler.\n\n#\n\n# 2. If a generic mpicc is NOT found, then we attempt to find one that matches\n\n#    CMAKE_<lang>_COMPILER_ID. e.g. if you are using XL compilers, we'll try to find mpixlc\n\n#    and company, but not mpiicc.  This hopefully prevents toolchain mismatches.\n\n#\n\n# If you want to force a particular MPI compiler other than what we autodetect (e.g. if you\n\n# want to compile regular stuff with GNU and parallel stuff with Intel), you can always set\n\n# your favorite MPI_<lang>_COMPILER explicitly and this stuff will be ignored.\n\n#\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Start out with the generic MPI compiler names, as these are most commonly used.\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# GNU compiler names\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Intel MPI compiler names\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# PGI compiler names\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# XLC MPI Compiler names\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# append vendor-specific compilers to the list if we either don't know the compiler id,\n\n# or if we know it matches the regular compiler.\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# clean up the namespace here\n",
        "Line" : 166,
        "CharPositionInLine" : 48
      },
      "11" : {
        "Text" : "# Names to try for MPI exec\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Grab the path to MPI from the registry if we're on windows.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# MSMPI\n",
        "Line" : 177,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# The default path ends with a '\\' and doesn't mix with ';' when appending.\n",
        "Line" : 178,
        "CharPositionInLine" : 55
      },
      "15" : {
        "Text" : "# The SDK is installed separately from the runtime\n",
        "Line" : 182,
        "CharPositionInLine" : 53
      },
      "16" : {
        "Text" : "# MPICH\n",
        "Line" : 183,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Build a list of prefixes to search for MPI.\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Intel MPI 5.0.1 will return a zero return code even when the\n\n# argument to the MPI compiler wrapper is unknown.  Attempt to\n\n# catch this case.\n",
        "Line" : 204,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "#\n\n# interrogate_mpi_compiler(lang try_libs)\n\n#\n\n# Attempts to extract compiler and linker args from an MPI compiler. The arguments set\n\n# by this function are:\n\n#\n\n#   MPI_<lang>_INCLUDE_PATH    MPI_<lang>_LINK_FLAGS     MPI_<lang>_FOUND\n\n#   MPI_<lang>_COMPILE_FLAGS   MPI_<lang>_LIBRARIES\n\n#\n\n# MPI_<lang>_COMPILER must be set beforehand to the absolute path to an MPI compiler for\n\n# <lang>.  Additionally, MPI_<lang>_INCLUDE_PATH and MPI_<lang>_LIBRARIES may be set\n\n# to skip autodetection.\n\n#\n\n# If try_libs is TRUE, this will also attempt to find plain MPI libraries in the usual\n\n# way.  In general, this is not as effective as interrogating the compilers, as it\n\n# ignores language-specific flags and libraries.  However, some MPI implementations\n\n# (Windows implementations) do not have compiler wrappers, so this approach must be used.\n\n#\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# MPI_${lang}_NO_INTERROGATE will be set to a compiler name when the *regular* compiler was\n\n# discovered to be the MPI compiler.  This happens on machines like the Cray XE6 that use\n\n# modules to set cc, CC, and ftn to the MPI compilers.  If the user force-sets another MPI\n\n# compiler, MPI_${lang}_COMPILER won't be equal to MPI_${lang}_NO_INTERROGATE, and we'll\n\n# inspect that compiler anew.  This allows users to set new compilers w/o rm'ing cache.\n",
        "Line" : 233,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# If MPI is set already in the cache, don't bother with interrogating the compiler.\n",
        "Line" : 240,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Check whether the -showme:compile option works. This indicates that we have either OpenMPI\n\n# or a newer version of LAM-MPI, and implies that -showme:link will also work.\n",
        "Line" : 243,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "# If we appear to have -showme:compile, then we should\n\n# also have -showme:link. Try it.\n",
        "Line" : 247,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# We probably have -showme:incdirs and -showme:libdirs as well,\n\n# so grab that while we're at it.\n",
        "Line" : 256,
        "CharPositionInLine" : 10
      },
      "25" : {
        "Text" : "# reset things here if something went wrong.\n",
        "Line" : 269,
        "CharPositionInLine" : 10
      },
      "26" : {
        "Text" : "# Older versions of LAM-MPI have \"-showme\". Try to find that.\n",
        "Line" : 275,
        "CharPositionInLine" : 6
      },
      "27" : {
        "Text" : "# MVAPICH uses -compile-info and -link-info.  Try them.\n",
        "Line" : 280,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# If we have compile-info, also have link-info.\n",
        "Line" : 284,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# make sure we got compile and link.  Reset vars if something's wrong.\n",
        "Line" : 293,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# MPICH just uses \"-show\". Try it.\n",
        "Line" : 300,
        "CharPositionInLine" : 6
      },
      "31" : {
        "Text" : "# We have our command lines, but we might need to copy MPI_COMPILE_CMDLINE\n\n# into MPI_LINK_CMDLINE, if we didn't find the link line.\n",
        "Line" : 306,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# Here, we're done with the interrogation part, and we'll try to extract args we care\n\n# about from what we learned from the compiler wrapper scripts.\n",
        "Line" : 317,
        "CharPositionInLine" : 6
      },
      "33" : {
        "Text" : "# If interrogation came back with something, extract our variable from the MPI command line\n",
        "Line" : 320,
        "CharPositionInLine" : 6
      },
      "34" : {
        "Text" : "# Extract compile flags from the compile command line.\n",
        "Line" : 322,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# Extract include paths from compile command line\n",
        "Line" : 334,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# try using showme:incdirs if extracting didn't work.\n",
        "Line" : 342,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# If all else fails, just search for mpi.h in the normal include paths.\n",
        "Line" : 348,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "# Extract linker paths from the link command line\n",
        "Line" : 357,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : "# try using showme:libdirs if extracting didn't work.\n",
        "Line" : 366,
        "CharPositionInLine" : 8
      },
      "40" : {
        "Text" : "# Extract linker flags from the link command line\n",
        "Line" : 372,
        "CharPositionInLine" : 8
      },
      "41" : {
        "Text" : "# Extract the set of libraries to link against from the link command\n\n# line\n",
        "Line" : 383,
        "CharPositionInLine" : 8
      },
      "42" : {
        "Text" : "# add the compiler implicit directories because some compilers\n\n# such as the intel compiler have libraries that show up\n\n# in the showme list that can only be found in the implicit\n\n# link directories of the compiler.\n",
        "Line" : 387,
        "CharPositionInLine" : 8
      },
      "43" : {
        "Text" : "# Determine full path names for all of the libraries that one needs\n\n# to link against in an MPI program\n",
        "Line" : 396,
        "CharPositionInLine" : 8
      },
      "44" : {
        "Text" : "# MPI_LIB is cached by find_library, but we don't want that.  Clear it first.\n",
        "Line" : 400,
        "CharPositionInLine" : 10
      },
      "45" : {
        "Text" : "# Sanity check MPI_LIBRARIES to make sure there are enough libraries\n",
        "Line" : 411,
        "CharPositionInLine" : 8
      },
      "46" : {
        "Text" : "# If we didn't have an MPI compiler script to interrogate, attempt to find everything\n\n# with plain old find functions.  This is nasty because MPI implementations have LOTS of\n\n# different library names, so this section isn't going to be very generic.  We need to\n\n# make sure it works for MS MPI, though, since there are no compiler wrappers for that.\n",
        "Line" : 420,
        "CharPositionInLine" : 6
      },
      "47" : {
        "Text" : "# Decide between 32-bit and 64-bit libraries for Microsoft's MPI\n",
        "Line" : 429,
        "CharPositionInLine" : 6
      },
      "48" : {
        "Text" : "# Right now, we only know about the extra libs for C++.\n\n# We could add Fortran here (as there is usually libfmpich, etc.), but\n\n# this really only has to work with MS MPI on Windows.\n\n# Assume that other MPI's are covered by the compiler wrappers.\n",
        "Line" : 445,
        "CharPositionInLine" : 6
      },
      "49" : {
        "Text" : "# If we found MPI, set up all of the appropriate cache entries\n",
        "Line" : 465,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# clear out our temporary lib/header detectionv variable here.\n",
        "Line" : 472,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# finally set a found variable for each MPI language\n",
        "Line" : 477,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# This function attempts to compile with the regular compiler, to see if MPI programs\n\n# work with it.  This is a last ditch attempt after we've tried interrogating mpicc and\n\n# friends, and after we've tried to find generic libraries.  Works on machines like\n\n# Cray XE6, where the modules environment changes what MPI version cc, CC, and ftn use.\n",
        "Line" : 486,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# End definitions, commence real work here.\n",
        "Line" : 527,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Most mpi distros have some form of mpiexec which gives us something we can reliably look for.\n",
        "Line" : 529,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# call get_filename_component twice to remove mpiexec and the directory it exists in (typically bin).\n\n# This gives us a fairly reliable base directory to search for /bin /lib and /include from.\n",
        "Line" : 537,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "#=============================================================================\n\n# Backward compatibility input hacks.  Propagate the FindMPI hints to C and\n\n# CXX if the respective new versions are not defined.  Translate the old\n\n# MPI_LIBRARY and MPI_EXTRA_LIBRARY to respective MPI_${lang}_LIBRARIES.\n\n#\n\n# Once we find the new variables, we translate them back into their old\n\n# equivalents below.\n",
        "Line" : 549,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Old input variables.\n",
        "Line" : 557,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# Set new vars based on their old equivalents, if the new versions are not already set.\n",
        "Line" : 560,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# Special handling for MPI_LIBRARY and MPI_EXTRA_LIBRARY, which we nixed in the\n\n# new FindMPI.  These need to be merged into MPI_<lang>_LIBRARIES\n",
        "Line" : 568,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "#=============================================================================\n",
        "Line" : 574,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# This loop finds the compilers and sends them off for interrogation.\n",
        "Line" : 577,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# If the user supplies a compiler *name* instead of an absolute path, assume that we need to find THAT compiler.\n",
        "Line" : 580,
        "CharPositionInLine" : 4
      },
      "63" : {
        "Text" : "# Get rid of our default list of names and just search for the name the user wants.\n",
        "Line" : 583,
        "CharPositionInLine" : 8
      },
      "64" : {
        "Text" : "# If the user specifies a compiler, we don't want to try to search libraries either.\n",
        "Line" : 587,
        "CharPositionInLine" : 6
      },
      "65" : {
        "Text" : "# last ditch try -- if nothing works so far, just try running the regular compiler and\n\n# see if we can create an MPI executable.\n",
        "Line" : 601,
        "CharPositionInLine" : 4
      },
      "66" : {
        "Text" : "#=============================================================================\n\n# More backward compatibility stuff\n\n#\n\n# Bare MPI sans ${lang} vars are set to CXX then C, depending on what was found.\n\n# This mimics the behavior of the old language-oblivious FindMPI.\n",
        "Line" : 622,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Note that we might still have found Fortran, but you'll need to use MPI_Fortran_FOUND\n",
        "Line" : 637,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "# Chop MPI_LIBRARIES into the old-style MPI_LIBRARY and MPI_EXTRA_LIBRARY, and set them in cache.\n",
        "Line" : 641,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "#=============================================================================\n",
        "Line" : 657,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# unset these vars to cleanup namespace\n",
        "Line" : 659,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 71
    },
    "cmake/Packages/FindOpenBLAS.cmake" : {
      "ObjectId" : "1f3c30ebdc461ce260ce34b54f19b5bdae924f07",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# over-ride with current found library\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# use only one library\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Packages/FindSSE.cmake" : {
      "ObjectId" : "7920861321e4da93b9758071494519588080055e",
      "LastModified" : "2018-02-06T20:53:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check if SSE/AVX instructions are available on the machine where\n\n# the project is compiled.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# /proc/cpuinfo apparently omits sse3 :(\n",
        "Line" : 16,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "# TODO\n",
        "Line" : 138,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#set(CMAKE_LINKER ${INTEL_LINKER} CACHE FILEPATH \"Intel C++ linker\")\n",
        "Line" : 173,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "#set(CMAKE_AR ${INTEL_AR} CACHE FILEPATH \"Intel C++ archiver\")\n",
        "Line" : 176,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 5
    },
    "cmake/Packages/FindTBB.cmake" : {
      "ObjectId" : "1d2262994083526103209089086d381b5a8c229b",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Modified/Copied from example in Geant4 version 9.6.2:\n\n#\n\n# http://geant4.web.cern.ch/geant4/\n\n#\n\n# Module for locating Intel's Threading Building Blocks (TBB).\n\n#\n\n# Customizable variables:\n\n#   TBB_ROOT_DIR\n\n#     Specifies TBB's root directory.\n\n#\n\n# Read-only variables:\n\n#   TBB_FOUND\n\n#     Indicates whether the library has been found.\n\n#\n\n#   TBB_INCLUDE_DIRS\n\n#      Specifies TBB's include directory.\n\n#\n\n#   TBB_LIBRARIES\n\n#     Specifies TBB libraries that should be passed to target_link_libararies.\n\n#\n\n#   TBB_<COMPONENT>_LIBRARIES\n\n#     Specifies the libraries of a specific <COMPONENT>.\n\n#\n\n#   TBB_<COMPONENT>_FOUND\n\n#     Indicates whether the specified <COMPONENT> was found.\n\n#\n\n#\n\n# Copyright (c) 2012 Sergiu Dotenco\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTTBBLAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# TBB root (base) install directory\n\n#------------------------------------------------------------------------------#\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# Location of header files\n\n#------------------------------------------------------------------------------#\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# Possible library variations\n\n#------------------------------------------------------------------------------#\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# default\n",
        "Line" : 94,
        "CharPositionInLine" : 38
      },
      "5" : {
        "Text" : "# Linux/macOS\n",
        "Line" : 104,
        "CharPositionInLine" : 13
      },
      "6" : {
        "Text" : "# All distributions I have seen from Intel use GCC\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# Generate library suffixes\n\n#   NOTE: define TBB_LIBRARY_COMPILER if a specific version is required\n\n#------------------------------------------------------------------------------#\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# Find TBB libraries\n\n#------------------------------------------------------------------------------#\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# decide if we should use debug version\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# Find TBB components\n\n#------------------------------------------------------------------------------#\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Component missing: record it for a later report\n",
        "Line" : 224,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# setup the TBB_<COMPONENT>_LIBRARIES variable\n",
        "Line" : 240,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# Set non-cache variables\n\n#------------------------------------------------------------------------------#\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# Verify components found\n\n#------------------------------------------------------------------------------#\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Display missing components indented, each on a separate line\n",
        "Line" : 260,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# Determine library's version\n\n#------------------------------------------------------------------------------#\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# Get library manager if on Windows\n\n#------------------------------------------------------------------------------#\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Do not redirect the output\n",
        "Line" : 304,
        "CharPositionInLine" : 12
      },
      "19" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# Set the requisites\n\n#------------------------------------------------------------------------------#\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# collect lib requisites using the lib tool\n",
        "Line" : 321,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# Cleanup\n\n#------------------------------------------------------------------------------#\n",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n# Set package find results and handle arguments (QUIET, REQUIRED, etc.)\n\n#------------------------------------------------------------------------------#\n",
        "Line" : 368,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "cmake/Packages/Findaatm.cmake" : {
      "ObjectId" : "0fcaf83374156a339a60d5763ae84071d2b84238",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Module for locating aatm.\n\n#\n\n# Customizable variables:\n\n#   aatm_ROOT\n\n#       Specifies aatm's root directory.\n\n#\n\n#   aatm_64BIT_INTEGER\n\n#       Enable aatm with 64-bit integer\n\n#\n\n#   aatm_THREADING\n\n#       aatm threading model (options: sequential, OpenMP, TBB)\n\n#\n\n# Read-only variables:\n\n#   aatm_FOUND\n\n#       Indicates whether the library has been found.\n\n#\n\n#   aatm_INCLUDE_DIRS\n\n#       Specifies aatm's include directory.\n\n#\n\n#   aatm_LIBRARIES\n\n#       Specifies aatm libraries that should be passed to target_link_libararies.\n\n#\n\n#   aatm_<COMPONENT>_LIBRARIES\n\n#       Specifies the libraries of a specific <COMPONENT>.\n\n#\n\n#   aatm_<COMPONENT>_FOUND\n\n#       Indicates whether the specified <COMPONENT> was found.\n\n#\n\n#   aatm_CXX_LINK_FLAGS\n\n#       C++ linker compile flags\n\n#\n\n# Copyright (c) 2017 Jonathan Madsen\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTaatmLAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----- aatm installation root\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#----- aatm include directory\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#----- aatm library\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#----- Determine library's version\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/Packages/Findwcslib.cmake" : {
      "ObjectId" : "bfca8bb1f874936eeb06a5f48da5d24f05dc340a",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Module for locating wcslib.\n\n#\n\n# Customizable variables:\n\n#   wcslib_ROOT\n\n#       Specifies wcslib's root directory.\n\n#\n\n#   wcslib_64BIT_INTEGER\n\n#       Enable wcslib with 64-bit integer\n\n#\n\n#   wcslib_THREADING\n\n#       wcslib threading model (options: sequential, OpenMP, TBB)\n\n#\n\n# Read-only variables:\n\n#   wcslib_FOUND\n\n#       Indicates whether the library has been found.\n\n#\n\n#   wcslib_INCLUDE_DIRS\n\n#       Specifies wcslib's include directory.\n\n#\n\n#   wcslib_LIBRARIES\n\n#       Specifies wcslib libraries that should be passed to target_link_libararies.\n\n#\n\n#   wcslib_<COMPONENT>_LIBRARIES\n\n#       Specifies the libraries of a specific <COMPONENT>.\n\n#\n\n#   wcslib_<COMPONENT>_FOUND\n\n#       Indicates whether the specified <COMPONENT> was found.\n\n#\n\n#   wcslib_CXX_LINK_FLAGS\n\n#       C++ linker compile flags\n\n#\n\n# Copyright (c) 2017 Jonathan Madsen\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTwcslibLAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----- wcslib installation root\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#----- wcslib include directory\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#----- wcslib library\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#----- Determine library's version\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/Packages/Packages.cmake" : {
      "ObjectId" : "18de77295721b00442f9678fd6372aafa4ead930",
      "LastModified" : "2018-02-06T20:53:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find packages for TOAST\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - MPI\n\n# - OpenMP\n\n# - Python\n\n# - BLAS\n\n# - LAPACK\n\n# - OpenBLAS\n\n# - MKL\n\n# - TBB\n\n# - FFTW\n\n# - wcslib\n\n# - Elemental\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# FFTW is needed if MKL is not used\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################################################################################\n\n#\n\n#        Definitions\n\n#\n\n################################################################################\n\n# used as a definition in autotools compilation\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add(CMAKE_EXE_LINKER_FLAGS \"${COVERAGE_COMPILER_FLAGS}\")\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "################################################################################\n\n#\n\n#        Threading\n\n#\n\n################################################################################\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "################################################################################\n\n#\n\n#        MPI\n\n#\n\n################################################################################\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add the MPI-specific compiler and linker flags\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# mpi.py.in uses HAVE_MPI to decide whether to use\n\n# (1) mpi4py or (2) fakempi, the latter of which is broken\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "################################################################################\n\n#\n\n#        Python\n\n#\n\n################################################################################\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "################################################################################\n\n#\n\n#        OpenMP\n\n#\n\n################################################################################\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add the OpenMP-specific compiler and linker flags\n",
        "Line" : 144,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "################################################################################\n\n#\n\n#        MKL - Intel Math Kernel Library\n\n#\n\n################################################################################\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# mkl_rt as default\n",
        "Line" : 162,
        "CharPositionInLine" : 27
      },
      "14" : {
        "Text" : "################################################################################\n\n#\n\n#        TBB - Intel Thread Building Blocks\n\n#\n\n################################################################################\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "################################################################################\n\n#\n\n#        Math - Intel IMF library\n\n#\n\n################################################################################\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "################################################################################\n\n#\n\n#        BLAS, LAPACK, and OpenBLAS\n\n#\n\n################################################################################\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "################################################################################\n\n#\n\n#        FFTW\n\n#\n\n################################################################################\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# double precision with threads\n",
        "Line" : 253,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "################################################################################\n\n#\n\n#        wcslib\n\n#\n\n################################################################################\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "################################################################################\n\n#\n\n#        aatm\n\n#\n\n################################################################################\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "################################################################################\n\n#\n\n#        Elemental\n\n#\n\n################################################################################\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "################################################################################\n\n# --- setting definitions: EXTERNAL_INCLUDE_DIRS,   ---------------------------#\n\n#                          EXTERNAL_LIBRARIES       ---------------------------#\n\n################################################################################\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "################################################################################\n\n#\n\n#        SSE\n\n#\n\n################################################################################\n",
        "Line" : 346,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "################################################################################\n\n#\n\n#        Architecture Flags\n\n#\n\n################################################################################\n",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "cmake/Scripts/GetParam.cmake" : {
      "ObjectId" : "229afd90ecb624281775f38596ef8f613be84908",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/Makefile" : {
      "ObjectId" : "ea5909bef1fdfc354444428e73e082a7d34812b6",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "examples/templates/config.cmake" : {
      "ObjectId" : "851cd5cbb17c10c0b245522723ef667d7cbb2c30",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/Makefile" : {
      "ObjectId" : "7a086a84c31f87c55e5b33bd5d2aea0045bed5a1",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Check required environment variables\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make seems to delete these...\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Override arcane Make suffix rule for SCCS which \n\n# wipes our config scripts...\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Config related files\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The files with the build rules for each dependency\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# For depending on the helper scripts and templates\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Based on the config file name, are we building a docker file\n\n# or an install script?\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Allow manually specifying the modulefiles directory.\n\n# Otherwise install to PREFIX/modulefiles\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "pipelines/Makefile.am" : {
      "ObjectId" : "34835843006b67d8c8d660bb954f47a03326dff2",
      "LastModified" : "2018-10-24T21:44:59Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "d4b4792b828b76c9bdd9c89d1d48595873f544c1",
      "LastModified" : "2018-10-24T21:44:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------#\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# cereal options\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# this gets annoying\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add cereal\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#------------------------------------------------------------------------------#\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#------------------------------------------------------------------------------#\n\n#\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# =============================================================================#\n\n#   Library build\n\n# =============================================================================#\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#------------------------------------------------------------------------------#\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#--------------------------------------------------------------------------#\n\n# static toast library\n\n#--------------------------------------------------------------------------#\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#--------------------------------------------------------------------------#\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#------------------------------------------------------------------------------#\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#--------------------------------------------------------------------------#\n\n# shared toast library\n\n#--------------------------------------------------------------------------#\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#--------------------------------------------------------------------------#\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# =============================================================================#\n\n#   Python build\n\n# =============================================================================#\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# =============================================================================#\n\n#   Executable build\n\n# =============================================================================#\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# =============================================================================#\n\n#   Code coverage\n\n# =============================================================================#\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# CXX coverage\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Python coverage\n",
        "Line" : 139,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# =============================================================================#\n\n#   Export\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# =============================================================================#\n\n# BUILD TREE\n\n# =============================================================================#\n\n# Add all targets to the build-tree export set\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Export the package for use from the build-tree\n\n# (this registers the build-tree with a global CMake-registry)\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Create the Config.cmake and ConfigHeader-${CMAKE_BUILD_TYPE}.cmake for the build tree\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# =============================================================================#\n\n# INSTALL TREE\n\n# =============================================================================#\n\n# Create the Config.cmake and ConfigHeader-${CMAKE_BUILD_TYPE}.cmake for the install tree\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Create the ConfigVersion.cmake for both\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Install the ${PROJECT_NAME}Config*.cmake files\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# install the executables\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# install the libraries\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Install the export set for use with the install-tree\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# export the packages\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Install CMake files\n",
        "Line" : 267,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# Install CMake files\n",
        "Line" : 274,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 31
    },
    "src/Makefile.am" : {
      "ObjectId" : "2239029c6cb1e2df9d6aaaa804b68de798440dee",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/cereal/CMakeLists.txt" : {
      "ObjectId" : "dcb9cd677ad8bbba3b03f9ab6cd2a2a83b0847d7",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# installing cereal requires INTERFACE lib\n",
        "Line" : 5,
        "CharPositionInLine" : 39
      },
      "1" : {
        "Text" : "# ignored\n",
        "Line" : 42,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# Boost serialization for performance sandbox\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/libtoast/CMakeLists.txt" : {
      "ObjectId" : "58099b7cb785291b02f96d4ab8f9142f24b99675",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/libtoast/Makefile.am" : {
      "ObjectId" : "56aa8dd2a3055285972c72bc0aad2427e91aade2",
      "LastModified" : "2019-02-13T22:10:57Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Initialize compile and linking flags\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Append compile and linking flags based on configure variables\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/libtoast/atm/Makefile.am" : {
      "ObjectId" : "c54787e27c4d382a4db59f861346a56356123be5",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Initialize compile and linking flags\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Append compile and linking flags based on configure variables\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/libtoast/atm/sources.cmake" : {
      "ObjectId" : "6b9b13d8aaa2e882cb00e88d887f0c44991d9fd3",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/libtoast/capi/Makefile.am" : {
      "ObjectId" : "d82cc31499866f76c54fa9b5519431d8cf989c69",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Initialize compile and linking flags\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Append compile and linking flags based on configure variables\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/libtoast/capi/sources.cmake" : {
      "ObjectId" : "155e07de07ed24bf418fda054cea472ac0f22746",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/libtoast/fakempi/Makefile.am" : {
      "ObjectId" : "fddc3e70e20ad4be1f1230fed80ce79e3faed3e6",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Initialize compile and linking flags\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Append compile and linking flags based on configure variables\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/libtoast/fakempi/sources.cmake" : {
      "ObjectId" : "de2bf3af6744484d792611431a0ad1543338c019",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/libtoast/fod/Makefile.am" : {
      "ObjectId" : "4c043dbc275ffe19ac6ad026d63bdea4535b86a5",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Initialize compile and linking flags\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Append compile and linking flags based on configure variables\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/libtoast/fod/sources.cmake" : {
      "ObjectId" : "1238f5bce03248a55be131f2d49eabd0cffa8fc8",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/libtoast/map/Makefile.am" : {
      "ObjectId" : "ae17bce297d83df120ec2e4d2e30e87747657df7",
      "LastModified" : "2019-02-13T22:10:57Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Initialize compile and linking flags\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Append compile and linking flags based on configure variables\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/libtoast/map/sources.cmake" : {
      "ObjectId" : "0b099c601e79a6755519aad3920a517486b2ce2e",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/libtoast/math/Makefile.am" : {
      "ObjectId" : "3f216ff151c5c2a81aeed732d0ab1a9bde67ba27",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Initialize compile and linking flags\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Append compile and linking flags based on configure variables\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# install / uninstall Random123 headers\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/libtoast/math/Random123/conventional/sources.cmake" : {
      "ObjectId" : "0b8b9be57d3994bc330f9d94fa4d23bae2d969f9",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/libtoast/math/Random123/features/sources.cmake" : {
      "ObjectId" : "999fccd54dce7001fb6fce44db39606eab2fe75b",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/libtoast/math/Random123/sources.cmake" : {
      "ObjectId" : "d3201efccff043c697ff865971cdd8cfe0feb152",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/libtoast/math/sources.cmake" : {
      "ObjectId" : "f3c1984086de5c6768984b3bfce8885f5df026f5",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/libtoast/sources.cmake" : {
      "ObjectId" : "c8ab97f67876313a30b7261400cb7a5a81a63f49",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/libtoast/test/Makefile.am" : {
      "ObjectId" : "078168bf1a041ee6924ed4adc0b94f9c46231101",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Initialize compile and linking flags\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add check flags\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append compile and linking flags based on configure variables\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/libtoast/test/gtest/Makefile.am" : {
      "ObjectId" : "8a6098a424731dbe430953614de12a93fac74731",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Initialize compile and linking flags\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Append compile and linking flags based on configure variables\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/libtoast/test/gtest/sources.cmake" : {
      "ObjectId" : "eeec51130854095b6c075d80efdf7a56fd128b2a",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/libtoast/test/sources.cmake" : {
      "ObjectId" : "15a48b7b80b753244e26523ecd8f536bbfef2fa3",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/libtoast/tod/Makefile.am" : {
      "ObjectId" : "4055f01cd56fc9c25f717438595b649b3ad0a861",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Initialize compile and linking flags\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Append compile and linking flags based on configure variables\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/libtoast/tod/sources.cmake" : {
      "ObjectId" : "ec7d5cb6e09bf6d96f8b6f9209f9ceca3e062a54",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/libtoast/util/Makefile.am" : {
      "ObjectId" : "807f3a3b24d68a422e9187e3a4495a65db1e502c",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Initialize compile and linking flags\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Append compile and linking flags based on configure variables\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/libtoast/util/sources.cmake" : {
      "ObjectId" : "a3a479f3194405e169a28d85bb9a461c3a2cd694",
      "LastModified" : "2017-12-22T01:10:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/python/CMakeLists.txt" : {
      "ObjectId" : "4e44d17e2f7a7048941ab00a898ce08fa92a377c",
      "LastModified" : "2019-02-13T22:10:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# build cbuffer\n\n#\n\n#------------------------------------------------------------------------------#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Python files to add to cbuffer-lib target so they are listed in an\n\n# IDE (e.g. QtCreator), won't get compiled\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#RPATH                       ${CMAKE_INSTALL_FULL_PYTHONDIR}\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# py libs\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# =============================================================================#\n\n#   configuration variables\n\n# =============================================================================#\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# =============================================================================#\n\n#   configuration files\n\n# =============================================================================#\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# install the python sub-directories\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ensure all the python files are executable\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#PERMISSIONS\n\n#OWNER_READ    GROUP_READ    WORLD_READ\n\n#OWNER_WRITE\n\n#OWNER_EXECUTE GROUP_EXECUTE WORLD_EXECUTE\n",
        "Line" : 118,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 9
    },
    "src/python/Makefile.am" : {
      "ObjectId" : "ebe2fa06067ced1848119074760b63fa0457e245",
      "LastModified" : "2019-02-13T22:10:57Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#if HAVE_AM_MPI\n\n#else\n\n#  SUBDIRS += mpi4py\n\n#endif\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Initialize compile and linking flags\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append compile and linking flags based on configure variables\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# make sure that the C++ compiler is used for linking\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/python/fod/Makefile.am" : {
      "ObjectId" : "5d0fca4a4bf5572422ab894d1c18a6e3d75ba3eb",
      "LastModified" : "2019-02-13T22:10:57Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Initialize compile and linking flags\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Append compile and linking flags based on configure variables\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/python/map/Makefile.am" : {
      "ObjectId" : "56d1c0a12864e6fdfecda0450e9aa3b1d5e07b5b",
      "LastModified" : "2019-02-13T22:10:57Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Initialize compile and linking flags\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Append compile and linking flags based on configure variables\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/python/tests/Makefile.am" : {
      "ObjectId" : "cf32d6cbb5717ce555de1a94f052d408980ec552",
      "LastModified" : "2019-02-13T22:10:57Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Initialize compile and linking flags\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Append compile and linking flags based on configure variables\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/python/tod/Makefile.am" : {
      "ObjectId" : "666931dbd96c2b58358255af7edcbff28aa76e00",
      "LastModified" : "2019-02-13T22:10:57Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Initialize compile and linking flags\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Append compile and linking flags based on configure variables\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/python/todmap/Makefile.am" : {
      "ObjectId" : "6897db8fd6b907ef88579c35f9c7e77fa89d78c8",
      "LastModified" : "2019-02-13T22:10:57Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Initialize compile and linking flags\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Append compile and linking flags based on configure variables\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 56,
    "MAKEFILE" : 2,
    "AUTOMAKE" : 20
  },
  "ElapsedTime" : 1928
}