{
  "Repository" : "42775898",
  "Revision" : "HEAD",
  "ObjectId" : "4bda36f762aac8e0931828513368c0ff16c32a0d",
  "CommitTime" : "2019-04-14T05:29:06Z",
  "Files" : {
    "android/DL4JImageRecognitionDemo/app/proguard-rules.pro" : {
      "ObjectId" : "f1b424510da51fd82143bc74a0a801ae5a1e2fcd",
      "LastModified" : "2018-04-09T06:45:32Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# You can control the set of applied configuration files using the\n\n# proguardFiles setting in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Uncomment this to preserve the line number information for\n\n# debugging stack traces.\n\n#-keepattributes SourceFile,LineNumberTable\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If you keep the line number information, uncomment this to\n\n# hide the original source file name.\n\n#-renamesourcefileattribute SourceFile\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "android/DL4JIrisClassifierDemo/app/proguard-rules.pro" : {
      "ObjectId" : "9a758102c4ab60671ffa5ca0a15bf258fa0bbf47",
      "LastModified" : "2018-04-09T06:45:32Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# JavaCV\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# end javacv\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# enable optimization\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This flag is needed to keep native methods\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# For enumeration classes\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags to keep standard classes\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "datavec-examples/pom.xml" : {
      "ObjectId" : "0d8d2079e40fab6b562f19142aee36fddff69cfa",
      "LastModified" : "2019-01-22T23:50:20Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Force Jackson versions to match Spark. This usually only matters for Spark local, not Spark submit ",
        "Line" : 41,
        "CharPositionInLine" : 124
      },
      "CommentCount" : 1
    },
    "dl4j-cuda-specific-examples/pom.xml" : {
      "ObjectId" : "59497622cd45028029c08e6efe0ea9b8f8cadb9e",
      "LastModified" : "2018-11-20T05:04:21Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Dependency for parallel wrapper (for multi-GPU parameter averaging ",
        "Line" : 67,
        "CharPositionInLine" : 84
      },
      "1" : {
        "Text" : " datavec-data-codec: used only in video example for loading video data ",
        "Line" : 94,
        "CharPositionInLine" : 87
      },
      "CommentCount" : 2
    },
    "dl4j-examples/pom.xml" : {
      "ObjectId" : "d0f0c52c727c3a2eb2a063f5c659ddb85b1d7d62",
      "LastModified" : "2019-01-22T23:50:20Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " ND4J backend. You need one in every DL4J project. Normally define artifactId as either \"nd4j-native-platform\" or \"nd4j-cuda-9.2-platform\" ",
        "Line" : 68,
        "CharPositionInLine" : 155
      },
      "1" : {
        "Text" : " Core DL4J functionality ",
        "Line" : 75,
        "CharPositionInLine" : 41
      },
      "2" : {
        "Text" : " deeplearning4j-ui is used for visualization: see http://deeplearning4j.org/visualization ",
        "Line" : 94,
        "CharPositionInLine" : 106
      },
      "3" : {
        "Text" : " ParallelWrapper & ParallelInference live here ",
        "Line" : 101,
        "CharPositionInLine" : 63
      },
      "4" : {
        "Text" : " Next 2: used for MapFileConversion Example. Note you need *both* together ",
        "Line" : 108,
        "CharPositionInLine" : 91
      },
      "5" : {
        "Text" : " Arbiter - used for hyperparameter optimization (grid/random search) ",
        "Line" : 135,
        "CharPositionInLine" : 85
      },
      "6" : {
        "Text" : " datavec-data-codec: used only in video example for loading video data ",
        "Line" : 147,
        "CharPositionInLine" : 87
      },
      "7" : {
        "Text" : " Used in the feedforward/classification/MLP* and feedforward/regression/RegressionMathFunctions example ",
        "Line" : 154,
        "CharPositionInLine" : 120
      },
      "8" : {
        "Text" : " Used for downloading data in some of the examples ",
        "Line" : 166,
        "CharPositionInLine" : 67
      },
      "CommentCount" : 9
    },
    "dl4j-spark-examples/dl4j-spark-cluster/pom.xml" : {
      "ObjectId" : "4347e3ff774acc2389a3176e61f778e6b714b82d",
      "LastModified" : "2018-11-20T05:04:21Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " For Spark examples: change the _1 to _2 to switch between Spark 1 and Spark 2 ",
        "Line" : 14,
        "CharPositionInLine" : 95
      },
      "1" : {
        "Text" : " Scala binary version: DL4J's Spark and UI functionality are released with both Scala 2.10 and 2.11 support ",
        "Line" : 18,
        "CharPositionInLine" : 124
      },
      "CommentCount" : 2
    },
    "dl4j-spark-examples/dl4j-spark/pom.xml" : {
      "ObjectId" : "3375e8d2d9996cbb008c76624add68cf2ef1562a",
      "LastModified" : "2018-11-20T05:04:21Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Force Jackson versions to match Spark. This usually only matters for Spark local, not Spark submit ",
        "Line" : 24,
        "CharPositionInLine" : 124
      },
      "1" : {
        "Text" : " Used for patent classification example ",
        "Line" : 89,
        "CharPositionInLine" : 56
      },
      "2" : {
        "Text" : " Used for patent classification example ",
        "Line" : 96,
        "CharPositionInLine" : 56
      },
      "3" : {
        "Text" : " Used for patent classification example ",
        "Line" : 103,
        "CharPositionInLine" : 56
      },
      "4" : {
        "Text" : " Used for patent classification example ",
        "Line" : 110,
        "CharPositionInLine" : 56
      },
      "CommentCount" : 5
    },
    "dl4j-spark-examples/pom.xml" : {
      "ObjectId" : "66ac6e8c4d1b5eb2f404e71e1d8efc670a7d5fe3",
      "LastModified" : "2018-11-20T05:04:21Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "lstm-hdfs/pom.xml" : {
      "ObjectId" : "6accdbb446a44ee5aebcf5ae75057b261f5010be",
      "LastModified" : "2018-11-20T05:04:21Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " https://mvnrepository.com/artifact/org.datavec/datavec-api ",
        "Line" : 105,
        "CharPositionInLine" : 76
      },
      "1" : {
        "Text" : " Logging Dependencies ",
        "Line" : 118,
        "CharPositionInLine" : 38
      },
      "2" : {
        "Text" : " ND4J ",
        "Line" : 131,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 3
    },
    "nd4j-examples/pom.xml" : {
      "ObjectId" : "fae3b3591a8c53c3c7fde37e95df3b88a48795e6",
      "LastModified" : "2018-11-20T05:04:21Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " ND4J backend. You need one in every DL4J project. Normally define artifactId as either \"nd4j-native-platform\" or \"nd4j-cuda-7.5-platform\" ",
        "Line" : 29,
        "CharPositionInLine" : 155
      },
      "1" : {
        "Text" : " Copy this into your own projects (without the comment block around it), for CPU operations",
        "Line" : 36,
        "CharPositionInLine" : 107
      },
      "2" : {
        "Text" : "\n        <dependency>\n            <groupId>org.nd4j</groupId>\n            <artifactId>nd4j-native-platform</artifactId>\n            <version>${nd4j.version}</version>\n        </dependency>\n        ",
        "Line" : 43,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : " Copy this into your own projects (without the comment block around it), for CUDA (NVIDIA GPU) operations",
        "Line" : 45,
        "CharPositionInLine" : 121
      },
      "4" : {
        "Text" : "\n        <dependency>\n            <groupId>org.nd4j</groupId>\n            <artifactId>nd4j-cuda-9.2-platform</artifactId>\n            <version>${nd4j.version}</version>\n        </dependency>\n        ",
        "Line" : 52,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 5
    },
    "pom.xml" : {
      "ObjectId" : "2b7c911daa3112d28e9be2edaa57b2210f3d2207",
      "LastModified" : "2019-04-11T03:10:09Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Change the nd4j.backend property to nd4j-cuda-9.0-platform nd4j-cuda-9.2-platform or nd4j-cuda-10.0-platform to use CUDA GPUs ",
        "Line" : 13,
        "CharPositionInLine" : 143
      },
      "1" : {
        "Text" : "<nd4j.backend>nd4j-cuda-9.2-platform</nd4j.backend>",
        "Line" : 15,
        "CharPositionInLine" : 67
      },
      "2" : {
        "Text" : " For Spark examples: change the _1 to _2 to switch between Spark 1 and Spark 2 ",
        "Line" : 27,
        "CharPositionInLine" : 95
      },
      "3" : {
        "Text" : " Scala binary version: DL4J's Spark and UI functionality are released with both Scala 2.10 and 2.11 support ",
        "Line" : 31,
        "CharPositionInLine" : 124
      },
      "4" : {
        "Text" : " Hadoop version used by Spark 1.6.3 and 2.2.1 (and likely others) ",
        "Line" : 34,
        "CharPositionInLine" : 122
      },
      "5" : {
        "Text" : " Maven Enforcer: Ensures user has an up to date version of Maven before building ",
        "Line" : 60,
        "CharPositionInLine" : 93
      },
      "6" : {
        "Text" : " Automated Code Formatting ",
        "Line" : 84,
        "CharPositionInLine" : 47
      },
      "7" : {
        "Text" : " Rules incompatible with Java 9\n                        <rule>VersionProp</rule>\n                        <rule>DotVersionProperty</rule> ",
        "Line" : 115,
        "CharPositionInLine" : 60
      },
      "CommentCount" : 8
    },
    "rl4j-examples/pom.xml" : {
      "ObjectId" : "237e129b2856d16e06bd8e8d9d0005eb70d2210e",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " ND4J backend. You need one in every DL4J project. Normally define artifactId as either \"nd4j-native-platform\" or \"nd4j-cuda-7.5-platform\" ",
        "Line" : 68,
        "CharPositionInLine" : 155
      },
      "1" : {
        "Text" : " The Arcade Learning Environment (ALE) is under GPL license, so we cannot use it as a dependency of RL4J. ",
        "Line" : 89,
        "CharPositionInLine" : 114
      },
      "2" : {
        "Text" : "\n        <dependency>\n            <groupId>org.bytedeco.javacpp-presets</groupId>\n            <artifactId>ale-platform</artifactId>\n            <version>0.6.0-1.4.1</version>\n        </dependency>\n",
        "Line" : 96,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "standalone-sample-project/pom.xml" : {
      "ObjectId" : "4521e2b410b76393cce8543abbbd5f3ed6931e88",
      "LastModified" : "2018-11-20T05:04:21Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Group-ID, artifact ID and version of the project. You can modify these as you want ",
        "Line" : 7,
        "CharPositionInLine" : 96
      },
      "1" : {
        "Text" : " Properties Section. Change DL4J and ND4J versions here, if required ",
        "Line" : 12,
        "CharPositionInLine" : 81
      },
      "2" : {
        "Text" : " deeplearning4j-core: contains main functionality and neural networks ",
        "Line" : 23,
        "CharPositionInLine" : 86
      },
      "3" : {
        "Text" : "\n        ND4J backend: every project needs one of these. The backend defines the hardware on which network training\n        will occur. \"nd4j-native-platform\" is for CPUs only (for running on all operating systems).\n        ",
        "Line" : 33,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : " CUDA: to use GPU for training (CUDA) instead of CPU, uncomment this, and remove nd4j-native-platform ",
        "Line" : 40,
        "CharPositionInLine" : 118
      },
      "5" : {
        "Text" : " Requires CUDA to be installed to use. Change the version (8.0, 9.0, 9.1) to change the CUDA version ",
        "Line" : 41,
        "CharPositionInLine" : 117
      },
      "6" : {
        "Text" : "\n        <dependency>\n            <groupId>org.nd4j</groupId>\n            <artifactId>nd4j-cuda-9.2-platform</artifactId>\n            <version>${nd4j.version}</version>\n        </dependency>\n        ",
        "Line" : 48,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : " Optional, but recommended: if you use CUDA, also use CuDNN. To use this, CuDNN must also be installed ",
        "Line" : 50,
        "CharPositionInLine" : 119
      },
      "8" : {
        "Text" : " See: https://deeplearning4j.org/cudnn ",
        "Line" : 51,
        "CharPositionInLine" : 55
      },
      "9" : {
        "Text" : "\n        <dependency>\n            <groupId>org.deeplearning4j</groupId>\n            <artifactId>deeplearning4j-cuda-9.2</artifactId>\n            <version>${dl4j.version}</version>\n        </dependency>\n        ",
        "Line" : 58,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : " Maven compiler plugin: compile for Java 8 ",
        "Line" : 71,
        "CharPositionInLine" : 63
      },
      "11" : {
        "Text" : "\n            Maven shade plugin configuration: this is required so that if you build a single JAR file (an \"uber-jar\")\n            it will contain all the required native libraries, and the backends will work correctly.\n            Used for example when running the following commants\n\n            mvn package\n            cd target\n            java -cp deeplearning4j-examples-1.0.0-beta-bin.jar org.deeplearning4j.LenetMnistExample\n            ",
        "Line" : 91,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 12
    },
    "tf-import-examples/pom.xml" : {
      "ObjectId" : "6b3652ff95389bcaa8811850ec27828d5fdf0b33",
      "LastModified" : "2018-11-20T05:04:21Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " ND4J backend. You need one in every DL4J project. Normally define artifactId as either \"nd4j-native-platform\" or \"nd4j-cuda-7.5-platform\" ",
        "Line" : 34,
        "CharPositionInLine" : 155
      },
      "1" : {
        "Text" : " Copy this into your own projects (without the comment block around it), for CPU operations",
        "Line" : 52,
        "CharPositionInLine" : 107
      },
      "2" : {
        "Text" : "\n        <dependency>\n            <groupId>org.nd4j</groupId>\n            <artifactId>nd4j-native-platform</artifactId>\n            <version>${nd4j.version}</version>\n        </dependency>\n        ",
        "Line" : 59,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : " Copy this into your own projects (without the comment block around it), for CUDA (NVIDIA GPU) operations",
        "Line" : 61,
        "CharPositionInLine" : 121
      },
      "4" : {
        "Text" : "\n        <dependency>\n            <groupId>org.nd4j</groupId>\n            <artifactId>nd4j-cuda-9.2-platform</artifactId>\n            <version>${nd4j.version}</version>\n        </dependency>\n        ",
        "Line" : 68,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 5
    }
  },
  "FileTypes" : {
    "QMAKE" : 2,
    "MAVEN" : 12
  },
  "ElapsedTime" : 2828
}