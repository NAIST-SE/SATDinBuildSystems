{
  "Repository" : "10911213",
  "Revision" : "HEAD",
  "ObjectId" : "98af471cdaff282b764d8692a00ca1000acd3c1c",
  "CommitTime" : "2018-10-30T15:49:02Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "219ff069d05714e237df4a76dd98a4fb54878c3b",
      "LastModified" : "2018-09-06T08:26:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Workaround for: https://gitlab.kitware.com/cmake/cmake/issues/16517\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Additional CMake modules\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Custom compiler flags\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Require C++11 support\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Link to libc++ whenever possible\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Custom pkg-config wrapper because Arch Linux.\n\n# See comments in the module source for details.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Prefer GNU gold if available and requested.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# {{{ configuration files\n\n#\n\n# This section inspired by:\n\n#       http://xit0.org/2013/04/cmake-use-git-branch-and-commit-details-in-project/\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Get the current working branch\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Get the latest abbreviated commit hash of the working branch\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# }}} configuration files\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# {{{ common rules\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# }}} common rules\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# {{{ coverage rules\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Coveralls integration is disabled by default, to avoid accidental uploads of\n\n# coverage results from local runs. Only the CI server should upload them.\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# This part adapted from the original at:\n\n#   https://github.com/JoakimSoderberg/coveralls-cmake/blob/master/cmake/Coveralls.cmake\n",
        "Line" : 174,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# }}} coverage rules\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# {{{ test rules\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# List of testdata files to copy\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Generated list of output paths in the build directory\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# }}} test rules\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# {{{ install rules\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# }}} install rules\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "CPackConfig.cmake" : {
      "ObjectId" : "40696af330cb3e8917b3b17cd184ce24becc1f1b",
      "LastModified" : "2018-08-22T00:08:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CPack configuration file for tint3.\n\n# Based on compton's CPackConfig.cmake (https://github.com/chjj/compton).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Workaround for: https://gitlab.kitware.com/cmake/cmake/issues/16517\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Environment\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build and install information\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Basic information\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Package config\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# DEB package config\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# RPM package config\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Source package config\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/Modules/FindLibCxx.cmake" : {
      "ObjectId" : "6b1d66a1757fdceac88c830eb15e26a6314fd01a",
      "LastModified" : "2018-10-20T10:35:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check that the compiler accepts the flag \"-stdlib=libc++\", and\n\n# can successfully compile, link and execute a simple test binary\n\n# using it.\n\n#\n\n# Exports:\n\n#  LIBCXX_FOUND - Tells if the library was found on the system.\n\n#  LIBCXX_LIBRARIES - If the library was found, this is a list of\n\n#      paths to the library files.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This uses MATCHES instead of STREQUAL to accept both Clang and AppleClang.\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# If using Clang, it's enough to provide the \"-stdlib=libc++\" flag.\n\n# Check if that has the effect of successfully compiling and linking a\n\n# simple test program.\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# If using GCC, we need to apply more tweaks to the compilation flags in\n\n# order to link to libc++ instead of libstdc++.\n\n# See: https://libcxx.llvm.org/docs/UsingLibcxx.html#using-libc-with-gcc\n\n#\n\n# TODO: the /usr prefix should not be hardcoded\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/Modules/FindXsettingsClient.cmake" : {
      "ObjectId" : "166b7d3c81e21f0f437fc08657709710ec934488",
      "LastModified" : "2018-09-01T12:36:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check that the xsettings-client package is available on the system.\n\n#\n\n# Exports:\n\n#  XSETTINGS_CLIENT_FOUND - Tells if the package was found on the system.\n\n#  XSETTINGS_CLIENT_LIBRARIES - If the package was found, this is a list of\n\n#      compiler flags to link to the relevant libraries.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Very basic fallback for the case where pkg-config doesn't find the package.\n\n# This could happen even if the xsettings-client library is in fact available,\n\n# as some systems (e.g. Arch Linux) don't ship with libxsettings-client.pc.\n\n# See also: https://github.com/jmc-88/tint3/issues/40\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If we arrived here successfully, then all checks have succeeded and we\n\n# assume the library was found.\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/Modules/Pandoc.cmake" : {
      "ObjectId" : "e91434ad43e1af8395ec395e9bfb391f94d93f07",
      "LastModified" : "2018-10-21T18:11:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/TestTarget.cmake" : {
      "ObjectId" : "90b031d2269e00d9292606ab945e2de46e07137c",
      "LastModified" : "2018-09-01T12:36:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# When requested, turn on AddressSanitizer for test targets.\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "cmake/package.cmake" : {
      "ObjectId" : "fc733253a493ef6c25d89622d5bf11fe001cf329",
      "LastModified" : "2018-09-01T12:36:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Per-generator CPack configuration file.\n\n# https://cmake.org/cmake/help/v3.0/module/CPack.html#variable:CPACK_PROJECT_CONFIG_FILE\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "7e90cd045fe30d8c023e66bed3f747801b565000",
      "LastModified" : "2018-09-01T12:36:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "0f8a9d639ceb9253ac876c0133a5146b865cd7fd",
      "LastModified" : "2018-10-22T09:10:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/battery/CMakeLists.txt" : {
      "ObjectId" : "48be65c2ca8d222097028b5ed2a8f05a687f5f9e",
      "LastModified" : "2018-09-01T12:36:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/clock/CMakeLists.txt" : {
      "ObjectId" : "2950d5454300f30db6a2ad61eb94b49f708a4c39",
      "LastModified" : "2018-09-01T12:36:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/dnd/CMakeLists.txt" : {
      "ObjectId" : "1ba52dadfe1eac8864034058d9e866e90d288eda",
      "LastModified" : "2018-09-01T12:36:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/execp/CMakeLists.txt" : {
      "ObjectId" : "224576fa543af8e57ee904bae636b0874ec28e20",
      "LastModified" : "2018-09-01T12:36:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#environment_lib\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "src/launcher/CMakeLists.txt" : {
      "ObjectId" : "c12894daf5570b4bd7c87da203149a6656e73f6e",
      "LastModified" : "2018-09-01T12:36:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/parser/CMakeLists.txt" : {
      "ObjectId" : "9350a618e1cb77ee22a4ceeb6a219d690103638e",
      "LastModified" : "2018-09-01T12:36:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/systray/CMakeLists.txt" : {
      "ObjectId" : "05585657bc5a1208242f38e96f9ecf25d8cfa0e7",
      "LastModified" : "2018-10-21T18:11:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/taskbar/CMakeLists.txt" : {
      "ObjectId" : "6bd463462c5340aee1ef14f99d625cb0a0fdf79d",
      "LastModified" : "2018-10-22T08:55:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tooltip/CMakeLists.txt" : {
      "ObjectId" : "39152142e505d49f38703c46c937b0f64581ba28",
      "LastModified" : "2018-09-01T12:36:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/util/CMakeLists.txt" : {
      "ObjectId" : "03e07ad450a89b6e851f9cf4700fff2facd66cc9",
      "LastModified" : "2018-10-22T08:55:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "b45222ca50bb1ea986b80f592913aa586ca55642",
      "LastModified" : "2018-09-01T12:36:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 20
  },
  "ElapsedTime" : 2367
}