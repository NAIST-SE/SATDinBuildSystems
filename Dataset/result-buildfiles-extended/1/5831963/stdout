{
  "Repository" : "5831963",
  "Revision" : "HEAD",
  "ObjectId" : "2922721ae1d3bd6be1c823bf23555830dd429bde",
  "CommitTime" : "2019-04-19T04:44:30Z",
  "Files" : {
    "CMake/EXTFunctions.cmake" : {
      "ObjectId" : "f7861804274d5721c30108e08ef80f4c703c53db",
      "LastModified" : "2015-07-15T20:30:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Functions/Macros for use when building extensions statically\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These functions also exist in CMake/HPHPIZEFunctions.cmake\n\n# Their signatures should be kept consistent, though their behavior\n\n# will differ slightly.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/FindBISON.cmake" : {
      "ObjectId" : "81f741de9a10f1eb4a1378282a430258619a4dde",
      "LastModified" : "2014-05-08T22:44:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find bison executable and provides macros to generate custom build rules\n\n# The module defined the following variables:\n\n#  BISON_EXECUTABLE - path to the bison program\n\n#  BISON_VERSION - version of bison\n\n#  BISON_FOUND - true if the program was found\n\n# If bison is found, the module defines the macros:\n\n#  BISON_TARGET(<Name> <YaccInput> <CodeOutput> [VERBOSE <file>]\n\n#              [COMPILE_FLAGS <string>])\n\n# which will create  a custom rule to generate  a parser. <YaccInput> is\n\n# the path to  a yacc file. <CodeOutput> is the name  of the source file\n\n# generated by bison.  A header file is also  be generated, and contains\n\n# the  token  list.  If  COMPILE_FLAGS  option is  specified,  the  next\n\n# parameter is  added in the bison  command line.  if  VERBOSE option is\n\n# specified, <file> is created  and contains verbose descriptions of the\n\n# grammar and parser. The macro defines a set of variables:\n\n#  BISON_${Name}_DEFINED - true is the macro ran successfully\n\n#  BISON_${Name}_INPUT - The input source file, an alias for <YaccInput>\n\n#  BISON_${Name}_OUTPUT_SOURCE - The source file generated by bison\n\n#  BISON_${Name}_OUTPUT_HEADER - The header file generated by bison\n\n#  BISON_${Name}_OUTPUTS - The sources files generated by bison\n\n#  BISON_${Name}_COMPILE_FLAGS - Options used in the bison command line\n\n#\n\n# Example:\n\n# FIND_PACKAGE(BISON)\n\n# BISON_TARGET(MyParser parser.y ${PROJECT_BINARY_DIR}/parser.cpp)\n\n# ADD_EXECUTABLE(Foo main.cpp ${BISON_MyParser_OUTPUTS})\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Tristan Carel\n\n# All rights reserved.\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n#     * Redistributions of source code must retain the above copyright\n\n#       notice, this list of conditions and the following disclaimer.\n\n#     * Redistributions in binary form must reproduce the above copyright\n\n#       notice, this list of conditions and the following disclaimer in the\n\n#       documentation and/or other materials provided with the distribution.\n\n#     * Neither the name of the University of California, Berkeley nor the\n\n#       names of its contributors may be used to endorse or promote products\n\n#       derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND ANY\n\n# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE REGENTS AND CONTRIBUTORS BE LIABLE FOR ANY\n\n# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\n# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# $Id:: FindBISON.cmake 3 2006-11-03 02:42:02Z ken                            $\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# internal macro\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# internal macro\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Parsing parameters\n",
        "Line" : 109,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Header's name generated by bison (see option -d)\n",
        "Line" : 127,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# define target variables\n",
        "Line" : 142,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# FindBISON.cmake ends here\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "CMake/FindCClient.cmake" : {
      "ObjectId" : "bc61c52a3fead6738f2897cae9a648d2b5b20c35",
      "LastModified" : "2014-05-08T22:44:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/FindDoubleConversion.cmake" : {
      "ObjectId" : "f6b3600ee038679f0980421555f7e306ac41678f",
      "LastModified" : "2015-07-15T20:30:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Finds libdouble-conversion.\n\n#\n\n# This module defines:\n\n# DOUBLE_CONVERSION_INCLUDE_DIR\n\n# DOUBLE_CONVERSION_LIBRARY\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindEditline.cmake" : {
      "ObjectId" : "30fc61ffb84478770863bf6d2f17a6cc279d325a",
      "LastModified" : "2015-07-15T20:30:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/FindFLEX.cmake" : {
      "ObjectId" : "db626ca2655786ef774dd61f5e42e572f5e2b92a",
      "LastModified" : "2015-07-15T20:30:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find flex executable and provides a macro to generate custom build rules\n\n# The module defines the following variables:\n\n#  FLEX_FOUND - true is flex executable is found\n\n#  FLEX_VERSION - the version of flex\n\n# If flex is found on the system, the module provides the macro:\n\n#  FLEX_TARGET(Name FlexInput FlexOutput [COMPILE_FLAGS <string>])\n\n# which creates a custom command  to generate the <FlexOutput> file from\n\n# the <FlexInput> file.  If  COMPILE_FLAGS option is specified, the next\n\n# parameter is added to the flex  command line. Name is an alias used to\n\n# get  details of  this custom  command.  Indeed the  macro defines  the\n\n# following variables:\n\n#  FLEX_${Name}_DEFINED - true is the macro ran successfully\n\n#  FLEX_${Name}_OUTPUTS - the source file generated by the custom rule, an\n\n#  alias for FlexOutput\n\n#  FLEX_${Name}_INPUT - the flex source file, an alias for ${FlexInput}\n\n#\n\n# Flex scanners oftenly use tokens  defined by Bison: the code generated\n\n# by Flex  depends of the header  generated by Bison.   This module also\n\n# defines a macro:\n\n#  ADD_FLEX_BISON_DEPENDENCY(FlexTarget BisonTarget)\n\n# which  adds the  required dependency  between a  scanner and  a parser\n\n# where  <FlexTarget>  and <BisonTarget>  are  the  first parameters  of\n\n# respectively FLEX_TARGET and BISON_TARGET macros.\n\n#\n\n# Example:\n\n#  FIND_PACKAGE(BISON)\n\n#  FIND_PACKAGE(FLEX)\n\n#  BISON_TARGET(MyParser parser.y ${PROJECT_BINARY_DIR}/parser.cpp\n\n#  FLEX_TARGET(MyScanner lexer.l ${PROJECT_BINARY_DIR}/lexer.cpp)\n\n#  ADD_FLEX_BISON_DEPENDENCY(MyScanner MyParser)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Tristan Carel\n\n# All rights reserved.\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n#     * Redistributions of source code must retain the above copyright\n\n#       notice, this list of conditions and the following disclaimer.\n\n#     * Redistributions in binary form must reproduce the above copyright\n\n#       notice, this list of conditions and the following disclaimer in the\n\n#       documentation and/or other materials provided with the distribution.\n\n#     * Neither the name of the University of California, Berkeley nor the\n\n#       names of its contributors may be used to endorse or promote products\n\n#       derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND ANY\n\n# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE REGENTS AND CONTRIBUTORS BE LIABLE FOR ANY\n\n# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n\n# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# $Id:: FindFLEX.cmake 3 2006-11-03 02:42:02Z ken                             $\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# FindFLEX.cmake ends here\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "CMake/FindFastLZ.cmake" : {
      "ObjectId" : "43a2fb0075f5d0cb09d400273ee36d8c80af688c",
      "LastModified" : "2015-07-15T20:30:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/FindFreetype.cmake" : {
      "ObjectId" : "e9017c6907ca25e14cf077a5a1c8d5341717d43c",
      "LastModified" : "2015-07-15T20:30:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/FindGLIB.cmake" : {
      "ObjectId" : "0cc390c4b32d49213864accd7b097a72fe6c7abd",
      "LastModified" : "2017-04-14T16:14:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/FindGlog.cmake" : {
      "ObjectId" : "4338159a679a4e27f6c522fd013b1eaec230c894",
      "LastModified" : "2017-04-14T16:14:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Find libglog\n\n#\n\n#  LIBGLOG_INCLUDE_DIR - where to find glog/logging.h, etc.\n\n#  LIBGLOG_LIBRARY     - List of libraries when using libglog.\n\n#  LIBGLOG_FOUND       - True if libglog found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBGLOG_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMake/FindGold.cmake" : {
      "ObjectId" : "0fd84bb966ef6d66e22d9df4fa450baa0c52cc59",
      "LastModified" : "2015-07-15T20:30:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/FindICU.cmake" : {
      "ObjectId" : "cfddfb3b582018b03afecb39280fabcacd07ab21",
      "LastModified" : "2015-07-15T20:30:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Finds the International Components for Unicode (ICU) Library\n\n#\n\n#  ICU_FOUND          - True if ICU found.\n\n#  ICU_I18N_FOUND     - True if ICU's internationalization library found.\n\n#  ICU_INCLUDE_DIRS   - Directory to include to get ICU headers\n\n#                       Note: always include ICU headers as, e.g.,\n\n#                       unicode/utypes.h\n\n#  ICU_LIBRARIES      - Libraries to link against for the common ICU\n\n#  ICU_I18N_LIBRARIES - Libraries to link against for ICU internationaliation\n\n#                       (note: in addition to ICU_LIBRARIES)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the library.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Copy the results to the output variables.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Look for the ICU internationalization libraries\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Look for the ICU data libraries\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "CMake/FindLZ4.cmake" : {
      "ObjectId" : "4658a35bfa1af203da324982aa78eb53c411e409",
      "LastModified" : "2017-04-14T16:14:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Finds liblz4.\n\n#\n\n# This module defines:\n\n# LZ4_FOUND\n\n# LZ4_INCLUDE_DIR\n\n# LZ4_LIBRARY\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We require LZ4_compress_default() which was added in v1.7.0\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/FindLdap.cmake" : {
      "ObjectId" : "c2cb803797f4b9c6d50fc78c915ee2d06bbf9bef",
      "LastModified" : "2015-07-15T20:30:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the LDAP client libraries\n\n# Once done this will define\n\n#\n\n#  LDAP_FOUND - system has libldap\n\n#  LDAP_INCLUDE_DIR - the ldap include directory\n\n#  LDAP_LIBRARIES - libldap + liblber (if found) library\n\n#  LBER_LIBRARIES - liblber library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "CMake/FindLibAfdt.cmake" : {
      "ObjectId" : "f6fb58e386a981acad80853a563ec83f30dc322e",
      "LastModified" : "2015-07-15T20:30:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find LibAfdt (a cross platform RPC lib/tool)\n\n# This module defines\n\n# LibAfdt_INCLUDE_DIR, where to find LibAfdt headers\n\n# LibAfdt_LIBS, LibAfdt libraries\n\n# LibAfdt_FOUND, If false, do not try to use LibAfdt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindLibCh.cmake" : {
      "ObjectId" : "fc1556360b4e01b6e1f939eecd2b17576dbef49f",
      "LastModified" : "2015-07-15T20:30:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find LibCh (a cross platform RPC lib/tool)\n\n# This module defines\n\n# LibCh_INCLUDE_DIR, where to find LibCh headers\n\n# LibCh_LIBS, LibCh libraries\n\n# LibCh_FOUND, If false, do not try to use LibCh\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindLibDL.cmake" : {
      "ObjectId" : "b304c780134af64fc852daacb169c47c8f8e6148",
      "LastModified" : "2015-07-15T20:30:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libdl\n\n# Once done this will define\n\n#\n\n#  LIBDL_FOUND - system has libdl\n\n#  LIBDL_INCLUDE_DIRS - the libdl include directory\n\n#  LIBDL_LIBRARIES - Link these to use libdl\n\n#  LIBDL_NEEDS_UNDERSCORE - If extern \"C\" symbols are prefixed (BSD/Apple)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindLibDwarf.cmake" : {
      "ObjectId" : "d72b7ea8a2adc16b4efd4744bc24c800645b49c7",
      "LastModified" : "2017-04-14T16:14:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libdwarf\n\n# Once done this will define\n\n#\n\n#  LIBDWARF_FOUND - system has libdwarf\n\n#  LIBDWARF_INCLUDE_DIRS - the libdwarf include directory\n\n#  LIBDWARF_LIBRARIES - Link these to use libdwarf\n\n#  LIBDWARF_DEFINITIONS - Compiler switches required for using libdwarf\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Locate libelf library at first\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# PATH and INCLUDE will also work\n",
        "Line" : 29,
        "CharPositionInLine" : 15
      },
      "3" : {
        "Text" : "# PATH and LIB will also work\n",
        "Line" : 43,
        "CharPositionInLine" : 23
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBDWARF_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# libdwarf makes breaking changes occasionally and doesn't provide an easy\n\n# way to test for them. The following checks should detect the changes and\n\n# pass that information on accordingly.\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Check for the existence of this particular init function.\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Check to see if we can use a const name.\n",
        "Line" : 72,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# -std=c++11 is already set in HPHPCompiler.cmake, don't\n\n# add -std=c++0x on top of that or clang will give errors\n",
        "Line" : 76,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Order is important, last one is used.\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "CMake/FindLibElf.cmake" : {
      "ObjectId" : "e813b85d44aebb4d68fd293e4061ff21892a2a05",
      "LastModified" : "2017-04-14T16:14:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libelf\n\n# Once done this will define\n\n#\n\n#  LIBELF_FOUND - system has libelf\n\n#  LIBELF_INCLUDE_DIRS - the libelf include directory\n\n#  LIBELF_LIBRARIES - Link these to use libelf\n\n#  LIBELF_DEFINITIONS - Compiler switches required for using libelf\n\n#\n\n#  Copyright (c) 2008 Bernhard Walle <bernhard.walle@gmx.de>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBELF_FOUND to TRUE if all listed variables are TRUE\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/FindLibEvent.cmake" : {
      "ObjectId" : "cec5e59fe05ad4ccea784a537e0706fe55a91d4a",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find LibEvent (a cross event library)\n\n# This module defines\n\n# LIBEVENT_INCLUDE_DIR, where to find LibEvent headers\n\n# LIBEVENT_LIB, LibEvent libraries\n\n# LibEvent_FOUND, If false, do not try to use libevent\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindLibGmp.cmake" : {
      "ObjectId" : "78eb109e429147af889c6f525988c308b1d2235a",
      "LastModified" : "2015-07-15T20:30:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/FindLibIntl.cmake" : {
      "ObjectId" : "37154b49050edd28ff68c51e1f7d1fd381124adc",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindIntl\n\n# --------\n\n#\n\n# Find the Gettext libintl headers and libraries.\n\n#\n\n# This module reports information about the Gettext libintl\n\n# installation in several variables.  General variables::\n\n#\n\n#   Intl_FOUND - true if the libintl headers and libraries were found\n\n#   Intl_INCLUDE_DIRS - the directory containing the libintl headers\n\n#   Intl_LIBRARIES - libintl libraries to be linked\n\n#\n\n# The following cache variables may also be set::\n\n#\n\n#   Intl_INCLUDE_DIR - the directory containing the libintl headers\n\n#   Intl_LIBRARY - the libintl library (if any)\n\n#\n\n# .. note::\n\n#   On some platforms, such as Linux with GNU libc, the gettext\n\n#   functions are present in the C standard library and libintl\n\n#   is not required.  ``Intl_LIBRARIES`` will be empty in this\n\n#   case.\n\n#\n\n# .. note::\n\n#   If you wish to use the Gettext tools (``msgmerge``,\n\n#   ``msgfmt``, etc.), use :module:`FindGettext`.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Written by Roger Leigh <rleigh@codelibre.net>\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# CMake - Cross Platform Makefile Generator\n\n# Copyright 2000-2015 Kitware, Inc.\n\n# Copyright 2000-2011 Insight Software Consortium\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# ------------------------------------------------------------------------------\n\n#\n\n# The above copyright and license notice applies to distributions of\n\n# CMake in source and binary form.  Some source files contain additional\n\n# notices of original copyright by their contributors; see each source\n\n# for details.  Third-party software packages supplied with CMake under\n\n# compatible licenses provide their own copyright notices documented in\n\n# corresponding subdirectories.\n\n#\n\n# ------------------------------------------------------------------------------\n\n#\n\n# CMake was initially developed by Kitware with the following sponsorship:\n\n#\n\n#  * National Library of Medicine at the National Institutes of Health\n\n#    as part of the Insight Segmentation and Registration Toolkit (ITK).\n\n#\n\n#  * US National Labs (Los Alamos, Livermore, Sandia) ASC Parallel\n\n#    Visualization Initiative.\n\n#\n\n#  * National Alliance for Medical Image Computing (NAMIC) is funded by the\n\n#    National Institutes of Health through the NIH Roadmap for Medical Research,\n\n#    Grant U54 EB005149.\n\n#\n\n#  * Kitware, Inc.\n\n#\n\n#=============================================================================\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find include directory\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find all Intl libraries\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "CMake/FindLibJpeg.cmake" : {
      "ObjectId" : "8cffe316caf8d6830f1c9609d2dc23411f0bdb71",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/FindLibMagickWand.cmake" : {
      "ObjectId" : "101e25db9b10e73daae4160f80d8db74a11e8f77",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libmagickwand\n\n# Once done this will define\n\n#\n\n#  LIBMAGICKWAND_FOUND - system has libmagickwand\n\n#  LIBMAGICKWAND_INCLUDE_DIRS - the libmagickwand include directory\n\n#  LIBMAGICKWAND_LIBRARIES - Link these to use libmagickwand\n\n#  LIBMAGICKWAND_DEFINITIONS - Compiler switches required for using libmagickwand\n\n#\n\n#  Copyright (c) 2008 Bernhard Walle <bernhard.walle@gmx.de>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBMAGICKWAND_FOUND to TRUE if all listed variables are TRUE\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/FindLibNuma.cmake" : {
      "ObjectId" : "e1576c4afa11c4d6b8505b778a7573d742e193db",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/FindLibPng.cmake" : {
      "ObjectId" : "5f3188abf7648a2cfcbf83840244205ed85fffb8",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/FindLibSQLite.cmake" : {
      "ObjectId" : "bdd86afe1493e731735734164018b86278baffd4",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Finds libsqlite3.\n\n#\n\n# This module defines:\n\n# LIBSQLITE3_INCLUDE_DIR\n\n# LIBSQLITE3_LIBRARY\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindLibSodium.cmake" : {
      "ObjectId" : "3329f4a39de7dbd4b2c4785f8529eb09b4b59b42",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Finds sodium C client library\n\n#\n\n# This module defines:\n\n# LIBSODIUM_INCLUDE_DIRS\n\n# LIBSODIUM_LIBRARIES\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindLibVpx.cmake" : {
      "ObjectId" : "676d53a8086bafd6310b37a56e26e6a0354ceee1",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/FindLibXed.cmake" : {
      "ObjectId" : "f05ddc7dc12bbb059a31496868f7f03523332a94",
      "LastModified" : "2019-03-28T19:29:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/FindLibZip.cmake" : {
      "ObjectId" : "76ab22428346a064c8fe7b226e99e9a24a1b86ce",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Finds libzip.\n\n#\n\n# This module defines:\n\n# LIBZIP_INCLUDE_DIR_ZIP\n\n# LIBZIP_INCLUDE_DIR_ZIPCONF\n\n# LIBZIP_LIBRARY\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindLibiconv.cmake" : {
      "ObjectId" : "be0d8b8f648216fa8ba9617f31b021b8347f80e4",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# $Id$\n\n#\n\n# - Find libiconv\n\n# Find libiconv\n\n#\n\n#  LIBICONV_INCLUDE_DIR - where to find iconv.h, etc.\n\n#  LIBICONV_LIBRARY     - List of libraries when using libiconv.\n\n#  LIBICONV_FOUND       - True if libiconv found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set Libmemcached_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMake/FindLibinotify.cmake" : {
      "ObjectId" : "a9c8f03a7257b56a8fe9da0908068cb046179c3d",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# $Id$\n\n#\n\n# - Find libinotify\n\n# Find libinotify\n\n#\n\n#  LIBINOTIFY_INCLUDE_DIR - where to find sys/inotify.h\n\n#  LIBINOTIFY_LIBRARY     - List of libraries when using libinotify\n\n#  LIBINOTIFY_FOUND       - True if libinotify found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "CMake/FindLibjsonc.cmake" : {
      "ObjectId" : "42985cb062dcc9ed11cacf26c16ff225d3a3287a",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find libjsonc\n\n#\n\n#   LIBJSONC_INCLUDE_DIR\n\n#   LIBJSONC_LIBRARY\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "CMake/FindLibmemcached.cmake" : {
      "ObjectId" : "539cfde38521e269d80b21d1d972c4391d143eee",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find libmemcached\n\n#\n\n#  LIBMEMCACHED_INCLUDE_DIR - where to find libmemcached/memcached.h, etc.\n\n#  LIBMEMCACHED_LIBRARY     - List of libraries when using libmemcached.\n\n#  LIBMEMCACHED_FOUND       - True if libmemcached found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set Libmemcached_FOUND to TRUE \n\n# if all listed variables are TRUE\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMake/FindLibpam.cmake" : {
      "ObjectId" : "dcf428056387e3e14c2d3102da644c384cc98d28",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/FindMcrypt.cmake" : {
      "ObjectId" : "29b16923550e76620f2922ae2e9a20838eb1b139",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Mcrypt (a cross platform RPC lib/tool)\n\n# This module defines\n\n# Mcrypt_INCLUDE_DIR, where to find Mcrypt headers\n\n# Mcrypt_LIBS, Mcrypt libraries\n\n# Mcrypt_FOUND, If false, do not try to use Mcrypt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#find_library can't seem to find a 64-bit binary if the 32-bit isn't there\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/FindMySQL.cmake" : {
      "ObjectId" : "69430e0fd0d270f1862a5b77a8c9c22b31b40a0c",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#--------------------------------------------------------\n\n# Copyright (C) 1995-2007 MySQL AB\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of version 2 of the GNU General Public License as\n\n# published by the Free Software Foundation.\n\n#\n\n# There are special exceptions to the terms and conditions of the GPL\n\n# as it is applied to this software. View the full text of the exception\n\n# in file LICENSE.exceptions in the top-level directory of this software\n\n# distribution.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc.,\n\n# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n\n#\n\n# The MySQL Connector/ODBC is licensed under the terms of the\n\n# GPL, like most MySQL Connectors. There are special exceptions\n\n# to the terms and conditions of the GPL as it is applied to\n\n# this software, see the FLOSS License Exception available on\n\n# mysql.com.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##########################################################################\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-------------- FIND MYSQL_INCLUDE_DIR ------------------\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#----------------- FIND MYSQL_LIB_DIR -------------------\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set lib path suffixes\n\n# dist = for mysql binary distributions\n\n# build = for custom built tree\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Added needed mysqlclient dependencies on Windows\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "CMake/FindONIGURUMA.cmake" : {
      "ObjectId" : "1bb9f6c98199e72df6c9590651ddf59ebc23a35b",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find oniguruma\n\n# Find the native Oniguruma includes and library\n\n#\n\n#  ONIGURUMA_INCLUDE_DIRS - where to find oniguruma.h, etc.\n\n#  ONIGURUMA_LIBRARIES    - List of libraries when using oniguruma.\n\n#  ONIGURUMA_FOUND        - True if oniguruma found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "CMake/FindPCRE.cmake" : {
      "ObjectId" : "da7d6349831ee0a95911c17602a363619cae0e28",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# $Id$\n\n#\n\n# - Find pcre\n\n# Find the native PCRE includes and library\n\n#\n\n#  PCRE_INCLUDE_DIR  - where to find pcre.h, etc.\n\n#  PCRE_LIBRARY      - Path to the pcre library.\n\n#  PCRE_FOUND        - True if pcre found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PCRE_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure it's got the jit enabled. If not, don't use it.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This is used to configure bundled pcre\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "CMake/FindPThread.cmake" : {
      "ObjectId" : "4eda894ec6e92e8bdde48d02ade1e78ee991253c",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libpthread\n\n#\n\n# Once done this will define\n\n#\n\n#  LIBPTHREAD_FOUND - system has libpthread\n\n#  LIBPTHREAD_INCLUDE_DIRS - the libpthread include directory\n\n#  LIBPTHREAD_LIBRARIES - Link these to use libpthread\n\n#  LIBPTHREAD_DEFINITIONS - Compiler switches required for using libpthread\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindRE2.cmake" : {
      "ObjectId" : "1ccb89d13c56a2609deeaa06b67c4c062d9e9fef",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/FindReadline.cmake" : {
      "ObjectId" : "74bf8b6c570d11d1e501c96c0cc3f35e7c10c7db",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# from http://websvn.kde.org/trunk/KDE/kdeedu/cmake/modules/FindReadline.cmake\n\n# http://websvn.kde.org/trunk/KDE/kdeedu/cmake/modules/COPYING-CMAKE-SCRIPTS\n\n# --> BSD licensed\n\n#\n\n# GNU Readline library finder\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 2008-04-22 The next clause used to read like this:\n\n#\n\n#  FIND_LIBRARY(READLINE_LIBRARY NAMES readline)\n\n#        FIND_LIBRARY(NCURSES_LIBRARY NAMES ncurses )\n\n#        include(FindPackageHandleStandardArgs)\n\n#        FIND_PACKAGE_HANDLE_STANDARD_ARGS(Readline DEFAULT_MSG NCURSES_LIBRARY READLINE_INCLUDE_DIR READLINE_LIBRARY )\n\n#\n\n# I was advised to modify it such that it will find an ncurses library if\n\n# required, but not if one was explicitly given, that is, it allows the\n\n# default to be overridden. PH\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "CMake/FindSnappy.cmake" : {
      "ObjectId" : "ef7541beb17f0e25a23a810321d4be15ce8c218a",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Snappy\n\n# This module defines\n\n# SNAPPY_INCLUDE_DIR, where to find Snappy headers\n\n# SNAPPY_LIBS, Snappy libraries\n\n# SNAPPY_FOUND, If false, do not try to use Snappy\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#find_library can't seem to find a 64-bit binary if the 32-bit isn't there\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/FindTBB.cmake" : {
      "ObjectId" : "244ac23c3d45713a1bd4a135e0e22187d87c5d07",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Intel Threading Building Blocks include paths and libraries\n\n# TBB can be found at http://www.threadingbuildingblocks.org/\n\n# Written by Hannes Hofmann, hannes.hofmann _at_ informatik.uni-erlangen.de\n\n# Adapted by Gino van den Bergen gino _at_ dtecta.com\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GvdB: This module uses the environment variable TBB_ARCH_PLATFORM which defines architecture and compiler.\n\n#   e.g. \"ia32/vc8\" or \"em64t/cc4.1.0_libc2.4_kernel2.6.16.21\"\n\n#   TBB_ARCH_PLATFORM is set by the build script tbbvars[.bat|.sh|.csh], which can be found\n\n#   in the TBB installation directory (TBB_INSTALL_DIR).\n\n#\n\n# For backwards compatibility, you may explicitly set the CMake variables TBB_ARCHITECTURE and TBB_COMPILER.\n\n# TBB_ARCHITECTURE     [ ia32 | em64t | itanium ]\n\n#   which architecture to use\n\n# TBB_COMPILER         e.g. vc9 or cc3.2.3_libc2.3.2_kernel2.4.21 or cc4.0.1_os10.4.9\n\n#   which compiler to use (detected automatically on Windows)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This module respects\n\n# TBB_INSTALL_DIR or $ENV{TBB21_INSTALL_DIR} or $ENV{TBB_INSTALL_DIR}\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This module defines\n\n# TBB_INCLUDE_DIRS, where to find task_scheduler_init.h, etc.\n\n# TBB_LIBRARY_DIRS, where to find libtbb, libtbbmalloc\n\n# TBB_INSTALL_DIR, the base TBB install directory\n\n# TBB_LIBRARIES, the libraries to link against to use TBB.\n\n# TBB_DEBUG_LIBRARIES, the libraries to link against to use TBB with debug symbols.\n\n# TBB_FOUND, If false, don't try to use TBB.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# lets try in the obvious places first\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# has em64t/vc8   em64t/vc9\n\n# has ia32/vc7.1  ia32/vc8   ia32/vc9\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# MAC\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# libs: libtbb.dylib, libtbbmalloc.dylib, *_debug\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# has only one flavor: ia32/cc4.0.1_os10.4.9\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# LINUX\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# has em64t/cc3.2.3_libc2.3.2_kernel2.4.21  em64t/cc3.3.3_libc2.3.3_kernel2.6.5  em64t/cc3.4.3_libc2.3.4_kernel2.6.9  em64t/cc4.1.0_libc2.4_kernel2.6.16.21\n\n# has ia32/*\n\n# has itanium/*\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# SUN\n\n# not yet supported\n\n# has em64t/cc3.4.3_kernel5.10\n\n# has ia32/*\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#-- Clear the public variables\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-- Find TBB install dir and set ${_TBB_INSTALL_DIR} and cached ${TBB_INSTALL_DIR}\n\n# first: use CMake variable TBB_INSTALL_DIR\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# second: use environment variable\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Intel recommends setting TBB21_INSTALL_DIR\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# third: try to find path automatically\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# sanity check\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# finally: set the cached CMake variable TBB_INSTALL_DIR\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "#-- Look for include directory and set ${TBB_INCLUDE_DIR}\n",
        "Line" : 151,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "#-- Look for libraries\n\n# GvdB: $ENV{TBB_ARCH_PLATFORM} is set by the build script tbbvars[.bat|.sh|.csh]\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Undeprecated to allow for Windows use. \n",
        "Line" : 165,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "#-- Look for debug libraries\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# do only throw fatal, if this pkg is REQUIRED\n",
        "Line" : 199,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 24
    },
    "CMake/Findfribidi.cmake" : {
      "ObjectId" : "50a65a5d01be38d44773bd0ac7f9c076c523492b",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/FindlibWatchmanClient.cmake" : {
      "ObjectId" : "babc2624bae2dfb94e6db5091acabdfc401cbb70",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Finds Watchamn C++ client library\n\n#\n\n# This module defines:\n\n# WATCHMANCLIENT_INCLUDE_DIRS\n\n# WATCHMANCLIENT_LIBRARIES\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/HHVMExtensionConfig.cmake" : {
      "ObjectId" : "866d3cdc58f4ef3e8b2a48d1a2c711abc884c6b8",
      "LastModified" : "2019-03-28T19:29:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file holds the configuration mechanism for extensions.\n\n#\n\n# Now, the structure of the globals this uses.\n\n#\n\n# HHVM_EXTENSION_COUNT: <int>\n\n# An integer representing the number of extensions that have\n\n# been defined.\n\n#\n\n# HHVM_EXTENSIONS_REQUIRED_LIBRARIES: <list of paths>\n\n# A list of the additional libraries that need to be linked\n\n# against for the enabled extensions.\n\n#\n\n# HHVM_EXTENSIONS_REQUIRED_INCLUDE_DIRS: <list of paths>\n\n# A list of the additional include paths that need to be used\n\n# in order to compile the enabled extensions.\n\n#\n\n# HHVM_EXTENSIONS_REQUIRED_DEFINES: <list of strings>\n\n# A list of the additional defines that need to be used in order\n\n# to compile the enabled extensions.\n\n#\n\n#\n\n# The extensions' internal info is stored in globals, prefixed by\n\n# HHVM_EXTENSION_#_ where # represents a number between 0 and\n\n# HHVM_EXTENSION_COUNT.\n\n#\n\n# HHVM_EXTENSION_#_NAME: <string>\n\n# The name of extension.\n\n#\n\n# HHVM_EXTENSION_#_PRETTY_NAME: <string>\n\n# The name of the extension to use in messages.\n\n#\n\n# HHVM_EXTENSION_#_REQUIRED: <ON/OFF>\n\n# If ON, then the extension is integral to the function\n\n# of HHVM itself, so failing to build it is not an option,\n\n# and a FATAL_ERROR should be triggered if dependencies\n\n# fail.\n\n#\n\n# HHVM_EXTENSION_#_ROOT_DIR: <string>\n\n# The root directory to which all file paths\n\n# referenced by the extension are relative to.\n\n#\n\n# HHVM_EXTENSION_#_ENABLED_STATE: <int {0, 1, 2, 3, 4}>\n\n# The state of an extension's enabling. If this is 0, then the extension\n\n# may be enabled once dependency calculation is performed. If this is 1,\n\n# then the extension is enabled, and if it is 2, then it is disabled.\n\n# If this is 3, then the extension has been forcefully enabled, and its\n\n# dependencies should be checked. If this is 4, then the extension is a\n\n# 'wanted' extension, and we should error if dependencies for it can't\n\n# be resolved, unless the dependency that fails is an os* or var* dependency,\n\n# in which case, we don't error, but just disable the extension.\n\n#\n\n# HHVM_EXTENSION_#_SOURCE_FILES: <list>\n\n# The list of files to compile for the extension.\n\n#\n\n# HHVM_EXTENSION_#_HEADER_FILES: <list>\n\n# The list of header files that make up this extension.\n\n#\n\n# HHVM_EXTENSION_#_SYSTEMLIB: <list>\n\n# The list of php files that make up this extension's own systemlib.\n\n#\n\n# HHVM_EXTENSION_#_DEPENDENCIES: <list>\n\n# The list of dependencies of this extension. For details on the specifics\n\n# of values in this list, see the documentation of the DEPENDS parameter\n\n# of HHVM_DEFINE_EXTENSION.\n\n#\n\n# HHVM_EXTENSION_#_DEPENDENCIES_OPTIONAL: <list>\n\n# A list of ON/OFF values mapping to the values in HHVM_EXTENSION_#_DEPENDENCIES.\n\n# If the value is ON, then the dependency is optional, and the build should\n\n# not fail if the dependency can't be resolved.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# function HHVM_DEFINE_EXTENSION:\n\n# This is the function that each individual extension will call. It\n\n# defines everything about the extension.\n\n#\n\n# Note that HRE_CURRENT_EXT_PATH should have been defined before calling this,\n\n# and it should be set to the root directory to which all paths passed to this\n\n# function are relative to.\n\n#\n\n# Parameters:\n\n#\n\n# NAME\n\n# The name of the extension. This name will be used in the variable names,\n\n# so spaces are not allowed.\n\n#\n\n# [REQUIRED]\n\n# This extension is integral to the functioning of HHVM, and\n\n# can not be disabled via `-DENABLE_EXTENSION_FOO=Off`.\n\n# A FATAL_ERROR will be triggered if dependencies fail to resolve.\n\n#\n\n# [IMPLICIT]\n\n# If the library dependencies for this extension fail to resolve,\n\n# and it has not be explicitly enabled via `-DENABLE_EXTENSION_FOO=On`,\n\n# then it will be implicitly disabled by the build system.\n\n#\n\n# [WANTED] (default)\n\n# If the library dependencies for this extension fail to resolve,\n\n# and it has not been explicitly disabled with `-DENABLE_EXTENSION_FOO=Off`\n\n# a FATAL_ERROR will be triggered, unless the dependency that fails is\n\n# an os* or var* dependency, in which case the extension will be implicitly\n\n# disabled by the build system.\n\n#\n\n# Note that it does not make sense to specify more than one of the above\n\n# three settings as the behavior they imply is mutually exclusive.\n\n# Using more than one will result in undefined behavior.\n\n#\n\n# [PRETTY_NAME string]\n\n# If passed, use this name when naming the extension in mesages. If this is\n\n# not passed, default to NAME.\n\n#\n\n# [IS_ENABLED VARNAME]\n\n# If the parameter passed is defined, and has a trueish value,\n\n# then the extension will be enabled. This is only used to maintain\n\n# backwards compatibility with existing options. All other\n\n# extensions can be enabled or disabled with ENABLE_EXTENSION_*.\n\n# The ENABLE_EXTENSION_* variables will also be defined for the source\n\n# code so that fallbacks may be used where needed.\n\n#\n\n# [SOURCES ...]\n\n# The source files of the extension\n\n#\n\n# [HEADERS ...]\n\n# The header files of the extension\n\n#\n\n# [SYSTEMLIB ...]\n\n# The PHP API of the extension.\n\n#\n\n# [DEPENDS ...]\n\n# The dependencies of the extension. Extensions are prefixed\n\n# with \"ext_\", and external libaries with \"lib\".\n\n# \"systemlib\" is a special dependency that represents the\n\n# systemlib header.\n\n#\n\n# A dependency may optionally be followed by \"OPTIONAL\", which\n\n# means that the build won't fail if the dependency is not found.\n\n#\n\n# Dependencies prefixed with \"os\" represent the OS required to\n\n# build the extension. The only valid value for this currently\n\n# is osPosix, which represents everything with a valid posix\n\n# API, which is most everything except for Windows.\n\n#\n\n# Dependencies prefixed with \"var\" represent a CMake variable\n\n# which must evaluate to a trueish value for the extension to\n\n# be enabled. If the value isn't defined, it is assumed to be\n\n# false.\n\n#\n\n# If there is a space in an argument with a string in it, and\n\n# the argument is a library, the exact version of the library\n\n# required is expected to be the second part of the string.\n\n# For example, \"libFribidi 0.19.6\" would require the Fribidi\n\n# package to be exactly version 0.19.6.\n\n#\n\n# For libBoost, a single component is expected to be specified\n\n# by appending a -componentName to the value, for example\n\n# libBoost-variant would require the variant component of libBoost.\n\n# This is only required if a library needs to be linked against.\n\n# If a boost component is a headers-only library, libBoost is\n\n# enough of a dependency.\n\n#\n\n# Note that libFolly is currently a dependency of everything\n\n# for the sanity of the Windows port.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If WANTED is specified, then the extension must be explicitly disabled\n\n# If IMPLICIT is specified, then the extension will be implicitly disabled\n\n# when the dependencies are not found\n\n# If neither is specified, we default to WANTED anyway\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Make sure there are no spaces.\n",
        "Line" : 184,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Make sure another extension with the same hasn't already\n\n# been defined.\n",
        "Line" : 190,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# PRETTY_NAME\n",
        "Line" : 243,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# IS_ENABLED\n",
        "Line" : 247,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# SOURCES\n",
        "Line" : 257,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# HEADERS\n",
        "Line" : 264,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# SYSTEMLIB\n",
        "Line" : 271,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# DEPENDS\n",
        "Line" : 278,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Check if the extension has been explicitly enabled or disabled.\n",
        "Line" : 290,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Increment the extension count.\n",
        "Line" : 302,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# And lastly, export the globals.\n\n# We put these in the cache to make debugging easier.\n\n# The only one that absolutely has to be in the cache is\n\n# the ENABLED_STATE, due to it's modification from fairly\n\n# arbitrary scope depths. HHVM_EXTENSION_COUNT must NEVER\n\n# be in the cache, otherwise this will break.\n",
        "Line" : 307,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Call after all of the calls to HHVM_DEFINE_EXTENSION are complete.\n\n#\n\n# This will also add the appropriate libraries, include directories, and\n\n# defines for the enabled extensions' dependencies.\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Now we need to make sure the dependencies are included and linked in\n\n# correctly.\n",
        "Line" : 340,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# This will append the files of the enabled extensions to the following variables:\n\n# C_SOURCES: C Source Files\n\n# CXX_SOURCES: C++ Source Files\n\n# HEADER_SOURCES: C/C++ Header Files\n\n# ASM_SOURCES: asm source files appropriate for the current compiler.\n\n# PHP_SOURCES: PHP files representing the various extensions' systemlib.\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Propagate the extra files to the parent scope.\n",
        "Line" : 388,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Sort out all the files into their appropriate variable, as well as transform the paths\n\n# to their fully-resolved forms.\n",
        "Line" : 396,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# AT&T syntax, MSVC doesn't like.\n",
        "Line" : 415,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# MASM syntax. MSVC only.\n",
        "Line" : 420,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# Configure the specified target so that it can compile when\n\n# linked against the enabled extensions.\n",
        "Line" : 437,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Resolve the dependencies of the specified extension, and update it's enabled state.\n",
        "Line" : 446,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# If already resolved, return that state.\n",
        "Line" : 448,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# If already in resolution stack, it's a circular dependency,\n\n# assume for now that it's enabled.\n",
        "Line" : 456,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Go through the dependencies, checking each one recursively in turn.\n",
        "Line" : 464,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Library Dependency\n",
        "Line" : 472,
        "CharPositionInLine" : 6
      },
      "27" : {
        "Text" : "# CMake Variable Dependency\n",
        "Line" : 480,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# OS Dependency\n",
        "Line" : 496,
        "CharPositionInLine" : 10
      },
      "29" : {
        "Text" : "# TODO: Mark this somehow?\n",
        "Line" : 506,
        "CharPositionInLine" : 10
      },
      "30" : {
        "Text" : "# Set that an extension was disabled because of the specified dependency not being\n\n# possible to resolve.\n\n# This optionally takes a third BOOL parameter that should be set to ON only if the\n\n# dependency that failed to resolve is an os* or var* dependency.\n",
        "Line" : 524,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Currently only triggers for issues with find_package when applying the library dependencies.\n",
        "Line" : 541,
        "CharPositionInLine" : 6
      },
      "32" : {
        "Text" : "# Add a set of libraries to link against.\n",
        "Line" : 549,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Add a set of include directories to use.\n",
        "Line" : 558,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Add a set of defines to use when compiling.\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# This handles all the library dependencies, and determines if the libraries are present.\n",
        "Line" : 576,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# This first check is for libraries that are used by default\n\n# Keep these in alphabetical order.\n",
        "Line" : 598,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# Nothing to do, they are included by default.\n",
        "Line" : 618,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# mysql checks - if we're using async mysql, we use fbmysqlclient from\n\n# third-party/ instead\n",
        "Line" : 909,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 39
    },
    "CMake/HHVMGenerateConfig.cmake" : {
      "ObjectId" : "3a3cb2953d1e65a0b098325cf9e6274d1d79d3e2",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The core function for generating `hphp-config.h`. This is done here to keep\n\n# the main CMake tree clean.\n\n#\n\n# If you add any defines here or in hphp-config.h.in, you must make sure\n\n# to update the non-CMake side. If you are not sure if a particular define\n\n# should be present, ask your FB reviewer.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build a string to define the appropriate macros for the headers that\n\n# we are able to find.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is a list of headers to check for and add defines in the form of\n\n# HAVE_*_H if they are present. Note that all slashes will be replaced\n\n# with a single underscore. Please keep ordered such that all headers\n\n# in a root directory are first, followed by headers in a subdirectory.\n\n# Note that .h will automatically be appended to the names of these before\n\n# searching for them.\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Build a string to define the appropriate macros for the functions that\n\n# we are able to find.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This is a list of functions that need to be checked for.\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# This is a list of functions that are known to be present under MSVC\n\n# because they are implemented via Folly's portability headers. For an\n\n# item in this list to have any effect, it must first fail to be found\n\n# when checking the item in the main list.\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Check if the source passed in compiles and add the appropriate define.\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# A quick check for use by HHVM_GENERATE_CONFIG_COMPILES_DEFINE_STRING to\n\n# check if a struct defined in a particular header has a member with\n\n# the specified name.\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# A quick check for use by HHVM_GENERATE_CONFIG_COMPILES_DEFINE_STRING to\n\n# check if a symbol is defined in a particular header.\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Build a define string for checks that require checking if some source code\n\n# compiles.\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Builds a string to define the macros for all enabled extensions.\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Generate the config file for HHVM.\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "CMake/HHVMProject.cmake" : {
      "ObjectId" : "aba089d3ccf2ee3efe3ae670d9f92ead39b1a571",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This must be done after the 'project' command\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/HPHPCompiler.cmake" : {
      "ObjectId" : "bd7e628c9c025748e0aea6e50b5326d148561ec6",
      "LastModified" : "2019-03-28T19:29:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Do this until cmake has a define for ARMv8\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# using Clang or GCC\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Warnings to disable by name, -Wno-${name}\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Warnings to disable by name when building C code.\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# General options to pass to both C & C++ compilers\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# General options to pass to the C++ compiler\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Options to pass for debug mode to the C++ compiler\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Options to pass for release mode to the C++ compiler\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Suboption of -g in debug mode\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Enable GCC/LLVM stack-smashing protection\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# This needs two dashes in the name, so put one here.\n",
        "Line" : 89,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# using Clang\n",
        "Line" : 96,
        "CharPositionInLine" : 49
      },
      "12" : {
        "Text" : "# For unclear reasons, our detection for what crc32 intrinsics you have\n\n# will cause clang to ICE. Specifying a baseline here works around the\n\n# issue. (SSE4.2 has been available on processors for quite some time now.)\n",
        "Line" : 99,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Also need to pass the right option to ASM files to avoid inconsistencies\n\n# in CRC hash function handling\n",
        "Line" : 104,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# Enabled GCC/LLVM stack-smashing protection\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# using GCC\n",
        "Line" : 136,
        "CharPositionInLine" : 9
      },
      "16" : {
        "Text" : "# Fix problem with GCC 4.9, https://kb.isc.org/article/AA-01167\n",
        "Line" : 162,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Warn about a GCC 4.9 bug leading to an incorrect refcounting issue\n\n# https://github.com/facebook/hhvm/issues/8011\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Enabled GCC/LLVM stack-smashing protection\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# https://isisblogs.poly.edu/2011/06/01/relro-relocation-read-only/\n",
        "Line" : 197,
        "CharPositionInLine" : 10
      },
      "20" : {
        "Text" : "# X64\n",
        "Line" : 209,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# SSE4.2 has been available on processors for quite some time now. This\n\n# allows enabling CRC hash function code\n",
        "Line" : 214,
        "CharPositionInLine" : 10
      },
      "22" : {
        "Text" : "# Also pass the right option to ASM files to avoid inconsistencies\n\n# in CRC hash function handling\n",
        "Line" : 218,
        "CharPositionInLine" : 10
      },
      "23" : {
        "Text" : "# ARM64\n",
        "Line" : 224,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Force char type to be signed, which is not the case on aarch64.\n",
        "Line" : 226,
        "CharPositionInLine" : 6
      },
      "25" : {
        "Text" : "# If a CPU was specified, build a -mcpu option for the compiler.\n",
        "Line" : 229,
        "CharPositionInLine" : 6
      },
      "26" : {
        "Text" : "# Make sure GCC is not using the fix for errata 843419. This change\n\n# interferes with the gold linker. Note that GCC applies this fix\n\n# even if you specify an mcpu other than cortex-a53, which is why\n\n# it's explicitly being disabled here for any cpu other than\n\n# cortex-a53. If you're running a newer pass of the cortex-a53, then\n\n# you can likely disable this fix with the following flag too. YMMV\n",
        "Line" : 235,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# PPC64\n",
        "Line" : 247,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# No optimizations for debug builds.\n\n# -Og enables some optimizations, but makes debugging harder by optimizing\n\n# away some functions and locals. -O0 is more debuggable.\n\n# -O0-ggdb was reputed to cause gdb to crash (github #4450)\n",
        "Line" : 261,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# The ASM part of this makes it more effort than it's worth\n\n# to add these to the general flags system.\n",
        "Line" : 304,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# using Intel C++\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# using Visual Studio C++\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "############################################################\n\n# First we setup and account for the option sets.\n\n############################################################\n",
        "Line" : 319,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# Some addional configuration options.\n",
        "Line" : 334,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# The general options passed:\n",
        "Line" : 343,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# Support objects with > 65k sections. Needed for folly due to templates.\n",
        "Line" : 345,
        "CharPositionInLine" : 13
      },
      "36" : {
        "Text" : "# Precise floating point model used in every other build, use it here as well.\n",
        "Line" : 346,
        "CharPositionInLine" : 17
      },
      "37" : {
        "Text" : "# Enable both SEH and C++ Exceptions.\n\n# Disable elimination of stack frames.\n",
        "Line" : 347,
        "CharPositionInLine" : 10
      },
      "38" : {
        "Text" : "# Have the compiler eliminate unreferenced COMDAT functions and data before emitting the object file. This produces significantly less input to the linker, resulting in MUCH faster linking.\n",
        "Line" : 349,
        "CharPositionInLine" : 16
      },
      "39" : {
        "Text" : "# Enable enhanced optimized debugging. Produces slightly larger pdb files, but the resulting optimized code is much much easier to debug.\n",
        "Line" : 350,
        "CharPositionInLine" : 9
      },
      "40" : {
        "Text" : "# Enable all warnings if requested.\n",
        "Line" : 353,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Enable static analysis if requested.\n",
        "Line" : 358,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# Enable multi-processor compilation if requested.\n",
        "Line" : 363,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# Enable AVX2 codegen if available and requested.\n",
        "Line" : 368,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# Validate, and then add the favored architecture.\n",
        "Line" : 373,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# The warnings that are disabled:\n",
        "Line" : 379,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# Unknown pragma.\n\n# 'typedef' ignored on left of '' when no variable is declared.\n\n# Unused variables\n\n# Alignment changed after including header. This is needed because boost includes an ABI header that does some #pragma pack push/pop stuff, and we've passed our own packing\n\n# Unary minus applied to unsigned type, result still unsigned.\n\n# Function was inherited via dominance.\n\n# Values being forced to bool, this happens many places, and is a \"performance warning\".\n",
        "Line" : 381,
        "CharPositionInLine" : 11
      },
      "47" : {
        "Text" : "# These warnings are disabled because we've\n\n# enabled all warnings. If all warnings are\n\n# not enabled, then these don't need to be\n\n# disabled.\n",
        "Line" : 391,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# Enum value not handled by a case in a switch on an enum. This isn't very helpful because it is produced even if a default statement is present.\n\n# Unreferenced formal parameter.\n\n# Conditional expression is constant.\n\n# Old style declarator used. This is triggered by ext_bc's backend code.\n\n# Local variable is initialized but not referenced.\n\n# Unsafe type cast.\n\n# Non-standard extension, zero sized array.\n\n# Non-standard extension used: nameless struct/union.\n\n# Non-standard extension used: 'pCurrent': address of dllimport.\n\n# Implicit change from signed/unsigned when initializing.\n\n# Implicitly converting fucntion prototype from `()` to `(void)`.\n\n# Class has virtual functions, but destructor is not virtual.\n\n# Unsigned/negative constant mismatch.\n\n# '<' Expression is always false.\n\n# 'this' pointer for member may not be aligned to 8 bytes as expected by the constructor.\n\n# Structure was padded due to alignment specifier.\n\n# 'this' used in base member initializer list.\n\n# Signed/unsigned mismatch.\n\n# Layout of class may have changed due to fixes in packing.\n\n# Signed/unsigned mismatch on relative comparison operator.\n\n# Signed/unsigned mismatch on equality comparison operator.\n\n# Object layout under /vd2 will change due to virtual base.\n\n# Declaration of local hides previous definition of local by the same name.\n\n# Declaration of local hides function parameter.\n\n# Declaration of parameter hides class member.\n\n# Declaration of parameter hides global declaration.\n\n# Relative include path contains \"..\". This is triggered by the TBB headers.\n\n# Unreferenced local function has been removed. This is mostly the result of things not being needed under MSVC.\n\n# Unreferenced inline function has been removed. (caused by /Zc:inline)\n\n# Expression before comma has no effect. I wouldn't disable this normally, but malloc.h triggers this warning.\n\n# Expression has no effect; expected expression with side-effect. This is triggered by boost/variant.hpp.\n\n# ifdef'd macro was defined to 0.\n\n# Constructor is not implicitly called.\n\n# Destructor is not implicitly called.\n\n# Member has already been initialized by another union member initializer.\n\n# Invalid warning number used in #pragma warning.\n\n# Default constructor was implicitly defined as deleted.\n\n# Copy constructor was implicitly defined as deleted.\n\n# Assignment operator was implicitly defined as deleted.\n\n# __is_pod() has a different value in pervious versions of MSVC.\n\n# Macro was not defined, replacing with 0.\n\n# Potentially uninitialized local variable used.\n\n# Unreachable code.\n\n# Assignment within conditional expression.\n\n# Comma operator within array index expression. This currently just produces false-positives.\n\n# Function was not inlined.\n\n# Function was selected for automated inlining. This produces tens of thousands of warnings in release mode if you leave it enabled, which will completely break Visual Studio, so don't enable it.\n\n# Function marked as __forceinline not inlined.\n\n# Format string expected in argument is not a string literal.\n\n# Padding added after data member.\n\n# A GUID can only be associated with a class. This is triggered by some standard windows headers.\n\n# reinterpret_cast used between related types.\n\n# Move constructor was implicitly defined as deleted.\n\n# Move assignment operator was implicitly defined as deleted.\n\n# #pragma warning(pop): likely mismatch, popping warning state pushed in different file. This is needed because of how boost does things.\n",
        "Line" : 396,
        "CharPositionInLine" : 13
      },
      "49" : {
        "Text" : "# Warnings disabled for /analyze\n",
        "Line" : 455,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# Using uninitialized memory. This is disabled because it is wrong 99% of the time.\n\n# Dereferencing potentially NULL pointer.\n\n# Return value ignored.\n\n# (<non-zero constant> || <expression>) is always a non-zero constant.\n\n# (<zero> && <expression>) is always zero. <expression> is never evaluated and may have side effects.\n\n# (<non-zero constant> && <expression>) always evaluates to the result of <expression>.\n\n# (<expression> && <non-zero constant>) always evaluates to the result of <expression>.\n\n# Local declaration hides declaration of same name in outer scope.\n\n# Setting a SECURITY_DESCRIPTOR's DACL to NULL will result in an unprotected object. This is done by one of the boost headers.\n\n# _alloca indicates failure by raising a stack overflow exception.\n\n# Function uses more than x bytes of stack space.\n\n# Extra parameter passed to format function. The analysis pass doesn't recognize %j or %z, even though the runtime does.\n\n# (<non-zero constant> || <non-zero constant>) is always true.\n\n# 32-bit value is shifted then cast to 64-bits. The places this occurs never use more than 32 bits.\n\n# Realloc might return null pointer: assigning null pointer to '<name>', which is passed as an argument to 'realloc', will cause the original memory to leak.\n\n# Potential comparison of a constant with another constant.\n\n# Unsigned/signed mismatch when passed as a parameter.\n\n# Mismatch on sign when passed as format string value.\n\n# '<value>' could be '0': This does not adhere to the specification for a function.\n",
        "Line" : 457,
        "CharPositionInLine" : 13
      },
      "51" : {
        "Text" : "# Dereferencing NULL pointer. '<value>' contains the same NULL value as '<expression>'.\n\n# Inconsistent annotation for function. This is because we only annotate the declaration and not the definition.\n\n# Function appears with no prototype in scope.\n",
        "Line" : 476,
        "CharPositionInLine" : 14
      },
      "52" : {
        "Text" : "# Warnings disabled to keep it quiet for now,\n\n# most of these should be reviewed and re-enabled:\n",
        "Line" : 482,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# Macro redefinition\n\n# Signed/unsigned mismatch.\n\n# Possible loss of data when returning a value.\n\n# Implicit truncation of data.\n\n# Implicit truncation of data. This really shouldn't be disabled.\n\n# No matching destructor found.\n\n# Pointer casting size difference\n\n# Pointer casting size difference\n\n# Pointer casting size difference\n\n# Parameter to a formatting function isn't the same type as was passed in the format string.\n\n# Destructor was implicitly undefined.\n\n# Unsafe use of type 'bool' in operation. (comparing if bool is <=> scalar)\n\n# Unsafe mix of scalar type and type 'bool' in operation. (comparing if bool is == scalar)\n",
        "Line" : 485,
        "CharPositionInLine" : 11
      },
      "54" : {
        "Text" : "# Warnings to treat as errors:\n",
        "Line" : 500,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# Mixed use of struct and class on same type names. This was absolutely everywhere, and can cause errors at link-time if not fixed.\n\n# Unknown escape sequence. This is usually caused by incorrect escaping.\n\n# Character cannot be represented in current charset. This is remidied by prefixing string with \"u8\".\n",
        "Line" : 502,
        "CharPositionInLine" : 11
      },
      "56" : {
        "Text" : "# And the extra defines:\n",
        "Line" : 507,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# This is needed because, for some absurd reason, one of the windows headers tries to define \"min\" and \"max\" as macros, which messes up most uses of std::numeric_limits.\n",
        "Line" : 509,
        "CharPositionInLine" : 15
      },
      "58" : {
        "Text" : "# Don't deprecate posix names of functions.\n",
        "Line" : 510,
        "CharPositionInLine" : 31
      },
      "59" : {
        "Text" : "# Don't deprecate the non _s versions of various standard library functions, because safety is for chumps.\n\n# Don't deprecate the non _s versions of various standard library functions, because safety is for chumps.\n",
        "Line" : 511,
        "CharPositionInLine" : 30
      },
      "60" : {
        "Text" : "# Don't deprecate pieces of winsock\n",
        "Line" : 513,
        "CharPositionInLine" : 38
      },
      "61" : {
        "Text" : "# Because MSVC doesn't have unistd.h, which is requested by the YACC generated code.\n",
        "Line" : 514,
        "CharPositionInLine" : 21
      },
      "62" : {
        "Text" : "# The options passed to the linker for EXE targets:\n",
        "Line" : 517,
        "CharPositionInLine" : 2
      },
      "63" : {
        "Text" : "# Base the program at just over 64k in memory, to play nice with the JIT.\n",
        "Line" : 519,
        "CharPositionInLine" : 19
      },
      "64" : {
        "Text" : "# Don't randomize the base address.\n",
        "Line" : 520,
        "CharPositionInLine" : 21
      },
      "65" : {
        "Text" : "# The program can only be loaded at its preferred base address.\n",
        "Line" : 521,
        "CharPositionInLine" : 12
      },
      "66" : {
        "Text" : "# Set the stack reserve,commit to 8mb. Reserve should probably be higher.\n",
        "Line" : 522,
        "CharPositionInLine" : 28
      },
      "67" : {
        "Text" : "# Output some timing information about the link.\n",
        "Line" : 523,
        "CharPositionInLine" : 11
      },
      "68" : {
        "Text" : "# The options to pass to the compiler for debug builds:\n",
        "Line" : 526,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# Disable function level linking.\n\n# Disable string pooling.\n",
        "Line" : 528,
        "CharPositionInLine" : 10
      },
      "70" : {
        "Text" : "# Add /Ob2 if allowing inlining in debug mode:\n",
        "Line" : 532,
        "CharPositionInLine" : 2
      },
      "71" : {
        "Text" : "# The options to pass to the compiler for release builds:\n",
        "Line" : 537,
        "CharPositionInLine" : 2
      },
      "72" : {
        "Text" : "# Enable string pooling. (this is enabled by default by the optimization level, but we enable it here for clarity)\n\n# Optimize global data. (-fdata-sections)\n\n# Enable function level linking. (-ffunction-sections)\n",
        "Line" : 539,
        "CharPositionInLine" : 9
      },
      "73" : {
        "Text" : "# Enable parallel code generation. HHVM itself doesn't currently use this, but it's dependencies, TBB for instance, might, so enable it.\n",
        "Line" : 542,
        "CharPositionInLine" : 11
      },
      "74" : {
        "Text" : "# Enable intrinsic functions.\n\n# Favor fast code.\n",
        "Line" : 543,
        "CharPositionInLine" : 9
      },
      "75" : {
        "Text" : "# Add /GL to the compiler, and /LTCG to the linker\n\n# if link time code generation is enabled.\n",
        "Line" : 547,
        "CharPositionInLine" : 2
      },
      "76" : {
        "Text" : "# The options to pass to the linker for debug builds for EXE targets:\n",
        "Line" : 554,
        "CharPositionInLine" : 2
      },
      "77" : {
        "Text" : "# No unreferenced data elimination. (well, mostly)\n\n# No Identical COMDAT folding.\n",
        "Line" : 556,
        "CharPositionInLine" : 16
      },
      "78" : {
        "Text" : "# The options to pass to the linker for release builds for EXE targets:\n",
        "Line" : 560,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "# Remove unreferenced functions and data.\n\n# Identical COMDAT folding.\n",
        "Line" : 562,
        "CharPositionInLine" : 14
      },
      "80" : {
        "Text" : "############################################################\n\n# Now we need to adjust a couple of the default option sets.\n\n############################################################\n",
        "Line" : 566,
        "CharPositionInLine" : 2
      },
      "81" : {
        "Text" : "# We need the static runtime.\n",
        "Line" : 570,
        "CharPositionInLine" : 2
      },
      "82" : {
        "Text" : "# In order for /Zc:inline, which speeds up the build significantly, to work\n\n# we need to remove the /Ob0 parameter that CMake adds by default, because that\n\n# would normally disable all inlining.\n",
        "Line" : 581,
        "CharPositionInLine" : 2
      },
      "83" : {
        "Text" : "# Ignore a warning about an object file not defining any symbols,\n\n# these are known, and we don't care.\n",
        "Line" : 590,
        "CharPositionInLine" : 2
      },
      "84" : {
        "Text" : "############################################################\n\n# And finally, we can set all the flags we've built up.\n\n############################################################\n",
        "Line" : 594,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 85
    },
    "CMake/HPHPFindLibs.cmake" : {
      "ObjectId" : "d5cd86063765dca3d898a356ed2d59b9ed378c86",
      "LastModified" : "2019-03-28T19:29:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#   +----------------------------------------------------------------------+\n\n#   | HipHop for PHP                                                       |\n\n#   +----------------------------------------------------------------------+\n\n#   | Copyright (c) 2010 Facebook, Inc. (http://www.facebook.com)          |\n\n#   | Copyright (c) 1997-2010 The PHP Group                                |\n\n#   +----------------------------------------------------------------------+\n\n#   | This source file is subject to version 3.01 of the PHP license,      |\n\n#   | that is bundled with this package in the file LICENSE, and is        |\n\n#   | available through the world-wide-web at the following url:           |\n\n#   | http://www.php.net/license/3_01.txt                                  |\n\n#   | If you did not receive a copy of the PHP license and are unable to   |\n\n#   | obtain it through the world-wide-web, please send a note to          |\n\n#   | license@php.net so we can mail you a copy immediately.               |\n\n#   +----------------------------------------------------------------------+\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# libdl\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# google-glog\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# inotify checks\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# mysql checks - if we're using async mysql, we use fbmysqlclient from\n\n# third-party/ instead\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# pcre checks\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# libevent checks\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# libXed\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# CURL checks\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# LibXML2 checks\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# libsqlite3\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# libdouble-conversion\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# liblz4\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# fastlz\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# libzip\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ICU\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Everything is either in the `icu61` namespace or `icu` namespace, depending\n\n# on another definition. There's an implicit `using namespace WHATEVER;` in\n\n# ICU4c < 61.1, but now that's opt-in rather than opt-out.\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# jemalloc/tmalloc and profiler\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# HHProf\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# tbb libs\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# OpenSSL libs\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# LibreSSL explicitly refuses to support RAND_egd()\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# ZLIB\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# oniguruma\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# libpthreads\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Either Readline or Editline (for hphpd)\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# This is required by Homebrew's libc. See\n\n# https://github.com/facebook/hhvm/pull/5728#issuecomment-124290712\n\n# for more info.\n",
        "Line" : 376,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "#find_package(BISON REQUIRED)\n\n#find_package(FLEX REQUIRED)\n",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#if (${FLEX_VERSION} VERSION_LESS 2.5.33)\n\n#  message(FATAL_ERROR \"Flex is too old, found ${FLEX_VERSION} and we need 2.5.33\")\n\n#endif()\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# oniguruma must remain first for OS X to work -- see below for a somewhat\n\n# dogscience explanation. If you deeply understand this, feel free to fix\n\n# properly; in particular, two-level namespaces on OS X should allow us to\n\n# say *which* copy of the disputed functions we want, but I don' t know\n\n# how to get that to work.\n\n#\n\n# oniguruma has some of its own implementations of POSIX regex functions,\n\n# like regcomp() an regexec(). We use onig everywhere, for both its own\n\n# sepcial functions and for the POSIX replacements. This means that the\n\n# linker needs to pick the implementions of the POSIX regex functions from\n\n# onig, not libc.\n\n#\n\n# On Linux, that works out fine, since the linker sees onig on the link\n\n# line before (implicitly) libc. However, on OS X, despide the manpage for\n\n# ld claiming otherwise about indirect dylib dependencies, as soon as we\n\n# include one of the libs here that pull in libSystem.B, the linker will\n\n# pick the implementations of those functions from libc, not from onig.\n\n# And since we've included the onig headers, which have very slightly\n\n# different definintions for some of the key data structures, things go\n\n# quite awry -- this manifests as infinite loops or crashes when calling\n\n# the PHP split() function.\n\n#\n\n# So make sure to link onig first, so its implementations are picked.\n",
        "Line" : 395,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# The syntax used for these warnings is unparsable by Apple's Clang\n",
        "Line" : 516,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Check whether atomic operations require -latomic or not\n\n# See https://github.com/facebook/hhvm/issues/5217\n",
        "Line" : 571,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 32
    },
    "CMake/HPHPFunctions.cmake" : {
      "ObjectId" : "8c1332c03a0eb726529996f5ede94a99d10dfaa3",
      "LastModified" : "2019-03-28T19:29:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the systemlib file to the \"LINK_DEPENDS\" for the systemlib, this will cause it\n\n# to be relinked and the systemlib re-embedded\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# OUTPUT \"${CMAKE_CURRENT_SOURCE_DIR}/generated-compiler-id.txt\"\n\n#        \"${CMAKE_CURRENT_SOURCE_DIR}/generated-repo-schema-id.txt\"\n\n#        \"${CMAKE_CURRENT_SOURCE_DIR}/generated-build-id.txt\"\n\n#        \"${CMAKE_CURRENT_SOURCE_DIR}/generated-hhjs-babel-transform.txt\"\n",
        "Line" : 135,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Some platforms limit section names to 16 characters :(\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# The dot would be causing the RC lexer to begin a number in the\n\n# middle of our resource name, so use an underscore instead.\n",
        "Line" : 194,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Custom install function that doesn't relink, instead it uses chrpath to change it, if\n\n# it's available, otherwise, it leaves the chrpath alone\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Determine the relative directory name so that we can mirror the\n\n# directory structure in the output\n",
        "Line" : 240,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Implicit check\n",
        "Line" : 261,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Explicit check\n",
        "Line" : 264,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Remove all files matching a set of patterns, and,\n\n# optionally, not matching a second set of patterns,\n\n# from a set of lists.\n\n#\n\n# Example:\n\n# This will remove all files in the CPP_SOURCES list\n\n# matching \"/test/\" or \"Test.cpp$\", but not matching\n\n# \"BobTest.cpp$\".\n\n# HHVM_REMOVE_MATCHES_FROM_LISTS(CPP_SOURCES MATCHES \"/test/\" \"Test.cpp$\" IGNORE_MATCHES \"BobTest.cpp$\")\n\n#\n\n# Parameters:\n\n#\n\n# [...]:\n\n# The names of the lists to remove matches from.\n\n#\n\n# [MATCHES ...]:\n\n# The matches to remove from the lists.\n\n#\n\n# [IGNORE_MATCHES ...]:\n\n# The matches not to remove, even if they match\n\n# the main set of matches to remove.\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Automatically create source_group directives for the sources passed in.\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# MSVC doesn't support a --whole-archive flag, but newer versions\n\n# of CMake do support object libraries, which give the same result.\n\n# As we can't easily upgrade the normal builds to CMake 3.0, we\n\n# will just require CMake 3.0+ for MSVC builds only.\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Get what might be the objects of the object libraries, if needed.\n",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Add the additional link targets for a set of object libraries,\n\n# if needed.\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Set the .text.keep section to be executable.\n",
        "Line" : 454,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# It's important to use -Xlinker and not -Wl here: ${lib} needs to be its\n\n# own option on the command line, since target_link_libraries will expand it\n\n# from its logical name here into the full .a path. (Eww.)\n",
        "Line" : 457,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# This should be called for object libraries, rather than calling\n\n# hphp_link directly.\n",
        "Line" : 469,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Gold doesn't need this, and MSVC can't have it. (see below)\n",
        "Line" : 472,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# If a library needs to be linked in to make GNU ld happy,\n\n# it should be done by calling this.\n",
        "Line" : 478,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# CMake doesn't allow calls to target_link_libraries if the target\n\n# is an OBJECT library, so MSVC can't have this.\n",
        "Line" : 482,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 19
    },
    "CMake/HPHPIZEFunctions.cmake" : {
      "ObjectId" : "2ee69dff9e7d2a260f147334f2a102b17c140691",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Functions for use when building extensions dynamically\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These functions also exist in CMake/EXTFunctions.cmake\n\n# Their signatures should be kept consistent, though their behavior\n\n# will differ slightly.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add an extension\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Don't install via target, because it triggers a re-link that doesn't\n\n# run the POST_BUILD custom command that embeds the systemlib on Linux.\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "CMake/HPHPSetup.cmake" : {
      "ObjectId" : "eabcefdaf31506500ac9db68d4863c9c7df224ec",
      "LastModified" : "2019-04-09T19:05:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Look for the chrpath tool so we can warn if it's not there\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ubuntu 15.10 and 14.04 have been failing to include a dependency on jemalloc\n\n# as a these linked flags force the dependency to be recorded\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We have to be a little more permissive in some cases.\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Skip deprecation warnings in OpenSSL.\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Enable weak linking\n",
        "Line" : 129,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# enable the OSS options if we have any\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# later versions of binutils don't play well without automake\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "CMake/MSVCDefaults.cmake" : {
      "ObjectId" : "e2d468beff173724de5a046fc59c1bfbcaee609a",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file exists because, in order to handle the multi-config environment that\n\n# Visual Studio allows, we'd have to modify quite a few of CMake's built-in\n\n# scripts for finding specific libraries. Instead of doing that, we just set the\n\n# required variables here if the /deps/ directory is present.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We assume in this that, if the directory exists, all libs that are part of\n\n# the package are present.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# First up a few variables to make things configure the first time.\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Disable a few extensions that we can't currently build because we can't\n\n# compile the library they depend on.\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# We need to link against the static library version of boost targeting the static\n\n# runtime, so set the vars required by default.\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# GPerf is needed for proxygen, so a precompiled version of it is included\n\n# in the deps package.\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# And now the actual libs. Please keep them alphabetical, and keep the lib\n\n# values with any system libs first, then the debug version, and finally the\n\n# release version. Also, when setting the variables, set the include directory\n\n# first, then any library variables, and finally any misc. variables.\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Fribidi isn't part of the main package, as the extension isn't supported\n\n# under MSVC yet, but we'll set the vars here if it's present.\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# LibMagicWand includes a LOT of dependent libraries, 17 here, and another 3\n\n# that other extensions are dependent on, so are set through those variables.\n\n# Specifically, Freetype, libJpeg, and libPng.\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Due to being slightly lazy, exslt is built as part of xslt, so both set both\n\n# variables to the same value, and let CMake get rid of the duplicates.\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Oniguruma is just weird and grumpy, so we set that it's been found explicitly.\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# TBB's found detection is weird, so we have to set all of these.\n",
        "Line" : 135,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "CMake/Options.cmake" : {
      "ObjectId" : "b90266ad72eece30f77ce02f79e957dea9b49cdf",
      "LastModified" : "2019-03-28T19:29:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(CMAKE_BUILD_TYPE Debug)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/VisualStudioToolset.cmake" : {
      "ObjectId" : "1eab533c7e7f43803b5828c3de243ff8ff93e1a2",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Due to HHVM's size, we need to use the native 64-bit toolchain to get a decent link time,\n\n# and, in fact, it's also needed to be able to link at all in debug mode, due to the size of\n\n# the hphp_runtime_static static library. However, Visual Studio defaults to using the 32-bit\n\n# hosted cross compiler targetting 64-bit. Unfortunately, CMake doesn't provide us a way to\n\n# do this, so we have to resort to a hack-around in order to make this possible. Because the\n\n# toolset value is put into the project file unescaped, we can use it to add the PreferredToolArchitecture\n\n# value that we need, as long as we make sure to properly close and re-open the current tags.\n\n#\n\n# To add support for newer MSVC versions, simply adjust the actual toolset value at the start\n\n# and end of the string.\n\n#\n\n# Unfortunately, we can't rely on the MSVC and MSVC14 variables to check if we need to enable\n\n# this, due to the fact they are set when the C/CXX languages are enabled, however, this value\n\n# needs to be set before the languages are enabled in order to have any effect, so we set it\n\n# based directly off of the name of the generator, which is set before configuration even begins.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/cotire.cmake" : {
      "ObjectId" : "b155fc7a867558704b4ea7553feebcabbb1079f6",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - cotire (compile time reducer)\n\n#\n\n# See the cotire manual for usage hints.\n\n#\n\n#=============================================================================\n\n# Copyright 2012-2014 Sascha Kratky\n\n#\n\n# Permission is hereby granted, free of charge, to any person\n\n# obtaining a copy of this software and associated documentation\n\n# files (the \"Software\"), to deal in the Software without\n\n# restriction, including without limitation the rights to use,\n\n# copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following\n\n# conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be\n\n# included in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\n# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\n# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\n# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\n# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\n# OTHER DEALINGS IN THE SOFTWARE.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# call cmake_minimum_required, but prevent modification of the CMake policy stack in include mode\n\n# cmake_minimum_required also sets the policy version as a side effect, which we have to avoid\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# we need the CMake variables CMAKE_SCRIPT_MODE_FILE and CMAKE_ARGV available since 2.8.5\n\n# we need APPEND_STRING option for set_property available since 2.8.6\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# use CMake's predefined compiler version variable (available since CMake 2.8.8)\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# cl.exe messes with the output streams unless the environment variable VS_UNICODE_OUTPUT is cleared\n",
        "Line" : 59,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# assume GCC like command line interface\n",
        "Line" : 67,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# get_filename_component returns extension from first occurrence of . in file name\n\n# this function computes the extension from last occurrence of . in file name\n",
        "Line" : 89,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# add to excluded sources, if file is not ignored and has correct language without having the correct extension\n",
        "Line" : 157,
        "CharPositionInLine" : 7
      },
      "8" : {
        "Text" : "# remove from head\n",
        "Line" : 264,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# process transitive libraries\n",
        "Line" : 270,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# option with separate argument\n",
        "Line" : 294,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# remember option\n",
        "Line" : 298,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# option with joined argument\n",
        "Line" : 301,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# flush remembered option\n",
        "Line" : 305,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# add to unfiltered options\n",
        "Line" : 310,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# collect options from CMake language variables\n",
        "Line" : 333,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# add option from CMake target type variable\n",
        "Line" : 342,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# handle POSITION_INDEPENDENT_CODE property introduced with CMake 2.8.9 if policy CMP0018 is turned on\n",
        "Line" : 345,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "# default to old behavior\n",
        "Line" : 348,
        "CharPositionInLine" : 3
      },
      "19" : {
        "Text" : "# NEW behavior: honor the POSITION_INDEPENDENT_CODE target property\n",
        "Line" : 355,
        "CharPositionInLine" : 3
      },
      "20" : {
        "Text" : "# OLD behavior or policy not set: use the value of CMAKE_SHARED_LIBRARY_<Lang>_FLAGS\n",
        "Line" : 365,
        "CharPositionInLine" : 3
      },
      "21" : {
        "Text" : "# flags variable for module library uses different name SHARED_MODULE\n\n# (e.g., CMAKE_SHARED_MODULE_C_FLAGS)\n",
        "Line" : 367,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# add_definitions may have been used to add flags to the compiler command\n",
        "Line" : 377,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# add target compile options\n",
        "Line" : 384,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# interface compile options from linked library targets\n",
        "Line" : 393,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# platform specific flags\n",
        "Line" : 411,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# default include dirs\n",
        "Line" : 446,
        "CharPositionInLine" : 1
      },
      "27" : {
        "Text" : "# parse additional include directories from target compile flags\n",
        "Line" : 451,
        "CharPositionInLine" : 1
      },
      "28" : {
        "Text" : "# target include directories\n",
        "Line" : 458,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "# interface include directories from linked library targets\n",
        "Line" : 470,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# mimic CMake SystemTools::MakeCindentifier behavior\n",
        "Line" : 524,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# CMAKE_INTDIR for multi-configuration build systems\n",
        "Line" : 552,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "# target export define symbol\n",
        "Line" : 556,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# directory compile definitions\n",
        "Line" : 561,
        "CharPositionInLine" : 1
      },
      "34" : {
        "Text" : "# target compile definitions\n",
        "Line" : 570,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "# interface compile definitions from linked library targets\n",
        "Line" : 579,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "# parse additional compile definitions from target compile flags\n\n# and don't look at directory compile definitions, which we already handled\n",
        "Line" : 589,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# parse target compile flags omitting compile definitions and include directives\n",
        "Line" : 605,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "# if path matches exactly, return short non-empty string\n",
        "Line" : 835,
        "CharPositionInLine" : 3
      },
      "39" : {
        "Text" : "# check header path against ignored and honored include directories\n",
        "Line" : 843,
        "CharPositionInLine" : 1
      },
      "40" : {
        "Text" : "# header is inside, but could be become outside if there is a shorter outside match\n",
        "Line" : 846,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# header is outside\n",
        "Line" : 860,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# heuristic: ignore C headers with embedded parent directory references or \"-fixed\" or \"_fixed\" in path\n\n# these often stem from using GCC #include_next tricks, which may break the precompiled header compilation\n\n# with the error message \"error: no include path in which to search for header.h\"\n",
        "Line" : 871,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# check header file extension\n",
        "Line" : 881,
        "CharPositionInLine" : 1
      },
      "44" : {
        "Text" : "# cl.exe /showIncludes output looks different depending on the language pack used, e.g.:\n\n# English: \"Note: including file:   C:\\directory\\file\"\n\n# German: \"Hinweis: Einlesen der Datei:   C:\\directory\\file\"\n\n# We use a very general regular expression, relying on the presence of the : characters\n",
        "Line" : 894,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# Visual Studio compiler output\n",
        "Line" : 899,
        "CharPositionInLine" : 3
      },
      "46" : {
        "Text" : "# GCC like output\n",
        "Line" : 908,
        "CharPositionInLine" : 3
      },
      "47" : {
        "Text" : "# prevent CMake macro invocation errors due to backslash characters in Windows paths\n",
        "Line" : 924,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# canonize slashes\n",
        "Line" : 927,
        "CharPositionInLine" : 1
      },
      "49" : {
        "Text" : "# prevent semicolon from being interpreted as a line separator\n",
        "Line" : 929,
        "CharPositionInLine" : 1
      },
      "50" : {
        "Text" : "# then separate lines\n",
        "Line" : 931,
        "CharPositionInLine" : 1
      },
      "51" : {
        "Text" : "# remove duplicate lines to speed up parsing\n",
        "Line" : 934,
        "CharPositionInLine" : 1
      },
      "52" : {
        "Text" : "# stack keeps track of inside/outside project status of processed header files\n",
        "Line" : 952,
        "CharPositionInLine" : 1
      },
      "53" : {
        "Text" : "# update stack\n",
        "Line" : 962,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# header is a candidate if it is outside project\n",
        "Line" : 978,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# get parent header file's inside/outside status\n",
        "Line" : 980,
        "CharPositionInLine" : 5
      },
      "56" : {
        "Text" : "# select header file if parent header file is inside project\n\n# (e.g., a project header file that includes a standard header file)\n",
        "Line" : 987,
        "CharPositionInLine" : 5
      },
      "57" : {
        "Text" : "# fix header's inside status on stack, it is ignored by extension now\n",
        "Line" : 996,
        "CharPositionInLine" : 8
      },
      "58" : {
        "Text" : "# for cl.exe do not keep unparsed lines which solely consist of a source file name\n",
        "Line" : 1008,
        "CharPositionInLine" : 5
      },
      "59" : {
        "Text" : "# only consider existing source files for scanning\n",
        "Line" : 1043,
        "CharPositionInLine" : 1
      },
      "60" : {
        "Text" : "# cl.exe messes with the output streams unless the environment variable VS_UNICODE_OUTPUT is cleared\n",
        "Line" : 1062,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# Intel compiler requires hdrstop pragma to stop generating PCH file\n",
        "Line" : 1240,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# cl.exe options used\n\n# /nologo suppresses display of sign-on banner\n\n# /TC treat all files named on the command line as C source files\n\n# /TP treat all files named on the command line as C++ source files\n\n# /EP preprocess to stdout without #line directives\n\n# /showIncludes list include files\n",
        "Line" : 1275,
        "CharPositionInLine" : 2
      },
      "63" : {
        "Text" : "# append to list\n",
        "Line" : 1284,
        "CharPositionInLine" : 3
      },
      "64" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1287,
        "CharPositionInLine" : 3
      },
      "65" : {
        "Text" : "# GCC options used\n\n# -H print the name of each header file used\n\n# -E invoke preprocessor\n\n# -fdirectives-only do not expand macros, requires GCC >= 4.3\n",
        "Line" : 1291,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# append to list\n",
        "Line" : 1296,
        "CharPositionInLine" : 3
      },
      "67" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1302,
        "CharPositionInLine" : 3
      },
      "68" : {
        "Text" : "# Clang options used\n\n# -H print the name of each header file used\n\n# -E invoke preprocessor\n",
        "Line" : 1309,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# append to list\n",
        "Line" : 1313,
        "CharPositionInLine" : 3
      },
      "70" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1316,
        "CharPositionInLine" : 3
      },
      "71" : {
        "Text" : "# Windows Intel options used\n\n# /nologo do not display compiler version information\n\n# /QH display the include file order\n\n# /EP preprocess to stdout, omitting #line directives\n\n# /TC process all source or unrecognized file types as C source files\n\n# /TP process all source or unrecognized file types as C++ source files\n",
        "Line" : 1321,
        "CharPositionInLine" : 3
      },
      "72" : {
        "Text" : "# append to list\n",
        "Line" : 1330,
        "CharPositionInLine" : 4
      },
      "73" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1333,
        "CharPositionInLine" : 4
      },
      "74" : {
        "Text" : "# Linux / Mac OS X Intel options used\n\n# -H print the name of each header file used\n\n# -EP preprocess to stdout, omitting #line directives\n\n# -Kc++ process all source or unrecognized file types as C++ source files\n",
        "Line" : 1337,
        "CharPositionInLine" : 3
      },
      "75" : {
        "Text" : "# append to list\n",
        "Line" : 1342,
        "CharPositionInLine" : 4
      },
      "76" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1348,
        "CharPositionInLine" : 4
      },
      "77" : {
        "Text" : "# cl.exe options used\n\n# /Yc creates a precompiled header file\n\n# /Fp specifies precompiled header binary file name\n\n# /FI forces inclusion of file\n\n# /TC treat all files named on the command line as C source files\n\n# /TP treat all files named on the command line as C++ source files\n\n# /Zs syntax check only\n",
        "Line" : 1367,
        "CharPositionInLine" : 2
      },
      "78" : {
        "Text" : "# append to list\n",
        "Line" : 1377,
        "CharPositionInLine" : 3
      },
      "79" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1381,
        "CharPositionInLine" : 3
      },
      "80" : {
        "Text" : "# GCC / Clang options used\n\n# -x specify the source language\n\n# -c compile but do not link\n\n# -o place output in file\n\n# note that we cannot use -w to suppress all warnings upon pre-compiling, because turning off a warning may\n\n# alter compile flags as a side effect (e.g., -Wwrite-string implies -fconst-strings)\n",
        "Line" : 1385,
        "CharPositionInLine" : 2
      },
      "81" : {
        "Text" : "# append to list\n",
        "Line" : 1394,
        "CharPositionInLine" : 3
      },
      "82" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1397,
        "CharPositionInLine" : 3
      },
      "83" : {
        "Text" : "# Windows Intel options used\n\n# /nologo do not display compiler version information\n\n# /Yc create a precompiled header (PCH) file\n\n# /Fp specify a path or file name for precompiled header files\n\n# /FI tells the preprocessor to include a specified file name as the header file\n\n# /TC process all source or unrecognized file types as C source files\n\n# /TP process all source or unrecognized file types as C++ source files\n\n# /Zs syntax check only\n\n# /Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1405,
        "CharPositionInLine" : 3
      },
      "84" : {
        "Text" : "# append to list\n",
        "Line" : 1417,
        "CharPositionInLine" : 4
      },
      "85" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1424,
        "CharPositionInLine" : 4
      },
      "86" : {
        "Text" : "# Linux / Mac OS X Intel options used\n\n# -pch-dir location for precompiled header files\n\n# -pch-create name of the precompiled header (PCH) to create\n\n# -Kc++ process all source or unrecognized file types as C++ source files\n\n# -fsyntax-only check only for correct syntax\n\n# -Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1431,
        "CharPositionInLine" : 3
      },
      "87" : {
        "Text" : "# append to list\n",
        "Line" : 1442,
        "CharPositionInLine" : 4
      },
      "88" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1451,
        "CharPositionInLine" : 4
      },
      "89" : {
        "Text" : "# cl.exe options used\n\n# /Yu uses a precompiled header file during build\n\n# /Fp specifies precompiled header binary file name\n\n# /FI forces inclusion of file\n",
        "Line" : 1468,
        "CharPositionInLine" : 2
      },
      "90" : {
        "Text" : "# append to list\n",
        "Line" : 1475,
        "CharPositionInLine" : 4
      },
      "91" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1478,
        "CharPositionInLine" : 4
      },
      "92" : {
        "Text" : "# no precompiled header, force inclusion of prefix header\n",
        "Line" : 1482,
        "CharPositionInLine" : 3
      },
      "93" : {
        "Text" : "# append to list\n",
        "Line" : 1484,
        "CharPositionInLine" : 4
      },
      "94" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1487,
        "CharPositionInLine" : 4
      },
      "95" : {
        "Text" : "# GCC options used\n\n# -include process include file as the first line of the primary source file\n\n# -Winvalid-pch warns if precompiled header is found but cannot be used\n\n# note: ccache requires the -include flag to be used in order to process precompiled header correctly\n",
        "Line" : 1492,
        "CharPositionInLine" : 2
      },
      "96" : {
        "Text" : "# append to list\n",
        "Line" : 1497,
        "CharPositionInLine" : 3
      },
      "97" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1500,
        "CharPositionInLine" : 3
      },
      "98" : {
        "Text" : "# Clang options used\n\n# -include process include file as the first line of the primary source file\n\n# -include-pch include precompiled header file\n\n# -Qunused-arguments don't emit warning for unused driver arguments\n\n# note: ccache requires the -include flag to be used in order to process precompiled header correctly\n",
        "Line" : 1504,
        "CharPositionInLine" : 2
      },
      "99" : {
        "Text" : "# append to list\n",
        "Line" : 1510,
        "CharPositionInLine" : 3
      },
      "100" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1513,
        "CharPositionInLine" : 3
      },
      "101" : {
        "Text" : "# Windows Intel options used\n\n# /Yu use a precompiled header (PCH) file\n\n# /Fp specify a path or file name for precompiled header files\n\n# /FI tells the preprocessor to include a specified file name as the header file\n\n# /Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1519,
        "CharPositionInLine" : 3
      },
      "102" : {
        "Text" : "# append to list\n",
        "Line" : 1527,
        "CharPositionInLine" : 5
      },
      "103" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1533,
        "CharPositionInLine" : 5
      },
      "104" : {
        "Text" : "# no precompiled header, force inclusion of prefix header\n",
        "Line" : 1540,
        "CharPositionInLine" : 4
      },
      "105" : {
        "Text" : "# append to list\n",
        "Line" : 1542,
        "CharPositionInLine" : 5
      },
      "106" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1545,
        "CharPositionInLine" : 5
      },
      "107" : {
        "Text" : "# Linux / Mac OS X Intel options used\n\n# -pch-dir location for precompiled header files\n\n# -pch-use name of the precompiled header (PCH) to use\n\n# -include process include file as the first line of the primary source file\n\n# -Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1550,
        "CharPositionInLine" : 3
      },
      "108" : {
        "Text" : "# append to list\n",
        "Line" : 1559,
        "CharPositionInLine" : 5
      },
      "109" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1565,
        "CharPositionInLine" : 5
      },
      "110" : {
        "Text" : "# no precompiled header, force inclusion of prefix header\n",
        "Line" : 1572,
        "CharPositionInLine" : 4
      },
      "111" : {
        "Text" : "# append to list\n",
        "Line" : 1574,
        "CharPositionInLine" : 5
      },
      "112" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1577,
        "CharPositionInLine" : 5
      },
      "113" : {
        "Text" : "# cl.exe messes with the output streams unless the environment variable VS_UNICODE_OUTPUT is cleared\n",
        "Line" : 1614,
        "CharPositionInLine" : 2
      },
      "114" : {
        "Text" : "# supported since Visual Studio C++ 6.0\n\n# and CMake does not support an earlier version\n",
        "Line" : 1630,
        "CharPositionInLine" : 2
      },
      "115" : {
        "Text" : "# GCC PCH support requires version >= 3.4\n",
        "Line" : 1634,
        "CharPositionInLine" : 2
      },
      "116" : {
        "Text" : "# all Clang versions have PCH support\n",
        "Line" : 1643,
        "CharPositionInLine" : 2
      },
      "117" : {
        "Text" : "# Intel PCH support requires version >= 8.0.0\n",
        "Line" : 1646,
        "CharPositionInLine" : 2
      },
      "118" : {
        "Text" : "# PCH compilation not supported by GCC / Clang for multi-architecture builds (e.g., i386, x86_64)\n",
        "Line" : 1665,
        "CharPositionInLine" : 2
      },
      "119" : {
        "Text" : "# start new unity file segment\n",
        "Line" : 1735,
        "CharPositionInLine" : 4
      },
      "120" : {
        "Text" : "# there is only a single unity file\n",
        "Line" : 1746,
        "CharPositionInLine" : 2
      },
      "121" : {
        "Text" : "# end with final unity file segment\n",
        "Line" : 1749,
        "CharPositionInLine" : 2
      },
      "122" : {
        "Text" : "# For Xcode, we completely hand off the compilation of the prefix header to the IDE\n",
        "Line" : 1820,
        "CharPositionInLine" : 4
      },
      "123" : {
        "Text" : "# MSVC uses the extension .pch added to the prefix header base name\n",
        "Line" : 1825,
        "CharPositionInLine" : 4
      },
      "124" : {
        "Text" : "# Clang looks for a precompiled header corresponding to the prefix header with the extension .pch appended\n",
        "Line" : 1828,
        "CharPositionInLine" : 4
      },
      "125" : {
        "Text" : "# GCC looks for a precompiled header corresponding to the prefix header with the extension .gch appended\n",
        "Line" : 1831,
        "CharPositionInLine" : 4
      },
      "126" : {
        "Text" : "# Intel uses the extension .pchi added to the prefix header base name\n",
        "Line" : 1834,
        "CharPositionInLine" : 4
      },
      "127" : {
        "Text" : "# depend on target's generated source files\n",
        "Line" : 1866,
        "CharPositionInLine" : 1
      },
      "128" : {
        "Text" : "# but omit all generated source files that have the COTIRE_EXCLUDED property set to true\n",
        "Line" : 1869,
        "CharPositionInLine" : 2
      },
      "129" : {
        "Text" : "# and omit all generated source files that have the COTIRE_DEPENDENCY property set to false explicitly\n",
        "Line" : 1874,
        "CharPositionInLine" : 2
      },
      "130" : {
        "Text" : "# depend on target source files marked with custom COTIRE_DEPENDENCY property\n",
        "Line" : 1890,
        "CharPositionInLine" : 1
      },
      "131" : {
        "Text" : "# GCC and clang raise a fatal error if a file is not found during preprocessing\n\n# thus we depend on target's generated source files for prefix header generation\n",
        "Line" : 1894,
        "CharPositionInLine" : 2
      },
      "132" : {
        "Text" : "# set up variables to be configured\n",
        "Line" : 1911,
        "CharPositionInLine" : 1
      },
      "133" : {
        "Text" : "# remove COTIRE_VERBOSE which is passed as a CMake define on command line\n",
        "Line" : 1938,
        "CharPositionInLine" : 1
      },
      "134" : {
        "Text" : "# use file(GENERATE ...) to expand generator expressions in the target script at CMake generate-time\n",
        "Line" : 1960,
        "CharPositionInLine" : 2
      },
      "135" : {
        "Text" : "# the file(GENERATE ...) command requires cmake 2.8.12 or later\n",
        "Line" : 1962,
        "CharPositionInLine" : 3
      },
      "136" : {
        "Text" : "# for Visual Studio and Intel, we attach the precompiled header compilation to the first source file\n\n# the remaining files include the precompiled header, see cotire_setup_pch_file_inclusion\n",
        "Line" : 1980,
        "CharPositionInLine" : 2
      },
      "137" : {
        "Text" : "# make first source file depend on prefix header\n",
        "Line" : 1993,
        "CharPositionInLine" : 3
      },
      "138" : {
        "Text" : "# mark first source file as cotired to prevent it from being used in another cotired target\n",
        "Line" : 1995,
        "CharPositionInLine" : 3
      },
      "139" : {
        "Text" : "# for makefile based generator, we add a custom command to precompile the prefix header\n",
        "Line" : 1999,
        "CharPositionInLine" : 2
      },
      "140" : {
        "Text" : "# for Visual Studio and Intel, we include the precompiled header in all but the first source file\n\n# the first source file does the precompiled header compilation, see cotire_setup_pch_file_compilation\n",
        "Line" : 2023,
        "CharPositionInLine" : 2
      },
      "141" : {
        "Text" : "# mark sources as cotired to prevent them from being used in another cotired target\n",
        "Line" : 2027,
        "CharPositionInLine" : 3
      },
      "142" : {
        "Text" : "# make source files depend on precompiled header\n",
        "Line" : 2036,
        "CharPositionInLine" : 3
      },
      "143" : {
        "Text" : "# for makefile based generator, we force the inclusion of the prefix header for a subset\n\n# of the source files, if this is a multi-language target or has excluded files\n",
        "Line" : 2041,
        "CharPositionInLine" : 3
      },
      "144" : {
        "Text" : "# mark sources as cotired to prevent them from being used in another cotired target\n",
        "Line" : 2049,
        "CharPositionInLine" : 3
      },
      "145" : {
        "Text" : "# make source files depend on precompiled header\n",
        "Line" : 2052,
        "CharPositionInLine" : 2
      },
      "146" : {
        "Text" : "# force the inclusion of the prefix header for the given source files\n",
        "Line" : 2059,
        "CharPositionInLine" : 1
      },
      "147" : {
        "Text" : "# mark sources as cotired to prevent them from being used in another cotired target\n",
        "Line" : 2066,
        "CharPositionInLine" : 1
      },
      "148" : {
        "Text" : "# make source files depend on prefix header\n",
        "Line" : 2068,
        "CharPositionInLine" : 1
      },
      "149" : {
        "Text" : "# for Xcode, we attach a pre-build action to generate the unity sources and prefix headers\n\n# if necessary, we also generate a single prefix header which includes all language specific prefix headers\n",
        "Line" : 2136,
        "CharPositionInLine" : 2
      },
      "150" : {
        "Text" : "# make Xcode precompile the generated prefix header with ProcessPCH and ProcessPCH++\n",
        "Line" : 2160,
        "CharPositionInLine" : 2
      },
      "151" : {
        "Text" : "# for makefile based generator, we force inclusion of the prefix header for all target source files\n\n# if this is a single-language target without any excluded files\n",
        "Line" : 2164,
        "CharPositionInLine" : 2
      },
      "152" : {
        "Text" : "# for Visual Studio and Intel, precompiled header inclusion is always done on the source file level\n\n# see cotire_setup_pch_file_inclusion\n",
        "Line" : 2168,
        "CharPositionInLine" : 3
      },
      "153" : {
        "Text" : "# set up compiled unity source dependencies\n\n# this ensures that missing source files are generated before the unity file is compiled\n",
        "Line" : 2190,
        "CharPositionInLine" : 2
      },
      "154" : {
        "Text" : "# unity file compilation results in potentially huge object file, thus use /bigobj by default unter MSVC and Windows Intel\n",
        "Line" : 2199,
        "CharPositionInLine" : 3
      },
      "155" : {
        "Text" : "# create a joint unity file from all unity file segments\n",
        "Line" : 2217,
        "CharPositionInLine" : 2
      },
      "156" : {
        "Text" : "# GNU and Clang require indirect compilation of the prefix header to make them honor the system_header pragma\n",
        "Line" : 2254,
        "CharPositionInLine" : 2
      },
      "157" : {
        "Text" : "# GNU and Clang require indirect compilation of the prefix header to make them honor the system_header pragma\n",
        "Line" : 2279,
        "CharPositionInLine" : 2
      },
      "158" : {
        "Text" : "# for Xcode, we cannot apply the precompiled header to individual sources, only to the whole target\n",
        "Line" : 2450,
        "CharPositionInLine" : 3
      },
      "159" : {
        "Text" : "# for Xcode, we cannot apply the required PRE_BUILD action to generate the prefix header to an OBJECT_LIBRARY target\n",
        "Line" : 2454,
        "CharPositionInLine" : 3
      },
      "160" : {
        "Text" : "# cache message to avoid redundant messages on re-configure\n",
        "Line" : 2468,
        "CharPositionInLine" : 3
      },
      "161" : {
        "Text" : "# use all available cores\n",
        "Line" : 2482,
        "CharPositionInLine" : 3
      },
      "162" : {
        "Text" : "# a unity source segment must not contain less than COTIRE_MINIMUM_NUMBER_OF_TARGET_SOURCES files\n",
        "Line" : 2487,
        "CharPositionInLine" : 2
      },
      "163" : {
        "Text" : "# check for user provided unity source file list\n",
        "Line" : 2512,
        "CharPositionInLine" : 1
      },
      "164" : {
        "Text" : "# check for user provided prefix header files\n",
        "Line" : 2528,
        "CharPositionInLine" : 2
      },
      "165" : {
        "Text" : "# user provided prefix header must be included\n",
        "Line" : 2550,
        "CharPositionInLine" : 3
      },
      "166" : {
        "Text" : "# mark target as cotired for language\n",
        "Line" : 2555,
        "CharPositionInLine" : 1
      },
      "167" : {
        "Text" : "# for makefile based generators, we add a custom target to trigger the generation of the cotire related files\n",
        "Line" : 2581,
        "CharPositionInLine" : 2
      },
      "168" : {
        "Text" : "# Visual Studio and Intel only create precompiled header as a side effect\n",
        "Line" : 2586,
        "CharPositionInLine" : 4
      },
      "169" : {
        "Text" : "# for other generators, we add the \"clean all\" target to clean up the precompiled header\n",
        "Line" : 2601,
        "CharPositionInLine" : 2
      },
      "170" : {
        "Text" : "# determine unity target sub type\n",
        "Line" : 2611,
        "CharPositionInLine" : 1
      },
      "171" : {
        "Text" : "# determine unity target sources\n",
        "Line" : 2621,
        "CharPositionInLine" : 1
      },
      "172" : {
        "Text" : "# remove source files that are included in the unity source\n",
        "Line" : 2627,
        "CharPositionInLine" : 3
      },
      "173" : {
        "Text" : "# if cotire is applied to a target which has not been added in the current source dir,\n\n# non-existing files cannot be referenced from the unity build target (this is a CMake restriction)\n",
        "Line" : 2635,
        "CharPositionInLine" : 3
      },
      "174" : {
        "Text" : "# add unity source files instead\n",
        "Line" : 2651,
        "CharPositionInLine" : 3
      },
      "175" : {
        "Text" : "# generate unity target\n",
        "Line" : 2658,
        "CharPositionInLine" : 1
      },
      "176" : {
        "Text" : "# copy output location properties\n",
        "Line" : 2668,
        "CharPositionInLine" : 1
      },
      "177" : {
        "Text" : "# copy output name\n",
        "Line" : 2697,
        "CharPositionInLine" : 1
      },
      "178" : {
        "Text" : "# copy compile stuff\n",
        "Line" : 2704,
        "CharPositionInLine" : 1
      },
      "179" : {
        "Text" : "# copy interface stuff\n",
        "Line" : 2713,
        "CharPositionInLine" : 1
      },
      "180" : {
        "Text" : "# copy link stuff\n",
        "Line" : 2719,
        "CharPositionInLine" : 1
      },
      "181" : {
        "Text" : "# copy Qt stuff\n",
        "Line" : 2729,
        "CharPositionInLine" : 1
      },
      "182" : {
        "Text" : "# copy cmake stuff\n",
        "Line" : 2733,
        "CharPositionInLine" : 1
      },
      "183" : {
        "Text" : "# copy Apple platform specific stuff\n",
        "Line" : 2736,
        "CharPositionInLine" : 1
      },
      "184" : {
        "Text" : "# copy Windows platform specific stuff\n",
        "Line" : 2740,
        "CharPositionInLine" : 1
      },
      "185" : {
        "Text" : "# use output name from original target\n",
        "Line" : 2747,
        "CharPositionInLine" : 1
      },
      "186" : {
        "Text" : "# use export symbol from original target\n",
        "Line" : 2752,
        "CharPositionInLine" : 1
      },
      "187" : {
        "Text" : "# trivial checks\n",
        "Line" : 2788,
        "CharPositionInLine" : 1
      },
      "188" : {
        "Text" : "# resolve alias\n",
        "Line" : 2794,
        "CharPositionInLine" : 1
      },
      "189" : {
        "Text" : "# check if target needs to be cotired for build type\n\n# when using configuration types, the test is performed at build time\n",
        "Line" : 2802,
        "CharPositionInLine" : 1
      },
      "190" : {
        "Text" : "# choose languages that apply to the target\n",
        "Line" : 2818,
        "CharPositionInLine" : 1
      },
      "191" : {
        "Text" : "# filter files in intermediate directory\n",
        "Line" : 2901,
        "CharPositionInLine" : 1
      },
      "192" : {
        "Text" : "# cotire is being run in script mode\n\n# locate -P on command args\n",
        "Line" : 2987,
        "CharPositionInLine" : 1
      },
      "193" : {
        "Text" : "# include target script if available\n",
        "Line" : 2999,
        "CharPositionInLine" : 1
      },
      "194" : {
        "Text" : "# the included target scripts sets up additional variables relating to the target (e.g., COTIRE_TARGET_SOURCES)\n",
        "Line" : 3001,
        "CharPositionInLine" : 2
      },
      "195" : {
        "Text" : "# for MSVC, compiler IDs may not always be set correctly\n",
        "Line" : 3010,
        "CharPositionInLine" : 2
      },
      "196" : {
        "Text" : "# check if target has been cotired for actual build type COTIRE_BUILD_TYPE\n",
        "Line" : 3025,
        "CharPositionInLine" : 1
      },
      "197" : {
        "Text" : "# cotire is being run in include mode\n\n# set up all variable and property definitions\n",
        "Line" : 3132,
        "CharPositionInLine" : 1
      },
      "198" : {
        "Text" : "# enable parallelization for generators that run multiple jobs by default\n",
        "Line" : 3172,
        "CharPositionInLine" : 3
      },
      "199" : {
        "Text" : "# generated Ninja build files do not work if the unity target produces the same output file as the cotired target\n",
        "Line" : 3213,
        "CharPositionInLine" : 3
      },
      "200" : {
        "Text" : "# define cotire cache variables\n",
        "Line" : 3220,
        "CharPositionInLine" : 1
      },
      "201" : {
        "Text" : "# define cotire directory properties\n",
        "Line" : 3273,
        "CharPositionInLine" : 1
      },
      "202" : {
        "Text" : "# define cotire target properties\n",
        "Line" : 3338,
        "CharPositionInLine" : 1
      },
      "203" : {
        "Text" : "# define cotire source properties\n",
        "Line" : 3492,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 204
    },
    "CMakeLists.txt" : {
      "ObjectId" : "e68e210c6e964bbc280381f5fd4f80b4cc3ff7ec",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This needs to be done before any languages are enabled or\n\n# projects are created.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# includes\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for and apply patches to the third-party (and sub) repo.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Unfortunately although patch will recognise that a patch is already\n\n# applied it will still return an error.\n",
        "Line" : 34,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# CMake really likes finding libraries inside OS X frameworks. This can\n\n# create super unexpected results, such as the LDAP framework, where the\n\n# ldap.h header there just consists of \"#include <ldap.h>\" -- obviously\n\n# assuming /usr/include appears on the include path before that framework\n\n# (which wasn't really supposed to be on the include path at all). This\n\n# leads to a hilarious recursive include and general fireworks. Instead,\n\n# tell CMake to search frameworks *last*, if it doesn't find something in\n\n# /usr (or MacPorts/Homebrew).\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Check architecture OS\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable ccache if present and not already enabled system wide.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# 3rd party library\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# use GNU install dirs (e.g. lib64 instead of lib)\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# modules / depends\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "hphp/CMakeLists.txt" : {
      "ObjectId" : "e1251b5078a68896c66480467e21978f9469ced3",
      "LastModified" : "2019-03-28T19:29:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#   +----------------------------------------------------------------------+\n\n#   | HipHop for PHP                                                       |\n\n#   +----------------------------------------------------------------------+\n\n#   | Copyright (c) 2010 Facebook, Inc. (http://www.facebook.com)          |\n\n#   | Copyright (c) 1997-2010 The PHP Group                                |\n\n#   +----------------------------------------------------------------------+\n\n#   | This source file is subject to version 3.01 of the PHP license,      |\n\n#   | that is bundled with this package in the file LICENSE, and is        |\n\n#   | available through the world-wide-web at the following url:           |\n\n#   | http://www.php.net/license/3_01.txt                                  |\n\n#   | If you did not receive a copy of the PHP license and are unable to   |\n\n#   | obtain it through the world-wide-web, please send a note to          |\n\n#   | license@php.net so we can mail you a copy immediately.               |\n\n#   +----------------------------------------------------------------------+\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# I'm sorry, but facebook's internal repo has the top level dir stored inside\n\n# of hphp/, so we need to pull that one in first if it exists\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Before we do anything else, we'll configure the extensions,\n\n# so that the defines take effect globally.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Detect the architecture-specific include directory\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# For CentOS/Red Hat where they store it directly in /usr/include\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# XED headers need to be wrapped in extern \"C\"\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Only thing to do directly in tools is install this one script. Tools also has\n\n# its own Makefile, so just do it here instead of dealing with moving that all\n\n# around.\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The runtime/test binary require GTest and GMock to be installed globally\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Keep this last\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "hphp/DEFS.bzl" : {
      "ObjectId" : "103f7507119807152431ec21a6d9ff3774b3187c",
      "LastModified" : "2019-03-28T19:29:27Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "hphp/compiler/CMakeLists.txt" : {
      "ObjectId" : "249fe8b5344af7df4e07be21e5007f649fa3aa16",
      "LastModified" : "2019-03-28T19:29:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/doc/Makefile" : {
      "ObjectId" : "e95386457fbd4cef52209a31c0adfad94cf270ca",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# update debugger docs\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "hphp/hack/CMakeLists.txt" : {
      "ObjectId" : "9559e427bc4d29b95d6cb965394343c572af71e4",
      "LastModified" : "2019-04-17T20:37:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# native_libraries: values for `-l` flags\n\n# lib_paths: values for `-L` flags (directories)\n\n# extra_link_opts: opaque options passed to the linker\n\n#\n\n# We need extra_link_opts for:\n\n# - static libraries\n\n# - anything built from third-party: cmake gives us the link flags\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Allows '#include \"hphp/path/to/library/\"' paths to start from hphp\n\n# project directory  which is consistent with fbmake's include paths.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Xcode/Ninja generators undefined MAKE\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If LZ4_FOUND is false either we didn't find lz4 or we found it but it's the\n\n# wrong version.  We can't just add the new path and a native_lib because we\n\n# can't control the order (and -l won't accept the raw path to the lib).  By\n\n# doing it this way we specify the path explicitly.\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# needed for verify.py for `hack_dune_test`\n",
        "Line" : 91,
        "CharPositionInLine" : 44
      },
      "5" : {
        "Text" : "# Intentionally not using `hack_dune_debug` as it generates output files of a\n\n# different format (bytecode instead of raw executables, which is useful if\n\n# you're working with Hack, but means that e.g. hhvm can't find\n\n# `hh_single_compile` in the source tree. Keep it around, but require it to be\n\n# explicitly used\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "hphp/hack/doc/type_system/Makefile" : {
      "ObjectId" : "928c213132d118aa065e2a75584c68329aec45b4",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "hphp/hhbbc/CMakeLists.txt" : {
      "ObjectId" : "9892da8fc4e8af7f8871fd1e8cdf930825cdc336",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# remove anything in a test folder\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "hphp/hhvm/CMakeLists.txt" : {
      "ObjectId" : "f70bd1f54245863d1ebd5b44dd09d639ae70fa7b",
      "LastModified" : "2019-03-28T19:29:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Windows targets use a generated rc file for embedding libraries\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "hphp/neo/CMakeLists.txt" : {
      "ObjectId" : "8161788157c9683896e3dcc32997a488f6146cc0",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/parser/CMakeLists.txt" : {
      "ObjectId" : "baa32bb0e29f96f768b6c2a5356cb22a4693f50a",
      "LastModified" : "2019-03-28T19:29:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/ppc64-asm/CMakeLists.txt" : {
      "ObjectId" : "013733becc8842ee3e7ae5ccf3ca81ed4434ed4e",
      "LastModified" : "2019-03-28T19:29:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/CMakeLists.txt" : {
      "ObjectId" : "a67f3b2da9d0469b1bbe1d9a0a47c95a4af29b0a",
      "LastModified" : "2019-03-28T19:29:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/CMakeLists.txt" : {
      "ObjectId" : "d28f028b5852fc15d5d9c242d1366456760a1628",
      "LastModified" : "2019-03-28T19:29:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Pick up all files in the base ext/ folder unconditionally\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Temporary while closure/generator are being worked on\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For each directory under ext/, either pull in standard\n\n# source lists, or let the particular extension make that\n\n# decision on its own\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Otherwise the sources are already known.\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "hphp/runtime/ext/apache/config.cmake" : {
      "ObjectId" : "7380838584e307745217ca3bbaf16e05d4c62cd1",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/apc/config.cmake" : {
      "ObjectId" : "85deac1549c3709888839be06b817af8a4b28bf6",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/array/config.cmake" : {
      "ObjectId" : "308c6c63a66fc9c5a1da5919f29a88fdcdbcfd8c",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/asio/config.cmake" : {
      "ObjectId" : "277375334625619ea76f28e9702cfee5f8fb576e",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/async_mysql/config.cmake" : {
      "ObjectId" : "fba0d581b2e31e81a843fc63ceaa84d347461451",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/bcmath/config.cmake" : {
      "ObjectId" : "ca96b76bb2e144a58b915da260fdb4ee8be81c97",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/bz2/config.cmake" : {
      "ObjectId" : "e7edf91c8360f3940c9644c7fc8f615f87d3e41c",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/collections/config.cmake" : {
      "ObjectId" : "dcf506b154f8833ac9711f9ca75251f1d6c4f22e",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/ctype/config.cmake" : {
      "ObjectId" : "9c8652d9d66fb22f31211c30d63308a9faa73ca3",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/curl/config.cmake" : {
      "ObjectId" : "c9f726035b382b3ae75e0151b2e3fd84a892b580",
      "LastModified" : "2019-03-28T19:29:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/datetime/config.cmake" : {
      "ObjectId" : "3d3410f84369f5d02fc43da2f08d0860a241330d",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/debugger/config.cmake" : {
      "ObjectId" : "8c5cac67e15720d246304364392772789db60f1e",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/domdocument/config.cmake" : {
      "ObjectId" : "1af842e63ca02d19983fb8d2b6d52acdb55cb08e",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/enum/config.cmake" : {
      "ObjectId" : "c3189983a425e9a42e3c5b2b0712ccfe319a6b21",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/factparse/config.cmake" : {
      "ObjectId" : "5d42a8f4c45858e8309c3e124d8d51d03baa2a0d",
      "LastModified" : "2019-03-28T19:29:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/fb/FBSerialize/BUILD_MODE.bzl" : {
      "ObjectId" : "d036e812db1189be9605c2d70c1ecfc557e411cc",
      "LastModified" : "2019-03-28T19:29:27Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "\"\"\" build mode definitions for hphp/runtime/ext/fb/FBSerialize \"\"\"",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Since the `FBSerialize` rule in this directory is used by several\n# components outside of fbcode, it would normally caused HHVM's\n# BUILD_MODE file to get pulled in which modifies the default build\n# modes for *all* projects in fbcode.  Putting this BUILD_MODE\n# file here prevents this behavior if *only* this rule is being used\n# (and HHVM builds will not be affected).",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# T33723700",
        "Line" : 12,
        "CharPositionInLine" : 45
      },
      "3" : {
        "Text" : "\"\"\" Return modes for this file \"\"\"",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "hphp/runtime/ext/fb/config.cmake" : {
      "ObjectId" : "2b6a9351322420dd2f550794a3144ddadce2d064",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/fileinfo/config.cmake" : {
      "ObjectId" : "1b7c6c83773269daa118d3e1c5001a8d73eb2665",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/filter/config.cmake" : {
      "ObjectId" : "4cb890b20bfd7811a3f4241a54b43ac3c2c486ce",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/fribidi/config.cmake" : {
      "ObjectId" : "947d17ca99e3162c462f8b259d1d4bcdcf3fc736",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/gd/config.cmake" : {
      "ObjectId" : "496a756776d2e075902723953da7113f813582b2",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/generator/config.cmake" : {
      "ObjectId" : "5d914c41ea0382d403796be507821d4477ff1ee4",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/gettext/config.cmake" : {
      "ObjectId" : "f46200b8e4328ec9088d857f704ee21c2f54c17e",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/gmp/config.cmake" : {
      "ObjectId" : "cf66f907eb310218b9e434fdb607abdf00cca2ad",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/hash/config.cmake" : {
      "ObjectId" : "6fd31bd2c16a162b556f9295c02f951329a2271b",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/hh/config.cmake" : {
      "ObjectId" : "4dd0bc209c2c536592c89f693577ec2d58c3e83b",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/hh_client/config.cmake" : {
      "ObjectId" : "0a7195afe490d38d4b25e37edf7d05513823ea0f",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/hotprofiler/config.cmake" : {
      "ObjectId" : "baa9ad9157d713c38647c3842bc7c78ef49041f2",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/hsl/config.cmake" : {
      "ObjectId" : "08dcdf27e06be00bbfb2feba972fdb94f6cb3e24",
      "LastModified" : "2019-03-28T19:29:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/iconv/config.cmake" : {
      "ObjectId" : "e6005739c030c13cce4b10fc8b9af517265eb254",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/icu/config.cmake" : {
      "ObjectId" : "dc40914214da76318c8aa5fa54d3260982856fbe",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/imagick/config.cmake" : {
      "ObjectId" : "ff9d906aa4b50ac8ea30b26c55410586d2d248c6",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/imap/config.cmake" : {
      "ObjectId" : "a853139566077c6f9b8d47114ddd97828ac90ce9",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/intervaltimer/config.cmake" : {
      "ObjectId" : "b7e7cbe36537cb1a1bcfc9fedcd50ab94fa01632",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/ipc/config.cmake" : {
      "ObjectId" : "e781929f131e1912d9574428bb44d50e988dfc0d",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/json/config.cmake" : {
      "ObjectId" : "dc719886232544946a2443bb16d0338f401bbc45",
      "LastModified" : "2019-03-28T19:29:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The strange set-up here is because Debian doesn't like the license on the\n\n# bundled parser. The built in one is still preferred though, so only use json-c\n\n# if the USE_JSONC option is set\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "hphp/runtime/ext/ldap/config.cmake" : {
      "ObjectId" : "6bdcad517f769505097a4def1c0c73b02ca36edd",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/libxml/config.cmake" : {
      "ObjectId" : "26bc4e13b0fb44a7c11ea8dd0281367a0b9c304c",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/lz4/config.cmake" : {
      "ObjectId" : "37ae1f5d69566ae3b3cd42f731e9808efd1354c7",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/mail/config.cmake" : {
      "ObjectId" : "757e6f68df23aa1b316d5ae3943ee57da1a8c7f5",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/mailparse/config.cmake" : {
      "ObjectId" : "20eca346bbb591c6fe9cab5f08eaf4c08c2c991e",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/mbstring/config.cmake" : {
      "ObjectId" : "43c0bada007197e97351cc8e03988f654fde03d1",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/mcrouter/config.cmake" : {
      "ObjectId" : "7a81fe37883d8a629e5b1db8d42ce64053932bbc",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/mcrypt/config.cmake" : {
      "ObjectId" : "a68a8ba6f82495e200f1da28635df5d46142a4e3",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/memcache/config.cmake" : {
      "ObjectId" : "b121cd1c365d7734e33963a31be3d80a10ec472c",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/memcached/config.cmake" : {
      "ObjectId" : "bf77424f9eaeccbabd03cf899c9b547fc56712fb",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/mysql/config.cmake" : {
      "ObjectId" : "a9d899b328f56915c73027d870448e2f84f1fb0f",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/objprof/config.cmake" : {
      "ObjectId" : "1fcd65d3b59cd102d917379e3cd65aa50bd1ed9f",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/openssl/config.cmake" : {
      "ObjectId" : "a474596d994b1675a14e512e7acee7f7b2a4ec88",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/password/config.cmake" : {
      "ObjectId" : "3fd4af5b578fabcaa8c35868eb5292f4b2b9078a",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/pcre/config.cmake" : {
      "ObjectId" : "9b0d88f2ec9ec02be6d40234e4f1cd5458d49dca",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/pdo/config.cmake" : {
      "ObjectId" : "3b8bd441b1655ab2dc46c9966ace1076a16ebba0",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/pdo_mysql/config.cmake" : {
      "ObjectId" : "c34de40353089019ac77349f4c97460155c3e202",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/pdo_sqlite/config.cmake" : {
      "ObjectId" : "1b177e181d9e3b760ff84a53d60b24f67305d323",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/pgsql/config.cmake" : {
      "ObjectId" : "2fa72064f94091fc53c8884c555beb59b7d5e820",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/posix/config.cmake" : {
      "ObjectId" : "9d66efad5b4096ef4380dc087e1ffa67ea292c7b",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/process/config.cmake" : {
      "ObjectId" : "3777e693e34ccd0e189012bdee2bb98e04de57d9",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/random/config.cmake" : {
      "ObjectId" : "3acf48b74398012e43493191a92d0d5c3b7c2d9e",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/readline/config.cmake" : {
      "ObjectId" : "c8f5b2f38b820b9a905ca54568777ebaa6ca493f",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/reflection/config.cmake" : {
      "ObjectId" : "f71217ffb7f18d72652c269d01bfc0fc44ec8e91",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/scrypt/config.cmake" : {
      "ObjectId" : "9823629462b1f14f9ebfd86e6fcfe45710e18987",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/server/config.cmake" : {
      "ObjectId" : "b69a9a7da78a5e2d3d55b36bbb119d3d9fa3ac7d",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/session/config.cmake" : {
      "ObjectId" : "7b8e8ec3fae17f7094d0b32eaac1debb31a4082b",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/shmop/config.cmake" : {
      "ObjectId" : "ecf2842380d9e028fb3a1e0fb6ff49a56aefc35f",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/simplexml/config.cmake" : {
      "ObjectId" : "9f1207faffef2c5a3d21fc8ef6bd950dd9d65be7",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/snappy/config.cmake" : {
      "ObjectId" : "40a65bc90882f650109e22aee270b3da21048552",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/soap/config.cmake" : {
      "ObjectId" : "dc2232d010d527c840e91c1e2b3446b9e6f30c1f",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/sockets/config.cmake" : {
      "ObjectId" : "66d02d48f16d68d5e439f54939d3b980b68f9fee",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/sodium/config.cmake" : {
      "ObjectId" : "acc38a43cdf07f99a8f9695587f39ba1f9dca940",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/spl/config.cmake" : {
      "ObjectId" : "ae1b8ee9df3d4405eafc468684fa4b6f1da81280",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/sqlite3/config.cmake" : {
      "ObjectId" : "460b453210f1fe0cdcb0cc58bcd569b9b951ab31",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/std/config.cmake" : {
      "ObjectId" : "242ae2ea3dcabe98befa70736e016db1e5d27981",
      "LastModified" : "2019-03-28T19:29:27Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/stream/config.cmake" : {
      "ObjectId" : "064856e2d7291d3ff2f0f85d55f156b0560ae741",
      "LastModified" : "2019-04-09T19:05:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/string/config.cmake" : {
      "ObjectId" : "49e5cdf80d57952fdbd39bff9a2ab8e87240506a",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/thread/config.cmake" : {
      "ObjectId" : "3bc373e386f52a3554211c630c39bc0d9aa1ac0a",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/thrift/config.cmake" : {
      "ObjectId" : "e394ef65e29d0f49de7173b873e90767cc14a0ed",
      "LastModified" : "2019-04-09T19:05:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/url/config.cmake" : {
      "ObjectId" : "a35920ea0fc1403c4d5b705a2d4767e255fc9249",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/vsdebug/config.cmake" : {
      "ObjectId" : "9e903805dc126ba3ea6397bd49b951c07b827f6d",
      "LastModified" : "2019-04-09T19:05:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/watchman/config.cmake" : {
      "ObjectId" : "d24b82e2ba18ec2cf79dc8fcd259bc73a89104cd",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/weakref/config.cmake" : {
      "ObjectId" : "154a74acbb56ac490cd704476220160d68c817e7",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/xenon/config.cmake" : {
      "ObjectId" : "8cf6f1bc3cf52e9456e5ce953a459ef5d6bc6537",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/xhprof/config.cmake" : {
      "ObjectId" : "615504b1bad4a870f2c6e5645ad6410f78edd5dc",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/xml/config.cmake" : {
      "ObjectId" : "9e7858e78e036dad3c748db28b63a962f8ec6975",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/xmlreader/config.cmake" : {
      "ObjectId" : "5ed4d1d3e33af3da2c86bc0c822bc7c9ace87868",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/xmlwriter/config.cmake" : {
      "ObjectId" : "27eae2017df9a6e2c198504c07d8b8dda096d926",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/xsl/config.cmake" : {
      "ObjectId" : "878079b24cc716295bc2f9acd9d92e9b8c4e7724",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/zip/config.cmake" : {
      "ObjectId" : "d5eb0a5c08dd621b3ab39277b892bb975f1be2cf",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/ext/zlib/config.cmake" : {
      "ObjectId" : "943813ceda56e5352a9c5902721bf2ec5c017610",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/runtime/test/CMakeLists.txt" : {
      "ObjectId" : "616071abbcb42bfde0446f2569d5b7b07de5d481",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/system/CMakeLists.txt" : {
      "ObjectId" : "c79aded4a0d3292c1fc77ad4e7a7e1204aafdcb3",
      "LastModified" : "2019-04-09T19:05:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/test/CMakeLists.txt" : {
      "ObjectId" : "fc365190eb8ac18a68d5516ddb7c7c168c6bc1be",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/test/DEFS.bzl" : {
      "ObjectId" : "b7ef4d1b3412802f4dc3aac230045c4ab1be8009",
      "LastModified" : "2019-04-09T19:05:58Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "# -*- mode: python -*-",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# hphp_skip_repo_test and hphp_skip_non_repo_test let us enable or disable\n# tests based on repo mode. This is useful to shard our tests into different\n# sets for CI runs.",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# This dependency on hhvm_link shouldn't be necessary, since hhvm already\n# depends (indirectly) on hhvm_link. But we have it here for two reasons:\n#\n# 1) Our test targets need to be within 6 dependency hops of all of our\n#    source files (see https://fburl.com/3dpob2w2).\n#\n# 2) In a dev build, when Buck gets the hhvm binary from cache, it doesn't\n#    build all the necessary .so files (this is an issue with hhvm:hhvm\n#    being a custom_rule). A direct dependency on hhvm_link forces Buck to\n#    build them.",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "hphp/test/dso_test/config.cmake" : {
      "ObjectId" : "404001d5d2093bddf4fdbd5ce84c748e8ea2fd6f",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/test/dso_test/dso_test.cmake" : {
      "ObjectId" : "4b054240401d6c7ac106daec8735ab8a78039486",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Build a DSO in dso_test, only to be used for testing\n\n# on linux of zend extensions loaded dynamically through a DSO.\n\n#\n\n# See http://www.cmake.org/cmake/help/v3.0/command/add_custom_command.html\n\n# See http://www.cmake.org/cmake/help/v3.0/command/add_custom_target.html\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# The output from hphpize and cmake is just discarded;\n\n# the presumption is that it has been debugged and \"just works\".\n\n#\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "hphp/tools/gdb/CMakeLists.txt" : {
      "ObjectId" : "f27e5a272df27191417093989b0749f13b0f9786",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/tools/hfsort/CMakeLists.txt" : {
      "ObjectId" : "1d375dd7348c0d2d7b3b6cb2f55c2c247ec8eaed",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/tools/hphpize/CMakeLists.txt" : {
      "ObjectId" : "3aa121d25737cf80c83d10cc46603e4f56b6cefe",
      "LastModified" : "2019-04-09T19:05:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ensure that we pick up the includes for hhvm and folly\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# omit: PREFIX/third-party is a suitable path\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# omit: PREFIX/third-party is a suitable path\n",
        "Line" : 16,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# omit: PREFIX/third-party is a suitable path\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# omit: base dir should not be included\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# map HPHP_HOME/hphp to CMAKE_INSTALL_FULL_INCLUDEDIR/hphp\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# match string\n",
        "Line" : 24,
        "CharPositionInLine" : 26
      },
      "7" : {
        "Text" : "# replace string\n",
        "Line" : 25,
        "CharPositionInLine" : 46
      },
      "8" : {
        "Text" : "# output variable\n",
        "Line" : 26,
        "CharPositionInLine" : 10
      },
      "9" : {
        "Text" : "# input\n",
        "Line" : 27,
        "CharPositionInLine" : 14
      },
      "10" : {
        "Text" : "# map HPHP_HOME/third-party to CMAKE_INSTALL_FULL_INCLUDEDIR/hphp/third-party\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# match string\n",
        "Line" : 31,
        "CharPositionInLine" : 33
      },
      "12" : {
        "Text" : "# replace string\n",
        "Line" : 32,
        "CharPositionInLine" : 58
      },
      "13" : {
        "Text" : "# output variable\n",
        "Line" : 33,
        "CharPositionInLine" : 10
      },
      "14" : {
        "Text" : "# input\n",
        "Line" : 34,
        "CharPositionInLine" : 14
      },
      "15" : {
        "Text" : "# Ensure that we pick up the definitions for hhvm and folly\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "hphp/tools/tc-print/CMakeLists.txt" : {
      "ObjectId" : "4e2782bd68ceccc1bacf733ff0a7f30737bbefed",
      "LastModified" : "2019-04-09T19:05:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/tools/version/CMakeLists.txt" : {
      "ObjectId" : "a5f39a8fd4302650a5a4b31af1540832fb480612",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/util/CMakeLists.txt" : {
      "ObjectId" : "d75115e2c58679f4b1445b5c7c64dae3fbd2ca0a",
      "LastModified" : "2019-04-09T19:05:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Disable Channeled JSON until we're sure it's going to stick\n\n# sgolemon(2014-02-19)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "hphp/vixl/CMakeLists.txt" : {
      "ObjectId" : "22a0eea1aa18d5c7d7023db460a8a278a625ff99",
      "LastModified" : "2019-04-09T19:05:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "hphp/zend/CMakeLists.txt" : {
      "ObjectId" : "673a94d3b816bde7b19d66847407e23b9571f021",
      "LastModified" : "2018-07-13T15:57:18Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 170,
    "MAKEFILE" : 2,
    "BAZEL" : 3
  },
  "ElapsedTime" : 13631
}