{
  "Repository" : "17110116",
  "Revision" : "HEAD",
  "ObjectId" : "1eb69d62bf3e3faa2d48b0d26512b0b523b14436",
  "CommitTime" : "2018-12-30T00:46:48Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "0cfe0eec4c920a9122594cc6e2e122e5e28da113",
      "LastModified" : "2018-07-29T19:03:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# enable modern c++ on clang or gcc\r\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Windows\r\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# macOS\r\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# mac\r\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Linux\r\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "ext/imgui-sfml/CMakeLists.txt" : {
      "ObjectId" : "0dd8d1b064612af58f7a5bfbd40ba955d13f1cb9",
      "LastModified" : "2016-07-30T00:45:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Only tested in 3.1, may work in older versions.\n\n# .\n\n# Install SFML or set SFML_ROOT and set IMGUI_ROOT prior to running cmake\n\n# .\n\n# Provides the follow variables:\n\n# IMGUI_SFML_INCLUDE_DIRS - imgui and imgui_sfml include paths\n\n# IMGUI_SOURCES - imgui.cpp source path to link with your binary\n\n# IMGUI_SFML_SOURCES - imgui_sfml.cpp source path to link with your binary\n\n# IMGUI_SFML_DEPENDENCIES - found dependencies to link with your library (sfml)\n\n# .\n\n# Sample usage:\n\n#   add_subdirectory(repos/imgui-sfml)\n\n#   include_directories(\"${IMGUI_SFML_INCLUDE_DIRS}\")\n\n#   add_executable(MY_PROJECT ${IMGUI_SOURCES} ${IMGUI_SFML_SOURCES} ${SRCS})\n\n#   ...\n\n#   target_link_libraries(MY_PROJECT ${IMGUI_SFML_DEPENDENCIES})\n\n# .\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find required libraries\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ImGui does not provide native support for CMakeLists, workaround for now to have\n\n# users specify IMGUI_ROOT. See:\n\n#    https://github.com/ocornut/imgui/pull/255\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Do a pseudo find files for ImGui once IMGUI_ROOT is set\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Rename that pesky imconfig.h file for the user.\n",
        "Line" : 56,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Glob up both source and headers as sources for VS users.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set these for users to use\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Build examples\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "ext/imgui-sfml/examples/CMakeLists.txt" : {
      "ObjectId" : "f11122586e749f8abd25ad08ea247d57cecbee22",
      "LastModified" : "2016-07-30T00:45:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Only tested in 3.1, may work in older versions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FIXME(SMA) : Wrong header used here when IMGUI_ROOT contains a imconfig.h\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# needed for imgui.h to find our imconfig.h\n",
        "Line" : 16,
        "CharPositionInLine" : 26
      },
      "CommentCount" : 3
    },
    "ext/imgui/examples/opengl3_example/Makefile" : {
      "ObjectId" : "b8e2d83fe10ed7cd74ee4bdee1ae33dba598b30e",
      "LastModified" : "2016-07-30T00:45:07Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Cross Platform Makefile\n\n# Compatible with Ubuntu 14.04.1 and Mac OS X\n\n#\n\n#\n\n# if you using Mac OS X:\n\n# You'll need glfw\n\n#    http://www.glfw.org\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#CXX = g++\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#LINUX\n",
        "Line" : 21,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "#APPLE\n",
        "Line" : 30,
        "CharPositionInLine" : 26
      },
      "4" : {
        "Text" : "#\tCXXFLAGS += -D__APPLE__\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ext/imgui/examples/opengl_example/Makefile" : {
      "ObjectId" : "91d1b1422dc8f4828524cd9330dc400bb0ce8d98",
      "LastModified" : "2016-07-30T00:45:07Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Cross Platform Makefile\n\n# Compatible with Ubuntu 14.04.1 and Mac OS X\n\n#\n\n#\n\n# if you using Mac OS X:\n\n# You'll need glfw\n\n#    http://www.glfw.org\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#CXX = g++\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#LINUX\n",
        "Line" : 20,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "#APPLE\n",
        "Line" : 29,
        "CharPositionInLine" : 26
      },
      "4" : {
        "Text" : "#\tCXXFLAGS += -D__APPLE__\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ext/imgui/examples/vulkan_example/CMakeLists.txt" : {
      "ObjectId" : "3657c829459bf37b009777e1b291f711d0a0b7d8",
      "LastModified" : "2016-07-30T00:45:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# GLFW\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set this to point to a up-to-date GLFW repo\n",
        "Line" : 12,
        "CharPositionInLine" : 28
      },
      "2" : {
        "Text" : "# ImGui\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Libraries\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use vulkan headers from glfw:\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ext/lua/Makefile" : {
      "ObjectId" : "5ee56011249728bf4ddd85e58ea7685ecdb4f931",
      "LastModified" : "2016-07-30T00:45:07Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for installing Lua\n\n# See doc/readme.html for installation and customization instructions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Your platform. See PLATS for possible values.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to install. The installation starts in the src and doc directories,\n\n# so take care if INSTALL_TOP is not an absolute path. See the local target.\n\n# You may want to make INSTALL_LMOD and INSTALL_CMOD consistent with\n\n# LUA_ROOT, LUA_LDIR, and LUA_CDIR in luaconf.h.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# How to install. If your install program does not support \"-p\", then\n\n# you may have to run ranlib on the installed liblua.a.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# If you don't have \"install\" you can use \"cp\" instead.\n\n# INSTALL= cp -p\n\n# INSTALL_EXEC= $(INSTALL)\n\n# INSTALL_DATA= $(INSTALL)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Other utilities.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# == END OF USER SETTINGS -- NO NEED TO CHANGE ANYTHING BELOW THIS LINE =======\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Convenience platforms targets.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# What to install.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Lua version and release.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Targets start here.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# make may get confused with test/ and install/\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# echo config parameters\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# echo pkg-config data\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# list targets that do not create files (but not all makes understand .PHONY)\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# (end of Makefile)\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "ext/lua/src/Makefile" : {
      "ObjectId" : "d71c75c8732257fefa4c3ff279589f05d6f74d2a",
      "LastModified" : "2016-07-30T00:45:07Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for building Lua\n\n# See ../doc/readme.html for installation and customization instructions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Your platform. See PLATS for possible values.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# == END OF USER SETTINGS -- NO NEED TO CHANGE ANYTHING BELOW THIS LINE =======\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Targets start here.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Convenience targets for popular platforms\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# list targets that do not create files (but not all makes understand .PHONY)\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# DO NOT DELETE\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# (end of Makefile)\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    }
  },
  "FileTypes" : {
    "CMAKE" : 4,
    "MAKEFILE" : 4
  },
  "ElapsedTime" : 16593
}