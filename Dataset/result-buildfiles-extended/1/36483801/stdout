{
  "Repository" : "36483801",
  "Revision" : "HEAD",
  "ObjectId" : "296b92ee52f0a03b6a9b5f52dbee2decaef4a545",
  "CommitTime" : "2019-02-01T13:44:52Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "6c906fa5c7a511c89b7c6070c83349530e2bb112",
      "LastModified" : "2017-11-14T09:28:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2016-2017 Jonathan Müller <jonathanmueller.dev@gmail.com>\n\n# This file is subject to the license terms in the LICENSE file\n\n# found in the top-level directory of this distribution.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add external libraries\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Disable warnings\n",
        "Line" : 20,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# decorated name length exceeded, name was truncated\n",
        "Line" : 23,
        "CharPositionInLine" : 16
      },
      "4" : {
        "Text" : "# Multi-processor compilation\n",
        "Line" : 24,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "# Disable auto-link\n",
        "Line" : 28,
        "CharPositionInLine" : 36
      },
      "6" : {
        "Text" : "# subdirectories\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# install configuration\n\n#install(EXPORT standardese DESTINATION \"${lib_dest}\")\n\n#install(FILES standardese-config.cmake LICENSE DESTINATION \"${lib_dest}\")\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "external/external.cmake" : {
      "ObjectId" : "34feb7bbae254700b3e361d50bfea500869c5f81",
      "LastModified" : "2018-09-26T08:45:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2016-2017 Jonathan Müller <jonathanmueller.dev@gmail.com>\n\n# This file is subject to the license terms in the LICENSE file\n\n# found in the top-level directory of this distribution.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# add cppast\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# add ThreadPool\n\n#\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# don't need to be installed\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#\n\n# add cmark\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# add and exclude targets\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# fixup target properties\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# disable some warnings under MSVC, they're very noisy\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# install fake target\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "b8de710b8dafe0c024ed4f271f54b0bf6c83cdf4",
      "LastModified" : "2018-09-26T08:45:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2016-2017 Jonathan Müller <jonathanmueller.dev@gmail.com>\n\n# This file is subject to the license terms in the LICENSE file\n\n# found in the top-level directory of this distribution.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add threading support\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# link cppast\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# link cmark\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# install library: TODO\n\n#install(TARGETS standardese EXPORT standardese DESTINATION \"${lib_dest}\")\n\n#install(FILES ${header} DESTINATION \"${include_dest}/standardese\")\n\n#install(FILES ${detail_header} DESTINATION \"${include_dest}/standardese/detail\")\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "standardese-config.cmake" : {
      "ObjectId" : "f45c9f993c1c03b0c2afb9a62b385eebfa5aea9b",
      "LastModified" : "2017-01-02T21:01:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2016-2017 Jonathan Müller <jonathanmueller.dev@gmail.com>\n\n# This file is subject to the license terms in the LICENSE file\n\n# found in the top-level directory of this distribution.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# EXTERNAL\n\n# makes imported targets available\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# EXTERNAL\n\n# saves the location of the standardese executable in STANDARDESE_TOOL\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# EXTERNAL\n\n# saves the location of the clang++ binary in STANDARDESE_CLANG_BINARY\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# EXTERNAL\n\n# generates documentation for a given target\n\n# will create a custom target standardese_${target} that will run standardese with given options\n\n# usage:\n\n# standardese_generate(<target> [ALL] [CONFIG <config>]\n\n#                      [INCLUDE_DIRECTORY <include_dir_a> [include_dir_b ...]]\n\n#                      [MACRO_DEFINITION <def_a> [def_b ...]]\n\n#                      [MACRO_UNDEFINITION <def_a> [def_b ...]]\n\n#                      [PREPROCESS_DIRECTORY <dir_a> [dir_b ...]]\n\n#                      INPUT <input_a> [input_b ...])\n\n# ALL - whether or not the custom target will run when building all\n\n# CONFIG - same as --config for standardese\n\n# INCLUDE_DIRECTORY - same as -I <arg> for standardese for each argument\n\n# MACRO_DEFINITION - same as -D <arg> for standardese for each argument\n\n# MACRO_UNDEFINITION - same as -U <arg> for standardese for each argument\n\n# PREPROCESS_DIRECTORY - same as -P <arg> for standardese for each argument\n\n# INPUT - the input files given to standardese\n\n# all paths must be absolute (e.g. through CMAKE_CURRENT_SOURCE_DIR or similar)\n\n# or relative to the working directory of standardese which is ${CMAKE_CURRENT_SOURCE_DIR}\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# no arg\n",
        "Line" : 41,
        "CharPositionInLine" : 44
      },
      "6" : {
        "Text" : "# single arg\n",
        "Line" : 42,
        "CharPositionInLine" : 47
      },
      "7" : {
        "Text" : "# multiple arg\n",
        "Line" : 43,
        "CharPositionInLine" : 121
      },
      "CommentCount" : 8
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "95c7084405988b76fd7d6cfd633dbec760538d5a",
      "LastModified" : "2018-09-26T08:45:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2016-2017 Jonathan Müller <jonathanmueller.dev@gmail.com>\n\n# This file is subject to the license terms in the LICENSE file\n\n# found in the top-level directory of this distribution.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add catch\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tool/CMakeLists.txt" : {
      "ObjectId" : "fedf2377a41ce28349d2580e979bcdd8a920f48b",
      "LastModified" : "2018-09-26T08:45:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2016-2017 Jonathan Müller <jonathanmueller.dev@gmail.com>\n\n# This file is subject to the license terms in the LICENSE file\n\n# found in the top-level directory of this distribution.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# link Boost\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Force linking to static libraries. Linking Boost.ProgramOptions dynamic library causes link errors\n\n# See for example http://stackoverflow.com/questions/11235927/link-to-static-boost-lib-with-cmake-and-vs2010-without-automatic-linking.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# install tool\n\n#install(TARGETS standardese_tool EXPORT standardese DESTINATION \"${tool_dest}\")\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    }
  },
  "FileTypes" : {
    "CMAKE" : 6
  },
  "ElapsedTime" : 726
}