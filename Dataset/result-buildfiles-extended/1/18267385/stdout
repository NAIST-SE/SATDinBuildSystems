{
  "Repository" : "18267385",
  "Revision" : "HEAD",
  "ObjectId" : "46a7bba5eb9f0012d9d705e20c64848bad01285a",
  "CommitTime" : "2018-01-05T23:33:01Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "a889ef10134fb7f9acd0ef9962ccb290c93dbf91",
      "LastModified" : "2016-11-30T14:09:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#OPTION(BUILD_PYTHON_WRAPPERS \"Build Python wrappers.  Needs Python.\" ON)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    mark_as_advanced(FORCE PROTOTYPING)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#    mark_as_advanced(FORCE LIBPNGPP_AVAILABLE)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# remove old flags from the cache:\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# SET(CMAKE_INSTALL_PREFIX \"${CMAKE_CURRENT_SOURCE_DIR}/dist\" CACHE STRING \"Installation directory.\" FORCE)\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#LINK_DIRECTORIES(${EASYCL_LIBRARIES})\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## TARGET_link_LIBRARIES(clBLAS ${EASYCL_LIBRARIES})\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# include_directories(test)\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# needed for timeGetTime\n",
        "Line" : 86,
        "CharPositionInLine" : 26
      },
      "9" : {
        "Text" : "#    message(\"${dir}_src ${${dir}_src}\")\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#message(\"deepcl_sources ${deepcl_sources}\")\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#find_package(Lua51)\n\n#include_directories(${LUA_INCLUDE_DIR})\n\n#link_libraries(${LUA_LIBRARIES})\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#include_directories(EasyCL/thirdparty/lua-5.1.5/src)\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#file(STRINGS EasyCL/thirdparty/lua-5.1.5/files.txt lua_src1)\n\n#foreach(source ${lua_src1})\n\n#    set(lua_src ${lua_src} EasyCL/thirdparty/lua-5.1.5/src/${source})\n\n#endforeach()\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#set(EasyCL_sources EasyCL/EasyCL.cpp\n\n#    EasyCL/deviceinfo_helper.cpp EasyCL/platforminfo_helper.cpp EasyCL/CLWrapper.cpp EasyCL/util/easycl_stringhelper.cpp\n\n#    EasyCL/templates/TemplatedKernel.cpp EasyCL/templates/LuaTemplater.cpp\n\n#    EasyCL/CLKernel.cpp EasyCL/thirdparty/clew/src/clew.c\n\n#    ${lua_src})\n\n#add_library(EasyCL SHARED ${EasyCL_sources})\n\n#link_libraries(EasyCL)\n\n#target_link_libraries(EasyCL ${LUA_LIBRARIES})\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#add_executable(gpuinfo EasyCL/gpuinfo.cpp EasyCL/thirdparty/clew/src/clew.c \n\n#    EasyCL/deviceinfo_helper.cpp EasyCL/platforminfo_helper.cpp)\n\n#if(ON_LINUX)\n\n#    target_link_libraries(gpuinfo dl)\n\n#endif()\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#if(ON_LINUX)\n\n#    execute_process(COMMAND git --version RESULT_VARIABLE git_test ERROR_QUIET)\n\n#    if(${git_test} EQUAL 0)\n\n#        set(GIT_FOUND 1)\n\n#    endif()\n\n#    if(GIT_FOUND)\n\n#        add_custom_command(\n\n#            OUTPUT ${CMAKE_CURRENT_SOURCE_DIR}/EasyCL/thirdparty/clew/src/clew.c ${CMAKE_CURRENT_SOURCE_DIR}/EasyCL/EasyCL.cpp ${CMAKE_CURRENT_SOURCE_DIR}/EasyCL/CLKernel.cpp ${CMAKE_CURRENT_SOURCE_DIR}/EasyCL/CLWrapper.cpp\n\n#            COMMAND git submodule update --init --force --recursive\n\n#        )\n\n#        add_custom_target(git_submodules_update DEPENDS EasyCL/thirdparty/clew/src/clew.c)\n\n#        add_dependencies(DeepCL git_submodules_update)\n\n#    endif()\n\n#endif(ON_LINUX)\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#link_libraries(DeepCL)\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#ADD_DEPENDENCIES(DeepCL clBLAS)\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#target_link_libraries(cifar-to-mat ${LUA_LIBRARIES})\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#    add_dependencies(PyDeepCL DeepCL)\n\n#    target_link_libraries(PyDeepCL DeepCL)\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#INSTALL(DIRECTORY EasyCL/ DESTINATION include/easycl FILES_MATCHING PATTERN *.h)\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Generate the project config file.\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "cmake/build_EasyCL.cmake" : {
      "ObjectId" : "07d93763ca632e982ad34e58b1f94da4bbc2b835",
      "LastModified" : "2015-08-19T07:55:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#message(\"lib path ${CMAKE_INSTALL_PREFIX}/lib/${CMAKE_SHARED_LIBRARY_PREFIX}EasyCL${CMAKE_SHARED_LIBRARY_SUFFIX}\")\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/build_clBLAS.cmake" : {
      "ObjectId" : "087a992d45bcc274c9905e33ca461ad676a5887c",
      "LastModified" : "2016-01-04T08:19:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ExternalProject_Get_Property(clBLAS-external install_dir)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#SET_TARGET_PROPERTIES(clBLAS PROPERTIES IMPORTED_LOCATION ${clBLAS_location})\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add_custom_target(clblas_delete_stamp clBLAS-external EasyCL-external\n\n#  ${CMAKE_COMMAND} -E  remove_directory \"${CMAKE_BINARY_DIR}/clBLAS/stamp\"\n\n#)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#add_dependencies(clBLAS-external EasyCL-external)\n\n#add_dependencies(clBLAS-external EasyCL)\n\n#add_dependencies(clBLAS EasyCL)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "python/CMakeLists.txt" : {
      "ObjectId" : "32a2bda96fde3c997381cc93694635d915b0c775",
      "LastModified" : "2015-08-20T03:49:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# needed for timeGetTime\n",
        "Line" : 26,
        "CharPositionInLine" : 26
      },
      "1" : {
        "Text" : "#\tSET(DEEPCL_LIBRARIES ${CMAKE_INSTALL_PREFIX}/lib/DeepCL.lib ${CMAKE_INSTALL_PREFIX}/lib/EasyCL.lib)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\tSET(DEEPCL_LIBRARIES ${CMAKE_INSTALL_PREFIX}/lib/${CMAKE_SHARED_LIBRARY_PREFIX}DeepCL${CMAKE_SHARED_LIBRARY_SUFFIX})\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#target_link_libraries(PyDeepCL ${DEEPCL_LIBRARIES})\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#install(PROGRAMS test_deepcl.py test_lowlevel.py test_qlearning.py\n\n#    DESTINATION bin)\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "python/cmake/FindCython.cmake" : {
      "ObjectId" : "f44f1f707d54a6484af8904571f6dd83e59e5742",
      "LastModified" : "2015-08-19T07:55:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the Cython compiler.\n\n#\n\n# This code sets the following variables:\n\n#\n\n#  CYTHON_EXECUTABLE\n\n#\n\n# See also UseCython.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Kitware, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#=============================================================================\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use the Cython executable that lives next to the Python executable\n\n# if it is a local installation.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "python/cmake/ReplicatePythonSourceTree.cmake" : {
      "ObjectId" : "d308cce779e5e2ccb9d2c9edb9869b5f6544e7e7",
      "LastModified" : "2015-08-19T07:55:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Note: when executed in the build dir, then CMAKE_CURRENT_SOURCE_DIR is the\n\n# build dir.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "python/cmake/UseCython.cmake" : {
      "ObjectId" : "68345301f1b90795f8aa0aff04d084777af91070",
      "LastModified" : "2015-08-19T07:55:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define a function to create Cython modules.\n\n#\n\n# For more information on the Cython project, see http://cython.org/.\n\n# \"Cython is a language that makes writing C extensions for the Python language\n\n# as easy as Python itself.\"\n\n#\n\n# This file defines a CMake function to build a Cython Python module.\n\n# To use it, first include this file.\n\n#\n\n#   include( UseCython )\n\n#\n\n# Then call cython_add_module to create a module.\n\n#\n\n#   cython_add_module( <module_name> <src1> <src2> ... <srcN> )\n\n#\n\n# To create a standalone executable, the function\n\n#\n\n#   cython_add_standalone_executable( <executable_name> [MAIN_MODULE src1] <src1> <src2> ... <srcN> )\n\n#\n\n# To avoid dependence on Python, set the PYTHON_LIBRARY cache variable to point\n\n# to a static library.  If a MAIN_MODULE source is specified, \n\n# the \"if __name__ == '__main__':\" from that module is used as the C main() method\n\n# for the executable.  If MAIN_MODULE, the source with the same basename as\n\n# <executable_name> is assumed to be the MAIN_MODULE.\n\n#\n\n# Where <module_name> is the name of the resulting Python module and\n\n# <src1> <src2> ... are source files to be compiled into the module, e.g. *.pyx,\n\n# *.py, *.c, *.cxx, etc.  A CMake target is created with name <module_name>.  This can\n\n# be used for target_link_libraries(), etc.\n\n#\n\n# The sample paths set with the CMake include_directories() command will be used\n\n# for include directories to search for *.pxd when running the Cython complire.\n\n#\n\n# Cache variables that effect the behavior include:\n\n#\n\n#  CYTHON_ANNOTATE\n\n#  CYTHON_NO_DOCSTRINGS\n\n#  CYTHON_FLAGS\n\n#\n\n# Source file properties that effect the build process are\n\n#\n\n#  CYTHON_IS_CXX\n\n#\n\n# If this is set of a *.pyx file with CMake set_source_files_properties()\n\n# command, the file will be compiled as a C++ file.\n\n#\n\n# See also FindCython.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Kitware, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#=============================================================================\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Configuration options.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create a *.c or *.cxx file from a *.pyx file.\n\n# Input the generated file basename.  The generate file will put into the variable\n\n# placed in the \"generated_file\" argument. Finally all the *.py and *.pyx files.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default to assuming all files are C.\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Determine if it is a C or C++ file.\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Get the include directories.\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Determine dependencies.\n\n# Add the pxd file will the same name as the given pyx file.\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# pxd files to check for additional dependencies.\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# check for C header dependencies\n",
        "Line" : 134,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Had trouble getting the quote in the regex\n",
        "Line" : 138,
        "CharPositionInLine" : 10
      },
      "11" : {
        "Text" : "# check for pxd dependencies\n",
        "Line" : 150,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Look for cimport statements.\n",
        "Line" : 152,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Add the module to the files to check, if appropriate.\n",
        "Line" : 164,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# if it is not already going to be checked\n",
        "Line" : 176,
        "CharPositionInLine" : 22
      },
      "15" : {
        "Text" : "# if it has not already been checked\n",
        "Line" : 177,
        "CharPositionInLine" : 20
      },
      "16" : {
        "Text" : "# if pxd file can be found\n",
        "Line" : 178,
        "CharPositionInLine" : 18
      },
      "17" : {
        "Text" : "# for each module dependency discovered\n",
        "Line" : 179,
        "CharPositionInLine" : 21
      },
      "18" : {
        "Text" : "# for each pxd file to check\n",
        "Line" : 180,
        "CharPositionInLine" : 19
      },
      "19" : {
        "Text" : "# pyx_file\n",
        "Line" : 183,
        "CharPositionInLine" : 15
      },
      "20" : {
        "Text" : "# Set additional flags.\n",
        "Line" : 185,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Include directory arguments. \n",
        "Line" : 207,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Determining generated file name.\n",
        "Line" : 214,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Add the command to run the compiler.\n",
        "Line" : 222,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Remove their visibility to the user.\n",
        "Line" : 233,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# cython_add_module( <name> src1 src2 ... srcN )\n\n# Build the Cython Python module.\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# cython_add_standalone_executable( _name [MAIN_MODULE src3.py] src1 src2 ... srcN )\n\n# Creates a standalone executable the given sources.\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 27
    }
  },
  "FileTypes" : {
    "CMAKE" : 7
  },
  "ElapsedTime" : 1965
}