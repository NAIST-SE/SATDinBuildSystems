{
  "Repository" : "18188577",
  "Revision" : "HEAD",
  "ObjectId" : "1d11e03fa768fb54e38f9e6e77c5b6ee94ba193e",
  "CommitTime" : "2019-04-08T16:04:32Z",
  "Files" : {
    "pom.xml" : {
      "ObjectId" : "e61219dab6d9a1bbb23922defb1463fad769a333",
      "LastModified" : "2019-04-08T16:04:32Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Developer entries are provided for primary developers.\n   For other contributors, see https://github.com/conveyal/gtfs-lib/graphs/contributors ",
        "Line" : 22,
        "CharPositionInLine" : 92
      },
      "1" : {
        "Text" : " Define where the source code for this project lives ",
        "Line" : 44,
        "CharPositionInLine" : 63
      },
      "2" : {
        "Text" : " Define some variables to be used elsewhere in the build. ",
        "Line" : 51,
        "CharPositionInLine" : 68
      },
      "3" : {
        "Text" : " Define where the artifacts produced by this build will be deployed ",
        "Line" : 57,
        "CharPositionInLine" : 78
      },
      "4" : {
        "Text" : " We are using Sonatype Nexus Staging instead of Maven Release plugin.\n         Only a snapshot repo should be configured. Releases are done from that snapshot staging repo. ",
        "Line" : 60,
        "CharPositionInLine" : 107
      },
      "5" : {
        "Text" : " Target Java versions ",
        "Line" : 74,
        "CharPositionInLine" : 40
      },
      "6" : {
        "Text" : " Recommended way to deploy to OSSRH ",
        "Line" : 80,
        "CharPositionInLine" : 52
      },
      "7" : {
        "Text" : " Release versions will be synced to Maven Central automatically. ",
        "Line" : 88,
        "CharPositionInLine" : 83
      },
      "8" : {
        "Text" : " Allow attaching Javadoc during releases ",
        "Line" : 93,
        "CharPositionInLine" : 57
      },
      "9" : {
        "Text" : " Turn off Java 8 strict Javadoc checking ",
        "Line" : 98,
        "CharPositionInLine" : 59
      },
      "10" : {
        "Text" : " Compress Javadoc into JAR and include that JAR when deploying. ",
        "Line" : 102,
        "CharPositionInLine" : 82
      },
      "11" : {
        "Text" : " Include zipped source code in releases ",
        "Line" : 112,
        "CharPositionInLine" : 56
      },
      "12" : {
        "Text" : " We sign in the verify phase, which means it will happen for install and deploy but not package. ",
        "Line" : 131,
        "CharPositionInLine" : 117
      },
      "13" : {
        "Text" : " Attach a version of the JAR that includes all dependencies ",
        "Line" : 141,
        "CharPositionInLine" : 76
      },
      "14" : {
        "Text" : " The shaded JAR will not be the main artifact for the project, it will be attached\n                for deployment in the way source and docs are. ",
        "Line" : 153,
        "CharPositionInLine" : 67
      },
      "15" : {
        "Text" : " files overwrite each other and geotools does not function without this.\n                  http://docs.geotools.org/latest/userguide/faq.html#how-do-i-create-an-executable-jar-for-my-geotools-app ",
        "Line" : 163,
        "CharPositionInLine" : 127
      },
      "16" : {
        "Text" : " signature files from included jars cause problems: http://stackoverflow.com/questions/999489 ",
        "Line" : 166,
        "CharPositionInLine" : 116
      },
      "17" : {
        "Text" : " This plugin calculates code coverage and generates a report during the test phase in maven ",
        "Line" : 181,
        "CharPositionInLine" : 106
      },
      "18" : {
        "Text" : "  used for importing java projects from github ",
        "Line" : 215,
        "CharPositionInLine" : 59
      },
      "19" : {
        "Text" : " CSV parser ",
        "Line" : 223,
        "CharPositionInLine" : 24
      },
      "20" : {
        "Text" : " JUnit is a Java testing framework. ",
        "Line" : 229,
        "CharPositionInLine" : 48
      },
      "21" : {
        "Text" : " Parses command line arguments to main methods. ",
        "Line" : 236,
        "CharPositionInLine" : 60
      },
      "22" : {
        "Text" : " This package allows you to run tests on code that call System.exit() ",
        "Line" : 242,
        "CharPositionInLine" : 82
      },
      "23" : {
        "Text" : " Hamcrest is an assertion library that prints pretty messages when assertions fail ",
        "Line" : 259,
        "CharPositionInLine" : 95
      },
      "24" : {
        "Text" : " Snapshotting library for testing ",
        "Line" : 265,
        "CharPositionInLine" : 46
      },
      "25" : {
        "Text" : " Disk-backed storage that looks like a Java map. ",
        "Line" : 271,
        "CharPositionInLine" : 61
      },
      "26" : {
        "Text" : " Our logging API, no implementation specified as gtfs-lib is a library. ",
        "Line" : 277,
        "CharPositionInLine" : 84
      },
      "27" : {
        "Text" : " Commons DBUtils is a collection of utility methods that help avoid boilerplate when working with SQL. ",
        "Line" : 294,
        "CharPositionInLine" : 115
      },
      "28" : {
        "Text" : " For uploading / downloading things from Amazon S3.\n         We should really eliminate this functionality, it's out of scope for this gtfs-lib library. ",
        "Line" : 311,
        "CharPositionInLine" : 105
      },
      "29" : {
        "Text" : " Very efficient collections of primitive data types for Java. ",
        "Line" : 317,
        "CharPositionInLine" : 74
      },
      "30" : {
        "Text" : " Another command line parameter parser - should we really have two of these in our dependencies? ",
        "Line" : 323,
        "CharPositionInLine" : 109
      },
      "31" : {
        "Text" : " We should really find a way to do this without forking Jackson ",
        "Line" : 329,
        "CharPositionInLine" : 76
      },
      "32" : {
        "Text" : " JDBC support for Postgres databases. More modules would need to be added to access H2, SQLite etc. ",
        "Line" : 335,
        "CharPositionInLine" : 112
      },
      "33" : {
        "Text" : " Database connection pooling, implements interfaces in JDBC ",
        "Line" : 346,
        "CharPositionInLine" : 72
      },
      "34" : {
        "Text" : " GraphQL for Java, without HTTP layer, just query and response handling. ",
        "Line" : 352,
        "CharPositionInLine" : 85
      },
      "CommentCount" : 35
    }
  },
  "FileTypes" : {
    "MAVEN" : 1
  },
  "ElapsedTime" : 721
}