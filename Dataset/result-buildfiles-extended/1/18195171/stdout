{
  "Repository" : "18195171",
  "Revision" : "HEAD",
  "ObjectId" : "c155ecd62982c4b8966a6d49809ffe28e9d2b443",
  "CommitTime" : "2019-04-15T10:44:24Z",
  "Files" : {
    "corelib/CMakeLists.txt" : {
      "ObjectId" : "11e086729f61e95fb064136c57371b264033be94",
      "LastModified" : "2019-03-19T14:35:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################\n\n#\n\n#  CMake Project file for Sire\n\n#\n\n#   (C) Christopher Woods\n\n#\n\n################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############\n\n############ SETTING INITIAL SIRE VARIABLES\n\n############\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# require cmake >= 3.0.0\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# use loose loop syntax in CMakeLists files\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Anaconda clang is called Clang, not AppleClang\n",
        "Line" : 28,
        "CharPositionInLine" : 35
      },
      "5" : {
        "Text" : "# managing OS X @rpath manually\n",
        "Line" : 31,
        "CharPositionInLine" : 35
      },
      "6" : {
        "Text" : "# want to manage versions myself!\n",
        "Line" : 34,
        "CharPositionInLine" : 35
      },
      "7" : {
        "Text" : "# Qt has colons in names, which new cmake hates\n",
        "Line" : 37,
        "CharPositionInLine" : 35
      },
      "8" : {
        "Text" : "# Allow non-existant targets with -NOTFOUND\n",
        "Line" : 40,
        "CharPositionInLine" : 35
      },
      "9" : {
        "Text" : "# Automatically link to qtmain on windows\n",
        "Line" : 43,
        "CharPositionInLine" : 35
      },
      "10" : {
        "Text" : "# Get rid of install messages (too verbose!)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Option used to control the number of cores for the compile\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# get the number of cores on this machine - useful for\n\n# compiling dependencies\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Look for the Sire cmake config file that should have been\n\n# installed with Sire...\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Look for the \"SireCompileVariables.cmake\" file in the install directory\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# try the anaconda path\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Now set the C++, C and Fortran compilers to be used to compile the wrappers\n\n# These have to be the same as used to compile corelib\n",
        "Line" : 101,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Option to compile and install into an anaconda or miniconda directory\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Where is anaconda installed\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Make sure that there is a python3 executable in the bin directory\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "#  elseif( WIN32 OR WIN64 )  # need this instead of MSYS as don't know we are MSYS yet...\n\n#\n\n#    message(STATUS \"Compiling on windows using MSYS2/MINGW64...\")\n\n#    set( MINGW_BASE \"C:/msys64/mingw64\" CACHE PATH \"MSYS MINGW64 root directory\" )\n\n#    get_filename_component(MINGW_CMAKE_BIN ${CMAKE_COMMAND} DIRECTORY)\n\n#    get_filename_component(MINGW_CMAKE_ROOT ${MINGW_CMAKE_BIN} DIRECTORY)\n\n#    message(STATUS \"Using cmake ${CMAKE_COMMAND} from MING64 base ${MINGW_CMAKE_ROOT}\")\n\n#\n\n#    set( MINGW_BASE \"${MINGW_CMAKE_ROOT}\")\n\n#    set( MINGW_PYTHON \"${MINGW_BASE}/bin/python3.exe\" )\n\n#\n\n#    if ( NOT EXISTS \"${MINGW_PYTHON}\" )\n\n#      message(STATUS \"Cannot find mingw python3 executable, ${MINGW_PYTHON}\")\n\n#      message(STATUS \"Can only install Sire into a MINGW installation with a valid python3.exe.\")\n\n#      message(STATUS \"This is normally in the file C:/msys64/mingw64/bin/python3.exe.\")\n\n#      message(STATUS \"Please install MSYS2/MINGW64 with the MINGW python3 package.\")\n\n#      message(STATUS \"Set MINGW_BASE in cmake to point to your MSYS2/MINGW64 installation directory.\")\n\n#      message(FATAL_ERROR \"Cannot compile until mingw python3 is installed...\")\n\n#    endif()\n\n#\n\n#    set( SIRE_INSTALL_PREFIX \"${MINGW_BASE}\" )\n\n#    set( CMAKE_INSTALL_PREFIX \"${SIRE_INSTALL_PREFIX}\" CACHE INTERNAL\n\n#           \"Prefix prepended to install directories\" FORCE )\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#�Option to set the install directory of Sire\n",
        "Line" : 158,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Absolutely can't run cmake in the source directory!\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# name the project\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Whether or not to build the parts of Sire that depend on\n\n# a graphical environment (e.g. inquire)\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Create a file in which we can save the values of all useful variables.\n\n# This will mean that projects using Sire won't have to set these variables\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# This macro is used to save the names of variable to SireCompileVariables.cmake\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Ensure that the Sire's directories are searched for header files\n\n# before the system directories - this prevents problems in case\n\n# an older version of Sire is already installed on the system\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Sire must be built as a set of shared libraries\n\n# (otherwise the modules cannot be loaded in python)\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# This is where you set your own compiler flags\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Name of executable install dir\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Shared library install dir\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Where to install all bundled components\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Static library install dir\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Include (header) files install dir\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# CMake install files install dir\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Sire share directory (for parameters etc.)\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Where will the test files be saved?\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Add these directories to the RPATH variable for the libraries / executables,\n\n# so that they can find each other when loading\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# make sure that all libraries are named \"@rpath/library.dylib\". This will allow\n\n# the library to be found as long as the executable can substitute @rpath with the \n\n# path to the library\n",
        "Line" : 262,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# Add the two passed directories to the @rpaths to search for libraries. @executable_path\n\n# is the directory containing the executable, so the libraries are included in \n\n# @exeutable_path/../${SIRE_LIBS} and @exeutable_path/../${SIRE_BUNDLED_LIBS}\n",
        "Line" : 267,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Uncomment for more verbose compiling/linking\n\n# (or run 'make VERBOSE=1')\n\n# set (CMAKE_VERBOSE_MAKEFILE ON)\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Path to the project's extra cmake files\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Options to pass to 'strip' when stripping the libraries\n\n# (on linux, aix and mac need to use '-x' to ensure we leave\n\n#  the global symbols)\n",
        "Line" : 297,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Add option to turn on or off symbol hiding\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Add option to turn on or off vectorisation of the code\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Add option to disable use of SSE\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Add option to disable use of AVX\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Add option to disable use of AVX512F)\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Add an option to force off Fortran compilation and linking\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Add an option to say whether or not to use OpenMM\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#############\n\n############# PLATFORM TESTS\n\n#############\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Now run some platform tests - the results will be placed in config.h\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "#create config.h\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "#  We need to get the compiler flags for different options\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "#############\n\n############# DETECTING AND CONFIGURING THE COMPILER\n\n#############\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Find which C++ 2011/Y/4 features are supported\n",
        "Line" : 472,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# TEMP - TESTING VECTOR DETECTOR\n",
        "Line" : 486,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Add compiler specific flags\n",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# get the compiler version (via gcc -dumpversion)\n\n# (I'll assume that we are using the same version\n\n# of compiler for C and C++...)\n",
        "Line" : 495,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "# These two regexps are copied from the Chicken CMake\n\n# files (which provide a very useful cmake tutorial - thanks :-)                  \n",
        "Line" : 502,
        "CharPositionInLine" : 4
      },
      "61" : {
        "Text" : "# First, we need at least GCC 4.8, as we need C++ 11 support\n",
        "Line" : 513,
        "CharPositionInLine" : 4
      },
      "62" : {
        "Text" : "# GCC >= 5 still show weird crashes when using O3 which don't\n\n# show up with other compilers. It is probably my fault, but\n\n# until I find out why, we have to limit compilation to -O2\n",
        "Line" : 526,
        "CharPositionInLine" : 8
      },
      "63" : {
        "Text" : "# -fomit-frame-pointer breaks backtrace on an apple\n",
        "Line" : 534,
        "CharPositionInLine" : 4
      },
      "64" : {
        "Text" : "# Now gcc 5 specific options\n",
        "Line" : 542,
        "CharPositionInLine" : 4
      },
      "65" : {
        "Text" : "# OpenMM with conda uses the old C++ binary API!\n\n# Tell GCC 5 to respect the old API\n",
        "Line" : 547,
        "CharPositionInLine" : 8
      },
      "66" : {
        "Text" : "# remove warnings about strict aliasing\n",
        "Line" : 553,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "# Ensure that the libraries don't contain any undefined symbols\n",
        "Line" : 557,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "# an old incompatibility between clang and gcc means that some \n\n# distributions will fail if use -ffast-math\n",
        "Line" : 579,
        "CharPositionInLine" : 4
      },
      "69" : {
        "Text" : "# -fomit-frame-pointer breaks backtrace on an apple\n",
        "Line" : 601,
        "CharPositionInLine" : 4
      },
      "70" : {
        "Text" : "# -fomit-frame-pointer breaks backtrace on an apple\n",
        "Line" : 633,
        "CharPositionInLine" : 4
      },
      "71" : {
        "Text" : "################\n\n################ SORTING OUT ALL OF SIRE'S DEPENDENCIES\n\n################\n",
        "Line" : 680,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Tell CMake to run moc when necessary\n",
        "Line" : 684,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# As moc files are generated in the binary dir, tell CMake\n\n# to always look for includes there:\n",
        "Line" : 687,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Xcode build - use the libraries that are already installed...\n",
        "Line" : 692,
        "CharPositionInLine" : 2
      },
      "75" : {
        "Text" : "# Option to disable all bundles\n",
        "Line" : 695,
        "CharPositionInLine" : 2
      },
      "76" : {
        "Text" : "# Fine-grain control of bundling each dependency\n",
        "Line" : 698,
        "CharPositionInLine" : 2
      },
      "77" : {
        "Text" : "# All of the bundled objects are built into the directory ${CMAKE_BINARY_DIR}/bundled\n\n# This directory must be installed into the sire.app/ directory\n",
        "Line" : 781,
        "CharPositionInLine" : 8
      },
      "78" : {
        "Text" : "# look for Qt5 in the system\n",
        "Line" : 792,
        "CharPositionInLine" : 4
      },
      "79" : {
        "Text" : "# look for netcdf in the system (ideally from conda)\n",
        "Line" : 797,
        "CharPositionInLine" : 4
      },
      "80" : {
        "Text" : "# look for OpenMM in the system\n\n# Now look for OpenMM\n",
        "Line" : 821,
        "CharPositionInLine" : 6
      },
      "81" : {
        "Text" : "# Sire depends on >= boost 1.31 - all libraries must be dynamically linked\n",
        "Line" : 859,
        "CharPositionInLine" : 2
      },
      "82" : {
        "Text" : "#save the path to this include directory so that it can be\n\n#used by anything compiling against Sire\n",
        "Line" : 869,
        "CharPositionInLine" : 4
      },
      "83" : {
        "Text" : "# Sire depends on >= GSL 1.6\n",
        "Line" : 878,
        "CharPositionInLine" : 2
      },
      "84" : {
        "Text" : "# Now look for BLAS and LAPACK - if these are not found then\n\n# a local version will have to be used instead\n",
        "Line" : 892,
        "CharPositionInLine" : 2
      },
      "85" : {
        "Text" : "#message( STATUS \"Cannot find libcpuid. Will disable CPU detection code.\" )\n",
        "Line" : 928,
        "CharPositionInLine" : 2
      },
      "86" : {
        "Text" : "###########\n\n########### PRINTING OUT SETTINGS AND FINALISING COMPILE FLAGS\n\n###########\n",
        "Line" : 940,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# Disable some of the unnecessary compiler warnings...\n",
        "Line" : 947,
        "CharPositionInLine" : 2
      },
      "88" : {
        "Text" : "#set ( SIRE_SHARE_LINK_FLAGS \"${SIRE_SHARE_LINK_FLAGS} ${SIRE_VISIBILITY_FLAGS}\" )\n",
        "Line" : 979,
        "CharPositionInLine" : 2
      },
      "89" : {
        "Text" : "# Add the small flags here so that they don't accidentally pull in the\n\n# vectorisation flags (this breaks the MultiFloat/etc classes for AVX-512F)\n",
        "Line" : 982,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# Copy the Sire compile flags to CMake\n",
        "Line" : 997,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# Add this to all shared libraries\n",
        "Line" : 1016,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# Now save the compile variables so that they can be re-used by libraries that use Sire\n",
        "Line" : 1025,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "#include the build directory so that we can get sire_config.h and sire_version.h\n",
        "Line" : 1045,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "################\n\n################ TELLING CMAKE WHERE THE SOURCE IS LOCATED\n\n################\n",
        "Line" : 1048,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# Add the compiler test directory - this allows us to run some compiler\n\n# tests to make sure that Sire will compile properly\n",
        "Line" : 1052,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# Recurse into the src/libs and src/apps subdirectories\n",
        "Line" : 1056,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "################\n\n################ CONFIG FILES AND INSTALLATION INSTRUCTIONS\n\n################\n",
        "Line" : 1060,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "# Finally, write the version header file and finish off the component dependencies file\n",
        "Line" : 1064,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# install the extra includes file in the Sire/cmake directory\n",
        "Line" : 1067,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# install the parameters file (containing forcefield parameters) into\n\n# share/Sire\n",
        "Line" : 1075,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# install the molecular templates into share/Sire\n",
        "Line" : 1083,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "# These commands are used to create an 'uninstall' target\n\n# (this is copied from the vtk.org wiki)\n",
        "Line" : 1096,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 103
    },
    "corelib/build/cmake/DownloadAndCheckMD5.cmake" : {
      "ObjectId" : "202e3f05223c9c94bcb3b82790c84133e0b8438c",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###\n\n### CMake functions to download a file\n\n### and check its MD5 checksum\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake < 2.8.10 does not seem to support HTTPS out of the box\n\n# and since SourceForge redirects to HTTPS, the CMake download fails\n\n# so we try to use Powershell (Windows) or system curl (Unix, OS X) if available\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "corelib/build/cmake/FindGSL.cmake" : {
      "ObjectId" : "b624ec7a45c15f6db396fea84d3b2b3458f650fd",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# Try to find gnu scientific library GSL  \n\n# (see http://www.gnu.org/software/gsl/)\n\n# Once run this will define: \n\n# \n\n# GSL_FOUND       = system has GSL lib\n\n#\n\n# GSL_LIBRARIES   = full path to the libraries\n\n#    on Unix/Linux with additional linker flags from \"gsl-config --libs\"\n\n# \n\n# CMAKE_GSL_CXX_FLAGS  = Unix compiler flags for GSL, essentially \"`gsl-config --cxxflags`\"\n\n#\n\n# GSL_INCLUDE_DIR      = where to find headers \n\n#\n\n# GSL_LINK_DIRECTORIES = link directories, useful for rpath on Unix\n\n# GSL_EXE_LINKER_FLAGS = rpath on Unix\n\n#\n\n# Felix Woelk 07/2004\n\n# minor corrections Jan Woetzel\n\n#\n\n# Developed further by Christopher Woods\n\n#\n\n# www.mip.informatik.uni-kiel.de\n\n# --------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#MESSAGE(\"DBG GSL_CONFIG ${GSL_CONFIG}\")\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# set CXXFLAGS to be fed into CXX_FLAGS by the user:\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# set INCLUDE_DIRS to prefix+include\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# set link libraries and link flags\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# extract link dirs for rpath  \n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# split off the link dirs (for rpath)\n\n# use regular expression to match wildcard equivalent \"-L*<endchar>\"\n\n# with <endchar> is a space or a semicolon\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#      MESSAGE(\"DBG  GSL_LINK_DIRECTORIES_WITH_PREFIX=${GSL_LINK_DIRECTORIES_WITH_PREFIX}\")\n",
        "Line" : 68,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# remove prefix -L because we need the pure directory for LINK_DIRECTORIES\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#      MESSAGE(\"DBG  GSL_LINK_DIRECTORIES=${GSL_LINK_DIRECTORIES}\")\n\n#      MESSAGE(\"DBG  GSL_EXE_LINKER_FLAGS=${GSL_EXE_LINKER_FLAGS}\")\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#      ADD_DEFINITIONS(\"-DHAVE_GSL\")\n\n#      SET(GSL_DEFINITIONS \"-DHAVE_GSL\")\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "corelib/build/cmake/FindNetCDF.cmake" : {
      "ObjectId" : "ea851fa8d67e4eda36e5245e75e8bdfbb56e815d",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find NetCDF library.\n\n#\n\n# Looks for the NetCDF libraries at the default (/usr/local) location\n\n# or custom location found in the NETCDF_ROOT_DIR environment variable.\n\n#\n\n# The script defines defines:\n\n#  NetCDF_FOUND\n\n#  NetCDF_ROOT_DIR\n\n#  NetCDF_INCLUDE_DIR\n\n#  NetCDF_LIBRARY_DIR\n\n#  NetCDF_LIBRARIES\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if we did not manage to set the root dir at the beginning but found the\n\n# libs then set the ${NetCDF_LIBRARY_DIR}/.. as root\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# just double-checking\n",
        "Line" : 48,
        "CharPositionInLine" : 49
      },
      "CommentCount" : 3
    },
    "corelib/build/cmake/FindOpenMM.cmake" : {
      "ObjectId" : "8d9b67551ee23712e05ad0de4e8d52e859f8694c",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find OpenMM library.\n\n#\n\n# Looks for the OpenMM libraries at the default (/usr/local) location \n\n# or custom location found in the OPENMM_ROOT_DIR environment variable. \n\n#\n\n# The script defines defines: \n\n#  OpenMM_FOUND     \n\n#  OpenMM_ROOT_DIR\n\n#  OpenMM_INCLUDE_DIR\n\n#  OpenMM_LIBRARY_DIR\n\n#  OpenMM_LIBRARIES      \n\n#  OpenMM_LIBRARIES_D   - debug version of libraries \n\n#  OpenMM_PLUGIN_DIR\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Author: Szilard Pall (pszilard@cbr.su.se)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if we did not manage to set the root dir at the beginning but found the \n\n# libs then set the ${OpenMM_LIBRARY_DIR}/.. as root\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# just double-checking\n",
        "Line" : 53,
        "CharPositionInLine" : 49
      },
      "4" : {
        "Text" : "# now we can be sure that we have the library dir\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "corelib/build/cmake/FindSire.cmake" : {
      "ObjectId" : "9da68fdf33d49143f47532fd0d62adc79f5f8439",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the Sire libraries\n\n# Find the native Sire includes and libraries\n\n#\n\n# Sire uses install(EXPORT) to create native CMake files that\n\n# allow you to link against Sire targets as if they were in \n\n# your project. The targets are prefixed with \"SIRE_\", so\n\n# if you want to link against SireBase, just add \"SIRE_SireBase\"\n\n# to your target_link_libraries.\n\n#\n\n# SIRE_INCLUDE_DIR contains the Sire root directory, and\n\n# SIRE_EXTRA_INCLUDES contains the paths to the header files\n\n# of the dependencies of Sire (GSL, Boost and MPI)\n\n#\n\n#  SIRE_INCLUDE_DIR    - where to find the Sire include files\n\n#  SIRE_EXTRA_INCLUDES - where to find the header files of the dependencies\n\n#  SIRE_FOUND          - True if Sire found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# I prefer to use all capitals for variables\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If SIRE_ROOT was defined in the environment, use it.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If SIRE_INCLUDEDIR was defined in the environment, use it.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Now find the sire_version.h file - this is in the same directory\n\n#as the cmake directory that contains the cmake files necessary\n\n#to import Sire\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#read the version file to ensure that we have the right version of Sire\n\n#Read the whole file\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Check the version of Sire against the requested version.\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# If the user requested an exact version of Sire, check\n\n# that. We already know that the Sire version we have is >= the\n\n# requested version.\n",
        "Line" : 126,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# If the user didn't specify a patchlevel, it's 0.\n",
        "Line" : 131,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# We'll set SIRE_FOUND true again if we have an exact version match.\n",
        "Line" : 136,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# State that we found a version of Sire that is too new or too old.\n",
        "Line" : 148,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 11
    },
    "corelib/build/cmake/FindVector.cmake" : {
      "ObjectId" : "88744545e29e8f8a78f82ff80ebe296d7fa6b766",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find and test vector support (i.e. SSE, AVX, AVX512)\n\n# used within Sire\n\n#\n\n#  SIRE_VECTOR_FLAGS    - flags passed to the compiler to support vectorisation,\n\n#                         and to inform the application of what is available\n\n# Call this function using\n\n#\n\n# GET_SIRE_VECTOR_FLAGS( omp-simd-flag sse2-flag avx-flag avx512f-flag )\n\n#\n\n# This will test what is supported and will return the value as SIRE_VECTOR_FLAGS\n\n#\n\n# This will read SIRE_DISABLE_SSE, SIRE_DISABLE_AVX and SIRE_DISABLE_AVX512F\n\n# to decide whether or not these levels of vectorisation should be disabled\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#message( STATUS \"Checking flags ${OMP_SIMD_FLAG} | ${SSE2_FLAG} | ${AVX_FLAG} | ${AVX512F_FLAG}\" )\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# check that the compiler has the required flags\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Need this to check that C source files can run\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# check if we have a computer that can compile and run SSE2\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# check if we have a computer that can compile and run AVX\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# check if we have a computer that can compile and run AVX512F\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# return this value as SIRE_VECTOR_FLAGS to the parent caller\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "corelib/build/cmake/GetGitVersion.cmake" : {
      "ObjectId" : "e0c045b3d4a7bfa81b78eb46c48360fd42bb1bc6",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the git program\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#get info about the repository\n",
        "Line" : 8,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "#get the current commit branch\n",
        "Line" : 14,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "#get the current hash, author name and commit date and time\n",
        "Line" : 20,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "#find out whether the current checkout is clean (has nothing that\n\n#hasn't yet been committed)\n",
        "Line" : 26,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# now write this version info to a header file\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# install this file into the Sire include directory\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "corelib/build/cmake/GetSvnVersion.cmake" : {
      "ObjectId" : "5e8786e28bd69a43de60e7c374b2f198b5f86356",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the svn program\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#get info about the repository\n",
        "Line" : 9,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "#convert all returns to spaces\n",
        "Line" : 14,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "#extract the repository URL  (line is \"URL: http://repository.url/sire/branches...\")\n",
        "Line" : 17,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# Find the svnversion program\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#get the version number string for this copy\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# now write this version info to a header file\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# install this file into the Sire include directory\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "corelib/build/cmake/LogVariables.cmake" : {
      "ObjectId" : "91c5a403345e5ca83d1e03ef6bd73a0fba1e33c4",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ------------------------- Begin Generic CMake Variable Logging ------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# /*\tC++ comment style not allowed\t*/\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if you are building in-source, this is the same as CMAKE_SOURCE_DIR, otherwise \n\n# this is the top level directory of your build tree \n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if you are building in-source, this is the same as CMAKE_CURRENT_SOURCE_DIR, otherwise this \n\n# is the directory where the compiled or generated files from the current CMakeLists.txt will go to \n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# this is the directory, from which cmake was started, i.e. the top level source directory \n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# this is the directory where the currently processed CMakeLists.txt is located in \n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# contains the full path to the top level directory of your build tree \n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# contains the full path to the root of your project source directory,\n\n# i.e. to the nearest directory where CMakeLists.txt contains the PROJECT() command \n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# set this variable to specify a common place where CMake should put all executable files\n\n# (instead of CMAKE_CURRENT_BINARY_DIR)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# set this variable to specify a common place where CMake should put all libraries \n\n# (instead of CMAKE_CURRENT_BINARY_DIR)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# tell CMake to search first in directories listed in CMAKE_MODULE_PATH\n\n# when you use FIND_PACKAGE() or INCLUDE()\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# this is the complete path of the cmake which runs currently (e.g. /usr/local/bin/cmake) \n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# this is the CMake installation directory \n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# this is the filename including the complete path of the file where this variable is used. \n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# this is linenumber where the variable is used\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# this is used when searching for include files e.g. using the FIND_PATH() command.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# this is used when searching for libraries e.g. using the FIND_LIBRARY() command.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# the complete system name, e.g. \"Linux-2.4.22\", \"FreeBSD-5.4-RELEASE\" or \"Windows 5.1\" \n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# the short system name, e.g. \"Linux\", \"FreeBSD\" or \"Windows\"\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# only the version part of CMAKE_SYSTEM \n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# the processor name (e.g. \"Intel(R) Pentium(R) M processor 2.00GHz\") \n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# is TRUE on all UNIX-like OS's, including Apple OS X and CygWin\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# is TRUE on Windows, including CygWin \n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# is TRUE on Apple OS X\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# is TRUE when using the MinGW compiler in Windows\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# is TRUE on Windows when using the CygWin version of cmake\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# is TRUE on Windows when using a Borland compiler \n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Microsoft compiler \n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# set this to true if you don't want to rebuild the object files if the rules have changed, \n\n# but not the actual source files or headers (e.g. if you changed the some compiler switches) \n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# since CMake 2.1 the install rule depends on all, i.e. everything will be built before installing. \n\n# If you don't like this, set this one to true.\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# If set, runtime paths are not added when using shared libraries. Default it is set to OFF\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# set this to true if you are using makefiles and want to see the full compile and link \n\n# commands instead of only the shortened ones \n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# this will cause CMake to not put in the rules that re-run CMake. This might be useful if \n\n# you want to use the generated build files on another machine. \n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# A simple way to get switches to the compiler is to use ADD_DEFINITIONS(). \n\n# But there are also two variables exactly for this purpose: \n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# the compiler flags for compiling C sources \n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# the compiler flags for compiling C++ sources \n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Choose the type of build.  Example: SET(CMAKE_BUILD_TYPE Debug) \n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# if this is set to ON, then all libraries are built as shared libraries by default.\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# the compiler used for C files \n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# the compiler used for C++ files \n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# if the compiler is a variant of gcc, this should be set to 1 \n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# if the compiler is a variant of g++, this should be set to 1 \n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# the tools for creating libraries \n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#\n\n#MESSAGE( STATUS \": \" ${} )\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# ------------------------- End of Generic CMake Variable Logging ------------------\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 45
    },
    "corelib/build/cmake/cmake_cxx11/CMakeLists.txt" : {
      "ObjectId" : "de9d24ce134a24e63dcba68b23209de43fddc0a6",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# GCC specifics\r\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Visual Studio specifics\r\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Warning Level 4 for Debug builds\r\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "corelib/build/cmake/cmake_cxx11/CheckCXX11Features.cmake" : {
      "ObjectId" : "fc1243f10ed3443195515468c2d3c67bf6a47035",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Checks for C++11 features\r\n\n#  CXX11_FEATURE_LIST - a list containing all supported features\r\n\n#  HAS_CXX11_AUTO               - auto keyword\r\n\n#  HAS_CXX11_NULLPTR            - nullptr\r\n\n#  HAS_CXX11_LAMBDA             - lambdas\r\n\n#  HAS_CXX11_STATIC_ASSERT      - static_assert()\r\n\n#  HAS_CXX11_RVALUE_REFERENCES  - rvalue references\r\n\n#  HAS_CXX11_DECLTYPE           - decltype keyword\r\n\n#  HAS_CXX11_CSTDINT_H          - cstdint header\r\n\n#  HAS_CXX11_LONG_LONG          - long long signed & unsigned types\r\n\n#  HAS_CXX11_VARIADIC_TEMPLATES - variadic templates\r\n\n#  HAS_CXX11_CONSTEXPR          - constexpr keyword\r\n\n#  HAS_CXX11_SIZEOF_MEMBER      - sizeof() non-static members\r\n\n#  HAS_CXX11_FUNC               - __func__ preprocessor constant\r\n\n#\r\n\n# Original script by Rolf Eike Beer\r\n\n# Modifications by Andreas Weis\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "corelib/build/test_compiler/CMakeLists.txt" : {
      "ObjectId" : "6829d0ccef542156f7db78619f8ce482772bb76a",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################\n\n#\n\n# CMake file to compile the\n\n# compiler tests\n\n#\n\n###############################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add each test\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "corelib/build/test_compiler/test_error_packing/CMakeLists.txt" : {
      "ObjectId" : "5e616db23978e544ff89d5404816398b243ed970",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for test_template_rtti\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#create the library\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "corelib/build/test_compiler/test_mpi/CMakeLists.txt" : {
      "ObjectId" : "3e3dbb17817d90aaa1e6b3d914cbb8a6a05417f3",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for test_mpi\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "corelib/build/test_compiler/test_openmp/CMakeLists.txt" : {
      "ObjectId" : "8f7821f104a97a56d94101b3616c680338f510a4",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for test_stream\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#create the library\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "corelib/build/test_compiler/test_qhash_lookup/CMakeLists.txt" : {
      "ObjectId" : "99ca3fb4691f483da15abce2d3efc1884b2a9924",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for test_qhash_lookup\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#create the library\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "corelib/build/test_compiler/test_stream/CMakeLists.txt" : {
      "ObjectId" : "0b77fa7beb663f5f3773430c68242e2ff64e5126",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for test_stream\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#create the library\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "corelib/build/test_compiler/test_template_rtti/CMakeLists.txt" : {
      "ObjectId" : "cc4cc0fb1c40c2d9e94ef9e60e2100d61706cdc8",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for test_template_rtti\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#create the library\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#now create the test application\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "corelib/src/apps/CMakeLists.txt" : {
      "ObjectId" : "01e083cbbdeaae08ccd5f565d6709f53faca46f2",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################\n\n#\n\n# CMake file to compile the\n\n# Sire applications\n\n#\n\n###############################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add each application\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "corelib/src/apps/sire/CMakeLists.txt" : {
      "ObjectId" : "4ae489bcb6c5adfc9d6ee776cdbd18edaa99825b",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for application:sire\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Third Party dependencies of this module\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Other Sire libraries\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If we have NetCDF, then include the header files\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# generate the application\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Link to other Sire libraries\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# installation\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "corelib/src/apps/test_system/CMakeLists.txt" : {
      "ObjectId" : "f1e74014406b05b3d719a2a769cd3740d0c4833b",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for application:test_system\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# these are all simple executables that will be \n\n# used to test for features in a machine before install\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "corelib/src/apps/testmulti/CMakeLists.txt" : {
      "ObjectId" : "96032eb0104f695e562388b9c37727a095ac46ba",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for application:testmulti\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Third Party dependencies of this module\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Other Sire libraries\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# generate the application\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Link to other Sire libraries\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# installation\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Link to other Sire libraries\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# installation\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Link to other Sire libraries\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# installation\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Link to other Sire libraries\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# installation\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "corelib/src/bundled/install_boost.cmake" : {
      "ObjectId" : "a28109b022050fe66625980b6eb8ea31b7015cd8",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###\n\n### CMake file to install the Boost headers-only libraries\n\n### in the Sire bundle\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# First, try to find the include/boost directory in the \"bundled\" directory. If it exists,\n\n# then we don't need to do anything\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sire depends on >= boost 1.31 - all libraries must be dynamically linked\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#save the path to this include directory so that it can be\n\n#used by anything compiling against Sire\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "corelib/src/bundled/install_cpuid.cmake" : {
      "ObjectId" : "7c7d15f3fe2aae8c218c58a61c9af60870410587",
      "LastModified" : "2019-03-19T14:35:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###\n\n### CMake file to install libcpuid\n\n### in the Sire bundle\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# First, try to find the cpuid library in the \"bundled\" directory. If it exists,\n\n# then we don't need to do anything\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "corelib/src/bundled/install_gsl.cmake" : {
      "ObjectId" : "c7fbedebe04a1de51ea5efd73ab7abb7f5109a40",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###\n\n### CMake file to install the GNU Scientific Library\n\n### in the Sire bundle\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# First, try to find the GSL library in the \"bundled\" directory. If it exists,\n\n# then we don't need to do anything\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "corelib/src/bundled/install_qt5.cmake" : {
      "ObjectId" : "d37719bca960002f9a7e4125a1457990a9c67b38",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###\n\n### CMake file to install QtCore from Qt 5\n\n### in the Sire bundle\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# First, try to find the QtCore library in the \"sire.app\" directory. If it exists,\n\n# then we don't need to do anything\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#list( APPEND QT_OPTIONS \"-platform;macx-icc\" )\n",
        "Line" : 83,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "#list( APPEND QT_OPTIONS \"-c++11\")\n",
        "Line" : 117,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# need to set the install name so that we can find the library when it is \n\n# placed into the bundle directory\n",
        "Line" : 175,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "corelib/src/bundled/install_tbb.cmake" : {
      "ObjectId" : "e2a8a802928e60d8aef90a18f0052eb5bdabee22",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###\n\n### CMake file to install intel's threaded building blocks\n\n### in the Sire bundle\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# switch on C++0x support so that we have exact exception\n\n# propagation (don't use c++14 as will require >= GCC 5)\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# need to set the install name so that we can find the library when it is\n\n# placed into the bundle directory\n",
        "Line" : 137,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "corelib/src/libs/CMakeLists.txt" : {
      "ObjectId" : "26162857f816c052c936d89bd7b1d4603e50dd22",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################\n\n#\n\n# CMake file to compile the\n\n# Sire libraries\n\n#\n\n###############################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# List of each subdirectory\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "corelib/src/libs/SireAnalysis/CMakeLists.txt" : {
      "ObjectId" : "e476de2fad4dc217899796ac2e847eef2d1de5b4",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for library:SireAnalysis\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Export symbols when building the library\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Third Party dependencies of this module\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Other Sire libraries\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define the headers in SireAnalysis\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define the sources in SireAnalysis\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Link to other Sire libraries\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# installation\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "corelib/src/libs/SireBase/CMakeLists.txt" : {
      "ObjectId" : "a84f61f8cfcdf5c7ed02bcf67d56476c0c8c33b1",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for library:SireBase\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Export symbols when building the library\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Third Party dependencies of this module\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Other Sire libraries\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This library uses Intel Threaded Building blocks\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define the header files for SireBase\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the sources in SireBase\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Link to other Sire libraries\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# installation\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "corelib/src/libs/SireCAS/CMakeLists.txt" : {
      "ObjectId" : "49bc4a4efa8640acb5abba66a2886c9e2237d303",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for library:SireCAS\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Export symbols when building the library\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Other Sire libraries\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define the headers in SireCAS\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define the sources in SireCAS\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Link to other Sire libraries, and GSL\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# installation\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "corelib/src/libs/SireCluster/CMakeLists.txt" : {
      "ObjectId" : "937524e1092f8d34172bc6483c4b7921be891e35",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for library:SireCluster\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Export symbols when building the library\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Third Party dependencies of this module\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Other Sire libraries\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define the headers in SireCluster\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define the sources in SireCluster\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Link to other Sire libraries\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# installation\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "corelib/src/libs/SireError/CMakeLists.txt" : {
      "ObjectId" : "18004365e80465e5a78f01eb7c960cd0bdd61452",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for library:SireError\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Export symbols when building the library\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Is backtrace available on this system?\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Is Boost backtrace available on this system?\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# installation\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "corelib/src/libs/SireFF/CMakeLists.txt" : {
      "ObjectId" : "002685dffc280003fd891a0b4fb9a9c51a50656c",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for library:SireFF\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Export symbols when building the library\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Other Sire libraries\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Threaded building blocks\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define the headers in SireFF\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define the sources in SireFF\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Link to other Sire libraries\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# installation\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "corelib/src/libs/SireID/CMakeLists.txt" : {
      "ObjectId" : "ecfafd82d2d1a0c18c16b8fa52cbc6f37d9978a0",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for library:SireID\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Export symbols when building the library\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Third Party dependencies of this module\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Other Sire libraries\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define the headers in SireID\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define the sources in SireID\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Link to other Sire libraries\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# installation\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "corelib/src/libs/SireIO/CMakeLists.txt" : {
      "ObjectId" : "7d6e8a7d45ac9dd63ddf110eae660ba1def16989",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for library:SireIO\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Export symbols when building the library\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Other Sire libraries\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This library uses Intel Threaded Building blocks\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If we have NetCDF, then include the header files\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define the headers in SireIO\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the sources in SireIO\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Link to other Sire libraries\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# installation\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "corelib/src/libs/SireMM/CMakeLists.txt" : {
      "ObjectId" : "95996ed9e8a7814306ffc332f9c49a1f2bd20a68",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for library:SireMM\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Export symbols when building the library\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Other Sire libraries\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This library uses Intel Threaded Building blocks\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define the headers in SireMM\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define the sources in SireMM\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Link to other Sire libraries\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# installation\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "corelib/src/libs/SireMaths/CMakeLists.txt" : {
      "ObjectId" : "dde69f14be3b857cde5dcb83e380ec11a08157cf",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for library:SireMaths\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Export symbols when building the library\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We first create a library (SireBLASPACK) that provides an interface\n\n# to BLAS, LAPACK and LINPACK. This library either links\n\n# to those libraries, or it provides the necessary functions\n\n# from those libraries if they are not available.\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# We need to sort out the naming convention for the\n\n# fortran blas, lapack and linpack libraries\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Other Sire libraries\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define the sources in SireBLASPACK\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Define the headers in SireMaths\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Define the sources in SireMaths\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Link to other Sire libraries, and GSL\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# installation\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "corelib/src/libs/SireMol/CMakeLists.txt" : {
      "ObjectId" : "eff731ff2c6917a59e16cef85042f250b2aca6f4",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for library:SireMol\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Export symbols when building the library\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Third Party dependencies of this module\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Other Sire libraries\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define the headers in SireMol\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define the sources in SireMol\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Link to other Sire libraries, and GSL\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# installation\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "corelib/src/libs/SireMove/CMakeLists.txt" : {
      "ObjectId" : "d88c3e95d18fd6561baa223611b5dde1b3c9e03f",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for library:SireMove\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Export symbols when building the library\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Third Party dependencies of this module\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Other Sire libraries\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define the headers in SireMove\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define the sources in SireMove\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Link to other Sire libraries\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# installation\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "corelib/src/libs/SireStream/CMakeLists.txt" : {
      "ObjectId" : "b0a50b916f52a751e0abc61896603917a595aadb",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for library:SireStream\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Export symbols when building the library\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# installation\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "corelib/src/libs/SireSystem/CMakeLists.txt" : {
      "ObjectId" : "32d04c0adb7aaa372f180e8ce1f59339dd214e92",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for library:SireSystem\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Export symbols when building the library\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Third Party dependencies of this module\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Other Sire libraries\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define the headers in SireSystem\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define the sources in SireSystem\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Link to other Sire libraries\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# installation\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "corelib/src/libs/SireUnits/CMakeLists.txt" : {
      "ObjectId" : "03485e15b4c7e45fd37978933511213bef04b890",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for library:SireUnits\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Export symbols when building the library\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Third Party dependencies of this module\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Other Sire libraries\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define the sources in SireUnits\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Link to other Sire libraries\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# installation\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "corelib/src/libs/SireVol/CMakeLists.txt" : {
      "ObjectId" : "e517c6ceaee47707e720baf35568c0f01a4d8107",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for library:SireVol\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Export symbols when building the library\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Third Party dependencies of this module\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Other Sire libraries\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define the headers in SireVol\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define the sources in SireVol\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Link to other Sire libraries\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# installation\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "corelib/src/libs/Squire/CMakeLists.txt" : {
      "ObjectId" : "07855767acdad449dd3be0bf9b8492034857930f",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for library:Squire\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Export symbols when building the library\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Other Sire libraries\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#add the additional include files needed by Squire\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Link to other Sire libraries\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# installation\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "wrapper/Analysis/CMakeLists.txt" : {
      "ObjectId" : "ac71b18b909acc3207d192c2704be35574809484",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for Python wrapper:_Analysis\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Third Party dependencies of this module\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sire include paths\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Other python wrapping directories\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get the list of autogenerated files\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define the sources in Analysis\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create the library that holds all of the class wrappers\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# installation\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "wrapper/Base/CMakeLists.txt" : {
      "ObjectId" : "4595b78231efb21d2242c59eb9a2e442de0599e8",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for Python wrapper:_Base\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Third Party dependencies of this module\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sire include paths\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Other python wrapping directories\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get the list of autogenerated files\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define the sources in SireBase\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create the library that holds all of the class wrappers\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# installation\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "wrapper/CAS/CMakeLists.txt" : {
      "ObjectId" : "a288571ea9114cd1e50581ac6f76b5e4dd81536c",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for Python wrapper:_CAS\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Third Party dependencies of this module\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sire include paths\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Other python wrapping directories\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get the list of autogenerated files\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define the sources in CAS\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create the library that holds all of the class wrappers\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# installation\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "wrapper/CMakeLists.txt" : {
      "ObjectId" : "11b68566868ed09d51dc21d254b9d9d48f7f49bf",
      "LastModified" : "2019-02-10T12:00:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################\n\n#\n\n#  CMake Project file for Sire\n\n#    Python 3 wrappers\n\n#\n\n#   (C) Christopher Woods\n\n#\n\n################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# project version\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "############\n\n############ SETTING INITIAL SIRE VARIABLES\n\n############\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# require cmake >= 2.8.11.2\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# use loose loop syntax in CMakeLists files\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Anaconda clang is called Clang, not AppleClang\n",
        "Line" : 30,
        "CharPositionInLine" : 35
      },
      "6" : {
        "Text" : "# managing OS X @rpath manually\n",
        "Line" : 33,
        "CharPositionInLine" : 35
      },
      "7" : {
        "Text" : "# want to manage versions myself!\n",
        "Line" : 36,
        "CharPositionInLine" : 35
      },
      "8" : {
        "Text" : "# Qt has colons in names, which new cmake hates\n",
        "Line" : 39,
        "CharPositionInLine" : 35
      },
      "9" : {
        "Text" : "# Allow non-existant targets with -NOTFOUND\n",
        "Line" : 42,
        "CharPositionInLine" : 35
      },
      "10" : {
        "Text" : "# Automatically link to qtmain on windows\n",
        "Line" : 45,
        "CharPositionInLine" : 35
      },
      "11" : {
        "Text" : "# Get rid of install messages (too verbose!)\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Absolutely can't run cmake in the source directory!\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# get the number of cores on this machine - useful for\n\n# compiling dependencies\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Option to compile and install into an anaconda or miniconda directory\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Where is anaconda installed\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Make sure that there is a python3 executable in the bin directory\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#elseif( WIN32 OR WIN64 )\n\n#  # This should be MSYS2/MINGW64, so use the location of cmake to find the location\n\n#  # of the Sire installation\n\n#  message(STATUS \"Compiling on windows using MSYS2/MINGW64...\")\n\n#  set( MINGW_BASE \"C:/msys64/mingw64\" CACHE PATH \"MSYS MINGW64 root directory\" )\n\n#  get_filename_component(MINGW_CMAKE_BIN ${CMAKE_COMMAND} DIRECTORY)\n\n#  get_filename_component(MINGW_CMAKE_ROOT ${MINGW_CMAKE_BIN} DIRECTORY)\n\n#  message(STATUS \"Using cmake ${CMAKE_COMMAND} from MING64 base ${MINGW_CMAKE_ROOT}\")\n\n#\n\n#  set( MINGW_BASE \"${MINGW_CMAKE_ROOT}\")\n\n#  set( SIRE_APP \"${MINGW_BASE}\" )\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#�Option to set the install directory of Sire\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Look for the \"SireCompileVariables.cmake\" file in the install directory\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Now set the C++, C and Fortran compilers to be used to compile the wrappers\n\n# These have to be the same as used to compile corelib\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# name the project\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# make sure that all libraries are named \"@rpath/library.dylib\". This will allow\n\n# the library to be found as long as the executable can substitute @rpath with the \n\n# path to the library\n",
        "Line" : 151,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Add the two passed directories to the @rpaths to search for libraries. @executable_path\n\n# is the directory containing the executable, so the libraries are included in \n\n# @exeutable_path/../${SIRE_LIBS} and @exeutable_path/../${SIRE_BUNDLED_LIBS}\n",
        "Line" : 156,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Absolutely can't run cmake in the source directory!\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Path to the project's extra cmake files\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Find the Sire libraries\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Make sure that we are using the same compiler as that used to compile Sire\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Now add the paths to the header files of the dependencies of Sire\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# MUST build shared libraries\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Uncomment for more verbose compiling/linking\n\n# (or run 'make VERBOSE=1')\n\n# set (CMAKE_VERBOSE_MAKEFILE ON)\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# We will use the small compiler flags (as the wrappers are too big and don't need optimising)\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Also need to add '-undefined dynamic_lookup' so that we can build \n\n# modules that can be imported by a python that has statically linked libPython\n",
        "Line" : 298,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# Option to disable all bundles\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Fine-grain control of bundling each dependency\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# We want to install the bundled libs directly into the sire.app directory\n",
        "Line" : 328,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# Need to find python before we compile the boost python wrappers\n",
        "Line" : 352,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# All of the bundled objects are built into the directory ${CMAKE_BINARY_DIR}/bundled\n\n# This directory must be installed into the sire.app/ directory\n",
        "Line" : 361,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Sire depends on >= boost 1.31 - all libraries must be dynamically linked\n\n# (else we could end up with multiple boost::python libraries linked, which\n\n#  causes problems for RTTI and exceptions)\n",
        "Line" : 386,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# set the location to install the python modules\n",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Use the same Qt library as was used to build corelib\n",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Add the helper library\n",
        "Line" : 423,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Recurse into the module subdirectories \n",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#also compile Sire's python executable\n",
        "Line" : 446,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Finally, write the version header file and finish off the component dependencies file\n",
        "Line" : 455,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Create the sire_python_config.h to tell Sire where the\n\n# python libraries will be installed\n",
        "Line" : 458,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# These commands are used to create an 'uninstall' target\n\n# (this is copied from the vtk.org wiki)\n",
        "Line" : 465,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "wrapper/Cluster/CMakeLists.txt" : {
      "ObjectId" : "e9e3824b4b10ff961677b66718a6a03ed659d126",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for Python wrapper:_Cluster\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Third Party dependencies of this module\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sire include paths\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Other python wrapping directories\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get the list of autogenerated files\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define the sources in Cluster\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create the library that holds all of the class wrappers\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# installation\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "wrapper/Error/CMakeLists.txt" : {
      "ObjectId" : "8360485c3e018041d7a17be8f1421d9cc3d9950a",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for Python wrapper:_Error\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Third Party dependencies of this module\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Other Sire libraries\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define the sources in SireError\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Create the library that holds all of the class wrappers\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# installation\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "wrapper/FF/CMakeLists.txt" : {
      "ObjectId" : "ee642b63e38bd29295ca86781aa81d295a964ac7",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for Python wrapper:_FF\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Third Party dependencies of this module\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sire include paths\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Other python wrapping directories\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get the list of autogenerated files\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define the sources in FF\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create the library that holds all of the class wrappers\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# installation\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "wrapper/Helpers/CMakeLists.txt" : {
      "ObjectId" : "02dc7a0df7998006559236fea1115de086489ecb",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for Python Helper Library\n\n#   (SirePython)\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Third Party dependencies of this module\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sire include paths\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Other python wrapping directories\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define the sources in Helpers\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create the library that holds all of the class wrappers\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# installation\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "wrapper/ID/CMakeLists.txt" : {
      "ObjectId" : "9afa47766072332d931a646b75f10f7fdb2f1e3b",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for Python wrapper:_ID\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Third Party dependencies of this module\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sire include paths\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Other python wrapping directories\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get the list of autogenerated files\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define the sources in ID\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create the library that holds all of the class wrappers\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# installation\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "wrapper/IO/CMakeLists.txt" : {
      "ObjectId" : "535d38abfd45d2af7269330a52b9514c9c71264a",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for Python wrapper:_IO\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Third Party dependencies of this module\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sire include paths\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Other python wrapping directories\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get the list of autogenerated files\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define the sources in IO\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create the library that holds all of the class wrappers\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# installation\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "wrapper/MM/CMakeLists.txt" : {
      "ObjectId" : "d57f427b6a8424b66dde21af7bc2a93eb65d8b1b",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for Python wrapper:_MM\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Third Party dependencies of this module\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sire include paths\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Other python wrapping directories\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get the list of autogenerated files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define the sources in Mol\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create the library that holds all of the class wrappers\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# installation\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "wrapper/Maths/CMakeLists.txt" : {
      "ObjectId" : "3de24d1f2855936d383265668c3f931eed2d34cd",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for Python wrapper:_Maths\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Third Party dependencies of this module\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sire include paths\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Other python wrapping directories\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Need higher arity as have 16 arguments for a Matrix4\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Get the list of autogenerated files\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the sources in SireBase\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create the library that holds all of the class wrappers\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# installation\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "wrapper/Mol/CMakeLists.txt" : {
      "ObjectId" : "906e993ee1e69724fa7a3ab930ef7190231969d3",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for Python wrapper:_Mol\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Third Party dependencies of this module\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sire include paths\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Other python wrapping directories\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get the list of autogenerated files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define the sources in Mol\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create the library that holds all of the class wrappers\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# installation\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "wrapper/Move/CMakeLists.txt" : {
      "ObjectId" : "b265af51c02cbbd12a894ea0b1af56313f6bbc98",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for Python wrapper:_Move\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Third Party dependencies of this module\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sire include paths\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Other python wrapping directories\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get the list of autogenerated files\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define the sources in Move\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create the library that holds all of the class wrappers\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# installation\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "wrapper/Qt/CMakeLists.txt" : {
      "ObjectId" : "2f3e8b29d10262619e39e2f5c64fe56813fc4f72",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for Python wrapper:_Qt\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Third Party dependencies of this module\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Other Sire libraries\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Get the list of autogenerated files\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define the sources in SireQt\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create the library that holds all of the class wrappers\n\n# for Qt\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# installation\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "wrapper/Squire/CMakeLists.txt" : {
      "ObjectId" : "1ecf496c1633a6eeec2e0fb87b111b64ff188b1e",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for Python wrapper:_Squire\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Third Party dependencies of this module\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sire include paths\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Other python wrapping directories\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get the list of autogenerated files\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define the sources in Squire\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create the library that holds all of the class wrappers\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# installation\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "wrapper/Stream/CMakeLists.txt" : {
      "ObjectId" : "db616f23ca97b4705e095cf94475d9173908f1c2",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for Python wrapper:_Stream\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Third Party dependencies of this module\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sire include paths\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Other python wrapping directories\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get the list of autogenerated files\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define the sources in Stream\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create the library that holds all of the class wrappers\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# installation\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "wrapper/System/CMakeLists.txt" : {
      "ObjectId" : "4eb318b641c91bba90127edbab4629e136e0c8a5",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for Python wrapper:_System\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Third Party dependencies of this module\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sire include paths\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Other python wrapping directories\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get the list of autogenerated files\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define the sources in System\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create the library that holds all of the class wrappers\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# installation\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "wrapper/Tools/CMakeLists.txt" : {
      "ObjectId" : "ea1aed51227d33b7daf0e0505db96520458366ac",
      "LastModified" : "2019-03-19T14:37:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# Set of Tool scripts to simplify\n\n# use of Sire\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add your script to this list\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your script needs any default files (e.g. parameter or config files)\n\n# then put those files in a named directory in the Config directory and\n\n# add the name of that directory here. This directory will be copied\n\n# to the share/Sire/Tools\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# installation\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If this is an anaconda build, then make sure that all of the\n\n# necessary files are copied from the pkgs directory into the\n\n# anaconda lib, bin, and share directories\n\n# (do this here to make sure that it happens after installing\n\n#  everything else)\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# copy the files from the pkg directory to the anaconda lib and bin\n\n# directories\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "wrapper/Units/CMakeLists.txt" : {
      "ObjectId" : "e8850cf9047167e68c0a29fda17237725e7e1003",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for Python wrapper:_Units\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Third Party dependencies of this module\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sire include paths\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Other python wrapping directories\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get the list of autogenerated files\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define the sources in Units\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create the library that holds all of the class wrappers\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# installation\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "wrapper/Vol/CMakeLists.txt" : {
      "ObjectId" : "3903f1f0276e2d19308572397cb006b0736e0a25",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for Python wrapper:_Vol\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Third Party dependencies of this module\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sire include paths\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Other python wrapping directories\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get the list of autogenerated files\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define the sources in SireVol\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#SireVol_containers.cpp\n",
        "Line" : 29,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Create the library that holds all of the class wrappers\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# installation\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "wrapper/build/cmake/FindSire.cmake" : {
      "ObjectId" : "e5c8dbff2cd0f931593ec45c9fb294927d9c1f3c",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the Sire libraries\n\n# Find the native Sire includes and libraries\n\n#\n\n# Sire uses install(EXPORT) to create native CMake files that\n\n# allow you to link against Sire targets as if they were in \n\n# your project. The targets are prefixed with \"SIRE_\", so\n\n# if you want to link against SireBase, just add \"SIRE_SireBase\"\n\n# to your target_link_libraries.\n\n#\n\n# SIRE_INCLUDE_DIR contains the Sire root directory, and\n\n# SIRE_EXTRA_INCLUDES contains the paths to the header files\n\n# of the dependencies of Sire (GSL, Boost and MPI)\n\n#\n\n#  SIRE_INSTALL_PREFIX - the installation prefix to the installed corelib\n\n#  SIRE_INCLUDE_DIR    - where to find the Sire include files\n\n#  SIRE_EXTRA_INCLUDES - where to find the header files of the dependencies\n\n#  SIRE_FOUND          - True if Sire found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# I prefer to use all capitals for variables\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If SIRE_INSTALL_PREFIX was defined in the environment, use it.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If SIRE_INCLUDEDIR was defined in the environment, use it.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Now find the sire_version.h file - this is in the same directory\n\n#as the cmake directory that contains the cmake files necessary\n\n#to import Sire\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#read the version file to ensure that we have the right version of Sire\n\n#Read the whole file\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Check the version of Sire against the requested version.\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# If the user requested an exact version of Sire, check\n\n# that. We already know that the Sire version we have is >= the\n\n# requested version.\n",
        "Line" : 134,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# If the user didn't specify a patchlevel, it's 0.\n",
        "Line" : 139,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# We'll set SIRE_FOUND true again if we have an exact version match.\n",
        "Line" : 144,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# State that we found a version of Sire that is too new or too old.\n",
        "Line" : 156,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 11
    },
    "wrapper/build/cmake/GetGitVersion.cmake" : {
      "ObjectId" : "3c8423d18a25eceb6da0ac2419158002f4e220b6",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the git program\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#get info about the repository\n",
        "Line" : 8,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "#get the current commit branch\n",
        "Line" : 14,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "#get the current hash, author name and commit date and time\n",
        "Line" : 20,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "#find out whether the current checkout is clean (has nothing that\n\n#hasn't yet been committed)\n",
        "Line" : 26,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# now write this version info to a header file\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# install this file into the Sire include directory\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "wrapper/build/cmake/GetSvnVersion.cmake" : {
      "ObjectId" : "2a0abd7fd1af3a14fe3de3fcfa956c429efa0b90",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the svn program\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#get info about the repository\n",
        "Line" : 9,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "#convert all returns to spaces\n",
        "Line" : 14,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "#extract the repository URL  (line is \"URL: http://repository.url/sire/branches...\")\n",
        "Line" : 17,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# Find the svnversion program\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#get the version number string for this copy\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# now write this version info to a header file\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# install this file into the Sire include directory\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "wrapper/build/cmake/LimitSirePythonExportSymbols.cmake" : {
      "ObjectId" : "3c1de626c3b6bb52f343458c232286efe665c6fa",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# The aim of this file is to make the changes necessary so that \n\n# *only* the init_PyModule function is exported from each python\n\n# library. This will allow \"strip\" to remove most of the \n\n# unnecessary symbols from the library, thereby reducings\n\n# its size.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# use gcc/ld\n\n#set( CMAKE_SHARED_LINKER_FLAGS \n\n#     \"${CMAKE_SHARED_LINKER_FLAGS} -Wl,-exported_symbol,${_mangled_symbol}\" )\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# we need to create an 'exported_symbols' file that just contains\n\n# this symbol\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "wrapper/build/cmake/LogVariables.cmake" : {
      "ObjectId" : "91c5a403345e5ca83d1e03ef6bd73a0fba1e33c4",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ------------------------- Begin Generic CMake Variable Logging ------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# /*\tC++ comment style not allowed\t*/\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if you are building in-source, this is the same as CMAKE_SOURCE_DIR, otherwise \n\n# this is the top level directory of your build tree \n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if you are building in-source, this is the same as CMAKE_CURRENT_SOURCE_DIR, otherwise this \n\n# is the directory where the compiled or generated files from the current CMakeLists.txt will go to \n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# this is the directory, from which cmake was started, i.e. the top level source directory \n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# this is the directory where the currently processed CMakeLists.txt is located in \n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# contains the full path to the top level directory of your build tree \n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# contains the full path to the root of your project source directory,\n\n# i.e. to the nearest directory where CMakeLists.txt contains the PROJECT() command \n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# set this variable to specify a common place where CMake should put all executable files\n\n# (instead of CMAKE_CURRENT_BINARY_DIR)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# set this variable to specify a common place where CMake should put all libraries \n\n# (instead of CMAKE_CURRENT_BINARY_DIR)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# tell CMake to search first in directories listed in CMAKE_MODULE_PATH\n\n# when you use FIND_PACKAGE() or INCLUDE()\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# this is the complete path of the cmake which runs currently (e.g. /usr/local/bin/cmake) \n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# this is the CMake installation directory \n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# this is the filename including the complete path of the file where this variable is used. \n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# this is linenumber where the variable is used\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# this is used when searching for include files e.g. using the FIND_PATH() command.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# this is used when searching for libraries e.g. using the FIND_LIBRARY() command.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# the complete system name, e.g. \"Linux-2.4.22\", \"FreeBSD-5.4-RELEASE\" or \"Windows 5.1\" \n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# the short system name, e.g. \"Linux\", \"FreeBSD\" or \"Windows\"\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# only the version part of CMAKE_SYSTEM \n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# the processor name (e.g. \"Intel(R) Pentium(R) M processor 2.00GHz\") \n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# is TRUE on all UNIX-like OS's, including Apple OS X and CygWin\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# is TRUE on Windows, including CygWin \n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# is TRUE on Apple OS X\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# is TRUE when using the MinGW compiler in Windows\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# is TRUE on Windows when using the CygWin version of cmake\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# is TRUE on Windows when using a Borland compiler \n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Microsoft compiler \n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# set this to true if you don't want to rebuild the object files if the rules have changed, \n\n# but not the actual source files or headers (e.g. if you changed the some compiler switches) \n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# since CMake 2.1 the install rule depends on all, i.e. everything will be built before installing. \n\n# If you don't like this, set this one to true.\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# If set, runtime paths are not added when using shared libraries. Default it is set to OFF\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# set this to true if you are using makefiles and want to see the full compile and link \n\n# commands instead of only the shortened ones \n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# this will cause CMake to not put in the rules that re-run CMake. This might be useful if \n\n# you want to use the generated build files on another machine. \n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# A simple way to get switches to the compiler is to use ADD_DEFINITIONS(). \n\n# But there are also two variables exactly for this purpose: \n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# the compiler flags for compiling C sources \n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# the compiler flags for compiling C++ sources \n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Choose the type of build.  Example: SET(CMAKE_BUILD_TYPE Debug) \n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# if this is set to ON, then all libraries are built as shared libraries by default.\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# the compiler used for C files \n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# the compiler used for C++ files \n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# if the compiler is a variant of gcc, this should be set to 1 \n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# if the compiler is a variant of g++, this should be set to 1 \n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# the tools for creating libraries \n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#\n\n#MESSAGE( STATUS \": \" ${} )\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# ------------------------- End of Generic CMake Variable Logging ------------------\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 45
    },
    "wrapper/bundled/install_boost_python.cmake" : {
      "ObjectId" : "408cd28a4d89ba49b77aae8afa1e958bca970ba3",
      "LastModified" : "2019-03-25T11:30:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###\n\n### CMake file to install boost::python\n\n### in the Sire bundle\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# unwind_type fails with MSVC >= 15.8.0\n\n# (https://github.com/boostorg/python/issues/228)\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "wrapper/bundled/install_python.cmake" : {
      "ObjectId" : "5dd8a40c0cadb8e52682a614a246f6d5b3ed6e79",
      "LastModified" : "2019-03-19T14:37:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###\n\n### CMake file to install the Python 3 interpreter\n\n### in the Sire bundle\n\n###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# we will just use the python that comes with anaconda\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Find the python library that comes with anaconda\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# use the python that comes with msys\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Need to set the version of Python bundled with Sire\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# First, try to find the Python library in the \"bundled\" directory. If it exists,\n\n# then we don't need to do anything\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Now lets unpack and install setuptools and pip, so that we can easily\n\n# install other python modules\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# we have to make sure that the anaconda python library is called @rpath/libpython...\n\n# and that the anaconda python process has the correct executable path\n",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# There may also be a python interpreter hidden in python.app/Contents/MacOS/python\n",
        "Line" : 208,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# call python to tell it the site-packages directory itself\n",
        "Line" : 225,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Now lets unpack and install setuptools and pip, so that we can easily\n\n# install other python modules\n",
        "Line" : 252,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    },
    "wrapper/python/CMakeLists.txt" : {
      "ObjectId" : "e5e2393c5946d1eb6b01cf5584852af4e1f23547",
      "LastModified" : "2019-02-08T16:33:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################\n\n#\n\n# CMake file for sire_python\n\n# (mpi-aware python executable)\n\n#\n\n########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Third Party dependencies of this module\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sire include paths\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Other python wrapping directories\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define the sources in Helpers\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create the library that holds all of the class wrappers\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# installation\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# get the list of all scripts\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# get the filename and strip off the .py extension\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 9
    }
  },
  "FileTypes" : {
    "CMAKE" : 75
  },
  "ElapsedTime" : 2304
}