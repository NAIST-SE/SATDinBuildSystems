{
  "Repository" : "4740244",
  "Revision" : "HEAD",
  "ObjectId" : "90f26c77285f3045e2a919c3ad59c276128b7079",
  "CommitTime" : "2019-04-12T07:26:14Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "efc24f79ae3efa0b07f28af02048c873aaf62fe1",
      "LastModified" : "2019-02-26T10:47:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  CMake Config\n\n#\n\n#  Libosmium\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Configurations\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Project version\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Build options\n\n#\n\n#  (Change with -DOPTION=VALUE on cmake command line.)\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  CCache support\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# workaround for some clang versions\n",
        "Line" : 97,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Coverage support\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## This leads to all sorts of compile problems, so disable for now\n\n#include(CheckCXXCompilerFlag)\n\n#check_cxx_compiler_flag(\"-fkeep-inline-functions\" HAS_KEEP_INLINE_FUNCTIONS)\n\n#if(HAS_KEEP_INLINE_FUNCTIONS)\n\n#    set(extra_coverage_flags_ \"-fkeep-inline-functions\")\n\n#endif()\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#--verbose\n\n#--keep\n",
        "Line" : 140,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Find external dependencies\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# set OSMIUM_INCLUDE_DIR so FindOsmium will not set anything different\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# The find_package put the directory where it found the libosmium includes\n\n# into OSMIUM_INCLUDE_DIRS. We remove it again, because we want to make\n\n# sure to use our own include directory already set up above.\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Decide which C++ version to use (Minimum/default: C++11).\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# following only available from cmake 2.8.12:\n\n#   add_compile_options(-std=${USE_CPP_VERSION})\n\n# so using this instead:\n",
        "Line" : 196,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Compiler and Linker flags\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# do not show warnings caused by missing .pdb files for libraries\n",
        "Line" : 211,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Build Type\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# In 'Dev' mode: compile with very strict warnings and turn them into errors.\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#    add_definitions(${OSMIUM_WARNING_OPTIONS} ${OSMIUM_DRACONIC_CLANG_OPTIONS} -Wno-documentation -Wno-format-nonliteral -Wno-deprecated -Wno-covered-switch-default -Wno-shadow)\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Force RelWithDebInfo build type if none was given\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Unit and data tests\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Optional \"cppcheck\" target that checks C++ code\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# cpp doesn't find system includes for some reason, suppress that report\n",
        "Line" : 329,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Examples, benchmarks and documentation\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Headers\n\n#\n\n#  This will try to compile include files on their own to detect missing\n\n#  include directives and other dependency-related problems. Note that if this\n\n#  work, it is not enough to be sure it will compile in production code.\n\n#  But if it reports an error we know we are missing something.\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 382,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Create a dummy .cpp file that includes the header file we want to\n\n# check.\n",
        "Line" : 405,
        "CharPositionInLine" : 12
      },
      "26" : {
        "Text" : "# There is no way in CMake to just compile but not link a C++ file,\n\n# so we pretend to build a library here.\n",
        "Line" : 410,
        "CharPositionInLine" : 12
      },
      "27" : {
        "Text" : "#### this is better but only supported from cmake 3.0:\n\n###add_library(${libname} OBJECT ${DUMMYCPP} include/${hpp})\n",
        "Line" : 414,
        "CharPositionInLine" : 12
      },
      "28" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Optional \"clang-tidy\" target\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Installation\n\n#\n\n#  External libraries are only installed if the options are set in case they\n\n#  are installed from somewhere else.\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 478,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Packaging\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 493,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Print warnings at the end\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 512,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 525,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 33
    },
    "benchmarks/CMakeLists.txt" : {
      "ObjectId" : "5d8b3c1e26fdfe2cfc7da48d1ad56e308623771c",
      "LastModified" : "2017-02-09T19:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  CMake Config\n\n#\n\n#  Libosmium benchmarks\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Configure benchmarks\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/FindGem.cmake" : {
      "ObjectId" : "5d78a9026f0023037360d13cb348e2b2f145aed6",
      "LastModified" : "2017-09-16T10:18:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Author thomas.roehr@dfki.de\n\n#\n\n# Version 0.31 2017-09-15\n\n#       - find gem executable gem.cmd on Windows\n\n# Version 0.3 2013-07-02\n\n#       - rely on `gem content` to find library and header\n\n#       - introduce GEM_OS_PKG to allow search via pkgconfig\n\n# Version 0.2 2010-01-14\n\n#       - add support for searching for multiple gems\n\n# Version 0.1 2010-12-15\n\n# \t- support basic search functionality \n\n#       - tested to find rice\n\n#\n\n# OUTPUT:\n\n#\n\n# GEM_INCLUDE_DIRS\tAfter successful search contains the include directores\n\n#\n\n# GEM_LIBRARIES\t\tAfter successful search contains the full path of each found library\n\n#\n\n#\n\n# Usage: \n\n# set(GEM_DEBUG TRUE)\n\n# find_package(Gem COMPONENTS rice hoe)\n\n# include_directories(${GEM_INCLUDE_DIRS})\n\n# target_link_libraries(${GEM_LIBRARIES}\n\n#\n\n# in case pkg-config should be used to search for the os pkg, set GEM_OS_PKG, i.e.\n\n# set(GEM_OS_PKG TRUE)\n\n#\n\n# Check for how 'gem' should be called\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Making backward compatible\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If the gem is installed as a gem\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Use `gem content <gem-name>` to extract current information about installed gems\n\n# Store the information into ${GEM_LOCAL_INFO}\n",
        "Line" : 63,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Create a list from the output results of the gem command\n",
        "Line" : 88,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "# Convert so that only '/' Unix path separator are being using\n\n# needed to do proper regex matching\n",
        "Line" : 92,
        "CharPositionInLine" : 16
      },
      "6" : {
        "Text" : "# Identify library -- checking for a library in the gems 'lib' (sub)directory\n\n# Search for an existing library, but only within the gems folder\n",
        "Line" : 96,
        "CharPositionInLine" : 16
      },
      "7" : {
        "Text" : "# Identify headers\n\n# Checking for available headers in an include directory\n",
        "Line" : 106,
        "CharPositionInLine" : 16
      },
      "8" : {
        "Text" : "# Compact the lists\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/FindOsmium.cmake" : {
      "ObjectId" : "8c659f2662c016c056011bec3c92d0e1dd411465",
      "LastModified" : "2018-11-01T14:14:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------\n\n#\n\n#  FindOsmium.cmake\n\n#\n\n#  Find the Libosmium headers and, optionally, several components needed\n\n#  for different Libosmium functions.\n\n#\n\n#----------------------------------------------------------------------\n\n#\n\n#  Usage:\n\n#\n\n#    Copy this file somewhere into your project directory, where cmake can\n\n#    find it. Usually this will be a directory called \"cmake\" which you can\n\n#    add to the CMake module search path with the following line in your\n\n#    CMakeLists.txt:\n\n#\n\n#      list(APPEND CMAKE_MODULE_PATH \"${CMAKE_SOURCE_DIR}/cmake\")\n\n#\n\n#    Then add the following in your CMakeLists.txt:\n\n#\n\n#      find_package(Osmium [version] REQUIRED COMPONENTS <XXX>)\n\n#      include_directories(SYSTEM ${OSMIUM_INCLUDE_DIRS})\n\n#\n\n#    The version number is optional. If it is not set, any version of\n\n#    libosmium will do.\n\n#\n\n#    For the <XXX> substitute a space separated list of one or more of the\n\n#    following components:\n\n#\n\n#      pbf        - include libraries needed for PBF input and output\n\n#      xml        - include libraries needed for XML input and output\n\n#      io         - include libraries needed for any type of input/output\n\n#      geos       - include if you want to use any of the GEOS functions\n\n#      gdal       - include if you want to use any of the OGR functions\n\n#      proj       - include if you want to use any of the Proj.4 functions\n\n#      sparsehash - include if you use the sparsehash index\n\n#\n\n#    You can check for success with something like this:\n\n#\n\n#      if(NOT OSMIUM_FOUND)\n\n#          message(WARNING \"Libosmium not found!\\n\")\n\n#      endif()\n\n#\n\n#----------------------------------------------------------------------\n\n#\n\n#  Variables:\n\n#\n\n#    OSMIUM_FOUND         - True if Osmium found.\n\n#    OSMIUM_INCLUDE_DIRS  - Where to find include files.\n\n#    OSMIUM_XML_LIBRARIES - Libraries needed for XML I/O.\n\n#    OSMIUM_PBF_LIBRARIES - Libraries needed for PBF I/O.\n\n#    OSMIUM_IO_LIBRARIES  - Libraries needed for XML or PBF I/O.\n\n#    OSMIUM_LIBRARIES     - All libraries Osmium uses somewhere.\n\n#\n\n#----------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is the list of directories where we look for osmium includes.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 62,
        "CharPositionInLine" : 19
      },
      "3" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check libosmium version number\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#----------------------------------------------------------------------\n\n#\n\n#  Check for optional components\n\n#\n\n#----------------------------------------------------------------------\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#----------------------------------------------------------------------\n\n# Component 'io' is an alias for 'pbf' and 'xml'\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#----------------------------------------------------------------------\n\n# Component 'ogr' is an alias for 'gdal'\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#----------------------------------------------------------------------\n\n# Component 'pbf'\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#----------------------------------------------------------------------\n\n# Component 'xml'\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#----------------------------------------------------------------------\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#----------------------------------------------------------------------\n\n# Component 'geos'\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#----------------------------------------------------------------------\n\n# Component 'gdal' (alias 'ogr')\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#----------------------------------------------------------------------\n\n# Component 'proj'\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#----------------------------------------------------------------------\n\n# Component 'sparsehash'\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Find size of sparsetable::size_type. This does not work on older\n\n# CMake versions because they can do this check only in C, not in C++.\n",
        "Line" : 223,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# Sparsetable::size_type must be at least 8 bytes (64bit), otherwise\n\n# OSM object IDs will not fit.\n",
        "Line" : 236,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "#----------------------------------------------------------------------\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#----------------------------------------------------------------------\n\n#\n\n#  Check that all required libraries are available\n\n#\n\n#----------------------------------------------------------------------\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and the optional version check\n\n# and set OSMIUM_FOUND to TRUE if all listed variables are TRUE.\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#----------------------------------------------------------------------\n\n#\n\n#  A function for setting the -pthread option in compilers/linkers\n\n#\n\n#----------------------------------------------------------------------\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#----------------------------------------------------------------------\n\n#\n\n#  Add compiler flags\n\n#\n\n#----------------------------------------------------------------------\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Disable warning C4068: \"unknown pragma\" because we want it to ignore\n\n# pragmas for other compilers.\n",
        "Line" : 310,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Disable warning C4715: \"not all control paths return a value\" because\n\n# it generates too many false positives.\n",
        "Line" : 314,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Disable warning C4351: new behavior: elements of array '...' will be\n\n# default initialized. The new behaviour is correct and we don't support\n\n# old compilers anyway.\n",
        "Line" : 318,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Disable warning C4503: \"decorated name length exceeded, name was truncated\"\n\n# there are more than 150 of generated names in libosmium longer than 4096 symbols supported in MSVC\n",
        "Line" : 323,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# following only available from cmake 2.8.12:\n\n#   add_compile_options(-stdlib=libc++)\n\n# so using this instead:\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#----------------------------------------------------------------------\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# This is a set of recommended warning options that can be added when compiling\n\n# libosmium code.\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "cmake/FindProtozero.cmake" : {
      "ObjectId" : "ad16cabeb00e4a2d6cb381cf083491ba24ebeb6f",
      "LastModified" : "2017-12-19T10:18:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------\n\n#\n\n#  FindProtozero.cmake\n\n#\n\n#  Find the protozero headers.\n\n#\n\n#----------------------------------------------------------------------\n\n#\n\n#  Usage:\n\n#\n\n#    Copy this file somewhere into your project directory, where cmake can\n\n#    find it. Usually this will be a directory called \"cmake\" which you can\n\n#    add to the CMake module search path with the following line in your\n\n#    CMakeLists.txt:\n\n#\n\n#      list(APPEND CMAKE_MODULE_PATH \"${CMAKE_SOURCE_DIR}/cmake\")\n\n#\n\n#    Then add the following in your CMakeLists.txt:\n\n#\n\n#      find_package(Protozero [version] [REQUIRED])\n\n#      include_directories(SYSTEM ${PROTOZERO_INCLUDE_DIR})\n\n#\n\n#    The version number is optional. If it is not set, any version of\n\n#    protozero will do.\n\n#\n\n#      if(NOT PROTOZERO_FOUND)\n\n#          message(WARNING \"Protozero not found!\\n\")\n\n#      endif()\n\n#\n\n#----------------------------------------------------------------------\n\n#\n\n#  Variables:\n\n#\n\n#    PROTOZERO_FOUND        - True if Protozero was found.\n\n#    PROTOZERO_INCLUDE_DIR  - Where to find include files.\n\n#\n\n#----------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find include path\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check version number\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set(PROTOZERO_INCLUDE_DIRS \"${PROTOZERO_INCLUDE_DIR}\")\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#----------------------------------------------------------------------\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "5ea819b922067a855de557cdd1d65a5fafc0a039",
      "LastModified" : "2017-12-19T10:18:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  CMake Config\n\n#\n\n#  Libosmium documentation\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "c1498cc3522231344dfea158f327a335321a4cd2",
      "LastModified" : "2018-02-07T14:37:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  CMake Config\n\n#\n\n#  Libosmium examples\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Configure examples\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "49b3da87e55b23a619deb7a23a21c8203155f925",
      "LastModified" : "2018-11-25T19:56:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  CMake Config\n\n#\n\n#  Libosmium unit tests\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Otherwise GCC throws a lot of warnings for REQUIRE(...) from Catch v.1.2.1\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Define function for adding tests\n\n#\n\n#  add_unit_tests(group name [ENABLE_IF bool] [LIBS libs] [LABELS labels])\n\n#\n\n#  group  - test group (directory)\n\n#  name   - name of test\n\n#  bool   - boolean variable telling whether the test should be run (optional)\n\n#  libs   - lib or libs that should be used when compiling test (optional)\n\n#  labels - additional labels this test should get (optional)\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Prepare some variables so querying it for tests work properly.\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Add all tests.\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Check that all tests available in test/t/*/test_*.cpp are run.\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "test/data-tests/CMakeLists.txt" : {
      "ObjectId" : "135cc4a73b7294a4dee17a9aad5b1af975bff48a",
      "LastModified" : "2018-03-15T13:11:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  CMake Config\n\n#\n\n#  Libosmium data tests\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  testcases\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  xml\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  overview\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  multipolygon\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "test/data-tests/run-testdata-multipolygon.cmake" : {
      "ObjectId" : "be2cb395dda958c405bd63a08add873ea0dc05c8",
      "LastModified" : "2017-12-19T10:18:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Helper script that runs the 'multipolygon' test.\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Remove files that might be left over from previous run\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Create multipolygons from test data.\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Compare created multipolygons with reference data.\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "test/examples/CMakeLists.txt" : {
      "ObjectId" : "f6d427d399c2f81e258381ac6a168277888eaa2d",
      "LastModified" : "2017-12-19T10:18:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  CMake Config\n\n#\n\n#  Libosmium example tests\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is the list of all tests that are in the repository. It should be the\n\n# same as the configured list above, if not we'll find out about that below\n\n# and create a fatal error.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/examples/t/amenity_list/CMakeLists.txt" : {
      "ObjectId" : "3a99a8a6d8246a901b0a5c1c16d6a8b4f4cda391",
      "LastModified" : "2017-12-19T10:18:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/examples/t/area_test/CMakeLists.txt" : {
      "ObjectId" : "d92aa97523aa87fb763596473cb75c3fd3cd4c15",
      "LastModified" : "2018-02-07T13:50:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/examples/t/change_tags/CMakeLists.txt" : {
      "ObjectId" : "b054aa9be013cc7e3918c5a4e43954c8ea9ba5f6",
      "LastModified" : "2017-12-19T10:18:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/examples/t/convert/CMakeLists.txt" : {
      "ObjectId" : "ac6f84631f9289aa8b9ba41c049e1534217e3f17",
      "LastModified" : "2018-02-08T14:30:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Should give a warning when converting from history to non-history file\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Should fail when an unknown command line option is used\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/examples/t/count/CMakeLists.txt" : {
      "ObjectId" : "07ac6f4740552bc6d492e6c61290083038db01f3",
      "LastModified" : "2017-12-19T10:18:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/examples/t/create_pois/CMakeLists.txt" : {
      "ObjectId" : "a2aa7cb3e88244095879a35545d380c61cad4b31",
      "LastModified" : "2017-12-19T10:18:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/examples/t/debug/CMakeLists.txt" : {
      "ObjectId" : "6e2462c00a83e9c713205212a2be0bf855954632",
      "LastModified" : "2017-12-19T10:18:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/examples/t/dump_internal/CMakeLists.txt" : {
      "ObjectId" : "fa942ef1ad7f4ffefa11837f4ed8edad693151e9",
      "LastModified" : "2017-12-19T10:18:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/examples/t/filter_discussions/CMakeLists.txt" : {
      "ObjectId" : "21e8f7208787de1595f150de044c5f877e99307f",
      "LastModified" : "2017-12-19T10:18:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/examples/t/index_lookup/CMakeLists.txt" : {
      "ObjectId" : "ac4c434639deefef7861ffffa5a708b88aba2114",
      "LastModified" : "2017-12-19T10:18:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Fails with message if index file doesn't exist\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fails with message if --type option is not used\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fails with message if --type option is used with unknown type\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Fails with message when combining options --array and --list\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Fails with message when combining options --dump and --search\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "test/examples/t/location_cache/CMakeLists.txt" : {
      "ObjectId" : "8ca8b79e5c1a4ac6df27dba8a2bcedaa4ac11af1",
      "LastModified" : "2017-12-19T10:18:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Fails with message if index file doesn't exist\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/examples/t/pub_names/CMakeLists.txt" : {
      "ObjectId" : "3abefa39f7cdacbaf729d375dec4ae067801d6de",
      "LastModified" : "2017-12-19T10:18:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/examples/t/read/CMakeLists.txt" : {
      "ObjectId" : "ff2b7aa5896ef624a2d74b5ccd8b683177a50ad5",
      "LastModified" : "2017-12-19T10:18:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/examples/t/read_with_progress/CMakeLists.txt" : {
      "ObjectId" : "2bc088188b4a5b54132330900d82832ac48d2dd3",
      "LastModified" : "2017-12-19T10:18:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/examples/t/road_length/CMakeLists.txt" : {
      "ObjectId" : "6323f073195cbece5d50837c23943d593face95d",
      "LastModified" : "2017-12-19T10:18:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/examples/t/tiles/CMakeLists.txt" : {
      "ObjectId" : "5a4fbaa9e23ec7371377673ff2cb4698a965dc59",
      "LastModified" : "2017-12-19T10:18:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 27
  },
  "ElapsedTime" : 2005
}