{
  "Repository" : "21039143",
  "Revision" : "HEAD",
  "ObjectId" : "17973725186f23431fc421633c8940fb61803884",
  "CommitTime" : "2019-04-15T05:14:05Z",
  "Files" : {
    "docker/oso-image-inspector/centos7/image-inspector/Makefile" : {
      "ObjectId" : "d56fec4671b61c8e48081f5d6f37867078df5a7e",
      "LastModified" : "2017-11-28T15:21:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Old-skool build tools.\n\n#\n\n# Targets (see each target for more information):\n\n#   all: Build code.\n\n#   build: Build code.\n\n#   test-unit: Run unit tests.\n\n#   clean: Clean up.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build code.\n\n#\n\n# Example:\n\n#   make\n\n#   make all\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Remove all build artifacts.\n\n#\n\n# Example:\n\n#   make clean\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Verify code conventions are properly setup.\n\n#\n\n# Example:\n\n#   make verify\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Run unit tests.\n\n#\n\n# Args:\n\n#   WHAT: Directory names to test.  All *_test.go files under these\n\n#     directories will be run.  If not specified, \"everything\" will be tested.\n\n#   TESTS: Same as WHAT.\n\n#   GOFLAGS: Extra flags to pass to 'go' when building.\n\n#   TESTFLAGS: Extra flags that should only be passed to hack/test-go.sh\n\n#\n\n# Example:\n\n#   make test-unit\n\n#   make test-unit WHAT=pkg/build GOFLAGS=-v\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Install travis dependencies\n\n#\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "docker/oso-image-inspector/centos7/image-inspector/vendor/github.com/containers/image/Makefile" : {
      "ObjectId" : "a8b7457fa1dfb11b7c80db1f2c7b8c5169c0fd78",
      "LastModified" : "2018-04-11T16:45:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Which github repostiory and branch to use for testing with skopeo\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set SUDO=sudo to run container integration tests using sudo.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is not run as part of (make all), but Travis CI does run this.\n\n# Demonstarting a working version of skopeo (possibly with modified SKOPEO_REPO/SKOPEO_BRANCH, e.g.\n\n#    make test-skopeo SKOPEO_REPO=runcom/skopeo-1 SKOPEO_BRANCH=oci-3 SUDO=sudo\n\n# ) is a requirement before merging; note that Travis will only test\n\n# the master branch of the upstream repo.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# When this is running in travis, it will only check the travis commit range\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "docker/oso-image-inspector/centos7/image-inspector/vendor/github.com/containers/storage/Makefile" : {
      "ObjectId" : "c0bfe306830e44b4f86e77a8e0d0cee0ed5a8b85",
      "LastModified" : "2018-04-11T16:45:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# set the graph driver as the current graphdriver if not set\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## validate all checks, build linux binaries, run all tests\\ncross build non-linux binaries and generate archives\\nusing VMs\n",
        "Line" : 13,
        "CharPositionInLine" : 19
      },
      "2" : {
        "Text" : "## build using go on the host\n",
        "Line" : 16,
        "CharPositionInLine" : 28
      },
      "3" : {
        "Text" : "## build using gccgo on the host\n",
        "Line" : 19,
        "CharPositionInLine" : 21
      },
      "4" : {
        "Text" : "## cross build the binaries for darwin, freebsd and windows\\nusing VMs\n",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "5" : {
        "Text" : "## cross build the binary for windows using VMs\n",
        "Line" : 31,
        "CharPositionInLine" : 11
      },
      "6" : {
        "Text" : "## build the archives (.zip on windows and .tgz otherwise)\\ncontaining the binaries on the host\n",
        "Line" : 34,
        "CharPositionInLine" : 11
      },
      "7" : {
        "Text" : "## build the docs on the host\n",
        "Line" : 37,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "## build the gcc-go linux binaries using VMs\n",
        "Line" : 40,
        "CharPositionInLine" : 19
      },
      "9" : {
        "Text" : "## run the unit and integration tests using VMs\n",
        "Line" : 43,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "## run the unit tests using VMs\n",
        "Line" : 46,
        "CharPositionInLine" : 17
      },
      "11" : {
        "Text" : "## validate DCO, Seccomp profile generation, gofmt,\\n./pkg/ isolation, golint, tests, tomls, go vet and vendor\\nusing VMs\n",
        "Line" : 49,
        "CharPositionInLine" : 16
      },
      "12" : {
        "Text" : "# When this is running in travis, it will only check the travis commit range\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## this help\n",
        "Line" : 83,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "## / {gsub(\" \",\",\",$$1);gsub(\"\\\\\\\\n\",sprintf(\"\\n%22c\",\" \"), $$2);printf \"\\033[36m%-21s\\033[0m %s\\n\", $$1, $$2}' $(MAKEFILE_LIST)\n",
        "Line" : 84,
        "CharPositionInLine" : 48
      },
      "CommentCount" : 15
    },
    "docker/oso-image-inspector/centos7/image-inspector/vendor/github.com/docker/distribution/Makefile" : {
      "ObjectId" : "47b8f1d0b2539ae76e7a044759fa17f73d100c37",
      "LastModified" : "2018-04-11T16:45:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set an output prefix, which is the local directory if not specified\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Used to populate version variable in main package.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Allow turning off function inlining and variable registerization\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This only needs to be generated by hand when cutting full releases.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Required for go 1.5 to build\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Go files\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Package list\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Resolving binary dependencies for specific targets\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "docker/oso-image-inspector/centos7/image-inspector/vendor/github.com/docker/docker/Makefile" : {
      "ObjectId" : "81bde6b4f6ec9c8b05cd7505b2d572ae0d282762",
      "LastModified" : "2018-04-11T16:45:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# set the graph driver as the current graphdriver if not set\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# get OS/Arch of docker engine\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# env vars passed through directly to Docker's build scripts\n\n# to allow things like `make KEEPBUNDLE=1 binary` easily\n\n# `project/PACKAGERS.md` have some limited documentation of some of these\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# note: we _cannot_ add \"-e DOCKER_BUILDTAGS\" here because even if it's unset in the shell, that would shadow the \"ENV DOCKER_BUILDTAGS\" set in our Dockerfile, which is very important for our official builds\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# to allow `make BIND_DIR=. shell` or `make BIND_DIR= test`\n\n# (default to no bind mount if DOCKER_HOST is set)\n\n# note: BINDDIR is supported for backwards-compatibility here\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This allows the test suite to be able to run without worrying about the underlying fs used by the container running the daemon (e.g. aufs-on-aufs), so long as the host running the container is running a supported fs.\n\n# The volume will be cleaned up when the container is removed due to `--rm`.\n\n# Note that `BIND_DIR` will already be set to `bundles` if `DOCKER_HOST` is not set (see above BIND_DIR line), in such case this will do nothing since `DOCKER_MOUNT` will already be set.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# enable .go-pkg-cache if DOCKER_INCREMENTAL_BINARY and DOCKER_MOUNT (i.e.DOCKER_HOST) are set\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## \"} /^[a-zA-Z_-]+:.*?## / {sub(\"\\\\\\\\n\",sprintf(\"\\n%22c\",\" \"), $$2);printf \"\\033[36m%-20s\\033[0m %s\\n\", $$1, $$2}' $(MAKEFILE_LIST)\n",
        "Line" : 97,
        "CharPositionInLine" : 24
      },
      "8" : {
        "Text" : "## install the linux binaries\n",
        "Line" : 102,
        "CharPositionInLine" : 9
      },
      "9" : {
        "Text" : "## Generate man pages from go source and markdown\n",
        "Line" : 105,
        "CharPositionInLine" : 10
      },
      "10" : {
        "Text" : "## build the rpm packages\n",
        "Line" : 111,
        "CharPositionInLine" : 11
      },
      "11" : {
        "Text" : "## run the docker daemon in a container\n",
        "Line" : 114,
        "CharPositionInLine" : 11
      },
      "12" : {
        "Text" : "## start a shell inside the build env\n",
        "Line" : 117,
        "CharPositionInLine" : 13
      },
      "13" : {
        "Text" : "## run the unit, integration and docker-py tests\n",
        "Line" : 120,
        "CharPositionInLine" : 12
      },
      "14" : {
        "Text" : "## run the docker-py tests\n",
        "Line" : 123,
        "CharPositionInLine" : 22
      },
      "15" : {
        "Text" : "## run the integration tests\n",
        "Line" : 126,
        "CharPositionInLine" : 28
      },
      "16" : {
        "Text" : "## run the unit tests\n",
        "Line" : 129,
        "CharPositionInLine" : 17
      },
      "17" : {
        "Text" : "## build the archives (.zip on windows and .tgz\\notherwise) containing the binaries\n",
        "Line" : 132,
        "CharPositionInLine" : 11
      },
      "18" : {
        "Text" : "## validate DCO, Seccomp profile generation, gofmt,\\n./pkg/ isolation, golint, tests, tomls, go vet and vendor\n",
        "Line" : 135,
        "CharPositionInLine" : 16
      },
      "19" : {
        "Text" : "## cross build the binary for windows\n",
        "Line" : 138,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 20,
      "Errorlog" : "line 54:118 token recognition error at: '\"$(CURDIR)/$(PKGCACHE_DIR)/\\1'\nline 100:82 token recognition error at: '\\1'\n"
    },
    "docker/oso-image-inspector/centos7/image-inspector/vendor/github.com/fsouza/go-dockerclient/Makefile" : {
      "ObjectId" : "dd8c73b1b7936af2f9804d5d6725b894ee57df8e",
      "LastModified" : "2018-04-11T16:45:39Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "docker/oso-image-inspector/centos7/image-inspector/vendor/github.com/opencontainers/image-spec/Makefile" : {
      "ObjectId" : "8eddf64fb12512cdcf9b038e5f3c0462b02a81e3",
      "LastModified" : "2018-04-11T16:45:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# These docs are in an order that determines how they show up in the PDF/HTML docs.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# When this is running in travis, it will only check the travis commit range\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "docker/oso-image-inspector/centos7/image-inspector/vendor/github.com/opencontainers/runc/Makefile" : {
      "ObjectId" : "5de10d0ba98b6612cbb245ee4175b45e6962f044",
      "LastModified" : "2018-04-11T16:45:39Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "docker/oso-image-inspector/centos7/image-inspector/vendor/github.com/opencontainers/selinux/Makefile" : {
      "ObjectId" : "33ac4478b1b013b6281f32862ab3cdbeba078c18",
      "LastModified" : "2018-04-11T16:45:39Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "docker/oso-image-inspector/centos7/image-inspector/vendor/golang.org/x/net/http2/Makefile" : {
      "ObjectId" : "55fd826f77bd99fac0e546e42b921ac5ca1e9d12",
      "LastModified" : "2018-04-11T16:45:39Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "docker/oso-image-inspector/rhel7/image-inspector/Makefile" : {
      "ObjectId" : "d56fec4671b61c8e48081f5d6f37867078df5a7e",
      "LastModified" : "2018-04-11T16:45:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Old-skool build tools.\n\n#\n\n# Targets (see each target for more information):\n\n#   all: Build code.\n\n#   build: Build code.\n\n#   test-unit: Run unit tests.\n\n#   clean: Clean up.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build code.\n\n#\n\n# Example:\n\n#   make\n\n#   make all\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Remove all build artifacts.\n\n#\n\n# Example:\n\n#   make clean\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Verify code conventions are properly setup.\n\n#\n\n# Example:\n\n#   make verify\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Run unit tests.\n\n#\n\n# Args:\n\n#   WHAT: Directory names to test.  All *_test.go files under these\n\n#     directories will be run.  If not specified, \"everything\" will be tested.\n\n#   TESTS: Same as WHAT.\n\n#   GOFLAGS: Extra flags to pass to 'go' when building.\n\n#   TESTFLAGS: Extra flags that should only be passed to hack/test-go.sh\n\n#\n\n# Example:\n\n#   make test-unit\n\n#   make test-unit WHAT=pkg/build GOFLAGS=-v\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Install travis dependencies\n\n#\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "docker/oso-image-inspector/rhel7/image-inspector/vendor/github.com/containers/image/Makefile" : {
      "ObjectId" : "a8b7457fa1dfb11b7c80db1f2c7b8c5169c0fd78",
      "LastModified" : "2018-04-11T16:45:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Which github repostiory and branch to use for testing with skopeo\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set SUDO=sudo to run container integration tests using sudo.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is not run as part of (make all), but Travis CI does run this.\n\n# Demonstarting a working version of skopeo (possibly with modified SKOPEO_REPO/SKOPEO_BRANCH, e.g.\n\n#    make test-skopeo SKOPEO_REPO=runcom/skopeo-1 SKOPEO_BRANCH=oci-3 SUDO=sudo\n\n# ) is a requirement before merging; note that Travis will only test\n\n# the master branch of the upstream repo.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# When this is running in travis, it will only check the travis commit range\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "docker/oso-image-inspector/rhel7/image-inspector/vendor/github.com/containers/storage/Makefile" : {
      "ObjectId" : "c0bfe306830e44b4f86e77a8e0d0cee0ed5a8b85",
      "LastModified" : "2018-04-11T16:45:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# set the graph driver as the current graphdriver if not set\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## validate all checks, build linux binaries, run all tests\\ncross build non-linux binaries and generate archives\\nusing VMs\n",
        "Line" : 13,
        "CharPositionInLine" : 19
      },
      "2" : {
        "Text" : "## build using go on the host\n",
        "Line" : 16,
        "CharPositionInLine" : 28
      },
      "3" : {
        "Text" : "## build using gccgo on the host\n",
        "Line" : 19,
        "CharPositionInLine" : 21
      },
      "4" : {
        "Text" : "## cross build the binaries for darwin, freebsd and windows\\nusing VMs\n",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "5" : {
        "Text" : "## cross build the binary for windows using VMs\n",
        "Line" : 31,
        "CharPositionInLine" : 11
      },
      "6" : {
        "Text" : "## build the archives (.zip on windows and .tgz otherwise)\\ncontaining the binaries on the host\n",
        "Line" : 34,
        "CharPositionInLine" : 11
      },
      "7" : {
        "Text" : "## build the docs on the host\n",
        "Line" : 37,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "## build the gcc-go linux binaries using VMs\n",
        "Line" : 40,
        "CharPositionInLine" : 19
      },
      "9" : {
        "Text" : "## run the unit and integration tests using VMs\n",
        "Line" : 43,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "## run the unit tests using VMs\n",
        "Line" : 46,
        "CharPositionInLine" : 17
      },
      "11" : {
        "Text" : "## validate DCO, Seccomp profile generation, gofmt,\\n./pkg/ isolation, golint, tests, tomls, go vet and vendor\\nusing VMs\n",
        "Line" : 49,
        "CharPositionInLine" : 16
      },
      "12" : {
        "Text" : "# When this is running in travis, it will only check the travis commit range\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## this help\n",
        "Line" : 83,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "## / {gsub(\" \",\",\",$$1);gsub(\"\\\\\\\\n\",sprintf(\"\\n%22c\",\" \"), $$2);printf \"\\033[36m%-21s\\033[0m %s\\n\", $$1, $$2}' $(MAKEFILE_LIST)\n",
        "Line" : 84,
        "CharPositionInLine" : 48
      },
      "CommentCount" : 15
    },
    "docker/oso-image-inspector/rhel7/image-inspector/vendor/github.com/docker/distribution/Makefile" : {
      "ObjectId" : "47b8f1d0b2539ae76e7a044759fa17f73d100c37",
      "LastModified" : "2018-04-11T16:45:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set an output prefix, which is the local directory if not specified\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Used to populate version variable in main package.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Allow turning off function inlining and variable registerization\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This only needs to be generated by hand when cutting full releases.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Required for go 1.5 to build\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Go files\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Package list\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Resolving binary dependencies for specific targets\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "docker/oso-image-inspector/rhel7/image-inspector/vendor/github.com/docker/docker/Makefile" : {
      "ObjectId" : "81bde6b4f6ec9c8b05cd7505b2d572ae0d282762",
      "LastModified" : "2018-04-11T16:45:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# set the graph driver as the current graphdriver if not set\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# get OS/Arch of docker engine\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# env vars passed through directly to Docker's build scripts\n\n# to allow things like `make KEEPBUNDLE=1 binary` easily\n\n# `project/PACKAGERS.md` have some limited documentation of some of these\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# note: we _cannot_ add \"-e DOCKER_BUILDTAGS\" here because even if it's unset in the shell, that would shadow the \"ENV DOCKER_BUILDTAGS\" set in our Dockerfile, which is very important for our official builds\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# to allow `make BIND_DIR=. shell` or `make BIND_DIR= test`\n\n# (default to no bind mount if DOCKER_HOST is set)\n\n# note: BINDDIR is supported for backwards-compatibility here\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This allows the test suite to be able to run without worrying about the underlying fs used by the container running the daemon (e.g. aufs-on-aufs), so long as the host running the container is running a supported fs.\n\n# The volume will be cleaned up when the container is removed due to `--rm`.\n\n# Note that `BIND_DIR` will already be set to `bundles` if `DOCKER_HOST` is not set (see above BIND_DIR line), in such case this will do nothing since `DOCKER_MOUNT` will already be set.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# enable .go-pkg-cache if DOCKER_INCREMENTAL_BINARY and DOCKER_MOUNT (i.e.DOCKER_HOST) are set\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## \"} /^[a-zA-Z_-]+:.*?## / {sub(\"\\\\\\\\n\",sprintf(\"\\n%22c\",\" \"), $$2);printf \"\\033[36m%-20s\\033[0m %s\\n\", $$1, $$2}' $(MAKEFILE_LIST)\n",
        "Line" : 97,
        "CharPositionInLine" : 24
      },
      "8" : {
        "Text" : "## install the linux binaries\n",
        "Line" : 102,
        "CharPositionInLine" : 9
      },
      "9" : {
        "Text" : "## Generate man pages from go source and markdown\n",
        "Line" : 105,
        "CharPositionInLine" : 10
      },
      "10" : {
        "Text" : "## build the rpm packages\n",
        "Line" : 111,
        "CharPositionInLine" : 11
      },
      "11" : {
        "Text" : "## run the docker daemon in a container\n",
        "Line" : 114,
        "CharPositionInLine" : 11
      },
      "12" : {
        "Text" : "## start a shell inside the build env\n",
        "Line" : 117,
        "CharPositionInLine" : 13
      },
      "13" : {
        "Text" : "## run the unit, integration and docker-py tests\n",
        "Line" : 120,
        "CharPositionInLine" : 12
      },
      "14" : {
        "Text" : "## run the docker-py tests\n",
        "Line" : 123,
        "CharPositionInLine" : 22
      },
      "15" : {
        "Text" : "## run the integration tests\n",
        "Line" : 126,
        "CharPositionInLine" : 28
      },
      "16" : {
        "Text" : "## run the unit tests\n",
        "Line" : 129,
        "CharPositionInLine" : 17
      },
      "17" : {
        "Text" : "## build the archives (.zip on windows and .tgz\\notherwise) containing the binaries\n",
        "Line" : 132,
        "CharPositionInLine" : 11
      },
      "18" : {
        "Text" : "## validate DCO, Seccomp profile generation, gofmt,\\n./pkg/ isolation, golint, tests, tomls, go vet and vendor\n",
        "Line" : 135,
        "CharPositionInLine" : 16
      },
      "19" : {
        "Text" : "## cross build the binary for windows\n",
        "Line" : 138,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 20,
      "Errorlog" : "line 54:118 token recognition error at: '\"$(CURDIR)/$(PKGCACHE_DIR)/\\1'\nline 100:82 token recognition error at: '\\1'\n"
    },
    "docker/oso-image-inspector/rhel7/image-inspector/vendor/github.com/fsouza/go-dockerclient/Makefile" : {
      "ObjectId" : "dd8c73b1b7936af2f9804d5d6725b894ee57df8e",
      "LastModified" : "2018-04-11T16:45:39Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "docker/oso-image-inspector/rhel7/image-inspector/vendor/github.com/opencontainers/image-spec/Makefile" : {
      "ObjectId" : "8eddf64fb12512cdcf9b038e5f3c0462b02a81e3",
      "LastModified" : "2018-04-11T16:45:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# These docs are in an order that determines how they show up in the PDF/HTML docs.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# When this is running in travis, it will only check the travis commit range\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "docker/oso-image-inspector/rhel7/image-inspector/vendor/github.com/opencontainers/runc/Makefile" : {
      "ObjectId" : "5de10d0ba98b6612cbb245ee4175b45e6962f044",
      "LastModified" : "2018-04-11T16:45:39Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "docker/oso-image-inspector/rhel7/image-inspector/vendor/github.com/opencontainers/selinux/Makefile" : {
      "ObjectId" : "33ac4478b1b013b6281f32862ab3cdbeba078c18",
      "LastModified" : "2018-04-11T16:45:39Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "docker/oso-image-inspector/rhel7/image-inspector/vendor/golang.org/x/net/http2/Makefile" : {
      "ObjectId" : "55fd826f77bd99fac0e546e42b921ac5ca1e9d12",
      "LastModified" : "2018-04-11T16:45:39Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "docker/oso-image-inspector/src/image-inspector/Makefile" : {
      "ObjectId" : "d56fec4671b61c8e48081f5d6f37867078df5a7e",
      "LastModified" : "2018-04-11T16:45:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Old-skool build tools.\n\n#\n\n# Targets (see each target for more information):\n\n#   all: Build code.\n\n#   build: Build code.\n\n#   test-unit: Run unit tests.\n\n#   clean: Clean up.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build code.\n\n#\n\n# Example:\n\n#   make\n\n#   make all\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Remove all build artifacts.\n\n#\n\n# Example:\n\n#   make clean\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Verify code conventions are properly setup.\n\n#\n\n# Example:\n\n#   make verify\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Run unit tests.\n\n#\n\n# Args:\n\n#   WHAT: Directory names to test.  All *_test.go files under these\n\n#     directories will be run.  If not specified, \"everything\" will be tested.\n\n#   TESTS: Same as WHAT.\n\n#   GOFLAGS: Extra flags to pass to 'go' when building.\n\n#   TESTFLAGS: Extra flags that should only be passed to hack/test-go.sh\n\n#\n\n# Example:\n\n#   make test-unit\n\n#   make test-unit WHAT=pkg/build GOFLAGS=-v\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Install travis dependencies\n\n#\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "docker/oso-image-inspector/src/image-inspector/vendor/github.com/containers/image/Makefile" : {
      "ObjectId" : "a8b7457fa1dfb11b7c80db1f2c7b8c5169c0fd78",
      "LastModified" : "2018-04-11T16:45:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Which github repostiory and branch to use for testing with skopeo\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set SUDO=sudo to run container integration tests using sudo.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is not run as part of (make all), but Travis CI does run this.\n\n# Demonstarting a working version of skopeo (possibly with modified SKOPEO_REPO/SKOPEO_BRANCH, e.g.\n\n#    make test-skopeo SKOPEO_REPO=runcom/skopeo-1 SKOPEO_BRANCH=oci-3 SUDO=sudo\n\n# ) is a requirement before merging; note that Travis will only test\n\n# the master branch of the upstream repo.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# When this is running in travis, it will only check the travis commit range\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "docker/oso-image-inspector/src/image-inspector/vendor/github.com/containers/storage/Makefile" : {
      "ObjectId" : "c0bfe306830e44b4f86e77a8e0d0cee0ed5a8b85",
      "LastModified" : "2018-04-11T16:45:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# set the graph driver as the current graphdriver if not set\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## validate all checks, build linux binaries, run all tests\\ncross build non-linux binaries and generate archives\\nusing VMs\n",
        "Line" : 13,
        "CharPositionInLine" : 19
      },
      "2" : {
        "Text" : "## build using go on the host\n",
        "Line" : 16,
        "CharPositionInLine" : 28
      },
      "3" : {
        "Text" : "## build using gccgo on the host\n",
        "Line" : 19,
        "CharPositionInLine" : 21
      },
      "4" : {
        "Text" : "## cross build the binaries for darwin, freebsd and windows\\nusing VMs\n",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "5" : {
        "Text" : "## cross build the binary for windows using VMs\n",
        "Line" : 31,
        "CharPositionInLine" : 11
      },
      "6" : {
        "Text" : "## build the archives (.zip on windows and .tgz otherwise)\\ncontaining the binaries on the host\n",
        "Line" : 34,
        "CharPositionInLine" : 11
      },
      "7" : {
        "Text" : "## build the docs on the host\n",
        "Line" : 37,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "## build the gcc-go linux binaries using VMs\n",
        "Line" : 40,
        "CharPositionInLine" : 19
      },
      "9" : {
        "Text" : "## run the unit and integration tests using VMs\n",
        "Line" : 43,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "## run the unit tests using VMs\n",
        "Line" : 46,
        "CharPositionInLine" : 17
      },
      "11" : {
        "Text" : "## validate DCO, Seccomp profile generation, gofmt,\\n./pkg/ isolation, golint, tests, tomls, go vet and vendor\\nusing VMs\n",
        "Line" : 49,
        "CharPositionInLine" : 16
      },
      "12" : {
        "Text" : "# When this is running in travis, it will only check the travis commit range\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## this help\n",
        "Line" : 83,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "## / {gsub(\" \",\",\",$$1);gsub(\"\\\\\\\\n\",sprintf(\"\\n%22c\",\" \"), $$2);printf \"\\033[36m%-21s\\033[0m %s\\n\", $$1, $$2}' $(MAKEFILE_LIST)\n",
        "Line" : 84,
        "CharPositionInLine" : 48
      },
      "CommentCount" : 15
    },
    "docker/oso-image-inspector/src/image-inspector/vendor/github.com/docker/distribution/Makefile" : {
      "ObjectId" : "47b8f1d0b2539ae76e7a044759fa17f73d100c37",
      "LastModified" : "2018-04-11T16:45:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set an output prefix, which is the local directory if not specified\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Used to populate version variable in main package.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Allow turning off function inlining and variable registerization\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This only needs to be generated by hand when cutting full releases.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Required for go 1.5 to build\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Go files\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Package list\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Resolving binary dependencies for specific targets\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "docker/oso-image-inspector/src/image-inspector/vendor/github.com/docker/docker/Makefile" : {
      "ObjectId" : "81bde6b4f6ec9c8b05cd7505b2d572ae0d282762",
      "LastModified" : "2018-04-11T16:45:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# set the graph driver as the current graphdriver if not set\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# get OS/Arch of docker engine\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# env vars passed through directly to Docker's build scripts\n\n# to allow things like `make KEEPBUNDLE=1 binary` easily\n\n# `project/PACKAGERS.md` have some limited documentation of some of these\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# note: we _cannot_ add \"-e DOCKER_BUILDTAGS\" here because even if it's unset in the shell, that would shadow the \"ENV DOCKER_BUILDTAGS\" set in our Dockerfile, which is very important for our official builds\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# to allow `make BIND_DIR=. shell` or `make BIND_DIR= test`\n\n# (default to no bind mount if DOCKER_HOST is set)\n\n# note: BINDDIR is supported for backwards-compatibility here\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This allows the test suite to be able to run without worrying about the underlying fs used by the container running the daemon (e.g. aufs-on-aufs), so long as the host running the container is running a supported fs.\n\n# The volume will be cleaned up when the container is removed due to `--rm`.\n\n# Note that `BIND_DIR` will already be set to `bundles` if `DOCKER_HOST` is not set (see above BIND_DIR line), in such case this will do nothing since `DOCKER_MOUNT` will already be set.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# enable .go-pkg-cache if DOCKER_INCREMENTAL_BINARY and DOCKER_MOUNT (i.e.DOCKER_HOST) are set\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## \"} /^[a-zA-Z_-]+:.*?## / {sub(\"\\\\\\\\n\",sprintf(\"\\n%22c\",\" \"), $$2);printf \"\\033[36m%-20s\\033[0m %s\\n\", $$1, $$2}' $(MAKEFILE_LIST)\n",
        "Line" : 97,
        "CharPositionInLine" : 24
      },
      "8" : {
        "Text" : "## install the linux binaries\n",
        "Line" : 102,
        "CharPositionInLine" : 9
      },
      "9" : {
        "Text" : "## Generate man pages from go source and markdown\n",
        "Line" : 105,
        "CharPositionInLine" : 10
      },
      "10" : {
        "Text" : "## build the rpm packages\n",
        "Line" : 111,
        "CharPositionInLine" : 11
      },
      "11" : {
        "Text" : "## run the docker daemon in a container\n",
        "Line" : 114,
        "CharPositionInLine" : 11
      },
      "12" : {
        "Text" : "## start a shell inside the build env\n",
        "Line" : 117,
        "CharPositionInLine" : 13
      },
      "13" : {
        "Text" : "## run the unit, integration and docker-py tests\n",
        "Line" : 120,
        "CharPositionInLine" : 12
      },
      "14" : {
        "Text" : "## run the docker-py tests\n",
        "Line" : 123,
        "CharPositionInLine" : 22
      },
      "15" : {
        "Text" : "## run the integration tests\n",
        "Line" : 126,
        "CharPositionInLine" : 28
      },
      "16" : {
        "Text" : "## run the unit tests\n",
        "Line" : 129,
        "CharPositionInLine" : 17
      },
      "17" : {
        "Text" : "## build the archives (.zip on windows and .tgz\\notherwise) containing the binaries\n",
        "Line" : 132,
        "CharPositionInLine" : 11
      },
      "18" : {
        "Text" : "## validate DCO, Seccomp profile generation, gofmt,\\n./pkg/ isolation, golint, tests, tomls, go vet and vendor\n",
        "Line" : 135,
        "CharPositionInLine" : 16
      },
      "19" : {
        "Text" : "## cross build the binary for windows\n",
        "Line" : 138,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 20,
      "Errorlog" : "line 54:118 token recognition error at: '\"$(CURDIR)/$(PKGCACHE_DIR)/\\1'\nline 100:82 token recognition error at: '\\1'\n"
    },
    "docker/oso-image-inspector/src/image-inspector/vendor/github.com/fsouza/go-dockerclient/Makefile" : {
      "ObjectId" : "dd8c73b1b7936af2f9804d5d6725b894ee57df8e",
      "LastModified" : "2018-04-11T16:45:39Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "docker/oso-image-inspector/src/image-inspector/vendor/github.com/opencontainers/image-spec/Makefile" : {
      "ObjectId" : "8eddf64fb12512cdcf9b038e5f3c0462b02a81e3",
      "LastModified" : "2018-04-11T16:45:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# These docs are in an order that determines how they show up in the PDF/HTML docs.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# When this is running in travis, it will only check the travis commit range\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "docker/oso-image-inspector/src/image-inspector/vendor/github.com/opencontainers/runc/Makefile" : {
      "ObjectId" : "5de10d0ba98b6612cbb245ee4175b45e6962f044",
      "LastModified" : "2018-04-11T16:45:39Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "docker/oso-image-inspector/src/image-inspector/vendor/github.com/opencontainers/selinux/Makefile" : {
      "ObjectId" : "33ac4478b1b013b6281f32862ab3cdbeba078c18",
      "LastModified" : "2018-04-11T16:45:39Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "docker/oso-image-inspector/src/image-inspector/vendor/golang.org/x/net/http2/Makefile" : {
      "ObjectId" : "55fd826f77bd99fac0e546e42b921ac5ca1e9d12",
      "LastModified" : "2018-04-11T16:45:39Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 30
  },
  "ElapsedTime" : 3594
}