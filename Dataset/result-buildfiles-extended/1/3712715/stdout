{
  "Repository" : "3712715",
  "Revision" : "HEAD",
  "ObjectId" : "3c26085acbf46c920bfd103b6a370bdf7b114f52",
  "CommitTime" : "2019-03-13T09:01:54Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "dc06940823c3c7ac5f9660e02676cfbc786c5bef",
      "LastModified" : "2018-04-06T08:15:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set up project\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# general stuff\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# guess dune-common build dir\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#find dune-common and set the module path\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#include the dune macros\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# start a dune project with information from dune.module\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Disable the upstream testing magic, that builds tests during \"make test\"\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# To have enable all packages work with cmake-2.8, the module\n\n# libraries need to be added before the call to dune_enable_all_packages()\n\n# With cmake 3.1, one would use the MODULE_LIBRARIES argument of\n\n# dune_enable_all_packages() instead.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Use the enable all packages feature\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# finalize the dune project, e.g. generating config.h etc.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/modules/CMakeLists.txt" : {
      "ObjectId" : "cc0c34e6a1a9ae400d882c8ea1e5d3c174cc32fb",
      "LastModified" : "2016-06-29T08:58:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/modules/CorrectWindowsPaths.cmake" : {
      "ObjectId" : "849b4740351b6881f36673875c141a8dfb2b7f8c",
      "LastModified" : "2015-06-14T20:57:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Downloaded from https://github.com/jedbrown/cmake-modules/blob/master/CorrectWindowsPaths.cmake\n\n# Last update 2015/06/14\n\n# Licenced under CMake's BSD Licence\n\n#\n\n#\n\n# CorrectWindowsPaths - this module defines one macro\n\n#\n\n# CONVERT_CYGWIN_PATH( PATH )\n\n#  This uses the command cygpath (provided by cygwin) to convert\n\n#  unix-style paths into paths useable by cmake on windows\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/DunePdelabMacros.cmake" : {
      "ObjectId" : "b452cc1002e1f5e3ed6e54d8490ce7b01af1ad9f",
      "LastModified" : "2016-06-29T08:58:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Trying to run a sequential UG in a parallel PDELab application\n\n# will result in very subtle errors. We therefore issue a warning\n\n# and set a preprocessor variable to give meaningful error messages.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindPETSc.cmake" : {
      "ObjectId" : "97421fdcea0909f62638c23f7cf1757705297594",
      "LastModified" : "2015-06-14T20:57:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Downloaded from https://github.com/jedbrown/cmake-modules/blob/master/FindPETSc.cmake\n\n# Last update 2015/06/14\n\n# Licenced under CMake's BSD Licence\n\n#\n\n#\n\n#\n\n# - Try to find PETSc\n\n# Once done this will define\n\n#\n\n#  PETSC_FOUND        - system has PETSc\n\n#  PETSC_INCLUDES     - the PETSc include directories\n\n#  PETSC_LIBRARIES    - Link these to use PETSc\n\n#  PETSC_COMPILER     - Compiler used by PETSc, helpful to find a compatible MPI\n\n#  PETSC_DEFINITIONS  - Compiler switches for using PETSc\n\n#  PETSC_MPIEXEC      - Executable for running MPI programs\n\n#  PETSC_VERSION      - Version string (MAJOR.MINOR.SUBMINOR)\n\n#\n\n#  Usage:\n\n#  find_package(PETSc COMPONENTS CXX)  - required if build --with-clanguage=C++ --with-c-support=0\n\n#  find_package(PETSc COMPONENTS C)    - standard behavior of checking build using a C compiler\n\n#  find_package(PETSc)                 - same as above\n\n#\n\n# Setting these changes the behavior of the search\n\n#  PETSC_DIR - directory in which PETSc resides\n\n#  PETSC_ARCH - build architecture\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Right now, this is designed for compatability with the --with-clanguage option, so\n\n# only allow one item in the components list.\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# This is a stub for allowing multiple components should that time ever come. Perhaps\n\n# to also test Fortran bindings?\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# break line into three fields (the first is always \"#define\")\n",
        "Line" : 60,
        "CharPositionInLine" : 53
      },
      "4" : {
        "Text" : "# Also in local scope so we have access below\n",
        "Line" : 64,
        "CharPositionInLine" : 34
      },
      "5" : {
        "Text" : "# make dev version compare higher than any patch level of a released version\n",
        "Line" : 69,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Debian paths\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# MacPorts path\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# If set, use environment variable first\n\n# Debian defaults\n",
        "Line" : 94,
        "CharPositionInLine" : 39
      },
      "9" : {
        "Text" : "# Determine whether the PETSc layout is old-style (through 2.3.3) or\n\n# new-style (>= 3.0.0)\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# > 3.5\n",
        "Line" : 121,
        "CharPositionInLine" : 71
      },
      "11" : {
        "Text" : "# > 2.3.3\n",
        "Line" : 124,
        "CharPositionInLine" : 67
      },
      "12" : {
        "Text" : "# <= 2.3.3\n",
        "Line" : 127,
        "CharPositionInLine" : 63
      },
      "13" : {
        "Text" : "# Put variables into environment since they are needed to get\n\n# configuration (petscvariables) in the PETSc makefile\n",
        "Line" : 137,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# A temporary makefile to probe the PETSc configuration\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# We are done with the temporary Makefile, calling PETSC_GET_VARIABLE after this point is invalid!\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Extract include paths and libraries from compile command line\n",
        "Line" : 171,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#on windows we need to make sure we're linking against the right\n\n#runtime library\n",
        "Line" : 174,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Clear any stale value, if we got here, we need to find it again\n",
        "Line" : 200,
        "CharPositionInLine" : 76
      },
      "19" : {
        "Text" : "#windows expects \"libfoo\", linux expects \"foo\"\n",
        "Line" : 202,
        "CharPositionInLine" : 31
      },
      "20" : {
        "Text" : "# Look for petscvec first, if it doesn't exist, we must be using single-library\n",
        "Line" : 211,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# libpetscsys is called libpetsc prior to 3.1 (when single-library was introduced)\n",
        "Line" : 214,
        "CharPositionInLine" : 47
      },
      "22" : {
        "Text" : "# There is no libpetscvec\n",
        "Line" : 231,
        "CharPositionInLine" : 70
      },
      "23" : {
        "Text" : "# Minimal includes fail, see if just adding full includes fixes it\n",
        "Line" : 288,
        "CharPositionInLine" : 33
      },
      "24" : {
        "Text" : "# It does, we just need all the includes (\n",
        "Line" : 290,
        "CharPositionInLine" : 33
      },
      "25" : {
        "Text" : "# We are going to need to link the external libs explicitly\n",
        "Line" : 293,
        "CharPositionInLine" : 35
      },
      "26" : {
        "Text" : "# It looks like we really need everything, should have listened to Matt\n",
        "Line" : 303,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# We fail anyways\n",
        "Line" : 306,
        "CharPositionInLine" : 29
      },
      "28" : {
        "Text" : "# We fail anyways\n",
        "Line" : 308,
        "CharPositionInLine" : 31
      },
      "29" : {
        "Text" : "# We do an out-of-source build so __FILE__ will be an absolute path, hence __INSDIR__ is superfluous\n",
        "Line" : 315,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Sometimes this can be used to assist FindMPI.cmake\n",
        "Line" : 321,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Note that we have forced values for all these choices.  If you\n\n# change these, you are telling the system to trust you that they\n\n# work.  It is likely that you will end up with a broken build.\n",
        "Line" : 326,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 32
    },
    "cmake/modules/FindPackageMultipass.cmake" : {
      "ObjectId" : "710d93f6407d733774ca1e8dfc9f12cd7453f17c",
      "LastModified" : "2015-06-14T20:57:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Downloaded from https://github.com/jedbrown/cmake-modules/blob/master/FindPackageMultipass.cmake\n\n# Last update 2015/06/14\n\n# Licenced under CMake's BSD Licence\n\n#\n\n#\n\n# PackageMultipass - this module defines two macros\n\n#\n\n# FIND_PACKAGE_MULTIPASS (Name CURRENT\n\n#  STATES VAR0 VAR1 ...\n\n#  DEPENDENTS DEP0 DEP1 ...)\n\n#\n\n#  This function creates a cache entry <UPPERCASED-Name>_CURRENT which\n\n#  the user can set to \"NO\" to trigger a reconfiguration of the package.\n\n#  The first time this function is called, the values of\n\n#  <UPPERCASED-Name>_VAR0, ... are saved.  If <UPPERCASED-Name>_CURRENT\n\n#  is false or if any STATE has changed since the last time\n\n#  FIND_PACKAGE_MULTIPASS() was called, then CURRENT will be set to \"NO\",\n\n#  otherwise CURRENT will be \"YES\".  IF not CURRENT, then\n\n#  <UPPERCASED-Name>_DEP0, ... will be FORCED to NOTFOUND.\n\n#  Example:\n\n#    find_path (FOO_DIR include/foo.h)\n\n#    FIND_PACKAGE_MULTIPASS (Foo foo_current\n\n#      STATES DIR\n\n#      DEPENDENTS INCLUDES LIBRARIES)\n\n#    if (NOT foo_current)\n\n#      # Make temporary files, run programs, etc, to determine FOO_INCLUDES and FOO_LIBRARIES\n\n#    endif (NOT foo_current)\n\n#\n\n# MULTIPASS_SOURCE_RUNS (Name INCLUDES LIBRARIES SOURCE RUNS LANGUAGE)\n\n#  Always runs the given test, use this when you need to re-run tests\n\n#  because parent variables have made old cache entries stale. The LANGUAGE\n\n#  variable is either C or CXX indicating which compiler the test should\n\n#  use.\n\n# MULTIPASS_C_SOURCE_RUNS (Name INCLUDES LIBRARIES SOURCE RUNS)\n\n#  DEPRECATED! This is only included for backwards compatability. Use\n\n#  the more general MULTIPASS_SOURCE_RUNS instead.\n\n#  Always runs the given test, use this when you need to re-run tests\n\n#  because parent variables have made old cache entries stale.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The name of the stored value for the given state\n",
        "Line" : 51,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# Clear all the dependent variables so that the module can reset them\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# This is a ridiculous hack.  CHECK_${language}_SOURCE_* thinks that if the\n\n# *name* of the return variable doesn't change, then the test does\n\n# not need to be re-run.  We keep an internal count which we\n\n# increment to guarantee that every test name is unique.  If we've\n\n# gotten here, then the configuration has changed enough that the\n\n# test *needs* to be rerun.\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Why can't I add to a cache variable?\n",
        "Line" : 96,
        "CharPositionInLine" : 49
      },
      "CommentCount" : 5
    },
    "cmake/modules/ResolveCompilerPaths.cmake" : {
      "ObjectId" : "a8e92645e59bade59a896b58ef7df51ba752352d",
      "LastModified" : "2016-06-29T08:58:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Downloaded from https://github.com/jedbrown/cmake-modules/blob/master/ResolveCompilerPaths.cmake\n\n# Last update 2016/03/09\n\n# Licenced under CMake's BSD Licence\n\n#\n\n#\n\n# ResolveCompilerPaths - this module defines two macros\n\n#\n\n# RESOLVE_LIBRARIES (XXX_LIBRARIES LINK_LINE)\n\n#  This macro is intended to be used by FindXXX.cmake modules.\n\n#  It parses a compiler link line and resolves all libraries\n\n#  (-lfoo) using the library path contexts (-L/path) in scope.\n\n#  The result in XXX_LIBRARIES is the list of fully resolved libs.\n\n#  Example:\n\n#\n\n#    RESOLVE_LIBRARIES (FOO_LIBRARIES \"-L/A -la -L/B -lb -lc -ld\")\n\n#\n\n#  will be resolved to\n\n#\n\n#    FOO_LIBRARIES:STRING=\"/A/liba.so;/B/libb.so;/A/libc.so;/usr/lib/libd.so\"\n\n#\n\n#  if the filesystem looks like\n\n#\n\n#    /A:       liba.so         libc.so\n\n#    /B:       liba.so libb.so\n\n#    /usr/lib: liba.so libb.so libc.so libd.so\n\n#\n\n#  and /usr/lib is a system directory.\n\n#\n\n#  Note: If RESOLVE_LIBRARIES() resolves a link line differently from\n\n#  the native linker, there is a bug in this macro (please report it).\n\n#\n\n# RESOLVE_INCLUDES (XXX_INCLUDES INCLUDE_LINE)\n\n#  This macro is intended to be used by FindXXX.cmake modules.\n\n#  It parses a compile line and resolves all includes\n\n#  (-I/path/to/include) to a list of directories.  Other flags are ignored.\n\n#  Example:\n\n#\n\n#    RESOLVE_INCLUDES (FOO_INCLUDES \"-I/A -DBAR='\\\"irrelevant -I/string here\\\"' -I/B\")\n\n#\n\n#  will be resolved to\n\n#\n\n#    FOO_INCLUDES:STRING=\"/A;/B\"\n\n#\n\n#  assuming both directories exist.\n\n#  Note: as currently implemented, the -I/string will be picked up mistakenly (cry, cry)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If it's a library path, add it to the list\n",
        "Line" : 54,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# It's a library, resolve the path by looking in the list and then (by default) in system directories\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "#windows expects \"libfoo\", linux expects \"foo\"\n",
        "Line" : 61,
        "CharPositionInLine" : 17
      },
      "4" : {
        "Text" : "# We have an absolute path\n",
        "Line" : 67,
        "CharPositionInLine" : 32
      },
      "5" : {
        "Text" : "#separate into a path and a library name:\n",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# only the LAST occurence of each library is required since there should be no circular dependencies\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "cmake/modules/UseEigen.cmake" : {
      "ObjectId" : "1bc70c72b243718004b08b5c696d92b55d17bd8d",
      "LastModified" : "2016-06-29T08:58:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/modules/UsePETSc.cmake" : {
      "ObjectId" : "ba863575447a6a5ae91763763de9bfc6b9d34fbd",
      "LastModified" : "2016-06-29T08:58:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "config.h.cmake" : {
      "ObjectId" : "cae7149289fd98c48e11dce3f178255f8e4c1491",
      "LastModified" : "2018-01-23T09:42:16Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* begin dune-pdelab\n   put the definitions for config.h specific to\n   your project here. Everything above will be\n   overwritten\n*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* begin private */\n/* Name of package */",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Define to the address where bug reports for this package should be sent. */",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* Define to the full name of this package. */",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Define to the full name and version of this package. */",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Define to the one symbol short name of this package. */",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Define to the home page for this package. */",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* Define to the version of this package. */",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* end private */",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* Define to the version of dune-pdelab */",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Define to the major version of dune-pdelab */",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Define to the minor version of dune-pdelab */",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Define to the revision of dune-pdelab */",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* This is only true if PETSc was found by configure _and_ if the application\n   uses the UG_CPPFLAGS */",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* This is only true if Eigen3 was found by configure */",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Define to 1 if sequential UG has been found */",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* end dune-pdelab */",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "428298579f3345b31e32eb76931c0841e2656786",
      "LastModified" : "2016-06-29T08:58:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/doxygen/CMakeLists.txt" : {
      "ObjectId" : "7b51dcbdb28cea6e8af1b971d88c99b2aa39adec",
      "LastModified" : "2016-06-29T08:58:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create and install doxygen documentation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dune/pdelab/CMakeLists.txt" : {
      "ObjectId" : "c9219163e9b356d7d67707ee0de9965be569b2e4",
      "LastModified" : "2016-06-29T08:58:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dune/pdelab/adaptivity/CMakeLists.txt" : {
      "ObjectId" : "2b0dc42d26399dbfb6333ded3d8e38a34b098f47",
      "LastModified" : "2016-06-29T08:58:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dune/pdelab/backend/CMakeLists.txt" : {
      "ObjectId" : "cdde49f246ca3a878d545773404892b46652f85c",
      "LastModified" : "2016-06-29T08:58:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dune/pdelab/backend/common/CMakeLists.txt" : {
      "ObjectId" : "fa6da727576d469951e95f2b172acc441e2873a3",
      "LastModified" : "2018-11-13T11:14:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dune/pdelab/backend/eigen/CMakeLists.txt" : {
      "ObjectId" : "81e6a9976cce5273055717afd4d07dca5e54390d",
      "LastModified" : "2016-06-29T08:58:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dune/pdelab/backend/istl/CMakeLists.txt" : {
      "ObjectId" : "c22dbc1375647263b3de1484ab78adf1da4ec247",
      "LastModified" : "2018-11-13T11:14:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dune/pdelab/backend/istl/geneo/CMakeLists.txt" : {
      "ObjectId" : "b951f49ce78141c0eaf3200e51a94e63593aed3a",
      "LastModified" : "2018-11-13T11:14:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#install headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dune/pdelab/backend/simple/CMakeLists.txt" : {
      "ObjectId" : "0c9505c5af85d5cf81b9fa9dce6d953c2d0e690e",
      "LastModified" : "2018-11-13T11:14:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dune/pdelab/boilerplate/CMakeLists.txt" : {
      "ObjectId" : "4253cbd6173d3689a45f9f5a0f6b71d88255b776",
      "LastModified" : "2018-11-13T11:14:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dune/pdelab/common/CMakeLists.txt" : {
      "ObjectId" : "af752e760093f89f997f206088cd931ef932146e",
      "LastModified" : "2018-11-13T11:14:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dune/pdelab/constraints/CMakeLists.txt" : {
      "ObjectId" : "870d29a096d71dff93d9eb216078e0fa2dda9350",
      "LastModified" : "2018-11-13T11:14:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dune/pdelab/constraints/common/CMakeLists.txt" : {
      "ObjectId" : "944d6c8238a4fd31bd755dc250ed4af1f2727ced",
      "LastModified" : "2018-11-13T11:14:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dune/pdelab/finiteelement/CMakeLists.txt" : {
      "ObjectId" : "c8011efd328d26c9bd7dd249c954249f0e663da0",
      "LastModified" : "2018-11-13T11:14:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dune/pdelab/finiteelementmap/CMakeLists.txt" : {
      "ObjectId" : "1c43a5d0347fd2a737f52a217528cdb6f2501237",
      "LastModified" : "2018-11-13T11:14:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dune/pdelab/function/CMakeLists.txt" : {
      "ObjectId" : "55d73a19754f6d665953817e5a0d4b32242f5716",
      "LastModified" : "2018-11-13T11:14:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# old interface ...\n",
        "Line" : 8,
        "CharPositionInLine" : 14
      },
      "CommentCount" : 1
    },
    "dune/pdelab/gridfunctionspace/CMakeLists.txt" : {
      "ObjectId" : "3e25f606b84566fed75c187b4c31a8706ac8cd72",
      "LastModified" : "2018-11-13T11:14:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dune/pdelab/gridoperator/CMakeLists.txt" : {
      "ObjectId" : "98023c2efb43d2b73867312056e8fb98500fd1c9",
      "LastModified" : "2018-11-13T11:14:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dune/pdelab/gridoperator/common/CMakeLists.txt" : {
      "ObjectId" : "8e65517742feab5ee6c6a01f1cb74ab609a796db",
      "LastModified" : "2018-11-13T11:14:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dune/pdelab/gridoperator/default/CMakeLists.txt" : {
      "ObjectId" : "14df87dd757ca84879227802e6082cb786244f65",
      "LastModified" : "2018-11-13T11:14:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dune/pdelab/gridoperator/fastdg/CMakeLists.txt" : {
      "ObjectId" : "0ec0b8d73eb7534ffa7ada003c53dd8ac5dd4815",
      "LastModified" : "2018-11-13T11:14:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dune/pdelab/gridoperator/onestep/CMakeLists.txt" : {
      "ObjectId" : "050269f8d3ee9328ed2a119a90178024f9f5b3f1",
      "LastModified" : "2018-11-13T11:14:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dune/pdelab/instationary/CMakeLists.txt" : {
      "ObjectId" : "8ae458ab3c541dc25827c09d80be4dd055cd1d55",
      "LastModified" : "2018-11-13T11:14:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dune/pdelab/localoperator/CMakeLists.txt" : {
      "ObjectId" : "9634a7407c68801e8b6688fb85ca3869bd143a6a",
      "LastModified" : "2018-11-13T11:14:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dune/pdelab/newton/CMakeLists.txt" : {
      "ObjectId" : "4ecffa436e40f33fb4e8e8ca65f703f3617c96c3",
      "LastModified" : "2018-11-13T11:14:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dune/pdelab/ordering/CMakeLists.txt" : {
      "ObjectId" : "7dc463d69435c1a130c3d83f374469969d5f8797",
      "LastModified" : "2018-11-13T11:14:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dune/pdelab/stationary/CMakeLists.txt" : {
      "ObjectId" : "4d793e5d8bcad9fc45278a46cb03cc258568f923",
      "LastModified" : "2018-11-13T11:14:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "dune/pdelab/test/CMakeLists.txt" : {
      "ObjectId" : "6bba1d9901684f290bef583ad6504bac3e36c259",
      "LastModified" : "2019-03-12T10:28:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include periodic tests. Must run in parallel.\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "dune/pdelab/test/fem/CMakeLists.txt" : {
      "ObjectId" : "b578f1ffcd7ca6a48dc83d799e87cf0d7aa96287",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# store upper case strings for the geometries, too.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Raviart-Thomas\n\n# RT0 and RT1 in 2D for simplex and cube\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# RT2 in 2D for cube\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# RT 0 and RT1 in 3D for cube\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# BDM 1 in 2D for simplex and cube\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# OPB order 0-3 in 2D and 3D for simplex and cube\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Pk order 0-3 in 2D and 3D for simplex\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Rannacher-Turek in 2D and 3D for cube\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "lib/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2018-11-13T11:14:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 40,
    "CMAKESOURCE" : 1
  },
  "ElapsedTime" : 1906
}