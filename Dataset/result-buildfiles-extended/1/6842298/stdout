{
  "Repository" : "6842298",
  "Revision" : "HEAD",
  "ObjectId" : "650d04f1cec2cab201a1fa02d518119bd871a637",
  "CommitTime" : "2019-04-17T04:02:04Z",
  "Files" : {
    "3rdparty/communi/CMakeLists.txt" : {
      "ObjectId" : "6b295748c7484b7fd0b6d7ce3fa55e97739c0406",
      "LastModified" : "2017-12-07T18:52:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n# Communi                                                                  #\n\n#                                                                          #\n\n#    Copyright (C) 2014-2017 by Ahmed Charles - acharles@outlook.com       #\n\n#                                                                          #\n\n#    This program is free software; you can redistribute it and/or modify  #\n\n#    it under the terms of the GNU General Public License as published by  #\n\n#    the Free Software Foundation; either version 2 of the License, or     #\n\n#    (at your option) any later version.                                   #\n\n#                                                                          #\n\n#    This program is distributed in the hope that it will be useful,       #\n\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of        #\n\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         #\n\n#    GNU General Public License for more details.                          #\n\n#                                                                          #\n\n#    You should have received a copy of the GNU General Public License     #\n\n#    along with this program; if not, write to the                         #\n\n#    Free Software Foundation, Inc.,                                       #\n\n#    59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             #\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/communi/communi.pri" : {
      "ObjectId" : "04ddcabc834dd8a7cb22b5c08170ae77f07c8167",
      "LastModified" : "2017-12-07T18:52:52Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "############################################################################\n\n#    Copyright (C) 2017 by Stephen Lyons - slysven@virginmedia.com         #\n\n#                                                                          #\n\n#    This program is free software; you can redistribute it and/or modify  #\n\n#    it under the terms of the GNU General Public License as published by  #\n\n#    the Free Software Foundation; either version 2 of the License, or     #\n\n#    (at your option) any later version.                                   #\n\n#                                                                          #\n\n#    This program is distributed in the hope that it will be useful,       #\n\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of        #\n\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         #\n\n#    GNU General Public License for more details.                          #\n\n#                                                                          #\n\n#    You should have received a copy of the GNU General Public License     #\n\n#    along with this program; if not, write to the                         #\n\n#    Free Software Foundation, Inc.,                                       #\n\n#    59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             #\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a Mudlet created qmake project \"include\" file which the Qt IDE treats\n\n# as a sub-project - it's purpose is to group the three sub-modules needed from\n\n# the Communi (IRC) project libraries into one group in the editor...\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# To generate the files in this sub-project it is necessary to copy sets of\n\n# files (sub-directories) from:\n\n# https://github.com/communi/libcommuni into the Mudlet source tree as:\n\n# \"/src/core/*\"  ==> \"/3rdparty/communi/src/core/*\"\n\n# \"/src/model/*\" ==> \"/3rdparty/communi/src/model/*\"\n\n# \"/src/util/*\"  ==> \"/3rdparty/communi/src/util/*\"\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The effective contents of this file is - at the time of creation - exactly the\n\n# same as the \"libcommuni/src/src.pri\" in the upstream (libcommuni) source but\n\n# is not called \"src.pri\" so that it can be identified with a specific rather\n\n# than a generic name {Qt tends to call a primary project file with the same\n\n# name as the directory it creates at the same time to put it in - which is fine\n\n# until you have several sub-projects and they all use \"src\" to hold their\n\n# source code in....}\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# To determine the communi version check the #define value for IRC_VERSION_STR\n\n# in 3rdparty/communi/include/IrcCore/ircglobal.h - at the time of creation of\n\n# this file it was \"3.5.0\"\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "3rdparty/communi/src/3rdparty/mozilla/mozilla.pri" : {
      "ObjectId" : "3e279d9c655dd2c491948d153f541bdd77337200",
      "LastModified" : "2017-12-07T18:52:52Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "######################################################################\n\n# Communi\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/communi/src/core/core.pri" : {
      "ObjectId" : "6560a871a3da42aae15724bd4cd2640448bbfe4f",
      "LastModified" : "2017-12-07T18:52:52Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "######################################################################\n\n# Communi\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/communi/src/model/model.pri" : {
      "ObjectId" : "c6089994eb93fdbfba114a01d064ef91091f519d",
      "LastModified" : "2017-12-07T18:52:52Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "######################################################################\n\n# Communi\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/communi/src/util/util.pri" : {
      "ObjectId" : "49d5d6a617c693734cfbec1d81dc12bf54747df4",
      "LastModified" : "2017-12-07T18:52:52Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "######################################################################\n\n# Communi\n\n######################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/luazip/CMakeLists.txt" : {
      "ObjectId" : "8153776d820a096a2e552c43deeb1d3621cd6048",
      "LastModified" : "2017-12-07T18:52:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Break each step into a separate command so any status message is output straight away\n\n# The include directory setup for Zip is unusual in that as well as e.g. /usr/include/zip.h\n\n# we need the path to an interal header zipconf.g that it calls for using '<''>'s\n\n# i.e. SYSTEM #include delimiters which are typically located at e.g. /usr/lib/libzip/include/zipconf.h\n\n# and using pkg-config is the recommended way to get the details.\n\n# Spotted recommendation to use pkg-config here https://github.com/Homebrew/homebrew/issues/13390\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Examining Homebrew (for MacOs) for libzzip:\n\n# https://bintray.com/homebrew/bottles/libzzip found that they use pkg-config\n\n# So use that to try and find what we want\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "3rdparty/luazip/luazip.pri" : {
      "ObjectId" : "195ee9de1954804908fd133c9a3f939aa433faad",
      "LastModified" : "2017-12-07T18:52:52Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Only included into the application (in TLuaInterpreter) in MacOs builds - Slysven!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeLists.txt" : {
      "ObjectId" : "9769e39e5f6206d0fe39db39c1e5dea9b151bc35",
      "LastModified" : "2019-04-12T04:48:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n#    Copyright (C) 2014 by Ahmed Charles - acharles@outlook.com            #\n\n#    Copyright (C) 2015-2018 by Stephen Lyons - slysven@virginmedia.com    #\n\n#                                                                          #\n\n#    This program is free software; you can redistribute it and/or modify  #\n\n#    it under the terms of the GNU General Public License as published by  #\n\n#    the Free Software Foundation; either version 2 of the License, or     #\n\n#    (at your option) any later version.                                   #\n\n#                                                                          #\n\n#    This program is distributed in the hope that it will be useful,       #\n\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of        #\n\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         #\n\n#    GNU General Public License for more details.                          #\n\n#                                                                          #\n\n#    You should have received a copy of the GNU General Public License     #\n\n#    along with this program; if not, write to the                         #\n\n#    Free Software Foundation, Inc.,                                       #\n\n#    59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             #\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############################################################################\n\n#                                                                          #\n\n#    NOTICE: FreeBSD is not an officially supported platform as such;      #\n\n#    the work on getting it working has been done by myself, and other     #\n\n#    developers, unless they have explicitly said so, are not able to      #\n\n#    address issues relating specifically to that Operating System.        #\n\n#    Nevertheless users of FreeBSD are equally welcome to contribute       #\n\n#    to the development of Mudlet - bugfixes and enhancements are          #\n\n#    welcome from all!                                                     #\n\n#                                           Stephen Lyons, February 2018   #\n\n#                                                                          #\n\n############################################################################\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Should be called before PROJECT.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Qt 5.11.2 with which we build on OS X supports 10.11 and up, but some tools are not provided as bottles for that anymore.\n",
        "Line" : 37,
        "CharPositionInLine" : 45
      },
      "4" : {
        "Text" : "# APP_BUILD should only be empty/null in official \"release\" builds,\n\n# developers may like to set the MUDLET_VERSION_BUILD environment variable to\n\n# their user and branch names to make it easier to tell different builds apart!\n\n#\n\n# Changing this pair of values affects: ctelnet.cpp, main.cpp, mudlet.cpp\n\n# dlgAboutDialog.cpp and TLuaInterpreter.cpp.  It will not necessarily cause\n\n# those files to be automatically rebuilt so you may need to 'touch' those files if\n\n# the variables are changed and you are not doing a full, clean, rebuild!\n\n# Use APP_VERSION, APP_BUILD and APP_TARGET defines in the source code if needed.\n\n# IMPORTANT:\n\n# To insure consistency please ensure the SAME of the first two values are also\n\n# assigned to the \"VERSION\" and \"BUILD\" variables in the native qmake project\n\n# file, which is NOW called: ./src/mudlet.pro\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Enable the built-in updater by default on the three main supported OS\n\n# unless environmental variable WITH_UPDATER is defined and set to \"NO\" (case\n\n# insensitive). Linux packagers will find it useful to do this since they are\n\n# likely to be responsible for updates there. Automatically exclude the\n\n# update stuff from other OSs such as FreeBSD and Cygwin because if they ever\n\n# get finished they have their own packaging system - and we do not support\n\n# updating them.\n\n# WITH_UPDATER is an environmental value/variable (so could be a number, a\n\n# string, something else or not even exist).\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# We are on one of the supported platforms\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# The specific tested for value was seen so set the option \"no don't\n\n# include the updater\"\n",
        "Line" : 102,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# Any other value was seen so ignore it and set \"yes, include the updater\"\n",
        "Line" : 106,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# An environmental variable not detected, apply platform default of \"yes, include the updater\"\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Option not available for other platforms\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Enable the inclusion of fonts currently carried in the source code by default\n\n# unless the environmental variable WITH_FONTS is defined AND is set to a\n\n# (case insensitive) value of \"NO\". Linux packagers will find it useful to do\n\n# this since package managers may already package the relevant fonts - or are\n\n# not willing or able to include them.\n\n# WITH_FONTS is an environmental value/variable (so could be a number, a string,\n\n# something else or not even exist).\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Set the CMake variable to the default if it (as a result of WITH_FONTS not\n\n# existing) has not been defined, without the if(DEFINED ...) string(...)\n\n# errors out - and so may further tests on the variable...\n",
        "Line" : 129,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Can download and extract latest Unbuntu font files (currently X.YY is\n\n# 0.83) from:\n\n# https://launchpad.net/ubuntu/+archive/primary/+files/ubuntu-font-family-sources_X.YY.orig.tar.gz\n\n# It would be nice if we could automate the download and extraction of all\n\n# the font and associate documentation (but NOT the \"sources\" sub-directory)\n\n# contents into the ./src/fonts/ directory structure only if this option is\n\n# set to ON; however that would be plaform specific and add more complexity\n\n# and it is not obvious that there is a demand to do this currenly.\n",
        "Line" : 138,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Needed (just) on MacOs as an #include in luazip.h:\n",
        "Line" : 149,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# The above CMakeList.txt is the top level one - we actually use the one\n\n# another level down in 3rdparty/edbee-lib/edbee-lib/CMakeLists.txt\n",
        "Line" : 154,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 16
    },
    "cmake/FindHUNSPELL.cmake" : {
      "ObjectId" : "40935f41e35b894ede2102a31aa50cac201a2a72",
      "LastModified" : "2017-12-07T18:52:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate HUNSPELL library\n\n# This module defines\n\n#  HUNSPELL_FOUND, if false, do not try to link to HUNSPELL \n\n#  HUNSPELL_LIBRARIES\n\n#  HUNSPELL_INCLUDE_DIR, where to find hunspell/*.h \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fink\n",
        "Line" : 17,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 18,
        "CharPositionInLine" : 13
      },
      "3" : {
        "Text" : "# Blastwave\n",
        "Line" : 19,
        "CharPositionInLine" : 11
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set HUNSPELL_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindPCRE.cmake" : {
      "ObjectId" : "9a91f8a4a1d6bfb15599d08561cd57e90e6046db",
      "LastModified" : "2017-12-07T18:52:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate PCRE library\n\n# This module defines\n\n#  PCRE_FOUND, if false, do not try to link to PCRE \n\n#  PCRE_LIBRARIES\n\n#  PCRE_INCLUDE_DIR, where to find pcre.h \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fink\n",
        "Line" : 17,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 18,
        "CharPositionInLine" : 13
      },
      "3" : {
        "Text" : "# Blastwave\n",
        "Line" : 19,
        "CharPositionInLine" : 11
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PCRE_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindPUGIXML.cmake" : {
      "ObjectId" : "84a624a5c77271b41a092e28d8ce16eefd53ae8a",
      "LastModified" : "2018-05-15T07:19:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the pugixml XML parsing library.\n\n#\n\n# Sets the usual variables expected for find_package scripts:\n\n#\n\n# PUGIXML_INCLUDE_DIR - header location\n\n# PUGIXML_LIBRARIES - library to link against\n\n# PUGIXML_FOUND - true if pugixml was found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Support the REQUIRED and QUIET arguments, and set PUGIXML_FOUND if found.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindYAJL.cmake" : {
      "ObjectId" : "d1ded2a763dd6bf91ece9f30db7d39ee1c701763",
      "LastModified" : "2018-05-15T07:19:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate YAJL library\n\n# This module defines\n\n#  YAJL_FOUND, if false, do not try to link to YAJL \n\n#  YAJL_LIBRARIES\n\n#  YAJL_INCLUDE_DIR, where to find yajl_*.h \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fink\n",
        "Line" : 17,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 18,
        "CharPositionInLine" : 13
      },
      "3" : {
        "Text" : "# Blastwave\n",
        "Line" : 19,
        "CharPositionInLine" : 11
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set YAJL_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindZIP.cmake" : {
      "ObjectId" : "01e534a85f4364f1bb5606b1064a3cac2ab0322c",
      "LastModified" : "2018-05-15T07:19:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate ZIP library\n\n# This module defines\n\n#  ZIP_FOUND, if false, do not try to link to ZIP \n\n#  ZIP_LIBRARIES\n\n#  ZIP_INCLUDE_DIR, where to find zip*.h \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fink\n",
        "Line" : 17,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 18,
        "CharPositionInLine" : 13
      },
      "3" : {
        "Text" : "# Blastwave\n",
        "Line" : 19,
        "CharPositionInLine" : 11
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set ZIP_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "027710ef635e52f751d8b38a69535f24ea67c3fb",
      "LastModified" : "2019-03-05T07:29:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n#    Copyright (C) 2014-2017 by Ahmed Charles - acharles@outlook.com       #\n\n#    Copyright (C) 2015-2018 by Stephen Lyons - slysven@virginmedia.com    #\n\n#    Copyright (C) 2018 by Huadong Qi - novload@outlook.com                #\n\n#                                                                          #\n\n#    This program is free software; you can redistribute it and/or modify  #\n\n#    it under the terms of the GNU General Public License as published by  #\n\n#    the Free Software Foundation; either version 2 of the License, or     #\n\n#    (at your option) any later version.                                   #\n\n#                                                                          #\n\n#    This program is distributed in the hope that it will be useful,       #\n\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of        #\n\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         #\n\n#    GNU General Public License for more details.                          #\n\n#                                                                          #\n\n#    You should have received a copy of the GNU General Public License     #\n\n#    along with this program; if not, write to the                         #\n\n#    Free Software Foundation, Inc.,                                       #\n\n#    59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             #\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is for compiled UI files, not those used at runtime though the resource file.\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# parallel builds\n",
        "Line" : 218,
        "CharPositionInLine" : 48
      },
      "3" : {
        "Text" : "# improve link times\n",
        "Line" : 219,
        "CharPositionInLine" : 55
      },
      "4" : {
        "Text" : "# improve conformance\n",
        "Line" : 220,
        "CharPositionInLine" : 59
      },
      "5" : {
        "Text" : "# '=' : truncation from 'double' to 'float'\n\n# 'initializing' : truncation of constant value\n\n# deprecation\n",
        "Line" : 221,
        "CharPositionInLine" : 52
      },
      "6" : {
        "Text" : "# Break each step into a separate command so any status message is output straight away\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The include directory setup for Zip is unusual in that as well as e.g. /usr/include/zip.h\n\n# we need the path to an interal header zipconf.h that it calls for using '<''>'s\n\n# i.e. SYSTEM #include delimiters which are typically located at e.g. /usr/lib/libzip/include/zipconf.h\n\n# and using pkg-config is the recommended way to get the details.\n\n# Spotted recommendation to use pkg-config here https://github.com/Homebrew/homebrew/issues/13390\n",
        "Line" : 290,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Use a PC_ prefix to distinguish between what pkg-config finds and a direct use of find_package(ZIP)\n\n# Package \"zip\" is called \"libzip\" at least on MY Linux box so look for BOTH\n",
        "Line" : 303,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# This is not present before Qt 5.7:\n",
        "Line" : 339,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# This is not present before Qt 5.9:\n",
        "Line" : 342,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Qt Gamepad was a Technology Preview in 5.7\n\n# Qt Gamepad was a Technology Preview 2 in 5.8\n\n# Qt Speech (or at least the TTS part) was a Technology Preview in 5.8\n",
        "Line" : 348,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Qt Speech (or at least the TTS part) was a Technology Preview 2 in 5.9, now supported on Mingw\n\n# Qt Gamepad was officially released in 5.9\n",
        "Line" : 353,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Qt Speech (or at least the TTS part) was officially release in 5.10\n",
        "Line" : 357,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Fall back on original FIND_PACKAGE process on Apple if Package Config failed\n\n# Originally we did use that but it started to fail on Travis C.I. in June 2016\n\n# So we now try to use PackageConfig for MacOs platform\n",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Define a preprocessor symbol with the default fallback location from which\n\n# to load installed mudlet lua files. Set LUA_DEFAULT_DIR to a\n\n# platform-specific value. If LUA_DEFAULT_DIR is unset, the root directory\n\n# will be used.\n",
        "Line" : 415,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Enable leak detection for MSVC debug builds.\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Need to use the plural variables as there can be more than ONE directory to specify:\n",
        "Line" : 453,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# *nix \"make install\" provision:\n",
        "Line" : 550,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# CMAKE_INSTALL_PREFIX is automagically set on Unix to DESTDIR environment\n\n# variable and is prefixed onto relative DESTINATION values\n",
        "Line" : 552,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "#    message(STATUS \"For ${lua_file} ==> installing ${lua_file_name} in ${CMAKE_INSTALL_PREFIX}/share/mudlet/lua/${lua_file_path}\")\n",
        "Line" : 557,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#    message(STATUS \"For ${lcf_file} ==> installing ${lcf_file_name} in ${CMAKE_INSTALL_PREFIX}/share/mudlet/lua/${lcf_file_path}\")\n",
        "Line" : 566,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "src/mudlet.pro" : {
      "ObjectId" : "86a1e53ba00d9fcbf8ee8ae8537c3fa2db35f48f",
      "LastModified" : "2019-04-12T04:48:56Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "############################################################################\n\n#    Copyright (C) 2013-2015, 2017-2018 by Stephen Lyons                   #\n\n#                                                - slysven@virginmedia.com #\n\n#    Copyright (C) 2014 by Ahmed Charles - acharles@outlook.com            #\n\n#    Copyright (C) 2017 by Ian Adkins - ieadkins@gmail.com                 #\n\n#    Copyright (C) 2018 by Huadong Qi - novload@outlook.com                #\n\n#                                                                          #\n\n#    This program is free software; you can redistribute it and/or modify  #\n\n#    it under the terms of the GNU General Public License as published by  #\n\n#    the Free Software Foundation; either version 2 of the License, or     #\n\n#    (at your option) any later version.                                   #\n\n#                                                                          #\n\n#    This program is distributed in the hope that it will be useful,       #\n\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of        #\n\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         #\n\n#    GNU General Public License for more details.                          #\n\n#                                                                          #\n\n#    You should have received a copy of the GNU General Public License     #\n\n#    along with this program; if not, write to the                         #\n\n#    Free Software Foundation, Inc.,                                       #\n\n#    59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             #\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############################################################################\n\n#                                                                          #\n\n#    NOTICE: FreeBSD is not an officially supported platform as such;      #\n\n#    the work on getting it working has been done by myself, and other     #\n\n#    developers, unless they have explicitly said so, are not able to      #\n\n#    address issues relating specifically to that Operating System.        #\n\n#    Nevertheless users of FreeBSD are equally welcome to contribute       #\n\n#    to the development of Mudlet - bugfixes and enhancements are          #\n\n#    welcome from all!                                                     #\n\n#                                           Stephen Lyons, February 2018   #\n\n#                                                                          #\n\n############################################################################\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Including IRC Library\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include luazip module (run time lua module - but not needed on Linux/Windows as\n\n# is available prebuilt for THOSE platforms!\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# disable Qt adding -Wall for us, insert it ourselves so we can add -Wno-* after.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ignore unused parameters, because boost has a ton of them and that is not something we need to know.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Before we impose OUR idea about the optimisation levels to use, remove any\n\n# that Qt tries to put in automatically for us for release builds, only the\n\n# last, ours, is supposed to apply but it can be confusing to see multiple\n\n# alternatives during compilations.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# NOW we can put ours in:\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# There is NO need to put in the -g option as it is done already for debug bugs\n\n# For gdb type debugging it helps if there is NO optimisations so use -O0.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# enable C++14 for builds.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# MSVC specific flags. Enable multiprocessor MSVC builds.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Mac specific flags.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "############################# TEMPORARY TESTING PART ###########################\n\n# Tempory tests to determine what scope variables are correct, it seems that\n\n# they are related to the complete mkspecs base directory names\n\n# (e.g. linux-g++-64) the first part at least seems to match up with what we\n\n#  have been using so far {\"macx\", \"win32\"} \"unix\" seems to be an oddity.\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# not seen when expected:\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Confirmed (where):\n\n# darwin(Travis CI), linux(local), linux-clang(local), linux-g++(local),\n\n# macx(Travis CI), macx-clang(Travis CI), win32(AppVeyor CI),\n\n# win32-g++(AppVeyor CI), unix(local)\n\n# freebsd(local) freebsd-clang(local) freebsd-g++(local)\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Suspected not to work:\n\n# linux-g++-32, linux-g++-64\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "########################## Version and Build setting ###########################\n\n# Set the current Mudlet Version, unfortunately the Qt documentation suggests\n\n# that only a #.#.# form without any other alphanumberic suffixes is required:\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# if you are distributing modified code, it would be useful if you\n\n# put something distinguishing into the MUDLET_VERSION_BUILD environment\n\n# variable to make identification of the used version simple\n\n# the qmake BUILD variable is NOT built-in\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Leave the value of the following empty for a release build\n\n# i.e. the line should be \"BUILD =\" without quotes\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Changing BUILD and VERSION values affects: ctelnet.cpp, main.cpp, mudlet.cpp\n\n# dlgAboutDialog.cpp and TLuaInterpreter.cpp.  It does NOT cause those files to\n\n# be automatically rebuilt so you will need to 'touch' them...!\n\n# Use APP_VERSION, APP_BUILD and APP_TARGET defines in the source code if needed.\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Capitalize the name for Mudlet, so it appears as 'Mudlet' and not 'mudlet' in the .dmg installer\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Create a record of what the executable will be called by hand\n\n# NB. \"cygwin-g++\" although a subset of \"unix\" NOT \"win32\" DOES create\n\n# executables with an \".exe\" extension!\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "################## DejuVu and Ubuntu Fonts inclusion detection #################\n\n# To skip bundling Bitstream Vera Sans and Ubuntu Mono fonts with Mudlet,\n\n# set the environment WITH_FONTS variable to \"NO\"\n\n# ie: export WITH_UPDATER=\"NO\" qmake\n\n#\n\n# Note for Mudlet developers: as WITH_FONTS could be a number, a string,\n\n# something else (or not even # exist) we need to be careful in checking it\n\n# exists before doing much else with it. Also as an environmental variable it\n\n# is tricky to handle unless we read it into a qmake variable first:\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Can download and extract latest Unbuntu font files (currently X.YY is\n\n# 0.83) from:\n\n# https://launchpad.net/ubuntu/+archive/primary/+files/ubuntu-font-family-sources_X.YY.orig.tar.gz\n\n# It would be nice if we could automate the download and extraction of all\n\n# the font and associate documentation (but NOT the \"sources\" sub-directory)\n\n# contents into the ./src/fonts/ directory structure only if this option is\n\n# set to ON; however that would be plaform specific and add more complexity\n\n# and it is not obvious that there is a demand to do this currenly.\n",
        "Line" : 194,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "######################### Auto Updater setting detection #########,#############\n\n# To remove the built-in updater, set the environment WITH_UPDATER variable to \"NO\"\n\n# ie: export WITH_UPDATER=\"NO\" qmake\n\n#\n\n# Note for Mudlet developers: as WITH_UPDATER could be a number, a string,\n\n# something else (or not even exist) we need to be careful in checking it exists\n\n# before doing much else with it. Also as an environmental variable it is tricky\n\n# to handle unless we read it into a qmake variable first:\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# We are on one of the supported platforms\n",
        "Line" : 213,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# The environmental variable does not exist or it does and it is NOT the\n\n# particular value we are looking out for - so include the updater code:\n",
        "Line" : 216,
        "CharPositionInLine" : 7
      },
      "27" : {
        "Text" : "# else the environment variable is the specific \"don't include the updater\n\n# code\" setting - so don't!\n",
        "Line" : 220,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# else we are on another platform which the updater code will not support so\n\n# don't include it either\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "###################### Platform Specific Paths and related #####################\n\n# Specify default location for Lua files, in OS specific LUA_DEFAULT_DIR value\n\n# below, if this is not done then a hardcoded default of a ./mudlet-lua/lua\n\n# from the executable's location will be used.  Mudlet will now moan and ask\n\n# the user to find them if the files (and specifically the <10KByte\n\n# \"LuaGlobal.lua\" one) is not accessable (read access only required) during\n\n# startup.  The precise directory is remembered once found (and stored in the\n\n# Mudlet configuration file as \"systemLuaFilePath\") but if the installer places\n\n# the files in the place documented here the user will not be bothered by this.\n\n#\n\n# (Geyser files should be in a \"geyser\" subdirectory of this)\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# We should consider the XDG specifications in:\n\n# https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Distribution packagers would be using PREFIX = /usr but this is accepted\n\n# destination place for local builds for software for all users:\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Now picks up the first element of the environmental XDG_DATA_DIRS if\n\n# not overridden:\n",
        "Line" : 245,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# According to Linux FHS /usr/local/games is an alternative location for leasure time BINARIES 8-):\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Again according to FHS /usr/local/share/games is the corresponding place for locally built games documentation:\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Some OS platforms have a hyphen (I think Cygwin does as well):\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# FreeFSB appends the version number to hunspell:\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# FreeFSB (at least) supports multiple Lua versions (and 5.1 is not the default anymore):\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# for dlgPackageExporter\n\n# for ctelnet.cpp\n",
        "Line" : 289,
        "CharPositionInLine" : 32
      },
      "39" : {
        "Text" : "# then there can be three passes through this file and we only want the\n\n# message once (the non build_pass in that case):\n",
        "Line" : 648,
        "CharPositionInLine" : 8
      },
      "40" : {
        "Text" : "# To use QtCreator as a Unix installer the generated Makefile must have the\n\n# following lists of files EXPLICITLY stated - IT DOESN'T WORK IF A WILD-CARD\n\n# PATH IS GIVEN AS AN ENTRY TO THE .files LIST as the needed relative positions\n\n# (sub-directories) for each file is not preserved in that case. This is not\n\n# apparently an issue for or applies in the inclusion of the Lua files in the\n\n# macOs bundle case!\n\n#\n\n# Select Qt Creator's \"Project\" Side tab and under the \"Build and Run\" top tab\n\n# choose your Build Kit's \"Run\"->\"Run Settings\" ensure you have a \"Make\" step\n\n# that - if you are NOT runnning QT Creator as root, which is the safest way\n\n# (i.e safe = NOT root) - against:\n\n# \"Override <path to?>/make\" has the entry: \"/usr/bin/sudo\"\n\n# without the quotes, assuming /usr/bin is the location of \"sudo\"\n\n# and against:\n\n# \"Make arguments\" has the entry: \"-A sh -c '/usr/bin/make install'\"\n\n# without the DOUBLE quotes but with the SINGLE quotes, assuming /usr/bin is the\n\n# location of \"make\"\n\n#\n\n# Modify the \"Build Environment\" (and/or) the \"Run Environment\" so that there\n\n# is a SUDO_ASKPASS entry with a value that points to a \"ssh-askpass\" or\n\n# similar GUI password requester utility.\n\n#\n\n# This then will run \"make install\" via sudo with root privileges when you use\n\n# the relevant \"Deploy\" option on the \"Build\" menu - and will ask you for YOUR\n\n# password via a GUI dialog if needed - so that the files can be placed in the\n\n# specified system directories to which a normal user (you?) does not have write\n\n# access to normally.\n",
        "Line" : 678,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Main lua files:\n",
        "Line" : 706,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Geyser lua files:\n",
        "Line" : 720,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Our customised 5.1 Lua Code Formatter files, unfortunately to get the Qt\n\n# makefile constructor to reproduce the exact directory structure we have to\n\n# list EVERY SINGLE B****Y FILE in a per directory grouping; also in reproducing\n\n# the path names in the variable names below there are limits to the characters\n\n# that can be use, so that '_' represents '/' and '__' represents '_':\n",
        "Line" : 739,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# The path for the root directory has already been specified\n",
        "Line" : 754,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Copy mudlet-lua into the .app bundle\n\n# the location is relative to src.pro, so just use mudlet-lua\n",
        "Line" : 1183,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# Set the .app's icns file\n",
        "Line" : 1219,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "# allow linker to find sparkle framework if we bundle it in\n",
        "Line" : 1225,
        "CharPositionInLine" : 8
      },
      "48" : {
        "Text" : "# necessary for Sparkle to compile\n",
        "Line" : 1236,
        "CharPositionInLine" : 8
      },
      "49" : {
        "Text" : "# Copy Sparkle into the app bundle\n",
        "Line" : 1249,
        "CharPositionInLine" : 8
      },
      "50" : {
        "Text" : "# And add frameworks to the rpath so that the app can find the framework.\n",
        "Line" : 1255,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# set the Windows binary icon\n",
        "Line" : 1260,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# specify some windows information about the binary\n",
        "Line" : 1263,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# Pull the docs and lua files into the project so they show up in the Qt Creator project files list\n",
        "Line" : 1268,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Unix Makefile installer:\n\n# lua file installation, needs install, sudo, and a setting in /etc/sudo.conf\n\n# or via enviromental variable SUDO_ASKPASS to something like ssh-askpass\n\n# to provide a graphic password requestor needed to install software\n",
        "Line" : 1279,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# say what we want to get installed by \"make install\" (executed by 'deployment' step):\n",
        "Line" : 1284,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Unfortunately, because (it seems) there are some directories in the above\n\n# that do not, themselves contain any actual files and only sub-directories\n\n# the current Qt qmake makefile does not do a clean \"make uninstall\" as it\n\n# leaves those empty sub-directories behind and that prevents their parents\n\n# from being deleted as well\n",
        "Line" : 1345,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 57,
      "Errorlog" : "line 301:19 token recognition error at: '\"$${MINGW_BASE_DIR}\\\\lib\\i'\n"
    },
    "translations/translated/CMakeLists.txt" : {
      "ObjectId" : "07ca6e4f890dd1248b686c30a25f8c665edba022",
      "LastModified" : "2018-09-27T05:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n#    Copyright (C) 2018 by Vadim Peretokin - vperetokin@gmail.com          #\n\n#                                                                          #\n\n#    This program is free software; you can redistribute it and/or modify  #\n\n#    it under the terms of the GNU General Public License as published by  #\n\n#    the Free Software Foundation; either version 2 of the License, or     #\n\n#    (at your option) any later version.                                   #\n\n#                                                                          #\n\n#    This program is distributed in the hope that it will be useful,       #\n\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of        #\n\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         #\n\n#    GNU General Public License for more details.                          #\n\n#                                                                          #\n\n#    You should have received a copy of the GNU General Public License     #\n\n#    along with this program; if not, write to the                         #\n\n#    Free Software Foundation, Inc.,                                       #\n\n#    59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             #\n\n############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# translations, credit to qBittorrent\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "translations/translated/updateqm.pri" : {
      "ObjectId" : "1f56e18bbdb560b1c57e2c17c47e0b22b109dbfe",
      "LastModified" : "2019-03-05T07:29:28Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Credit: qbittorrent\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The American translation is plurals only and has to be done separately (by\n\n# hand) so is not to be included in the built-in Qt TRANSLATIONS variable as the\n\n# default processing of it will not have the needed extra `-pluralonly`\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# need to use full path, otherwise running\n\n# `lupdate` will generate *.ts files in project root directory\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Now put the file back\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    }
  },
  "FileTypes" : {
    "CMAKE" : 10,
    "QMAKE" : 8
  },
  "ElapsedTime" : 6256
}