{
  "Repository" : "4397024",
  "Revision" : "HEAD",
  "ObjectId" : "c9eb277ba1dc8d5c2c530b25760f7999e30825c3",
  "CommitTime" : "2019-04-18T20:39:59Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "7658fc6c9c63ea4e04fe4fa98ef05c1b5db25cda",
      "LastModified" : "2019-03-18T15:38:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define PACKAGE macro in tarantool/config.h\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Set default build type to Debug. This is to ease a developer's\n\n# life. Release binaries are built by BuildBot automatically anyway.\n\n#\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Check submodules\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define GNU standard installation directories\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the order is significant: we need to know os and compiler to configure libs\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# NO_POLICY_SCOPE is to suppress CMP0069 warnings on the unset\n\n# policy.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ensure clock_gettime() is declared and actually available\n\n# in runtime (gh-1777)\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Checks for libev\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Some versions of GNU libc define non-portable __libc_stack_end\n\n# which we use to determine the end (or beginning, actually) of\n\n# stack. Find whether or not it's present.\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# Enable 'make tags' target.\n\n#\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n# Get version\n\n#\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Try to get version from VERSION file\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Get git version only if source directory has .git repository, this\n\n# avoids git to search .git repository in parent\n\n# directories.\n\n#\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n\n# Split full version (git describe --long) to get components\n\n#\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\n\n# Specify where to look for include files.\n\n#\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\n\n# Specify Tarantool modules prefixes\n\n#\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# LuaRocks\n",
        "Line" : 236,
        "CharPositionInLine" : 42
      },
      "17" : {
        "Text" : "# Install prefix\n",
        "Line" : 237,
        "CharPositionInLine" : 55
      },
      "18" : {
        "Text" : "# LuaRocks on Gentoo\n",
        "Line" : 239,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# System packages\n",
        "Line" : 242,
        "CharPositionInLine" : 36
      },
      "20" : {
        "Text" : "# LuaRocks\n",
        "Line" : 255,
        "CharPositionInLine" : 47
      },
      "21" : {
        "Text" : "# Install prefix\n",
        "Line" : 256,
        "CharPositionInLine" : 53
      },
      "22" : {
        "Text" : "# gh-1085: LuaRocks on Debian uses lib instead of lib/x86_64-linux-gnu/\n",
        "Line" : 258,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# LuaRocks on Debian\n",
        "Line" : 259,
        "CharPositionInLine" : 43
      },
      "24" : {
        "Text" : "# LuaRocks on Gentoo\n",
        "Line" : 262,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# LuaRocks on Alpine\n",
        "Line" : 266,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# System packages\n",
        "Line" : 269,
        "CharPositionInLine" : 41
      },
      "27" : {
        "Text" : "##\n\n## Third-Party libraries\n\n##\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#\n\n# Since we *optionally* build bundled libs, a direct build\n\n# dependency between tarantool_box and libluajit/libobjc won't\n\n# work: add an empty custom target for this dependency instead.\n\n# If a bundled objc or luajit is built, it is added to the\n\n# dependency list of build_bundled_libs target.\n\n#\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Debian: missing zstd_static.h in libzstd-dev\n\n# Fedora: not found\n\n# => use bundled version by default\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#\n\n# OpenSSL\n\n#\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\n\n# OpenSSL can require Z library (depending on build time options), so we add\n\n# it to libraries list in case of static build.\n\n#\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\n\n# Curl\n\n#\n",
        "Line" : 334,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\n\n# ReadLine\n\n#\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#\n\n# ICONV\n\n#\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#\n\n# ICU\n\n#\n",
        "Line" : 353,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#\n\n# LuaJIT\n\n#\n\n# Patched.\n\n#\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# LuaJIT is unusable on OS X without enabled GC64\n\n# See https://github.com/tarantool/tarantool/issues/2643\n",
        "Line" : 368,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "#\n\n# LibEV\n\n#\n\n# Patched.\n\n#\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\n\n# LibEIO\n\n#\n\n# Patched.\n\n#\n\n#option(ENABLE_BUNDLED_LIBEIO \"Enable building of the bundled libeio\" ON)\n",
        "Line" : 386,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#\n\n# LibCORO\n\n#\n",
        "Line" : 402,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#\n\n# Tarantool uses 'coro' (coroutines) library to implement\n\n# cooperative multi-tasking. Since coro.h is included\n\n# universally, define the underlying implementation switch\n\n# in the top level CMakeLists.txt, to ensure a consistent\n\n# header file layout across the entire project.\n\n#\n",
        "Line" : 406,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#\n\n# MsgPuck\n\n#\n",
        "Line" : 418,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#\n\n# LibYAML\n\n#\n",
        "Line" : 434,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#\n\n# zstd\n\n#\n",
        "Line" : 448,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#\n\n# Third-Party misc\n\n#\n",
        "Line" : 452,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# cpack config. called package.cmake to avoid\n\n# conflicts with the global CPack.cmake (On MacOS X\n\n# file names are case-insensitive)\n\n#\n",
        "Line" : 460,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\n\n# RPM build environment\n\n# CPACK is only used for .tar.gz package generation.\n\n# To build an RPM we need a source package,\n\n# so rpm.cmake depends on package.cmake.\n\n#\n",
        "Line" : 465,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#\n\n# tarantool info summary (used in server version output)\n\n#\n",
        "Line" : 494,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "#\n\n# Output compile-time defines into config.h. Do it at the end\n\n# of the script to make sure all variables are set.\n\n#\n",
        "Line" : 503,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 50
    },
    "FreeBSD/databases/tarantool/Makefile" : {
      "ObjectId" : "c4301b0d71780583c1a6888d8388f577bf0ba9ee",
      "LastModified" : "2016-09-01T10:21:31Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Created by: Veniamin Gvozdikov <vg@FreeBSD.org>\n\n# $FreeBSD$\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/BuildLibCORO.cmake" : {
      "ObjectId" : "3a9c95426a1fd75b0bb00a04ccdcc593b7932f30",
      "LastModified" : "2016-09-01T10:21:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# A macro to build the bundled libcoro\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/BuildLibEIO.cmake" : {
      "ObjectId" : "57561b56cc4a781a2d2b64a7cb70b8dae7a1b88d",
      "LastModified" : "2017-06-04T11:34:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# A macro to build the bundled libeio\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# See comments in BuildLibEV.cmake\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake/BuildLibEV.cmake" : {
      "ObjectId" : "58e970851e834d7b7f9b8344069bf7e80e3052d5",
      "LastModified" : "2017-03-23T16:27:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# A macro to build the bundled libev\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# There are warnings in libev code which are impossible to selectively\n\n# turn off, see\n\n# http://gcc.gnu.org/bugzilla/show_bug.cgi?id=45977\n\n# http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod#COMPILER_WARNINGS\n\n# while this stand off is going on, the world is not a very happy\n\n# place:\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Enable Linux-specific event notification API (man inotify)\n",
        "Line" : 17,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "#\n\n# On FreeBSD build libev loop on top of\n",
        "Line" : 23,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# libev depends on librt under kFreeBSD\n",
        "Line" : 30,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "cmake/BuildLibYAML.cmake" : {
      "ObjectId" : "7caa1828cad1d946f2ee91e533cf096f161842a3",
      "LastModified" : "2018-08-02T16:36:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# A macro to build the bundled libyaml\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# See comments in BuildLibEV.cmake\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake/BuildMisc.cmake" : {
      "ObjectId" : "b4a3ca1fc705486ad81f5eb5a49aaaf098f91265",
      "LastModified" : "2018-09-18T09:43:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# A macro to build the bundled libmisc\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/BuildZSTD.cmake" : {
      "ObjectId" : "3b622c5e7d7af862084229e367c463828a8ba5cc",
      "LastModified" : "2018-08-02T16:36:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindCURL.cmake" : {
      "ObjectId" : "e13b6cde437f64a7d1e1906dba1e607eaa210012",
      "LastModified" : "2018-11-03T07:37:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindCURL\n\n# --------\n\n#\n\n# Find curl\n\n#\n\n# Find the native CURL headers and libraries.\n\n#\n\n# ::\n\n#\n\n#   CURL_INCLUDE_DIRS   - where to find curl/curl.h, etc.\n\n#   CURL_LIBRARIES      - List of libraries when using curl.\n\n#   CURL_FOUND          - True if curl found.\n\n#   CURL_VERSION_STRING - the version of curl found (since CMake 2.8.8)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Always links pthread and dl dynamically.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Curl may be linked with optional or target-dependent libraries,\n\n# search for them and add to dependicies if found.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Look for the library (sorted from most current/relevant entry to least).\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Windows MSVC prebuilts:\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Windows older \"Win32 - MSVC\" prebuilts (libcurl.lib, e.g. libcurl-7.15.5-win32-msvc.zip):\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# In case of a static build we have to add curl dependencies.\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "cmake/FindICONV.cmake" : {
      "ObjectId" : "2ae9c81979b98cdd5e55dd69c405325b00337bed",
      "LastModified" : "2018-09-18T09:43:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the iconv include file and optional library\n\n#\n\n# ICONV_INCLUDE_DIRS\n\n# ICONV_LIBRARIES\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindICU.cmake" : {
      "ObjectId" : "26f0683f349c01fcbf4a627610666cc8d317b4a5",
      "LastModified" : "2018-09-18T09:43:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find ICU header and library\n\n# The module defines the following variables:\n\n#\n\n#  ICU_FOUND - true if ICU was found\n\n#  ICU_INCLUDE_DIRS - the directory of the ICU headers\n\n#  ICU_LIBRARIES - the ICU libraries needed for linking\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Check presence of ucol_strcollUTF8 function from ICU\n\n#\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindLibEIO.cmake" : {
      "ObjectId" : "781dcf37702258329a4a27f69b2320109185cdcf",
      "LastModified" : "2018-09-18T09:43:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindLibEV.cmake" : {
      "ObjectId" : "8445215808a7e740ca4ad87054976c202f8586b7",
      "LastModified" : "2018-09-18T09:43:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindLibYAML.cmake" : {
      "ObjectId" : "ade06e29232ce8e2b725842981e33a32b06f3489",
      "LastModified" : "2018-09-18T09:43:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindMsgPuck.cmake" : {
      "ObjectId" : "289560d4f25779d3c869f2b02124a86f7ea371cb",
      "LastModified" : "2018-09-18T09:43:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find libmsgpuck header-only library\n\n# The module defines the following variables:\n\n#\n\n#  MSGPUCK_FOUND - true if MsgPuck was found\n\n#  MSGPUCK_INCLUDE_DIRS - the directory of the MsgPuck headers\n\n#  MSGPUCK_LIBRARIES - the MsgPuck static library needed for linking\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindOpenSSL.cmake" : {
      "ObjectId" : "8cd22cc8d7b2815574711ddbee0f8cad0140f6f4",
      "LastModified" : "2018-09-18T09:43:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindOpenSSL\n\n# -----------\n\n#\n\n# Find the OpenSSL encryption library.\n\n#\n\n# Optional COMPONENTS\n\n# ^^^^^^^^^^^^^^^^^^^\n\n#\n\n# This module supports two optional COMPONENTS: ``Crypto`` and ``SSL``.  Both\n\n# components have associated imported targets, as described below.\n\n#\n\n# Imported Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following :prop_tgt:`IMPORTED` targets:\n\n#\n\n# ``OpenSSL::SSL``\n\n#   The OpenSSL ``ssl`` library, if found.\n\n# ``OpenSSL::Crypto``\n\n#   The OpenSSL ``crypto`` library, if found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module will set the following variables in your project:\n\n#\n\n# ``OPENSSL_FOUND``\n\n#   System has the OpenSSL library. If no components are requested it only\n\n#   requires the crypto library.\n\n# ``OPENSSL_INCLUDE_DIR``\n\n#   The OpenSSL include directory.\n\n# ``OPENSSL_CRYPTO_LIBRARY``\n\n#   The OpenSSL crypto library.\n\n# ``OPENSSL_SSL_LIBRARY``\n\n#   The OpenSSL SSL library.\n\n# ``OPENSSL_LIBRARIES``\n\n#   All OpenSSL libraries.\n\n# ``OPENSSL_VERSION``\n\n#   This is set to ``$major.$minor.$revision$patch`` (e.g. ``0.9.8s``).\n\n#\n\n# Hints\n\n# ^^^^^\n\n#\n\n# Set ``OPENSSL_ROOT_DIR`` to the root directory of an OpenSSL installation.\n\n# Set ``OPENSSL_USE_STATIC_LIBS`` to ``TRUE`` to look for static libraries.\n\n# Set ``OPENSSL_MSVC_STATIC_RT`` set ``TRUE`` to choose the MT version of the lib.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Support preference of static libs by adjusting CMAKE_FIND_LIBRARY_SUFFIXES\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# compat defines\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The version number is encoded as 0xMNNFFPPS: major minor fix patch status\n\n# The status gives if this is a developer or prerelease and is ignored here.\n\n# Major, minor, and fix directly translate into the version numbers shown in\n\n# the string. The patch field translates to the single character suffix that\n\n# indicates the bug fix state, which 00 -> nothing, 01 -> a, 02 -> b and so\n\n# on.\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# 96 is the ASCII code of 'a' minus 1\n",
        "Line" : 167,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Once anyone knows how OpenSSL would call the patch versions beyond 'z'\n\n# this should be updated to handle that, too. This has not happened yet\n\n# so it is simply ignored here for now.\n",
        "Line" : 170,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Restore the original find library ordering\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/FindOptionalPackage.cmake" : {
      "ObjectId" : "899460fef95d8902d08ad0a737c53a24a88272c3",
      "LastModified" : "2018-09-18T09:43:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# First run and WITH_${_packageUpper} option is not set by the user.\n\n# Enable auto-mode and try to find package.\n",
        "Line" : 13,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# Non-first run or WITH_${_packageUpper} was set by the user.\n\n# Force error if the package will not be found.\n",
        "Line" : 17,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Add the user option and (!) update the cache\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Now ${WITH_${_packageUpper}} is either ON or OFF\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/FindReadline.cmake" : {
      "ObjectId" : "c48bdcb3e9ba92f1487fcacbcbc66db9ecf6c5d2",
      "LastModified" : "2018-09-18T09:43:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the readline include files and libraries\n\n# - Include finding of termcap or curses\n\n#\n\n# READLINE_FOUND\n\n# READLINE_INCLUDE_DIR\n\n# READLINE_LIBRARIES\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindTermcap.cmake" : {
      "ObjectId" : "fa88fe7b2ea2498b36abfa025e7d39b58db80046",
      "LastModified" : "2018-09-18T09:43:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find Termcap includes and library\n\n#\n\n# TERMCAP_FOUND\n\n# TERMCAP_LIBRARY\n\n# TERMCAP_INCLUDE_DIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindZSTD.cmake" : {
      "ObjectId" : "b4421fbe66a5a1ca52f309ac0f063aa757a77ea0",
      "LastModified" : "2018-09-18T09:43:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/arch.cmake" : {
      "ObjectId" : "06df84f95088172aff94aad20ce567d1aaa8348f",
      "LastModified" : "2018-09-18T09:43:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# We do not perform host-to-network byte order translation,\n\n# and simply assume the machine is little-endian.\n\n# We also do not bother with trying to avoid unaligned\n\n# word access. Refuse to compile on rare hardware such as\n\n# Sparc or Itanium.\n\n#\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Bug in CMake, Darwin always detect on i386\n\n# Fixed with check types\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/atomic.cmake" : {
      "ObjectId" : "56bdc0d1ff0ab4457069570a691bf3c82e63d4f0",
      "LastModified" : "2018-09-18T09:43:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try compile a sample code using atomics and put success/failure\n\n# status in the TARGET_VAR.\n\n# Extra arguments (if any) are passed as compiler flags.\n\n# Note: CMAKE_C_FLAGS overrides any flag passed this way. The intention\n\n# is to avoid changing the architecture if it was set explicitly in\n\n# CMake invocation.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Atomics support missing with the default flags.\n\n# If the failure was due to the compiler targeting an outdated CPU\n\n# without atomic instructions we will fix it now.\n\n# The precise flags depend on the processor architecture and the\n\n# compiler being used.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# x86 (32 bit)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Attempt to compile the same code again with the extra flags.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/compiler.cmake" : {
      "ObjectId" : "4062d13ecb0af4fcd1b33bf8000e0cb3c70360a7",
      "LastModified" : "2018-11-03T07:37:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check if the same compile family is used for both C and CXX\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We support building with Clang and gcc. First check \n\n# what we're using for build.\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Hard coding the compiler version is ugly from cmake POV, but \n\n# at least gives user a friendly error message. The most critical\n\n# demand for C++ compiler is support of C++11 lambdas, added\n\n# only in version 4.5 https://gcc.gnu.org/projects/cxx0x.html\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# cmake 2.8.9 and earlier doesn't support CMAKE_CXX_COMPILER_VERSION\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Check supported standards\n\n#\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Check for an omp support\n\n#\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# GCC started to warn for unused result starting from 4.2, and\n\n# this is when it introduced -Wno-unused-result\n\n# GCC can also be built on top of llvm runtime (on mac).\n\n#\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Perform build type specific configuration.\n\n#\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# unwind is required\n",
        "Line" : 140,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Static linking for c++ routines\n",
        "Line" : 176,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#\n\n# Set flags for all include files: those maintained by us and\n\n# coming from third parties.\n\n# Since we began using luajit, which uses gcc stack unwind\n\n# internally, we also need to make sure all code is compiled\n\n# with unwind info.\n\n#\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# We must set -fno-omit-frame-pointer here, since we rely\n\n# on frame pointer when getting a backtrace, and it must\n\n# be used consistently across all object files.\n\n# The same reasoning applies to -fno-stack-protector switch.\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# In C a global variable without a storage specifier (static/extern) and\n\n# without an initialiser is called a ’tentative definition’. The\n\n# language permits multiple tentative definitions in the single\n\n# translation unit; i.e. int foo; int foo; is perfectly ok. GNU\n\n# toolchain goes even further, allowing multiple tentative definitions\n\n# in *different* translation units. Internally, variables introduced via\n\n# tentative definitions are implemented as ‘common’ symbols. Linker\n\n# permits multiple definitions if they are common symbols, and it picks\n\n# one arbitrarily for inclusion in the binary being linked.\n\n#\n\n# -fno-common forces GNU toolchain to behave in a more\n\n# standard-conformant way in respect to tentative definitions and it\n\n# prevents common symbols generation. Since we are a cross-platform\n\n# project it really makes sense. There are toolchains that don’t\n\n# implement GNU style handling of the tentative definitions and there\n\n# are platforms lacking proper support for common symbols (osx).\n\n#\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Remove VALGRIND code and assertions in *any* type of release build.\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Tarantool code is written in GNU C dialect.\n\n# Additionally, compile it with more strict flags than the rest\n\n# of the code.\n",
        "Line" : 227,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Set standard\n",
        "Line" : 231,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# False-positive warnings for ({ xx = ...; x; }) macroses\n",
        "Line" : 252,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# G++ bug. http://gcc.gnu.org/bugzilla/show_bug.cgi?id=31488\n",
        "Line" : 265,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# A workaround for Redhat Developer Toolset 2.x on RHEL/CentOS 5.x\n",
        "Line" : 272,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# Suppress noise GCC 8 warnings.\n\n#\n\n# reflection.h casts a pointer to a member function to an another pointer\n\n# to a member function to store it in a structure, but cast it back before\n\n# a call. It is legal and does not lead to an undefined behaviour.\n",
        "Line" : 276,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Only add -Werror if it's a Debug or RelWithDebInfoWError build, done by\n\n# developers. Release builds should not cause extra trouble.\n",
        "Line" : 289,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Check if -D_GNU_SOURCE has been defined and add this flag to\n\n# CMAKE_REQUIRED_DEFINITIONS in order to get check_prototype_definition work\n",
        "Line" : 325,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 22
    },
    "cmake/lto.cmake" : {
      "ObjectId" : "95ade75f48f109d478beb999a1fd946783388311",
      "LastModified" : "2018-11-03T07:37:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Manage LTO (Link-Time-Optimization) and IPO\n\n# (Inter-Procedural-Optimization)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tarantool uses both dynamic-list and lto link options, which\n\n# works only since binutils:\n\n#\n\n# - 2.30 for linking with ld.gold (gold version is 1.15);\n\n# - last 2.30 or 2.31 in case of ld.bfd.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This cmake module exports CMP0069 policy and should be included\n\n# with NO_POLICY_SCOPE option.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The file gives an error if LTO is requested, but cannot be\n\n# enabled for some reason.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Disable LTO if not requested.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# 'CMP0069 NEW' behaviour enables LTO for compilers other then\n\n# Intel Compiler when CMAKE_INTERPROCEDURAL_OPTIMIZATION is\n\n# enabled and provides CheckIPOSupported module. We set the policy\n\n# to support LTO with GCC / Clang and to suppress cmake warnings\n\n# on the unset policy.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Retain 'CMP0069 NEW' behaviour after\n\n# 'cmake_minimum_required(VERSION ...) in subprojects to\n\n# avoid cmake warnings on the unset policy.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Check whether LTO is supported by the compiler / toolchain and\n\n# give an error otherwise.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Extra checks on Linux whether all needed LTO features are\n\n# supported. Mac OS seems to work correctly with xcode >= 8.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# GNU ld (Gentoo 2.31.1 p3) 2.31.1\n\n# GNU ld (GNU Binutils for Ubuntu) 2.30\n\n# GNU ld version 2.27-10.el7\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# GNU gold (Gentoo 2.31.1 p3 2.31.1) 1.16\n\n# GNU gold (GNU Binutils for Ubuntu 2.30) 1.15\n\n# GNU gold (version 2.27-10.el7) 1.12\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# gh-3742: investigate LTO warnings.\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "cmake/luajit.cmake" : {
      "ObjectId" : "eca2bf36bd89aa3c6bda757cebedfdbd54b5f770",
      "LastModified" : "2019-03-18T15:38:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# LuaJIT configuration file.\n\n#\n\n# A copy of LuaJIT is maintained within Tarantool\n\n# source. It's located in third_party/luajit.\n\n#\n\n# Instead of this copy, Tarantool can be compiled\n\n# with a system-wide LuaJIT, or LuaJIT at a given\n\n# prefix. This is used when compiling Tarantool\n\n# as part of a distribution, e.g. Debian.\n\n#\n\n# To explicitly request use of the bundled LuaJIT,\n\n# add -DENABLE_BUNDLED_LUAJIT=True to CMake\n\n# configuration flags.\n\n# To explicitly request use of LuaJIT at a given\n\n# prefix, use -DLUAJIT_PREFIX=/path/to/LuaJIT.\n\n#\n\n# These two options are incompatible with each other.\n\n#\n\n# If neither of the two options is given, this script\n\n# first attempts to use the system-installed LuaJIT\n\n# and, in case it is not present or can not be used,\n\n# falls back to the bundled one.\n\n#\n\n# LUAJIT_FOUND\n\n# LUAJIT_LIBRARIES\n\n# LUAJIT_INCLUDE_DIRS\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Bundled LuaJIT paths.\n\n#\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# LuaJIT testing routine\n\n# (see cmake/luatest.cpp for a description).\n\n#\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Check if there is a system LuaJIT availaible and\n\n# usable with the server (determined by a compiled test).\n\n#\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#luajit_use_bundled()\n",
        "Line" : 80,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "#\n\n# Check if there is a usable LuaJIT at the given prefix path.\n\n#\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# LuaJIT options.\n\n#\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# trying to build with specified LuaJIT.\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# trying to build with system LuaJIT, macro can turn on\n\n# building of LuaJIT bundled with the server source.\n",
        "Line" : 118,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#include_directories(\"${LUAJIT_INCLUDE}\")\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Cmake rules concerning strings and lists of strings are weird.\n\n#   set (foo \"1 2 3\") defines a string, while\n\n#   set (foo 1 2 3) defines a list.\n\n# Use separate_arguments() to turn a string into a list (splits at ws).\n\n# It appears that variable expansion rules are context-dependent.\n\n# With the current arrangement add_custom_command()\n\n# does the right thing. We can even handle pathnames with\n\n# spaces though a path with an embeded semicolon or a quotation mark\n\n# will most certainly wreak havok.\n\n#\n\n# This stuff is extremely fragile, proceed with caution.\n",
        "Line" : 131,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Necessary to make LuaJIT work on Darwin, see\n\n# http://luajit.org/install.html\n",
        "Line" : 165,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# We are consciously ommiting debug info in RelWithDebInfo mode\n",
        "Line" : 171,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Pass sysroot - prepended in front of system header/lib dirs,\n\n# i.e. <sysroot>/usr/include, <sysroot>/usr/lib.\n\n# Needed for XCode users without command line tools installed,\n\n# they have headers/libs deep inside /Applications/Xcode.app/...\n",
        "Line" : 186,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Pass deployment target\n",
        "Line" : 195,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Default to 10.6 since @rpath support is NOT available in\n\n# earlier versions, needed by AddressSanitizer.\n",
        "Line" : 197,
        "CharPositionInLine" : 12
      },
      "16" : {
        "Text" : "# AddressSanitizer - CFLAGS were set globaly\n",
        "Line" : 215,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Add all COMPILE_DEFINITIONS to xcflags\n",
        "Line" : 221,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# We need to set MACOSX_DEPLOYMENT_TARGET to at least 10.6,\n\n# because 10.4 SDK (which is set by default in LuaJIT's\n\n# Makefile) is not longer included in Mac OS X Mojave 10.14.\n\n# See also https://github.com/LuaJIT/LuaJIT/issues/484\n",
        "Line" : 237,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "#\n\n# Building shipped luajit only if there is no\n\n# usable system one (see cmake/luajit.cmake) or by demand.\n\n#\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "cmake/module.cmake" : {
      "ObjectId" : "988dcb94dad37c1b5ec18eda7b8ac691072aa9c1",
      "LastModified" : "2018-11-03T07:37:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A helper function to extract public API\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get absolute path for header files (required of out-of-source build)\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Pass sysroot settings on OSX\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "cmake/multilib.cmake" : {
      "ObjectId" : "fce4478459a7672ba6f4c1650e9765b023a7dd7d",
      "LastModified" : "2018-11-03T07:37:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Comment from GNUInstallDirs.cmake:\n\n# Override this default 'lib' with 'lib64' iff:\n\n#  - we are on Linux system but NOT cross-compiling\n\n#  - we are NOT on debian\n\n#  - we are on a 64 bits system\n\n# reason is: amd64 ABI: http://www.x86-64.org/documentation/abi.pdf\n\n# For Debian with multiarch, use 'lib/${CMAKE_LIBRARY_ARCHITECTURE}' if\n\n# CMAKE_LIBRARY_ARCHITECTURE is set (which contains e.g. \"i386-linux-gnu\"\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Debian\n",
        "Line" : 17,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Not debian, rely on CMAKE_SIZEOF_VOID_P:\n",
        "Line" : 20,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    },
    "cmake/os.cmake" : {
      "ObjectId" : "ea581108b35d492b3582add29e35a2154b90fdf1",
      "LastModified" : "2018-11-03T07:37:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Perform operating-system specific configuration.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Enable GNU glibc extentions.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# On 32-bit systems, support files larger than 2GB\n\n# (see man page for feature_test_macros).\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Debian/kFreeBSD uses GNU glibc.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Default build type is None, which uses depends by Apple\n\n# command line tools. Also supportting install with MacPorts.\n\n#\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Mac ports get installed into /opt/local, hence:\n",
        "Line" : 42,
        "CharPositionInLine" : 7
      },
      "6" : {
        "Text" : "# In Mac OS, the dynamic linker recognizes\n\n# @loader_path, @executable_path and @rpath tokens, ex:\n\n#   '@loder_path/lit.dylib'\n\n# means load lit from the same dir the requesting binary lives in.\n\n# Since our dynamic libraries aren't intended for static linking,\n\n# this is pretty much irrelevant. Disable CMake rpath features\n\n# altogether. Suppresses a few warnings.\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Latest versions of Homebrew wont 'link --force' for libraries, that were\n\n# preinstalled in system. So we'll use this dirty hack\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Detecting LibReadline\n",
        "Line" : 69,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Detecting OpenSSL\n",
        "Line" : 83,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Detecting CURL\n",
        "Line" : 97,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Detecting ICU4C\n",
        "Line" : 111,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 12
    },
    "cmake/package.cmake" : {
      "ObjectId" : "c84f5e543a082623b223205f55edfa3555793fc5",
      "LastModified" : "2018-11-03T07:37:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# List generators\n\n#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Ignoring generated files\n\n#\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Provide options for the binary distribution.\n\n#\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/pod2man.cmake" : {
      "ObjectId" : "9e3959f52d9f4ca6ad698c4f01224b0c44f0e65c",
      "LastModified" : "2018-11-03T07:37:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generate man pages of the project by using the POD header\n\n# written in the tool source code. To use it - include this\n\n# file in CMakeLists.txt and invoke\n\n# pod2man(<podfile> <manfile> <section> <center>)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/profile.cmake" : {
      "ObjectId" : "0ba31fa2c5ed73a4136154cae00d95742d09f31c",
      "LastModified" : "2019-03-18T15:38:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add_library(gcov SHARED IMPORTED)\n",
        "Line" : 24,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 1
    },
    "cmake/rpm.cmake" : {
      "ObjectId" : "3b2c20fc5809896b8ffa018dc6651d7f33041c95",
      "LastModified" : "2018-11-03T07:37:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: Targets below are temporary broken\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# TODO: Add MOCK builds\n\n#     : -DMOCK_TARGET\n\n#     : -DMOCK_OS: EPEL / FEDORA\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake/simd.cmake" : {
      "ObjectId" : "df1840022ea805a97e837a3f48c26ea6f48123e0",
      "LastModified" : "2018-11-03T07:37:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check compiler for SSE2 intrinsics\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Check compiler for AVX intrinsics\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# any amd64 supports sse2 instructions\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "cmake/systemd.cmake" : {
      "ObjectId" : "93dc027485e612ffb9f5f9fe00753747ebd280e8",
      "LastModified" : "2018-11-03T07:37:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Disable systemd and sysvinit by default if target is not Linux\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# try to find systemd if it wasn't implicitly disabled\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fallback to sysvinit if it wasn't implicitly enabled\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Debian and Ubuntu\n",
        "Line" : 34,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# RHEL, Fedora and other\n",
        "Line" : 37,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "# Debian and Ubuntu\n",
        "Line" : 50,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# RHEL, Fedora and other\n",
        "Line" : 53,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# Disable sysvinit if it wasn't implicitly requested\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "cmake/thread.cmake" : {
      "ObjectId" : "29b1da5f259e929b9ca56d3afed855637af063fa",
      "LastModified" : "2018-11-03T07:37:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Doing it in a function to avoid polluting the toplevel namespace\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# pthread_setname_np(<thread_id>, <name>) - Linux\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# pthread_setname_np(<name>) - OSX\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# pthread_set_name_np(<thread_id>, <name>) - *BSD\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# pthread_getattr_np - Glibc\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# pthread_attr_get_np - xBSD/macOS\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# pthread_get_stacksize_np - OSX\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# pthread_get_stackaddr_np - OSX\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "cmake/utils.cmake" : {
      "ObjectId" : "3ab2d3ff24611f8599789388c0d7339f1ce8ff57",
      "LastModified" : "2018-11-03T07:37:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake believes that Objective C is a flavor of C++, not C,\n\n# and uses g++ compiler for .m files.\n\n# LANGUAGE property forces CMake to use CC for ${file}\n",
        "Line" : 16,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "# message(STATUS \"Set (${file} ${_flags}\")\n",
        "Line" : 31,
        "CharPositionInLine" : 12
      },
      "2" : {
        "Text" : "# A helper function to compile *.lua source into *.lua.c sources\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "5cf300500ecfe07e6d171daf47b5165261b44174",
      "LastModified" : "2018-11-03T07:37:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/man/CMakeLists.txt" : {
      "ObjectId" : "885b48c5d965721f99422d43bd2da8a554c4baa7",
      "LastModified" : "2018-11-03T07:37:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extra/CMakeLists.txt" : {
      "ObjectId" : "537f0bbc6f617a991c506616ef00c2b75e736e5b",
      "LastModified" : "2018-11-03T07:37:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# NOTE: need add execution 'plutil -lint org.tarantool.tarantool.plist\n\n# to check syntax of plist file.\n\n# Also cmake doesn't support changing package id from 'com.' to 'org.'\n\n# Need chage to 'org.' after update lines this file:\n\n# https://github.com/Kitware/CMake/blob/v2.8.11.2/Source/CPack/cmCPackPackageMakerGenerator.cxx#L763\n\n#\n\n# ^^^ DO NOT CHANGE DARWIN_PACKAGE_ID BEFORE SEE URL ABOVE ^^^\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Configure scripts for *.pkg and luanchd daemon by templates\n",
        "Line" : 15,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# chmod +x 644\n",
        "Line" : 18,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "extra/dist/CMakeLists.txt" : {
      "ObjectId" : "3045b5aaf5a81c8e244c6e1fe480ad0fe2b7b31a",
      "LastModified" : "2018-11-03T07:37:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# config file for tarantoolctl\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Debian/Ubuntu/etc.\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# RedHat/Fedora/etc.\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#\n\n# tarantoolctl\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default path to data in default/tarantool\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Don't use instances.enabled on systemd distros\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# tarantoolctl itself\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# directories in /etc/ for tarantoolctl\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# an example instance script for tarantoolctl\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# directories for data, logs and pid files\n\n# Sic: chmod and chown are performed by rpm/deb\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# /var/run/tarantool is only needed with sysvinit\n\n# systemd creates this directory automatically using systemd-tmpfiles\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# logrotate files\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# man page for tarantoolctl\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n\n# Init scripts\n\n#\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# NOTE: always install tarantool.init to ${CMAKE_INSTALL_PREFIX}/lib\n\n# instead of ${CMAKE_INSTALL_LIBDIR} because LIBDIR depends on the target\n\n# architecture, but tarantool-common is noarch package.\n",
        "Line" : 124,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Install generator and tarantool.service file to allow\n\n# sysvinit alongside systemd (Debian/Ubuntu)\n\n#\n",
        "Line" : 138,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 16
    },
    "extra/luarocks/CMakeLists.txt" : {
      "ObjectId" : "bc81f6280dd3933e47e42f99bb8453da8bb5e510",
      "LastModified" : "2018-11-03T07:37:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extra/luarocks/site_config.lua.cmake" : {
      "ObjectId" : "02272bf48ceef31f9473e811524f6bd71af9ae12",
      "LastModified" : "2018-11-03T07:37:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "rump/Makefile" : {
      "ObjectId" : "5889772de46612e1f055f0261b173a6aa7472c8c",
      "LastModified" : "2018-11-03T07:37:51Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "7c239551726ce3219e9fb6e344646f1d616b3841",
      "LastModified" : "2019-03-18T15:38:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Set compile flags for entire src/ directory\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compile src/lua/*.lua files into src/lua/*.lua.c sources\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# LuaJIT jit.* library\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# There is no libdl.so on FreeBSD prior to 11.2.\n\n#\n\n# Always links pthread and dl dynamically.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Rule of thumb: if exporting a symbol from a static library, list the\n\n# library here.\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Save CMAKE_XXX_FLAGS from this directory for config.h (used in --version)\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# for each static library we should find a corresponding shared library to\n\n# parse and reexport library api functions\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# add found library to export list\n",
        "Line" : 219,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "# set variable to allow rescan (CMake depended)\n",
        "Line" : 221,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# Link libgomp explicitly to make it static. Avoid linking\n\n# against DSO version of libgomp, which implied by -fopenmp\n",
        "Line" : 230,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Exports syntax is toolchain-dependent, preprocessing is necessary\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Re-link if exports changed\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# A note about linkers:\n\n# [GNU linker] When linking an *executable* visibility is ignored, and\n\n#              either nothing is exported (default), or any non-static\n\n#              symbol is exported (-rdynamic), or explicitly listed\n\n#              symbols are exported (--dynamic-list).\n\n#\n\n#              However, if a symbol listed lives in a static library it\n\n#              won't be automatically pulled, hence --whole-archive\n\n#              option.\n\n#\n\n# [Apple linker] One can provide an explicit export list; pulls symbols\n\n#                from static libraries.\n\n#\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# get rid of -rdynamic\n",
        "Line" : 285,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 14
    },
    "src/box/CMakeLists.txt" : {
      "ObjectId" : "31600745a7d97b707f0153acf366ffbbffa9d206",
      "LastModified" : "2019-04-02T09:45:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/box/sql/CMakeLists.txt" : {
      "ObjectId" : "b9dbe141adc700233c7df28f831b4fb384d51fba",
      "LastModified" : "2019-04-02T13:43:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generated files\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "src/lib/CMakeLists.txt" : {
      "ObjectId" : "b7179d04f11a52a8b982f9f84151ed9cfa63364d",
      "LastModified" : "2019-03-18T15:38:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lib/bit/CMakeLists.txt" : {
      "ObjectId" : "49df397d333ebfd2e772f4521cc0d0269ddedb5d",
      "LastModified" : "2018-11-03T07:37:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lib/bitset/CMakeLists.txt" : {
      "ObjectId" : "1339a02efa91be4fbcd14ea4c4c2c480ef67b0b2",
      "LastModified" : "2018-11-03T07:37:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lib/coll/CMakeLists.txt" : {
      "ObjectId" : "c01e608bb108d0b036f780a47edb912e370b73ee",
      "LastModified" : "2019-03-18T15:38:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lib/core/CMakeLists.txt" : {
      "ObjectId" : "eb10b11c3fd7156af2ed5ee99df1fe04d0ab64cb",
      "LastModified" : "2019-03-18T15:38:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A workaround for \"undefined reference to `__gcc_personality_v0'\"\n\n# on x86_64-rumprun-netbsd-gcc\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "src/lib/csv/CMakeLists.txt" : {
      "ObjectId" : "3580e4da2f47bcb6f9943b9f76bd8f768574be4c",
      "LastModified" : "2019-03-18T15:38:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lib/http_parser/CMakeLists.txt" : {
      "ObjectId" : "a48f83cb67af8d1dc49a11c22414fc7e884d4285",
      "LastModified" : "2019-03-18T15:38:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lib/json/CMakeLists.txt" : {
      "ObjectId" : "4462ee2d7043ecfaa41b053929b96214484acce8",
      "LastModified" : "2019-03-18T15:38:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lib/salad/CMakeLists.txt" : {
      "ObjectId" : "5263c16e4bc33ea9557ea97a5e1b93bf5a4c33e0",
      "LastModified" : "2019-03-18T15:38:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lib/swim/CMakeLists.txt" : {
      "ObjectId" : "8ba99d80384c7ad30183be8be338fe57fe7899b9",
      "LastModified" : "2019-03-18T15:38:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lib/uri/CMakeLists.txt" : {
      "ObjectId" : "96410e5bff4b418d8827682b5ea8c1c3da6126b0",
      "LastModified" : "2019-03-18T15:38:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Suppress noise warnings for autogenerated Ragel code\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "src/lib/uuid/CMakeLists.txt" : {
      "ObjectId" : "581e4495a3049e279daa4391a2a0ab3338860171",
      "LastModified" : "2019-03-18T15:38:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/trivia/config.h.cmake" : {
      "ObjectId" : "ca0057d2beea5e19a3311cda1c7bf4191716baba",
      "LastModified" : "2019-03-18T15:38:56Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\n * This file is generated by CMake. The original file is called\n * config.h.cmake. Please do not modify.\n */",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/** \\cond public */",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/**\n * Package major version - 1 for 1.6.7\n */",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/**\n * Package minor version - 6 for 1.6.7\n */",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/**\n * Package patch version - 7 for 1.6.7\n */",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/**\n * A string with major-minor-patch-commit-id identifier of the\n * release, e.g. 1.6.6-113-g8399d0e.\n */",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/** \\endcond public */",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/*  Defined if building for Linux */",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/*  Defined if building for FreeBSD */",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/*  Defined if building for NetBSD */",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/*  Defined if building for Darwin */",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/**\n * Defined if cpuid() instruction is available.\n */",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/*\n * Defined if gcov instrumentation should be enabled.\n */",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/*\n * Defined if configured with ENABLE_BACKTRACE ('show fiber'\n * showing fiber call stack.\n */",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/*\n * Set if the system has bfd.h header and GNU bfd library.\n */",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/*\n * MAP_ANON is deprecated, MAP_ANONYMOUS should be used instead.\n * Unfortunately, it's not universally present (e.g. not present\n * on FreeBSD.\n */",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/*\n * Defined if O_DSYNC mode exists for open(2).\n */",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/*\n * Defined if fdatasync(2) call is present.\n */",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/*\n * Defined if this platform has GNU specific memmem().\n */",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/*\n * Defined if this platform has GNU specific memrchr().\n */",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/*\n * Defined if this platform has sendfile(..).\n */",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/*\n * Defined if this platform has Linux specific sendfile(..).\n */",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/*\n * Defined if this platform has BSD specific sendfile(..).\n */",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/*\n * Set if this is a GNU system and libc has __libc_stack_end.\n */",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/*\n * Defined if this is a big-endian system.\n */",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "/*\n * Defined if this platform supports openmp and it is enabled\n */",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "/*\n*  Defined if compatible with GNU readline installed.\n*/",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "/*\n * Defined if `st_mtim' is a member of `struct stat'.\n */",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "/*\n * Defined if `st_mtimensec' is a member of `struct stat'.\n */",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "/*\n * Set if compiler has __builtin_XXX methods.\n */",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "/*\n * pthread have problems with -std=c99\n */",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "/** pthread_np.h - non-portable stuff */",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "/** pthread_setname_np(pthread_self(), \"\") - Linux */",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "/** pthread_setname_np(\"\") - OSX */",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "/** pthread_set_name_np(pthread_self(), \"\") - *BSD */",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "/*\n * Defined if ICU library has ucol_strcollUTF8 method.\n */",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "/*\n* Defined if systemd is enabled\n */",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "/** \\cond public */",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "/** System configuration dir (e.g /etc) */",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "/** Install prefix (e.g. /usr) */",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "/** Build type, e.g. Debug or Release */",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "/** CMake build type signature, e.g. Linux-x86_64-Debug */",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "/** Command line used to run CMake */",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "/** Pathes to C and CXX compilers */",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "/** C compile flags used to build Tarantool */",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "/** CXX compile flags used to build Tarantool */",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "/** A path to install *.lua module files */",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "/** A path to install *.so / *.dylib module files */",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "/** A path to Lua includes (the same directory where this file is contained) */",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "/** A constant added to package.path in Lua to find *.lua module files */",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "/** A constant added to package.cpath in Lua to find *.so module files */",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "/** Shared library suffix - \".so\" on Linux, \".dylib\" on Mac */",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "/** \\endcond public */",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "/* Cacheline size to calculate alignments */",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "/*\n * vim: syntax=c\n */",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 55
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "53357504e0b0e0ee6da6a8b545034128f87e3de0",
      "LastModified" : "2019-03-18T15:38:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Move tarantoolctl config\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Disable connector_c for 1.6\n\n#add_subdirectory(connector_c)\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/app-tap/CMakeLists.txt" : {
      "ObjectId" : "ee67cf533af5d984f2dddf1a5d84789af0e1125f",
      "LastModified" : "2019-03-18T15:38:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/app/CMakeLists.txt" : {
      "ObjectId" : "059ee8f3d63b9dd401339760d592efe22a537bcd",
      "LastModified" : "2019-03-18T15:38:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/box/CMakeLists.txt" : {
      "ObjectId" : "06bfbbe9d00fae16149393f75632b1c4a334d4ad",
      "LastModified" : "2019-03-18T15:38:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/unit/CMakeLists.txt" : {
      "ObjectId" : "bb88b9c9b921fe16796ac9ac4c6f2c4f36aacc77",
      "LastModified" : "2019-04-17T15:36:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This test is known to be broken with GCOV\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "third_party/libeio/Makefile.am" : {
      "ObjectId" : "568f824b5741be017dfdae0b3cd791fed81c5b90",
      "LastModified" : "2019-03-18T15:38:56Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#man_MANS = ev.3\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "third_party/libev/Makefile.am" : {
      "ObjectId" : "059305bc3d013f715345d962b2d9f0ab221336fe",
      "LastModified" : "2019-03-18T15:38:56Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 61,
    "CMAKESOURCE" : 1,
    "MAKEFILE" : 2,
    "AUTOMAKE" : 2
  },
  "ElapsedTime" : 5502
}