{
  "Repository" : "10149585",
  "Revision" : "HEAD",
  "ObjectId" : "e3d054086b211a0f51409afb4ba21e0b5e4c31e4",
  "CommitTime" : "2019-04-11T19:04:28Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "92adf53aa8f0c46495bd0604eb58abb209553b38",
      "LastModified" : "2019-04-11T04:36:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Before going any further, define build options\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Warn if building in source root\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Appends the cmake/modules path to MAKE_MODULE_PATH variable.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check if provided compiler supports target flag\n\n# usage:\n\n#       compiler_flag_supported(C/CXX is_supported flag)\n\n#\n\n# The result of output_variable is set to the sanitized flag name if supported\n\n# or cleared if the flag is not supported.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Currently only C and CXX compile flags, clear and return if not supported\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Disable messages from CHECK_C/XX_COMPILER_FLAGS macros\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# C or CXX?\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Restore previous CMAKE_REQUIRED_QUIET state\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Does the compiler support this flag?\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Add scoped compile flag/s using add_compile_options.\n\n# This function checks to see if each flag is supported\n\n# by the compiler before setting the compile option.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Iterate the flags, check if supported\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Check if this compile flag is supported\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Add if supported, warn and skip if not supported\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Set the variable in the parent scope\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Compiler flags common to both C and CXX\n\n# Enable -Wall\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Temp fix for MRAA deprecated methods\n",
        "Line" : 96,
        "CharPositionInLine" : 33
      },
      "16" : {
        "Text" : "# GCC-6 added -Wmisleading-indentation to -Wall, skip these for now\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Warnings as errors?\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Set C compiler warning flags at top-level scope and emit a warning about\n\n# unsupported flags\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Set CXX compiler warning flags at top-level scope and emit a warning about\n\n# unsupported flags\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Allow exception error handling for Android C++\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Force a libmraa search and minimum required version every time a config is generated\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Also, get full path to the mraa library\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Test MRAA for various compile options\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Check for BACNET\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Check for MODBUS\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Check for OPENZWAVE\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Check for TinyB\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# And get full path to the tinyb library\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Find JPEG\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Find nodejs\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Find JAVA/JNI\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Also, get full path to the mraajava library\n",
        "Line" : 177,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# Cordova binding\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Find swig if any wrapper is enabled\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Python is required for swig generated python and for UPM tests.\n\n# The UPM build can generated modules for both python2 AND python3\n\n# with the corresponding PYTHONLIBS.  Currently, BUILDTESTS has a\n\n# hard dependency on the PYTHON2INTERP.\n\n# OpenCV python detect will attempt to find python2/3\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Fail if building tests but no python interpreter was found\n",
        "Line" : 206,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# Fail if no LIBS were found\n",
        "Line" : 211,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# Which versions of python were found?\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Python2 is currently required for python documentation\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Set CMAKE_INSTALL_LIBDIR if not defined\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Make a version file containing the current version from git.\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# If git_describe fails, use a dirty version\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Parse the version information into pieces.\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Detect arch\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# enable c++11 standards support unconditionally\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# 3.1+ uses this generic method to enable c++11\n",
        "Line" : 281,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# 3.1+ uses this generic method to enable c11\n",
        "Line" : 296,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# The doc target depends on the C/C++ source and all libraries\n\n#\n\n# doc\n\n#   ├──> src\n\n#   ├──> include\n\n#   ├──> libupm_sensor0\n\n#   ├──> libupm_sensor1\n\n#   ├──> ...\n\n#   └──> libupm_sensor_n\n\n#\n\n# The pydoc target builds documentation with sphinx via inspection by loading\n\n# each python2 module.  Those modules must include the CXX documentation via\n\n# a monolithic swig file generated by doxy2swig\n\n#\n\n# pydoc\n\n#  └──> _pyupm_sensor0_python2\n\n#        ├──> libupm_sensor0\n\n#        └──> doxy2swig\n\n#\n\n# The doxy2swig target is dependent upon the doc target IF BUILDDOC=ON,\n\n#\n\n# doxy2swig\n\n#  └──> BUILDDOC=ON───> doc\n\n#\n\n# The jsdoc target builds js documentation via yuidoc and only requires\n\n# the doc target\n\n#\n\n# jsdoc ─> doc\n\n#\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Add a target to generate API documentation with Doxygen\n",
        "Line" : 332,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# Custom command to run doxygen (note depends on ALL UPM C++ targets)\n",
        "Line" : 344,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# Check if Sphinx is installed and add target to generate API documentation\n\n# Currently, the per-module documentation for python is generated from the\n\n# python2 modules.\n\n# Since python2 is required for documentation, only copy from python2 paths, this\n\n# ensures that sphinx doesn't run across python2 and python3 binaries.  When running\n\n# the sphinx tools, explicitly run from the python2 interpreter (tested with the sphinx\n\n# 1.3.6 python2 and python3 modules).\n",
        "Line" : 358,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# Generate python module documentation from doxygen collateral\n\n#\n\n# doxygen index.xml -> doxy2swig.py -> pyupm_doxy2swig.i\n",
        "Line" : 366,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# TODO: use a separate cmake FILE module for string replacement instead\n",
        "Line" : 392,
        "CharPositionInLine" : 8
      },
      "54" : {
        "Text" : "# Check if Yuidoc is installed and add target for API documentation\n",
        "Line" : 407,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# Get target package arch from Yocto ADT sysroot if set or host OS, mapping to Ubuntu name if necessary\n",
        "Line" : 429,
        "CharPositionInLine" : 1
      },
      "56" : {
        "Text" : "# Debian uses amd64 to denote x86_64\n",
        "Line" : 434,
        "CharPositionInLine" : 4
      },
      "57" : {
        "Text" : "#required\n",
        "Line" : 446,
        "CharPositionInLine" : 58
      },
      "58" : {
        "Text" : "# UPM common headers\n",
        "Line" : 490,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Generate a build-only C++ header to add functionality to SWIG'ed modules\n",
        "Line" : 493,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# UPM source\n",
        "Line" : 496,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# UPM examples\n",
        "Line" : 499,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Python interp is previously found if BUILDTESTS=ON\n",
        "Line" : 502,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Setup documentation AFTER all source targets have been added\n",
        "Line" : 508,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Install C headers\n",
        "Line" : 513,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 65
    },
    "cmake/Toolchains/oe-sdk_cross.cmake" : {
      "ObjectId" : "8a82c296ca2195acd45d85b1dd01dfd2579d70ab",
      "LastModified" : "2015-08-13T23:25:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this toolchain file comes from gnuradio project\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set( CMAKE_C_COMPILER  $ENV{CC} )\n\n#set( CMAKE_CXX_COMPILER  $ENV{CXX} )\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#same flags for C sources\n",
        "Line" : 9,
        "CharPositionInLine" : 56
      },
      "3" : {
        "Text" : "#same flags for C sources\n",
        "Line" : 10,
        "CharPositionInLine" : 68
      },
      "4" : {
        "Text" : "# for java\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/modules/CPackDeb.cmake" : {
      "ObjectId" : "2a09498eeaba5bb4e04ad5e0beac4e060abe8f85",
      "LastModified" : "2016-09-14T21:08:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - The builtin (binary) CPack Deb generator (Unix only)\n\n# CPackDeb may be used to create Deb package using CPack.\n\n# CPackDeb is a CPack generator thus it uses the CPACK_XXX variables\n\n# used by CPack : http://www.cmake.org/Wiki/CMake:CPackConfiguration\n\n#\n\n# However CPackRPM has specific features which are controlled by\n\n# the specifics CPACK_RPM_XXX variables.You'll find a detailed usage on \n\n# the wiki: \n\n#  http://www.cmake.org/Wiki/CMake:CPackPackageGenerators#DEB_.28UNIX_only.29\n\n# However as a handy reminder here comes the list of specific variables:\n\n#\n\n#  CPACK_DEBIAN_PACKAGE_NAME\n\n#     Mandatory : YES\n\n#     Default   : CPACK_PACKAGE_NAME (lower case)\n\n#     The debian package summary\n\n# CPACK_DEBIAN_PACKAGE_VERSION\n\n#     Mandatory : YES\n\n#     Default   : CPACK_PACKAGE_VERSION\n\n#     The debian package version\n\n# CPACK_DEBIAN_PACKAGE_ARCHITECTURE)\n\n#     Mandatory : YES\n\n#     Default   : Output of dpkg --print-architecture or i386\n\n#     The debian package architecture\n\n# CPACK_DEBIAN_PACKAGE_DEPENDS\n\n#     Mandatory : NO\n\n#     Default   : -\n\n#     May be used to set deb dependencies. \n\n# CPACK_DEBIAN_PACKAGE_MAINTAINER\n\n#     Mandatory : YES\n\n#     Default   : CPACK_PACKAGE_CONTACT\n\n#     The debian package maintainer\n\n# CPACK_DEBIAN_PACKAGE_DESCRIPTION\n\n#     Mandatory : YES\n\n#     Default   : CPACK_PACKAGE_DESCRIPTION_SUMMARY\n\n#     The debian package description\n\n# CPACK_DEBIAN_PACKAGE_SECTION\n\n#     Mandatory : YES\n\n#     Default   : 'devel'\n\n#     The debian package section\n\n# CPACK_DEBIAN_PACKAGE_PRIORITY\n\n#     Mandatory : YES\n\n#     Default   : 'optional'\n\n#     The debian package priority\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n# Copyright 2007-2009 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CPack script for creating Debian package\n\n# Author: Mathieu Malaterre\n\n#\n\n# http://wiki.debian.org/HowToPackageForDebian\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Let's define the control file found in debian package:\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Binary package:\n\n# http://www.debian.org/doc/debian-policy/ch-controlfields.html#s-binarycontrolfiles\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# DEBIAN/control\n\n# debian policy enforce lower case for package name\n\n# Package: (mandatory)\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Version: (mandatory)\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Architecture: (mandatory)\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# There is no such thing as i686 architecture on debian, you should use i386 instead\n\n# $ dpkg --print-architecture\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# have a look at GET_PROPERTY(result GLOBAL PROPERTY ENABLED_FEATURES),\n\n# this returns the successful FIND_PACKAGE() calls, maybe this can help\n\n# Depends:\n\n# You should set: DEBIAN_PACKAGE_DEPENDS\n\n# TODO: automate 'objdump -p | grep NEEDED'\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Maintainer: (mandatory)\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Description: (mandatory)\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Section: (recommended)\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Priority: (recommended)\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Recommends:\n\n# You should set: CPACK_DEBIAN_PACKAGE_RECOMMENDS\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Suggests:\n\n# You should set: CPACK_DEBIAN_PACKAGE_SUGGESTS\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA\n\n# This variable allow advanced user to add custom script to the control.tar.gz (inside the .deb archive)\n\n# Typical examples are: \n\n# - conffiles\n\n# - postinst\n\n# - postrm\n\n# - prerm\"\n\n# Usage:\n\n# SET(CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA \n\n#    \"${CMAKE_CURRENT_SOURCE_DIR/prerm;${CMAKE_CURRENT_SOURCE_DIR}/postrm\")\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# For debian source packages:\n\n# debian/control\n\n# http://www.debian.org/doc/debian-policy/ch-controlfields.html#s-sourcecontrolfiles\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# .dsc\n\n# http://www.debian.org/doc/debian-policy/ch-controlfields.html#s-debiansourcecontrolfiles\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Builds-Depends:\n\n#IF(NOT CPACK_DEBIAN_PACKAGE_BUILDS_DEPENDS)\n\n#  SET(CPACK_DEBIAN_PACKAGE_BUILDS_DEPENDS\n\n#    \"debhelper (>> 5.0.0), libncurses5-dev, tcl8.4\"\n\n#  )\n\n#ENDIF(NOT CPACK_DEBIAN_PACKAGE_BUILDS_DEPENDS)\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Description: (mandatory)\n\n#if(NOT CPACK_SECTION)\n\n#    message(FATAL_ERROR \"opkg package requires a package section\")\n\n#endif(NOT CPACK_SECTION)\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Package for opkg\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Write controlfile\n",
        "Line" : 187,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 23
    },
    "cmake/modules/FindNode.cmake" : {
      "ObjectId" : "3d507ccb41c08e654a7c984656b1842743a7e5e8",
      "LastModified" : "2018-02-07T15:36:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macro to add directory to NODEJS_INCLUDE_DIRS if it exists and is not /usr/include\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If compat-libuv package exists, it must be at start of include path\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set (NODEJS_INCLUDE_DIRS ${UV_ROOT_DIR})\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Now look for node. Flag an error if not found\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check that v8.h is in NODEJS_INCLUDE_DIRS\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check that uv.h is in NODEJS_INCLUDE_DIRS\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# we end up with a nasty newline so strip everything that isn't a number\n",
        "Line" : 77,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 7
    },
    "cmake/modules/FindNpm.cmake" : {
      "ObjectId" : "18cf904a1f0114cc5dea6ca83f3ea15bb673f4d0",
      "LastModified" : "2018-02-07T15:36:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindNpm\n\n# --------\n\n#\n\n# Find npm\n\n#\n\n# This module finds an installed npm.  It sets the following variables:\n\n#\n\n#   NPM_FOUND - Set to true if npm is found\n\n#   NPM_DIR - The directory where npm is installed\n\n#   NPM_GLOBAL_NODE_MODULE_DIR - The global node_modules directory\n\n#   NPM_EXECUTABLE - The path to the npm executable\n\n#   NPM_VERSION  - The version number of the npm executable\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If npm was found, fill in the rest\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the global node_modules location\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Remove and newlines\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Set the NPM dir\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Set the VERSION\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Remove and newlines\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Fail on REQUIRED\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "cmake/modules/FindSphinx.cmake" : {
      "ObjectId" : "a6c448c89b8ac031a2db5bf64c846f28d14f8376",
      "LastModified" : "2018-02-07T15:36:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Get Sphinx Version\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindUpmCordovaGenerator.cmake" : {
      "ObjectId" : "83894639a151545ce3208f6de52e9dc4e296beeb",
      "LastModified" : "2018-04-02T16:45:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Get version\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindYuidoc.cmake" : {
      "ObjectId" : "b457a61c5a7dd6e8b25ce7c0c15ac8d42dfcdd51",
      "LastModified" : "2018-04-02T16:45:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Get Yuidoc version\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "c8d27f2e8ce494c96404086ce58982239916a44c",
      "LastModified" : "2018-04-02T16:45:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 45,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 49,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# check if this is a submodule\n",
        "Line" : 56,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 97,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    },
    "cmake/modules/OpenCVDetectPython.cmake" : {
      "ObjectId" : "e3fc3a903c646146607b60953bcaf0713b393efd",
      "LastModified" : "2018-04-02T16:45:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find specified Python version\n\n# Arguments:\n\n#   preferred_version (value): Version to check for first\n\n#   min_version (value): Minimum supported version\n\n#   library_env (value): Name of Python library ENV variable to check\n\n#   include_dir_env (value): Name of Python include directory ENV variable to check\n\n#   found (variable): Set if interpreter found\n\n#   executable (variable): Output of executable found\n\n#   version_string (variable): Output of found version\n\n#   version_major (variable): Output of found major version\n\n#   version_minor (variable): Output of found minor version\n\n#   libs_found (variable): Set if libs found\n\n#   libs_version_string (variable): Output of found libs version\n\n#   libraries (variable): Output of found Python libraries\n\n#   library (variable): Output of found Python library\n\n#   debug_libraries (variable): Output of found Python debug libraries\n\n#   debug_library (variable): Output of found Python debug library\n\n#   include_path (variable): Output of found Python include path\n\n#   include_dir (variable): Output of found Python include dir\n\n#   include_dir2 (variable): Output of found Python include dir2\n\n#   packages_path (variable): Output of found Python packages path\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copy outputs\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Clear find_host_package side effects\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# not using _version_string here, because it might not conform to the CMake version format\n",
        "Line" : 58,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# builder version can differ from target, matching base version (e.g. 2.7)\n",
        "Line" : 60,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Copy outputs\n",
        "Line" : 67,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Clear find_package side effects\n",
        "Line" : 81,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "#debian based assumed, install to the dist-packages.\n",
        "Line" : 106,
        "CharPositionInLine" : 11
      },
      "8" : {
        "Text" : "# Export return values\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Use Python 2 as default Python interpreter\n",
        "Line" : 154,
        "CharPositionInLine" : 28
      },
      "10" : {
        "Text" : "# Use Python 2 as fallback Python interpreter (if there is no Python 2)\n",
        "Line" : 157,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 11
    },
    "cmake/modules/TargetArch.cmake" : {
      "ObjectId" : "f9db1e6bc9860b61395a434a6b324f2a34bdd7c7",
      "LastModified" : "2018-04-02T16:45:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Based on the Qt 5 processor detection code, so should be very accurate\n\n# https://qt.gitorious.org/qt/qtbase/blobs/master/src/corelib/global/qprocessordetection.h\n\n# Currently handles arm (v5, v6, v7), x86 (32/64), ia64, and ppc (32/64)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Regarding POWER/PowerPC, just as is noted in the Qt source,\n\n# \"There are many more known variants/revisions that we do not handle/detect.\"\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set ppc_support to TRUE before including this file or ppc and ppc64\n\n# will be treated as invalid architectures since they are no longer supported by Apple\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# On OS X we use CMAKE_OSX_ARCHITECTURES *if* it was set\n\n# First let's normalize the order of the values\n",
        "Line" : 57,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Note that it's not possible to compile PowerPC applications if you are using\n\n# the OS X SDK version 10.6 or later - you'll need 10.4/10.5 for that, so we\n\n# disable it by default\n\n# See this page for more information:\n\n# http://stackoverflow.com/questions/5333490/how-can-we-restore-ppc-ppc64-as-well-as-full-10-4-10-5-sdk-support-to-xcode-4\n",
        "Line" : 60,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Architecture defaults to i386 or ppc on OS X 10.5 and earlier, depending on the CPU type detected at runtime.\n\n# On OS X 10.6+ the default is x86_64 if the CPU supports it, i386 otherwise.\n",
        "Line" : 66,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Now add all the architectures in our normalized order\n",
        "Line" : 83,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Detect the architecture in a rather creative way...\n\n# This compiles a small C program which is a series of ifdefs that selects a\n\n# particular #error preprocessor directive whose message string contains the\n\n# target architecture. The program will always fail to compile (both because\n\n# file is not a valid C program, and obviously because of the presence of the\n\n# #error preprocessor directives... but by exploiting the preprocessor in this\n\n# way, we can detect the correct target architecture even when cross-compiling,\n\n# since the program itself never needs to be run (only the compiler/preprocessor)\n",
        "Line" : 104,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Parse the architecture name from the compiler output\n",
        "Line" : 121,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Get rid of the value marker leaving just the architecture name\n",
        "Line" : 124,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# If we are compiling with an unknown architecture this variable should\n\n# already be set to \"unknown\" but in the case that it's empty (i.e. due\n\n# to a typo in the code), then set it to unknown\n",
        "Line" : 127,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 11
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "3bc7537ceed07002b01e04e5c61045ae2ba21388",
      "LastModified" : "2018-04-16T17:42:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add an example executable target for the provided source file which depends\n\n# on a UPM library target.  Strings after the first '-' are ignored.\n\n#\n\n# Usage:\n\n#   add_example(source_file TARGETS <target0> <target1> <targetn> SUFFIX <target_suffix>)\n\n#\n\n# Parameters:\n\n#   source_file - C/C++ source file. Filename must follow a specific format:\n\n#       <library>-[additional].c(xx)\n\n#       library: Name of UPM library required by example\n\n#       -additional: Any other string used to identify the example\n\n#   TARGETS - Additional dependency target/s required to BUILD/RUN this example.  If TARGETS is\n\n#       set, these are in addition to the dependency library provided by the example filename.\n\n#   SUFFIX - Provide a means to differentiate between C/C++ dependency targets and\n\n#       example names.  Leave empty for CXX examples. Use '-c' for c targets.\n\n#           SUFFIX  Example file  Dependency target  Example binary\n\n#           ------  ------------  -----------------  --------------\n\n#           \"-c\"    foo.c         foo-c              foo-example-c\n\n#                   foo.cxx       foo                foo-example-cxx\n\n#\n\n# Parent scope variable:\n\n#   example_src_list - Any example target which is successfully created by\n\n#       add_example will be removed from the parent scope variable\n\n#       example_src_list (if it exists).  This provides a means to handle\n\n#       special case examples BEFORE handling all files in example_src_list.\n\n#\n\n# Examples:\n\n#   # Creates sensorfoo-example-cxx, depends on target: sensorfoo\n\n#   add_example(sensorfoo.cxx)\n\n#\n\n#   # Creates sensorfoo-example-c, depends on target: sensorfoo-c\n\n#   add_example(sensorfoo.c SUFFIX \"-c\")\n\n#\n\n#   # Creates sensorfoo-bar-example-c, depends on target: sensorfoo-c\n\n#   add_example(sensorfoo-bar.c SUFFIX \"-c\")\n\n#\n\n#   # Creates testfoobar-cxx, depends on targets: blib, blah\n\n#   add_example(testfoobar.c TARGETS blib blah)\n\n#\n\n#   Examples:\n\n#       a110x.c             Requires libupmc-a110x\n\n#       lcm1602-i2c.c       Requires libupmc-lcm1602\n\n#       bmp280-bme280.c     Requires libupmc-bmp280\n\n#       lcd-eboled.cxx   Requires libupm-lcd\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Parse function parameters\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Attempt to remove this example source file from a list of example\n\n# sources.  This allows for handling special case examples.\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Get the base filename from the full filename\n\n# For file /some/path/to/sensorfoo-bar.c, example_name = sensorfoo-bar\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Parse out <library>\n\n# Example: sensorfoo-bar.c, library = sensorfoo\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Parse dependency target name from example_src filename (add on suffix)\n\n# For sensorfoo, lib_target_names = sensorfoo-c\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# If TARGETS is provided, add additional dependency targets\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Unfortunately, c++ and c library targets are not named the same. If\n\n# no suffix is provided, assume C++ and add a suffix of -cxx to the\n\n# example target name\n\n#           library         example target\n\n#       c:  sensorfoo-c     sensorfoo-bar-example-c\n\n#     cxx:  sensorfoo       sensorfoo-bar-example-cxx\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Create the target name for this example: mylibrary-bar-example-c\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# If a dependency target does NOT exist, print a warning and skip\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Create an executable target for this example\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Add each dependency to the library target\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Add subdirectories if BUILDEXAMPLES=on\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Add C examples\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Add C++ examples?\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Add java examples?\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Add all examples as an install component (if building examples)\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 17
    },
    "examples/c++/CMakeLists.txt" : {
      "ObjectId" : "832bc9c90b005bfa9ed6af5630dafcbd8186917b",
      "LastModified" : "2019-04-05T05:15:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create an list of all C++ source files in this directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Handle special cases here --------------------------------------------------\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Test temperature interface for 2 sensor libraries\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Test light interface for 3 sensor libraries\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# - Create an executable for all other src files in this directory -------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "examples/c/CMakeLists.txt" : {
      "ObjectId" : "2cd464585e4a3760a9f4f0b6ab4f9f3bfe5d88da",
      "LastModified" : "2018-04-02T16:45:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create an list of all C source files in this directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Handle special cases here --------------------------------------------------\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add_example(humidity-sensor.c TARGETS si7005-c bmp280-c)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# - Create an executable for all other src files in this directory -------------\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "examples/java/CMakeLists.txt" : {
      "ObjectId" : "d5ef82601bea64ec8752890d773f543b011c8218",
      "LastModified" : "2019-04-05T05:15:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The purpose of this CMakeLists.txt is to compile all listed JAVA examples\n\n# during build time (ensuring that ALL examples compile against their\n\n# dependency JAVA packages).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add a JAVA example target for the provided JAVA source file which depends\n\n# on UPM JAVA targets.\n\n#\n\n# Usage:\n\n#   add_example(example_class_name upm_target_dependency_list)\n\n#\n\n# Parameters:\n\n#   example_class_name: JAVA class name.  This name MUST match the JAVA\n\n#                       example file name.\n\n#                       <example_class_name>.java\n\n#   upm_target_dependency_list: One or more UPM library targets.  This\n\n#                       function assumes a javaupm_<target> also exists.\n\n#\n\n# Examples:\n\n#   # Creates SensorFooExample JAVA target, depends on target: sensorfoo,\n\n#   # and will add upm_sensorfoo.jar to the javac classpath.\n\n#   add_example(SensorFooExample sensorfoo)\n\n#\n\n#   # Creates SensorFooExample JAVA target, depends on targets: sensorfoo,\n\n#   # and interfaces and will add both upm_sensorfoo.jar and upm_interfaces.jar\n\n#   # to the javac classpath.\n\n#   add_example(SensorFooExample \"sensorfoo;interfaces\"\")\n\n#\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build a list of all dependency jar files\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Build a list of all dependency java target names\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Iterate over the dependencies\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Append to the targets list\n",
        "Line" : 44,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# If a dependency target does NOT exist, print a warning and skip\n",
        "Line" : 47,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Get the jar for this java_target (saved as a property)\n",
        "Line" : 53,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Append to the jar list\n",
        "Line" : 56,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Add the jar/s\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Add a dependency from this jar to all dependency java targets\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "include/interfaces/CMakeLists.txt" : {
      "ObjectId" : "68ab9f4cca8c8a3130a0973393fe74f73b9ce6be",
      "LastModified" : "2019-04-05T05:15:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add a PUBLIC include directory to the CMAKE src dir\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Don't add the hpp files with upm_module_init, this allows\n\n# them to be installed separately\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Install interfaces headers a bit differently\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/2jciebu01_ble/CMakeLists.txt" : {
      "ObjectId" : "b954bb6cf6a2c900cf8d5db56305d8db51349252",
      "LastModified" : "2019-04-11T04:57:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/2jciebu01_usb/CMakeLists.txt" : {
      "ObjectId" : "dfa699fb97418bd8df53e4da63c6e8890ec2dae5",
      "LastModified" : "2019-04-11T04:57:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "78d5a5f6fd3663607f084150eed56e8b3260c1f3",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Selectively disable certain CXX warnings for SWIG wrappers\n\n# SWIG wrappers emit -Wdelete-non-virtual-dtor and -Wunused-function warnings\n\n# Unfortunaly this quick fix for issue #518, adds a .c file to the\n\n# java swig wrapper which then failes on CXX compiler warnings.  For\n\n# now, turn off warnings as errors for all the swig wrappers.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If building under android, make sure swig gets an ANDROID flag\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Given a target name, return all in-project targets ALREADY defined (ie, this\n\n# does not comprehend targets that have yet to be added.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Clear the variable\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Get the LINK_LIBRARIES property of the target\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Remove this target from the _dep_libs (if it exists)\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Check if any of the LINK_LIBRARIES are targets in this project,\n\n# if so, add them to ${return_variable}\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Only add targets that exist\n",
        "Line" : 62,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Special case - mraa is NOT in this project, but add it to the\n\n# reqlibname list (used in various items like pom files, .pc files, etc\n",
        "Line" : 65,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Uniquify\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Make the list available outside this function\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# This function iterates over all provided target names and\n\n# writes a .pc file to each build directory\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Iterate over the targets an build package config (.pc) files\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Get a list of in-project dependency targets for this target\n",
        "Line" : 92,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# Check if any of the LINK_LIBRARIES are targets in this project,\n\n# if so, add them to reqlibname\n",
        "Line" : 95,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# Get the actual library name (which equates to it's .pc filename,\n\n# example: target dfrph = <upm-dfrph>.pc\n",
        "Line" : 98,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# Make sure no dups exist\n",
        "Line" : 109,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# Switch to comma separated Requires: field (per pkg-config docs)\n",
        "Line" : 112,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# Create the .pc file\n",
        "Line" : 115,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# This function iterates over all provided target names and\n\n# writes a pom file to each build directory\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Remove targets listed in the JAVA blacklist from pom file generation\n",
        "Line" : 125,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Iterate over the targets an build pom files\n",
        "Line" : 130,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Get a list of in-project dependency targets for this target\n",
        "Line" : 138,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "# Default the packaging for java\n",
        "Line" : 141,
        "CharPositionInLine" : 6
      },
      "24" : {
        "Text" : "# Default the groupid for java\n",
        "Line" : 143,
        "CharPositionInLine" : 6
      },
      "25" : {
        "Text" : "# Android overrides\n",
        "Line" : 146,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "# Top-level pom groupId\n",
        "Line" : 151,
        "CharPositionInLine" : 6
      },
      "27" : {
        "Text" : "# Template for a single dependency\n",
        "Line" : 154,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# Iterate over the dependency targets, build an XML vector of dependencies\n",
        "Line" : 163,
        "CharPositionInLine" : 6
      },
      "29" : {
        "Text" : "# mraa is a special case\n",
        "Line" : 167,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# Only match CXX target dependencies\n",
        "Line" : 172,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# Add this dependency to the list of pom dependencies\n",
        "Line" : 180,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# Separate the dependency elements\n",
        "Line" : 184,
        "CharPositionInLine" : 6
      },
      "33" : {
        "Text" : "# Configure the pom file\n",
        "Line" : 186,
        "CharPositionInLine" : 6
      },
      "34" : {
        "Text" : "# Print out a quick summary of the UPM targets\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# For each LINK_LIBRARIES of target\n",
        "Line" : 215,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# If the target currently exists, use its include directories\n",
        "Line" : 218,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# It's possible that the target does NOT exist yet, attempt to build an include directory\n",
        "Line" : 222,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Guess at a src dir name\n",
        "Line" : 224,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : "# This function decides which swig interface file to use for the\n\n# CMAKE_CURRENT_SOURCE_DIR.  If no .i file exists, create one.\n\n#\n\n#   if ${filePrefix}_${libname}.i exists\n\n#       return its full path\n\n#   elif ${libname}.i exists\n\n#       return its full path\n\n#   else\n\n#       create ${libname}.i via template and return its full path\n\n#\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# If a SWIG .i file DOES NOT exist, make a simple one from the template\n",
        "Line" : 250,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# This file will exist OUTSIDE the source tree\n",
        "Line" : 252,
        "CharPositionInLine" : 6
      },
      "42" : {
        "Text" : "# Create preprocessor include string for importing\n",
        "Line" : 255,
        "CharPositionInLine" : 6
      },
      "43" : {
        "Text" : "# And the SWIG import string\n",
        "Line" : 258,
        "CharPositionInLine" : 6
      },
      "44" : {
        "Text" : "# Set up Python bindings\n",
        "Line" : 261,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : "# Include interfaces\n",
        "Line" : 265,
        "CharPositionInLine" : 8
      },
      "46" : {
        "Text" : "# Set up Java bindings\n",
        "Line" : 267,
        "CharPositionInLine" : 8
      },
      "47" : {
        "Text" : "# Write the interface file\n",
        "Line" : 292,
        "CharPositionInLine" : 6
      },
      "48" : {
        "Text" : "# Create a single swig target for python\n\n# This is a macro since the function which calls it (upm_swig_python) depends\n\n# on values set inside this macro\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Transitive headers don't appear to get picked up by swig_add_module call for\n\n# wrapper generation.  Get them manually and add them here.\n",
        "Line" : 303,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# Decide between ${libname}.i or a language-specific .i\n",
        "Line" : 312,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# If this module is using ${libname}.i, provide a module name for UseSWIG AND SWIG_FLAGS\n",
        "Line" : 314,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# Tell UseSWIG that this is CXX\n",
        "Line" : 321,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# Set current python binary dir\n",
        "Line" : 324,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# Make sure swig places wrapper/.py collateral under python2/3 directory\n\n# Save the original BINARY_DIR, set a new BINARY_DIR, then restore at\n\n# the end of this macro. This works for cmake > 3 and works AROUND a bug in\n\n# cmake < 3 (#13173,#13772,#14459).\n",
        "Line" : 328,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# Swig module name (example: pyupm_a110x-python2)\n",
        "Line" : 335,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# Get target library name (example _pyupm_a110x-python2)\n",
        "Line" : 342,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# Turn off flags for wrapper\n",
        "Line" : 358,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# Add C++ comments to ALL python modules (requires doc build)\n",
        "Line" : 367,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# The python documentation generated with Sphinx only uses python2\n",
        "Line" : 369,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "# Python module depends on doxy2swig .i file generated from the monolithic doxygen xml file\n",
        "Line" : 371,
        "CharPositionInLine" : 6
      },
      "61" : {
        "Text" : "# Python collateral names will be the same for python2/3 w/different library dirs\n",
        "Line" : 376,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# Install .py's to python packages directory/upm\n",
        "Line" : 381,
        "CharPositionInLine" : 2
      },
      "63" : {
        "Text" : "# Install python wrapper module library\n",
        "Line" : 386,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "# Restore CMAKE_CURRENT_BINARY_DIR\n",
        "Line" : 391,
        "CharPositionInLine" : 2
      },
      "65" : {
        "Text" : "# Generate both python2 and python3 modules if possible\n",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Skip if the libname is in the blacklist\n",
        "Line" : 397,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "# Generate python2 module if python2 libs are available\n",
        "Line" : 399,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "# Keep track of all Python2 targets\n",
        "Line" : 409,
        "CharPositionInLine" : 6
      },
      "69" : {
        "Text" : "# Generate python3 module if python3 libs are available\n",
        "Line" : 414,
        "CharPositionInLine" : 4
      },
      "70" : {
        "Text" : "# Keep track of all Python3 targets\n",
        "Line" : 424,
        "CharPositionInLine" : 6
      },
      "71" : {
        "Text" : "# Skip if the libname is in the blacklist\n",
        "Line" : 432,
        "CharPositionInLine" : 2
      },
      "72" : {
        "Text" : "# SWIG treats SWIG_FLAGS as a list and not a string so semicolon seperation is \n\n# required. This hardcodes V8_VERSION to be <10 but I assume that's not going\n\n# to be a problem for a little while! SWIG uses a padded SWIG_V8 version which\n\n# we hack together from our findnode module.\n",
        "Line" : 434,
        "CharPositionInLine" : 4
      },
      "73" : {
        "Text" : "# Transitive headers don't appear to get picked up by swig_add_module call for\n\n# wrapper generation.  Get them manually and add them here.\n",
        "Line" : 445,
        "CharPositionInLine" : 4
      },
      "74" : {
        "Text" : "# Include interface directory\n",
        "Line" : 453,
        "CharPositionInLine" : 4
      },
      "75" : {
        "Text" : "# Decide between ${libname}.i or a language-specific .i\n",
        "Line" : 458,
        "CharPositionInLine" : 4
      },
      "76" : {
        "Text" : "# If this module is using ${libname}.i, provide a module name for UseSWIG AND SWIG_FLAGS\n",
        "Line" : 460,
        "CharPositionInLine" : 4
      },
      "77" : {
        "Text" : "# Tell UseSWIG that this is CXX\n",
        "Line" : 467,
        "CharPositionInLine" : 4
      },
      "78" : {
        "Text" : "# Append additional flags for NodeJS\n",
        "Line" : 469,
        "CharPositionInLine" : 4
      },
      "79" : {
        "Text" : "# Add interfaces if necessary\n",
        "Line" : 479,
        "CharPositionInLine" : 4
      },
      "80" : {
        "Text" : "# Turn off flags for wrapper\n",
        "Line" : 492,
        "CharPositionInLine" : 4
      },
      "81" : {
        "Text" : "# Keep track of all NODE targets\n",
        "Line" : 528,
        "CharPositionInLine" : 2
      },
      "82" : {
        "Text" : "# Skip if the libname is in the blacklist\n",
        "Line" : 533,
        "CharPositionInLine" : 2
      },
      "83" : {
        "Text" : "# Transitive headers don't appear to get picked up by swig_add_module call for\n\n# wrapper generation.  Get them manually and add them here.\n",
        "Line" : 535,
        "CharPositionInLine" : 4
      },
      "84" : {
        "Text" : "# Decide between ${libname}.i or a language-specific .i\n",
        "Line" : 548,
        "CharPositionInLine" : 4
      },
      "85" : {
        "Text" : "# If this module is using ${libname}.i, provide a module name for UseSWIG AND SWIG_FLAGS\n",
        "Line" : 550,
        "CharPositionInLine" : 4
      },
      "86" : {
        "Text" : "# Tell UseSWIG that this is CXX\n",
        "Line" : 557,
        "CharPositionInLine" : 4
      },
      "87" : {
        "Text" : "# Set a -package as well (which is slightly different than the module name,\n\n# module: javaupm_a110x vs package: upm_a110x\n",
        "Line" : 560,
        "CharPositionInLine" : 4
      },
      "88" : {
        "Text" : "# If the C++ target depends on C++ interfaces, make the JAVA target\n\n# depend on the JAVA interfaces\n",
        "Line" : 571,
        "CharPositionInLine" : 4
      },
      "89" : {
        "Text" : "# For linker to report unresolved symbols.  Note, there is currently no test\n\n# for linker flags (similar to compile files), so this is it for now.\n",
        "Line" : 577,
        "CharPositionInLine" : 4
      },
      "90" : {
        "Text" : "# Turn off flags for wrapper\n",
        "Line" : 592,
        "CharPositionInLine" : 4
      },
      "91" : {
        "Text" : "# Java jar files always need to go under lib/java, regardless of\n\n# architecture.\n",
        "Line" : 605,
        "CharPositionInLine" : 4
      },
      "92" : {
        "Text" : "# Only include the upm_interfaces.jar in the classpath for targets which\n\n# depend on the interfaces target.  This fixes an issue where javac\n\n# complains about an empty upm_interfaces.jar when trying to build a target\n\n# which does not depend on javaupm_interfaces.  If not previously set,\n\n# INTERFACES_JAR_FILE will be empty, and javac *should* not complain.\n",
        "Line" : 619,
        "CharPositionInLine" : 4
      },
      "93" : {
        "Text" : "# Save the absolute path of the jar file as a property of this java target\n",
        "Line" : 631,
        "CharPositionInLine" : 4
      },
      "94" : {
        "Text" : "# Keep track of all JAVA targets\n",
        "Line" : 635,
        "CharPositionInLine" : 4
      },
      "95" : {
        "Text" : "# Dependency to generate wrappers before packing, skip modules that depend on 3rd party libs\n",
        "Line" : 654,
        "CharPositionInLine" : 6
      },
      "96" : {
        "Text" : "# Grab all module sources and headers, also add sources to gyp list\n",
        "Line" : 659,
        "CharPositionInLine" : 8
      },
      "97" : {
        "Text" : "# Create list of include directories and copy them\n",
        "Line" : 679,
        "CharPositionInLine" : 8
      },
      "98" : {
        "Text" : "# Utilities and interfaces\n",
        "Line" : 687,
        "CharPositionInLine" : 8
      },
      "99" : {
        "Text" : "# Add readme, package.json for NPM and node-gyp config file\n",
        "Line" : 692,
        "CharPositionInLine" : 8
      },
      "100" : {
        "Text" : "# package.json for regular install\n",
        "Line" : 703,
        "CharPositionInLine" : 4
      },
      "101" : {
        "Text" : "# If a CMAKE_INSTALL_PREFIX has NOT been provided, set NODE_MODULE_INSTALL_PATH\n\n# base on the NODE_ROOT_DIR.\n",
        "Line" : 706,
        "CharPositionInLine" : 4
      },
      "102" : {
        "Text" : "# If a CMAKE_INSTALL_PREFIX has been provided, set NODE_MODULE_INSTALL_PATH\n\n# relative to the provided install directory.\n",
        "Line" : 710,
        "CharPositionInLine" : 4
      },
      "103" : {
        "Text" : "# Cordova binding\n",
        "Line" : 721,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "# Process C/C++ sensor modules\n\n# This function pre-processes sensor library input and hands off the\n\n# necessary global variables to upm_module_init for library creation,\n\n# documenation, swigging, etc...\n",
        "Line" : 732,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "# CPP_WRAPS_C -> Set to have CPP library link to C library\n\n# DESCRIPTION -> Library description string\n\n# IFACE_HDR -> List of interface header files\n\n# CPP_HDR -> List of CPP header files\n\n# CPP_SRC -> List of CPP source files\n\n# C_HDR -> List of C header files\n\n# C_SRC -> List of C source files\n\n# FTI_SRC -> List of C FTI source files\n\n# REQUIRES -> List requires libraries for pkg-config\n\n# Exports to PARENT scope:\n\n#     libname -> CXX target name\n\n#     libnamec -> C target name (if used)\n",
        "Line" : 737,
        "CharPositionInLine" : 2
      },
      "106" : {
        "Text" : "# Parse function parameters\n",
        "Line" : 752,
        "CharPositionInLine" : 2
      },
      "107" : {
        "Text" : "# Set the description\n",
        "Line" : 755,
        "CharPositionInLine" : 2
      },
      "108" : {
        "Text" : "# Make sure REQUIRES is a list\n",
        "Line" : 758,
        "CharPositionInLine" : 2
      },
      "109" : {
        "Text" : "# Always build C libs first\n",
        "Line" : 761,
        "CharPositionInLine" : 2
      },
      "110" : {
        "Text" : "# Set the src and hpp variables for upm_module_init\n",
        "Line" : 764,
        "CharPositionInLine" : 4
      },
      "111" : {
        "Text" : "# If building FTI, and FTI src exists, add it in\n",
        "Line" : 768,
        "CharPositionInLine" : 4
      },
      "112" : {
        "Text" : "#set (module_src ${UPM_MIXED_MODULE_INIT_C_SRC} ${UPM_MIXED_MODULE_INIT_FTI_SRC})\n",
        "Line" : 770,
        "CharPositionInLine" : 6
      },
      "113" : {
        "Text" : "# Set a flag to tell upm_module_init that it's building a C library\n",
        "Line" : 774,
        "CharPositionInLine" : 4
      },
      "114" : {
        "Text" : "# If a c target has a dependency on utilities-c, then swap the corresponding\n\n# C++ target's dependency on utilities-c to utilities.  This solves a niche\n\n# problem for Android  Things (C++ which depends on C which depends on\n\n# utilities-c is not getting the utilities-c library).  Since only C++\n\n# packages get swig'ed  to Java, the only way to get the utilities-c library\n\n# is to packages with a utilites C++ library and add a dependency.\n\n# TODO: Find a better way to do this.\n",
        "Line" : 778,
        "CharPositionInLine" : 4
      },
      "115" : {
        "Text" : "## \"export\" the logical C lib target for the calling module's\n\n## CMakeLists.txt\n",
        "Line" : 790,
        "CharPositionInLine" : 4
      },
      "116" : {
        "Text" : "# Build C++ if enabled AND C++ headers exist\n",
        "Line" : 796,
        "CharPositionInLine" : 2
      },
      "117" : {
        "Text" : "# Set the src and hpp variables for upm_module_init\n",
        "Line" : 798,
        "CharPositionInLine" : 4
      },
      "118" : {
        "Text" : "# Reset the libname (upm_module_init can change it)\n",
        "Line" : 805,
        "CharPositionInLine" : 4
      },
      "119" : {
        "Text" : "# If the C++ wraps the C target, add the C target as a dependency\n",
        "Line" : 810,
        "CharPositionInLine" : 4
      },
      "120" : {
        "Text" : "## \"export\" the logical C++ lib target for the calling module's\n\n## CMakeLists.txt\n",
        "Line" : 815,
        "CharPositionInLine" : 4
      },
      "121" : {
        "Text" : "# Save off ARGN as target dependency list for use in any macros below\n",
        "Line" : 826,
        "CharPositionInLine" : 2
      },
      "122" : {
        "Text" : "# If this is a C library, handle different collateral naming\n",
        "Line" : 829,
        "CharPositionInLine" : 2
      },
      "123" : {
        "Text" : "# If this is a C library, export C library target name to parent's libname\n",
        "Line" : 832,
        "CharPositionInLine" : 4
      },
      "124" : {
        "Text" : "# Keep track of all C targets\n",
        "Line" : 835,
        "CharPositionInLine" : 4
      },
      "125" : {
        "Text" : "# Keep track of all CXX targets\n",
        "Line" : 838,
        "CharPositionInLine" : 4
      },
      "126" : {
        "Text" : "# Create the target library from src/hdrs\n",
        "Line" : 843,
        "CharPositionInLine" : 2
      },
      "127" : {
        "Text" : "# Specify the current source directory as an INTERFACE include dir.\n\n# This allows for transitive header dependencies via target_link_libraries\n",
        "Line" : 846,
        "CharPositionInLine" : 2
      },
      "128" : {
        "Text" : "# Also add common header directories to this target\n",
        "Line" : 850,
        "CharPositionInLine" : 2
      },
      "129" : {
        "Text" : "# Iterate over all arguments passed to upm_module_init.\n\n#     1. Add them via target_link_libraries\n\n#     2. If mraa, then add a link and include dependency\n",
        "Line" : 853,
        "CharPositionInLine" : 2
      },
      "130" : {
        "Text" : "# Add necessary MRAA components IF the target requires it\n",
        "Line" : 857,
        "CharPositionInLine" : 4
      },
      "131" : {
        "Text" : "# Always add a PUBLIC dependency to MRAA include dirs\n",
        "Line" : 860,
        "CharPositionInLine" : 6
      },
      "132" : {
        "Text" : "# Else, add the linkflag directly\n",
        "Line" : 866,
        "CharPositionInLine" : 6
      },
      "133" : {
        "Text" : "# Don't SWIG C\n",
        "Line" : 879,
        "CharPositionInLine" : 2
      },
      "134" : {
        "Text" : "# When auto-generating a SWIG .i file, first include any C headers which\n\n# end in *_regs.h.  Then, include the C++ headers.\n",
        "Line" : 881,
        "CharPositionInLine" : 4
      },
      "135" : {
        "Text" : "# Skip if the libname is in the blacklist\n",
        "Line" : 902,
        "CharPositionInLine" : 2
      },
      "136" : {
        "Text" : "# Add additional properties to this target (used later for .pc/pom file creation)\n",
        "Line" : 909,
        "CharPositionInLine" : 2
      },
      "137" : {
        "Text" : "# Install target library to lib dir\n",
        "Line" : 915,
        "CharPositionInLine" : 2
      },
      "138" : {
        "Text" : "# Install interface file if it exists\n",
        "Line" : 920,
        "CharPositionInLine" : 2
      },
      "139" : {
        "Text" : "# Install header files to include/upm/\n",
        "Line" : 932,
        "CharPositionInLine" : 2
      },
      "140" : {
        "Text" : "# Install JSON library descriptor files into datadir (if they exist)\n",
        "Line" : 937,
        "CharPositionInLine" : 2
      },
      "141" : {
        "Text" : "# Top-level module init\n",
        "Line" : 950,
        "CharPositionInLine" : 0
      },
      "142" : {
        "Text" : "# Provide a cached variable to groups of targets\n",
        "Line" : 965,
        "CharPositionInLine" : 0
      },
      "143" : {
        "Text" : "# MODULE_LIST can be specified on the CMake command line to specify\n\n# a list of directories under src to include in the build.\n\n# MODULE_LIST is optional.\n\n#   If MODULE_LIST is provided, only add the directories specified\n\n#   If MODULE_LIST is NOT provided, add all subdirectories under src\n\n# Example (-DMODULE_LIST=\"dfrph;rotaryencoder\")\n",
        "Line" : 973,
        "CharPositionInLine" : 0
      },
      "144" : {
        "Text" : "# If no module list, add all subdirectories\n",
        "Line" : 980,
        "CharPositionInLine" : 2
      },
      "145" : {
        "Text" : "# If the module list does NOT include the utilities directory, prepend it since\n\n# most sensor library targets depend on utilities\n",
        "Line" : 984,
        "CharPositionInLine" : 0
      },
      "146" : {
        "Text" : "# Iterate over each directory in MODULE_LIST\n",
        "Line" : 990,
        "CharPositionInLine" : 0
      },
      "147" : {
        "Text" : "# Print stats for all targets\n",
        "Line" : 998,
        "CharPositionInLine" : 0
      },
      "148" : {
        "Text" : "# Generate a pkg-config file (.pc) per target\n",
        "Line" : 1001,
        "CharPositionInLine" : 0
      },
      "149" : {
        "Text" : "# Generate a pom file per CXX target\n",
        "Line" : 1005,
        "CharPositionInLine" : 0
      },
      "150" : {
        "Text" : "# Available to the top-level CMakeLists.txt\n",
        "Line" : 1010,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 151
    },
    "src/a110x/CMakeLists.txt" : {
      "ObjectId" : "e837985ab53e25d6fccd09d47382836c185ba7cc",
      "LastModified" : "2019-04-05T05:12:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/abp/CMakeLists.txt" : {
      "ObjectId" : "d68eaa75ee8a712714a4ba80627659c0cb1bec57",
      "LastModified" : "2019-04-05T05:12:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ad8232/CMakeLists.txt" : {
      "ObjectId" : "b571bf6b1a2b10c581f81b730fe49846d31d8fe2",
      "LastModified" : "2018-04-02T16:45:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/adafruitms1438/CMakeLists.txt" : {
      "ObjectId" : "9393fde50494c01dfb6408a9c0da0eec85a6db2b",
      "LastModified" : "2018-04-02T16:45:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/adafruitss/CMakeLists.txt" : {
      "ObjectId" : "0dd890771a13f69ba150eb3391531912e11be2b0",
      "LastModified" : "2018-04-02T16:45:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/adc121c021/CMakeLists.txt" : {
      "ObjectId" : "4ede6b32a12b3c57b48451f0439df75a192d5cec",
      "LastModified" : "2018-04-02T16:45:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/adis16448/CMakeLists.txt" : {
      "ObjectId" : "45e72c9afe631ac66832c872ebf7ef6771fdeec4",
      "LastModified" : "2018-04-02T16:45:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ads1x15/CMakeLists.txt" : {
      "ObjectId" : "f5078b0a55a285eeba0a8047fd607f2a7887bfb5",
      "LastModified" : "2019-04-05T05:15:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/adxl335/CMakeLists.txt" : {
      "ObjectId" : "7d3a0fef58fc73f2019f99264e3648b44d4248a1",
      "LastModified" : "2019-04-05T05:15:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/adxl345/CMakeLists.txt" : {
      "ObjectId" : "e62be51973889c4b4517acde2c2b5935ef53e025",
      "LastModified" : "2019-04-05T05:15:13Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/adxrs610/CMakeLists.txt" : {
      "ObjectId" : "168aed9a65586392d2d9cf75af75ccbacc1af0cb",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/am2315/CMakeLists.txt" : {
      "ObjectId" : "ca0b4e810116d885d74eaed286002e04800f1fe9",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apa102/CMakeLists.txt" : {
      "ObjectId" : "54731a6217fe97b3a3533b75e88b3169251afab3",
      "LastModified" : "2018-04-02T16:45:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apds9002/CMakeLists.txt" : {
      "ObjectId" : "9deab35391a3414944fcb33ec97b689c5a8e1042",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/apds9930/CMakeLists.txt" : {
      "ObjectId" : "42cad3d7ff7802eb6db3355043fae52861373e3b",
      "LastModified" : "2018-04-02T16:45:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/at42qt1070/CMakeLists.txt" : {
      "ObjectId" : "b4ea72631c8ab5a1b32b8dc1f2511c9bca80dfad",
      "LastModified" : "2018-04-02T16:45:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/bacnetmstp/CMakeLists.txt" : {
      "ObjectId" : "5e27df03fc946aa4de34ce12c19af2fd6191767a",
      "LastModified" : "2018-04-02T16:45:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the bacnet include dirs to this target\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "src/bh1749/CMakeLists.txt" : {
      "ObjectId" : "c7e65d14c406a1d6aad7371b2606336f8e0c856a",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/bh1750/CMakeLists.txt" : {
      "ObjectId" : "db7973c2329bbb57b641486ee8b0af3368523a9b",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/bh1792/CMakeLists.txt" : {
      "ObjectId" : "38cfd6ad17c8b15c702ac4d66a065caed2353179",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/biss0001/CMakeLists.txt" : {
      "ObjectId" : "22e66944e0002dbf57767d6d588fba3b56ce8d4c",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/bma220/CMakeLists.txt" : {
      "ObjectId" : "936413020bdda367d9530391a9089790bdc2b798",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/bma250e/CMakeLists.txt" : {
      "ObjectId" : "870de648e594618baeaf2700b7fa3d3bd951ba72",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/bmg160/CMakeLists.txt" : {
      "ObjectId" : "d91b1723d7e6c15769a5422803744e76d1548a63",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/bmi160/CMakeLists.txt" : {
      "ObjectId" : "e6b6eefdcc621b622130f873e93c1bd3c63a1adf",
      "LastModified" : "2019-04-05T05:15:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#    FTI_SRC bmi160_fti.c\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/bmm150/CMakeLists.txt" : {
      "ObjectId" : "3d20a605928f11365949cf68ff971fe8c9d54f07",
      "LastModified" : "2019-04-05T05:15:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/bmp280/CMakeLists.txt" : {
      "ObjectId" : "1d3e2b1cfddf0ff6f0f7dd12adda2bdef53b728c",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/bmpx8x/CMakeLists.txt" : {
      "ObjectId" : "83105e9de38867f96043c0e912cea87a527d11e1",
      "LastModified" : "2019-04-05T15:33:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/bmx055/CMakeLists.txt" : {
      "ObjectId" : "5a1d3f11d1b01e2542eb7ffe84c113c8e3a0740a",
      "LastModified" : "2019-04-05T15:33:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/bno055/CMakeLists.txt" : {
      "ObjectId" : "5dc45e67ffab7e495fe5b1d446c445d201c91e09",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/button/CMakeLists.txt" : {
      "ObjectId" : "0535481e9e5b0595f2f71371e8a453ccc0333635",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/buzzer/CMakeLists.txt" : {
      "ObjectId" : "d4917f7e349ff6b075e7177b0daebbc34f6d0999",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#    FTI_SRC buzzer_fti.c\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/cjq4435/CMakeLists.txt" : {
      "ObjectId" : "a225477dd60d82e65a62c80aaa7f68c5f769f454",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/collision/CMakeLists.txt" : {
      "ObjectId" : "47d2345a546b79338b02fe34d0a868be714ac205",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/curieimu/CMakeLists.txt" : {
      "ObjectId" : "2a4d66d8ea544f5f9da53f80ef653c232cc0515d",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/cwlsxxa/CMakeLists.txt" : {
      "ObjectId" : "18955d478fabc02684e185a36892a68644942977",
      "LastModified" : "2019-04-05T15:33:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/dfrec/CMakeLists.txt" : {
      "ObjectId" : "3182dc9a4c32158999325916eeb544163a4f9453",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# make sure the C library has the appropriate dependency on the UPM\n\n# DS18B20 C library\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "src/dfrorp/CMakeLists.txt" : {
      "ObjectId" : "94c6b200a9c97c8b94302b281418c3c1a55587db",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/dfrph/CMakeLists.txt" : {
      "ObjectId" : "551eff69bf0fdef7923f31fda794e9a05045f50d",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ds1307/CMakeLists.txt" : {
      "ObjectId" : "a5f08c31e84982d59260a9dcbedde338ebc7129f",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ds1808lc/CMakeLists.txt" : {
      "ObjectId" : "215b54564213a3f22cabc185230eb04eb85cf57c",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ds18b20/CMakeLists.txt" : {
      "ObjectId" : "c3948cb5c24ce72b3b8cfbc0a12b8c0976ba7cb6",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ds2413/CMakeLists.txt" : {
      "ObjectId" : "c5aded6cfbd59705f12ecaccccef28bbef55a07b",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/e50hx/CMakeLists.txt" : {
      "ObjectId" : "2d8dccdd62753e48ca7fe8ccb5f016bee4dd4e09",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ecezo/CMakeLists.txt" : {
      "ObjectId" : "53ed81811e89527cf71e4fa2a8b0a760bf961989",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ecs1030/CMakeLists.txt" : {
      "ObjectId" : "1c07138479a0dc80f0fb7db63ff05c10da9086ac",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ehr/CMakeLists.txt" : {
      "ObjectId" : "4c412805bff42cf73f98107141e6d34814bb6dfe",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/eldriver/CMakeLists.txt" : {
      "ObjectId" : "11568852ddb15367780d7a565db8d542244ef8fb",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/electromagnet/CMakeLists.txt" : {
      "ObjectId" : "5259792ae4baf5260b2c1db3640385e3c2c6df7d",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/emg/CMakeLists.txt" : {
      "ObjectId" : "342a8ac485231923c051b2e51a6468180506aa88",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/enc03r/CMakeLists.txt" : {
      "ObjectId" : "c7ed321c503cbfd9b4a3d62a025535b9a8c104e4",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/flex/CMakeLists.txt" : {
      "ObjectId" : "0b15dcba15cd2d115ebb9070ea156e6c268a18c8",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/gas/CMakeLists.txt" : {
      "ObjectId" : "979916218a996ace17cd1bfb2671d7daedde6d25",
      "LastModified" : "2019-04-05T15:33:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/gp2y0a/CMakeLists.txt" : {
      "ObjectId" : "794f0f12c183e9cfe1cc509da350df85b6c4d38e",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/gprs/CMakeLists.txt" : {
      "ObjectId" : "22b75c9b75ec26d71ceabfadcdab6a2d5be7a3e4",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/grove/CMakeLists.txt" : {
      "ObjectId" : "0d2c5935671dda89ee74cf2a115ebd670d9476ae",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/grovecollision/CMakeLists.txt" : {
      "ObjectId" : "fdc9019d3870e1de667090353e3f1a678fac847c",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/groveehr/CMakeLists.txt" : {
      "ObjectId" : "4a2a6333ceb250ed3bf73a777a1dca9e9f7d7a2a",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/groveeldriver/CMakeLists.txt" : {
      "ObjectId" : "0945bcc50effa9f406cbe79e53b0253459286ac7",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/groveelectromagnet/CMakeLists.txt" : {
      "ObjectId" : "0757c78555db6bd8188d01028767e5c54eddb230",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/groveemg/CMakeLists.txt" : {
      "ObjectId" : "0eb63befc7817c42efd56bd3ce4e4d11a1fe4daa",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/grovegprs/CMakeLists.txt" : {
      "ObjectId" : "233d5cae61ad70a2db3615c566c638963067b6ed",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/grovegsr/CMakeLists.txt" : {
      "ObjectId" : "2bc1143cb7eddeb2de7fdcf933684dff669217ec",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/grovelinefinder/CMakeLists.txt" : {
      "ObjectId" : "ed7ffcff612ed4299b1375865e1ea2e549e50dc2",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/grovemd/CMakeLists.txt" : {
      "ObjectId" : "4885bceb74f9f777f5524ff9a2794be73854616d",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/grovemoisture/CMakeLists.txt" : {
      "ObjectId" : "8be2d2efb1e6a3079090facd9222dc704ab463b5",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/groveo2/CMakeLists.txt" : {
      "ObjectId" : "823091255f6679ecdcc03c8dfa9c77d38eff9503",
      "LastModified" : "2019-04-05T15:33:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/grovescam/CMakeLists.txt" : {
      "ObjectId" : "0d4e7867c21be65861974f4466588835fa77339c",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/grovespeaker/CMakeLists.txt" : {
      "ObjectId" : "d8b076551daa88c60187ab666cf5def3de4943c7",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/groveultrasonic/CMakeLists.txt" : {
      "ObjectId" : "b4447f17ac476d988408aa8c82dffb2d8351225d",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/grovevdiv/CMakeLists.txt" : {
      "ObjectId" : "ddab90ce304648bbc525f8a1a1d8828520338d3b",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/grovewater/CMakeLists.txt" : {
      "ObjectId" : "6fdc698a1a3e0ae6a10e3b1a252916b7fc84aa66",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/grovewfs/CMakeLists.txt" : {
      "ObjectId" : "89b1ac1f37cb88b4471b72772b382733ca6931ac",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/gsr/CMakeLists.txt" : {
      "ObjectId" : "1b8d6d6566c88ddb0bf30570f04179b77a4b0671",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/guvas12d/CMakeLists.txt" : {
      "ObjectId" : "208b36781f3e4217ab216fb61f1cac7b7237d0b3",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/h3lis331dl/CMakeLists.txt" : {
      "ObjectId" : "fe30d21af1fdc422413b5537d7cef8cff6698c70",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/h803x/CMakeLists.txt" : {
      "ObjectId" : "dce473f833cb74fa15675a8a9b9e96143ef0d022",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/hcsr04/CMakeLists.txt" : {
      "ObjectId" : "16784b25404181434f9ca45de3ddf0fd65fa61aa",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/hdc1000/CMakeLists.txt" : {
      "ObjectId" : "cd3359d918af02ed2dc66fdbb4af99ffab0e236d",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/hdxxvxta/CMakeLists.txt" : {
      "ObjectId" : "794065e4f8b9eff8dfdb2113dce3cdaa3496537f",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/hka5/CMakeLists.txt" : {
      "ObjectId" : "acb4f1aa9d8e3943eadfd15425375e95bcf3de92",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/hlg150h/CMakeLists.txt" : {
      "ObjectId" : "7c41a0bd9c1deef541d07c2451d460e85c603076",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/hm11/CMakeLists.txt" : {
      "ObjectId" : "8f678b23ee596b2c0b8b26c5fb78bcfaddca0de3",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/hmc5883l/CMakeLists.txt" : {
      "ObjectId" : "85a5aef6b968256baeeaeaaf56e36fd43e76e793",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/hmtrp/CMakeLists.txt" : {
      "ObjectId" : "c7b8bf8c8d90cdcecdea5206dcd6dc75bcd8f4e4",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/hp20x/CMakeLists.txt" : {
      "ObjectId" : "ba835fc1206988b07838154af80c73722b58be68",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ht9170/CMakeLists.txt" : {
      "ObjectId" : "08aeab2b5ff9c7e4491629e0edd6af95063ce5c0",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/htu21d/CMakeLists.txt" : {
      "ObjectId" : "598e30f755512fed91b40cfad500873104fa8f50",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/hwxpxx/CMakeLists.txt" : {
      "ObjectId" : "393474038fd37fecfa96e7f06735ab62cb466ed1",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/hx711/CMakeLists.txt" : {
      "ObjectId" : "abb2a295f9f3e722c8ad64ed8f2bb3f7aeb3a3b7",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ili9341/CMakeLists.txt" : {
      "ObjectId" : "7f8f7d1dc5d4e9ef8e6bbb660cb094370d9d4217",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ims/CMakeLists.txt" : {
      "ObjectId" : "2ab309a49fecdcccace02291cdb5205aa38761f2",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ina132/CMakeLists.txt" : {
      "ObjectId" : "01d7c2ab6aef937faab3abe745f597ec477b92c8",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/isd1820/CMakeLists.txt" : {
      "ObjectId" : "c3ec768e2b7c870328bcd736c0b06476a8e93ce1",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/itg3200/CMakeLists.txt" : {
      "ObjectId" : "779f1cb66057db8506c88f3bd3ab64e011871c87",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/jhd1313m1/CMakeLists.txt" : {
      "ObjectId" : "593c12fef6cdcb1b38430672e83278eb95ff95d8",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/joystick12/CMakeLists.txt" : {
      "ObjectId" : "335911a742125cb8b1d86702634797d29683289c",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/kx122/CMakeLists.txt" : {
      "ObjectId" : "71108be1e286a160eee8ffc32e003a8d4edeaa97",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/kxcjk1013/CMakeLists.txt" : {
      "ObjectId" : "30f0b281f8d7fbad40cf6d899c01aed9cb352d97",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/kxtj3/CMakeLists.txt" : {
      "ObjectId" : "110418b184f07a8f1b5601c4256b65ed8f74f0d5",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/l298/CMakeLists.txt" : {
      "ObjectId" : "e3bab605396af6efdf85fe65015a16ea42aed921",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/l3gd20/CMakeLists.txt" : {
      "ObjectId" : "91e4263462d6ab888adc1ee1bbc7f2e9d79a0430",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lcd/CMakeLists.txt" : {
      "ObjectId" : "efe4cdb52a0e22003db68f4b8110805c2895baf7",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lcdks/CMakeLists.txt" : {
      "ObjectId" : "dd1e081f6dcd65b4cfb38c40fba320c8ff4da234",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lcm1602/CMakeLists.txt" : {
      "ObjectId" : "8bb3cba684cc4ddaae800078bc0ab4a9c9a0c1b9",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ldt0028/CMakeLists.txt" : {
      "ObjectId" : "a077f77c31d630ae233f70ca86149fb62a987797",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/led/CMakeLists.txt" : {
      "ObjectId" : "b627ec30d54329f6a9c4d7b6a65623454eff67fa",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lidarlitev3/CMakeLists.txt" : {
      "ObjectId" : "01027b938f7d26cee73d6158c3003285bec4aac6",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/light/CMakeLists.txt" : {
      "ObjectId" : "5883eace7707bde6b1c2cdeb0d0f6f12ed2e156f",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/linefinder/CMakeLists.txt" : {
      "ObjectId" : "4e77dd33a8f37739cfd96dda2b58db9ff44e5bec",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lis2ds12/CMakeLists.txt" : {
      "ObjectId" : "106c78607d3381581f14f2bef1c51f74fc304188",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lis3dh/CMakeLists.txt" : {
      "ObjectId" : "662ee40bf7f46c17d1ff295654df37896ffcf375",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lm35/CMakeLists.txt" : {
      "ObjectId" : "2f4c84e071a6409f147cca73fecadf84bfca9397",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lol/CMakeLists.txt" : {
      "ObjectId" : "fabecd6c219a6d0ccfd08fc4818bb105e463637e",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/loudness/CMakeLists.txt" : {
      "ObjectId" : "35e5e46679b8c3d4c21d38e56a6f54f9e2bd1927",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lp8860/CMakeLists.txt" : {
      "ObjectId" : "87cdd2f0e8f0a3b1406b661d1aa3ba0f75609bb4",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lpd8806/CMakeLists.txt" : {
      "ObjectId" : "e55c229dcd85034a4cc85b71b7b57a8a42e58940",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lsm303agr/CMakeLists.txt" : {
      "ObjectId" : "2e9eff64414e4bacf5c4bc107938e6d864697081",
      "LastModified" : "2019-04-05T15:33:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lsm303d/CMakeLists.txt" : {
      "ObjectId" : "1ca486f0e38fd1161574d597bb15d59062ba084e",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lsm303dlh/CMakeLists.txt" : {
      "ObjectId" : "bab4ee747160d0901f2398bdcd2be926aeece877",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lsm6ds3h/CMakeLists.txt" : {
      "ObjectId" : "3de4be7bfcac32c9e19a6aae8d2c0da040d22a3f",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lsm6dsl/CMakeLists.txt" : {
      "ObjectId" : "0067d07205eedf85234afa167fe29cb9d31de398",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/lsm9ds0/CMakeLists.txt" : {
      "ObjectId" : "b259de11c9f36f8e56186dd8f3ac186b38721f4d",
      "LastModified" : "2019-04-05T15:33:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/m24lr64e/CMakeLists.txt" : {
      "ObjectId" : "65a4442fe604e9cc013f40822cc6dc4173931f20",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/mag3110/CMakeLists.txt" : {
      "ObjectId" : "71284844f156f70d0f7ba50e0dc6df6a7e8bd063",
      "LastModified" : "2019-04-05T15:33:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/max30100/CMakeLists.txt" : {
      "ObjectId" : "f2e11c608454ef199ee7ba2c4a800d177072d353",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/max31723/CMakeLists.txt" : {
      "ObjectId" : "d3b57749d8624f90a404384dd40bf2c0d6e73a80",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/max31855/CMakeLists.txt" : {
      "ObjectId" : "9196e90f485b937b70e9457fd32bbe4d005a393b",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/max44000/CMakeLists.txt" : {
      "ObjectId" : "e6028451c40a96189323c575f182d256367803e5",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/max44009/CMakeLists.txt" : {
      "ObjectId" : "2c8ba69e5a48403cfef890a78dc4e2d7f9fd5830",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/max5487/CMakeLists.txt" : {
      "ObjectId" : "96fb4d387fecbca4aba2661b2282064f15c36204",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/maxds3231m/CMakeLists.txt" : {
      "ObjectId" : "66f6e6f5a0a0ddb010c8136ee9fddecb294ca43f",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/maxsonarez/CMakeLists.txt" : {
      "ObjectId" : "3248bb0ebae99914732b9244306c36f127805b9a",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/mb704x/CMakeLists.txt" : {
      "ObjectId" : "40c7768474e2a7d1967454788a56b8bcd0dd0010",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/mcp2515/CMakeLists.txt" : {
      "ObjectId" : "5feb1059942e55a30bf02ca1dfaefec209ca0440",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/mcp9808/CMakeLists.txt" : {
      "ObjectId" : "11d4f047b82c0b4a56ebe6d85d4cb137d0c1f499",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/md/CMakeLists.txt" : {
      "ObjectId" : "79cb7f88643b3d964ab3a3628285df6c68bec2dd",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/mg811/CMakeLists.txt" : {
      "ObjectId" : "4edfde89e10a7005b14202f1e302708468e8e227",
      "LastModified" : "2019-04-05T15:33:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/mhz16/CMakeLists.txt" : {
      "ObjectId" : "0cdf294d35376fb2ba7f3359a636a3c1e865c2b0",
      "LastModified" : "2019-04-05T15:33:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/mic/CMakeLists.txt" : {
      "ObjectId" : "b9ecde3739effd85abad2a4f59e358188b210c84",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/micsv89/CMakeLists.txt" : {
      "ObjectId" : "98b86336bd01c04ab978bec5751984984db7a432",
      "LastModified" : "2019-04-05T15:33:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/mlx90614/CMakeLists.txt" : {
      "ObjectId" : "94c348c759a50971d41d0bfe1b117698faf66f04",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/mma7361/CMakeLists.txt" : {
      "ObjectId" : "1fc49c90c7146d259ca27474651b4402bde74300",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/mma7455/CMakeLists.txt" : {
      "ObjectId" : "dc4a9a7e647cf81bcaeddc6e8720b146b67f2af9",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/mma7660/CMakeLists.txt" : {
      "ObjectId" : "1bcc1db6227447d1c9253f60d3c1bf4d53cf5a83",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/mma8x5x/CMakeLists.txt" : {
      "ObjectId" : "1d01dcfa0a9fa7237bdd16a42d49f51b6d90fb6f",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/mmc35240/CMakeLists.txt" : {
      "ObjectId" : "838ca62563dd9176ca82584928a0bfa91c7ca801",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/moisture/CMakeLists.txt" : {
      "ObjectId" : "62ffae70c3aeff750a19b9f9b870a0186e762e67",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/mpl3115a2/CMakeLists.txt" : {
      "ObjectId" : "7fb8e10911065e2bd6a4957c1fe177571e93099f",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/mpr121/CMakeLists.txt" : {
      "ObjectId" : "8a2e86ac8a2db66b4e0dd066cc269d37e2ca5a06",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/mpu9150/CMakeLists.txt" : {
      "ObjectId" : "a4410493db0fec2ecadcac05852315104e54f618",
      "LastModified" : "2019-04-05T15:33:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/mq303a/CMakeLists.txt" : {
      "ObjectId" : "2df76fbe124f09d2b7876c15b2d1659a7e31b487",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ms5611/CMakeLists.txt" : {
      "ObjectId" : "89842c8efcc1b01f4a63b3dee8b006dd023c21e3",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ms5803/CMakeLists.txt" : {
      "ObjectId" : "a706a4d2aeed18d5499d4007d4a523a522a9156a",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/my9221/CMakeLists.txt" : {
      "ObjectId" : "17daab70df6f8fc8b56233e61f64dabe85e21e42",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/nlgpio16/CMakeLists.txt" : {
      "ObjectId" : "9df9e78e2bf44701749a7c6b134d50b888e8fd49",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/nmea_gps/CMakeLists.txt" : {
      "ObjectId" : "b3fb6591b9516ac09ab796507bd9063c332317fc",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/nrf24l01/CMakeLists.txt" : {
      "ObjectId" : "87da4bd4b648647ef2434adc22617e2e008f0d00",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/nrf8001/CMakeLists.txt" : {
      "ObjectId" : "c1c195a764b5631fd15507a8372ef945c34dc641",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/nunchuck/CMakeLists.txt" : {
      "ObjectId" : "9c86fe592db5cf61332b4f108df97701ec892174",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/o2/CMakeLists.txt" : {
      "ObjectId" : "d981d096238f09dcf13977e275d518184c4d99e6",
      "LastModified" : "2019-04-05T15:33:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/otp538u/CMakeLists.txt" : {
      "ObjectId" : "51d96749d97f2da1c5c55a9b1334cc9fcb0185ee",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ozw/CMakeLists.txt" : {
      "ObjectId" : "353c7c03867c0983eca54aaf22f5d34a5abdc6a2",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# openzwave/aes/aes.h has unknown pragmas, disable warning -Wunknown-pragmas\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "src/p9813/CMakeLists.txt" : {
      "ObjectId" : "f8b69f3a0ef31a71cd866d265c779c12ef7c8b5c",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/pca9685/CMakeLists.txt" : {
      "ObjectId" : "71b509c39cb38f08465641f8c8b621de57855f0b",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/pn532/CMakeLists.txt" : {
      "ObjectId" : "cb37f2854a919393f07552b8a73e11ea64ce1b53",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ppd42ns/CMakeLists.txt" : {
      "ObjectId" : "fdcbced31aee5ed5f3c4dc87a0c1c165970d0ed5",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/pulsensor/CMakeLists.txt" : {
      "ObjectId" : "ff7b977393cbed03f4b80d9943c27c5b53944934",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/relay/CMakeLists.txt" : {
      "ObjectId" : "a63573f7b000788afaa8b727930688849713f6d6",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/rf22/CMakeLists.txt" : {
      "ObjectId" : "445d795043afb8de37659cd7abfe1ba8274632e2",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/rfr359f/CMakeLists.txt" : {
      "ObjectId" : "752b27a379b63b558359fabff3d4c9a4700e149b",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/rgbringcoder/CMakeLists.txt" : {
      "ObjectId" : "75cdbce57dc616505813845ab729ec5b2c8e2603",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/rhusb/CMakeLists.txt" : {
      "ObjectId" : "300c1531b7c0ad59e24bf96217b024d4dbd363ec",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/rn2903/CMakeLists.txt" : {
      "ObjectId" : "f5d84c63e6f36ebda986179fd245d62d285f613f",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/rotary/CMakeLists.txt" : {
      "ObjectId" : "7e461154331ff433f94572d372227740bbc0f3e2",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/rotaryencoder/CMakeLists.txt" : {
      "ObjectId" : "5ad831627eb45bfacbef4c11a8cd1c8923411b72",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/rpr220/CMakeLists.txt" : {
      "ObjectId" : "af12ab6b5b574be5400e6d5876466276d9df2cd3",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/rsc/CMakeLists.txt" : {
      "ObjectId" : "380e17fc002cc85c56fa0babf4cc8fa56a4eb25e",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/scam/CMakeLists.txt" : {
      "ObjectId" : "63a779afd3ce75c16d5dd17cd4de32bc3e0fa825",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/sensortemplate/CMakeLists.txt" : {
      "ObjectId" : "b6f97540e6b785cd69cac288a6e9417795b59f50",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/servo/CMakeLists.txt" : {
      "ObjectId" : "592c33dc1683b9e1c375af4f23da0a70030dafb7",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/sht1x/CMakeLists.txt" : {
      "ObjectId" : "6cdca6fdd6b0ed2b6bded87594bea717cf4aba2b",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/si1132/CMakeLists.txt" : {
      "ObjectId" : "11a24403aa14e42bea631b9d42bdf7dade266ccf",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/si114x/CMakeLists.txt" : {
      "ObjectId" : "8153cf8ecfc15dade1762806783d728169c5e13f",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/si7005/CMakeLists.txt" : {
      "ObjectId" : "e933c7fe779cb491413b5eda1b57d495aad7b95a",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/slide/CMakeLists.txt" : {
      "ObjectId" : "1e814b94d163c84ff4da51a52cf38e35e5234495",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/sm130/CMakeLists.txt" : {
      "ObjectId" : "c11b6993ef27d6fea4e7e7bc515c369340109c9d",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/smartdrive/CMakeLists.txt" : {
      "ObjectId" : "ab4a8b88be585bd767582635f7c86193cf49d8df",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/speaker/CMakeLists.txt" : {
      "ObjectId" : "18a08f099e612e340dae443369a8c6be7bfb40e5",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#    FTI_SRC speaker_fti.c\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/ssd1351/CMakeLists.txt" : {
      "ObjectId" : "1be5468d3a8f4ce4769bfbd9a07e803da7dd1d72",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/st7735/CMakeLists.txt" : {
      "ObjectId" : "f88eea5fbfcf17d1048851ff92059b32f41e2161",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/stepmotor/CMakeLists.txt" : {
      "ObjectId" : "997217f656cf2fa8ef2aa2f20ade3bfd8c282248",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Currently no librt in android\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/sx1276/CMakeLists.txt" : {
      "ObjectId" : "01b9930ac2eedd3158966e59b73f12c4421af343",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/sx6119/CMakeLists.txt" : {
      "ObjectId" : "d08b7ed942fe7a8e7ced95947f64183221b7807d",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/t3311/CMakeLists.txt" : {
      "ObjectId" : "f43689f454f3f846ac160b0ddee6b8850c8952ba",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/t6713/CMakeLists.txt" : {
      "ObjectId" : "7115b2467d05c947758ad9e5de3c8d681e1c02d3",
      "LastModified" : "2019-04-05T15:33:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/t8100/CMakeLists.txt" : {
      "ObjectId" : "97d9b312ab7bfe4ef1341c220242c55ab3850d17",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ta12200/CMakeLists.txt" : {
      "ObjectId" : "1ef987e2c3e7489e0d60b169912d91e4ca7aa57c",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tb7300/CMakeLists.txt" : {
      "ObjectId" : "2f37d68f643e959329f758740e48a561ebb731a2",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tca9548a/CMakeLists.txt" : {
      "ObjectId" : "c4e091fe6b479698d0cfd9fa5ccf94a5ed307067",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tcs3414cs/CMakeLists.txt" : {
      "ObjectId" : "8eeed976ac8605aea036595a1af6566c2b729adc",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tcs37727/CMakeLists.txt" : {
      "ObjectId" : "9596a709734dab239158e923a3537b01b0aef0c4",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/teams/CMakeLists.txt" : {
      "ObjectId" : "c81d474dce673de891eab0fe3f59b17937ea04fc",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/temperature/CMakeLists.txt" : {
      "ObjectId" : "abaede049280edba2f13eb2983e0b220aa77ca49",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tex00/CMakeLists.txt" : {
      "ObjectId" : "6fd0c269f71bd91628108fb11875a730b43142d9",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/th02/CMakeLists.txt" : {
      "ObjectId" : "f22b476228dbe08799ea5071a22750fbcb8a15cb",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tm1637/CMakeLists.txt" : {
      "ObjectId" : "337c5211ddd83d6f6e2226d03fa139f69cab2e15",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tmp006/CMakeLists.txt" : {
      "ObjectId" : "7bb922138c30a1494a3470e131caa6151d2ef497",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tsl2561/CMakeLists.txt" : {
      "ObjectId" : "3ef3f4711aa46ffa715623a371f17078e8d8ee5f",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ttp223/CMakeLists.txt" : {
      "ObjectId" : "746f2af2dd60459f935f6bf110f73e8d14898493",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/uartat/CMakeLists.txt" : {
      "ObjectId" : "4bd5ed740795b17f06e4f288b1a1a54d3bed6b39",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/uln200xa/CMakeLists.txt" : {
      "ObjectId" : "ca30d863fc0c66fd69c1f9ae66f2ffc0af9c5b54",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ultrasonic/CMakeLists.txt" : {
      "ObjectId" : "a89fe5696a65fa32ac06758c7dd380c0f87bf08c",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/urm37/CMakeLists.txt" : {
      "ObjectId" : "a44e705bc11003d217bf0ff386ad7869f6888675",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/utilities/CMakeLists.txt" : {
      "ObjectId" : "56d24d1230b4330bcdb7a6a13da3be601efa6186",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/vcap/CMakeLists.txt" : {
      "ObjectId" : "83964db5343e0d4f1bf25158b88db04ec8f2ee44",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/vdiv/CMakeLists.txt" : {
      "ObjectId" : "5bb4832bb8372d2f46910b6858d93df1703ebd83",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/veml6070/CMakeLists.txt" : {
      "ObjectId" : "9ed32a9f7fa26436196d586175d4883fdee97fe6",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/water/CMakeLists.txt" : {
      "ObjectId" : "bc07632908e3ef60dc901a167c02b6ee84106a45",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/waterlevel/CMakeLists.txt" : {
      "ObjectId" : "06f63bd45f8a24913c51e537f393f2587042a0a5",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/wfs/CMakeLists.txt" : {
      "ObjectId" : "897e00424b0ba6944428dabeba7314239c70d208",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/wheelencoder/CMakeLists.txt" : {
      "ObjectId" : "ec4f02bea10f85fa2a282983bbd7891f8581d299",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/wt5001/CMakeLists.txt" : {
      "ObjectId" : "f7f74f37a6432720f8199516ba1003d3857fe3bb",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/xbee/CMakeLists.txt" : {
      "ObjectId" : "d41782d8b799dcac109810535b3fb70a909c4d18",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/yg1006/CMakeLists.txt" : {
      "ObjectId" : "c73fe55568334a039002c033c64466b5566a329a",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/zfm20/CMakeLists.txt" : {
      "ObjectId" : "bc49e1aff10ff8ba12ca96accb66e5482821360b",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "b12216229222a61397584e3cd67a9f1f7e158481",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add some general tests (which use python2)...\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Consistency check\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Check file encodings in src tree\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Check for duplicate headers\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Add some java tests\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add a node test\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add a python test\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Check python examples against cxx examples\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Add some python2 tests\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Test load python2 modules\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Test load examples w/python2\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Add some python3 tests\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Test load examples w/python3\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "## Check json library descriptor files for required fields\n\n#if(NPM_EXECUTABLE)\n\n#    add_test (NAME check_jsons COMMAND ${CMAKE_COMMAND}\n\n#        -DNPMEXEC=${NPM_EXECUTABLE}\n\n#        -DUPMBASEDIR=${CMAKE_SOURCE_DIR}\n\n#        -P ${CMAKE_SOURCE_DIR}/tests/runjsontest.cmake)\n\n#endif(NPM_EXECUTABLE)\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Unit tests\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "tests/runjsontest.cmake" : {
      "ObjectId" : "d9eec9e5c2d60df9ab1fef55b63e2a3cb6b60834",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This macro sets up the initial JSON test environment\n\n# it copies over everything required by the test over to the\n\n# build directory so that the tests can be run from there\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This macro runs the json test and checks the json files for\n\n# their validity and also checks for the required fields\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# this macro removes all the JSON collateral from the build directory\n\n#macro(REMOVE_JSON_COLLATERAL UBD)\n\n#    execute_process(COMMAND rm -rf ${UBD}/build/node_test)\n\n#endmacro()\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#remove_json_collateral(${UPMBASEDIR})\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tests/unit/CMakeLists.txt" : {
      "ObjectId" : "5e9a1963fa526500d611224d66a34b1cef31b3cc",
      "LastModified" : "2019-04-05T05:15:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For now, Google Test is NOT required */\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If not found, print a status message and return\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Unit tests - utilities library\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Unit tests - Json header\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Unit tests - nmea_gps library\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add a custom target for unit tests\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    }
  },
  "FileTypes" : {
    "CMAKE" : 248
  },
  "ElapsedTime" : 3869
}