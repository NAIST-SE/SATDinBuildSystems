{
  "Repository" : "11082174",
  "Revision" : "HEAD",
  "ObjectId" : "40b782cf49d116be9407e8679c181d183778e475",
  "CommitTime" : "2019-04-16T07:57:40Z",
  "Files" : {
    "screen_cast_extension/mouse_move/CMakeLists.txt" : {
      "ObjectId" : "e24e2c49694976547fc1e4ffd1379137240274ec",
      "LastModified" : "2018-03-17T10:40:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use our modified FindSDL2* modules\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set an output directory for our binaries\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Bump up warning levels appropriately for clang, gcc & msvc\n\n# Also set debug/optimization flags depending on the build type. IDE users choose this when\n\n# selecting the build mode in their IDE\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look up SDL2 and add the include directory to our include path\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Look in the Lesson0 subdirectory to find its CMakeLists.txt so we can build the executable\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "screen_cast_extension/mouse_move/MouseMove/CMakeLists.txt" : {
      "ObjectId" : "8fe04c8ab99f0f67b74bd0072dd574921d76ec18",
      "LastModified" : "2018-03-17T17:23:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "screen_cast_extension/mouse_move/cmake/FindSDL2.cmake" : {
      "ObjectId" : "e7ca67164b2b072d88e7a483611e774c2e8de5fc",
      "LastModified" : "2018-03-18T09:47:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# https://github.com/Twinklebear/TwinklebearDev-Lessons/blob/master/cmake/FindSDL2.cmake\n\n# Locate SDL2 library\n\n# This module defines\n\n# SDL2_LIBRARY, the name of the library to link against\n\n# SDL2_FOUND, if false, do not try to link to SDL2\n\n# SDL2_INCLUDE_DIR, where to find SDL.h\n\n#\n\n# This module responds to the the flag:\n\n# SDL2_BUILDING_LIBRARY\n\n# If this is defined, then no SDL2_main will be linked in because\n\n# only applications need main().\n\n# Otherwise, it is assumed you are building an application and this\n\n# module will attempt to locate and set the the proper link flags\n\n# as part of the returned SDL2_LIBRARY variable.\n\n#\n\n# Don't forget to include SDL2main.h and SDL2main.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDL2main which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL2 library\n\n# (SDL2.dll, libsdl2.so, SDL2.framework, etc).\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDL2 is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2\n\n# used in building SDL2.\n\n# l.e.galup 9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL2 guidelines.\n\n# Added a search for SDL2main which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL2 convention\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\n\n#\n\n# Ported by Johnny Patterson. This is a literal port for SDL2 of the FindSDL.cmake\n\n# module with the minor edit of changing \"SDL\" to \"SDL2\" where necessary. This\n\n# was not created for redistribution, and exists temporarily pending official\n\n# SDL2 CMake modules.\n\n#\n\n# Note that on windows this will only search for the 32bit libraries, to search\n\n# for 64bit change x86/i686-w64 to x64/x86_64-w64\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# CMake - Cross Platform Makefile Generator\n\n# Copyright 2000-2014 Kitware, Inc.\n\n# Copyright 2000-2011 Insight Software Consortium\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n# notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n# notice, this list of conditions and the following disclaimer in the\n\n# documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n# nor the names of their contributors may be used to endorse or promote\n\n# products derived from this software without specific prior written\n\n# permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n# License text for the above reference.)\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 119,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 120,
        "CharPositionInLine" : 19
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 121,
        "CharPositionInLine" : 17
      },
      "5" : {
        "Text" : "# Lookup the 64 bit libs on x64\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# On 32bit build find the 32bit libs\n",
        "Line" : 140,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDL2main. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDL2main for compatibility even though they don't\n\n# necessarily need it.\n\n# Lookup the 64 bit libs on x64\n",
        "Line" : 159,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# On 32bit build find the 32bit libs\n",
        "Line" : 179,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# SDL2 may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# MinGW needs an additional library, mwindows\n\n# It's total link flags should look like -lmingw32 -lSDL2main -lSDL2 -lmwindows\n\n# (Actually on second look, I think it only needs one of the m* libraries.)\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# For SDL2main\n",
        "Line" : 216,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 223,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 233,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# For MinGW library\n",
        "Line" : 240,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 245,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 247,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 17
    }
  },
  "FileTypes" : {
    "CMAKE" : 3
  },
  "ElapsedTime" : 1213
}