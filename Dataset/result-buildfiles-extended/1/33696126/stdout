{
  "Repository" : "33696126",
  "Revision" : "HEAD",
  "ObjectId" : "e9c2e34b0723ea6e040ecdcce3d57153d32b061e",
  "CommitTime" : "2017-05-12T05:25:57Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "ee915b09cc674972d1978cdc8d3600a316a9c695",
      "LastModified" : "2017-05-12T04:34:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########## BOOST\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##### THREADS\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##### MISC\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "benchmarks/CMakeLists.txt" : {
      "ObjectId" : "3e3b70e0eba1b387c02c761e61f3a823db2b0bf9",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/AddCXXCompilerFlag.cmake" : {
      "ObjectId" : "870f11ae4d89c97f1d7268f0280f18c8a032495b",
      "LastModified" : "2016-03-17T17:02:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Adds a compiler flag if it is supported by the compiler\n\n#\n\n# This function checks that the supplied compiler flag is supported and then\n\n# adds it to the corresponding compiler flags\n\n#\n\n#  add_cxx_compiler_flag(<FLAG> [<VARIANT>])\n\n#\n\n# - Example\n\n#\n\n# include(AddCXXCompilerFlag)\n\n# add_cxx_compiler_flag(-Wall)\n\n# add_cxx_compiler_flag(-no-strict-aliasing RELEASE)\n\n# Requires CMake 2.6+\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/CompillerSettings.cmake" : {
      "ObjectId" : "9b577627927d28eddf750d41669dc90d1dc4fcaa",
      "LastModified" : "2017-04-24T04:21:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_cxx_compiler_flag(--coverage COVERAGE)\n\n#SET(CMAKE_CXX_FLAGS_COVERAGE \"${CMAKE_CXX_FLAGS_COVERAGE} --coverage -O0\")\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#-fno-omit-frame-pointer analog\n",
        "Line" : 50,
        "CharPositionInLine" : 64
      },
      "2" : {
        "Text" : "#for 'delete void*;'\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#boost-shared-mutex error;\n",
        "Line" : 79,
        "CharPositionInLine" : 81
      },
      "4" : {
        "Text" : "#for stx::btree\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#main\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#jsonpp\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#spdlog\n",
        "Line" : 118,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "cmake/FindJeMalloc.cmake" : {
      "ObjectId" : "0c55a5ca954872a332eb8e66609190536918ec59",
      "LastModified" : "2017-04-12T11:00:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find jemalloc headers and libraries.\n\n#\n\n# Usage of this module as follows:\n\n#\n\n#     find_package(JeMalloc)\n\n#\n\n# Variables used by this module, they can change the default behaviour and need\n\n# to be set before calling find_package:\n\n#\n\n#  JEMALLOC_ROOT_DIR Set this variable to the root installation of\n\n#                    jemalloc if the module has problems finding\n\n#                    the proper installation path.\n\n#\n\n# Variables defined by this module:\n\n#\n\n#  JEMALLOC_FOUND             System has jemalloc libs/headers\n\n#  JEMALLOC_LIBRARIES         The jemalloc library/libraries\n\n#  JEMALLOC_INCLUDE_DIR       The location of jemalloc headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/config.h.cmake" : {
      "ObjectId" : "d85e2fc00a0d5de4d6d09ece57a71c662bb67ec8",
      "LastModified" : "2017-04-12T11:00:32Z",
      "FileType" : "CMAKESOURCE",
      "CommentCount" : 0
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "9aab10249bb6e72eb76ebcc3775427ce68037ca0",
      "LastModified" : "2017-04-24T04:21:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extern/jemalloc-cmake/CMakeLists.txt" : {
      "ObjectId" : "5110a5189208e51ffbf9b9c28974dff00537448a",
      "LastModified" : "2017-04-12T11:00:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This make file supports Windows build of Jemalloc\n\n#\n\n# Prerequisites:\n\n#     You must have Visual Studio 2013 Update 4 installed or Visual Studio 2015 Update 1.\n\n#      Start the Developer Command Prompt window that is a part of Visual Studio installation.\n\n#      This will provide you with the accessible toolchain commands.\n\n#      You must have a path git.exe in your %PATH%.\n\n#\n\n# 1. Create a build directory\n\n#\n\n# 2. Run cmake to generate project files for Windows\n\n#        sample command: cmake -G \"Visual Studio 12 Win64\"  ..\n\n#        OR for VS Studio 15 cmake -G \"Visual Studio 14 Win64\"  [optional switches described below] ..\n\n#\n\n# 3. Then build the project in debug mode (you may want to add /m[:<N>] flag to run msbuild in <N> parallel threads\n\n#                                          or simply /m ot use all avail cores)\n\n#        msbuild jemalloc.sln\n\n#\n\n# 4. And release mode (/m[:<N>] is also supported)\n\n#        msbuild jemalloc.sln /p:Configuration=Release\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Currently this file only enables building on Windows and not Cygwin or MSYS\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set policy based on the CMake version\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The following config switches that mimic the original autoconf behavior are supported\n\n# use -D to define cmd arguments, options may have values of ON/OFF\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#  with-mangling=k:v,k:v... comma separated list of key:value pairs overrides specific function mangling\n\n#  with-jemalloc-prefix=<prefix> override default je_ prefix\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#  with-private-namespace=<additional_prefix>\n\n#  with-install-suffix=<suffix> added to public headers and the library\n\n#  with-malloc-conf=lg_chunk:18 Embed <malloc_conf> as a run-time options string that is processed prior to\n\n#       the malloc_conf global variable\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#  with-lg-tiny-min=<lg2 value> override default value of 3 of lg2 minimum tiny clas size\n\n#  with-lg-quantum=<lg2 of the min allocation alignment>\n\n#  with-lg-page=<lg2 of the page size> override system page size\n\n#  with-lg-page-sizes=<comma separated list of lg2 pages sizes> Base 2 logs of system page sizes to support\n\n#  with-lg_size-class-group=<Base 2 log of size classes per doubling> default 2\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# install_prefix - installation directory prefix\n\n# with-xslroot=<path>  XSL stylesheet root path\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# TODO: Check the need for CONFIG\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Set library revision\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Installation\n\n# Munge install path variables.\n\n# All of these can simply we be passed as\n\n# Cmake arguments\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Support for building documentation.\n\n# find_package(xsltproc)\n\n# if(XSLTPROC_FOUND)\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# set(XSLTPROC ${XSLTPROC_EXECUTABLE})\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# endif()\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Documentation building will fail if this default gets used.\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Cmake will always have some CFLAGS set based on the compiler detection\n\n# Until we discover it is not what we want\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# TODO: Check if MATCHES is OK with this syntax\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Whether cray compiler version is 8.4\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# If the version is defined then use it\n",
        "Line" : 131,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# TODO: If the version is not defined then need to\n\n# if(NOT VersionFound) COmpile and build the program\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# The errors on these are not checked\n",
        "Line" : 159,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Restrict is #defined to _restrict\n",
        "Line" : 165,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# The rest of MSVC flags are down below\n",
        "Line" : 167,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# cray compiler 8.4 has an inlining bug\n",
        "Line" : 171,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# ignore unreachable code warning\n",
        "Line" : 177,
        "CharPositionInLine" : 6
      },
      "25" : {
        "Text" : "# ignore redefinition of \"malloc\", \"free\", etc warning\n",
        "Line" : 179,
        "CharPositionInLine" : 6
      },
      "26" : {
        "Text" : "##################################################################\n\n# Versioning from GIT\n\n# Defaults\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# We do not support exec_prefix until we find it is necessary\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# TODO Determine abi\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Whether malloc_usable_size definition can use const argument\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# The latest code hardcodes this on Windows\n\n# set(LG_SIZEOF_PTR_WIN ${LG_SIZEOF_PTR})\n",
        "Line" : 220,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# CPU-specific settings.\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# If defined, use munmap() to unmap freed chunks, rather than storing them for\n\n# later reuse.  This is disabled by default on Linux because common sequences\n\n# of mmap()/munmap() calls will cause virtual memory map holes.\n\n# But it is enabled by default on Windows\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# If defined, adjacent virtual memory mappings with identical attributes\n\n# automatically coalesce, and they fragment when changes are made to subranges.\n\n# This is the normal order of things for mmap()/munmap(), but on Windows\n\n# VirtualAlloc()/VirtualFree() operations must be precisely matched, i.e.\n\n# mappings do *not* coalesce/fragment.\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "###################################################\n\n# Undefined\n\n# #undef JEMALLOC_HAVE_ATTR\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Below is everything under HAVE_ATTR\n\n# #undef JEMALLOC_HAVE_ATTR_ALLOC_SIZE\n\n# #undef JEMALLOC_HAVE_ATTR_FORMAT_GNU_PRINTF\n\n# #undef JEMALLOC_FORMAT_PRINTF\n\n# #undef JEMALLOC_USE_CXX_THROW\n\n#\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# We are expecting entries separated by a comma\n\n# with individual entries split by a ':' as in n:m\n\n# Convert that into a CMake list of ';' separated pairs\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Set the default API prefix for public\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Protos are always je_ but are renamed by #defines according to prefix\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Uppercase copy of the JEMALLOC_PREFIX\n\n# Need  quotes so the preprocessor concats two strings\n",
        "Line" : 339,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Disable exporting jemalloc public APIs\n\n# We need to define the var to whitespace string\n\n# as empty strings will not be defined in CMake\n\n# Non-empty definition is necessary so\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Prefix to prepend to all library-private APIs\n\n# default is on\n",
        "Line" : 353,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Default empty\n\n# Specify default malloc_conf\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Do not silence irrelevant compiler warnings\n",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Build debugging code (implies --enable-ivsalloc)\n",
        "Line" : 380,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Validate pointers passed through the public API\n",
        "Line" : 386,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Enable stats by default\n",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Disable statistics calculation/reporting\n",
        "Line" : 393,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Enable thread-specific caching by default.\n",
        "Line" : 398,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Disabling dss allocation because sbrk is deprecated\n",
        "Line" : 406,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Support the junk/zero filling option by default.\n",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Disable support for junk/zero filling, quarantine, and redzones\n",
        "Line" : 411,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Windows does not have it\n",
        "Line" : 416,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Support xmalloc option\n",
        "Line" : 420,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Support cache-oblivious allocation alignment by default.\n\n# If defined, explicitly attempt to more uniformly distribute large allocation\n\n# pointer alignments across all cache indices.\n",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# ffsl and ffs are defined in msvc_compat/strings.h\n",
        "Line" : 436,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Base 2 log of minimum tiny size class to support\n",
        "Line" : 441,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Base 2 log of minimum allocation alignment\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Convert to a CMake list\n",
        "Line" : 450,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# Base 2 log of system page size\n",
        "Line" : 456,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Base 2 logs of system page sizes to support\n",
        "Line" : 468,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Base 2 log of size classes per doubling\n",
        "Line" : 474,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Check if syscall(2) is usable.  Treat warnings as errors, so that e.g. OS X\n\n# 10.12's deprecation warning prevents use.\n",
        "Line" : 481,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "############################\n\n# enable-lazy-lock\n",
        "Line" : 506,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "#########################\n",
        "Line" : 536,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Separate clause for _WIN32 does the right thing\n\n# So TLS is enabled for Windows\n",
        "Line" : 538,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Relevant for FreeBSD only\n",
        "Line" : 542,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Only for iOS\n",
        "Line" : 545,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Only for GNU\n",
        "Line" : 550,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "###########################################################################\n\n# Generate configured public headers for concatenation\n\n# Public Headers in for configuring\n",
        "Line" : 564,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Needed for tests\n",
        "Line" : 604,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Generate main public header\n",
        "Line" : 608,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "##############################################################################################\n\n## Internal headers generation\n",
        "Line" : 622,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# This file comes with repo\n",
        "Line" : 630,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Configure internal headers\n",
        "Line" : 639,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Main internal header does not require #define expansion otherwise it affects real #undefs\n",
        "Line" : 641,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Test related headers\n",
        "Line" : 651,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# To generate protos_jet\n",
        "Line" : 663,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# replace prefix only\n",
        "Line" : 666,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# revert\n",
        "Line" : 670,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# The original library, delivery product\n",
        "Line" : 712,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Now add shared library. Needed for integration tests\n\n# and a benchmark\n",
        "Line" : 716,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# May want to replace  /d2Zi+ to /Zo\n",
        "Line" : 722,
        "CharPositionInLine" : 2
      },
      "83" : {
        "Text" : "# Separate line for warnings suppression mostly due to the fact we have ints 32 bits\n\n# - C4267 due to the fact we have ints 32 bits\n\n# - C4244 simular typedef unsigned szind_t\n\n# - C4146 alignment calculation applies negation to a unsigned type\n\n# - C4334 - result of 32-bit shift implicitly converted to 64 bits\n\n# - C4090 - some modifiable parameters are passed with a const qualifier\n",
        "Line" : 725,
        "CharPositionInLine" : 2
      },
      "84" : {
        "Text" : "# Need full PDB for those who link to it\n\n# MSVC does not generate full PDB for static libs by default\n\n# and disable export from the DLL otherwise JEMALLOC_EXPORT becomes\n\n# either impport or export which is both wrong for a static library\n",
        "Line" : 745,
        "CharPositionInLine" : 2
      },
      "85" : {
        "Text" : "# Need to export from DLL\n",
        "Line" : 763,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "##################################################################\n\n## Building tests\n",
        "Line" : 775,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# Compose compiler defs and options for the tests\n",
        "Line" : 778,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# Add empty definition of JEMALLOC_EXPORT as we use them in\n\n# static form on other platforms it is empty defined by default but\n\n# not on windows\n",
        "Line" : 792,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# C4018 signed/unsigned mismatch in timer.c\n",
        "Line" : 802,
        "CharPositionInLine" : 2
      },
      "90" : {
        "Text" : "###################################################\n\n# JET prefixed version of jemalloc library\n\n# necessary to compliment non-exported symbols\n",
        "Line" : 806,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "##################################################################\n\n# Util integration two object files helper\n",
        "Line" : 814,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 92
    },
    "extern/jemalloc-cmake/Utilities.cmake" : {
      "ObjectId" : "562e94897b704c0334d3375f5ab3168d009ef9d5",
      "LastModified" : "2017-04-12T11:00:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Utilities.cmake\n\n# Supporting functions to build Jemalloc\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########################################################################\n\n# CheckTypeSize\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########################################################################\n\n# Power of two\n\n# returns result in a VAR whose name is in RESULT_NAME\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#########################################################################\n\n# Logarithm base 2\n\n# returns result in a VAR whose name is in RESULT_NAME\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "######################################################\n\n# Based on size_class() in size_classes.sh\n\n#\n\n# Thankfully, no floating point calcs\n\n#\n\n# Defined upon return:\n\n# - psz (\"yes\" or \"no\")\n\n# - bin (\"yes\" or \"no\")\n\n# - lg_delta_lookup (${lg_delta} or \"no\")\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check if the integer division above had a rem\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# lg_g explicitely added to the list of args\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# AND has a higher precedence in the original SH than OR so we\n\n# explicitly group them together here\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "## TODO: Formatted output maybe necessary\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Defined upon return:\n\n# - psz (\"yes\" or \"no\")\n\n# - bin (\"yes\" or \"no\")\n\n# - lg_delta_lookup (${lg_delta} or \"no\")\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Promote to PARENT_SCOPE\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# message(STATUS \"size_class_result: psz: ${psz} bin: ${bin} lg_delta_lookup: ${lg_delta_lookup}\")\n",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "####################################################################\n\n# size_classes helper function\n\n# Based on size_classes.sh\n\n#\n\n# Defined upon completion:\n\n# - ntbins\n\n# - nlbins\n\n# - nbins\n\n# - nsizes\n\n# - npsizes\n\n# - lg_tiny_maxclass\n\n# - lookup_maxclass\n\n# - small_maxclass\n\n# - lg_large_minclass\n\n# - huge_maxclass\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Tiny size classes.\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Add passing lg_g as penaltimate arg. lg_g originally passed implicitly\n\n# See doc for the output values\n",
        "Line" : 166,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Final written value is correct.\n",
        "Line" : 182,
        "CharPositionInLine" : 36
      },
      "16" : {
        "Text" : "# First non-tiny group.\n",
        "Line" : 188,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# The first size class has an unusual encoding, because the size has to be\n\n# split between grp and delta*ndelta.\n",
        "Line" : 193,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# All remaining groups.\n",
        "Line" : 215,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Final written value is correct:\n",
        "Line" : 238,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# # Final written value is correct:\n",
        "Line" : 246,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# Final written value is correct:\n",
        "Line" : 254,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "# Defined upon completion:\n\n# - ntbins\n\n# - nlbins\n\n# - nbins\n\n# - nsizes\n\n# - npsizes  \n\n# - lg_tiny_maxclass\n\n# - lookup_maxclass\n\n# - small_maxclass\n\n# - lg_large_minclass\n\n# - huge_maxclass\n",
        "Line" : 267,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Promote to PARENT_SCOPE\n",
        "Line" : 279,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# message(STATUS \"size_classes_result: ntbins ${ntbins} \"\n",
        "Line" : 291,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# \"nlbins ${nlbins} \"\n\n# \"nbins ${nbins} \"\n\n# \"nsizes ${nsizes} \"\n\n# \"npsizes ${npsizes} \"\n\n# \"lg_tiny_maxclass ${lg_tiny_maxclass} \"\n\n# \"lookup_maxclass ${lookup_maxclass} \"\n\n# \"small_maxclass ${small_maxclass} \"\n\n# \"lg_large_minclass ${lg_large_minclass} \"\n\n# \"large_maxclass ${huge_maxclass}\"\n\n# )\n",
        "Line" : 292,
        "CharPositionInLine" : 10
      },
      "26" : {
        "Text" : "###################################################\n\n# SizeClasses\n\n# Based on size_classes.sh\n\n# lg_qarr - quanta\n\n# lg_tmin - The range of tiny size classes is [2^lg_tmin..2^(lg_q-1)].\n\n# lg_parr - list of page sizes\n\n# lg_g - Size class group size (number of size classes for each size doubling).\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# message(STATUS \"SizeClasses: lg_qarr:${lg_qarr} lg_tmin:${lg_tmin} lg_parr:${lg_parr} lg_g:${lg_g}\\n\"\n\n# \"output: ${output_file}\"\n\n# )\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# The following limits are chosen such that they cover all supported platforms.\n\n# Pointer sizes.\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Maximum lookup size.\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Iterate through page sizes and compute how many bins there are.\n",
        "Line" : 365,
        "CharPositionInLine" : 6
      },
      "31" : {
        "Text" : "#############################################\n\n# Read one file and append it to another\n",
        "Line" : 422,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#############################################\n\n# Generate public symbols list\n",
        "Line" : 430,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# First remove from public symbols those that appear in the mangling map\n",
        "Line" : 436,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Extract the symbol\n",
        "Line" : 439,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "#####################################################################\n\n# Decorate symbols with a prefix\n\n#\n\n# This is per jemalloc_mangle.sh script.\n\n#\n\n# IMHO, the script has a bug that is currently reflected here\n\n# If the public symbol as alternatively named in a mangling map it is not\n\n# reflected here. Instead, all symbols are #defined using the passed symbol_prefix\n",
        "Line" : 452,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Header\n",
        "Line" : 462,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Footer\n",
        "Line" : 500,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "########################################################################\n\n# Generate jemalloc_rename.h per jemalloc_rename.sh\n",
        "Line" : 505,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Header\n",
        "Line" : 508,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Footer\n",
        "Line" : 522,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "###############################################################\n\n# Create a jemalloc.h header by concatenating the following headers\n\n# Mimic processing from jemalloc.sh\n\n# This is a Windows specific function\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# File Header\n",
        "Line" : 540,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Footer\n",
        "Line" : 555,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "############################################################################\n\n# Redefines public symbols prefxied with je_ via a macro\n\n# Based on public_namespace.sh which echoes the result to a stdout\n",
        "Line" : 565,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "############################################################################\n\n# #undefs public je_prefixed symbols\n\n# Based on public_unnamespace.sh which echoes the result to a stdout\n",
        "Line" : 579,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "####################################################################\n\n# Redefines a private symbol via a macro\n\n# Based on private_namespace.sh\n",
        "Line" : 594,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "####################################################################\n\n# Redefines a private symbol via a macro\n\n# Based on private_namespace.sh\n",
        "Line" : 607,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "############################################################################\n\n# A function that configures a file_path and outputs\n\n# end result into output_path\n\n# ExpandDefine True/False if we want to process the file and expand\n\n# lines that start with #undef DEFINE into what is defined in CMAKE\n",
        "Line" : 621,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Use Powershell to convert autoconf file to a cmake conf file\n\n# and see if that fixes the issue of line continuations and ; in the file\n\n# PS Snipper\n",
        "Line" : 628,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# This converts #undefs into #cmakedefines so configure_file can handle it\n",
        "Line" : 633,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Convert autoconf .in into a cmake .in\n",
        "Line" : 646,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "############################################################################################\n\n## Run Git and parse the output to populate version settings above\n",
        "Line" : 665,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Figure out version components    \n",
        "Line" : 673,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# replace in this order to get a valid cmake list\n",
        "Line" : 678,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "#################################################################################\n\n## Compile a progam and collect page size output from the OUTPUT_VAR_NAME\n",
        "Line" : 718,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Direct all the files into one folder\n",
        "Line" : 722,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "######################################################\n\n## This function attemps to compile a one liner\n\n# with compiler flags to append. If the compiler flags\n\n# are supported they are appended to the variable which names\n\n# is supplied in the APPEND_TO_VAR and the RESULT_VAR is set to\n\n# True, otherwise to False\n",
        "Line" : 768,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Combine the result to try\n",
        "Line" : 776,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "#############################################\n\n# JeCompilable checks if the code supplied in the hcode\n\n# is compilable \n\n# label - part of the message\n\n# hcode - code prolog such as definitions\n\n# mcode - body of the main() function\n\n#\n\n# It sets rvar to yes or now depending on the result\n\n#\n\n# TODO: Make sure that it does expose linking problems\n",
        "Line" : 791,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# We may want a stronger check here\n",
        "Line" : 811,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 61
    },
    "extern/libsqlite3/CMakeLists.txt" : {
      "ObjectId" : "b4f72a6c72afdc9fa8cb4203520c4487b721d099",
      "LastModified" : "2017-04-12T11:00:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2007-2012 LuaDist.\n\n# Created by Peter Kapec\n\n# Redistribution and use of this file is allowed according to the terms of the MIT license.\n\n# For details see the COPYRIGHT file distributed with LuaDist.\n\n# Please note that the package source code is licensed under its own license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Project\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# SQLite configuration\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add dl on unix systems\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# SQLite Library\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Install Headers\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "extern/libsqlite3/cmake/FindReadline.cmake" : {
      "ObjectId" : "ce85e2a134d019ac4964991ed5d3da90a2ec6110",
      "LastModified" : "2017-04-12T11:00:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Readline\n\n# Once done this will define\n\n#  READLINE_FOUND - System has readline\n\n#  READLINE_INCLUDE_DIRS - The readline include directories\n\n#  READLINE_LIBRARIES - The libraries needed to use readline\n\n#  READLINE_DEFINITIONS - Compiler switches required for using readline\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set READLINE_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "extern/libsqlite3/cmake/FindSQLite3.cmake" : {
      "ObjectId" : "c3689205dbf5bf5426846fae64316a92ee9d8444",
      "LastModified" : "2017-04-12T11:00:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2007-2009 LuaDist.\n\n# Created by Peter Kapec <kapecp@gmail.com>\n\n# Redistribution and use of this file is allowed according to the terms of the MIT license.\n\n# For details see the COPYRIGHT file distributed with LuaDist.\n\n#\tNote:\n\n#\t\tSearching headers and libraries is very simple and is NOT as powerful as scripts\n\n#\t\tdistributed with CMake, because LuaDist defines directories to search for.\n\n#\t\tEveryone is encouraged to contact the author with improvements. Maybe this file\n\n#\t\tbecomes part of CMake distribution sometimes.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Find sqlite3\n\n# Find the native SQLITE3 headers and libraries.\n\n#\n\n# SQLITE3_INCLUDE_DIRS\t- where to find sqlite3.h, etc.\n\n# SQLITE3_LIBRARIES\t- List of libraries when using sqlite.\n\n# SQLITE3_FOUND\t- True if sqlite found.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look for the library.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set SQLITE3_FOUND to TRUE if all listed variables are TRUE.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Copy the results to the output variables.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "extern/libsqlite3/cmake/dist.cmake" : {
      "ObjectId" : "310ef94cc9ddf4880e577520fe6258cd3e2e4236",
      "LastModified" : "2017-04-12T11:00:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# LuaDist CMake utility library.\n\n# Provides sane project defaults and macros common to LuaDist CMake builds.\n\n# \n\n# Copyright (C) 2007-2012 LuaDist.\n\n# by David Manura, Peter Drahoš\n\n# Redistribution and use of this file is allowed according to the terms of the MIT license.\n\n# For details see the COPYRIGHT file distributed with LuaDist.\n\n# Please note that the package source code is licensed under its own license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Extract information from dist.info\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Reads field `name` from dist.info string `DIST_INFO` into variable `var`.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## 2DO: Parse DIST_DEPENDS and try to install Dependencies with automatically using externalproject_add\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## INSTALL DEFAULTS (Relative to CMAKE_INSTALL_PREFIX)\n\n# Primary paths\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Secondary paths\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Tweaks and other defaults\n\n# Setting CMAKE to use loose block and search for find modules in source directory\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# In MSVC, prevent warnings that can occur when using standard libraries.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# RPath and relative linking\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## MACROS\n\n# Parser macro\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# install_executable ( executable_targets )\n\n# Installs any executables generated using \"add_executable\".\n\n# USE: install_executable ( lua )\n\n# NOTE: subdirectories are NOT supported\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# install_library ( library_targets )\n\n# Installs any libraries generated using \"add_library\" into apropriate places.\n\n# USE: install_library ( libexpat )\n\n# NOTE: subdirectories are NOT supported\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# helper function for various install_* functions, for PATTERN/REGEX args.\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# install_header ( files/directories [INTO destination] )\n\n# Install a directories or files into header destination.\n\n# USE: install_header ( lua.h luaconf.h ) or install_header ( GL )\n\n# USE: install_header ( mylib.h INTO mylib )\n\n# For directories, supports optional PATTERN/REGEX arguments like install().\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# install_data ( files/directories [INTO destination] )\n\n# This installs additional data files or directories.\n\n# USE: install_data ( extra data.dat )\n\n# USE: install_data ( image1.png image2.png INTO images )\n\n# For directories, supports optional PATTERN/REGEX arguments like install().\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# INSTALL_DOC ( files/directories [INTO destination] )\n\n# This installs documentation content\n\n# USE: install_doc ( doc/ doc.pdf )\n\n# USE: install_doc ( index.html INTO html )\n\n# For directories, supports optional PATTERN/REGEX arguments like install().\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# install_example ( files/directories [INTO destination]  )\n\n# This installs additional examples\n\n# USE: install_example ( examples/ exampleA )\n\n# USE: install_example ( super_example super_data INTO super)\n\n# For directories, supports optional PATTERN/REGEX argument like install().\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# install_test ( files/directories [INTO destination] )\n\n# This installs tests and test files, DOES NOT EXECUTE TESTS\n\n# USE: install_test ( my_test data.sql )\n\n# USE: install_test ( feature_x_test INTO x )\n\n# For directories, supports optional PATTERN/REGEX argument like install().\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# install_foo ( files/directories [INTO destination] )\n\n# This installs optional or otherwise unneeded content\n\n# USE: install_foo ( etc/ example.doc )\n\n# USE: install_foo ( icon.png logo.png INTO icons)\n\n# For directories, supports optional PATTERN/REGEX argument like install().\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## CTest defaults\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## CPack defaults\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "libdariadb/CMakeLists.txt" : {
      "ObjectId" : "d2f50cfd58cda8e47f456f6375e467c3d48ad2ad",
      "LastModified" : "2017-04-30T08:12:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "microbenchmarks/CMakeLists.txt" : {
      "ObjectId" : "1ebf8974f7b3a75b9b3fc1824d68766bcf70486e",
      "LastModified" : "2017-04-24T04:21:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "network/CMakeLists.txt" : {
      "ObjectId" : "ceb806591cabb08bcbc1273a02aeb822130536bd",
      "LastModified" : "2017-04-24T04:21:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "network/common/CMakeLists.txt" : {
      "ObjectId" : "72cc28fa8c8a3a5fa221427222d680f38924895b",
      "LastModified" : "2017-04-24T04:21:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "network/dariadbd/CMakeLists.txt" : {
      "ObjectId" : "b8463aacafddbf83668380709454f78cd498839b",
      "LastModified" : "2017-04-24T04:21:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "network/libclient/CMakeLists.txt" : {
      "ObjectId" : "5d7c0e13abe2b3d66dfa21c3ac3516e71fba9ce5",
      "LastModified" : "2017-04-24T04:21:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "network/libserver/CMakeLists.txt" : {
      "ObjectId" : "5091ef11c409ecf0965e324e0edcd1f2a5d6f17c",
      "LastModified" : "2017-04-24T04:21:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "unittests/CMakeLists.txt" : {
      "ObjectId" : "c744a95f610b235eaefef9f8e2d12db979d698a9",
      "LastModified" : "2017-04-24T04:21:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 20,
    "CMAKESOURCE" : 1
  },
  "ElapsedTime" : 1210
}