{
  "Repository" : "22045827",
  "Revision" : "HEAD",
  "ObjectId" : "aa9db616774e24af7ab2fbcddd5711057b8a901e",
  "CommitTime" : "2019-04-16T22:07:28Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "9f634063d0f81bcf91a9e57e74942f092296487b",
      "LastModified" : "2019-04-10T19:57:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# NOTE: On Windows, this does nothing except when using MinGW or Cygwin.\n\n# CMAKE_BUILD_TYPE has no meaning in Visual Studio, and it always defaults to\n\n# Debug when using NMake.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Detect CPU type and whether we're building 64-bit or 32-bit code\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n# INSTALL DIRECTORIES\n\n###############################################################################\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# When the prefix is /opt/${CMAKE_PROJECT_NAME}, we assume that an \"official\"\n\n# build is being created, and thus we install things into specific locations.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###############################################################################\n\n# CONFIGURATION OPTIONS\n\n###############################################################################\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Explicitly setting CMAKE_POSITION_INDEPENDENT_CODE=FALSE disables PIC for all\n\n# targets, which will cause the shared library builds to fail.  Thus, if shared\n\n# libraries are enabled and CMAKE_POSITION_INDEPENDENT_CODE is explicitly set\n\n# to FALSE, we need to unset it, thus restoring the default behavior\n\n# (automatically using PIC for shared library targets.)\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This causes SO_MAJOR_VERSION/SO_MINOR_VERSION to reset to defaults if\n\n# WITH_JPEG7 or WITH_JPEG8 has changed.\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Because the TurboJPEG API library uses versioned symbols and changes the\n\n# names of functions whenever they are modified in a backward-incompatible\n\n# manner, it is always backward-ABI-compatible with itself, so the major and\n\n# minor SO versions don't change.  However, we increase the middle number (the\n\n# SO \"age\") whenever functions are added to the API.\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###############################################################################\n\n# COMPILER SETTINGS\n\n###############################################################################\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Use the static C library for all build types\n",
        "Line" : 307,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Use the maximum optimization level for release builds\n",
        "Line" : 319,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Use the maximum optimization level for release builds\n",
        "Line" : 329,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Check for headers\n",
        "Line" : 365,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Check for functions\n",
        "Line" : 371,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Check for types\n",
        "Line" : 379,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Check for compiler features\n",
        "Line" : 383,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# The Solaris linker doesn't like our version script for the libjpeg API\n\n# library, but the version script for the TurboJPEG API library should\n\n# still work.\n",
        "Line" : 468,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# Generate files\n",
        "Line" : 488,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Include directories and compiler definitions\n",
        "Line" : 499,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "###############################################################################\n\n# TARGETS\n\n###############################################################################\n",
        "Line" : 503,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "###############################################################################\n\n# TESTS\n\n###############################################################################\n",
        "Line" : 663,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# The output of the floating point DCT/IDCT algorithms differs depending on the\n\n# type of floating point math used, so the FLOATTEST CMake variable must be\n\n# set in order to tell the testing system which floating point results it\n\n# should expect:\n\n#\n\n# sse = validate against the expected results from the libjpeg-turbo SSE SIMD\n\n#       extensions\n\n# 32bit = validate against the expected results from the C code when running on\n\n#         a 32-bit FPU (or when SSE is being used for floating point math,\n\n#         which is generally the default with x86-64 compilers)\n\n# 64bit = validate against the expected results from the C code when running\n\n#         on a 64-bit FPU\n\n# 387 = validate against the expected results from the C code when the 387 FPU\n\n#       is being used for floating point math (which is generally the default\n\n#       with x86 compilers)\n\n# msvc = validate against the expected results from the C code when compiled\n\n#        with a 32-bit version of Visual C++\n",
        "Line" : 831,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# This causes FLOATTEST to reset to the default value if WITH_SIMD has\n\n# changed.\n",
        "Line" : 865,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Test compressing from/decompressing to an arbitrary subregion of a larger\n\n# image buffer\n",
        "Line" : 915,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# These tests are carefully crafted to provide full coverage of as many of\n\n# the underlying algorithms as possible (including all of the\n\n# SIMD-accelerated ones.)\n",
        "Line" : 972,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# CC: null  SAMP: fullsize  FDCT: islow  ENT: huff\n",
        "Line" : 990,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# CC: null  SAMP: fullsize  IDCT: islow  ENT: huff\n",
        "Line" : 995,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# CC: RGB->RGB565  SAMP: fullsize  IDCT: islow  ENT: huff\n",
        "Line" : 1009,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# CC: RGB->RGB565 (dithered)  SAMP: fullsize  IDCT: islow  ENT: huff\n",
        "Line" : 1014,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# CC: RGB->YCC  SAMP: fullsize/h2v1  FDCT: ifast  ENT: 2-pass huff\n",
        "Line" : 1020,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# CC: YCC->RGB  SAMP: fullsize/h2v1 fancy  IDCT: ifast  ENT: huff\n",
        "Line" : 1025,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# CC: YCC->RGB  SAMP: h2v1 merged  IDCT: ifast  ENT: huff\n",
        "Line" : 1030,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# CC: YCC->RGB565  SAMP: h2v1 merged  IDCT: ifast  ENT: huff\n",
        "Line" : 1036,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# CC: YCC->RGB565 (dithered)  SAMP: h2v1 merged  IDCT: ifast  ENT: huff\n",
        "Line" : 1042,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# CC: RGB->YCC  SAMP: fullsize/h2v2  FDCT: ifast  ENT: prog huff\n",
        "Line" : 1048,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# CC: YCC->RGB  SAMP: fullsize/h2v2 fancy  IDCT: ifast  ENT: prog huff\n",
        "Line" : 1054,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# CC: YCC->RGB  SAMP: h2v2 merged  IDCT: ifast  ENT: prog huff\n",
        "Line" : 1059,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# CC: RGB->Gray  SAMP: fullsize  FDCT: islow  ENT: huff\n",
        "Line" : 1064,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# CC: Gray->Gray  SAMP: fullsize  IDCT: islow  ENT: huff\n",
        "Line" : 1069,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# CC: Gray->RGB  SAMP: fullsize  IDCT: islow  ENT: huff\n",
        "Line" : 1074,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# CC: Gray->RGB565  SAMP: fullsize  IDCT: islow  ENT: huff\n",
        "Line" : 1080,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# CC: Gray->RGB565 (dithered)  SAMP: fullsize  IDCT: islow  ENT: huff\n",
        "Line" : 1085,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# CC: RGB->YCC  SAMP: fullsize smooth/h2v2 smooth  FDCT: islow\n\n# ENT: 2-pass huff\n",
        "Line" : 1091,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# CC: RGB->YCC  SAMP: fullsize/int  FDCT: float  ENT: prog huff\n",
        "Line" : 1098,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# CC: YCC->RGB  SAMP: fullsize/int  IDCT: float  ENT: prog huff\n",
        "Line" : 1103,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# CC: RGB->YCC  SAMP: fullsize/int  FDCT: ifast  ENT: prog huff\n",
        "Line" : 1109,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# CC: YCC->RGB  SAMP: fullsize/int  IDCT: ifast  ENT: prog huff\n",
        "Line" : 1114,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# CC: YCC->RGB  SAMP: fullsize/h2v2  FDCT: islow  ENT: arith\n",
        "Line" : 1120,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# CC: YCC->RGB  SAMP: fullsize  FDCT: islow  ENT: prog arith\n",
        "Line" : 1129,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# CC: RGB->YCC  SAMP: h2v2 merged  IDCT: ifast  ENT: arith\n",
        "Line" : 1137,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# 2/1--   CC: YCC->RGB  SAMP: h2v2 merged  IDCT: 16x16 islow  ENT: huff\n\n# 15/8--  CC: YCC->RGB  SAMP: h2v2 merged  IDCT: 15x15 islow  ENT: huff\n\n# 13/8--  CC: YCC->RGB  SAMP: h2v2 merged  IDCT: 13x13 islow  ENT: huff\n\n# 11/8--  CC: YCC->RGB  SAMP: h2v2 merged  IDCT: 11x11 islow  ENT: huff\n\n# 9/8--   CC: YCC->RGB  SAMP: h2v2 merged  IDCT: 9x9 islow  ENT: huff\n\n# 7/8--   CC: YCC->RGB  SAMP: h2v2 merged  IDCT: 7x7 islow/14x14 islow\n\n#         ENT: huff\n\n# 3/4--   CC: YCC->RGB  SAMP: h2v2 merged  IDCT: 6x6 islow/12x12 islow\n\n#         ENT: huff\n\n# 5/8--   CC: YCC->RGB  SAMP: h2v2 merged  IDCT: 5x5 islow/10x10 islow\n\n#         ENT: huff\n\n# 1/2--   CC: YCC->RGB  SAMP: h2v2 merged  IDCT: 4x4 islow/8x8 islow\n\n#         ENT: huff\n\n# 3/8--   CC: YCC->RGB  SAMP: h2v2 merged  IDCT: 3x3 islow/6x6 islow\n\n#         ENT: huff\n\n# 1/4--   CC: YCC->RGB  SAMP: h2v2 merged  IDCT: 2x2 islow/4x4 islow\n\n#         ENT: huff\n\n# 1/8--   CC: YCC->RGB  SAMP: h2v2 merged  IDCT: 1x1 islow/2x2 islow\n\n#         ENT: huff\n",
        "Line" : 1147,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# CC: YCC->RGB (dithered)  SAMP: h2v2 fancy  IDCT: islow  ENT: huff\n",
        "Line" : 1175,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# CC: YCC->RGB565  SAMP: h2v2 fancy  IDCT: islow  ENT: huff\n",
        "Line" : 1180,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# CC: YCC->RGB565 (dithered)  SAMP: h2v2 fancy  IDCT: islow  ENT: huff\n",
        "Line" : 1185,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# CC: YCC->RGB565  SAMP: h2v2 merged  IDCT: islow  ENT: huff\n",
        "Line" : 1190,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# CC: YCC->RGB565 (dithered)  SAMP: h2v2 merged  IDCT: islow  ENT: huff\n",
        "Line" : 1196,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# Partial decode tests.  These tests are designed to cover all of the\n\n# possible code paths in jpeg_skip_scanlines().\n",
        "Line" : 1202,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# Context rows: Yes  Intra-iMCU row: Yes  iMCU row prefetch: No   ENT: huff\n",
        "Line" : 1205,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# Context rows: Yes  Intra-iMCU row: No   iMCU row prefetch: Yes  ENT: arith\n",
        "Line" : 1210,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# Context rows: Yes  Intra-iMCU row: No   iMCU row prefetch: No   ENT: prog huff\n",
        "Line" : 1217,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# Context rows: Yes  Intra-iMCU row: No   iMCU row prefetch: No   ENT: arith\n",
        "Line" : 1226,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# Context rows: No   Intra-iMCU row: Yes  ENT: huff\n",
        "Line" : 1234,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# Context rows: No   Intra-iMCU row: No   ENT: prog huff\n",
        "Line" : 1242,
        "CharPositionInLine" : 2
      },
      "63" : {
        "Text" : "# Context rows: No   Intra-iMCU row: No   ENT: arith\n",
        "Line" : 1251,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "###############################################################################\n\n# INSTALLATION\n\n###############################################################################\n",
        "Line" : 1323,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 65
    },
    "cmakescripts/BuildPackages.cmake" : {
      "ObjectId" : "57f0672f47cc4cbf74e0777384b31c062ccd1c8a",
      "LastModified" : "2017-09-20T17:13:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is included from the top-level CMakeLists.txt.  We just store it\n\n# here to avoid cluttering up that file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# Linux RPM and DEB\n\n###############################################################################\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Re-set CMAKE_POSITION_INDEPENDENT_CODE so that the RPM spec file works\n\n# properly\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Linux\n",
        "Line" : 63,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "###############################################################################\n\n# Windows installer (NullSoft Installer)\n\n###############################################################################\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# WIN32\n",
        "Line" : 113,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "###############################################################################\n\n# Cygwin Package\n\n###############################################################################\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# CYGWIN\n",
        "Line" : 126,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "###############################################################################\n\n# Mac DMG\n\n###############################################################################\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# APPLE\n",
        "Line" : 158,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "###############################################################################\n\n# Generic\n\n###############################################################################\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "cmakescripts/GNUInstallDirs.cmake" : {
      "ObjectId" : "7c41196591245908c1cd33c86702b8e4351a4632",
      "LastModified" : "2019-04-10T19:57:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# GNUInstallDirs\n\n# --------------\n\n#\n\n# Define GNU standard installation directories\n\n#\n\n# Provides install directory variables as defined by the\n\n# `GNU Coding Standards`_.\n\n#\n\n# .. _`GNU Coding Standards`: https://www.gnu.org/prep/standards/html_node/Directory-Variables.html\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# Inclusion of this module defines the following variables:\n\n#\n\n# ``CMAKE_INSTALL_<dir>``\n\n#\n\n#   Destination for files of a given type.  This value may be passed to\n\n#   the ``DESTINATION`` options of :command:`install` commands for the\n\n#   corresponding file type.\n\n#\n\n# ``CMAKE_INSTALL_FULL_<dir>``\n\n#\n\n#   The absolute path generated from the corresponding ``CMAKE_INSTALL_<dir>``\n\n#   value.  If the value is not already an absolute path, an absolute path\n\n#   is constructed typically by prepending the value of the\n\n#   :variable:`CMAKE_INSTALL_PREFIX` variable.  However, there are some\n\n#   `special cases`_ as documented below.\n\n#\n\n# where ``<dir>`` is one of:\n\n#\n\n# ``BINDIR``\n\n#   user executables (``bin``)\n\n# ``SBINDIR``\n\n#   system admin executables (``sbin``)\n\n# ``LIBEXECDIR``\n\n#   program executables (``libexec``)\n\n# ``SYSCONFDIR``\n\n#   read-only single-machine data (``etc``)\n\n# ``SHAREDSTATEDIR``\n\n#   modifiable architecture-independent data (``com``)\n\n# ``LOCALSTATEDIR``\n\n#   modifiable single-machine data (``var``)\n\n# ``LIBDIR``\n\n#   object code libraries (``lib`` or ``lib64``\n\n#   or ``lib/<multiarch-tuple>`` on Debian)\n\n# ``INCLUDEDIR``\n\n#   C header files (``include``)\n\n# ``OLDINCLUDEDIR``\n\n#   C header files for non-gcc (``/usr/include``)\n\n# ``DATAROOTDIR``\n\n#   read-only architecture-independent data root (``share``)\n\n# ``DATADIR``\n\n#   read-only architecture-independent data (``DATAROOTDIR``)\n\n# ``INFODIR``\n\n#   info documentation (``DATAROOTDIR/info``)\n\n# ``LOCALEDIR``\n\n#   locale-dependent data (``DATAROOTDIR/locale``)\n\n# ``MANDIR``\n\n#   man documentation (``DATAROOTDIR/man``)\n\n# ``DOCDIR``\n\n#   documentation root (``DATAROOTDIR/doc/PROJECT_NAME``)\n\n#\n\n# If the includer does not define a value the above-shown default will be\n\n# used and the value will appear in the cache for editing by the user.\n\n#\n\n# Special Cases\n\n# ^^^^^^^^^^^^^\n\n#\n\n# The following values of :variable:`CMAKE_INSTALL_PREFIX` are special:\n\n#\n\n# ``/``\n\n#\n\n#   For ``<dir>`` other than the ``SYSCONFDIR`` and ``LOCALSTATEDIR``,\n\n#   the value of ``CMAKE_INSTALL_<dir>`` is prefixed with ``usr/`` if\n\n#   it is not user-specified as an absolute path.  For example, the\n\n#   ``INCLUDEDIR`` value ``include`` becomes ``usr/include``.\n\n#   This is required by the `GNU Coding Standards`_, which state:\n\n#\n\n#     When building the complete GNU system, the prefix will be empty\n\n#     and ``/usr`` will be a symbolic link to ``/``.\n\n#\n\n# ``/usr``\n\n#\n\n#   For ``<dir>`` equal to ``SYSCONFDIR`` or ``LOCALSTATEDIR``, the\n\n#   ``CMAKE_INSTALL_FULL_<dir>`` is computed by prepending just ``/``\n\n#   to the value of ``CMAKE_INSTALL_<dir>`` if it is not user-specified\n\n#   as an absolute path.  For example, the ``SYSCONFDIR`` value ``etc``\n\n#   becomes ``/etc``.  This is required by the `GNU Coding Standards`_.\n\n#\n\n# ``/opt/...``\n\n#\n\n#   For ``<dir>`` equal to ``SYSCONFDIR`` or ``LOCALSTATEDIR``, the\n\n#   ``CMAKE_INSTALL_FULL_<dir>`` is computed by *appending* the prefix\n\n#   to the value of ``CMAKE_INSTALL_<dir>`` if it is not user-specified\n\n#   as an absolute path.  For example, the ``SYSCONFDIR`` value ``etc``\n\n#   becomes ``/etc/opt/...``.  This is defined by the\n\n#   `Filesystem Hierarchy Standard`_.\n\n#\n\n# .. _`Filesystem Hierarchy Standard`: https://refspecs.linuxfoundation.org/FHS_3.0/fhs/index.html\n\n#\n\n# Macros\n\n# ^^^^^^\n\n#\n\n# .. command:: GNUInstallDirs_get_absolute_install_dir\n\n#\n\n#   ::\n\n#\n\n#     GNUInstallDirs_get_absolute_install_dir(absvar var)\n\n#\n\n#   Set the given variable ``absvar`` to the absolute path contained\n\n#   within the variable ``var``.  This is to allow the computation of an\n\n#   absolute path, accounting for all the special cases documented\n\n#   above.  While this macro is used to compute the various\n\n#   ``CMAKE_INSTALL_FULL_<dir>`` variables, it is exposed publicly to\n\n#   allow users who create additional path variables to also compute\n\n#   absolute paths where necessary, using the same logic.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2016, 2019 D. R. Commander\n\n# Copyright 2016 Dmitry Marakasov\n\n# Copyright 2016 Roger Leigh\n\n# Copyright 2015 Alex Turbov\n\n# Copyright 2014 Rolf Eike Beer\n\n# Copyright 2014 Daniele E. Domenichelli\n\n# Copyright 2013 Dimitri John Ledkov\n\n# Copyright 2011 Alex Neundorf\n\n# Copyright 2011 Eric NOULARD\n\n# Copyright 2011, 2013-2015 Kitware, Inc.\n\n# Copyright 2011 Nikita Krupen'ko\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Installation directories\n\n#\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If CMAKE_INSTALL_PREFIX changes and CMAKE_INSTALL_*DIR is still set to the\n\n# default value, then modify it accordingly.  This presumes that the default\n\n# value may change based on the prefix.\n",
        "Line" : 166,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Save for next run\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Override this default 'lib' with 'lib64' iff:\n\n#  - we are on Linux system but NOT cross-compiling\n\n#  - we are NOT on debian\n\n#  - we are on a 64 bits system\n\n# reason is: amd64 ABI: http://www.x86-64.org/documentation/abi.pdf\n\n# For Debian with multiarch, use 'lib/${CMAKE_LIBRARY_ARCHITECTURE}' if\n\n# CMAKE_LIBRARY_ARCHITECTURE is set (which contains e.g. \"i386-linux-gnu\"\n\n# and CMAKE_INSTALL_PREFIX is \"/usr\"\n\n# See http://wiki.debian.org/Multiarch\n",
        "Line" : 237,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# is this a debian system ?\n",
        "Line" : 248,
        "CharPositionInLine" : 38
      },
      "7" : {
        "Text" : "# not debian, rely on CMAKE_SIZEOF_VOID_P:\n",
        "Line" : 254,
        "CharPositionInLine" : 11
      },
      "8" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Values whose defaults are relative to DATAROOTDIR.  Store empty values in\n\n# the cache and store the defaults in local variables if the cache values are\n\n# not set explicitly.  This auto-updates the defaults as DATAROOTDIR changes.\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Handle the specific case of an empty CMAKE_INSTALL_DATAROOTDIR\n",
        "Line" : 353,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Handle special cases:\n\n# - CMAKE_INSTALL_PREFIX == /\n\n# - CMAKE_INSTALL_PREFIX == /usr\n\n# - CMAKE_INSTALL_PREFIX == /opt/...\n",
        "Line" : 362,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Result directories\n\n#\n",
        "Line" : 396,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "cmakescripts/testclean.cmake" : {
      "ObjectId" : "fc3fc25e965855fe18640bba2dc0f7f00cf90a7a",
      "LastModified" : "2019-04-10T19:57:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "java/CMakeLists.txt" : {
      "ObjectId" : "3d863bdd0b88176ae83b6583c335927b0a7b92e1",
      "LastModified" : "2019-04-10T19:57:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Allow the Java compiler flags to be set using an environment variable\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# UGLY HACK ALERT: If we don't do this, then UseJava.cmake will separate\n\n# class path members with a semicolon, which is interpreted as a command\n\n# separator by the MSYS shell.\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "md5/CMakeLists.txt" : {
      "ObjectId" : "526ef08ba77327b274c4c6c29489e0af7cd730a6",
      "LastModified" : "2019-04-10T19:57:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sharedlib/CMakeLists.txt" : {
      "ObjectId" : "a5c4e399fe12761e37faa533cc2ea90b8eab2705",
      "LastModified" : "2019-04-10T19:57:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Anything that must be linked against the shared C library on Windows must\n\n# be built in this subdirectory, because CMake doesn't allow us to override\n\n# the compiler flags for each build type except at directory scope.  Note\n\n# to CMake developers:  Add a COMPILE_FLAGS_<CONFIG> target property, or\n\n# better yet, provide a friendly way of configuring a Windows target to use the\n\n# static C library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build all configurations against shared C library\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# This tells CMake that the \"source\" files haven't been generated yet\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# The jsimd_*.c file is built using /MT, so this prevents a linker warning.\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "simd/CMakeLists.txt" : {
      "ObjectId" : "8dbd7f1ecbe459fc009c1d55c8e50357e91e5978",
      "LastModified" : "2019-04-10T19:57:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# x86[-64] (NASM)\n\n###############################################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Allow the location of the NASM executable to be specified using the ASM_NASM\n\n# environment variable.  This should happen automatically, but unfortunately\n\n# enable_language(ASM_NASM) doesn't parse the ASM_NASM environment variable\n\n# until after CMAKE_ASM_NASM_COMPILER has been populated with the results of\n\n# searching for NASM or YASM in the PATH.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The CMake Visual Studio generators do not work properly with the ASM_NASM\n\n# language, so we have to go rogue here and use a custom command like we\n\n# did in prior versions of libjpeg-turbo.  (This is why we can't have nice\n\n# things.)\n",
        "Line" : 166,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "###############################################################################\n\n# ARM (GAS)\n\n###############################################################################\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Test whether we need gas-preprocessor.pl\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###############################################################################\n\n# MIPS (GAS)\n\n###############################################################################\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###############################################################################\n\n# Loongson (Intrinsics)\n\n###############################################################################\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###############################################################################\n\n# PowerPC (Intrinsics)\n\n###############################################################################\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###############################################################################\n\n# None\n\n###############################################################################\n",
        "Line" : 366,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# CPU_TYPE\n",
        "Line" : 374,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 10
    }
  },
  "FileTypes" : {
    "CMAKE" : 8
  },
  "ElapsedTime" : 3029
}