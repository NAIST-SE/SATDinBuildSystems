{
  "Repository" : "24280160",
  "Revision" : "HEAD",
  "ObjectId" : "36f2584151e8f9e120ea336b7c208a9801bbeff5",
  "CommitTime" : "2017-11-14T05:11:52Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "52a6068c1c5ed877391682671476e23ab74e78f9",
      "LastModified" : "2017-11-13T01:25:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   Copyright 2017 Carlos O'Ryan\n\n#\n\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#   you may not use this file except in compliance with the License.\n\n#   You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n#   Unless required by applicable law or agreed to in writing, software\n\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#   See the License for the specific language governing permissions and\n\n#   limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Require C++14 for this project ...\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ... the author is paranoid.  Turn on all available warnings\n\n# and turn warnings into errors to stop the build if any warning is\n\n# emitted ...\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ... if set, enable code coverage builds for g++, and create a \"test_coverage\" target to collect the coverage using\n\n# lcov.  My attempts at using the gcovr cobertura output failed miserably, so I am sticking to what I know ...\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ... include the functions to compile proto files ...\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ... find the protobuf, grpc, and grpc++ libraries using pkg-config ...\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ... we need Boost >= 1.58 because Beast and Boost.Endian require them ...\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ... YAML-CPP is a library to parse YAML files, JayBeams uses such files for all runtime configuration ...\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ... Beast (https://github.com/boostorg/beast) is a library for writing HTTP clients and servers ...\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ... Gee-H (https://github.com/coryan/gee-h) is a client library for etcd ...\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ... we need the -I flags so we can find header files using the installed path for JayBeams headers ...\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Compile things into shared libraries, apparently it is easy to instruct cmake(1) to generate a static library even\n\n# if we only describe how to create a shared lib.\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ... the jb library unit tests, we setup the targets and dependencies further down using a loop ...\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "##\n\n## Capture configuration information in a series of variables, useful in benchmarks and tests\n\n##\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ... jb_gmock needs the googletest libraries ...\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# TODO(coryan) - what to do with these\n",
        "Line" : 488,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# ... determine if libraries are installed in the lib64 directory ...\n",
        "Line" : 491,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ... generate a pkg-config for Jaybeams ...\n",
        "Line" : 500,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#CONFIGURE_FILE(\n\n#        \"${CMAKE_CURRENT_SOURCE_DIR}/templates/pkg-config.pc.in\"\n\n#        \"${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}.pc\")\n",
        "Line" : 506,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# ... define the install rules ...\n",
        "Line" : 510,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#install(FILES \"${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}.pc\" DESTINATION lib/pkgconfig)\n",
        "Line" : 521,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# A helper function to wrap the common configuration for tests ...\n",
        "Line" : 526,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# ... turn on testing support in CMake ...\n",
        "Line" : 556,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# ... add the right libraries to all the unit tests, and also turn them into tests ...\n",
        "Line" : 564,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 24
    },
    "cmake/CodeCoverage.cmake" : {
      "ObjectId" : "5d84cacd03833d54d5a7afebc77ace4c99cdb99c",
      "LastModified" : "2017-11-12T04:26:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2012 - 2017, Lars Bilke\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without modification,\n\n# are permitted provided that the following conditions are met:\n\n#\n\n# 1. Redistributions of source code must retain the above copyright notice, this\n\n#    list of conditions and the following disclaimer.\n\n#\n\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n# 3. Neither the name of the copyright holder nor the names of its contributors\n\n#    may be used to endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n\n# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n\n# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n\n# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n\n# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# CHANGES:\n\n#\n\n# 2012-01-31, Lars Bilke\n\n# - Enable Code Coverage\n\n#\n\n# 2013-09-17, Joakim SÃ¶derberg\n\n# - Added support for Clang.\n\n# - Some additional usage instructions.\n\n#\n\n# 2016-02-03, Lars Bilke\n\n# - Refactored functions to use named parameters\n\n#\n\n# 2017-06-02, Lars Bilke\n\n# - Merged with modified version from github.com/ufz/ogs\n\n#\n\n#\n\n# USAGE:\n\n#\n\n# 1. Copy this file into your cmake modules path.\n\n#\n\n# 2. Add the following line to your CMakeLists.txt:\n\n#      include(CodeCoverage)\n\n#\n\n# 3. Append necessary compiler flags:\n\n#      APPEND_COVERAGE_COMPILER_FLAGS()\n\n#\n\n# 4. If you need to exclude additional directories from the report, specify them\n\n#    using the COVERAGE_EXCLUDES variable before calling SETUP_TARGET_FOR_COVERAGE.\n\n#    Example:\n\n#      set(COVERAGE_EXCLUDES 'dir1/*' 'dir2/*')\n\n#\n\n# 5. Use the functions described below to create a custom make target which\n\n#    runs your test executable and produces a code coverage report.\n\n#\n\n# 6. Build a Debug build:\n\n#      cmake -DCMAKE_BUILD_TYPE=Debug ..\n\n#      make\n\n#      make my_coverage_target\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check prereqs\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NOT GCOV_PATH\n",
        "Line" : 80,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# NOT CMAKE_BUILD_TYPE STREQUAL \"Debug\"\n",
        "Line" : 117,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Defines a target for running and collection code coverage information\n\n# Builds dependencies, runs the given executable and outputs reports.\n\n# NOTE! The executable should always have a ZERO as exit code otherwise\n\n# the coverage generation will not complete.\n\n#\n\n# SETUP_TARGET_FOR_COVERAGE(\n\n#     NAME testrunner_coverage                    # New target name\n\n#     EXECUTABLE testrunner -j ${PROCESSOR_COUNT} # Executable in PROJECT_BINARY_DIR\n\n#     DEPENDENCIES testrunner                     # Dependencies to build first\n\n# )\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# NOT LCOV_PATH\n",
        "Line" : 144,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# NOT GENHTML_PATH\n",
        "Line" : 148,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# Setup target\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Cleanup lcov\n",
        "Line" : 153,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# Run tests\n",
        "Line" : 156,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "# Capturing lcov counters and generating report\n",
        "Line" : 159,
        "CharPositionInLine" : 12
      },
      "11" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE\n",
        "Line" : 176,
        "CharPositionInLine" : 14
      },
      "13" : {
        "Text" : "# Defines a target for running and collection code coverage information\n\n# Builds dependencies, runs the given executable and outputs reports.\n\n# NOTE! The executable should always have a ZERO as exit code otherwise\n\n# the coverage generation will not complete.\n\n#\n\n# SETUP_TARGET_FOR_COVERAGE_COBERTURA(\n\n#     NAME ctest_coverage                    # New target name\n\n#     EXECUTABLE ctest -j ${PROCESSOR_COUNT} # Executable in PROJECT_BINARY_DIR\n\n#     DEPENDENCIES executable_target         # Dependencies to build first\n\n# )\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# NOT SIMPLE_PYTHON_EXECUTABLE\n",
        "Line" : 197,
        "CharPositionInLine" : 12
      },
      "15" : {
        "Text" : "# NOT GCOVR_PATH\n",
        "Line" : 201,
        "CharPositionInLine" : 12
      },
      "16" : {
        "Text" : "# Combine excludes to several -e arguments\n",
        "Line" : 203,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Run tests\n",
        "Line" : 211,
        "CharPositionInLine" : 12
      },
      "18" : {
        "Text" : "# Running gcovr\n",
        "Line" : 214,
        "CharPositionInLine" : 12
      },
      "19" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 222,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE_COBERTURA\n",
        "Line" : 228,
        "CharPositionInLine" : 14
      },
      "21" : {
        "Text" : "# APPEND_COVERAGE_COMPILER_FLAGS\n",
        "Line" : 234,
        "CharPositionInLine" : 14
      },
      "CommentCount" : 22
    },
    "cmake/FindCLFFT.cmake" : {
      "ObjectId" : "f6511821ebba80cb7706d05c085324c68a0b1f1e",
      "LastModified" : "2017-11-11T20:09:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   Copyright 2017 Carlos O'Ryan\n\n#\n\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#   you may not use this file except in compliance with the License.\n\n#   You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n#   Unless required by applicable law or agreed to in writing, software\n\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#   See the License for the specific language governing permissions and\n\n#   limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake/FindFFTW.cmake" : {
      "ObjectId" : "42047c52b383383d5ff306dbf6edf48de65598f3",
      "LastModified" : "2017-11-11T19:10:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   Copyright 2017 Carlos O'Ryan\n\n#\n\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#   you may not use this file except in compliance with the License.\n\n#   You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n#   Unless required by applicable law or agreed to in writing, software\n\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#   See the License for the specific language governing permissions and\n\n#   limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake/FindSanitizers.cmake" : {
      "ObjectId" : "323b046ad7c0287b56c92a6670e8ff8416d92c6b",
      "LastModified" : "2017-11-12T04:27:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   Copyright 2017 Carlos O'Ryan\n\n#\n\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#   you may not use this file except in compliance with the License.\n\n#   You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n#   Unless required by applicable law or agreed to in writing, software\n\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#   See the License for the specific language governing permissions and\n\n#   limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "jb/clfft/CMakeLists.txt" : {
      "ObjectId" : "fb55638f0037c0ddbb27d9a95e979887f265b65c",
      "LastModified" : "2017-11-12T06:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   Copyright 2017 Carlos O'Ryan\n\n#\n\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#   you may not use this file except in compliance with the License.\n\n#   You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n#   Unless required by applicable law or agreed to in writing, software\n\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#   See the License for the specific language governing permissions and\n\n#   limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ... included from the top-level CMakeLists.txt ...\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clFFT uses deprecated OpenCL functions in its headers, which results\n\n# in \"deprecated declarations\" warnings.  We need to silence them to\n\n# support -Werror\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "jb/fftw/CMakeLists.txt" : {
      "ObjectId" : "a452267267ba4eba2e4e33d47d90d96fa5d6b074",
      "LastModified" : "2017-11-12T06:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   Copyright 2017 Carlos O'Ryan\n\n#\n\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#   you may not use this file except in compliance with the License.\n\n#   You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n#   Unless required by applicable law or agreed to in writing, software\n\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#   See the License for the specific language governing permissions and\n\n#   limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ... included from the top-level CMakeLists.txt ...\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "jb/opencl/CMakeLists.txt" : {
      "ObjectId" : "e1e95dd3f129615d0b44d0f1e3ac08e811bce20a",
      "LastModified" : "2017-11-12T07:35:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   Copyright 2017 Carlos O'Ryan\n\n#\n\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#   you may not use this file except in compliance with the License.\n\n#   You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n#   Unless required by applicable law or agreed to in writing, software\n\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#   See the License for the specific language governing permissions and\n\n#   limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ... included from the top-level CMakeLists.txt ...\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Boost.Compute uses attributes where it should not, which results in\n\n# \"ignored attributes\" warnings, we need to silence them to support\n\n# -Werror\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "jb/tde/CMakeLists.txt" : {
      "ObjectId" : "e841a42839fc5eef3de9e4d65cc481266bcf20ef",
      "LastModified" : "2017-11-12T06:28:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   Copyright 2017 Carlos O'Ryan\n\n#\n\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#   you may not use this file except in compliance with the License.\n\n#   You may obtain a copy of the License at\n\n#\n\n#   http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n#   Unless required by applicable law or agreed to in writing, software\n\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#   See the License for the specific language governing permissions and\n\n#   limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ... included from the top-level CMakeLists.txt ...\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 9
  },
  "ElapsedTime" : 895
}