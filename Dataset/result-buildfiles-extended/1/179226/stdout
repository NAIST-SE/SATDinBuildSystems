{
  "Repository" : "179226",
  "Revision" : "HEAD",
  "ObjectId" : "71bb9a07d5b5a6fe4d7803b08eaa2a0913e1b69e",
  "CommitTime" : "2019-01-02T13:39:15Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "d6b5b527171c9c37a52daa9bf294d282f99da70c",
      "LastModified" : "2019-01-02T13:39:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Version setup\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set compiler flags\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# EMBER_SOURCEMEDIAREPODIR points to an optional media repo path, i.e. a Subversion checkout of the media repo\n\n# found at https://svn.worldforge.org:886/svn/media/trunk/.\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# EMBER_PROCESSEDMEDIAREPODIR points to an optional \"processed\" media path, i.e. a directory where the source media\n\n# found at EMBER_SOURCEMEDIAREPODIR has been processed using the \"scripts/make_dist_media.py\" script.\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# We've been getting issues with memory corruption in boost when building with GCC -O2 flags, and it\n\n# seems to be related to the asio small memory block recycling code. We'll thus disable it to avoid the\n\n# crashes\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Meta data\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Add include directories of both the current source directory as well as the one containing the bindings. This allows for easy includes in the pkg-files.\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#TODO: check for binreloc?\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Required to find glew.h header. Backtrace: OgreSetup.cpp ==> OgreGLContext.h ==> OgreGLPrerequisites.h ==> <GL/glew.h>\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#On UNIX with PKG_CONFIG we can be more assertive of the paths than the FindOGRE.cmake macro is, so lets\n\n#get the correct paths from pkg-config.\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#Check if any library ends with \"_d\", which indicates that OGRE is a debug build.\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#On other systems we need to rely on the FindOGRE.cmake macros finding things in correct places.\n",
        "Line" : 161,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#It's not enough to check for the _DBG and _REL keys since they can both be set. We also need to check if the library ends with \"_d.so\" to\n\n#determine if it's built for debug or release.\n",
        "Line" : 168,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#On OSX we'll just use the tolua++ which Hammer provides\n",
        "Line" : 186,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "#Allow Lua version to be set from outside, since some system might have CEGUI and tolua++ compiled to 5.2 or 5.3\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Lua should be before CEGUI_LuaScriptModule\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Try macports version if frameworks are not available\n",
        "Line" : 206,
        "CharPositionInLine" : 29
      },
      "17" : {
        "Text" : "#The default FindBullet.cmake macro doesn't look in pkg-config first, so we'll do that ourselves.\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#Remove SoftBody and Dynamics since we're not using those\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#Check for libunwind, which is optional and if present will allow for the StackChecker feature to be enabled.\n\n#This allows for a developer to get some insight into why some frames take too long.\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#We'll use xmllint for validating schemas of some of our xml files.\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#Only build tests if the \"check\" target is used.\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# man files\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Doxygen support, exports a \"docs\" target.\n",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Packaging\n",
        "Line" : 424,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#set(CPACK_INSTALL_SCRIPT \"sh ${CMAKE_SOURCE_DIR}/support/generate-ChangeLog.sh ${CMAKE_SOURCE_DIR} ${CPACK_PACKAGE_INSTALL_DIRECTORY} 8bd480b053190ffde2afe33af66f484953036f5a\")\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# no hidden files\n",
        "Line" : 440,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 27
    },
    "cmake/FindALUT.cmake" : {
      "ObjectId" : "48d062d70b145e509b1453d70ec2c5f23ca22a12",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find the OpenAL ALUT library\n\n#\n\n# Users may optionally supply:\n\n#  ALUT_ROOT_DIR - a prefix to start searching.\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  ALUT_INCLUDE_DIR\n\n#  ALUT_LIBRARY\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  ALUT_FOUND\n\n#  ALUT_INCLUDE_DIRS\n\n#  ALUT_LIBRARIES\n\n#  ALUT_WORKAROUND_INCLUDE_DIRS - add these to your include path with\n\n#   include_directories(${ALUT_WORKAROUND_INCLUDE_DIRS} ${ALUT_INCLUDE_DIRS})\n\n#   so you can always #include <AL/al.h> and #include <AL/alut.h> even on\n\n#   Mac where the paths might differ.\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Share search paths with OpenAL\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Configure ALUT\n\n###\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Prereq: OpenAL\n\n###\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# On Mac OS X, the ALUT headers were in the OpenAL framework until 10.4.7\n\n# If we found ALUT headers elsewhere, it's probably freealut which may\n\n# define the same symbols as the library in the framework (?)\n\n# so we might want to save/restore the CMake variable that controls searching\n\n# in frameworks\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set xxx_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# OpenAL is in a framework - need a workaround\n",
        "Line" : 114,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# ALUT is in the OpenAL framework - need a workaround\n",
        "Line" : 122,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 8
    },
    "cmake/FindCEGUI.cmake" : {
      "ObjectId" : "c904039be265d472ca0ceb038da0f7596daeb1b7",
      "LastModified" : "2016-12-20T22:32:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# FindCEGUI\n\n#\n\n# Locate CEGUI LIBRARIES\n\n#\n\n# This module defines\n\n#    CEGUI_FOUND, if false, do not try to link to CEGUI\n\n#    CEGUI_INCLUDE_DIR, where to find headers.\n\n#    CEGUI_LIBRARIES, the LIBRARIES to link against\n\n#    CEGUI_BINARY_REL - location of the main CEGUI binary (win32 non-static only, release)\n\n#    CEGUI_BINARY_DBG - location of the main CEGUI binaries (win32 non-static only, debug)\n\n#\n\n#\n\n#         Modules :\n\n#    CEGUI_${COMPONENT}_FOUND - ${COMPONENT} is available\n\n#    CEGUI_${COMPONENT}_INCLUDE_DIRS - additional include directories for ${COMPONENT}\n\n#    CEGUI_${COMPONENT}_LIBRARIES - link these to use ${COMPONENT}\n\n#    CEGUI_${COMPONENT}_BINARY_REL - location of the component binary (win32 non-static only, release)\n\n#    CEGUI_${COMPONENT}_BINARY_DBG - location of the component binary (win32 non-static only, debug)\n\n#\n\n# VERSION 0.7.X:\n\n#        WindowsRenderer:\n\n#                Falagard\n\n#        Renderer:\n\n#                Direct3D9Renderer Direct3D10Renderer Direct3D11Renderer IrrlichtRenderer NullRenderer OgreRenderer OpenGLRenderer\n\n#        ImageCodec:\n\n#                CoronaImageCodec DevILImageCodec FreeImageImageCodec SILLYImageCodec STBImageCodec TGAImageCodec\n\n#        Parser:\n\n#                ExpatParser LibxmlParser RapidXMLParser TinyXMLParser XercesParser)\n\n#        Script:\n\n#                LuaScriptModule toluapp\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# VERSION 0.8.X:\n\n#        WindowsRenderer:\n\n#                CoreWindowRendererSet\n\n#        Renderer:\n\n#                Direct3D9Renderer Direct3D10Renderer Direct3D11Renderer IrrlichtRenderer NullRenderer OgreRenderer OpenGLRenderer OpenGL3Renderer OpenGLESRenderer\n\n#        ImageCodec:\n\n#                CoronaImageCodec DevILImageCodec FreeImageImageCodec SILLYImageCodec STBImageCodec TGAImageCodec PVRImageCodec\n\n#        Parser:\n\n#                ExpatParser LibXMLParser RapidXMLParser TinyXMLParser XercesParser)\n\n#        Script:\n\n#                LuaScriptModule\n\n#\n\n# author: Guillaume Smaha\n\n#\n\n# People have asked us to include a FindCEGUI that is high quality that they will\n\n# be able to copy and use to find CEGUI, so we have finally done that.\n\n#\n\n# If you have improvements for this scripts, please consider sending them upstream.\n\n# See https://bitbucket.org/cegui/cegui\n\n################################################################################\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\n\n# Get the value of a preprocessor entry\n\n################################################################################\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################################################################################\n\n# Check if exist a preprocessor entry\n\n################################################################################\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "################################################################################\n\n# Replace the value of a preprocessor entry\n\n################################################################################\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "################################################################################\n\n# Define the value of preprocessor entry\n\n################################################################################\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "################################################################################\n\n# Begin processing of package\n\n################################################################################\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "################################################################################\n\n# Display a status message unless FIND_QUIETLY is set\n\n################################################################################\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "################################################################################\n\n# Get environment variable, define it as ENV_$var and make sure backslashes are converted to forward slashes\n\n################################################################################\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# replace won't work if var is blank\n",
        "Line" : 141,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "################################################################################\n\n# Construct search paths for includes and libraries from a PREFIX_PATH\n\n################################################################################\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "################################################################################\n\n# clear cache variables if a certain variable changed\n\n################################################################################\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# test against internal check variable\n\n# HACK: Apparently, adding a variable to the cache cleans up the list\n\n# a bit. We need to also remove any empty strings from the list, but\n\n# at the same time ensure that we are actually dealing with a list.\n",
        "Line" : 171,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "################################################################################\n\n# Try to get some hints from pkg-config, if available\n\n################################################################################\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "################################################################################\n\n# Couple a set of release AND debug libraries (or frameworks)\n\n################################################################################\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "################################################################################\n\n# Generate debug names from given release names\n\n################################################################################\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "################################################################################\n\n# Add the parent dir from DIR to VAR\n\n################################################################################\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "################################################################################\n\n# Do the final processing for the package find.\n\n################################################################################\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# skip if already processed during this run\n",
        "Line" : 233,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "#########################################################\n\n# Find cegui modules\n\n#########################################################\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#########################################################\n\n# register a module\n\n#########################################################\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#########################################################\n\n# Main\n\n#########################################################\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Register var to check change on base\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Get path, convert backslashes as ${ENV_${var}}\n",
        "Line" : 383,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Determine whether to search for a dynamic or static build\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# construct search paths from environmental hints and\n\n# OS specific guesses\n",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Construct search paths for includes and libraries\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# try to locate CEGUI via pkg-config\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# locate CEGUI include files\n",
        "Line" : 441,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# determine CEGUI version\n",
        "Line" : 448,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# Starting CEGUI 0.8, the headers are in the CEGUI subdirectory, and we must include\n\n# its parent rather than directly the subdirectory. Otherwise we'll get compiler errors.\n",
        "Line" : 492,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# we basically overwrite CEGUI_INCLUDE_DIR so that it contains only the parent directory.\n",
        "Line" : 496,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# find binaries\n",
        "Line" : 514,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Base\n",
        "Line" : 527,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# WindowsRenderer\n",
        "Line" : 530,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# Renderer\n",
        "Line" : 533,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# ImageCodec\n",
        "Line" : 545,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# Parser\n",
        "Line" : 554,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Script\n",
        "Line" : 561,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# WindowsRenderer\n",
        "Line" : 566,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# Renderer\n",
        "Line" : 569,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# ImageCodec\n",
        "Line" : 579,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# Parser\n",
        "Line" : 587,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# Script\n",
        "Line" : 594,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# Register var to check change on modules\n",
        "Line" : 607,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Find modules\n",
        "Line" : 619,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Find modules\n",
        "Line" : 628,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#Check change on modules\n",
        "Line" : 634,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "cmake/FindOGRE.cmake" : {
      "ObjectId" : "93c8378b8f920a86b980d9c283ed9c2ea7b84310",
      "LastModified" : "2017-08-23T18:35:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find OGRE\n\n# If you have multiple versions of Ogre installed, use the CMake or\n\n# the environment variable OGRE_HOME to point to the path where the\n\n# desired Ogre version can be found.\n\n# By default this script will look for a dynamic Ogre build. If you\n\n# need to link against static Ogre libraries, set the CMake variable\n\n# OGRE_STATIC to TRUE.\n\n#\n\n# Once done, this will define\n\n#\n\n#  OGRE_FOUND - system has OGRE\n\n#  OGRE_INCLUDE_DIRS - the OGRE include directories \n\n#  OGRE_LIBRARIES - link these to use the OGRE core\n\n#  OGRE_BINARY_REL - location of the main Ogre binary (win32 non-static only, release)\n\n#  OGRE_BINARY_DBG - location of the main Ogre binaries (win32 non-static only, debug)\n\n#\n\n# Additionally this script searches for the following optional\n\n# parts of the Ogre package:\n\n#  Plugin_BSPSceneManager, Plugin_CgProgramManager,\n\n#  Plugin_OctreeSceneManager, Plugin_OctreeZone,\n\n#  Plugin_ParticleFX, Plugin_PCZSceneManager,\n\n#  RenderSystem_GL, RenderSystem_GL3Plus,\n\n#  RenderSystem_GLES, RenderSystem_GLES2,\n\n#  RenderSystem_Direct3D9, RenderSystem_Direct3D11\n\n#  Paging, Terrain, Volume, Overlay, MeshLodGenerator, HLMS\n\n#\n\n# For each of these components, the following variables are defined:\n\n#\n\n#  OGRE_${COMPONENT}_FOUND - ${COMPONENT} is available\n\n#  OGRE_${COMPONENT}_INCLUDE_DIRS - additional include directories for ${COMPONENT}\n\n#  OGRE_${COMPONENT}_LIBRARIES - link these to use ${COMPONENT}\n\n#  OGRE_${COMPONENT}_BINARY_REL - location of the component binary (win32 non-static only, release)\n\n#  OGRE_${COMPONENT}_BINARY_DBG - location of the component binary (win32 non-static only, debug)\n\n#\n\n# Finally, the following variables are defined:\n\n#\n\n#  OGRE_PLUGIN_DIR_REL - The directory where the release versions of\n\n#       the OGRE plugins are located\n\n#  OGRE_PLUGIN_DIR_DBG - The directory where the debug versions of\n\n#       the OGRE plugins are located\n\n#  OGRE_MEDIA_DIR - The directory where the OGRE sample media is\n\n#       located, if available\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get path, convert backslashes as ${ENV_${var}}\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Determine whether to search for a dynamic or static build\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# construct search paths from environmental hints and\n\n# OS specific guesses\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If both OGRE_BUILD and OGRE_SOURCE are set, prepare to find Ogre in a build dir\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# redo search if any of the environmental hints changed\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# try to locate Ogre via pkg-config\n",
        "Line" : 169,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Set the framework search path for OS X\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# locate Ogre include files\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# determine Ogre version\n",
        "Line" : 195,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# determine configuration settings\n",
        "Line" : 204,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# If working from source rather than SDK, add samples include\n",
        "Line" : 251,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# look for required Ogre dependencies in case of static build and/or threading\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# find binaries\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#########################################################\n\n# Find Ogre components\n\n#########################################################\n",
        "Line" : 377,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# find binaries\n",
        "Line" : 403,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# look for Paging component\n",
        "Line" : 415,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# look for Terrain component\n",
        "Line" : 417,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# look for Property component\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# look for RTShaderSystem component\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# look for Volume component\n",
        "Line" : 423,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# look for Overlay component\n",
        "Line" : 425,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# look for MeshLodGenerator component\n",
        "Line" : 427,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# look for HLMS component\n",
        "Line" : 429,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# look for Bites component\n",
        "Line" : 431,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#########################################################\n\n# Find Ogre plugins\n\n#########################################################\n",
        "Line" : 434,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# On Unix, the plugins might have no prefix\n",
        "Line" : 438,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# strip RenderSystem_ or Plugin_ prefix from plugin name\n",
        "Line" : 444,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# header files for plugins are not usually needed, but find them anyway if they are present\n",
        "Line" : 448,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# find link libraries for plugins\n",
        "Line" : 455,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# look for plugin dirs\n",
        "Line" : 475,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# find binaries\n",
        "Line" : 501,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# check if dependencies for plugins are met\n",
        "Line" : 531,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# look for the media directory\n",
        "Line" : 578,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 35
    },
    "cmake/FindPkgMacros.cmake" : {
      "ObjectId" : "59686232ab1b757ffd7cfd8d027a500b52a5cb33",
      "LastModified" : "2016-12-20T22:32:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##################################################################\n\n# Provides some common functionality for the FindPackage modules\n\n##################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Begin processing of package\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Display a status message unless FIND_QUIETLY is set\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get environment variable, define it as ENV_$var and make sure backslashes are converted to forward slashes\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# replace won't work if var is blank\n",
        "Line" : 31,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# Construct search paths for includes and libraries from a PREFIX_PATH\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# clear cache variables if a certain variable changed\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# test against internal check variable\n\n# HACK: Apparently, adding a variable to the cache cleans up the list\n\n# a bit. We need to also remove any empty strings from the list, but\n\n# at the same time ensure that we are actually dealing with a list.\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Try to get some hints from pkg-config, if available\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Couple a set of release AND debug libraries (or frameworks)\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Generate debug names from given release names\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Add the parent dir from DIR to VAR \n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Do the final processing for the package find.\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# skip if already processed during this run\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Slightly customised framework finder\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# These could be arrays of paths, add each individually to the search paths\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 17
    },
    "cmake/FindSDL2.cmake" : {
      "ObjectId" : "236d6b4b9ceea2f12bcc81ca6f66e3649f5460cf",
      "LastModified" : "2016-12-20T22:32:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate SDL2 library\n\n# This module defines\n\n# SDL2_LIBRARY, the name of the library to link against\n\n# SDL2_FOUND, if false, do not try to link to SDL2\n\n# SDL2_INCLUDE_DIR, where to find SDL.h\n\n#\n\n# This module responds to the the flag:\n\n# SDL2_BUILDING_LIBRARY\n\n# If this is defined, then no SDL2main will be linked in because\n\n# only applications need main().\n\n# Otherwise, it is assumed you are building an application and this\n\n# module will attempt to locate and set the the proper link flags\n\n# as part of the returned SDL2_LIBRARY variable.\n\n#\n\n# Don't forget to include SDLmain.h and SDLmain.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDL2main which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL2 library\n\n# (SDL2.dll, libsdl2.so, SDL2.framework, etc).\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2DIR\n\n# used in building SDL2.\n\n# l.e.galup  9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL guidelines.\n\n# Added a search for SDL2main which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL convention\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 73,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 74,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 75,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDL2main. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDL2main for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# SDL2 may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MinGW needs an additional library, mwindows\n\n# It's total link flags should look like -lmingw32 -lSDL2main -lSDL2 -lmwindows\n\n# (Actually on second look, I think it only needs one of the m* libraries.)\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# For SDL2main\n",
        "Line" : 126,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 133,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 143,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# For MinGW library\n",
        "Line" : 150,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 155,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 157,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 14
    },
    "cmake/FindTolua++.cmake" : {
      "ObjectId" : "04988712b204ca8c6b69400ff4718db42474a60a",
      "LastModified" : "2017-08-23T18:35:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the tolua++\n\n# Once done this will define\n\n#\n\n#  TOLUA++_FOUND - system has tolua++\n\n#  TOLUA++_APP - the tolua++ program\n\n#  TOLUA++_INLUDE_DIR - the tolua++ include directory\n\n#  TOLUA++_LIBRARY - the tolua++ library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2011, Pali Rohár <pali.rohar@gmail.com>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/PreprocessorUtils.cmake" : {
      "ObjectId" : "38462a98d42c08688901712076b543757043094e",
      "LastModified" : "2016-12-20T22:32:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/bindings/lua/CMakeLists.txt" : {
      "ObjectId" : "89e6e095d82f5a1acf3b4615248e8bbc75069708",
      "LastModified" : "2016-12-20T22:32:46Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/components/cegui/CMakeLists.txt" : {
      "ObjectId" : "1212d0ddc69e21f285ebf04a848176eb8bdabce6",
      "LastModified" : "2017-12-04T13:38:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/components/entitymapping/CMakeLists.txt" : {
      "ObjectId" : "4233beb8e2dc75121a155e975c185cfc0e431eb9",
      "LastModified" : "2018-08-16T20:36:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/components/lua/CMakeLists.txt" : {
      "ObjectId" : "d85a61cd04438bab1a379e05730a8a04fba8d379",
      "LastModified" : "2017-12-04T13:38:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/components/navigation/CMakeLists.txt" : {
      "ObjectId" : "a2cdd6cadf64f35173372806e900241cff6cd4f8",
      "LastModified" : "2017-12-04T13:38:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/components/navigation/external/RecastDetour/Detour/CMakeLists.txt" : {
      "ObjectId" : "ace4a1834837f24ab0d0b66c0e6cafee3c491d0c",
      "LastModified" : "2016-12-20T22:32:46Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/components/navigation/external/RecastDetour/DetourTileCache/CMakeLists.txt" : {
      "ObjectId" : "a3fedcd648dfbd4aa67b34f54225e2f350d68440",
      "LastModified" : "2016-12-20T22:32:46Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/components/navigation/external/RecastDetour/Recast/CMakeLists.txt" : {
      "ObjectId" : "25bb90a59f2e1991e4183564989714cd07566411",
      "LastModified" : "2016-12-20T22:32:46Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/components/ogre/CMakeLists.txt" : {
      "ObjectId" : "082422907558ee423a565006baf3747c3e54ff8c",
      "LastModified" : "2018-08-16T20:36:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/components/ogre/environment/caelum/CMakeLists.txt" : {
      "ObjectId" : "bcb0c21a8637b350f8b3ff1c02ce0460448be4b6",
      "LastModified" : "2016-12-20T22:32:46Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/components/ogre/environment/hydrax/CMakeLists.txt" : {
      "ObjectId" : "05e671b31de7a74d80684035b8b1f9cafe4ed62e",
      "LastModified" : "2016-12-20T22:32:46Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/components/ogre/environment/meshtree/CMakeLists.txt" : {
      "ObjectId" : "24d81d7fec127565e65c9bc94798f2c2517e94c3",
      "LastModified" : "2016-12-20T22:32:46Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/components/ogre/environment/pagedgeometry/CMakeLists.txt" : {
      "ObjectId" : "08cd55aeff25e90bf727d3c49bef98bda237328e",
      "LastModified" : "2017-12-04T13:38:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/components/terrain/CMakeLists.txt" : {
      "ObjectId" : "a79f56da9bf7cfebb054e744e0ca68dc644190de",
      "LastModified" : "2016-12-20T22:32:46Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/domain/CMakeLists.txt" : {
      "ObjectId" : "47829c00c9e78529e1387c8f4efedbc0eaae3815",
      "LastModified" : "2018-09-01T18:21:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/framework/CMakeLists.txt" : {
      "ObjectId" : "90252193a80b7933275855db032f3500e31c3464",
      "LastModified" : "2018-09-01T18:21:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/main/CMakeLists.txt" : {
      "ObjectId" : "2f303928cae8adcb6c201fcbb99c74a9ffc23aab",
      "LastModified" : "2018-09-01T18:21:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/services/CMakeLists.txt" : {
      "ObjectId" : "ce2e21965c6ba5d6a9bd9d5945752b991d51c7ba",
      "LastModified" : "2018-09-01T18:21:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "a75698c16865776a86e5cb79af7c2df6e464200f",
      "LastModified" : "2018-09-01T18:21:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#    add_executable(TestTerrain TestTerrain.cpp)\n\n#    target_compile_definitions(TestTerrain PUBLIC -DLOG_TASKS)\n\n#    target_link_libraries(TestTerrain ${CPPUNIT_LIBRARIES} ${WF_LIBRARIES} emberogre terrain caelum pagedgeometry entitymapping lua services framework)\n\n#    target_include_directories(TestTerrain PUBLIC ${CPPUNIT_INCLUDE_DIRS})\n\n#    add_test(NAME TestTerrain COMMAND TestTerrain)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 27
  },
  "ElapsedTime" : 2603
}