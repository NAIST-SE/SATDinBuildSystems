{
  "Repository" : "8580389",
  "Revision" : "HEAD",
  "ObjectId" : "bf0eb4703d31faabddb297e8451fb34f38b7cb61",
  "CommitTime" : "2019-04-16T13:31:58Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "68e0a93bc024e9a35b8316128e484c26d39b2f62",
      "LastModified" : "2018-08-30T11:24:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this line has to appear before 'PROJECT' in order to be able to disable incremental linking\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Enable MACOSX_RPATH by default.\n",
        "Line" : 13,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# SET(CMAKE_BUILD_TYPE \"Debug\")\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#MESSAGE(\"CMAKE_CXX_FLAGS_DEBUG=\"+${CMAKE_CXX_FLAGS_DEBUG})\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#statically linking VC++ isn't supported for WindowsPhone/WindowsStore\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#SET(CMAKE_EXE_LINKER_FLAGS_INIT    \"/STACK:10000000 /INCREMENTAL:NO\")\n\n#SET(CMAKE_EXE_LINKER_FLAGS    \"/STACK:10000000 /INCREMENTAL:NO\")\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#MESSAGE(\"MSVC_INCREMENTAL_YES_FLAG\"+${MSVC_INCREMENTAL_YES_FLAG})\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#MESSAGE(\"MSVC_INCREMENTAL_DEFAULT\"+${MSVC_INCREMENTAL_DEFAULT})\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#We statically link to reduce dependancies\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Disable RTTI\n",
        "Line" : 161,
        "CharPositionInLine" : 69
      },
      "10" : {
        "Text" : "# GCC, Clang\n",
        "Line" : 243,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# This is the shortcut to finding GLU, GLUT and OpenGL if they are properly installed on your system\n\n# This should be the case.\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#FIND_PACKAGE(GLU)\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Optional Python configuration\n\n# Will not probe environment for Python configuration (which can abort the\n\n# build process) unless you explicitly turn on BUILD_PYBULLET.\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# first find the python interpreter\n",
        "Line" : 321,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# python library should exactly match that of the interpreter\n\n# the following can result in fatal error if you don't have the right python configuration\n",
        "Line" : 323,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "#include(FindNumPy)\n",
        "Line" : 342,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#unset(BUILD_OPENGL3_DEMOS CACHE)\n",
        "Line" : 384,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "#by default, don't enable the 'INSTALL' option for Xcode and MSVC projectfiles\n",
        "Line" : 431,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#INSTALL of other files requires CMake 2.6\n",
        "Line" : 438,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "## the following are directories where stuff will be installed to\n",
        "Line" : 447,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 21
    },
    "Extras/BulletRobotics/CMakeLists.txt" : {
      "ObjectId" : "2fa6c49350c2784e63f962fc40480f8b075a550a",
      "LastModified" : "2019-01-23T17:40:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Extras/BulletRobotics/bullet_robotics.pc.cmake" : {
      "ObjectId" : "8a4577fc04eebf7fdf9ddb3a1ea84b42eb3b8b64",
      "LastModified" : "2019-01-23T17:40:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Extras/CMakeLists.txt" : {
      "ObjectId" : "6b35357a3afd26d983bc77f3da31e2e9aed52026",
      "LastModified" : "2019-01-23T17:40:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Maya Dynamica plugin is moved to http://dynamica.googlecode.com\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#IF (USE_GLUT AND GLUT_FOUND)\n\n#\tSUBDIRS (glui)\n\n#ENDIF ()\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Extras/ConvexDecomposition/CMakeLists.txt" : {
      "ObjectId" : "132a336fad74f0a77f27f5d136cdf8f914eb2dea",
      "LastModified" : "2019-01-23T17:40:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Extras/GIMPACTUtils/CMakeLists.txt" : {
      "ObjectId" : "c32a885dfb4f213c4033b50b2f47584c355ddbad",
      "LastModified" : "2019-01-23T17:40:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Extras/HACD/CMakeLists.txt" : {
      "ObjectId" : "a91d1173cdc81cbbaa676bd16648e61f0c5038ea",
      "LastModified" : "2019-01-23T17:40:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#IF (BUILD_SHARED_LIBS)\n\n#  TARGET_LINK_LIBRARIES(HACD BulletCollision LinearMath)\n\n#ENDIF (BUILD_SHARED_LIBS)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Extras/InverseDynamics/CMakeLists.txt" : {
      "ObjectId" : "22e953a44e21886fb6152b747bccd70b1812759e",
      "LastModified" : "2019-01-23T17:40:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Extras/Makefile.am" : {
      "ObjectId" : "f4cd5eac827c0718aadf50f087173ee7261a536d",
      "LastModified" : "2019-01-23T17:40:08Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "Extras/Serialize/BlenderSerialize/CMakeLists.txt" : {
      "ObjectId" : "4c75188f2aae3cd6c537956e2ae18e8404e6014a",
      "LastModified" : "2019-01-23T17:40:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Extras/Serialize/BulletFileLoader/CMakeLists.txt" : {
      "ObjectId" : "9b5dce7eabd6cc62531028036bbcd11a9e231c38",
      "LastModified" : "2019-01-23T17:40:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Extras/Serialize/BulletWorldImporter/CMakeLists.txt" : {
      "ObjectId" : "b56b39a89dd42182e9e373fa3dfd5fb2ae360b11",
      "LastModified" : "2019-01-23T17:40:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Extras/Serialize/BulletXmlWorldImporter/CMakeLists.txt" : {
      "ObjectId" : "9fd125e445140c1f2c3c75f099fd0a1774b9b748",
      "LastModified" : "2019-01-23T17:40:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Extras/Serialize/CMakeLists.txt" : {
      "ObjectId" : "bc7ddde1705381f1101e788866fdf5ac2d336ae5",
      "LastModified" : "2019-01-23T17:40:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SUBDIRS(BlenderSerialize )\n",
        "Line" : 3,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# makesdna and HeaderGenerator are for advanced use only\n\n# makesdna can re-generate the binary DNA representing the Bullet serialization structures\n\n# Be very careful modifying any of this, otherwise the .bullet format becomes incompatible\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Extras/Serialize/HeaderGenerator/CMakeLists.txt" : {
      "ObjectId" : "3c1e862c8f7031bb52881939a185025fb2d85802",
      "LastModified" : "2019-01-23T17:40:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Extras/Serialize/ReadBulletSample/CMakeLists.txt" : {
      "ObjectId" : "6d6fbab588c5d43ee8a1976a6d6913e1c68430b1",
      "LastModified" : "2019-01-23T17:40:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Extras/Serialize/makesdna/CMakeLists.txt" : {
      "ObjectId" : "3157b0ff417c3c9b801bd76e8cb80a38543bb40f",
      "LastModified" : "2019-01-23T17:40:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILE(GLOB INC_FILES ../*.h)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build makesdna executable\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Output BulletDNA.c\n",
        "Line" : 27,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Output BulletDNA.c\n",
        "Line" : 36,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Build bf_dna library\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "Extras/obj2sdf/CMakeLists.txt" : {
      "ObjectId" : "6de9d51c6198ecdce84079da671c609333b74dd7",
      "LastModified" : "2019-01-23T17:40:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "UseBullet.cmake" : {
      "ObjectId" : "5ed94874adef5d19426cb1322c1e60346b0e9b9b",
      "LastModified" : "2019-01-23T17:40:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#                                               -*- cmake -*-\n\n#\n\n#  UseBullet.cmake\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "build3/cmake/FindNumPy.cmake" : {
      "ObjectId" : "5ce9e178c5a53cb04eb307a9a3e2f7db32c8e4c9",
      "LastModified" : "2019-01-23T17:40:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the NumPy libraries\n\n# This module finds if NumPy is installed, and sets the following variables\n\n# indicating where it is.\n\n#\n\n# TODO: Update to provide the libraries and paths for linking npymath lib.\n\n#\n\n#  PYTHON_NUMPY_FOUND               - was NumPy found\n\n#  PYTHON_NUMPY_VERSION             - the version of NumPy found as a string\n\n#  PYTHON_NUMPY_VERSION_MAJOR       - the major version number of NumPy\n\n#  PYTHON_NUMPY_VERSION_MINOR       - the minor version number of NumPy\n\n#  PYTHON_NUMPY_VERSION_PATCH       - the patch version number of NumPy\n\n#  PYTHON_NUMPY_VERSION_DECIMAL     - e.g. version 1.6.1 is 10601\n\n#  PYTHON_NUMPY_INCLUDE_DIR         - path to the NumPy include files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# caffe_clear_vars(__result __output __error_value __values __ver_check __error_value)\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "build3/cmake/FindPythonLibs.cmake" : {
      "ObjectId" : "cebac58f42c6fcd249f19e36fc5be67caf7c1bdc",
      "LastModified" : "2019-01-23T17:40:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find python libraries\n\n# This module finds if Python is installed and determines where the\n\n# include files and libraries are. It also determines what the name of\n\n# the library is. This code sets the following variables:\n\n#\n\n#  PYTHONLIBS_FOUND           - have the Python libs been found\n\n#  PYTHON_LIBRARIES           - path to the python library\n\n#  PYTHON_INCLUDE_PATH        - path to where Python.h is found (deprecated)\n\n#  PYTHON_INCLUDE_DIRS        - path to where Python.h is found\n\n#  PYTHON_DEBUG_LIBRARIES     - path to the debug library (deprecated)\n\n#  PYTHONLIBS_VERSION_STRING  - version of the Python libs found (since CMake 2.8.8)\n\n#\n\n# The Python_ADDITIONAL_VERSIONS variable can be used to specify a list of\n\n# version numbers that should be taken into account when searching for Python.\n\n# You need to set this variable before calling find_package(PythonLibs).\n\n#\n\n# If you'd like to specify the installation of Python to use, you should modify\n\n# the following cache variables:\n\n#  PYTHON_LIBRARY             - path to the python library\n\n#  PYTHON_INCLUDE_DIR         - path to where Python.h is found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Note by Nikolaus Demmel 28.03.2014: My contributions are licensend under the\n\n# same as CMake (BSD). My adaptations are in part based\n\n# https://github.com/qgis/QGIS/tree/master/cmake which has the following\n\n# copyright note:\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Copyright (c) 2007, Simon Edwards <simon@simonzone.com>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# For backward compatibility, repect PYTHON_INCLUDE_PATH.\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# add an empty version to check the `python` executable first in case no version is requested\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Set up the versions we know about, in the order we will search. Always add\n\n# the user supplied additional versions to the front.\n\n# If FindPythonInterp has already found the major and minor version,\n\n# insert that version between the user supplied versions and the stock\n\n# version list.\n\n# If no specific version is requested or suggested by PythonInterp, always look\n\n# for \"python\" executable first\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# empty entry at the front makeing sure we search for \"python\" first\n",
        "Line" : 107,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# it's called \"Python 2.7\", not \"2.7.0\"\n",
        "Line" : 202,
        "CharPositionInLine" : 14
      },
      "9" : {
        "Text" : "# version ok\n",
        "Line" : 209,
        "CharPositionInLine" : 18
      },
      "10" : {
        "Text" : "# could extract config\n",
        "Line" : 212,
        "CharPositionInLine" : 16
      },
      "11" : {
        "Text" : "# found executable\n",
        "Line" : 213,
        "CharPositionInLine" : 14
      },
      "12" : {
        "Text" : "# python names\n",
        "Line" : 214,
        "CharPositionInLine" : 17
      },
      "13" : {
        "Text" : "# python versions\n",
        "Line" : 218,
        "CharPositionInLine" : 15
      },
      "14" : {
        "Text" : "# For backward compatibility, set PYTHON_INCLUDE_PATH.\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# We use PYTHON_INCLUDE_DIR, PYTHON_LIBRARY and PYTHON_DEBUG_LIBRARY for the\n\n# cache entries because they are meant to specify the location of a single\n\n# library. We now set the variables listed by the documentation for this\n\n# module.\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# These variables have been historically named in this module different from\n\n# what SELECT_LIBRARY_CONFIGURATIONS() expects.\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# SELECT_LIBRARY_CONFIGURATIONS() sets ${PREFIX}_FOUND if it has a library.\n\n# Unset this, this prefix doesn't match the module prefix, they are different\n\n# for historical reasons.\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# include(${CMAKE_CURRENT_LIST_DIR}/FindPackageHandleStandardArgs.cmake)\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# PYTHON_ADD_MODULE(<name> src1 src2 ... srcN) is used to build modules for python.\n\n# PYTHON_WRITE_MODULES_HEADER(<filename>) writes a header file you can include\n\n# in your sources to initialize the static python modules\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Mark these options as advanced\n",
        "Line" : 283,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "#    target_link_libraries(${_NAME} ${PYTHON_LIBRARIES})\n",
        "Line" : 297,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# with configure_file() cmake complains that you may not use a file created using file(WRITE) as input file for configure_file()\n",
        "Line" : 355,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "build3/cmake/SelectLibraryConfigurations.cmake" : {
      "ObjectId" : "dce6f99262df94c26ea76fc248ceda6081d80804",
      "LastModified" : "2019-01-23T17:40:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# SelectLibraryConfigurations\n\n# ---------------------------\n\n#\n\n#\n\n#\n\n# select_library_configurations( basename )\n\n#\n\n# This macro takes a library base name as an argument, and will choose\n\n# good values for basename_LIBRARY, basename_LIBRARIES,\n\n# basename_LIBRARY_DEBUG, and basename_LIBRARY_RELEASE depending on what\n\n# has been found and set.  If only basename_LIBRARY_RELEASE is defined,\n\n# basename_LIBRARY will be set to the release value, and\n\n# basename_LIBRARY_DEBUG will be set to basename_LIBRARY_DEBUG-NOTFOUND.\n\n# If only basename_LIBRARY_DEBUG is defined, then basename_LIBRARY will\n\n# take the debug value, and basename_LIBRARY_RELEASE will be set to\n\n# basename_LIBRARY_RELEASE-NOTFOUND.\n\n#\n\n# If the generator supports configuration types, then basename_LIBRARY\n\n# and basename_LIBRARIES will be set with debug and optimized flags\n\n# specifying the library to be used for the given configuration.  If no\n\n# build type has been set or the generator in use does not support\n\n# configuration types, then basename_LIBRARY and basename_LIBRARIES will\n\n# take only the release value, or the debug value if the release one is\n\n# not set.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This macro was adapted from the FindQt4 CMake module and is maintained by Will\n\n# Dicharry <wdicharry@stellarscience.com>.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if the generator supports configuration types or CMAKE_BUILD_TYPE\n\n# is set, then set optimized and debug options.\n",
        "Line" : 44,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "bullet.pc.cmake" : {
      "ObjectId" : "8b989faba3cc8821ff4ab63db6bd75121cb4f67f",
      "LastModified" : "2019-01-23T17:40:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/BasicDemo/CMakeLists.txt" : {
      "ObjectId" : "5dd3b98933ab994852fafa3811bc3ebdb8ce389f",
      "LastModified" : "2019-01-23T17:40:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# App_BasicExample is a minimal sample creating, stepping and deleting a Bullet dynamics world\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#################\n\n# Standalone BasicExampleGui using OpenGL (but not the example browser)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#this define maps StandaloneExampleCreateFunc to the right 'CreateFunc'\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#some code to support OpenGL and Glew cross platform\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "1918a90030b3befbe121f75b4b7b73e1e852b64f",
      "LastModified" : "2019-01-23T17:40:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/ExampleBrowser/CMakeLists.txt" : {
      "ObjectId" : "89531eb774318398c635ec1bdbc3494b3b8f1df7",
      "LastModified" : "2019-04-16T04:55:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####################\n\n#\n\n# Bullet Example Browser main app\n\n#\n\n####################\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ../BulletRobotics/GraspBox.cpp\n",
        "Line" : 151,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# add a post build command to copy some dlls to the executable directory\n",
        "Line" : 391,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# assume 32-bit build in VC12 for now\n\n# checks can be added here at a later time\n",
        "Line" : 394,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "examples/HelloWorld/CMakeLists.txt" : {
      "ObjectId" : "f61fbe67679e7bf5bc262397ce8fb207b87cbc6f",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# HelloWorld is a minimal sample creating, stepping and deleting a Bullet dynamics world\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/OpenGLWindow/CMakeLists.txt" : {
      "ObjectId" : "6027bda2ddd79e56f1387f1b232c0544c2e241d5",
      "LastModified" : "2019-02-11T04:25:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#MESSAGE (${OpenGLWindowCommon_CPP})\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#no Linux detection?\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#target_link_libraries(OpenGLWindow ${OPENGL_gl_LIBRARY})\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "examples/RobotSimulator/CMakeLists.txt" : {
      "ObjectId" : "6a0553a76579d5e054d5fc846213da07b2642eec",
      "LastModified" : "2019-02-26T18:20:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#some code to support OpenGL and Glew cross platform\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/SharedMemory/CMakeLists.txt" : {
      "ObjectId" : "84c154fa0bf6030d761e52227d37d14632101e9f",
      "LastModified" : "2019-01-23T17:40:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#VR/OpenVR on Windows and Mac OSX\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#VR/OpenVR on Linux\n",
        "Line" : 334,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/SimpleOpenGL3/CMakeLists.txt" : {
      "ObjectId" : "ef0bbb0505f5b768193dc036325ea56fbbdc7183",
      "LastModified" : "2019-01-23T17:40:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/ThirdPartyLibs/BussIK/CMakeLists.txt" : {
      "ObjectId" : "10ec3114c555ad1b29a0bdaa1974cf1940e53cef",
      "LastModified" : "2019-02-26T18:20:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/ThirdPartyLibs/Eigen/CMakeLists.txt" : {
      "ObjectId" : "9eb502b792d4a9607e2d323f2d8114939b43c209",
      "LastModified" : "2019-02-26T18:20:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/ThirdPartyLibs/Gwen/CMakeLists.txt" : {
      "ObjectId" : "7ca7656a2095834e5205848af8d41d578c90a3ea",
      "LastModified" : "2019-02-26T18:20:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/ThirdPartyLibs/clsocket/CMakeLists.txt" : {
      "ObjectId" : "bb9a4c1e144395c4c68fe9b4350ed00f24cacfac",
      "LastModified" : "2019-02-26T18:20:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#cmake_minimum_required(VERSION 2.8 FATAL_ERROR)\n\n#project(clsocket)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set up versioning.\n\n#set(BUILD_MAJOR \"1\")\n\n#set(BUILD_MINOR \"4\")\n\n#set(BUILD_VERSION \"3\")\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# mark headers as headers...\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# append to sources so that dependency checks work on headers\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# OS and compiler checks. \n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# linux / normal unix\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Special MINGW stuff here\n",
        "Line" : 38,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Special MSVC stuff here\n",
        "Line" : 40,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# No idea what it is, but there's a good chance it's too weird.\n",
        "Line" : 43,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# make the lib\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# install into configured prefix\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "examples/ThirdPartyLibs/lua-5.2.3/CMakeLists.txt" : {
      "ObjectId" : "4dac5e0c097e8a4a75f5f9a2bbdf6d40567744fe",
      "LastModified" : "2019-02-26T18:20:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/TwoJoint/CMakeLists.txt" : {
      "ObjectId" : "a596ab404d9711ebd6084a1dd7ff0ba5a24bc1fe",
      "LastModified" : "2019-02-26T18:20:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#some code to support OpenGL and Glew cross platform\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/pybullet/CMakeLists.txt" : {
      "ObjectId" : "1b791ec7e46a2560bd9a434857dcb3921dec38ba",
      "LastModified" : "2019-02-26T18:20:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# else Linux: dont link\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/Bullet3Collision/CMakeLists.txt" : {
      "ObjectId" : "130095cc04ecafc26d9dd0d1f29e0686a6384262",
      "LastModified" : "2019-02-26T18:20:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Have to list out sub-directories manually:\n\n#todo\n\n#SET_PROPERTY(SOURCE ${Bullet3CollisionBroadPhase_HDRS} PROPERTY MACOSX_PACKAGE_LOCATION Headers/BroadPhaseCollision)\n",
        "Line" : 87,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "src/Bullet3Common/CMakeLists.txt" : {
      "ObjectId" : "e899e67d944eda2d70ceca8ed5d7733ecf4e02ce",
      "LastModified" : "2019-02-26T18:20:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "src/Bullet3Dynamics/CMakeLists.txt" : {
      "ObjectId" : "94c120d9b54fa6378fe34335a256ab29d1f53ce4",
      "LastModified" : "2019-02-26T18:20:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "src/Bullet3Geometry/CMakeLists.txt" : {
      "ObjectId" : "82068727054dcf55bcbad4e48d06ae108a51fe54",
      "LastModified" : "2019-02-26T18:20:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "src/Bullet3OpenCL/CMakeLists.txt" : {
      "ObjectId" : "1da58d4a99aac3585b1839005a47e5ec0c19b69a",
      "LastModified" : "2019-02-26T18:20:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\t${Root_HDRS}\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#INSTALL of other files requires CMake 2.6\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#\t\t\t\tINSTALL(FILES ../btBullet3OpenCL_clewCommon.h\n\n#DESTINATION ${INCLUDE_INSTALL_DIR}/Bullet3OpenCL_clew)\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Have to list out sub-directories manually:\n",
        "Line" : 72,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 4
    },
    "src/Bullet3Serialize/Bullet2FileLoader/CMakeLists.txt" : {
      "ObjectId" : "125576634f098ab3a3751a45c27a1d817f26778a",
      "LastModified" : "2019-02-26T18:20:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "src/BulletCollision/CMakeLists.txt" : {
      "ObjectId" : "f5d725562cea8bc05bb500226a186ab89c1add05",
      "LastModified" : "2019-02-26T18:20:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#INSTALL of other files requires CMake 2.6\n",
        "Line" : 266,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Have to list out sub-directories manually:\n",
        "Line" : 285,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "src/BulletDynamics/CMakeLists.txt" : {
      "ObjectId" : "3332440f26ddcab74e309c56178bd90fb5637a78",
      "LastModified" : "2019-02-26T18:20:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\tDynamics/Bullet-C-API.cpp\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Have to list out sub-directories manually:\n",
        "Line" : 166,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "src/BulletInverseDynamics/CMakeLists.txt" : {
      "ObjectId" : "3331c27eac0e2a5dbc2df3ac634ed1e4e0f2fb16",
      "LastModified" : "2019-02-26T18:20:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#INSTALL of other files requires CMake 2.6\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Have to list out sub-directories manually:\n",
        "Line" : 61,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "src/BulletSoftBody/CMakeLists.txt" : {
      "ObjectId" : "d43df1c67b3103f75831cb50ec2680ba1b363326",
      "LastModified" : "2019-02-26T18:20:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SUBDIRS( Solvers )\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "c30125c539020156fcb0b6c6226947ceb12f68b4",
      "LastModified" : "2019-02-26T18:20:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#INSTALL of other files requires CMake 2.6\n",
        "Line" : 11,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Don't actually need to install any common files, the frameworks include everything\n",
        "Line" : 14,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "src/LinearMath/CMakeLists.txt" : {
      "ObjectId" : "0c8c0133a325da68ce64b57248179f065fa7c8b7",
      "LastModified" : "2019-02-26T18:20:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "test/BulletDynamics/CMakeLists.txt" : {
      "ObjectId" : "ceeb2b4f4c21b031936b06e362b767fdcd6cea4c",
      "LastModified" : "2019-02-26T18:20:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/BulletDynamics/pendulum/CMakeLists.txt" : {
      "ObjectId" : "570dc07154365b2a2079b3360c0365f314f35aea",
      "LastModified" : "2019-02-26T18:20:06Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "9bbfdf78c5df9f11b7c1a21f702f59da73ccf8de",
      "LastModified" : "2019-02-26T18:20:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SUBDIRS( TestBullet3OpenCL )\n",
        "Line" : 2,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "test/InverseDynamics/CMakeLists.txt" : {
      "ObjectId" : "290b91dc1daa922321e343a787c46118a8cfeee0",
      "LastModified" : "2019-02-26T18:20:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_DEFINITIONS(-DGTEST_HAS_PTHREAD=1)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ADD_DEFINITIONS(-DGTEST_HAS_PTHREAD=1)\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ADD_DEFINITIONS(-DGTEST_HAS_PTHREAD=1)\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/SharedMemory/CMakeLists.txt" : {
      "ObjectId" : "5835d19911a480fdaa130702d32ec7c8ae099bef",
      "LastModified" : "2019-02-26T18:20:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_DEFINITIONS(-DGTEST_HAS_PTHREAD=1)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/collision/CMakeLists.txt" : {
      "ObjectId" : "b36c151be5c82625f0bc72b5264b336e580d61ce",
      "LastModified" : "2019-02-26T18:20:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_DEFINITIONS(-DGTEST_HAS_PTHREAD=1)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/gtest-1.7.0/CMakeLists.txt" : {
      "ObjectId" : "0091e25ec1625d110a1fb8274737527bc0a9d3e3",
      "LastModified" : "2019-02-26T18:20:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_DEFINITIONS(-DGTEST_HAS_PTHREAD=1)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 56,
    "AUTOMAKE" : 1
  },
  "ElapsedTime" : 5715
}