{
  "Repository" : "12123316",
  "Revision" : "HEAD",
  "ObjectId" : "9026a10d48ad82f3290e406dca7595c943a0e586",
  "CommitTime" : "2017-11-26T07:43:38Z",
  "Files" : {
    "CMake/FindChombo.cmake" : {
      "ObjectId" : "0df20cea53f2b9fee3148890e56cf7f4b5fb25de",
      "LastModified" : "2017-03-10T15:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#- Find Chombo \n\n#  This module will define the following variable:\n\n#  CHOMBO_DIR\n\n#  CHOMBO_CONFIG amrelliptic2d.Linux.64.mpicxx.gfortran.DEBUG.OPT.MPI\n\n# OUTPUT:\n\n#  CHOMBO_FOUND\n\n#  CHOMBO_DIR\n\n#  CHOMBO_INCLUDE_DIR\n\n#  CHOMBO_LIBRARY_DIR\n\n#  CHOMBO_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#DO NOTHING\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#${CHOMBO_DIR}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}amrelliptic${CHOMBO_CONFIG}${CMAKE_STATIC_LIBRARY_SUFFIX}\n",
        "Line" : 39,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "#${CHOMBO_DIR}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}amrtools${CHOMBO_CONFIG}${CMAKE_STATIC_LIBRARY_SUFFIX}\n\n#${CHOMBO_DIR}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}boxtools${CHOMBO_CONFIG}.PETSC${CMAKE_STATIC_LIBRARY_SUFFIX}\n\n#${CHOMBO_DIR}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}ebamrtools${CHOMBO_CONFIG}${CMAKE_STATIC_LIBRARY_SUFFIX}\n\n#${CHOMBO_DIR}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}amrelliptic${CHOMBO_CONFIG_3d}${CMAKE_STATIC_LIBRARY_SUFFIX}\n\n#${CHOMBO_DIR}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}amrtools${CHOMBO_CONFIG_3d}${CMAKE_STATIC_LIBRARY_SUFFIX}\n\n#${CHOMBO_DIR}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}boxtools${CHOMBO_CONFIG}${CMAKE_STATIC_LIBRARY_SUFFIX}\n\n#${CHOMBO_DIR}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}ebtools${CHOMBO_CONFIG}${CMAKE_STATIC_LIBRARY_SUFFIX}\n\n#${CHOMBO_DIR}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}amrtimedependent${CHOMBO_CONFIG}${CMAKE_STATIC_LIBRARY_SUFFIX}\n\n#${CHOMBO_DIR}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}basetools${CHOMBO_CONFIG}.PETSC${CMAKE_STATIC_LIBRARY_SUFFIX}\n\n#${CHOMBO_DIR}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}boxtools${CHOMBO_CONFIG_3d}${CMAKE_STATIC_LIBRARY_SUFFIX}\n\n#${CHOMBO_DIR}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}workshop${CHOMBO_CONFIG}${CMAKE_STATIC_LIBRARY_SUFFIX}\n\n#${CHOMBO_DIR}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}amrtimedependent${CHOMBO_CONFIG_3d}${CMAKE_STATIC_LIBRARY_SUFFIX}\n\n#${CHOMBO_DIR}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}basetools${CHOMBO_CONFIG}${CMAKE_STATIC_LIBRARY_SUFFIX}\n\n#${CHOMBO_DIR}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}ebamrelliptic${CHOMBO_CONFIG}${CMAKE_STATIC_LIBRARY_SUFFIX}\n\n#${CHOMBO_DIR}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}amrtools${CHOMBO_CONFIG}.PETSC${CMAKE_STATIC_LIBRARY_SUFFIX}\n\n#${CHOMBO_DIR}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}basetools${CHOMBO_CONFIG_3d}${CMAKE_STATIC_LIBRARY_SUFFIX}\n\n#${CHOMBO_DIR}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}ebamrtimedependent${CHOMBO_CONFIG}${CMAKE_STATIC_LIBRARY_SUFFIX}\n",
        "Line" : 40,
        "CharPositionInLine" : 11
      },
      "4" : {
        "Text" : "#SET(CHOMBO_DEFINES -DCH_SPACEDIM=2 -DCH_LANG_CC -DNODEBUG   -DCH_USE_SETVAL -DCH_USE_DOUBLE   -DCH_USE_MEMORY_TRACKING  -DCH_USE_64 -DCH_USE_DOUBLE -DCH_USE_HDF5)\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#    if(CHOMBO_INLCUDE_DIR)\n\n#     message(STATUS \"Found CHOMBO: static library:${CHOMBO_STATIC_LIBRARIES} shared library:  ${CHOMBO_SHARED_LIBRARIES}\")\n\n#    endif()\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#\n\n#if(CHOMBO_INLCUDE_DIR)\n\n# message(STATUS \"Found CHOMBO_INLCUDE_DIR ${CHOMBO_INLCUDE_DIR}\")\n\n# message(STATUS \"Found CHOMBO_LIBRARY_DIR ${CHOMBO_LIBRARY_DIR}\")\n\n#else()\n\n# message(STATUS \"CHOMBO Intel Math Kernel Lib. is no found.\")\n\n#endif()\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "CMake/FindIntelMKL.cmake" : {
      "ObjectId" : "4b2764d902cdb7d73bbc72e1786b4046564e1b40",
      "LastModified" : "2014-10-07T23:39:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#- Find MKL (Intel Math Kernel Lib.)\n\n#  This module will define the following variable:\n\n# INPUT:\n\n#  MKL_INTEGERS_LENGTH  32/64 \n\n#  MKL_COMPUTATIONAL_LIBRARIES\n\n# OUTPUT:\n\n#  MKL_FOUND\n\n#  MKL_ROOT_DIR\n\n#  MKL_INCLUDE_DIR/MKL_C_INCLUDE_DIR\n\n#  MKL_FORTRAN_INCLUDE_DIR\n\n#  MKL_LIBRARY_DIR\n\n#  MKL_STATIC_LIBRARIES\n\n#  MKL_DYNAMIC_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#DO NOTHING\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#solver lib\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#iface lib  \n\n#if(CMAKE_COMPILER_IS_GNUFORTRAN)\n\n#   set(_iface_fortran_lib \"mkl_gf{_lp64_iface}\")   \n\n#endif()\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#thread lib\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#core lib  \n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#    find_library(MKL_SOLVER_LIBRARY_STATIC  \n\n#                NAME ${CMAKE_STATIC_LIBRARY_PREFIX}${_solver_lib}${CMAKE_STATIC_LIBRARY_SUFFIX}\n\n#                HINTS  /opt/intel/Compiler/*/*  /opt/intel/composerxe/\n\n#                       $INTEL_HOME ENV INTEL_HOME\n\n##                PATH_SUFFIXES mkl/lib/${_arch}\n\n#                NO_DEFAULT_PATH\n\n#                )\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#    if(MKL_INLCUDE_DIR)\n\n#     message(STATUS \"Found MKL: static library:${MKL_STATIC_LIBRARIES} shared library:  ${MKL_SHARED_LIBRARIES}\")\n\n#    endif() \n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n#if(MKL_INLCUDE_DIR)\n\n# message(STATUS \"Found MKL_INLCUDE_DIR ${MKL_INLCUDE_DIR}\")\n\n# message(STATUS \"Found MKL_LIBRARY_DIR ${MKL_LIBRARY_DIR}\")\n\n#else()\n\n# message(STATUS \"MKL Intel Math Kernel Lib. is no found.\")\n\n#endif() \n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "CMake/FindNumPy.cmake" : {
      "ObjectId" : "1d0db887d4cd9cf8ccf385765ed59b88e64c5a69",
      "LastModified" : "2014-10-07T23:39:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#- Find NumPy \n\n# INPUT:\n\n#  PYTHON_EXECUTABLE\n\n#  This module will define the following variable:\n\n# OUTPUT:\n\n#  PYTHON_NUMPY_INCLUDE_DIRS\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#DO NOTHING\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/FindPython.cmake" : {
      "ObjectId" : "e3e372588d9341a7e00abd1f00e392dcfdfcea09",
      "LastModified" : "2014-10-07T23:39:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#- Find Python \n\n# INPUT:\n\n#  PYTHONHOME  \n\n#  PYTHONPATH\n\n#  This module will define the following variable:\n\n# OUTPUT:\n\n#  PYTHON_VERSION\n\n#  PYTHON_FOUND\n\n#  PYTHON_INCLUDE_DIRS\n\n#  PYTHON_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#DO NOTHING\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#DO NOTHING\n",
        "Line" : 38,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    },
    "CMake/FindSilo.cmake" : {
      "ObjectId" : "c028d65b43c6685095dabc3d791f573b7f719b94",
      "LastModified" : "2014-10-07T23:39:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#- Find Silo \n\n# INPUT:\n\n#  SILO_DIR\n\n#  This module will define the following variable:\n\n# OUTPUT:\n\n#  SILO_INCLUDE_DIRS\n\n#  SILO_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#DO NOTHING\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/FindTBB.cmake" : {
      "ObjectId" : "4b9426e9836b0c5e4f8cf902d750792d12e7165e",
      "LastModified" : "2017-08-28T05:58:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################\n\n#    2012,2014 Advanced Micro Devices, Inc. All rights reserved.\n\n#\n\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#   you may not use this file except in compliance with the License.\n\n#   You may obtain a Duplicate of the License at\n\n#\n\n#       http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n#   Unless required by applicable law or agreed to in writing, software\n\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#   See the License for the specific language governing permissions and\n\n#   limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############################################################################\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Locate a TBB implementation.\n\n#\n\n# Defines the following variables:\n\n#\n\n#   TBB_FOUND - Found the OPENCL framework\n\n#   TBB_INCLUDE_DIRS - Include directories\n\n#\n\n# Also defines the library variables below as normal\n\n# variables.  These contain debug/optimized keywords when\n\n# a debugging library is found.\n\n#\n\n#   TBB_LIBRARY\n\n#   TBB_MALLOC_LIBRARY\n\n#   TBB_LIBRARY_DEBUG\n\n#   TBB_MALLOC_LIBRARY_DEBUG\n\n#   TBB_INCLUDE_DIRS\n\n# Accepts the following variables as input:\n\n#\n\n#   TBB_ROOT - (as a CMake or environment variable)\n\n#                The root directory of the TBB implementation found\n\n#\n\n#   FIND_LIBRARY_USE_LIB64_PATHS - Global property that controls whether findTBB should search for\n\n#                              64bit or 32bit libs\n\n#-----------------------\n\n# Example Usage:\n\n#\n\n#    find_package(TBB REQUIRED)\n\n#    include_directories(${TBB_INCLUDE_DIRS})\n\n#\n\n#    add_executable(foo foo.cc)\n\n#    target_link_libraries(foo ${TBB_LIBRARIES})\n\n#\n\n#-----------------------\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#if ( NOT TBB_ROOT )\n\n#    message( \"TBB install not found in the system.\")\n\n#else ( )\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Search for 64bit libs if FIND_LIBRARY_USE_LIB64_PATHS is SetEntity to true in the global environment, 32bit libs else\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#    if( LIB64 )\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#    else( )\n\n#        SetEntity(TBB_ARCH_PLATFORM ia32)\n\n#    endif( )\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Find TBB header files\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#Find TBB Libraries\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#endif ( )\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "CMake/FindXdmf.cmake" : {
      "ObjectId" : "1cafd4152bb74ed0c623459ccd71a946e9055874",
      "LastModified" : "2014-10-07T23:39:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#- Find libXdmf \n\n#  This module will define the following variable:\n\n# OUTPUT:\n\n#  XDMF_FOUND\n\n#  XDMF_ROOT_DIR\n\n#  XDMF_INCLUDE_DIR/XDMF_C_INCLUDE_DIR\n\n#  XDMF_FORTRAN_INCLUDE_DIR\n\n#  XDMF_LIBRARY_DIR\n\n#  XDMF_STATIC_LIBRARIES\n\n#  XDMF_DYNAMIC_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#DO NOTHING\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#    if(XDMF_INLCUDE_DIR)\n\n#     message(STATUS \"Found XDMF: static library:${XDMF_STATIC_LIBRARIES} shared library:  ${XDMF_SHARED_LIBRARIES}\")\n\n#    endif() \n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n#if(XDMF_INLCUDE_DIR)\n\n# message(STATUS \"Found XDMF_INLCUDE_DIR ${XDMF_INLCUDE_DIR}\")\n\n# message(STATUS \"Found XDMF_LIBRARY_DIR ${XDMF_LIBRARY_DIR}\")\n\n#else()\n\n# message(STATUS \"XDMF Intel Math Kernel Lib. is no found.\")\n\n#endif() \n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "CMake/HYPREConfig.cmake" : {
      "ObjectId" : "60a6f5c2b960773c3045cbf60568a9e6d323b5a1",
      "LastModified" : "2017-03-10T15:22:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/MeshKitConfig.cmake" : {
      "ObjectId" : "577947128ac85c22e086197776d0428765743511",
      "LastModified" : "2017-03-10T15:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The values below are for an un-installed copy of MESHKIT used directly\n\n# from its build build directory.  These values will be overridden below\n\n# for installed copies of MESHKIT.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#SET(MESHKIT_LIBRARIES \"-lMeshKit -L/usr/lib   -L/usr/lib/x86_64-linux-gnu/hdf5/openmpi/lib -lhdf5 -lmpi -lmpi_cxx -lz -lm -L/pkg/sigma/1.2/lib -lemon -liRel -liMesh -lMOAB -lFBiGeomMOAB -lcgm -liGeom -lcgm  -lTKSTL -lTKSTEP -lTKSTEP209 -lTKSTEPAttr -lTKSTEPBase -lTKXSBase -lTKIGES -lTKXSBase -lTKBinL -lTKLCAF -lTKCDF -lTKCAF -lTKHLR -lTKOffset -lTKShHealing -lTKFillet -lTKFeat -lTKBool -lTKBO -lTKPrim -lTKMesh -lTKTopAlgo -lTKGeomAlgo -lTKBRep -lTKGeomBase -lTKG3d -lTKG2d -lTKMath -lTKernel\")\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Override MESHKIT_LIBDIR and MESHKIT_INCLUDES from above with the correct\n\n# values for the installed MESHKIT.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMake/OpenCASCADEConfig.cmake" : {
      "ObjectId" : "c0995a2788430279a9625cd8200cc98cd7dbb785",
      "LastModified" : "2017-03-10T15:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Config file for the OpenCASCADE package\n\n# It defines the following variables\n\n#  OpenCASCADE_INCLUDE_DIRS - include directories for OpenCASCADE\n\n#  OpenCASCADE_LIBRARIES    - libraries to link against\n\n#  OpenCASCADE_EXECUTABLE   - the bar executable\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compute paths\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our library dependencies (contains definitions for IMPORTED targets)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# These are IMPORTED targets created by OpenCASCADETargets.cmake\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "CMake/OpenCASCADEConfigVersion.cmake" : {
      "ObjectId" : "6809fd78ec917c5f3c19d4482232c442d72cd1ff",
      "LastModified" : "2017-03-10T15:22:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check whether the requested PACKAGE_FIND_VERSION is compatible\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/SAMRAIConfig.cmake" : {
      "ObjectId" : "a753bf768691c5bd7c1ed0c9511a2c04ea941965",
      "LastModified" : "2017-04-30T07:56:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SAMRAI_testlib\n",
        "Line" : 7,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "CMake/SAMRAI_Patch/CMakeLists.txt" : {
      "ObjectId" : "0417c6a15433d1537471390e081f0a48dfbe4c81",
      "LastModified" : "2017-06-27T04:09:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SET(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/CMake ${CMAKE_MODULE_PATH})\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###################################################################################################\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#SET(TBB_ROOT /pkg/tbb/20170604/)\n\n#FIND_PACKAGE(TBB)\n\n#IF (TBB_FOUND)\n\n#    SET(HAVE_TBB 1)\n\n#ENDIF (TBB_FOUND)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#SET(SAMRAI_F77_FUNC \"(name,NAME) name ## _\")\n\n#SET(SAMRAI_F77_FUNC_ \"(name,NAME) name ## _\")\n\n#SET(LACKS_STRSTREAM ON)\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#CHECK_CXX_SOURCE_COMPILES(\n\n#        \"#include <strstream>\n\n#        int main(){\n\n#         using namespace std;\n\n#         ostrstream oss; oss << 10;\n\n#        }\"\n\n#        HAVE_OSTRSTREAM)\n\n#check_cxx_symbol_exists(std::ostrstream  strstream HAVE_OSTRSTREAM)\n\n#IF(NOT HAVE_OSTRSTREAM)\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#ENDIF(NOT HAVE_OSTRSTREAM)\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#CONFIGURE_FILE(${CMAKE_CURRENT_BINARY_DIR}/SAMRAI_config.h.in\n\n#        ${CMAKE_CURRENT_BINARY_DIR}/include/SAMRAI/SAMRAI_config.h @ONLY)\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###################################################################################################\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#        ADD_M4_F_SOURCES(F_SRC \"${m4_FLAGS}\" ${m4_SRC})\n",
        "Line" : 577,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# first we might need to make the input file absolute\n",
        "Line" : 579,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "# get the relative path of the file to the current source dir\n",
        "Line" : 581,
        "CharPositionInLine" : 12
      },
      "11" : {
        "Text" : "# strip the .m4 off the end if present and prepend the current  binary dir\n",
        "Line" : 583,
        "CharPositionInLine" : 12
      },
      "12" : {
        "Text" : "# append the output file to the list of outputs\n\n# create the output directory if it doesn't exist\n",
        "Line" : 585,
        "CharPositionInLine" : 12
      },
      "13" : {
        "Text" : "# now add the custom command to generate the output file\n",
        "Line" : 591,
        "CharPositionInLine" : 12
      },
      "14" : {
        "Text" : "#    set(${C_SRC} PARENT_SCOPE)\n\n#    set(${F_SRC} PARENT_SCOPE)\n",
        "Line" : 603,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "CMake/SAMRAI_Patch/FindM4.cmake" : {
      "ObjectId" : "3e65addb140930b9f3c9fa289412ad1df8e1ac69",
      "LastModified" : "2017-06-26T23:41:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# we need the M4 macro processor\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Pass a list of files through the M4 macro processor\n\n#\n\n# ADD_M4_SOURCES( OUTVAR source1 ... sourceN )\n\n#\n\n#  OUTVAR  A list containing all the output file names, suitable\n\n#          to be passed to add_executable or add_library.\n\n#\n\n# If the source files have a .m4 suffix it is stripped from the output\n\n# file name. The output files are placed in the same relative location\n\n# to CMAKE_CURRENT_BINARY_DIR as they are to CMAKE_CURRENT_SOURCE_DIR.\n\n#\n\n# Example:\n\n#  add_m4_sources( SRCS src/test1.cxx.m4 src/test2.cxx.m4 )\n\n#  add_executable( test ${SRCS} )\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# first we might need to make the input file absolute\n",
        "Line" : 27,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "#if( NOT IS_ABSOLUTE \"${f}\" )\n\n#  set( f \"${CMAKE_CURRENT_SOURCE_DIR}/${f}\" )\n\n#endif( NOT IS_ABSOLUTE \"${f}\" )\n\n# get the relative path of the file to the current source dir\n",
        "Line" : 29,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# strip the .m4 off the end if present and prepend the current  binary dir\n",
        "Line" : 34,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# append the output file to the list of outputs\n",
        "Line" : 36,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# create the output directory if it doesn't exist\n",
        "Line" : 38,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# now add the custom command to generate the output file\n",
        "Line" : 43,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# set the output list in the calling scope\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "CMake/SAMRAI_Patch/SAMRAIPatch.cmake" : {
      "ObjectId" : "89992af350bf56932168713c59710169d01bc9b8",
      "LastModified" : "2017-07-02T12:23:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n#\n\n#  Copyright (c) Kitware Inc.\n\n#\n\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n\n#  you may not use this file except in compliance with the License.\n\n#  You may obtain a copy of the License at\n\n#\n\n#      http://www.apache.org/licenses/LICENSE-2.0.txt\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FindMPI\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# FindHDF5\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# FindSILO\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#include(templates.cmake)\n",
        "Line" : 625,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Installation targets\n",
        "Line" : 798,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "CMake/add_boost.cmake" : {
      "ObjectId" : "f99c9a11f594ed4769ed1a242c56b450c1f07ab8",
      "LastModified" : "2017-06-26T23:41:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==================================================================================================#\n\n#                                                                                                  #\n\n#  Copyright 2013 MaidSafe.net limited                                                             #\n\n#                                                                                                  #\n\n#  This MaidSafe Software is licensed to you under (1) the MaidSafe.net Commercial License,        #\n\n#  version 1.0 or later, or (2) The General Public License (GPL), version 3, depending on which    #\n\n#  licence you accepted on initial access to the Software (the \"Licences\").                        #\n\n#                                                                                                  #\n\n#  By contributing code to the MaidSafe Software, or to this project generally, you agree to be    #\n\n#  bound by the terms of the MaidSafe Contributor Agreement, version 1.0, found in the root        #\n\n#  directory of this project at LICENSE, COPYING and CONTRIBUTOR respectively and also available   #\n\n#  at: http://www.maidsafe.net/licenses                                                            #\n\n#                                                                                                  #\n\n#  Unless required by applicable law or agreed to in writing, the MaidSafe Software distributed    #\n\n#  under the GPL Licence is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF   #\n\n#  ANY KIND, either express or implied.                                                            #\n\n#                                                                                                  #\n\n#  See the Licences for the specific language governing permissions and limitations relating to    #\n\n#  use of the MaidSafe Software.                                                                   #\n\n#                                                                                                  #\n\n#==================================================================================================#\n\n#                                                                                                  #\n\n#  Sets up Boost using ExternalProject_Add.                                                        #\n\n#                                                                                                  #\n\n#  Only the first 2 variables should require regular maintenance, i.e. BoostVersion & BoostSHA1.   #\n\n#                                                                                                  #\n\n#  If USE_BOOST_CACHE is set, boost is downloaded, extracted and built to a directory outside of   #\n\n#  the MaidSafe build tree.  The chosen directory can be set in BOOST_CACHE_DIR, or if this is     #\n\n#  empty, an appropriate default is chosen for the given platform.                                 #\n\n#                                                                                                  #\n\n#  Variables set and cached by this module are:                                                    #\n\n#    BoostSourceDir (required for subsequent include_directories calls) and per-library            #\n\n#    variables defining the libraries, e.g. BoostDateTimeLibs, BoostFilesystemLibs.                #\n\n#                                                                                                  #\n\n#==================================================================================================#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create build folder name derived from version\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If user wants to use a cache copy of Boost, get the path to this location.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If the cache directory doesn't exist, fall back to use the build root.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set up the full path to the source directory\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check the full path to the source directory is not too long for Windows.  File paths must be less\n\n# than MAX_PATH which is 260.  The current longest relative path Boost tries to create is:\n\n# Build\\boost\\bin.v2\\libs\\program_options\\build\\fd41f4c7d882e24faa6837508d6e5384\\libboost_program_options-vc120-mt-gd-1_55.lib.rsp\n\n# which along with a leading separator is 129 chars in length.  This gives a maximum path available\n\n# for 'BoostSourceDir' as 130 chars.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Download boost if required\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Extract boost if required\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Get the path to the extracted folder\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Build b2 (bjam) if required\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Apply patched files\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Expose BoostSourceDir to parent scope\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Set up general b2 (bjam) command line arguments\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Set up platform-specific b2 (bjam) command line arguments\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Need to configure the toolset based on whatever version CMAKE_CXX_COMPILER is\n",
        "Line" : 230,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Get list of components\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Build each required component\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Set up external project for the currently-unofficial Boost.Process and Boost.Expected\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Copy the folders/files to the main boost source dir\n",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#==================================================================================================#\n\n# Package                                                                                          #\n\n#==================================================================================================#\n",
        "Line" : 402,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "CMake/build_SAMRAI.cmake" : {
      "ObjectId" : "7dbce70cfcf8dd0a33357571325d2c831c46df23",
      "LastModified" : "2017-06-26T23:41:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/hdf5-config.cmake" : {
      "ObjectId" : "a5d5ed1155fd697ea696a03e70151a0cd8a98e04",
      "LastModified" : "2017-06-26T23:41:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/utils.cmake" : {
      "ObjectId" : "1e15b3028f7357da196afd4d3beaaeb965a2c7e8",
      "LastModified" : "2017-11-02T04:48:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#    ADD_DEPENDENCIES(${GetPrefix} googletest)\n\n#    ADD_DEPENDENCIES(alltest ${GetPrefix} )\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "CMakeLists.txt" : {
      "ObjectId" : "c17153d56949e872d786eea950d176c29affeeaa",
      "LastModified" : "2017-11-10T10:21:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#    SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Winconsistent-missing-override -fcolor-diagnostics\n\n#    -ftemplate-backtrace-limit=0 -funroll-loops  -fno-limit-debug-info  \")\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#FIND_PACKAGE(CUDA)\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#SET(TBB_ROOT /pkg/tbb/20170604/)\n\n#FIND_PACKAGE(TBB)\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#LINK_DIRECTORIES(/usr/local/cuda/lib64)\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add_subdirectory(sp_lite)\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "docs/CMakeLists.txt" : {
      "ObjectId" : "18ea6db98e1f217535a9f5190dc4c2684748ca69",
      "LastModified" : "2017-11-13T14:51:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-- Configure the Template Doxyfile for our specific project\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#-- AddEntity a custom target to run Doxygen when ever the project is built\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# IF you do NOT want the documentation to be generated EVERY time you build the project\n\n# then leave out the 'ALL' keyword from the above command.\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "example/CMakeLists.txt" : {
      "ObjectId" : "3f697a1f8e1c7173408a6f4ff131108bdeed52ba",
      "LastModified" : "2017-11-13T14:51:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_SUBDIRECTORY(em)\n\n#ADD_SUBDIRECTORY(multi_block)\n\n#ADD_SUBDIRECTORY(mhd_test)\n\n#IF(CUDA_FOUND)\n\n#ADD_SUBDIRECTORY(cuda_test)\n\n#ENDIF(CUDA_FOUND)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_subdirectory(Modeling)\n\n#add_subdirectory(step2meshkit)\n\n#add_subdirectory(em_tokamak)",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "example/EmbeddedBoundary/CMakeLists.txt" : {
      "ObjectId" : "7de7dfb4eb3dcfa2371b61347ef2dd0451586931",
      "LastModified" : "2017-11-02T04:48:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SET_TARGET_PROPERTIES(tokamak PROPERTIES COMPILE_FLAGS \" -xcuda \")\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "example/MultiDomain/CMakeLists.txt" : {
      "ObjectId" : "22d57dcbe6c9ba6630f49bcb721453a0e2e3b64a",
      "LastModified" : "2017-11-26T00:35:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SET_TARGET_PROPERTIES(tokamak PROPERTIES COMPILE_FLAGS \" -xcuda \")\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "example/SimpleMaxwell/CMakeLists.txt" : {
      "ObjectId" : "83f9f0be7f4190458ef556e943e720befacbb4e5",
      "LastModified" : "2017-11-26T00:35:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SET_TARGET_PROPERTIES(tokamak PROPERTIES COMPILE_FLAGS \" -xcuda \")\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "example/tokamak/CMakeLists.txt" : {
      "ObjectId" : "514c63fee60ef09abbefe25d53f159c7bbff488d",
      "LastModified" : "2017-11-26T00:35:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SET_TARGET_PROPERTIES(tokamak PROPERTIES COMPILE_FLAGS \" -xcuda \")\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "external_project/CMakeLists.txt" : {
      "ObjectId" : "ba1b00255813ae9d2165a8fdcf74a619aec2f0d5",
      "LastModified" : "2017-11-26T00:35:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ExternalProject_Add(trilinos\n\n#    PREFIX external_project\n\n# #http://trilinos.sandia.gov/download/files/trilinos-11.10.2-Source.tar.bz2\n\n#    URL file:///${PROJECT_SOURCE_DIR}/external_project/src/trilinos-11.10.2-Source.tar.bz2\n\n#    SOURCE_DIR ${PROJECT_SOURCE_DIR}/external_project/trilinos\n\n#    INSTALL_COMMAND \"\" )\n\n#ExternalProject_Get_Property(trilinos SOURCE_DIR)\n\n#ExternalProject_Get_Property(trilinos BINARY_DIR)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#if(NOT TBB_ROOT)\n\n#ExternalProject_Add(tbb\n\n#    PREFIX external_project\n\n#    URL file:///${PROJECT_SOURCE_DIR}/external_project/src/tbb43_20141204oss_src.tgz\n\n#    SOURCE_DIR ${PROJECT_SOURCE_DIR}/external_project/tbb43_20141204oss\n\n#    INSTALL_COMMAND \"make\" )\n\n# ExternalProject_Get_Property(tbb BINARY_DIR)\n\n# SET(TBB_INSTALL_DIR ${BINARY_DIR})\n\n#endif()\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#if(NOT MOAB_ROOT)\n\n#ExternalProject_Add(moab\n\n#    PREFIX external_project\n\n#    URL file:///${PROJECT_SOURCE_DIR}/external_project/src/?????\n\n#    SOURCE_DIR ${PROJECT_SOURCE_DIR}/external_project/?????\n\n#    INSTALL_COMMAND \"make\" )\n\n# ExternalProject_Get_Property(moab BINARY_DIR)\n\n# SET(MOAB_INSTALL_DIR ${BINARY_DIR})\n\n#endif()\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#SET(TBB_INSTALL_DIR  ${PROJECT_SOURCE_DIR}/external_project/tbb43_20140724oss)\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#ExternalProject_Add(thrust\n\n#    PREFIX external_project\n\n#    URL  http://thrust.googlecode.com/files/thrust-1.5.1.zip\n\n#    SOURCE_DIR ${PROJECT_SOURCE_DIR}/external_project/thrust\n\n#    INSTALL_COMMAND \"\" )\n\n#ExternalProject_Get_Property(thrust SOURCE_DIR)\n\n#ExternalProject_Get_Property(thrust BINARY_DIR)\n\n#INCLUDE_DIRECTORIES(${SOURCE_DIR}/include )\n\n#LINK_DIRECTORIES(${BINARY_DIR})\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#ExternalProject_Add(pugixml\n\n#    PREFIX external_project\n\n#    #    URL   https://pugixml.googlecode.com/files/pugixml-1.2.tar.gz\n\n#    URL file:///${PROJECT_SOURCE_DIR}/external_project/src/pugixml-1.2.tar.gz\n\n#    SOURCE_DIR ${PROJECT_SOURCE_DIR}/external_project/pugixml\n\n#    INSTALL_COMMAND \"\" )\n\n#ExternalProject_Get_Property(pugixml SOURCE_DIR)\n\n#ExternalProject_Get_Property(pugixml BINARY_DIR)\n\n#INCLUDE_DIRECTORIES(${SOURCE_DIR}/include )\n\n#LINK_DIRECTORIES(${BINARY_DIR})\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#ExternalProject_Add(Eigen\n\n#    PREFIX external_project\n\n#    URL  http://bitbucket.org/eigen/eigen/get/3.2.0.tar.bz2\n\n#    SOURCE_DIR ${PROJECT_SOURCE_DIR}/external_project/Eigen\n\n#    INSTALL_COMMAND \"\" )\n\n#ExternalProject_Get_Property(Eigen SOURCE_DIR)\n\n#ExternalProject_Get_Property(Eigen BINARY_DIR)\n\n#INCLUDE_DIRECTORIES(${SOURCE_DIR}/include )\n\n#LINK_DIRECTORIES(${BINARY_DIR})\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#ExternalProject_Add(PHG\n\n#    PREFIX external_project\n\n#    URL  http://lsec.cc.ac.cn/phg/download/phg-0.8.6-20120910.tar.bz2\n\n#    SOURCE_DIR ${PROJECT_SOURCE_DIR}/external_project/Eigen\n\n#    INSTALL_COMMAND \"\" )\n\n#ExternalProject_Get_Property(PHG SOURCE_DIR)\n\n#ExternalProject_Get_Property(PHG BINARY_DIR)\n\n#INCLUDE_DIRECTORIES(${SOURCE_DIR}/include )\n\n#LINK_DIRECTORIES(${BINARY_DIR})\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#ExternalProject_Add(Xdmf\n\n#    PREFIX external_project\n\n#    #GIT_REPOSITORY git://paraview.org/Xdmf.git\n\n#    SOURCE_DIR ${PROJECT_SOURCE_DIR}/external_project/Xdmf\n\n#    INSTALL_COMMAND \"\" )\n\n#ExternalProject_Get_Property(Xdmf SOURCE_DIR)\n\n#ExternalProject_Get_Property(Xdmf BINARY_DIR)\n\n#INCLUDE_DIRECTORIES(${SOURCE_DIR}/libsrc ${BINARY_DIR}/libsrc )\n\n#LINK_DIRECTORIES(${BINARY_DIR}/bin)\n\n#SET(XDMF_NO_MPI ON)",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "external_project/SAMRAI/CMakeLists.txt" : {
      "ObjectId" : "b3be0d76f623c1aa5928272c7e9f4c98aa2b746f",
      "LastModified" : "2017-11-02T04:48:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SET(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/CMake ${CMAKE_MODULE_PATH})\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###################################################################################################\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#SET(TBB_ROOT /pkg/tbb/20170604/)\n\n#FIND_PACKAGE(TBB)\n\n#IF (TBB_FOUND)\n\n#    SET(HAVE_TBB 1)\n\n#ENDIF (TBB_FOUND)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#SET(SAMRAI_F77_FUNC \"(name,NAME) name ## _\")\n\n#SET(SAMRAI_F77_FUNC_ \"(name,NAME) name ## _\")\n\n#SET(LACKS_STRSTREAM ON)\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#CHECK_CXX_SOURCE_COMPILES(\n\n#        \"#include <strstream>\n\n#        int main(){\n\n#         using namespace std;\n\n#         ostrstream oss; oss << 10;\n\n#        }\"\n\n#        HAVE_OSTRSTREAM)\n\n#check_cxx_symbol_exists(std::ostrstream  strstream HAVE_OSTRSTREAM)\n\n#IF(NOT HAVE_OSTRSTREAM)\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#ENDIF(NOT HAVE_OSTRSTREAM)\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#CONFIGURE_FILE(${CMAKE_CURRENT_BINARY_DIR}/SAMRAI_config.h.in\n\n#        ${CMAKE_CURRENT_BINARY_DIR}/include/SAMRAI/SAMRAI_config.h @ONLY)\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###################################################################################################\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# inc header\n",
        "Line" : 358,
        "CharPositionInLine" : 18
      },
      "9" : {
        "Text" : "# inc header\n",
        "Line" : 359,
        "CharPositionInLine" : 24
      },
      "10" : {
        "Text" : "# inc header\n",
        "Line" : 360,
        "CharPositionInLine" : 36
      },
      "11" : {
        "Text" : "# inc header\n",
        "Line" : 361,
        "CharPositionInLine" : 17
      },
      "12" : {
        "Text" : "# inc header\n",
        "Line" : 362,
        "CharPositionInLine" : 25
      },
      "13" : {
        "Text" : "# inc header\n",
        "Line" : 363,
        "CharPositionInLine" : 21
      },
      "14" : {
        "Text" : "# inc header\n",
        "Line" : 364,
        "CharPositionInLine" : 17
      },
      "15" : {
        "Text" : "# inc header\n",
        "Line" : 365,
        "CharPositionInLine" : 25
      },
      "16" : {
        "Text" : "# inc header\n",
        "Line" : 366,
        "CharPositionInLine" : 21
      },
      "17" : {
        "Text" : "# inc header\n",
        "Line" : 367,
        "CharPositionInLine" : 17
      },
      "18" : {
        "Text" : "# inc header\n",
        "Line" : 368,
        "CharPositionInLine" : 25
      },
      "19" : {
        "Text" : "# inc header\n",
        "Line" : 369,
        "CharPositionInLine" : 21
      },
      "20" : {
        "Text" : "# inc header\n",
        "Line" : 370,
        "CharPositionInLine" : 17
      },
      "21" : {
        "Text" : "# inc header\n",
        "Line" : 371,
        "CharPositionInLine" : 25
      },
      "22" : {
        "Text" : "# inc header\n",
        "Line" : 372,
        "CharPositionInLine" : 21
      },
      "23" : {
        "Text" : "# inc header\n",
        "Line" : 373,
        "CharPositionInLine" : 17
      },
      "24" : {
        "Text" : "# inc header\n",
        "Line" : 374,
        "CharPositionInLine" : 25
      },
      "25" : {
        "Text" : "# inc header\n",
        "Line" : 375,
        "CharPositionInLine" : 21
      },
      "26" : {
        "Text" : "# inc header\n",
        "Line" : 376,
        "CharPositionInLine" : 18
      },
      "27" : {
        "Text" : "# inc header\n",
        "Line" : 377,
        "CharPositionInLine" : 26
      },
      "28" : {
        "Text" : "# inc header\n\n# inc header\n",
        "Line" : 378,
        "CharPositionInLine" : 22
      },
      "29" : {
        "Text" : "# inc header\n",
        "Line" : 380,
        "CharPositionInLine" : 30
      },
      "30" : {
        "Text" : "# inc header\n",
        "Line" : 381,
        "CharPositionInLine" : 26
      },
      "31" : {
        "Text" : "# inc header\n",
        "Line" : 382,
        "CharPositionInLine" : 22
      },
      "32" : {
        "Text" : "# inc header\n",
        "Line" : 383,
        "CharPositionInLine" : 30
      },
      "33" : {
        "Text" : "# inc header\n",
        "Line" : 384,
        "CharPositionInLine" : 26
      },
      "34" : {
        "Text" : "# inc header\n",
        "Line" : 385,
        "CharPositionInLine" : 22
      },
      "35" : {
        "Text" : "# inc header\n",
        "Line" : 386,
        "CharPositionInLine" : 30
      },
      "36" : {
        "Text" : "# inc header\n",
        "Line" : 387,
        "CharPositionInLine" : 26
      },
      "37" : {
        "Text" : "# inc header\n",
        "Line" : 388,
        "CharPositionInLine" : 22
      },
      "38" : {
        "Text" : "# inc header\n",
        "Line" : 389,
        "CharPositionInLine" : 30
      },
      "39" : {
        "Text" : "# inc header\n",
        "Line" : 390,
        "CharPositionInLine" : 26
      },
      "40" : {
        "Text" : "# inc header\n",
        "Line" : 391,
        "CharPositionInLine" : 21
      },
      "41" : {
        "Text" : "# inc header\n",
        "Line" : 392,
        "CharPositionInLine" : 22
      },
      "42" : {
        "Text" : "# inc header\n",
        "Line" : 504,
        "CharPositionInLine" : 14
      },
      "43" : {
        "Text" : "######################################################################################################################\n",
        "Line" : 663,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#            PERMISSIONS OWNER_READ GROUP_READ\n",
        "Line" : 681,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 45
    },
    "external_project/xdmf/XDMFConfig.cmake" : {
      "ObjectId" : "2f7e2a8f2832a0e545684961b98ac5476f0e3670",
      "LastModified" : "2017-11-02T04:48:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external_project/xdmf/XDMFConfigVersion.cmake" : {
      "ObjectId" : "60163acf4cfa15b074438b83fcfdbdf6745d0ca1",
      "LastModified" : "2017-11-02T04:48:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check whether the requested PACKAGE_FIND_VERSION is compatible\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "external_project/xdmf/XML2Config.cmake" : {
      "ObjectId" : "c0b573a5e8e662f8031aab861025b8741588c830",
      "LastModified" : "2017-11-02T04:48:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external_project/xdmf/XML2ConfigVersion.cmake" : {
      "ObjectId" : "913bf63c8fc6f76faeae93814d0330a3cb3c1855",
      "LastModified" : "2017-11-02T04:48:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check whether the requested PACKAGE_FIND_VERSION is compatible\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "local_conf.cmake" : {
      "ObjectId" : "0cd9a5df3a89898af91cfe6230b15675a754d4af",
      "LastModified" : "2017-11-26T00:35:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SLOW_FIRST ,  FAST_FIRST\n",
        "Line" : 22,
        "CharPositionInLine" : 39
      },
      "1" : {
        "Text" : "#SET(SAMRAI_DIR /pkg/SAMRAI/3.11.0-debug/)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/simpla/CMakeLists.txt" : {
      "ObjectId" : "af02d04d9f7db2a15d6e63ac5f43070d4001db41",
      "LastModified" : "2017-11-26T00:35:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#TARGET_LINK_LIBRARIES(SimPlaLib\n\n#        netcdf ${HDF5_LIBRARIES} ${MPI_LIBRARIES} ${TBB_LIBRARIES}\n\n#          utilities geometry parallel data mesh engine geometry physics third_part\n\n#        )\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/simpla/algebra/CMakeLists.txt" : {
      "ObjectId" : "165dab44a115e58c2b70ae7425100f0af8626bd3",
      "LastModified" : "2017-11-02T04:48:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#target_link_libraries(physics ${HDF5_LIBRARIES} ${MPI_LIBRARIES} ${LUA_LIBRARIES} ${TBB_LIBRARIES})\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/simpla/application/CMakeLists.txt" : {
      "ObjectId" : "ce3b8ad816ef5c58a94e428cb3c1eaaf17214a59",
      "LastModified" : "2017-11-02T04:48:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/simpla/data/CMakeLists.txt" : {
      "ObjectId" : "38d728ba4efa1718005f0625f861cb0e94c112e2",
      "LastModified" : "2017-11-02T04:48:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/simpla/data/backend/CMakeLists.txt" : {
      "ObjectId" : "e3d4286e2814100d0feff18873bb6d72f9eda581",
      "LastModified" : "2017-11-26T00:35:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FIND_PACKAGE(VTK)\n\n#MESSAGE(\"-- VTK version: ${VTK_VERSION}\")\n\n#SET(XML2_DIR ${PROJECT_SOURCE_DIR}/external_project/xdmf)\n\n#SET(XDMF_DIR ${PROJECT_SOURCE_DIR}/external_project/xdmf)\n\n#FIND_PACKAGE(XDMF)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#FILE(GLOB database_SRC  *.cpp *.h )\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#IF (XDMF_FOUND)\n\n#    LIST(APPEND data_backend_SRC DataEntryXDMF3.cpp)\n\n#ENDIF (XDMF_FOUND)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#${VTK_INCLUDE_DIR}\n",
        "Line" : 31,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "#${VTK_LIBRARIES}\n",
        "Line" : 38,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "src/simpla/engine/CMakeLists.txt" : {
      "ObjectId" : "c7cfb0b71c69f628be2ac22ba0419592ae7b82bd",
      "LastModified" : "2017-11-02T04:48:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/simpla/engine/backend/CMakeLists.txt" : {
      "ObjectId" : "9026350fe9fb0e777b060f8e0e94be17ba3a2b79",
      "LastModified" : "2017-11-02T04:48:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#    SET_TARGET_PROPERTIES(third_part PROPERTIES COMPILE_FLAGS \" -xcuda \")\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/simpla/geometry/CMakeLists.txt" : {
      "ObjectId" : "6ae557331298733effe28d5d7d723a7b7a5d7b16",
      "LastModified" : "2017-11-02T04:48:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILE(GLOB geometry_SRC ./*.cpp)\n\n#add_library(geometry ${geometry_SRC} Cube.cpp CoordinateSystem.cpp)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/simpla/geometry/backend/CMakeLists.txt" : {
      "ObjectId" : "0f1b1da5f813e1cc26baac6f4e42d431ccf512bd",
      "LastModified" : "2017-11-02T04:48:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/simpla/mesh/CMakeLists.txt" : {
      "ObjectId" : "b50e4f1e68c4b64fa073b696124bf0d81694f37e",
      "LastModified" : "2017-11-02T04:48:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#IF (NOT MOAB_DIR)\n\n#    SET(MOAB_DIR /pkg/sigma/1.2/lib)\n\n#    SET(MeshKit_DIR /pkg/sigma/1.2/lib)\n\n#ENDIF (NOT MOAB_DIR)\n\n#\n\n#FIND_PACKAGE(MOAB REQUIRED)\n\n#FIND_PACKAGE(MeshKit REQUIRED)\n\n#IF (MOAB_FOUND)\n\n#    MESSAGE(\" -- MOAB Found: ${MOAB_LIBRARIES};  INCLUDE: ${MOAB_INCLUDE_DIRS}\")\n\n#ENDIF (MOAB_FOUND)\n\n#IF (MeshKit_FOUND)\n\n#    MESSAGE(\" -- MeshKit Found: ${MESHKIT_LIBRARIES};  INCLUDE: ${MESHKIT_INCLUDE_DIRS}\")\n\n#ENDIF (MeshKit_FOUND)\n\n#\n\n#INCLUDE_DIRECTORIES(${MOAB_INCLUDE_DIRS} ${MESHKIT_INCLUDE_DIRS})\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/simpla/numeric/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2017-11-02T04:48:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/simpla/parallel/CMakeLists.txt" : {
      "ObjectId" : "e4536ede6824a0c7926f67cbcff2e49e5f09b4f7",
      "LastModified" : "2017-11-26T00:35:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILE(GLOB parallel_SRC./*.cpp)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/simpla/physics/CMakeLists.txt" : {
      "ObjectId" : "a4ac24443a406be96deea2f1b25c6b437962e992",
      "LastModified" : "2017-11-02T04:48:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/simpla/predefine/CMakeLists.txt" : {
      "ObjectId" : "3fcd8aca10f23485d6b168ff7cf06e4b1d7165c0",
      "LastModified" : "2017-11-02T04:48:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_SUBDIRECTORY(case)\n\n#ADD_SUBDIRECTORY(field_solver)\n\n#ADD_SUBDIRECTORY(contexts)\n\n#ADD_SUBDIRECTORY(fokker_planck)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/simpla/scheme/CMakeLists.txt" : {
      "ObjectId" : "c2183af8fd6ac8501f9d453a2531c37e67a8909e",
      "LastModified" : "2017-11-02T04:48:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_library(FVM ${FVM_SRC})",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/simpla/utilities/CMakeLists.txt" : {
      "ObjectId" : "a20ba30db29cc6963234bd03fcc10daf5a421def",
      "LastModified" : "2017-11-02T04:48:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#${HDF5_LIBRARIES} ${MPI_LIBRARIES}  ${TBB_LIBRARIES}\n\n###########################################################\n\n#IF (DEFINED ENV{LUA_ROOT})\n\n#\n\n#    SetEntity(LUA_ROOT $ENV{LUA_ROOT})\n\n#\n\n#    find_path(LUA_INCLUDE_DIR\n\n#            NAMES lua.h\n\n#            HINTS ${MPI_ROOT}/include/\n\n#            DOC \"MPI header file path\"\n\n#            )\n\n#    SET(LUA_LIBRARY_DIRS ${LUA_ROOT}/lib/)\n\n#\n\n#    find_library(LUA_LIBRARY liblua.a HINTS ${LUA_LIBRARY_DIRS})\n\n#\n\n#    SET(LUA_LIBRARIES ${LUA_LIBRARY})\n\n#\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(LUA DEFAULT_MSG LUA_LIBRARIES LUA_INCLUDE_DIRS LUA_ROOT)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#add_library(lua_parser LuaObject.cpp ConfigParser.cpp)\n\n#target_link_libraries(lua_parser ${LUA_LIBRARIES})\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "2ab0e3c26646dd066295ce73af010b24ed1db9ae",
      "LastModified" : "2017-11-02T04:48:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(engine)\n\n#add_subdirectory(algebra)\n\n#add_subdirectory(geometry)\n\n#add_subdirectory(concept)\n\n#add_subdirectory(data)",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/Modeling/CMakeLists.txt" : {
      "ObjectId" : "ac042abbcb74c77ca3122d9117239a409798b0f6",
      "LastModified" : "2017-11-26T00:35:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SET_TARGET_PROPERTIES(tokamak PROPERTIES COMPILE_FLAGS \" -xcuda \")\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/algebra/CMakeLists.txt" : {
      "ObjectId" : "ba6a2d4bfc1b575ceb7b18a6550966fdd80c6235",
      "LastModified" : "2017-11-26T00:35:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#target_compile_options(field_diff_calculus_cartesian_test PUBLIC -DCARTESIAN_COORDINATE_SYSTEM)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/data/CMakeLists.txt" : {
      "ObjectId" : "0af71e067d2b1a2268b9674a67e8e64cfbdf6c1e",
      "LastModified" : "2017-11-26T00:35:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SET(XML2_DIR ${PROJECT_SOURCE_DIR}/external_project/xdmf)\n\n#SET(XDMF_DIR ${PROJECT_SOURCE_DIR}/external_project/xdmf)\n\n#FIND_PACKAGE(XDMF)\n\n#\n\n#ADD_EXECUTABLE(XDMF_dummy   XDMF_dummy.cpp)\n\n#target_include_directories(XDMF_dummy BEFORE PRIVATE   ${XDMF_INCLUDE_DIRS}  )\n\n#target_link_libraries(XDMF_dummy  ${XDMF_LIBRARIES}  )",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/engine/CMakeLists.txt" : {
      "ObjectId" : "78d89c309f5b149512357ec22ad73b128f1f0a08",
      "LastModified" : "2017-11-26T00:35:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/geometry/CMakeLists.txt" : {
      "ObjectId" : "da53d99878db8ee5d65cec156079870fe6262904",
      "LastModified" : "2017-11-26T00:35:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/parallel/CMakeLists.txt" : {
      "ObjectId" : "4889052e93cc6f6eea04b5e5a11392d234474d53",
      "LastModified" : "2017-11-26T00:35:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/particle/CMakeLists.txt" : {
      "ObjectId" : "2b61dba7081e3b6664ed98ccb6b855a90bac3a1c",
      "LastModified" : "2017-11-26T00:35:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/utilities/CMakeLists.txt" : {
      "ObjectId" : "7627c82bdb273cb065a7fa29004594fa968d63d8",
      "LastModified" : "2017-11-26T00:35:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set_target_properties(array_dummy PROPERTIES COMPILE_FLAGS \"  -xcuda\")\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 58
  },
  "ElapsedTime" : 1821
}