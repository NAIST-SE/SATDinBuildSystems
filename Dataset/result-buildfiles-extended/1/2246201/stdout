{
  "Repository" : "2246201",
  "Revision" : "HEAD",
  "ObjectId" : "5931df88c61e0b0250212e94d8be013c21481ba7",
  "CommitTime" : "2019-04-12T10:25:36Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "af435132a01c86308509727c16973596133efe1c",
      "LastModified" : "2019-03-11T08:43:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Evolution-Data-Server build script\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Base Version: This is for API/version tracking for things like\n\n# D-Bus server files. This should always be the major/minor of\n\n# the stable version or stable version to be.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This number is meaningless, but we're now stuck with it in our\n\n# library names for backward compatibility.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Required for FindIntltool module\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Required for 'disttest' and 'ditcheck' of DistTarget module\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ******************************\n\n# D-Bus versioning\n\n# ******************************\n\n# Actual name can be modified with DBUS_SERVICES_PREFIX option\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ******************************\n\n# Library versioning\n\n# ******************************\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Keep these two definitions in agreement.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Keep these two definitions in agreement.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Keep these two definitions in agreement.\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Warn about API usage that violates our minimum requirements.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# These will suppress warnings about newly-deprecated symbols. Ideally\n\n# these settings should match our minimum requirements and we will clean\n\n# up any new deprecation warnings after bumping our minimum requirements.\n\n# But if the warnings get to be overwhelming, use fixed versions instead.\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Optional Packages\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Load modules from the source tree\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Packagers might want to need different settings for the RPATH related things\n\n# From experience, especially CMAKE_BUILD_WITH_INSTALL_RPATH might need to be\n\n# switched to ON, if CMake fails to set the right values during make install\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# CMAKE_INSTALL_RPATH is set below\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# CMake modules\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Project custom modules\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# ******************************\n\n# Special directories\n\n# ******************************\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# If you add something here, consider whether or not you also\n\n# need to add it to one or more .pc.in files (for Connector, etc)\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# On Win32 there is no \"rpath\" mechanism. We install the private\n\n# shared libraries in $libdir, meaning the DLLs will actually be in\n\n# $bindir. This means just having $bindir in PATH will be enough.\n",
        "Line" : 199,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# *******************\n\n# D-BUS service stuff\n\n# *******************\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\n\n# D-Bus requires Windows full path, not Unix-like, like the one provided by MSYS\n\n#\n",
        "Line" : 222,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# It is correct for this to be in ${CMAKE_INSTALL_PREFIX}/lib, even on systems where that\n\n# does not match ${LIB_INSTALL_DIR}. This is what systemd uses on such platforms.\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# ******************************\n\n# Dependencies\n\n# ******************************\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Setup compiler/linker flags\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# ******************************\n\n# required executables\n\n# ******************************\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ******************************\n\n# db_load checking, it's optional\n\n# ******************************\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ******************************\n\n# deflateInit is a #define, use deflateEnd instead\n\n# ******************************\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# *******************\n\n# Check for ICU\n\n# *******************\n\n#\n\n# ICU started shipping pkg-config files but it's not present\n\n# on many systems, if we don't find the pkg-config\n\n# file then let's fallback on a manual check\n",
        "Line" : 346,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# *************************\n\n# Check for GTK+\n\n# *************************\n",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# **************************************************************\n\n# Check for WebKitGTK+ and json-glib for OAuth2 authentications\n\n# **************************************************************\n",
        "Line" : 387,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Outlook.com requires client secret only for Web applications\n\n#if(WITH_OUTLOOK_CLIENT_SECRET STREQUAL \"\")\n\n#\tset(WITH_OUTLOOK_CLIENT_SECRET \"\")\n\n#endif(WITH_OUTLOOK_CLIENT_SECRET STREQUAL \"\")\n",
        "Line" : 420,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# ******************************************\n\n# Check whether to build examples/demos\n\n# ******************************************\n",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# *******************************\n\n# Check for GNOME Online Accounts\n\n# *******************************\n",
        "Line" : 441,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# **********************************************\n\n# Check if backend per process should be enabled\n\n# **********************************************\n",
        "Line" : 453,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# ***********************************\n\n# Check for libsecret and gcr-base\n\n# ***********************************\n",
        "Line" : 459,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# ******************************\n\n# libdb checking\n\n# ******************************\n",
        "Line" : 468,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# ******************************\n\n# iconv checking\n\n# ******************************\n",
        "Line" : 505,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# ******************************\n\n# Backtraces for debugging\n\n# ******************************\n",
        "Line" : 538,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# ******************************\n\n# Check for nl_langinfo features\n\n# ******************************\n",
        "Line" : 578,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# *******************************************************\n\n# Check to see if strftime supports the use of %l and %k\n\n# *******************************************************\n",
        "Line" : 588,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# ******************************\n\n# system mail stuff\n\n# ******************************\n",
        "Line" : 611,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# ******************************\n\n# Timezone checks\n\n# ******************************\n",
        "Line" : 625,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# ******************************\n\n# gethostbyaddr_r prototype\n\n# ******************************\n",
        "Line" : 642,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# ******************************\n\n# gethostbyname_r prototype\n\n# ******************************\n",
        "Line" : 661,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# ******************************\n\n# IPv6 support and getaddrinfo calls\n\n# ******************************\n",
        "Line" : 680,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# **********************************\n\n# Weather calendar backend support\n\n# **********************************\n",
        "Line" : 733,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# ************************************************\n\n# evolution-alarm-notify : Canberra-GTK for Sound\n\n# ************************************************\n",
        "Line" : 756,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# ******************************\n\n# File locking\n\n# ******************************\n",
        "Line" : 767,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# ******************************\n\n# sendmail operation\n\n# ******************************\n",
        "Line" : 791,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# ******************************\n\n# sqlite3 flags\n\n# ******************************\n",
        "Line" : 804,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# ******************************\n\n# Google flags\n\n# ******************************\n",
        "Line" : 809,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# ******************************\n\n# Checks for large file support\n\n# ******************************\n",
        "Line" : 834,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# ******************************\n\n# libical tweaks, part I\n\n# ******************************\n",
        "Line" : 894,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# *****\n\n# libical.pc from libical-0.43 has a bug in its CFlags.\n\n# It wants apps to include <libical/ical*.h> but it's CFlags make it difficult\n\n# to differentiate between <libical/ical.h> and <ical.h>\n\n# We have fixed all our instances to use <libical/ical.h>.\n\n# Work-around the buggy CFlags for the 0.43 version.\n\n# *****\n",
        "Line" : 900,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# ******************************\n\n# subparts flags\n\n# ******************************\n",
        "Line" : 912,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# ******************************\n\n# libical tweaks, part II (re-using CALENDAR modules)\n\n# ******************************\n",
        "Line" : 941,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# ******************************\n\n# Vala binding\n\n# ******************************\n",
        "Line" : 971,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Generate the ${PROJECT_NAME}-config.h file\n",
        "Line" : 994,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Add it as the last, because it looks for targets defined above\n",
        "Line" : 1006,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 61
    },
    "cmake/modules/CheckTarget.cmake" : {
      "ObjectId" : "71824a990ad4c84a3d58661da549d4e9e2735eab",
      "LastModified" : "2016-10-10T13:16:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CheckTarget.cmake\n\n#\n\n# Defines a custom target 'check', which gathers test programs like 'make check'\n\n# This is taken from https://cmake.org/Wiki/CMakeEmulateMakeCheck\n\n#\n\n# What you do is to call command:\n\n# add_check_test(_name)\n\n#   where _name is the name of the test, as defined by add_executable().\n\n#   Note it is a good idea to use EXCLUDE_FROM_ALL within the add_executable().\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Disable this to not have verbose tests\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/CodeCoverageGCOV.cmake" : {
      "ObjectId" : "bf670e0a5977dbddaa0fa5bd89b000c66418b2ae",
      "LastModified" : "2016-10-10T13:16:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CodeCoverageGCOV.cmake\n\n#\n\n# Adds options ENABLE_CODE_COVERAGE, which builds the project with\n\n# code coverage support\n\n#\n\n# It sets variables:\n\n# CODE_COVERAGE_DEFINES - to be used with target_compile_definitions() and similar\n\n# CODE_COVERAGE_CFLAGS - to be used with target_compile_options() and similar for C code\n\n# CODE_COVERAGE_CXXFLAGS - to be used with target_compile_options() and similar for C++ code\n\n# CODE_COVERAGE_LDFLAGS - to be used with target_link_libraries() and similar\n\n#\n\n# These variables should be added as the last in the options, because they change compilation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/DistTargets.cmake" : {
      "ObjectId" : "2e6f037bf10c0f3438242af384b98df906eb7119",
      "LastModified" : "2016-10-12T08:06:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# DistTarget.cmake\n\n#\n\n# Defines custom targets related to distributing source code.\n\n# It requires to have populated 'PROJECT_NAME' and 'PROJECT_VERSION' variables,\n\n# possibly through the project() command. It also uses 'PROJECT_DISTCONFIGURE_PARAMS'\n\n# variable when configuring the unpacked distribution.\n\n#\n\n# Added targets:\n\n# dist - only creates a tarball\n\n# disttest - creates a tarball and 'make && make install' it to a temporary prefix\n\n#    to verify that the code can be built and installed; it also verifies\n\n#    that the first line of the NEWS file contains the same version as\n\n#    the tarball and that it claims today's date.\n\n# distcheck - similar to 'disttest', only runs also 'make check' before installing\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Filenames for tarball\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# remove any left-over directory\n",
        "Line" : 33,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# extract the tarball\n",
        "Line" : 36,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# verify the NEWS file contains what it should contain\n",
        "Line" : 39,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# create a _build sub-directory\n",
        "Line" : 43,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# configure the project with PROJECT_DISTCHECK_PARAMS\n",
        "Line" : 46,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# 'make' the project\n",
        "Line" : 54,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# 'make check' the project\n",
        "Line" : 62,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# 'make install' the project\n",
        "Line" : 65,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# if we get this far, then everything worked, thus clean up\n",
        "Line" : 68,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# and show the good news\n",
        "Line" : 71,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# 'make install' the project\n",
        "Line" : 78,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# if we get this far, then everything worked, thus clean up\n",
        "Line" : 81,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# and show the good news\n",
        "Line" : 84,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 15
    },
    "cmake/modules/FindIntltool.cmake" : {
      "ObjectId" : "8e223e9d7fc007071aa7b602a593032d79ecaea2",
      "LastModified" : "2018-10-30T14:45:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindIntltool.cmake\n\n#\n\n# Searches for intltool and gettext. It aborts, if anything cannot be found.\n\n# Requires GETTEXT_PO_DIR to be set to full path of the po/ directory.\n\n#\n\n# Output is:\n\n#   INTLTOOL_UPDATE  - an intltool-update executable path, as found\n\n#   INTLTOOL_EXTRACT  - an intltool-extract executable path, as found\n\n#   INTLTOOL_MERGE  - an intltool-merge executable path, as found\n\n#\n\n# and anything from the FindGettext module.\n\n#\n\n# The below provided macros require GETTEXT_PACKAGE to be set.\n\n#\n\n# intltool_add_check_potfiles_target()\n\n#    Adds a check-potfiles target, which verifies that all files with translations\n\n#    are added in the POTFILES.in file inside GETTEXT_PO_DIR. This macro can be called\n\n#    only inside GETTEXT_PO_DIR.\n\n#\n\n# intltool_add_pot_file_target()\n\n#    Creates a new target pot-file, which generates ${GETTEXT_PACKAGE}.pot file into\n\n#    the CMAKE_CURERNT_BINARY_DIR. This target is not part of ALL.\n\n#    This can be called only inside GETTEXT_PO_DIR.\n\n#\n\n# intltool_process_po_files()\n\n#    Processes all files in the GETTEXT_PO_DIR and generates .gmo files for them\n\n#    in CMAKE_CURRENT_BINARY_DIR. These are added into a new target gmo-files.\n\n#    It also installs them into proper location under LOCALE_INSTALL_DIR.\n\n#    This can be called only inside GETTEXT_PO_DIR.\n\n#\n\n# intltool_setup_po_dir()\n\n#    Shortcut to setup intltool's po/ directory by adding all custom targets\n\n#    and such. this can be called only inside GETTEXT_PO_DIR.\n\n#\n\n# intltool_merge(_in_filename _out_filename ...args)\n\n#    Adds rule to call intltool-merge. The args are optional arguments.\n\n#    This can be called in any folder, only the GETTEXT_PO_DIR should\n\n#    be properly set, otherwise the call will fail.\n\n#\n\n# add_appdata_file(_infilename _outfilename)\n\n#    A shortcut to call intltool-merge() for an appdata file and install it\n\n#    to ${SHARE_INSTALL_PREFIX}/metainfo\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindKRB5.cmake" : {
      "ObjectId" : "a78f83bd8f0bc6bf445a901718702b3c6138a938",
      "LastModified" : "2016-12-01T10:06:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindKRB5.cmake\n\n#\n\n# Searches for KRB5 library\n\n#\n\n# The output is:\n\n#    HAVE_KRB5 - set to ON, if Kerberos 5 support is enabled and libraries found\n\n#    HAVE_MIT_KRB5 - set to ON, when found MIT implementation\n\n#    HAVE_HEIMDAL_KRB5 - set to ON, when found Heimdal implementation\n\n#    KRB5_CFLAGS - CFLAGS to use with target_compile_options() and similar commands\n\n#    KRB5_LDFLAGS - LDFLAGS to use with target_link_libraries() and similar commands\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindLDAP.cmake" : {
      "ObjectId" : "a98bbba76e30bcc944be6569c918829b802a8bd5",
      "LastModified" : "2019-04-12T10:25:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindLDAP.cmake\n\n#\n\n# Searches for OpenLDAP/SunLDAP library\n\n#\n\n# Adds these options:\n\n#    -DWITH_OPENLDAP=ON/OFF/PATH - enable/disable OpenLDAP, eventually set prefix to find it\n\n#    -DWITH_SUNLDAP=OFF/ON/PATH - enable/disable SunLDAP, eventually set prefix to find it\n\n#    -DWITH_STATIC_LDAP=OFF/ON - enable/disable static LDAP linking\n\n#\n\n# The OpenLDAP has precedence over SunLDAP, if both are specified. The default is to use OpenLDAP.\n\n#\n\n# The output is:\n\n#    HAVE_LDAP - set to ON, if LDAP support is enabled and libraries found\n\n#    SUNLDAP - set to ON, when using SunLDAP implementation\n\n#    LDAP_CFLAGS - CFLAGS to use with target_compile_options() and similar commands\n\n#    LDAP_INCLUDE_DIRS - include directories to use with target_include_directories() and similar commands\n\n#    LDAP_LIBS - libraries to use with target_link_libraries() and similar commands\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\t\t# libldap might depend on OpenSSL... We need to pull\n\n#\t\t# in the dependency libs explicitly here since we're\n\n#\t\t# not using libtool for the configure test.\n\n#\t\tif test -f ${LDAP_PREFIX}/lib${LIB_SUFFIX}/libldap.la; then\n\n#\t\t\tLDAP_LIBS=\"`. ${LDAP_PREFIX}/libPLIB_SUFFIX}/libldap.la; echo $dependency_libs` $LDAP_LIBS\"\n\n#\t\tfi\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindPhonenumber.cmake" : {
      "ObjectId" : "04d1056854ca134e148f76e5497eaa46a06f3c88",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindPhonenumber.cmake\n\n#\n\n# Searches for Google's libphonenumber library\n\n#\n\n# Defines -DWITH_PHONENUMBER=PATH variable, which defaults to OFF.\n\n# The output is:\n\n#    ENABLE_PHONENUMBER - ON, when the libphonenumber is used\n\n#    PHONENUMBER_RAW_INPUT_NEEDED - Whether Parse() or ParseAndKeepRawInput() must be used to get the country-code source\n\n#    PHONENUMBER_DEFINITIONS - definitions to use with target_compile_definitions() and similar commands\n\n#    PHONENUMBER_INCLUDE_DIRS - include directories to use with target_include_directories() and similar commands\n\n#    PHONENUMBER_LIB_DIRS - directory where libphonenumber can be found\n\n#    PHONENUMBER_LDFLAGS - LDFLAGS to use with target_link_libraries() and similar commands\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindSMIME.cmake" : {
      "ObjectId" : "0f284c26fefdf354acff940ff8b2aa9a14395d48",
      "LastModified" : "2018-10-30T14:45:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindSMIME.cmake\n\n#\n\n# Searches for Mozilla's NSS and NSPR libraries, unless -DENABLE_SMIME=OFF is used\n\n#\n\n# The output is:\n\n#    mozilla_nspr - if non-empty, then a pkg-config package name for nspr\n\n#    mozilla_nss - if non-empty, then a pkg-config package name for nss\n\n#    MANUAL_NSPR_INCLUDES - if non-empty, then contains manual nspr include directory, used for target_include_directories() and similar commands\n\n#    MANUAL_NSPR_LIBS - if non-empty, then contains manual nspr libraries, used for target_link_libraries() and similar commands\n\n#    MANUAL_NSS_INCLUDES - if non-empty, then contains manual nss include directory, used for target_include_directories() and similar commands\n\n#    MANUAL_NSS_LIBS - if non-empty, then contains manual nss libraries, used for target_link_libraries() and similar commands\n\n#    MOZILLA_NSS_LIB_DIR - a lib directory where Mozilla stores its libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use pkg-config when none is specified\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Manual search, even when pkg-config failed\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ******************\n\n# Check for NSPR 4\n\n# ******************\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# *****************\n\n# Check for NSS 3\n\n# *****************\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/modules/GLibTools.cmake" : {
      "ObjectId" : "d40953c4fb9f7409bf98651b42d86459f065f8ee",
      "LastModified" : "2018-10-30T14:45:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# GLibTools.cmake\n\n#\n\n# Provides functions to run glib tools.\n\n#\n\n# Functions:\n\n#\n\n# glib_mkenums(_output_filename_noext _enums_header _define_name)\n\n#    runs glib-mkenums to generate enumtypes .h and .c files from _enums_header.\n\n#    It searches for files in the current source directory and exports to the current\n\n#    binary directory.\n\n#\n\n#    An example call is:\n\n#        glib_mkenums(camel-enumtypes camel-enums.h CAMEL_ENUMTYPES_H)\n\n#        which uses camel-enums.h as the source of known enums and generates\n\n#        camel-enumtypes.h which will use the CAMEL_ENUMTYPES_H define\n\n#        and also generates camel-enumtypes.c with the needed code.\n\n#\n\n# glib_genmarshal(_output_filename_noext _prefix _marshallist_filename)\n\n#    runs glib-genmarshal to process ${_marshallist_filename} to ${_output_filename_noext}.c\n\n#    and ${_output_filename_noext}.h files in the current binary directory, using\n\n#    the ${_prefix} as the function prefix.\n\n#\n\n# gdbus_codegen(_xml _interface_prefix _c_namespace _files_prefix _list_gens)\n\n#    runs gdbus-codegen to generate GDBus code from _xml file description,\n\n#    using _interface_prefix, _c_namespace and _files_prefix as arguments.\n\n#    The _list_gens is a list variable are stored expected generated files.\n\n#\n\n#    An example call is:\n\n#        set(GENERATED_DBUS_LOCALE\n\n#               e-dbus-localed.c\n\n#\t        e-dbus-localed.h\n\n#        )\n\n#        gdbus_codegen(org.freedesktop.locale1.xml org.freedesktop. E_DBus e-dbus-localed GENERATED_DBUS_LOCALE)\n\n#\n\n# gdbus_codegen_custom(_xml _interface_prefix _c_namespace _files_prefix _list_gens _args)\n\n#    The same as gdbus_codegen() except allows to pass other arguments to the call,\n\n#    like for example --c-generate-object-manager\n\n#\n\n# add_gsettings_schemas(_target _schema0 ...)\n\n#    Adds one or more GSettings schemas. The extension is supposed to be .gschema.xml. The schema file generation\n\n#    is added as a dependency of _target.\n\n#\n\n# glib_compile_resources _sourcedir _outputprefix _cname _inxml ...deps)\n\n#    Calls glib-compile-resources as defined in _inxml and using _outputprefix and_cname as other arguments\n\n#    beside _sourcedir. The optional arguments are other dependencies.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# this is required to compile gsettings schemas like after 'make install,\n\n# because there is no better way in CMake to run a code/script after\n\n# the whole `make install`\n",
        "Line" : 226,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "# Do both, to have 'uninstall' working properly\n",
        "Line" : 234,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Compile gsettings schemas and ensure that all of them are in the place.\n",
        "Line" : 240,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# This is called too early, when the schemas are not installed yet during `make install`\n\n#\n\n# compile_gsettings_schemas()\n\n#    Optionally (based on ENABLE_SCHEMAS_COMPILE) recompiles schemas at the destination folder\n\n#    after install. It's necessary to call it as the last command in the toplevel CMakeLists.txt,\n\n#    thus the compile runs when all the schemas are installed.\n\n#\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/modules/GObjectIntrospection.cmake" : {
      "ObjectId" : "52dd9bb67bbad73afeb3c5ac546da6936c9cc97b",
      "LastModified" : "2019-03-12T17:01:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# GObjectIntrospection.cmake\n\n#\n\n# Adds an option -DENABLE_INTROSPECTION=OFF and helper commands which work only\n\n# when the introspection is enabled.\n\n#\n\n# Most of the script is copied and tuned from libical, which states:\n\n#    Copyright (C) 2010, Pino Toscano, <pino at kde.org>\n\n#\n\n#    Redistribution and use is allowed according to the terms of the BSD license.\n\n#    For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the macro does something only if ENABLE_INTROSPECTION is ON\n\n# optionally ${_gir_name}_SKIP_TYPELIB can be set to ON to not build .typelib file, only the .gir file\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Transform the gir filename to something which can reference through a variable\n\n## without automake/make complaining, eg Gtk-2.0.gir -> Gtk_2_0_gir\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Namespace and Version is either fetched from the gir filename\n\n# or the _NAMESPACE/_VERSION variable combo\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# _PROGRAM is an optional variable which needs its own --program argument\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Variables which provides a list of things\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Reuse the LIBTOOL variable from by automake if it's set\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "cmake/modules/GtkDoc.cmake" : {
      "ObjectId" : "cc6cc007a429cb7ce7552d2da2f054f6c498fc6c",
      "LastModified" : "2019-04-12T10:00:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# GtkDoc.cmake\n\n#\n\n# Macros to support develper documentation build from sources with gtk-doc.\n\n#\n\n# Note that every target and dependency should be defined before the macro is\n\n# called, because it uses information from those targets.\n\n#\n\n# add_gtkdoc(_module _namespace _deprecated_guards _srcdirsvar _depsvar _ignoreheadersvar)\n\n#    Adds rules to build developer documentation using gtk-doc for some part.\n\n#    Arguments:\n\n#       _module - the module name, like 'camel'; it expects ${_part}-docs.sgml.in in the CMAKE_CURRENT_SOURCE_DIR\n\n#       _namespace - namespace for symbols\n\n#       _deprecated_guards - define name, which guards deprecated symbols\n\n#       _srcdirsvar - variable with dirs where the source files are located\n\n#       _depsvar - a variable with dependencies (targets)\n\n#       _ignoreheadersvar - a variable with a set of header files to ignore\n\n#\n\n# It also adds custom target gtkdoc-rebuild-${_module}-sgml to rebuild the sgml.in\n\n# file based on the current sources.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add them as the last, thus in-tree headers/libs have precedence\n",
        "Line" : 99,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# first add target dependencies, to have built libraries first, then add those non-target dependencies\n",
        "Line" : 114,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# ***************************************\n\n# sgml.in file rebuild, unconditional\n\n# ***************************************\n",
        "Line" : 204,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "cmake/modules/InstalledTests.cmake" : {
      "ObjectId" : "82380fa02656f3bdc644fdf77a2e6e485d27d614",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# InstalledTests.cmake\n\n#\n\n# Adds option ENABLE_INSTALLED_TESTS and helper macros to manage\n\n# installed test. There are also set variables:\n\n# INSTALLED_TESTS_EXEC_DIR - where to store installed tests and eventually its data\n\n# INSTALLED_TESTS_META_DIR - where to store .test meta files for installed tests\n\n#\n\n# install_test_if_enabled(_test_target _type _environ)\n\n#    Adds rules to install a test whose target is _test_target (the one\n\n#    used for add_executable()), while the target name should match\n\n#    the executable name. The _type and _environ are used for populating\n\n#    the .test meta file.\n\n#\n\n# install_behave_tests_if_enabled(_testsvar _type _environ)\n\n#    Adds rules to install the 'behave' tests as stored in _testsvar\n\n#    in the current source directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/PkgConfigEx.cmake" : {
      "ObjectId" : "866fe7c0749e726f8e57870d19597ef9838db040",
      "LastModified" : "2016-10-10T13:16:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# PkgConfigEx.cmake\n\n#\n\n# Extends CMake's PkgConfig module with commands:\n\n#\n\n# pkg_check_modules_for_option(_option_name _option_description _prefix _module0)\n\n#\n\n#    which calls `pkg_check_modules(_prefix _module0)` and if <_prefix>_FOUND is False,\n\n#    then prints an error with a hint to disaable the _option_name if needed.\n\n#\n\n# pkg_check_exists(_output_name _pkg)\n\n#\n\n#    calls pkg-config --exists for _pkg and stores the result to _output_name.\n\n#\n\n# pkg_check_at_least_version(_output_name _pkg _version)\n\n#\n\n#    calls pkg-config --at-least-version=_version for _pkg and stores the result to _output_name.\n\n#\n\n# pkg_check_exact_version(_output_name _pkg _version)\n\n#\n\n#    calls pkg-config --exact-version=_version for _pkg and stores the result to _output_name.\n\n#\n\n# pkg_check_variable(_output_name _pkg _name)\n\n#\n\n#    gets a variable named _name from package _pkg and stores the result into _output_name\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Negate the result, because 0 means 'found'\n",
        "Line" : 40,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Negate the result, because 0 means 'found'\n",
        "Line" : 52,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Negate the result, because 0 means 'found'\n",
        "Line" : 64,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "cmake/modules/PrintableOptions.cmake" : {
      "ObjectId" : "23ce356991d2761a6bd803b1ae19af6d5f560760",
      "LastModified" : "2016-10-10T13:16:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# PrintableOptions.cmake\n\n#\n\n# Provides functions to manage printable otpions,\n\n# which can be printed at the end of the configuration\n\n#\n\n# add_printable_variable_bare(_name)\n\n#    adds variable named _name to the list of prinable options\n\n#\n\n# add_printable_option(_name _description _default_value)\n\n#    the same as option() commnd, only also notes this option for later printing\n\n#\n\n# add_printable_variable(_name _description _default_value)\n\n#    sets a new cached STRING variable and adds it to the list of printable options\n\n#\n\n# add_printable_variable_path(_name _description _default_value)\n\n#    sets a new cached PATH variable and adds it to the list of printable options\n\n#\n\n# print_build_options()\n\n#    prints all the build options previously added with the above functions\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/SetupBuildFlags.cmake" : {
      "ObjectId" : "284445455a79a98a342958077129e035a916b829",
      "LastModified" : "2019-03-14T13:16:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SetupBuildFlags.cmake\n\n#\n\n# Setups compiler/linker flags, skipping those which are not supported.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/UninstallTarget.cmake" : {
      "ObjectId" : "7ccfcf39476a8ad9c3cb3e1e42395bd440ff40fa",
      "LastModified" : "2016-10-10T13:16:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# UninstallTarget.cmake\n\n#\n\n# Defines a custom target named 'uninstall'\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "data/CMakeLists.txt" : {
      "ObjectId" : "a366a9568a39b0370be438c48cfed415f278a406",
      "LastModified" : "2018-10-30T14:45:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ********************************\n\n# evolution-alarm-notify\n\n# ********************************\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To have GNOME Shell show the GNotification notifications from it; otherwise it ignores them\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ********************************\n\n# GSettings schemas\n\n# ********************************\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ********************************\n\n# GConf convert file\n\n# ********************************\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ********************************\n\n# Images\n\n# ********************************\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "docs/CMakeLists.txt" : {
      "ObjectId" : "90bb2b596385587e0022e26d1ece5315802e745a",
      "LastModified" : "2016-10-10T13:16:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "docs/reference/CMakeLists.txt" : {
      "ObjectId" : "9a9144b7ee965e50211b4450681ebf0fd53eb7a6",
      "LastModified" : "2016-10-10T13:16:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "docs/reference/camel/CMakeLists.txt" : {
      "ObjectId" : "55f7e7a37ee498b6df794f63520b0c5d9c23d818",
      "LastModified" : "2018-10-30T14:45:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "docs/reference/evolution-data-server/CMakeLists.txt" : {
      "ObjectId" : "3e7aa47e7406433de2e54902d5516532e4ac931a",
      "LastModified" : "2018-10-30T14:45:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "docs/reference/private/CMakeLists.txt" : {
      "ObjectId" : "26c305333b4deb2e965cc6daadafb52d6f39306f",
      "LastModified" : "2016-10-12T08:06:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "po/CMakeLists.txt" : {
      "ObjectId" : "9e81642a72ed308831aec05fcd05bae11775fb05",
      "LastModified" : "2016-10-10T13:16:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "5bb6e9dc7c53cd67ab78aa946b6bb97ddf2f53ea",
      "LastModified" : "2016-10-12T08:06:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/addressbook/CMakeLists.txt" : {
      "ObjectId" : "85d56e647fb52e65f41b1f6c053ac58e482f17b0",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/addressbook/backends/CMakeLists.txt" : {
      "ObjectId" : "dced9968e7a0ee22362231e0e9b6e8ee364bdfbc",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/addressbook/backends/carddav/CMakeLists.txt" : {
      "ObjectId" : "819911fa10e98afbfa7560f8d12896f7b0cafc24",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/addressbook/backends/file/CMakeLists.txt" : {
      "ObjectId" : "adcea66a2f5e23d64d253509c17e2d95dcee48e6",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/addressbook/backends/google/CMakeLists.txt" : {
      "ObjectId" : "09e2beeae80884c73c6767773ae6dc09b070c9c5",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Private utility library.\n\n# This is split out to allow it to be unit tested.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/addressbook/backends/google/tests/CMakeLists.txt" : {
      "ObjectId" : "dd82805876f85992658f66a4479c787a8518c29a",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/addressbook/backends/ldap/CMakeLists.txt" : {
      "ObjectId" : "9c8747b5acf1f1bdea2e8bb945b31977c940f5b1",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/addressbook/libebook-contacts/CMakeLists.txt" : {
      "ObjectId" : "e9e3259736d55957eb2cb719cafa77f1e063cc1a",
      "LastModified" : "2018-11-14T11:49:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We put the C++ code into a separate static library, so that we can use\n\n# the C linker for libebook-contacts. This avoids that libebook-contacts\n\n# depends on the C++ Standard Library, even if phone number support is\n\n# disabled.\n",
        "Line" : 65,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/addressbook/libebook/CMakeLists.txt" : {
      "ObjectId" : "6ed4c13f69ff9fa3a2de7261e8d4568720dc5f35",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/addressbook/libedata-book/CMakeLists.txt" : {
      "ObjectId" : "8972c9bd5cef86c01a37c8b5e2850459e2a4907b",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/calendar/CMakeLists.txt" : {
      "ObjectId" : "d02647c7d4bdc698888c7ea320cd9e013f60e9e1",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/calendar/backends/CMakeLists.txt" : {
      "ObjectId" : "56b8c38366b082d866c9340f849aacef61e3a71e",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/calendar/backends/caldav/CMakeLists.txt" : {
      "ObjectId" : "274bf5d2eddfeac71df83207c18b876eea94b92a",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/calendar/backends/contacts/CMakeLists.txt" : {
      "ObjectId" : "eb581b07b38d77659f0e12895aa1f6d05d893ad2",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/calendar/backends/file/CMakeLists.txt" : {
      "ObjectId" : "453ade64ff7f484ce050c461f128b81d2e66b416",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/calendar/backends/gtasks/CMakeLists.txt" : {
      "ObjectId" : "4664980b00662012df4326892236dea394543c2d",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/calendar/backends/http/CMakeLists.txt" : {
      "ObjectId" : "307109b7138772684cbe11d36998a69cc781ee82",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/calendar/backends/weather/CMakeLists.txt" : {
      "ObjectId" : "5dc2941b8fe89e4c877e73cbf71b1c7ff08b8025",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/calendar/libecal/CMakeLists.txt" : {
      "ObjectId" : "b1cdf8d5a191a7768d8255a9a165018bc606abf1",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/calendar/libedata-cal/CMakeLists.txt" : {
      "ObjectId" : "749fdf68dafd92ceb8e7057253b7bd6cdc8a61fa",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/camel/CMakeLists.txt" : {
      "ObjectId" : "be626a890bb8b7e1c22462cba9f68005642940d0",
      "LastModified" : "2019-03-14T13:16:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/camel/providers/CMakeLists.txt" : {
      "ObjectId" : "c1e5859d863cced2e4a5dc9a50b38a60eeb0b8c7",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/camel/providers/imapx/CMakeLists.txt" : {
      "ObjectId" : "dcdf24b8eff5e069b2be3d421c9c2c82d4788331",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/camel/providers/local/CMakeLists.txt" : {
      "ObjectId" : "24afeb4854cef3874e1c536f9819c1d14f15b520",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/camel/providers/nntp/CMakeLists.txt" : {
      "ObjectId" : "e6fdc743de6bd03a6d3d4e6c14144f53aac397c8",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/camel/providers/pop3/CMakeLists.txt" : {
      "ObjectId" : "1adf8bd477c28a261240b137a4fd68bd3287d123",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/camel/providers/sendmail/CMakeLists.txt" : {
      "ObjectId" : "2c4d6cac07828e66ebecd8b22fe33eeaec266d1f",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/camel/providers/smtp/CMakeLists.txt" : {
      "ObjectId" : "d47fbc0801bcbc3c0c5c8e6f3be5b63c177d9bab",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/camel/tests/CMakeLists.txt" : {
      "ObjectId" : "f868e5f0114d6360df42512aca675ce8ae34ff89",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Not using EXCLUDE_FROM_ALL here, to have these built always\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/camel/tests/folder/CMakeLists.txt" : {
      "ObjectId" : "2f42bc12bbc830419315ffff56ffe55f7aa7f6a7",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/camel/tests/lib/CMakeLists.txt" : {
      "ObjectId" : "f7a8b10d24e8e84085a2fbfd7c04a9fbc4fdc003",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/camel/tests/message/CMakeLists.txt" : {
      "ObjectId" : "2802ee10706fb37cd115d57c1374449be7be4064",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/camel/tests/mime-filter/CMakeLists.txt" : {
      "ObjectId" : "6024ec5ffda4c77f4d61ceee17be744ede3aa6d9",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/camel/tests/misc/CMakeLists.txt" : {
      "ObjectId" : "272925cc36e092f96dd73244d2f6f2b7418be2e6",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/camel/tests/smime/CMakeLists.txt" : {
      "ObjectId" : "a37b799da570892755dbe395fae8d910f681801f",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\tpgp-mime\n\n#\tpkcs7\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/examples/CMakeLists.txt" : {
      "ObjectId" : "201678f07186ad838c556c3a63f7814109ff72a0",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/examples/cursor/CMakeLists.txt" : {
      "ObjectId" : "ae1a3ff3676fa003363912acfd981beff05dd21b",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/libebackend/CMakeLists.txt" : {
      "ObjectId" : "592b6996819f2cbcb717f457023c3e04778dee30",
      "LastModified" : "2019-03-14T13:16:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/libedataserver/CMakeLists.txt" : {
      "ObjectId" : "17be15469d0cbe4d0a95e5e33e6df7eea0b9cd9c",
      "LastModified" : "2019-03-14T13:16:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We put the C++ code into a separate static library, so that we can use\n\n# the C linker for libebook-contacts.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/libedataserverui/CMakeLists.txt" : {
      "ObjectId" : "eebb7ec112d3c41216a4894671d6ce9d6a266032",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/CMakeLists.txt" : {
      "ObjectId" : "d43357c07db6452ae393a53f89093f2ef8755135",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/cache-reaper/CMakeLists.txt" : {
      "ObjectId" : "375cfcc0d39c7ffc48f67bb194ec668a1fc400e0",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/gnome-online-accounts/CMakeLists.txt" : {
      "ObjectId" : "e86cc7210b6dbfa77c3200d51b3af46938aa960e",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/google-backend/CMakeLists.txt" : {
      "ObjectId" : "7f6250528aec7946d85fe6e38d0e697591f3b47d",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/oauth2-services/CMakeLists.txt" : {
      "ObjectId" : "be92c4469ff5dfb4b5384e405db1fd80f3c659d9",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/outlook-backend/CMakeLists.txt" : {
      "ObjectId" : "d0a7294168871bd3b4aaded54f5b0916cfbd57b9",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/secret-monitor/CMakeLists.txt" : {
      "ObjectId" : "05e49e29387241791e2232e8e6785d17910ff880",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/trust-prompt/CMakeLists.txt" : {
      "ObjectId" : "b3f1f883c7faeca448c80576252dcf737319ad74",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/webdav-backend/CMakeLists.txt" : {
      "ObjectId" : "ab7e97c99eeae4003d1f73b5768a2345e4419585",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/yahoo-backend/CMakeLists.txt" : {
      "ObjectId" : "dab665413d607ab828f480f404804ac47cbf8f76",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/private/CMakeLists.txt" : {
      "ObjectId" : "c2de59bba8e80ce6d507c71a901eac4614b9eaf2",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/services/CMakeLists.txt" : {
      "ObjectId" : "908d33f23a213c68a7c3c5f3ad94f1d450bf59ae",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/services/evolution-addressbook-factory/CMakeLists.txt" : {
      "ObjectId" : "37bfc638eae9944a37b718d1845460aa591fd110",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/services/evolution-alarm-notify/CMakeLists.txt" : {
      "ObjectId" : "a4c0a41e72db787fd7d5f8a83e65b1f9d63ea5e7",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/services/evolution-calendar-factory/CMakeLists.txt" : {
      "ObjectId" : "19e4df637de4bb579664605d4fe55d851e23e2eb",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/services/evolution-source-registry/CMakeLists.txt" : {
      "ObjectId" : "a6462a4d04d93cb03fc662b6f187066f9b22fdce",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/services/evolution-user-prompter/CMakeLists.txt" : {
      "ObjectId" : "3e727568f7c96f46e08893e189f09a2d41216353",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tools/CMakeLists.txt" : {
      "ObjectId" : "e13c25f4f0a465b52a03b6daab184de68916222a",
      "LastModified" : "2019-03-14T13:16:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tools/addressbook-export/CMakeLists.txt" : {
      "ObjectId" : "f7ed6f6733fb2db6e53af83aa4a8a4bb141e3648",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tools/list-sources/CMakeLists.txt" : {
      "ObjectId" : "a82824d9b70eea697ae7e5b8dfe2658ffe13cd71",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/vala/CMakeLists.txt" : {
      "ObjectId" : "1815ad78bb0ae0da60c13e7b0d76a15684b12599",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ***********************************\n\n# camel\n\n# ***********************************\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ***********************************\n\n# libedataserver\n\n# ***********************************\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ***********************************\n\n# libedataserverui\n\n# ***********************************\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ***********************************\n\n# libebook-contacts\n\n# ***********************************\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ***********************************\n\n# libebook\n\n# ***********************************\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ***********************************\n\n# Install all VAPI files\n\n# ***********************************\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "bba04282a675e915399abf04555d77936749beb0",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Not using EXCLUDE_FROM_ALL here, to have these built always\n",
        "Line" : 7,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "tests/book-migration/CMakeLists.txt" : {
      "ObjectId" : "13e758532eececcc2a5303a22b7eae85df07be54",
      "LastModified" : "2019-03-14T13:16:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If db_load is detected at configure time, then we've built\n\n# an addressbook.db to test the migration from 3.6 -> Current.\n\n#\n\n# Instead of committing a BDB file directly which might have\n\n# compatibility issues, we use a text dump (for SQLite we\n\n# rely on compatilbility).\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Should be kept ordered approximately from least to most difficult/complex\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is a little cheat, it's not a real test, but can be built with the macro\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This rule should be run once every stable release and then the\n\n# newly created 'contacts.db' file added to git.\n\n#\n\n# For instance, when the EDS version is 3.12, the file:\n\n#   $(top_srcdir)/tests/book-migration/db/3.12/contacts.db\n\n# will be created as a result of running 'make setup-migration'.\n\n#\n\n# Note that the 'setup-migration-test' program can be compiled\n\n# with EDS versions back to 3.0. If you really need to rebuild\n\n# the older test sandboxes, then setup-migration-test can be\n\n# manually compiled and used with older builds of EDS.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tests/book-migration/db/CMakeLists.txt" : {
      "ObjectId" : "38a9d8d567ed26ffa7ecedd87f821569aee5bd23",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/libebook-contacts/CMakeLists.txt" : {
      "ObjectId" : "bd68cdacb02ff91f57f9ac4116204279318bc0fd",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Should be kept ordered approximately from least to most difficult/complex\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/libebook/CMakeLists.txt" : {
      "ObjectId" : "0596acbded0731d261bd5eefe5c18463fdf1fca4",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Should be kept ordered approximately from least to most difficult/complex\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/libebook/client/CMakeLists.txt" : {
      "ObjectId" : "e48416218deca9a6e369b229edc23f4bb6eb0bc1",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Should be kept ordered approximately from least to most difficult/complex\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Skip these from 'make check' and installed tests, they take too long or require special setup\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/libebook/vcard/CMakeLists.txt" : {
      "ObjectId" : "40df81f8ff6665106e4e4649c94eac5f6b55e0f2",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/libecal/CMakeLists.txt" : {
      "ObjectId" : "fbf0371803f2b0abe781b1624c331001e9b53ba3",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Should be kept ordered approximately from least to most difficult/complex\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# test-ecal-get-free-busy:\n\n#   broken by design, the API needs to be fixed.\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/libecal/client/CMakeLists.txt" : {
      "ObjectId" : "b580028e0ced29bc2fde5be1a99a4f99c290e5e9",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Should be kept ordered approximately from least to most difficult/complex\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/libedata-book/CMakeLists.txt" : {
      "ObjectId" : "8bcc6c12323c6b7b1a479ad62d961e90f3ba0e09",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Should be kept ordered approximately from least to most difficult/complex\n\n#\n\n# Note that these tests must be run in order:\n\n#   test-sqlite-cursor-posix-initial,\n\n#   test-sqlite-cursor-en-US-migrated,\n\n#   test-sqlite-cursor-posix-migrated\n\n#\n\n# This is because each migrated test changes the\n\n# locale and reloads the same addressbook of the previous test.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/libedata-cal/CMakeLists.txt" : {
      "ObjectId" : "b676fae98730219f6ce95c35a4b7a4e7a67f2ab5",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Should be kept ordered approximately from least to most difficult/complex\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/libedataserver/CMakeLists.txt" : {
      "ObjectId" : "13833069aabe713130e6b1da6a5c6c8c4a8ddc6c",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Should be kept ordered approximately from least to most difficult/complex\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/test-server-utils/CMakeLists.txt" : {
      "ObjectId" : "333801917993b5ba26467c7258f9f851e2105f9f",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ***************************\n\n# Utility library\n\n# ***************************\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ***************************\n\n# Local Unit Test\n\n# ***************************\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/test-server-utils/services/CMakeLists.txt" : {
      "ObjectId" : "491d4da9713282e34efd47ae3a8625dbaab3ed7e",
      "LastModified" : "2018-11-08T17:44:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 100
  },
  "ElapsedTime" : 3919
}