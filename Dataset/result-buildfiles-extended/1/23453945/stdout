{
  "Repository" : "23453945",
  "Revision" : "HEAD",
  "ObjectId" : "e8fe2156743216d4489b437e29b8dc73f93f9408",
  "CommitTime" : "2019-03-18T14:51:57Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "71be410bcaf9e7ca1ecbc1a7d5945d9336df84d8",
      "LastModified" : "2018-10-03T21:27:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Compile with c++11 or c++0x depending on the compiler version\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Make compiler messages nice with colored tags.\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#if user does not specify prefix we assign it to the exec directory\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Define the default build type to be Release\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Add additional CXX flags if we use the Debug option\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#------------------------------------------------------------------------------\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Install options\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#------------------------------------------------------------------------------\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Find required packages.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Find ROOT install.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#Find curses library used for Scan library\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#Add the core components directory.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#Add the scan controller directory.\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#Add the root dictionary builder directory.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#Add the root dictionary directory.\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#Add the simpleScan source directories.\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#Install default config files.\n",
        "Line" : 111,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "#Build/install the miscellaneous stuff\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "cmake/modules/FindROOT.cmake" : {
      "ObjectId" : "8afa642e2669ffab86f593d7a58d041ad3ce3416",
      "LastModified" : "2016-12-21T16:21:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Finds ROOT instalation\n\n# This module sets up ROOT information \n\n# It defines:\n\n# ROOT_FOUND          If the ROOT is found\n\n# ROOT_INCLUDE_DIR    PATH to the include directory\n\n# ROOT_LIBRARIES      Most common libraries\n\n# ROOT_GUI_LIBRARIES  Most common gui libraries\n\n# ROOT_LIBRARY_DIR    PATH to the library directory \n\n#\n\n#Last updated by K. Smith (ksmit218@utk.edu) on Apr 10, 2014\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Find the root-config executable\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#If we found root-config then get all relevent varaiables\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---Report the status of finding ROOT-------------------\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindSimpleScan.cmake" : {
      "ObjectId" : "660cef43d626777a19b8bc2ecb17d6f8aa9720cc",
      "LastModified" : "2019-01-24T21:34:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n#\n\n# - Finds SimpleScan instalation\n\n# This module sets up SimpleScan information \n\n# It defines:\n\n#\n\n# SimpleScan_FOUND          If the SimpleScan installation is found\n\n# SimpleScan_INCLUDE_DIR    PATH to the include directory\n\n# SimpleScan_BIN_DIR        PATH to the bin directory\n\n# SimpleScan_SCAN_LIB       PATH to the SimpleScan scan library\n\n# SimpleScan_OPT_LIB        PATH to the option handler library\n\n#\n\n# Last updated by C. R. Thornsberry (cthornsb@vols.utk.edu) on Oct. 24th, 2017\n\n#\n\n# - Possible use of this cmake module.\n\n# Copy the following 4 lines into your main CMakeLists.txt\n\n#\n\n##Find simpleScan install.\n\n#find_package (SimpleScan REQUIRED)\n\n#include_directories(${SimpleScan_INCLUDE_DIR})\n\n#mark_as_advanced(SimpleScan_SCAN_LIB SimpleScan_OPT_LIB)\n\n#\n\n# Use SimpleScan_SCAN_LIB and SimpleScan_OPT_LIB as you would any other\n\n# shared library. e.g.\n\n#\n\n#target_link_libraries(<Executable> SomeOtherLibrary ${SimpleScan_SCAN_LIB} ${SimpleScan_OPT_LIB})\n\n#\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---Report the status of finding SimpleScan-------------------\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "core/CMakeLists.txt" : {
      "ObjectId" : "4af2d88c732d53262b7bb036b043cdacc3bed9b3",
      "LastModified" : "2017-10-18T21:23:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy header files to the install directory.\n",
        "Line" : 2,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "core/source/CMakeLists.txt" : {
      "ObjectId" : "a9860091f6885c2fba9049735ae6025ad326408e",
      "LastModified" : "2019-01-24T21:34:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build static libs\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build shared libs\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "dict/CMakeLists.txt" : {
      "ObjectId" : "7fa5b32b86f3d9e479ed05c9b2659cb223357b92",
      "LastModified" : "2019-01-24T21:34:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Use \"rcbuild\" to generate data structure source files.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Install the new Structures file.\n",
        "Line" : 22,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#Copy the new Structures file to the top-level include directory.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Use rootcint to generate dictionary source file.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Use \"unregister\" to remove the \"Error <TCling::RegisterModule>\" error message.\n",
        "Line" : 33,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#Disable unused variable compiler warnings.\n\n# This is necessary because we removed part of the code, so some of\n\n# the variables are now unused and the compiler will likely complain.\n",
        "Line" : 36,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#Add the sources to the library.\n",
        "Line" : 41,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "#Add the sources to the library.\n",
        "Line" : 44,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "#Create static library.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Create shared library for the dictionary.\n",
        "Line" : 52,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 10
    },
    "rcbuild/CMakeLists.txt" : {
      "ObjectId" : "b7171fcacb6ba2e6e5a9df673e4cd1917ee5eb75",
      "LastModified" : "2017-10-18T21:23:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "rcbuild/scripts/CMakeLists.txt" : {
      "ObjectId" : "503b78efc863df293311ee112c55a23dc1c13ab8",
      "LastModified" : "2017-10-18T21:23:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "rcbuild/source/CMakeLists.txt" : {
      "ObjectId" : "3238864dc94e2c8fdf7b3ba65f3a681236cc0fc9",
      "LastModified" : "2019-01-24T21:34:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Build rcbuild executable.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Build unregister tool.\n",
        "Line" : 7,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "scan/CMakeLists.txt" : {
      "ObjectId" : "4af2d88c732d53262b7bb036b043cdacc3bed9b3",
      "LastModified" : "2017-10-18T21:23:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy header files to the install directory.\n",
        "Line" : 2,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "scan/source/CMakeLists.txt" : {
      "ObjectId" : "01a2741ced6f50a1c0f65bd1a90a40f91c0b913e",
      "LastModified" : "2019-01-24T21:34:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Set the scan sources that we will make a lib out of\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Add the sources to the library\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Create ScanStatic library and add ncurses if we have it\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build shared libs\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "share/CMakeLists.txt" : {
      "ObjectId" : "728334a6cdcd8b4df9e43045f25f1f8a37e22bb8",
      "LastModified" : "2017-10-18T21:23:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Configure and install the module file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "source/CMakeLists.txt" : {
      "ObjectId" : "3c9aced94dd1cb876fa934627acdd9970ab24eb9",
      "LastModified" : "2019-01-24T21:34:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Set the scan sources that we will make a lib out of.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Add the sources to the library.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Generate a static library.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Build simpleScan executable.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tools/CMakeLists.txt" : {
      "ObjectId" : "b3e0263a39dc66f5659d853aba1bdb38379b42b6",
      "LastModified" : "2019-01-24T21:34:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy header files to the install directory.\n",
        "Line" : 2,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "tools/source/CMakeLists.txt" : {
      "ObjectId" : "2b8b429bfebe749338764768435c0522d3f4ac38",
      "LastModified" : "2019-01-24T21:34:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build shared libs\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#SimpleScan tools.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build shared libs\n",
        "Line" : 58,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#Tools requiring linking against simpleScan root dictionary.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    }
  },
  "FileTypes" : {
    "CMAKE" : 15
  },
  "ElapsedTime" : 669
}