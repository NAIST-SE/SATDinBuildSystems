{
  "Repository" : "171361",
  "Revision" : "HEAD",
  "ObjectId" : "49244b9e8d89c574926429899517dca73f25a782",
  "CommitTime" : "2015-09-20T20:23:42Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "f87fb6b2404e52a8d757047dcd85aa9350d69174",
      "LastModified" : "2013-06-19T23:25:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# coolfluid cmake build system\n\n#\n\n# Command line options for cmake:\n\n# -DCMAKE_BUILD_TYPE=DEBUG will set the build type\n\n# -DCF3_SKIP_FORTRAN=:BOOL=ON will not test for fortran language\n\n# -G\"Visual Studio 9 2008\" will generate for WIN32\n\n# -DCMAKE_INSTALL_PREFIX=DIR will specify where to install\n\n# -DCF3_PLUGIN_DIRS:STRING=\"/dir/path1;/dir/path2\"\n\n#\n\n# TODO\n\n#\n\n# * try using precompiled headers and add a check to their support\n\n#\n\n# * implement and coolfluid3_add_executable\n\n# * add license to cmake files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# cmake behavior\n\n##############################################################################\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################################################\n\n# project definition and versioning\n\n##############################################################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# disallow in-source build\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# option to skip fortran language\n\n# kernel does not need fortran but some plugins might\n\n# developers that know that they wont need it may turn it off in systems where is not available\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# optionally include personal options ( alternative to passing a cache initialization to cmake)\n\n# developers may create this file and to define options that they don't want on the cache\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# include other configurations\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##############################################################################\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# define variables with coolfluid versions\n",
        "Line" : 56,
        "CharPositionInLine" : 26
      },
      "10" : {
        "Text" : "# define our own macros\n",
        "Line" : 58,
        "CharPositionInLine" : 24
      },
      "11" : {
        "Text" : "# define project files extensions\n",
        "Line" : 60,
        "CharPositionInLine" : 32
      },
      "12" : {
        "Text" : "# include testing support\n",
        "Line" : 62,
        "CharPositionInLine" : 17
      },
      "13" : {
        "Text" : "# define where to install the files after building\n",
        "Line" : 64,
        "CharPositionInLine" : 30
      },
      "14" : {
        "Text" : "# reset variables used for the build and set DEPS_ROOT if needed\n",
        "Line" : 66,
        "CharPositionInLine" : 26
      },
      "15" : {
        "Text" : "##############################################################################\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "##############################################################################\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# add user global options\n",
        "Line" : 75,
        "CharPositionInLine" : 31
      },
      "18" : {
        "Text" : "# check for operating system features\n",
        "Line" : 77,
        "CharPositionInLine" : 32
      },
      "19" : {
        "Text" : "# check compiler features\n",
        "Line" : 79,
        "CharPositionInLine" : 33
      },
      "20" : {
        "Text" : "# define how build modes behave ( may override some options )\n",
        "Line" : 81,
        "CharPositionInLine" : 28
      },
      "21" : {
        "Text" : "# defined default compilation flags and linking rules per architecture\n",
        "Line" : 83,
        "CharPositionInLine" : 28
      },
      "22" : {
        "Text" : "# take options into effect\n",
        "Line" : 85,
        "CharPositionInLine" : 30
      },
      "23" : {
        "Text" : "##############################################################################\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "##############################################################################\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# dir with macros to be installed\n",
        "Line" : 93,
        "CharPositionInLine" : 26
      },
      "26" : {
        "Text" : "# dir with tools and scripts\n",
        "Line" : 95,
        "CharPositionInLine" : 26
      },
      "27" : {
        "Text" : "# dir with documentation to be installed\n",
        "Line" : 97,
        "CharPositionInLine" : 24
      },
      "28" : {
        "Text" : "# find sofwtare dependencies\n",
        "Line" : 99,
        "CharPositionInLine" : 26
      },
      "29" : {
        "Text" : "# check for subversion support\n",
        "Line" : 101,
        "CharPositionInLine" : 31
      },
      "30" : {
        "Text" : "##############################################################################\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "##############################################################################\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# dir includes\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# add dir with kernel config (automatic generated headers)\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# define the resources directory\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# add dir with external kernel dependencies but locally included\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# add dir with kernel sources\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# add dir with unit tests\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# sandbox is where we play around before putting stuff in the released code, off by default\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##############################################################################\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# add dir with kernel plugins\n\n# these are independent source trees that happen to be distributed with the kernel for convinience\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# find plugins\n\n# developer may set several base directories that host multiple plugins each\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "##############################################################################\n\n# summary\n\n##############################################################################\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "##############################################################################\n\n# finalize build\n\n##############################################################################\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# processes the list of orphan files\n",
        "Line" : 201,
        "CharPositionInLine" : 32
      },
      "46" : {
        "Text" : "# dump relevant variables in the log file\n",
        "Line" : 204,
        "CharPositionInLine" : 25
      },
      "47" : {
        "Text" : "# packaging instructions\n",
        "Line" : 206,
        "CharPositionInLine" : 24
      },
      "CommentCount" : 48
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "932f9f0c213430ddca5fb1d65a42d40970340722",
      "LastModified" : "2012-06-04T10:07:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## This file should be placed in the root directory of your project.\n\n## Then modify the CMakeLists.txt file in the root directory of your\n\n## project to incorporate the testing dashboard.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cf3/CMakeLists.txt" : {
      "ObjectId" : "dc71731f3035a05b26cebcd976222864fd75a299",
      "LastModified" : "2012-04-27T15:37:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# common library provides the component environment\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# mesh library provides the mesh database handling\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# math library provides mathematical operations\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# physiscs library provides access to physical models\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# solver library provides access to PDE solvers\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# library that exposes the python module\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# UI provides the user interface\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# tools harbours miscellaneous tools to support coolfluid development\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# add dir with tutorial applications\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cf3/Tools/CMakeLists.txt" : {
      "ObjectId" : "4e70939c343365e88b980f704b561e5757fb3846",
      "LastModified" : "2011-10-23T15:04:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# a library providing an interface to plot x-y plots with gnuplot\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# a library providing an interface to profiling with google perftools\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# a library to send notifications to the iPhone app Prowl\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# a library to send notifications to Growl\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# a library to help testing differences in arrays\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# a simple block mesh generator\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# a library to help testing differences in meshes\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# a command-line app to manipulate meshes\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# acommand-line tool to execute a batch of coolfluid commands\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# acommand-line tool to execute a batch of coolfluid commands\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# a solver app to be spawned from the coolfluid-server\n\n# to run parallel simulations ( started from the UI )\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "cf3/Tools/Command/CMakeLists.txt" : {
      "ObjectId" : "8c1e4bfdcc62b3a9f844259053509c038c2d225c",
      "LastModified" : "2011-10-19T12:13:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# store the path for the acceptance tests\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cf3/Tools/Gnuplot/CMakeLists.txt" : {
      "ObjectId" : "ba2b2a24d622f3d32c0ddcde558083859cd2b5e6",
      "LastModified" : "2013-01-05T17:25:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/Tools/GooglePerfTools/CMakeLists.txt" : {
      "ObjectId" : "aed638d60ba82b0e1f3044637be4c6359119924e",
      "LastModified" : "2013-06-19T23:25:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/Tools/Growl/CMakeLists.txt" : {
      "ObjectId" : "7522f03211df3c39405456f1ae632e32081642b3",
      "LastModified" : "2013-01-05T17:25:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/Tools/Growl/growl/CMakeLists.txt" : {
      "ObjectId" : "dec31515adf4399907581b2d9b7d8799040975d6",
      "LastModified" : "2011-10-19T12:13:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/Tools/Growl/growl/Makefile" : {
      "ObjectId" : "291ec4284c9a371b8870d9bfb5e720bf8df44511",
      "LastModified" : "2011-10-19T12:13:40Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "cf3/Tools/MeshDiff/CMakeLists.txt" : {
      "ObjectId" : "5f1a873fa111c81b586b7f6c25e4c71d321f5ec1",
      "LastModified" : "2013-08-27T20:50:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The library\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############################################################################################################\r\n\n# The application\r\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# store the path for the acceptance tests\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cf3/Tools/MeshGeneration/CMakeLists.txt" : {
      "ObjectId" : "f592a8924b35af7a6fe244979dc76a67ba20b018",
      "LastModified" : "2013-01-05T17:25:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/Tools/Prowl/CMakeLists.txt" : {
      "ObjectId" : "c8ff9f9697f7fb2169178212c1ecf7dfa1df6d76",
      "LastModified" : "2013-01-05T17:25:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/Tools/Shell/CMakeLists.txt" : {
      "ObjectId" : "2001eff5778ed99060ecc38c2f06a4baa53fd2c2",
      "LastModified" : "2013-01-05T17:25:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/Tools/Testing/CMakeLists.txt" : {
      "ObjectId" : "7fa412a153b7978fed2a11164fafc0c5f2cfa545",
      "LastModified" : "2013-01-05T17:25:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/Tools/mesh_transformer/CMakeLists.txt" : {
      "ObjectId" : "da59e7644ff0401e89d83db196c60cd4c3331e23",
      "LastModified" : "2013-01-05T17:25:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/Tools/solver/CMakeLists.txt" : {
      "ObjectId" : "91e4ee14dce8832867363e654b868744af653176",
      "LastModified" : "2013-01-05T17:25:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/common/CMakeLists.txt" : {
      "ObjectId" : "950262bde1a8cd6597dfc227b0df3f023899515d",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# MPI Files\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# Operating System dependent files\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### UNIXES ####\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "### WINDOWS ####\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# should search explicitly for dbghelp.dll\n\n# should search for psapi.dll if not in windows 7 (already in kernel32.dll)\n",
        "Line" : 240,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# libraries for OSystemLayerWin32\n",
        "Line" : 243,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "###############################################################################\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###############################################################################\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# explicit linking of all libraries for modern linkers (gcc4.5)\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# faster allocation and memory porfiling\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# support for Mac OSX\n\n# support for Linux\n\n# support for Win32\n",
        "Line" : 286,
        "CharPositionInLine" : 29
      },
      "CommentCount" : 11
    },
    "cf3/common/Linux/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2013-01-05T17:25:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/common/MacOSX/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2013-01-05T17:25:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/common/Win32/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2013-01-05T17:25:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/math/CMakeLists.txt" : {
      "ObjectId" : "7e40125fe0a4442f5ce8fd7ce97adc3cdb4bd843",
      "LastModified" : "2013-01-05T17:25:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# lssinterface provide connection with linear system solvers\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cf3/math/LSS/CMakeLists.txt" : {
      "ObjectId" : "9bf26645d20b7bf859bd363ac36edf6cee5b3e45",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/math/LSS/EmptyLSS/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2013-01-05T17:25:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/math/LSS/Trilinos/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2013-01-05T17:25:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/mesh/BlockMesh/CMakeLists.txt" : {
      "ObjectId" : "895df8b54ac3d2f133a2ad804d3af1978bcceef1",
      "LastModified" : "2013-01-05T17:25:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/mesh/CGNS/CMakeLists.txt" : {
      "ObjectId" : "38c9c014b9356940cb06bbce68f5ff866b810ebb",
      "LastModified" : "2013-01-05T17:25:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/mesh/CMakeLists.txt" : {
      "ObjectId" : "c50ad14d5b714698e5e5785128b175d927a57ba3",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# directories with headers only can have their contents appended to base dir\n",
        "Line" : 136,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "############################################################################################\n\n# sub modules of cf3 Mesh\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# LagrangeP0 shape functions\n",
        "Line" : 149,
        "CharPositionInLine" : 34
      },
      "3" : {
        "Text" : "# LagrangeP1 elements / shape functions\n",
        "Line" : 151,
        "CharPositionInLine" : 34
      },
      "4" : {
        "Text" : "# LagrangeP2 elements / shape functions\n",
        "Line" : 153,
        "CharPositionInLine" : 34
      },
      "5" : {
        "Text" : "# LagrangeP2 bubble elements / shape functions\n",
        "Line" : 155,
        "CharPositionInLine" : 34
      },
      "6" : {
        "Text" : "# LagrangeP3 elements / shape functions\n",
        "Line" : 157,
        "CharPositionInLine" : 34
      },
      "7" : {
        "Text" : "# Gauss Legendre quadrature\n",
        "Line" : 159,
        "CharPositionInLine" : 34
      },
      "8" : {
        "Text" : "# neutral file IO\n",
        "Line" : 161,
        "CharPositionInLine" : 34
      },
      "9" : {
        "Text" : "# gmsh file IO\n",
        "Line" : 163,
        "CharPositionInLine" : 34
      },
      "10" : {
        "Text" : "# Structured mesh generation\n",
        "Line" : 165,
        "CharPositionInLine" : 34
      },
      "11" : {
        "Text" : "# CGNS file IO\n",
        "Line" : 167,
        "CharPositionInLine" : 34
      },
      "12" : {
        "Text" : "# tecplot file IO\n",
        "Line" : 169,
        "CharPositionInLine" : 34
      },
      "13" : {
        "Text" : "# smurf file IO (binary tecplot)\n",
        "Line" : 171,
        "CharPositionInLine" : 34
      },
      "14" : {
        "Text" : "# zoltan mesh partitioning\n",
        "Line" : 173,
        "CharPositionInLine" : 34
      },
      "15" : {
        "Text" : "# PTScotch mesh partitioning\n",
        "Line" : 175,
        "CharPositionInLine" : 34
      },
      "16" : {
        "Text" : "# namespace actions that can be performed on the mesh\n",
        "Line" : 177,
        "CharPositionInLine" : 34
      },
      "17" : {
        "Text" : "# Writer for VTK legacy files\n",
        "Line" : 179,
        "CharPositionInLine" : 34
      },
      "18" : {
        "Text" : "# Writer for VTK XML files\n",
        "Line" : 181,
        "CharPositionInLine" : 31
      },
      "19" : {
        "Text" : "# Writer for the native mesh format\n",
        "Line" : 183,
        "CharPositionInLine" : 26
      },
      "CommentCount" : 20
    },
    "cf3/mesh/LagrangeP0/CMakeLists.txt" : {
      "ObjectId" : "569b8584d6c6e0ce730bacc953752f1e84eef9f5",
      "LastModified" : "2013-08-27T20:50:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/mesh/LagrangeP1/CMakeLists.txt" : {
      "ObjectId" : "51ca4cad23bb6891449cf92fe1c0c06a03efa5b1",
      "LastModified" : "2013-08-27T20:50:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/mesh/LagrangeP2/CMakeLists.txt" : {
      "ObjectId" : "a1290c16f91a1071da4335ef6acae14613ec3f1a",
      "LastModified" : "2013-08-27T20:50:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/mesh/LagrangeP2B/CMakeLists.txt" : {
      "ObjectId" : "ead3c7759e0e021025c4b58bfbe508b5c02bbfc2",
      "LastModified" : "2013-01-05T17:25:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/mesh/LagrangeP3/CMakeLists.txt" : {
      "ObjectId" : "e9d6714e84771e3fcaae9431fa633273ed96931f",
      "LastModified" : "2013-01-05T17:25:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/mesh/VTKLegacy/CMakeLists.txt" : {
      "ObjectId" : "a5ab5934c9ffd33b6a4d70e4c63156d89e823f24",
      "LastModified" : "2013-01-05T17:25:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/mesh/VTKXML/CMakeLists.txt" : {
      "ObjectId" : "a5149930e4403a02c074598da1ea1f125561aebd",
      "LastModified" : "2013-01-05T17:25:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/mesh/actions/CMakeLists.txt" : {
      "ObjectId" : "bee8c4fdf2604e9d930bf9eba0bd6d57d7bd8ae8",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/mesh/cf3mesh/CMakeLists.txt" : {
      "ObjectId" : "e0cb115825be45a4609ac5f989dae6f10138b7ca",
      "LastModified" : "2013-08-27T20:50:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/mesh/gausslegendre/CMakeLists.txt" : {
      "ObjectId" : "d6207743cfef2a327e2a2e9e56a8ba330ee35cda",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/mesh/gmsh/CMakeLists.txt" : {
      "ObjectId" : "9c04ce19392ebce5979ac62e56a8d474032a70a5",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/mesh/neu/CMakeLists.txt" : {
      "ObjectId" : "1f9717eec423ad82e7c157f96d5345187edd8301",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/mesh/ptscotch/CMakeLists.txt" : {
      "ObjectId" : "3a5d9e7e997b0b2fb11391b33e859c47a819c2ec",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/mesh/smurf/CMakeLists.txt" : {
      "ObjectId" : "01149e9b8fc87989ac2ff9740297921b2ba43092",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/mesh/tecplot/CMakeLists.txt" : {
      "ObjectId" : "f39477fb8213c27ff39b383429ecb64a4bfa2ac2",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/mesh/zoltan/CMakeLists.txt" : {
      "ObjectId" : "5d3245882f58559f4ade221771ae5a64cd731dc1",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/physics/CMakeLists.txt" : {
      "ObjectId" : "80adf4474a38f2e1ba2b3440194cc6d9aa0eb877",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# a concrete physical model where the physics are dynamically configured\r\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "cf3/python/CMakeLists.txt" : {
      "ObjectId" : "6c97aad126edcb0583c1873220abea3b5bcf741e",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Takes a lot of RAM to compile:\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "cf3/solver/CMakeLists.txt" : {
      "ObjectId" : "822de1b6e4f7536e7fc0d361e9a2d0c6f91acfc2",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# actions the solver uses\n",
        "Line" : 90,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 1
    },
    "cf3/solver/actions/CMakeLists.txt" : {
      "ObjectId" : "455451f329ec7daf633007b47aec1de9580c844d",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Core Proto files\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Actions using Proto\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cf3/tutorial/CMakeLists.txt" : {
      "ObjectId" : "4b0d113e6dcb39158e90713c0cd1067cda915f6a",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### Tutorial 1\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### Tutorial 2\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cf3/ui/CMakeLists.txt" : {
      "ObjectId" : "a6e781f08dca51443ac10b1e22fcc021b326fa72",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#####################################################################\n\n# Server application\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#####################################################################\n\n# Qt-dependent stuff\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add cmake Qt macros and variables\n",
        "Line" : 25,
        "CharPositionInLine" : 35
      },
      "3" : {
        "Text" : "# deactivate some c++ warnings in Qt\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#####################################################################\n\n# Graphical application\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# link against Qt libraries and QwtTab plugin\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#else()\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#file( GLOB_RECURSE UI_FIND_FILES RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} \"*\")\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#coolfluid_mark_not_orphan( ${UI_FIND_FILES} gui-main.cpp )\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#endif( CF3_ENABLE_GUI AND QT4_FOUND )\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cf3/ui/core/CMakeLists.txt" : {
      "ObjectId" : "53eca75eaa1d0635382b76cbba5d3db06e622c24",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Compile Qt classes (with slots/signals)\n\n#\n\n# source : http://wiki.qtcentre.org/index.php?title=Compiling_Qt4_apps_with_CMake\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# List of classes to \"moc\"\n\n# Put here all the headers that declare a class able to emit or catch Qt signals.\n\n# If a such header is missing here, linker returns a \"missing vtable\" error.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add the project files (including the moc files)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cf3/ui/graphics/CMakeLists.txt" : {
      "ObjectId" : "838eeb51c52372804959f83a9099bc2b3217502c",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Compile Qt classes (with slots/signals)\n\n#\n\n# source : http://wiki.qtcentre.org/index.php?title=Compiling_Qt4_apps_with_CMake\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# List of classes to \"moc\"\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# needs to be added because base class emits signals\n",
        "Line" : 9,
        "CharPositionInLine" : 30
      },
      "3" : {
        "Text" : "# needs to be added because base class emits signals\n\n# needs to be added because base class emits signals\n",
        "Line" : 15,
        "CharPositionInLine" : 30
      },
      "4" : {
        "Text" : "# Add the project files (including the moc files)\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cf3/ui/network/CMakeLists.txt" : {
      "ObjectId" : "6e17cb0c03b354686d5b51df7727ae86104b2fcf",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/ui/server/CMakeLists.txt" : {
      "ObjectId" : "3c242d3af768af6078388b19c435bcf5bd1ac6b3",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cf3/ui/uicommon/CMakeLists.txt" : {
      "ObjectId" : "217e0a3f238ab86771d914b08212e971d8c19b88",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/ApplyGlobalOptions.cmake" : {
      "ObjectId" : "a42cac47ac66b7f2beb4cadb0ea4cdffc2b29a9b",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# process precision option\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# default is double precision\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###############################################################################\n\n# explicit template support\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Apple linker with GCC does not support explicit templates so force them OFF\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###############################################################################\n\n# sys and time together\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#########################################################################################\n\n# PROFILING OPTIONS\n\n#########################################################################################\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# by default the profiler is google\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "###########################\n\n# GNU gprof\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "###########################\n\n# google-perftools\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# a link library will be added to each executable target\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#########################################################################################\n\n# STATIC BUILD OPTIONS\n\n#########################################################################################\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# LINUX\n",
        "Line" : 108,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# SGI IRIX\n",
        "Line" : 113,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# On Darwin:\n\n#  -all_load $convenience\n",
        "Line" : 118,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# On Solaris 2:\n\n#   -z allextract $convenience -z defaultextract\n",
        "Line" : 124,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 16
    },
    "cmake/CMakeLists.txt" : {
      "ObjectId" : "a8e18126a2da3cf92cb6d91248d2f935fa60b548",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# install the cmake files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/CheckCompilerFeatures.cmake" : {
      "ObjectId" : "c2aefa92523caf39f4b5a49693cd185403ef11e1",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#######################################################################################\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#   CHECK_TYPE_SIZE(int8_t         CF3_SIZEOF_INT8_T)\n\n#   CHECK_TYPE_SIZE(uint8_t        CF3_SIZEOF_UINT8_T)\n\n#   CHECK_TYPE_SIZE(int_least8_t   CF3_SIZEOF_INT_LEAST8_T)\n\n#   CHECK_TYPE_SIZE(uint_least8_t  CF3_SIZEOF_UINT_LEAST8_T)\n\n#   CHECK_TYPE_SIZE(int_fast8_t    CF3_SIZEOF_INT_FAST8_T)\n\n#   CHECK_TYPE_SIZE(uint_fast8_t   CF3_SIZEOF_UINT_FAST8_T)\n\n#   CHECK_TYPE_SIZE(int16_t        CF3_SIZEOF_INT16_T)\n\n#   CHECK_TYPE_SIZE(uint16_t       CF3_SIZEOF_UINT16_T)\n\n#   CHECK_TYPE_SIZE(int_least16_t  CF3_SIZEOF_INT_LEAST16_T)\n\n#   CHECK_TYPE_SIZE(uint_least16_t CF3_SIZEOF_UINT_LEAST16_T)\n\n#   CHECK_TYPE_SIZE(int_fast16_t   CF3_SIZEOF_INT_FAST16_T)\n\n#   CHECK_TYPE_SIZE(uint_fast16_t  CF3_SIZEOF_UINT_FAST16_T)\n\n#   CHECK_TYPE_SIZE(int32_t        CF3_SIZEOF_INT32_T)\n\n#   CHECK_TYPE_SIZE(uint32_t       CF3_SIZEOF_UINT32_T)\n\n#   CHECK_TYPE_SIZE(int_least32_t  CF3_SIZEOF_INT_LEAST32_T)\n\n#   CHECK_TYPE_SIZE(uint_least32_t CF3_SIZEOF_UINT_LEAST32_T)\n\n#   CHECK_TYPE_SIZE(int_fast32_t   CF3_SIZEOF_INT_FAST32_T)\n\n#   CHECK_TYPE_SIZE(uint_fast32_t  CF3_SIZEOF_UINT_FAST32_T)\n\n#   CHECK_TYPE_SIZE(int64_t        CF3_SIZEOF_INT64_T)\n\n#   CHECK_TYPE_SIZE(uint64_t       CF3_SIZEOF_UINT64_T)\n\n#   CHECK_TYPE_SIZE(int_least64_t  CF3_SIZEOF_INT_LEAST64_T)\n\n#   CHECK_TYPE_SIZE(uint_least64_t CF3_SIZEOF_UINT_LEAST64_T)\n\n#   CHECK_TYPE_SIZE(int_fast64_t   CF3_SIZEOF_INT_FAST64_T)\n\n#   CHECK_TYPE_SIZE(uint_fast64_t  CF3_SIZEOF_UINT_FAST64_T)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#   CHECK_TYPE_SIZE(ssize_t        CF3_SIZEOF_SSIZE_T)\n\n#   CHECK_TYPE_SIZE(off_t          CF3_SIZEOF_OFF_T)\n\n#   CHECK_TYPE_SIZE(__int64        CF3_SIZEOF___INT64)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#######################################################################################\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# coolfluid_log( \"+++++  Checking for pre compiled header support\" )\n\n# include(CheckPreCompiledHeaderSupport)\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#######################################################################################\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#######################################################################################\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#######################################################################################\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#######################################################################################\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#######################################################################################\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#######################################################################################\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# check memory mmap functions\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#######################################################################################\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#######################################################################################\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#######################################################################################\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#######################################################################################\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#######################################################################################\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#######################################################################################\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#######################################################################################\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#######################################################################################\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#######################################################################################\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#######################################################################################\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#######################################################################################\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# check for c++ abi, usually present in GNU compilers\n",
        "Line" : 272,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "#######################################################################################\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# check for time headers\n",
        "Line" : 287,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "#######################################################################################\n\n# Win32 specific\n\n#######################################################################################\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# check windows.hfor Windows API\n",
        "Line" : 302,
        "CharPositionInLine" : 76
      },
      "29" : {
        "Text" : "# check dbghelp.h for call stack\n",
        "Line" : 304,
        "CharPositionInLine" : 76
      },
      "30" : {
        "Text" : "# check psapi.h for memory info\n",
        "Line" : 306,
        "CharPositionInLine" : 76
      },
      "31" : {
        "Text" : "#######################################################################################\n\n# UNIX specific\n\n#######################################################################################\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# for dlopen\n",
        "Line" : 317,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 33
    },
    "cmake/CheckExplicitInstantiation.cmake" : {
      "ObjectId" : "9df9fedbe1cc8a5a44e85d6b5a58230b645cddac",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test whether the compiler supports explicit template instantiation.\n\n# This actually creates a class template instantiation in one source\n\n# file and tries to use it from another.  This approach checks that\n\n# both the instantiation syntax and symbol linkage is handled\n\n# properly.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/CheckNullPtr.cmake" : {
      "ObjectId" : "1f427d8cb4c928b96f2a76868d4a199955080813",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# check if the compiler supports the nullptr idiom\n\n# See Scott Meyer's \"Exceptional C++\"\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/CheckOperatingSystem.cmake" : {
      "ObjectId" : "3965aa5bfb455ee931a092b46397fa386654ee2e",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n### Check for Linux\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n### Check for Apple MacOSX\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n### Check for Windows\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###############################################################################\n\n### FINAL MESSAGE\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###############################################################################\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/CheckPreCompiledHeaderSupport.cmake" : {
      "ObjectId" : "b366e2197a0eb93ba219e862d9bb5ee27f3b2857",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check support for precompiled headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Assume WIN32 uses MSVC, therefore PCH support is ok\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# define macro for using precompiled header\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Flags to generate PCH\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Flags to use PCH\n",
        "Line" : 13,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# if we have gcc > 3.4 then PCH support is ok\n\n# but for the moment we keep it out\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "cmake/CheckRestrictKeyword.cmake" : {
      "ObjectId" : "d8131170c896fa15e8189b72f141cb9218339fd2",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module checks if the C++ compiler supports the restrict keyword or\n\n# some variant of it. The following variants are checked for in that order:\n\n# 1. restrict            (The standard C99 keyword, not yet in C++ standard, Windows VS has it)\n\n# 2. __restrict          (G++ has it)\n\n# 3. __restrict__        (G++ has it too)\n\n# 4. _Restrict           (seems to be used by Sun's compiler)\n\n# These four cases seem to cover all existing variants; however some C++\n\n# compilers don't support any variant, in which case the CF3_RESTRICT_KEYWORD variable is set to nothing\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# not supported so keep it empty\n",
        "Line" : 46,
        "CharPositionInLine" : 34
      },
      "CommentCount" : 2
    },
    "cmake/CheckSourceRevision.cmake" : {
      "ObjectId" : "c8d19b55ed7af890c31268dd138f5f7c13c34861",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# check git version if .git is present\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# no need to inform user about this\n",
        "Line" : 5,
        "CharPositionInLine" : 26
      },
      "2" : {
        "Text" : "# Check if this is a git repository, and get revision information\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Get abbreviated commit sha\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Get commit date\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#########################################################################################\n\n# finally set version\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/DefineBuildModes.cmake" : {
      "ObjectId" : "90160f61b23ecbb46de8eee7a5a38e581a4ac5f2",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# always define a build - default is RelWithDebInfo\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# capitalize the build type\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#######################################################\n\n### DEBUG mode\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#######################################################\n\n### RELWITHDEBINFO mode\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#######################################################\n\n### RELEASE mode\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# A bug in GCC 4.1 prevents O3 from working with Eigen\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#######################################################\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# check that the build type belongs to the list [ Debug Release RelWithDebInfo MinSizeRel ]\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#######################################################\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/DefineBuildRules.cmake" : {
      "ObjectId" : "563e0a865a8f23bd782f28ef6d6215254620255d",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################################\n\n# GCC Compiler\n\n########################################################################################\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# gnu specific warning flags\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# use pipe for faster compilation\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# respect c 89 standard (same as -std=c89)\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# respect c++ 98 standard\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# dont allow gnu extensions\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# dont define common variables\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# use many warnings\n",
        "Line" : 28,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# Warn if an undefined identifier is evaluated in an #if directive.\n",
        "Line" : 35,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "#  Warn about anything that depends on the \"size of\" a function type or of \"void\"\n",
        "Line" : 37,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "#  warn about uses of format functions that represent possible security problems\n",
        "Line" : 39,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# accept functions that dont use all parameters, due to virtual functions may not need all\n",
        "Line" : 42,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# Don't warn when using functors in boost::bind\n",
        "Line" : 46,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# this was temporary until we all move to using openmpi\n\n# must turn off non-virtual-dtor because many mpi implementations use it\n\n# KDE uses -Wnon-virtual-dtor\n\n# coolfluid_add_cxx_flags(\"-Wno-non-virtual-dtor\")\n",
        "Line" : 49,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# must turn long long off because many mpi implementations use it\n",
        "Line" : 54,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# be pedantic but issue warnings instead of errors\n\n# coolfluid_add_cxx_flags(\"-pedantic\") # Disabled for now, see http://gcc.gnu.org/bugzilla/show_bug.cgi?id=33305\n",
        "Line" : 56,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# Problem in boost\n\n# Problem with boost accumulators\n",
        "Line" : 61,
        "CharPositionInLine" : 52
      },
      "17" : {
        "Text" : "########################################################################################\n\n# INTEL ICC\n\n########################################################################################\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# suppress warning (remark) #279: controlling expression is constant\n\n# because of boost use of BOOST_ASSERT( expr && \"message\")\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# suppress warning #2196: routine is both \"inline\" and \"noinline\" (\"noinline\" assumed)\n\n# because of Eigen declarations such as \"static EIGEN_DONT_INLINE void run()\"\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "########################################################################################\n\n# CLANG\n\n########################################################################################\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "########################################################################################\n\n# UNIX\n\n########################################################################################\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "########################################################################################\n\n# WINDOWS\n\n########################################################################################\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# stupid VS2005 warning about not using fopen\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# for M_PI in cmath\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# disable auto-linking with boost\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Required for auto link not to mess up on vs80.\n\n# @todo Disable auto link on windows altogether.\n\n# add_definitions( -DBOOST_DYN_LINK )\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# compilation flags\n\n#   /MD use the Multithreaded DLL of runtime library\n",
        "Line" : 127,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# add exception handling\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# remove warnings\n",
        "Line" : 136,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# linker flags:\n\n#   /OPT:NOREF keeps functions and data that are never referenced ( needed for static libs )\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "#   set( CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} /OPT:NOREF /OPT:NOICF\" )\n\n#   set( CMAKE_CXX_CREATE_STATIC_LIBRARY  \"lib ${CMAKE_CL_NOLOGO} /OPT:NOREF /OPT:NOICF <LINK_FLAGS> /out:<TARGET> <OBJECTS>\" )\n",
        "Line" : 149,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "########################################################################################\n\n# APPLE\n\n########################################################################################\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# improve the linker compiler to avoid unresolved symbols causing errors\n",
        "Line" : 160,
        "CharPositionInLine" : 1
      },
      "34" : {
        "Text" : "# not needed anymore because all lib depencies are explicitly set\n\n#  set(CMAKE_CXX_CREATE_SHARED_LIBRARY\n\n#  \"<CMAKE_CXX_COMPILER> -undefined dynamic_lookup <LANGUAGE_COMPILE_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> <LINK_FLAGS> -o <TARGET> -install_name <TARGET_INSTALLNAME_DIR><TARGET_SONAME> <OBJECTS> <LINK_LIBRARIES>\")\n",
        "Line" : 161,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# under Mac OS X internal deps must be used so force them\n",
        "Line" : 165,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "########################################################################################\n\n# FINAL\n\n########################################################################################\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# test and add the user defined flags\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# fortran flags currently nont checked\n",
        "Line" : 195,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# foreach( fortran_flag ${Fortran_FLAGS_LIST} )\n\n#   coolfluid_add_Fortran_flags_or_die ( ${fortran_flag} )\n\n# endforeach()\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 40
    },
    "cmake/DefineFileExtensions.cmake" : {
      "ObjectId" : "c4c7f7a8d9b95d94d8bf432a082959c05d55b7f1",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# extensions for sources\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# extensions for headers\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# extensions for headers\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# full list of extensions\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/DefineGlobalOptions.cmake" : {
      "ObjectId" : "80adbd5a36d944b26c0b96bbcfed2cb58d4442eb",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#########################################################################################\n\n# Generic options\n\n#########################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# code compilation options\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# precision for real numbers\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# code analysis options\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# note that it turns off optimization\n",
        "Line" : 38,
        "CharPositionInLine" : 77
      },
      "5" : {
        "Text" : "# testing options\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# MPI options\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MPI testing options\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/DefineInstallPaths.cmake" : {
      "ObjectId" : "138c005f246d8bd7d455eda0eba8d8d9a70c89eb",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# recreate the coolfluid_log_file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set installation paths\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# setup library building rpaths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# use RPATHs for the build tree\n\n# use build RPATH and when install substitute with install path\n\n# add the automatic parts to RPATH which point to dirs outside build tree\n",
        "Line" : 19,
        "CharPositionInLine" : 49
      },
      "4" : {
        "Text" : "# create the dso directory for shared libraries\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# should be change to /lib\n",
        "Line" : 28,
        "CharPositionInLine" : 62
      },
      "CommentCount" : 6
    },
    "cmake/DefineMacros.cmake" : {
      "ObjectId" : "781ff81db8b2daf2105584e0a97203f76eb25e06",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# include cmake macros\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# include coolfluid macros\n\n##############################################################################\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/DefineVersions.cmake" : {
      "ObjectId" : "0a0d63d2a6960f56badb0100df6369c0cc02a54a",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# coolfluid release version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# coolfluid kernel version\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append the library version information to the library target properties.\n\n# A parent project may set its own properties and/or may block this.\n\n# TO avoid it set CF3_NO_LIBRARY_VERSION to TRUE\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/DetectBoost.cmake" : {
      "ObjectId" : "73bc51062af6bc2e8f226243f567986cf78679c9",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find boost package (essential)\n\n#set( Boost_DEBUG 1 )  # to debug boost search\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find based on minimal version defined below\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#disable looking in system paths\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# components to search for\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# if not found give more information\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# add boost include path\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# add boost libraries to list of third party libraries\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# filter out the unit test libs from the boost libraries\n\n# only unit testslink to this\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#######################################################################################\n\n# assume boost minimum version has it\n\n#  coolfluid_log( \"+++++  Checking for boost erfc function\" )\n\n# set( CMAKE_REQUIRED_INCLUDES ${Boost_INCLUDE_DIR} )\n\n# check_cxx_source_compiles (\n\n# \"#include <boost/math/special_functions/erf.hpp>\n\n# int main(int argc, char* argv[])\n\n# {\n\n#   boost::math::erfc(0.);\n\n# }\"\n\n# CF3_HAVE_BOOST_ERFC )\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/DetectMPI.cmake" : {
      "ObjectId" : "60dba7f8b579832f1366a37bbb4f6fd92d457e05",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################################################\n\n# find MPI compiler or libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use the standard CMake FindMPI\n",
        "Line" : 8,
        "CharPositionInLine" : 20
      },
      "2" : {
        "Text" : "#######################################################################\n\n# add MPI include path\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# FindMPI has new behavior\n\n# Lets add MPI_CXX_INCLUDE_PATH, iff regular compiler is not MPI compiler\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "### FAIL - FTM, MPI is required\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#coolfluid_debug_var( MPI_C_COMPILER )\n\n#coolfluid_debug_var( MPI_C_NO_INTERROGATE )\n\n#coolfluid_debug_var( MPI_C_INCLUDE_PATH )\n\n#coolfluid_debug_var( MPI_C_LIBRARIES )\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#coolfluid_debug_var( MPI_CXX_COMPILER )\n\n#coolfluid_debug_var( MPI_CXX_NO_INTERROGATE )\n\n#coolfluid_debug_var( MPI_CXX_INCLUDE_PATH )\n\n#coolfluid_debug_var( MPI_CXX_LIBRARIES )\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "### DEPRECATED\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#coolfluid_debug_var( MPI_COMPILER )\n\n#coolfluid_debug_var( MPI_CXX_NO_INTERROGATE )\n\n#coolfluid_debug_var( MPI_INCLUDE_PATH )\n\n#coolfluid_debug_var( MPI_LIBRARIES )\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/DetectParaView.cmake" : {
      "ObjectId" : "026b71f42b79777c8eba7a08339b951c41269e2d",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find ParaView\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Qt is needed to compile ParaView\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if the supported version was found\n",
        "Line" : 15,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# if not found, we look for the most recent one that is compatible\n",
        "Line" : 18,
        "CharPositionInLine" : 10
      },
      "4" : {
        "Text" : "# list is ordered so the most recent version is the last item\n",
        "Line" : 22,
        "CharPositionInLine" : 5
      },
      "5" : {
        "Text" : "# iterate over the found ParaView installations\n",
        "Line" : 25,
        "CharPositionInLine" : 5
      },
      "6" : {
        "Text" : "# check that config version script exists\n",
        "Line" : 29,
        "CharPositionInLine" : 7
      },
      "7" : {
        "Text" : "# if this version is compatible with our minimum ersion, it's OK\n",
        "Line" : 34,
        "CharPositionInLine" : 9
      },
      "8" : {
        "Text" : "# decrement index\n",
        "Line" : 39,
        "CharPositionInLine" : 67
      },
      "9" : {
        "Text" : "# add paraview libraries to list of third party libraries\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "cmake/DetectSoftware.cmake" : {
      "ObjectId" : "858bf5ee3b9c5d45cb316b31a37b13f65e2e963b",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# finding boost (essential)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find Eigen (falls back to included code if not found)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# must be before the included Eigen, while we still include a copy\n",
        "Line" : 7,
        "CharPositionInLine" : 43
      },
      "3" : {
        "Text" : "##############################################################################\n\n# finding MPI (essential) must be after the GlobalOptions\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############################################################################\n\n# Find Qt - defines QT_USE_FILE and QT_LIBRARIES used below\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#  set( QT_USE_QTXML TRUE     )\n\n#  set( QT_USE_QTNETWORK TRUE )\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##############################################################################\n\n#  Find ParaView\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##############################################################################\n\n# find non essential packages\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# packages that don't influence functionality\n\n# user should not be concerned with these\n\n# so make them quiet and they don't appear on the enable package list\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# OpenSSL library\n",
        "Line" : 51,
        "CharPositionInLine" : 39
      },
      "10" : {
        "Text" : "# find the math library\n\n# POSIX Realtime library\n\n# valgrind for profiling and memmory leak detection\n\n# dynamic profiler and memory checker\n\n# POSIX Threads library\n",
        "Line" : 53,
        "CharPositionInLine" : 39
      },
      "11" : {
        "Text" : "# packages that enhance functionality\n\n# this will appear on the list of enabled features\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# file compression support\n",
        "Line" : 62,
        "CharPositionInLine" : 29
      },
      "13" : {
        "Text" : "# file compression support\n",
        "Line" : 70,
        "CharPositionInLine" : 29
      },
      "14" : {
        "Text" : "# search for Blas Lapack support\n\n# parallel domain decomposition\n\n# serial domain decomposition\n\n# parallel domain decomposition\n\n# parallel and serial domain decomposition using parmetis or pt-scotch\n\n# curl downloads files on the fly\n\n# CGNS library\n\n# SuperLU sparse sirect solver\n\n# Trilinos sparse matrix library\n\n# Find gnuplot executable\n",
        "Line" : 80,
        "CharPositionInLine" : 30
      },
      "15" : {
        "Text" : "# opencl support\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# cuda support\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# python support\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Search for python executable if not provided\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# This package searches for python libraries and include dirs\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 20
    },
    "cmake/DumpVariables.cmake" : {
      "ObjectId" : "6b54c1efc68523596784ab1bf2ff63b0d7be8a9b",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# if you are building in-source, this is the same as CMAKE_SOURCE_DIR, otherwise\n\n# this is the top level directory of your build tree\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if you are building in-source, this is the same as CMAKE_CURRENT_SOURCE_DIR, otherwise this\n\n# is the directory where the compiled or generated files from the current CMakeLists.txt will go to\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# this is the directory, from which cmake was started, i.e. the top level source directory\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# this is the directory where the currently processed CMakeLists.txt is located in\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# contains the full path to the top level directory of your build tree\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# contains the full path to the root of your project source directory,\n\n# i.e. to the nearest directory where CMakeLists.txt contains the PROJECT() command\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# set this variable to specify a common place where CMake should put all executable files\n\n# (instead of CMAKE_CURRENT_BINARY_DIR)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# set this variable to specify a common place where CMake should put all libraries\n\n# (instead of CMAKE_CURRENT_BINARY_DIR)\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# tell CMake to search first in directories listed in CMAKE_MODULE_PATH\n\n# when you use find_package() or include()\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# this is the complete path of the cmake which runs currently (e.g. /usr/local/bin/cmake)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# this is the CMake installation directory\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# this is the filename including the complete path of the file where this variable is used.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# this is linenumber where the variable is used\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# this is used when searching for include files e.g. using the find_path() command.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# this is used when searching for libraries e.g. using the find_library() command.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# the complete system name, e.g. \"Linux-2.4.22\", \"FreeBSD-5.4-RELEASE\" or \"Windows 5.1\"\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# the short system name, e.g. \"Linux\", \"FreeBSD\" or \"Windows\"\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# only the version part of CMAKE_SYSTEM\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# the processor name e.g. \"Intel(R) Pentium(R) M processor 2.00GHz\"\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# is TRUE on all UNIX-like OS's, including Apple OS X and CygWin\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# is TRUE on Windows, including CygWin\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# is TRUE on Apple OS X\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# is TRUE when using the MinGW compiler in Windows\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# is TRUE on Windows when using the CygWin version of cmake\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# is TRUE on Windows when using a Borland compiler\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Microsoft compiler\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# set this to true if you don't want to rebuild the object files if the rules have changed,\n\n# but not the actual source files or headers (e.g. if you changed the some compiler switches)\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# since CMake 2.1 the install rule depends on all, i.e. everything will be built before installing.\n\n# If you don't like this, set this one to true.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# If set, runtime paths are not added when using shared libraries. Default it is set to OFF\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# set this to true if you are using makefiles and want to see the full compile and link\n\n# commands instead of only the shortened ones\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# this will cause CMake to not put in the rules that re-run CMake. This might be useful if\n\n# you want to use the generated build files on another machine.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# A simple way to get switches to the compiler is to use add_definitions().\n\n# But there are also two variables exactly for this purpose:\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# the compiler flags for compiling C sources\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# the compiler flags for compiling C++ sources\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Choose the type of build.  Example: set(CMAKE_BUILD_TYPE Debug)\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# if this is set to ON, then all libraries are built as shared libraries by default.\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# the compiler used for C files\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# the compiler used for C++ files\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# if the compiler is a variant of gcc, this should be set to 1\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# if the compiler is a variant of g++, this should be set to 1\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# the tools for creating libraries\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 41
    },
    "cmake/FindBlasLapack.cmake" : {
      "ObjectId" : "2bb8531ccc41d427ac1a91c3bd3ed106a39739c0",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Confirm that liblapack library is installed\n\n# This module defines\n\n#   CF3_HAVE_LAPACK\n\n#   CF3_HAVE_BLAS\n\n#   CF3_HAVE_BLASLAPACK\n\n#   BLASLAPACK_LIBRARIES\n\n# Require both lapack and blas\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BLAS ############################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# LAPACK #########################\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# clear include search path\n\n# clear library search path\n",
        "Line" : 44,
        "CharPositionInLine" : 41
      },
      "4" : {
        "Text" : "# BOTH ###########################\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#################################\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# user provided directly the libraries of LAPACK\n\n# TODO: test  that they actually work\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#if ( ${CF3_HAVE_BLASLAPACK} )\n\n#    list( APPEND CF3_DEPS_LIBRARIES ${BLASLAPACK_LIBRARIES} )\n\n#endif()\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/FindCGNS.cmake" : {
      "ObjectId" : "77d17bce05a2fd8739f1c3799a2327fabbd1e467",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this module looks for CGNS library\n\n# it will define the following values\n\n#\n\n# Needs environmental variables\n\n#   CGNS_HOME\n\n# Sets\n\n#   CGNS_INCLUDE_DIRS\n\n#   CGNS_LIBRARIES\n\n#   CF3_HAVE_CGNS\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# clear include search path\n\n# clear library search path\n",
        "Line" : 16,
        "CharPositionInLine" : 41
      },
      "CommentCount" : 2
    },
    "cmake/FindCMath.cmake" : {
      "ObjectId" : "1084beb69a4f806e639875d727bb168c6654892b",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Sets:\n\n# CMATH_LIBRARIES   = the library to link against (RT etc)\n\n# CF3_HAVE_CMATH    = set to true after finding the library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# clear library search path\n",
        "Line" : 7,
        "CharPositionInLine" : 39
      },
      "CommentCount" : 2
    },
    "cmake/FindCurl.cmake" : {
      "ObjectId" : "7b4315a34d739ad818c92528a987d708d1d4d64c",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Sets:\n\n# CURL_INCLUDE_DIRS   = where curl.h can be found\n\n# CURL_LIBRARIES      = the library to link against (curl etc)\n\n# CF3_HAVE_CURL       = set to true after finding the library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# clear include search path\n\n# clear library search path\n",
        "Line" : 10,
        "CharPositionInLine" : 39
      },
      "CommentCount" : 2
    },
    "cmake/FindEigen3.cmake" : {
      "ObjectId" : "6b39d87e453f852a9adcce5fa8edd25b7045640a",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/FindGMP.cmake" : {
      "ObjectId" : "541ca40cbf740f766717669c319d83a326678e1e",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindGooglePerftools.cmake" : {
      "ObjectId" : "7cdb3e29b603c31c48be4ce991bcad663986477f",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sets:\n\n# GOOGLEPERFTOOLS_INCLUDE_DIRS  = where google/profiler.h can be found\n\n# GOOGLEPERFTOOLS_LIBRARIES      = the library to link against\n\n# CF3_HAVE_GOOGLEPERFTOOLS      = set to true after finding the library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# clear include search path\n\n# clear library search path\n",
        "Line" : 8,
        "CharPositionInLine" : 39
      },
      "2" : {
        "Text" : "# tools used for profiling post-processing\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/FindMPFR.cmake" : {
      "ObjectId" : "1dbb8e005fb0e8c59d1aefc5ae370c0747d62de1",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindMetis.cmake" : {
      "ObjectId" : "390909f581e7439f7dc611e41acc634bba437909",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# this module look for METIS (http://hdf.ncsa.uiuc.edu) support\n\n# it will define the following values\n\n#\n\n# METIS_INCLUDE_DIRS  = where metis.h can be found\n\n# METIS_LIBRARIES     = the library to link against (metis etc)\n\n# CF3_HAVE_METIS      = set to true after finding the library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# clear include search path\n\n# clear library search path\n",
        "Line" : 14,
        "CharPositionInLine" : 39
      },
      "CommentCount" : 2
    },
    "cmake/FindOpenCL.cmake" : {
      "ObjectId" : "d4fb39be37a356682c7bddc18481f146fb7766a3",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find OpenCL\n\n# Once done this will define\n\n#\n\n#  OPENCL_FOUND         - system has OpenCL\n\n#  OPENCL_INCLUDE_DIRS  - the OpenCL include directory\n\n#  OPENCL_LIBRARIES     - link these to use OpenCL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# clear include search path\n\n# clear library search path\n",
        "Line" : 12,
        "CharPositionInLine" : 39
      },
      "2" : {
        "Text" : "# this section is not tested\n",
        "Line" : 25,
        "CharPositionInLine" : 7
      },
      "3" : {
        "Text" : "# Other UNIX, like Linux, etc\n",
        "Line" : 51,
        "CharPositionInLine" : 15
      },
      "CommentCount" : 4
    },
    "cmake/FindPTScotch.cmake" : {
      "ObjectId" : "830b7aad2708942c495b8481645fd5a70200f9b7",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# this module look for PTSCOTCH (http://hdf.ncsa.uiuc.edu) support\n\n# it will define the following values\n\n#\n\n# PTSCOTCH_INCLUDE_DIRS = where ptscotch.h can be found\n\n# PTSCOTCH_LIBRARIES    = the library to link against (ptscotch etc)\n\n# CF3_HAVE_PTSCOTCH     = set to true after finding the library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# clear include search path\n\n# clear library search path\n",
        "Line" : 13,
        "CharPositionInLine" : 39
      },
      "2" : {
        "Text" : "#${PTSCOTCH_LIB_SCOTCH}\n\n#${PTSCOTCH_LIB_SCOTCHERR}\n\n#${PTSCOTCH_LIB_SCOTCHERREXIT}\n\n#${PTSCOTCH_LIB_SCOTCHMETIS}\n",
        "Line" : 61,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "#${PTSCOTCH_LIB_PTSCOTCHERREXIT}\n\n#${PTSCOTCH_LIB_PTSCOTCHPARMETIS}\n",
        "Line" : 67,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "cmake/FindPThread.cmake" : {
      "ObjectId" : "c7298923e6005af58b1b554ebe40032a89508ce2",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Sets:\n\n# PTHREAD_LIBRARIES      = the library to link against (RT etc)\n\n# CF3_HAVE_PTHREAD        = set to true after finding the library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# clear library search path\n",
        "Line" : 7,
        "CharPositionInLine" : 39
      },
      "CommentCount" : 2
    },
    "cmake/FindParmetis.cmake" : {
      "ObjectId" : "9a679f33d5aa2e0bde5e7ea6c0dc37584ceee3ff",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# this module look for PARMETIS (http://hdf.ncsa.uiuc.edu) support\n\n# it will define the following values\n\n#\n\n# PARMETIS_INCLUDE_DIRS  = where parmetis.h can be found\n\n# PARMETIS_LIBRARIES     = the library to link against (parmetis etc)\n\n# CF3_HAVE_PARMETIS      = set to true after finding the library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# clear include search path\n\n# clear library search path\n",
        "Line" : 13,
        "CharPositionInLine" : 39
      },
      "CommentCount" : 2
    },
    "cmake/FindPythonDev.cmake" : {
      "ObjectId" : "5bbc81e7e37039870605fde097b1c8b63ad27274",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Python include dirs and libraries\n\n#\n\n# Usage of this module as follows:\n\n#\n\n#     find_package(PythonDev)\n\n#\n\n# Variables used by this module, they can change the default behaviour and need\n\n# to be set before calling find_package:\n\n#\n\n#  PYTHON_EXECUTABLE         If this is set to a path to a Python interpreter\n\n#                            then this module attempts to infer the path to\n\n#                            python-config from it\n\n#  PYTHON_CONFIG             Set this variable to the location of python-config\n\n#                            if the module has problems finding the proper\n\n#                            installation path.\n\n#\n\n# Variables defined by this module:\n\n#\n\n#  PYTHONDEV_FOUND           System has Python dev headers/libraries\n\n#  PYTHON_INCLUDE_DIR        The Python include directories.\n\n#  PYTHON_LIBRARIES          The Python libraries and linker flags.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The OpenBSD python packages have python-config's that don't reliably\n\n# report linking flags that will work.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindRealtime.cmake" : {
      "ObjectId" : "6f14504caa88c932ef079143e024c2d3eaca2dce",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Sets:\n\n# RT_LIBRARIES      = the library to link against (RT etc)\n\n# CF3_HAVE_RT        = set to true after finding the library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# clear library search path\n",
        "Line" : 7,
        "CharPositionInLine" : 39
      },
      "CommentCount" : 2
    },
    "cmake/FindSuperLU.cmake" : {
      "ObjectId" : "7437ba2dc9e7b1c513dbd251e3ac383d939a2b67",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this module looks for zoltan library\n\n# it will define the following values\n\n#\n\n# Needs environmental variables\n\n#   SUPERLU_HOME\n\n# Sets\n\n#   SUPERLU_INCLUDE_DIRS\n\n#   SUPERLU_LIBRARIES\n\n#   CF3_HAVE_SUPERLU\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# clear include search path\n\n# clear library search path\n",
        "Line" : 16,
        "CharPositionInLine" : 41
      },
      "CommentCount" : 2
    },
    "cmake/FindTrilinos.cmake" : {
      "ObjectId" : "4245c7efc5dc57ea034650ae00a44aaeaa904fce",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this module looks for the Trilinos library\n\n# it will define the following values\n\n#\n\n# Needs environmental variables\n\n#   TRILINOS_HOME\n\n# Sets\n\n#   TRILINOS_INCLUDE_DIRS\n\n#   TRILINOS_LIBRARIES\n\n#   CF3_HAVE_TRILINOS\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try to find Trilinos using Trilinos recommendations\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake/FindValgrind.cmake" : {
      "ObjectId" : "ebb77e757efb296d36405bdd50cf6c211d38672f",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sets:\n\n# VALGRIND_INCLUDE_DIRS  = where valgrind.h can be found\n\n# CF3_HAVE_VALGRIND      = set to true after finding the library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# clear include search path\n\n# clear library search path\n",
        "Line" : 7,
        "CharPositionInLine" : 39
      },
      "CommentCount" : 2
    },
    "cmake/FindZoltan.cmake" : {
      "ObjectId" : "a81ca587cac74fd02ca804eef05be72fd24304c6",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this module looks for Zoltan library\n\n# it will define the following values\n\n#\n\n# Needs environmental variables\n\n#   ZOLTAN_HOME\n\n# Sets\n\n#   ZOLTAN_INCLUDE_DIRS\n\n#   ZOLTAN_LIBRARIES\n\n#   CF3_HAVE_ZOLTAN\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try to find Zoltan using Trilinos recommendations\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake/PrepareCPack.cmake" : {
      "ObjectId" : "fe1a94eb2cf6d6ef3c0d9b7c0a37937ade526d3e",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# package instrucitons\n\n# if CPack is available and this is a build of just COOLFluiD\n\n# as opposed to a build of from an external project\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CPACK_GENERATOR TGZ)\n",
        "Line" : 10,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "#       set(CPACK_PACKAGE_DESCRIPTION_FILE \"${CMAKE_CURRENT_SOURCE_DIR}/Copyright.txt\")\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# later add each component into this list\n",
        "Line" : 28,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# FIXME : CPack considers Third party libraries such as\n\n# Boost and MPI as system dependencies and does\n\n# not copy the files into the installer, so we copy them manually\n",
        "Line" : 34,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "#install(DIRECTORY ${DEPS_ROOT}/lib/\n\n# DESTINATION ${CF3_INSTALL_LIB_DIR}\n\n# COMPONENT libraries\n\n# FILES_MATCHING REGEX \"^.*\\\\.(so|dylib|dll)$\")\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "#  coolfluid_log (\" +++ installing ${DEP_LIB}\")\n",
        "Line" : 44,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "#foreach ( CF3_QT_LIB ${QT_LIBRARIES} )\n\n#  coolfluid_log (\" +++ installing ${CF3_QT_LIB}\")\n\n#  coolfluid_install_third_party_library( ${CF3_QT_LIB} )\n\n#endforeach()\n",
        "Line" : 48,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# platform specific configuration\n\n#(shamefully copied from gsmh build system for the Apple part)\n",
        "Line" : 53,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# RPM & DEB config\n",
        "Line" : 71,
        "CharPositionInLine" : 9
      },
      "10" : {
        "Text" : "# Windows config\n",
        "Line" : 75,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# CPack has to be included after variables configuration\n",
        "Line" : 78,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 12
    },
    "cmake/PrintSummary.cmake" : {
      "ObjectId" : "77f33d3deac3b7f2d290fcc026ce9aff555919fb",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### prints the build summary\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# get some variables\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# print the header with versions and operating system\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# print cmake information\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# print the compiler information ( put to the log file )\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# print most important build options\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# print install path\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# list the active kernel libraries\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# break line if necessary\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# list the active plugins\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# break line if necessary\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# list the active features\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# In this case the packages are not shown in enabled features...\n\n# Resort to a full summary of enabled features and packages\n",
        "Line" : 119,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#    feature_summary( WHAT ENABLED_FEATURES\n\n#                     DESCRIPTION \" Enabled Features:\"\n\n#                     VAR CF3_ENABLED_FEATURES )\n\n#    coolfluid_log( \"${CF3_ENABLED_FEATURES}\" )\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# In this case the packages are added inside the enabled features...\n\n# The summary is made by ourself, and is shorter.\n",
        "Line" : 126,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# break line if necessary\n",
        "Line" : 142,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# break line if necessary\n",
        "Line" : 162,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# break line if necessary\n",
        "Line" : 179,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# break line if necessary\n",
        "Line" : 198,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# break line if necessary\n",
        "Line" : 216,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# break line if necessary\n",
        "Line" : 234,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# break line if necessary\n",
        "Line" : 252,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# warn if this is a static build\n\n# TODO: test static building\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "cmake/ProcessOrphanFiles.cmake" : {
      "ObjectId" : "5d332f78bffb48c70ee83ed09c1a8a487c3ce122",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# if file with orphan files exists remove it\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if orphan files where found, put the list on the file\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/ResetVariables.cmake" : {
      "ObjectId" : "c2a47a8600fd4a4a031fdd22313c4fb2d7179ff9",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# reset the list of kernel libs\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# reset the list of project n orphan files\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# reset enabled/disabled tests\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# user define that affects many search paths simultaneously\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# finding boost with BOOST_ROOT avoids conflicts with the system libraries\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# finding ParaView with ParaView_ROOT avoids conflicts with the system libraries\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# finding MPI with MPI_HOME or MPI_ROOT avoids conflicts with the system libraries\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "cmake/SubProjects.cmake" : {
      "ObjectId" : "0e659bd02f5451cdb9a4c849566af15d75801353",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CTEST_BINARY_DIRECTORY must be defined in the ctest driver script before including this file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Definition of the kernel subproject\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of existing subprojects. Each subproject corresponds to a plugin. Note that this list should be kept up-to-date with the plugins that exist\n\n# in the current source tree. It is independent of what gets actually built, since removing an item from this list\n\n# will remove it from the dashboard. The names here must be the same as the plugin subdirectory (case sensitive!)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The folder tat contains the plugins build tree\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# generate the Project.xml file\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/macros/CFAddApp.cmake" : {
      "ObjectId" : "39b862b36ac7488b2ef9eb9a69131e9db11a678a",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# macro for adding a application in the project\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# option to build it or not (option is basic)\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# by default, applications are not part of the sandbox\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#\n\n#\n\n#\n\n#\n\n#\n\n#\n\n#\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# check if all required modules are present\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# separate the source files and remove them from the orphan list\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# set condition if not set outside, default is TRUE\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# compile if selected and all required modules are present\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# check if the application should be Mac OS bundle (\"*.app\" directory)\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# directories to look for dependencies\n",
        "Line" : 73,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# tell cmake to creat a bundle\n",
        "Line" : 76,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# system identifier (should be universally unique)\n",
        "Line" : 79,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# tell cpack the destination of the bundle when generating the installer\n\n# package\n",
        "Line" : 82,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# set the long and short version strings\n",
        "Line" : 86,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "#  SET( MACOSX_BUNDLE_BUNDLE_VERSION )\n",
        "Line" : 89,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "#  SET( MACOSX_BUNDLE_COPYRIGHT )\n",
        "Line" : 91,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# if mpi was found add it to the libraries\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# add external dependency libraries if defined\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#list(REMOVE_DUPLICATES ${APPNAME}_libs)\n",
        "Line" : 110,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# internal dependencies\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# add installation paths, if it not a sandbox application\n",
        "Line" : 133,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# log some info about the app\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "#coolfluid_install_targets( ${APPNAME} )\n",
        "Line" : 164,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "##############################################################################\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "cmake/macros/CFAddCompilationFlags.cmake" : {
      "ObjectId" : "543b3a8964156690bc4e4f8ba740577afc73bc33",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# this macro separates the sources form the headers\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  message( STATUS \"FLAG [${m_c_flags}] is [${C_FLAG_TEST_${N_CFLAG}}] \" )\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################################################\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################################################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#  message( STATUS \"FLAG [${m_cxx_flags}] is [${CXX_FLAG_TEST_${N_CXXFLAG}}] \" )\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##############################################################################\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##############################################################################\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##############################################################################\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##############################################################################\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/macros/CFAddResources.cmake" : {
      "ObjectId" : "418114079035fee1fed1363303822cfe6dc113fb",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# macro for adding resources\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# copy files to test dir in build tree\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# COMMENT \"Copying file ${rfile} to ${RDM_TEST_RUN_DIR}\"\n",
        "Line" : 14,
        "CharPositionInLine" : 19
      },
      "CommentCount" : 3
    },
    "cmake/macros/CFAddTest.cmake" : {
      "ObjectId" : "d56fe01c7d83499028663fc80fa36cfcf8719bf3",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Function to add a test.\n\n#\n\n# Mandatory keywords:\n\n# - UTEST/ATEST/PTEST\n\n#      choose according to the test profile: unit-test, acceptance-test, performance-test)\n\n#      give as value the name of the test\n\n# - CPP/PYTHON/CFSCRIPT\n\n#      choose according to the test type: c++ code, python script, cfscript\n\n#      give as value the list of source files or script\n\n#\n\n# Optional keywords:\n\n# - ARGUMENTS\n\n#      a list of arguments to pass to the the test execution (default empty)\n\n# - PLUGINS\n\n#      a list of required plugins for the test (default empty)\n\n# - LIBS\n\n#      a list of required libraries for this test to build (default empty)\n\n# - MPI (default: mpirun is not called , unless global CMake constant makes all utests run with mpirun -np 1)\n\n#      number of processors to use for call with mpirun\n\n#      default: mpirun is not called, unless CF3_ALL_UTESTS_PARALLEL is ON, then default=1\n\n# - CONDITION\n\n#      boolean expression to add extra condition if the test should build (default: true)\n\n# - SCALING\n\n#      option to indicate mpi-scaling is used (advanced, should not be used much)\n\n# - MOC\n\n#      list of QT moc files to be included\n\n# - DEPENDS\n\n#      list of targets this test depends on (LIBS are automatically a dependency already)\n\n#\n\n# After calling this function, the test is added to one of the following lists:\n\n#   - CF3_ENABLED_UTESTS\n\n#   - CF3_DISABLED_UTESTS\n\n#   - CF3_ENABLED_ATESTS\n\n#   - CF3_DISABLED_ATESTS\n\n#   - CF3_ENABLED_PTESTS\n\n#   - CF3_DISABLED_PTESTS\n\n# The following variables will be set:\n\n#   - ${TEST_NAME}_builds\n\n#   - ${TEST_NAME}_dir\n\n#   - ${TEST_NAME}_libs\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check if all mandatory arguments are given\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# option to build it or not (option is advanced and does not appear in the cmake gui)\n",
        "Line" : 89,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# check for condition\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# default is to include\n",
        "Line" : 109,
        "CharPositionInLine" : 9
      },
      "5" : {
        "Text" : "# check if mpirun needs to be called\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# check if all required plugins are available\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# check if QT is required/available\n",
        "Line" : 136,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# check if scaling test will be created\n",
        "Line" : 146,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# separate the source files and remove them from the orphan list\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# check if test will build\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# if mpi was found add it to the libraries\n",
        "Line" : 210,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# add dependency libraries if defined\n",
        "Line" : 215,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# add boost unit test lib\n",
        "Line" : 222,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# Apparently needs cmake 2.8.4 or greater\n\n#            WORKING_DIRECTORY ${TESTDIR}\n",
        "Line" : 260,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# add installation paths\n",
        "Line" : 276,
        "CharPositionInLine" : 25
      },
      "16" : {
        "Text" : "# Set global variables\n",
        "Line" : 283,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Log summary\n",
        "Line" : 295,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Add test to either CF3_ENABLED_UTESTS  / CF3_ENABLED_ATESTS\n\n#                 or CF3_DISABLED_UTESTS / CF3_DISABLED_ATESTS\n",
        "Line" : 312,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "##############################################################################\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "cmake/macros/CFCheckFileLength.cmake" : {
      "ObjectId" : "0fe22ef2b2547cb2b97fdb3a7ad07bce74f198cc",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# this macro separates the sources form the headers\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/macros/CFDefinePlugin.cmake" : {
      "ObjectId" : "32bf512a11318d14f2aaf5e76430dedd904d2d5c",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# macro for defining a plugin\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set( ${PLUGIN_NAME}_DIR ${PLUGIN_DIR} PARENT_SCOPE )\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "##############################################################################\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/macros/CFFindProjectFiles.cmake" : {
      "ObjectId" : "b5f1782194dd82b86b562b8aff1f14e098d8e36b",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# finds project files and adds them to the passed variable\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# first find all the files in the directory\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################################################\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################################################################\n\n# finds project files and adds them to the passed variable\n\n##############################################################################\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# remove files marked as not orphan\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# rewrite the orphan file list in cache\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "##############################################################################\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##############################################################################\n\n# finds project files and adds them to the passed variable\n\n##############################################################################\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# append found files to orphan files (will be removed later as they are used)\n",
        "Line" : 45,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# append found files to orphan files (will be removed later as they are used)\n",
        "Line" : 48,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "##############################################################################\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "cmake/macros/CFInstallTargets.cmake" : {
      "ObjectId" : "8a7f19c78638087149f245f9e9be58eb39f67a58",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Skip installation of static libraries when we build statically\n",
        "Line" : 3,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "cmake/macros/CFInstallThirdPartyLibrary.cmake" : {
      "ObjectId" : "28dc9ab6bfb5724f353360446dca1e53ea3313bf",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#*****************************************************************************\n\n#\n\n# Copyright (c) 2000 - 2010, Lawrence Livermore National Security, LLC\n\n# Produced at the Lawrence Livermore National Laboratory\n\n# LLNL-CODE-400142\n\n# All rights reserved.\n\n#\n\n# This file is  part of VisIt. For  details, see https://visit.llnl.gov/.  The\n\n# full copyright notice is contained in the file COPYRIGHT located at the root\n\n# of the VisIt distribution or at http://www.llnl.gov/visit/copyright.html.\n\n#\n\n# Redistribution  and  use  in  source  and  binary  forms,  with  or  without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n#  - Redistributions of  source code must  retain the above  copyright notice,\n\n#    this list of conditions and the disclaimer below.\n\n#  - Redistributions in binary form must reproduce the above copyright notice,\n\n#    this  list of  conditions  and  the  disclaimer (as noted below)  in  the\n\n#    documentation and/or other materials provided with the distribution.\n\n#  - Neither the name of  the LLNS/LLNL nor the names of  its contributors may\n\n#    be used to endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT  HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR  IMPLIED WARRANTIES, INCLUDING,  BUT NOT  LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND  FITNESS FOR A PARTICULAR  PURPOSE\n\n# ARE  DISCLAIMED. IN  NO EVENT  SHALL LAWRENCE  LIVERMORE NATIONAL  SECURITY,\n\n# LLC, THE  U.S.  DEPARTMENT OF  ENERGY  OR  CONTRIBUTORS BE  LIABLE  FOR  ANY\n\n# DIRECT,  INDIRECT,   INCIDENTAL,   SPECIAL,   EXEMPLARY,  OR   CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT  LIMITED TO, PROCUREMENT OF  SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF  USE, DATA, OR PROFITS; OR  BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED  AND  ON  ANY  THEORY  OF  LIABILITY,  WHETHER  IN  CONTRACT,  STRICT\n\n# LIABILITY, OR TORT  (INCLUDING NEGLIGENCE OR OTHERWISE)  ARISING IN ANY  WAY\n\n# OUT OF THE  USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\n\n# DAMAGE.\n\n#\n\n# Modifications:\n\n#\n\n#   Kathleen Bonnell, Wed Feb  3 17:25:42 PST 2010\n\n#   Add simplifed version for windows.\n\n#\n\n#   Eric Brugger, Mon Mar  1 16:25:36 PST 2010\n\n#   I modified the test to determine if a library was a shared library for\n\n#   AIX since on AIX shared libraries can end in \".a\".\n\n#\n\n#   Eric Brugger, Fri Mar 12 16:53:54 PST 2010\n\n#   I corrected a typo I made that prevented archives from being included\n\n#   in a binary distribution when VISIT_INSTALL_THIRD_PARTY was defined.\n\n#\n\n#****************************************************************************/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# This function installs a library and any of its needed symlink variants.\n\n#\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# On Windows, we also need to copy the file to the\n\n# binary dir so our out of source builds can run.\n",
        "Line" : 75,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# also install the import libraries\n",
        "Line" : 83,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# On AIX all \".a\" files are archives except the following.\n",
        "Line" : 102,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# coolfluid_log(\"***tmpLIBFILE=${tmpLIBFILE}, LIBREALPATH=${LIBREALPATH}\")\n",
        "Line" : 116,
        "CharPositionInLine" : 7
      },
      "6" : {
        "Text" : "# We need to install a library and its symlinks\n",
        "Line" : 118,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# Come up with all of the possible library and symlink names\n",
        "Line" : 129,
        "CharPositionInLine" : 16
      },
      "8" : {
        "Text" : "# Linux way\n\n# Mac way\n",
        "Line" : 134,
        "CharPositionInLine" : 69
      },
      "9" : {
        "Text" : "# Add the names that exist to the install.\n",
        "Line" : 140,
        "CharPositionInLine" : 16
      },
      "10" : {
        "Text" : "#                        coolfluid_log(\"** Need to install ${curNAMEWithExt}\")\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# It is a framework, install as a directory\n",
        "Line" : 145,
        "CharPositionInLine" : 28
      },
      "12" : {
        "Text" : "# On Apple, we need to make the framework be executable relative\n",
        "Line" : 153,
        "CharPositionInLine" : 28
      },
      "13" : {
        "Text" : "# On Apple, we need to make the library be executable relative.\n",
        "Line" : 170,
        "CharPositionInLine" : 28
      },
      "14" : {
        "Text" : "# ENDIF((NOT ${curPATH} STREQUAL \"/usr/lib\") AND (NOT ${curPATH} MATCHES \"^\\\\/System\\\\/Library\\\\/Frameworks\\\\/.*\"))\n",
        "Line" : 183,
        "CharPositionInLine" : 12
      },
      "15" : {
        "Text" : "# We need to install just the library\n",
        "Line" : 186,
        "CharPositionInLine" : 12
      },
      "16" : {
        "Text" : "# It is a framework, install as a directory.\n",
        "Line" : 188,
        "CharPositionInLine" : 16
      },
      "17" : {
        "Text" : "# Exclude Qt*_debug libraries in framework.\n",
        "Line" : 194,
        "CharPositionInLine" : 48
      },
      "18" : {
        "Text" : "# On Apple, we need to make the framework be executable relative\n",
        "Line" : 197,
        "CharPositionInLine" : 16
      },
      "19" : {
        "Text" : "# Create an install target for just the library file\n",
        "Line" : 208,
        "CharPositionInLine" : 16
      },
      "20" : {
        "Text" : "# On Apple, we need to make the library be executable relative.\n",
        "Line" : 215,
        "CharPositionInLine" : 16
      },
      "21" : {
        "Text" : "# We have a .a that we need to install to archives.\n\n# IF(VISIT_INSTALL_THIRD_PARTY)\n",
        "Line" : 229,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "#            coolfluid_log(\"***INSTALL ${LIBFILE} to ${CF3_INSTALL_ARCHIVE_DIR}\")\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# TODO: We could install windows import libraries here...\n",
        "Line" : 238,
        "CharPositionInLine" : 12
      },
      "24" : {
        "Text" : "# ENDIF(VISIT_INSTALL_THIRD_PARTY)\n",
        "Line" : 240,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "#\n\n# This function installs a library's includes.\n\n#\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#        IF(VISIT_INSTALL_THIRD_PARTY)\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#       ENDIF(VISIT_INSTALL_THIRD_PARTY)\n",
        "Line" : 269,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 28
    },
    "cmake/macros/CFLogToFile.cmake" : {
      "ObjectId" : "112ba2521dce14ae64875c0204e6520368469c16",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# this macro logs simultaneously to screen and to file\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# this macro logs just to file\n\n##############################################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################################################\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################################################################\n\n# this macro logs to screen if we are verbose\n\n##############################################################################\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############################################################################\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/macros/CFSearchPaths.cmake" : {
      "ObjectId" : "326c1cf9f5a3d891e7be2e227b15e04bb2b31920",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# adds a path to search for when searching for include files\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################################################\n\n# adds a path to search for when searching for library files\n\n##############################################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################################################################\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############################################################################\n\n# sets a path to search for when searching for INCLUDE files\n\n##############################################################################\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##############################################################################\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##############################################################################\n\n# sets a path to search for when searching for library files\n\n##############################################################################\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##############################################################################\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\n\n# documents the feature search, for searches that already have an enabled var\n\n##############################################################################\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##############################################################################\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##############################################################################\n\n# documents the feature search\n\n##############################################################################\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# all vars must be defined and found\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# coolfluid_debug_var( _PAR_VARS )\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# is list ( so must loop over each entry )\n",
        "Line" : 112,
        "CharPositionInLine" : 35
      },
      "14" : {
        "Text" : "# coolfluid_debug_var( svar )\n",
        "Line" : 116,
        "CharPositionInLine" : 16
      },
      "15" : {
        "Text" : "# single var (not list)\n",
        "Line" : 127,
        "CharPositionInLine" : 13
      },
      "16" : {
        "Text" : "# coolfluid_debug_var( vvar )\n",
        "Line" : 129,
        "CharPositionInLine" : 9
      },
      "17" : {
        "Text" : "# not defined -- so fail\n",
        "Line" : 142,
        "CharPositionInLine" : 42
      },
      "18" : {
        "Text" : "# _PAR_VARS\n",
        "Line" : 146,
        "CharPositionInLine" : 17
      },
      "19" : {
        "Text" : "# coolfluid_debug_var( _${PACKAGE_CAPS}_vars_ok )\n",
        "Line" : 148,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# set CF3_HAVE in cache\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# skip\n",
        "Line" : 172,
        "CharPositionInLine" : 10
      },
      "22" : {
        "Text" : "# advanced marking\n",
        "Line" : 174,
        "CharPositionInLine" : 47
      },
      "23" : {
        "Text" : "# logging\n",
        "Line" : 185,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# override _CMAKE_${_PAR_PACKAGE}_QUIET\n",
        "Line" : 206,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# get_property(_is_quiet GLOBAL PROPERTY _CMAKE_${_PAR_PACKAGE}_QUIET)\n\n# coolfluid_log(\"${_PAR_PACKAGE}_is_quiet = ${_is_quiet}\")\n",
        "Line" : 214,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# advanced marking\n",
        "Line" : 217,
        "CharPositionInLine" : 35
      },
      "27" : {
        "Text" : "##############################################################################\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 28
    },
    "cmake/macros/CFSeparateSources.cmake" : {
      "ObjectId" : "8139f3a45c2fbb19edbd56e8489f450fd36a4b1f",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# this macro separates the sources form the headers\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check for existance of all declared files\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# check that file lenght is not too big\n",
        "Line" : 13,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# separate headers\n",
        "Line" : 16,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# separate sources\n",
        "Line" : 22,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# rewrite the orphan file list in cache\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "##############################################################################\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/macros/CFVariables.cmake" : {
      "ObjectId" : "357a6571170feaa1f966c713bbc0223092d551db",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# prints the variable name and value\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# sets a variable if not yet defined\n\n##############################################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/macros/CMakeLists.txt" : {
      "ObjectId" : "85a7d19d5bc29f46bd6ca52d7373d57a92924f5f",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# install the cmake files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/macros/GetDate.cmake" : {
      "ObjectId" : "5b8fd8fe49dc8d381e0f02b0f8d7151881f61913",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/macros/coolfluid3_add_library.cmake" : {
      "ObjectId" : "be7b710421f2d2cb59e0f2308629f96dcaadc305",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# macro for adding a library\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### some generic setup\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# option to build it or not (option is advanced and does not appear in the cmake gui)\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# check if all required plugins are present\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "### sources\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# separate the source files and remove them from the orphan list\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "### conditional build\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# kernel library (?)\n",
        "Line" : 86,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# defines the type of library\n",
        "Line" : 91,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# checks that is either SHARED or STATIC or MODULE\n",
        "Line" : 93,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "# include dirs from plugins\n",
        "Line" : 101,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# include dirs from INCLUDES parameter\n",
        "Line" : 106,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# add include dirs of LIBS if defined\n",
        "Line" : 113,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# skip NOTFOUND\n",
        "Line" : 115,
        "CharPositionInLine" : 50
      },
      "14" : {
        "Text" : "# add include dirs if defined\n",
        "Line" : 120,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# skip NOTFOUND\n",
        "Line" : 121,
        "CharPositionInLine" : 50
      },
      "16" : {
        "Text" : "# create the moc files\n\n#    -DBOOST_TT_HAS_OPERATOR_HPP_INCLUDED -> fixes compilation of MOC fileswhen Boost 1.48 is in use\n",
        "Line" : 129,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# add the library target\n",
        "Line" : 135,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# add extra dependencies\n",
        "Line" : 141,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# add the link libraries\n",
        "Line" : 146,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# skip NOTFOUND\n",
        "Line" : 150,
        "CharPositionInLine" : 38
      },
      "21" : {
        "Text" : "# if mpi was found add it to the libraries\n",
        "Line" : 159,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# python module support\n",
        "Line" : 164,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# add local flags\n",
        "Line" : 177,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# add installation paths\n",
        "Line" : 190,
        "CharPositionInLine" : 12
      },
      "25" : {
        "Text" : "# install headers\n",
        "Line" : 197,
        "CharPositionInLine" : 12
      },
      "26" : {
        "Text" : "# add definitions to compilation\n",
        "Line" : 209,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# set linker language\n",
        "Line" : 216,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# log some info about the library\n",
        "Line" : 225,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 29
    },
    "config/CMakeLists.txt" : {
      "ObjectId" : "b010b57ba914455f3b0aaefa4782f8eb7e24e996",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# file for general configuration for the whole framework\n\n#\n\n# config options that affect all the framework libraries and components\n\n# must be handled in this directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# coolfluid generic settings\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# coolfluid git revision. This is a separate file, because otherwise all of coolfluid is rebuilt after each commit\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# coolfluid packages found\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# coolfluid profiling configs\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Some hard-coded paths\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# install global configuration headers\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "e6e153845a1c1f3dd74a2845c8036a199ba9d841",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# we need latex for doxygen because of the formulas\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#  add_custom_target(doc ${DOXYGEN_EXECUTABLE} ${DOXY_CONFIG})\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# message(STATUS \"Doxygen configuration ${CMAKE_CURRENT_SOURCE_DIR}/${DOXYFILE}.in --> ${DOXY_CONFIG}\")\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "include/CMakeLists.txt" : {
      "ObjectId" : "721d969a1e185c4081eba0a97f5b4d91623b8bb4",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# boost/numeric/quadrature library, not in official boost release\n\n# but in the boost-vault at https://github.com/boost-vault\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/boost/CMakeLists.txt" : {
      "ObjectId" : "9bacfd75592c6083a729f1a9a3df3e44136a2988",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# install boost headers\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/fparser/CMakeLists.txt" : {
      "ObjectId" : "51047b241260634fca9e4ece0d7837c381ee2dc1",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# parser library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#if( CF3_HAVE_MATH_TR1_ASINH )\n\n#  add_definitions( -DFP_SUPPORT_ASINH )\n\n#endif()\n\n#if( CF3_HAVE_MATH_TR1_EXP2 )\n\n#  add_definitions( -DFP_SUPPORT_EXP2 )\n\n#endif()\n\n#if( CF3_HAVE_MATH_TR1_LOG2 )\n\n#  add_definitions( -DFP_SUPPORT_LOG2 )\n\n#endif()\n\n#if( CF3_HAVE_MATH_TR1_CBRT )\n\n#  add_definitions( -DFP_SUPPORT_CBRT )\n\n#endif()\n\n#if( CF3_HAVE_MATH_TR1_HYPOT )\n\n#  add_definitions( -DFP_SUPPORT_HYPOT )\n\n#endif()\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# first example\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# second example\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "include/qwt/CMakeLists.txt" : {
      "ObjectId" : "2e4ae9e39615f669436a073afa3969b71ec2decb",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# deactivate some c++ warnings in Qt\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# moc classes\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#source_group( Headers FILES ${coolfluid_qwt_files} )\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "include/rapidxml/CMakeLists.txt" : {
      "ObjectId" : "b31dde054bb5554f5af043d6772f7391536ce39f",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# install rapidxml headers since tests dont install sources\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/BlockMeshReader/CMakeLists.txt" : {
      "ObjectId" : "15235e23337d5941e4ff791977005bf5a823fa0c",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# BlockMeshReader Plugin\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# disable optimizations to avoid enormous compilation times and memory usage\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "##############################################################################\n\n# library\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "##############################################################################\n\n# unit tests\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "plugins/BlockMeshReader/test/CMakeLists.txt" : {
      "ObjectId" : "66d90010d356cbc2437742f9e810aae5b49786b2",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/CGAL/CGAL/CMakeLists.txt" : {
      "ObjectId" : "bbfb2ac82d2ebd1f53fec1aa419338aa993ea686",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/CGAL/CMakeLists.txt" : {
      "ObjectId" : "9bccfcd35e4ca0ab9cfda060cbba4df2c3dbc32c",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# CGAL Plugin\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# disable optimizations to avoid enormous compilation times and memory usage\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# avoid a conflict between boost and CGAL\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# add dir with CGAL sources\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# add dir with CGAL unit tests\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# add dir with CGAL sandbox\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "plugins/CGAL/sandbox/CMakeLists.txt" : {
      "ObjectId" : "54070545de4caf1c0a237958d3443a7695d7f078",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#avoid a conflict between boost and CGAL\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/CGAL/test/CMakeLists.txt" : {
      "ObjectId" : "a1abbd0a24fe818fb68d4176f94c7713c89069bb",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# test tetra sf using cgal\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/CMakeLists.txt" : {
      "ObjectId" : "cb8f0fa9d6260f4094a53af4ec01f2fb4e4e9b41",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# list of plugins distributed with the kernel\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# reader of OpenFOAM block mesh format\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CGAL mesh generator\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Physics\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# UFEM Finite Element solver\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Plugins for the UI\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "plugins/Physics/CMakeLists.txt" : {
      "ObjectId" : "44b3a319a4f57a3955222081129ba06b41aeb692",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# Physics plugin\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# testing tree\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "plugins/Physics/cf3/CMakeLists.txt" : {
      "ObjectId" : "370ec9ea640b7eb21e3555d9d7e87826c9f3aec9",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/Physics/cf3/physics/CMakeLists.txt" : {
      "ObjectId" : "2bca7b215917f8bfa0f0ecbffdc14c10b1e1e494",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# library euler\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# library NavierStokes\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# library Scalar\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# library LinEuler\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "plugins/Physics/cf3/physics/Scalar/CMakeLists.txt" : {
      "ObjectId" : "70b4b36d3eba120380e42c5c417c8a09615828d0",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# coolfluid_physics_scalar\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# scalar 1D\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# scalar 2D\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# scalar 3D\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# scalar system 2D\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "plugins/Physics/cf3/physics/euler/CMakeLists.txt" : {
      "ObjectId" : "25929846ab11ed01d15f930e196c07e46fae77a9",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Euler 1d\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Euler 2d\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "plugins/Physics/cf3/physics/lineuler/CMakeLists.txt" : {
      "ObjectId" : "716490de0d4b8f3ca1dc68e16f3455f185d9a309",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# coolfluid_physics_lineuler\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/Physics/cf3/physics/navierstokes/CMakeLists.txt" : {
      "ObjectId" : "6342aac15b6fd507202e10dd44e2dd248f443ce6",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Navier-Stokes 1d\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Navier-Stokes 2d\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "plugins/Physics/test/CMakeLists.txt" : {
      "ObjectId" : "2952cbcac40342891dc4197172afd1411d2e7fc5",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TQ: I leave the sources ere but deactivate this physical model\n\n#     as it follows the old API. Willem will upgrade to new one.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################################################################################\n\n# utest-advectiondiffusion\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################################################################\n\n# utest-euler\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#########################################################################################\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#########################################################################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "plugins/Physics/test/NavierStokes/CMakeLists.txt" : {
      "ObjectId" : "3c39980c234d84bd968d147a3d88b6c348902cf3",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/UFEM/CMakeLists.txt" : {
      "ObjectId" : "032d103318d00557105c0ec6b3bd7c14d14d78b9",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# UFEM plugin\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# library sources\n",
        "Line" : 17,
        "CharPositionInLine" : 27
      },
      "2" : {
        "Text" : "# testing tree\n",
        "Line" : 19,
        "CharPositionInLine" : 27
      },
      "CommentCount" : 3
    },
    "plugins/UFEM/src/CMakeLists.txt" : {
      "ObjectId" : "3b62cf6851b306ba3a9715718f2240a5f756656a",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/UFEM/src/UFEM/CMakeLists.txt" : {
      "ObjectId" : "59113e080fbc0fa3ea657a525b922cb869b996ac",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/UFEM/src/UFEM/config/CMakeLists.txt" : {
      "ObjectId" : "9894dacdd50160fd174b37dbe58a62e8b53135e5",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/UFEM/src/UFEM/demo/CMakeLists.txt" : {
      "ObjectId" : "5d7f19d738d6037a0c1df475a5245610abc1b5fa",
      "LastModified" : "2013-11-20T11:28:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/UFEM/src/UFEM/les/CMakeLists.txt" : {
      "ObjectId" : "afeb148680808c4f1444a7f33e35aec0b03e421f",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/UFEM/src/UFEM/ns_implementation/CMakeLists.txt" : {
      "ObjectId" : "842d1e0cb1396aab95bf449ec4f5653ed4d5b97f",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/UFEM/src/UFEM/ns_semi_implicit/CMakeLists.txt" : {
      "ObjectId" : "bc1de409b16664a61c2e0eaecd0c1a9ae0e60762",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/UFEM/src/UFEM/ns_semi_implicit/implementation/CMakeLists.txt" : {
      "ObjectId" : "797f98f46e3fbece96373700aa1232a071401178",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/UFEM/src/UFEM/particles/CMakeLists.txt" : {
      "ObjectId" : "bd2b4921f9420d8341c6599e5e94b2850887147d",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/UFEM/test/CMakeLists.txt" : {
      "ObjectId" : "c4cdddf0d357e3e86495b0b163f939e0e4196292",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# UFEM tests\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Disable debugging on the compiled expressions, since this takes huge amounts of memory\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/UFEM/test/demo/CMakeLists.txt" : {
      "ObjectId" : "a740e48a00406c7adb5f6fdc9523d87936adf06f",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/UFEM/test/les/CMakeLists.txt" : {
      "ObjectId" : "d8b937ef2dad7adbf01eb9a371be03b57a3ec848",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/UFEM/test/particles/CMakeLists.txt" : {
      "ObjectId" : "a38e83f35f1dc1e79719e3ac1339ed00aab535fb",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/ui/CMakeLists.txt" : {
      "ObjectId" : "863d77c9ebe427249a17c65307fe57620d0bab62",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# UI plugins\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# deactivate some c++ warnings in Qt\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Add useful macros and variables\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "plugins/ui/ParaView/CMakeLists.txt" : {
      "ObjectId" : "ba19f41a689e2033bfbd585644dfbdd174d8df8c",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#############################################################\n\n# ParaView plugin for the GUI\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# classes to \"moc\"\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add the project files\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/ui/ParaViewTab/CMakeLists.txt" : {
      "ObjectId" : "2132ca3e03348c6fa0e9eb9b06683e7517a0f812",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#############################################################\n\n# ParaView plugin for the GUI\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/ui/QwtTab/CMakeLists.txt" : {
      "ObjectId" : "d721e8dcaea7dcf7bdf92ecd32696609126142d9",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#############################################################\n\n# ParaView plugin for the GUI\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# classes to \"moc\"\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# project files\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "plugins/vtk/CMakeLists.txt" : {
      "ObjectId" : "f30678fd6657a84ca19d0a7dec48bc484f849531",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# VTK Plugin\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# library sources\n",
        "Line" : 20,
        "CharPositionInLine" : 27
      },
      "2" : {
        "Text" : "# testing tree\n",
        "Line" : 22,
        "CharPositionInLine" : 27
      },
      "CommentCount" : 3
    },
    "plugins/vtk/src/CMakeLists.txt" : {
      "ObjectId" : "a099622064bb63c780b7d750d4d6a8fe58ab81f8",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/vtk/src/vtk/CMakeLists.txt" : {
      "ObjectId" : "8ba73cf6bfdaeb339871468bbd489cd6b4ccb285",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/vtk/test/CMakeLists.txt" : {
      "ObjectId" : "4d83e800541d9840b774f48c242d69ff5de07a00",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "resources/CMakeLists.txt" : {
      "ObjectId" : "12c9bc93db27e8adb477ddf63a3f9c0d36cfb668",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# copy files to test dir in build tree\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#COMMENT \"Copying file ${rfile} to ${CF3_RESOURCES_BINARY_DIR}\")\n",
        "Line" : 32,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "sandbox/CMakeLists.txt" : {
      "ObjectId" : "4a31598847abc4811d5ab3960bf86dc1dc1f3881",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# coolfluid_find_orphan_files()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n### test for boost::asio - implements a client/server architecture\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###############################################################################\n\n### test for boost::mpl\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###############################################################################\n\n### test for boost::lambda\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###############################################################################\n\n### test for boost::bind\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###############################################################################\n\n### test for boost::multi_array\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###############################################################################\n\n### test for boost::ublas\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###############################################################################\n\n### test for CUDA\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###############################################################################\n\n### test for OpenCL\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###############################################################################\n\n### test for zoltan\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "###############################################################################\n\n### test for nullptr\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "###############################################################################\n\n### test for mpi\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "###############################################################################\n\n### test for fexcept_t - currently some problems with clang in linux\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "###############################################################################\n\n### test for XML layer\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "###############################################################################\n\n### test for weird boost::share_ptr behavior\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "###############################################################################\n\n### check that compiling with paraview works\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "###############################################################################\n\n### inheritance metadata\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "###############################################################################\n\n### test the MPI solver spawning\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "sandbox/boost-asio/CMakeLists.txt" : {
      "ObjectId" : "0c77cfbe0e3454b707015378e65b386d06e00eeb",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sandbox/boost-bind/CMakeLists.txt" : {
      "ObjectId" : "75e23dffb8a2797c0a5ea62b969d2f8815596278",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sandbox/boost-lambda/CMakeLists.txt" : {
      "ObjectId" : "f2b701fc28f91a5ad7656cdc00d80a0d5b08b224",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sandbox/boost-mpl/CMakeLists.txt" : {
      "ObjectId" : "65e8ff1b614fbce45e73129f2291be67ad235444",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sandbox/boost-multiarray/CMakeLists.txt" : {
      "ObjectId" : "82914620238bd99082f96cad09bded2a04b87066",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sandbox/boost-shared_ptr/CMakeLists.txt" : {
      "ObjectId" : "5393d10dd26b2f776b4529e0bd60dd44b0d735b6",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sandbox/boost-ublas/CMakeLists.txt" : {
      "ObjectId" : "7a541c79cfa8bf3452714297162aa6043440374d",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# boost::ublas example of linear solver using conjugate gradient method\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# boost::ublas example of linear solver using GMRES method\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "sandbox/boost-ublas/gmres/CMakeLists.txt" : {
      "ObjectId" : "f36d63fd3c023e8dc9cb84d9fa2824b9f3704d43",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sandbox/boost-ublas/pcg/CMakeLists.txt" : {
      "ObjectId" : "422a8008e4fbc2b135346cf5d12f9886d572ae6f",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sandbox/cuda/CMakeLists.txt" : {
      "ObjectId" : "f273abab8d67d5966133f8cac966022cc293819a",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sandbox/cuda/v1/CMakeLists.txt" : {
      "ObjectId" : "7cfa790c74577cb1f4869f7295d89c3fd290fa36",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sandbox/cuda/v2/CMakeLists.txt" : {
      "ObjectId" : "4020f766c85421302f187ae48dd046d2d7d415c3",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sandbox/cuda/v3/CMakeLists.txt" : {
      "ObjectId" : "305f1f575b0d0e1f5dcef6af01688f41775f60ad",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sandbox/fexcept/CMakeLists.txt" : {
      "ObjectId" : "336b94f65c1f2a964d08fd393e43b57e28a9505f",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sandbox/inheritance/CMakeLists.txt" : {
      "ObjectId" : "c7c6ae92daca3bcc34978e139028df120e8eee09",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sandbox/mpi-solvers-spawning/CMakeLists.txt" : {
      "ObjectId" : "7c8692176070d07d716afacc91b2301fff9d7a9c",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sandbox/mpi/CMakeLists.txt" : {
      "ObjectId" : "f040bb33c38ce3688dad354cff5f0da2fa701d75",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sandbox/nullptr/CMakeLists.txt" : {
      "ObjectId" : "c13504d0b8c75d46dec60329e4c9cb0ad4f3897d",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sandbox/opencl/CMakeLists.txt" : {
      "ObjectId" : "8234ab7b02a2446b95cc0a3e9600cd7cf03a6831",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set( CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_MODULE_PATH})\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "sandbox/opencl/v0/CMakeLists.txt" : {
      "ObjectId" : "ab57d54462f7e9cb6ee41d4a1ee521d624afc5c1",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sandbox/opencl/v1/CMakeLists.txt" : {
      "ObjectId" : "d596363c47688356cfac82f505371bc4d0abacb0",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sandbox/opencl/v2/CMakeLists.txt" : {
      "ObjectId" : "ae623b2705f7d90010ca6b85f24cdcbdeb909a66",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sandbox/opencl/v3/CMakeLists.txt" : {
      "ObjectId" : "f05fc6da7dd273995e77684783c77cdf944f3af9",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sandbox/opencl/v4/CMakeLists.txt" : {
      "ObjectId" : "984f71139570a840226c68afb0ef186634d95b69",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sandbox/opencl/v5/CMakeLists.txt" : {
      "ObjectId" : "1f76cc0e0c00857f0d25d0a03b611942d9eff0a1",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sandbox/opencl/v6/CMakeLists.txt" : {
      "ObjectId" : "965d0ef46c0ef252ec13660b25ea9f6309f935c4",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sandbox/opencl/v6/orig/CMakeLists.txt" : {
      "ObjectId" : "965d0ef46c0ef252ec13660b25ea9f6309f935c4",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sandbox/opencl/v8/CMakeLists.txt" : {
      "ObjectId" : "bb10b7623b954a20d7015b97e65fb668a10b8017",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sandbox/opencl/v9/CMakeLists.txt" : {
      "ObjectId" : "532ce41c8c656bfdca3a9add984e83e02d432be7",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_custom_command(TARGET \"sandbox-opencl-matmul-v9\" )\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "sandbox/paraview-deps/CMakeLists.txt" : {
      "ObjectId" : "b2af734003c91d45a8dad4cfbce43549268b544a",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sandbox/xml-layer/CMakeLists.txt" : {
      "ObjectId" : "54e7d9009892c2639cdc2ea4de0088e1e333ae26",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sandbox/zoltan/CMakeLists.txt" : {
      "ObjectId" : "b9db0532798c35d641221118ae8ef4234eeabc4f",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "2d4dc5e1c4efbd0793e2521cc72702263043ca35",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/Eigen/CMakeLists.txt" : {
      "ObjectId" : "3bb70511597fa20397083c3daff048a57dfaf5d8",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/Tools/CMakeLists.txt" : {
      "ObjectId" : "a75fe0c8e31a67fee3215efe33c43116ee4ba69c",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/common/CMakeLists.txt" : {
      "ObjectId" : "650fbb582645f5f8b0315b66c1ac75b1a4105483",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# Test PE - environment\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/math/CMakeLists.txt" : {
      "ObjectId" : "21672fcbcd09e61dc63005e4edd7ef40380b7720",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# performance test\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#if( CMAKE_COMPILER_IS_GNUCC )\n\n#    set_source_files_properties( utest-eigen-vs-matrixt.cpp\n\n#      PROPERTIES COMPILE_FLAGS \"-O2 -msse2 -msse3 -mssse3 -march=core2\" )\n\n#endif()\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "test/mesh/BlockMesh/CMakeLists.txt" : {
      "ObjectId" : "c1072855ee6c10e20dc144c3648a53fd9544ebb1",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "################################################################################\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "################################################################################\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "################################################################################\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "################################################################################\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "test/mesh/CMakeLists.txt" : {
      "ObjectId" : "13b3c8f48088a45419a4a218a4780cb67ce4fda1",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO set profiling ON for this test\n\n# set( utest-vector-benchmark_profile ON )\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# list( APPEND utest-blockmesh-mpi-scale_cflibs coolfluid_mesh_blockmesh coolfluid_mesh_generation coolfluid_mesh_lagrangep1 )\n\n# list( APPEND utest-blockmesh-mpi-scale_files   utest-blockmesh-mpi.cpp )\n\n#\n\n# set( utest-blockmesh-mpi-scale_args \"${CF3_MPI_TESTS_SIZE} scale\" )\n\n#\n\n# set( utest-blockmesh-mpi-scale_scaling ON )\n\n#\n\n# set( utest-blockmesh-mpi-scale_condition ${CF3_TMP_HAVE_SIMPLECOMM})\n\n# set( utest-blockmesh-mpi-scale_mpi_test TRUE)\n\n#\n\n# coolfluid_add_unit_test( utest-blockmesh-mpi-scale )\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "############################################################################################\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "############################################################################################\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##########################################################################\n\n# test actions\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##########################################################################\n\n# test BlockMesh\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "test/mesh/actions/CMakeLists.txt" : {
      "ObjectId" : "51ce62ab948d849f3d136242186409fe341db6db",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/physics/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/python/CMakeLists.txt" : {
      "ObjectId" : "96d65f34d6c2cbc81b1ec0255c99e4dde02dca7e",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/rapidxml/CMakeLists.txt" : {
      "ObjectId" : "bfa75bf4d0244b47891e1cfec2aaef9c4a7771fe",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/solver/CMakeLists.txt" : {
      "ObjectId" : "dca57492dccc49b5a350d265ebfbc0b126f1fe41",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# action tests\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/solver/actions/CMakeLists.txt" : {
      "ObjectId" : "1d8976e10a3eb42dd9b2c603ff0798dc5af26319",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# test Component Action\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n\n# proto tests\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/ui/CMakeLists.txt" : {
      "ObjectId" : "ff17ea8d2f03993435f53cbe77ef3c45ae846c18",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# deactivate some c++ warnings in Qt\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Add useful macros and variables\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#\n\n# uTests for coolfluid_ui_core library\n\n#\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# uTests for coolfluid_ui_graphics library\n\n#\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# uTests for coolfluid_ui_network library\n\n#\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "tools/CMakeLists.txt" : {
      "ObjectId" : "5bd30caa436923f3cbaac259c687b5656ac19f71",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/dashboard-example.cmake" : {
      "ObjectId" : "73150757b75cf69eacb3ec705fe1cdb4a5106a1d",
      "LastModified" : "2014-05-23T06:27:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##########################################################################\n\n# Dashboard configuration\n\n##########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# dashboard model\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# source dir\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# build dir\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# dependencies\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# build type\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# platform\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# site config\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# parallel build config\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# commands\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# cmake configuration commmand\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##########################################################################\n\n# Build configuration\n\n##########################################################################\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#for running inside existing build dir\n\n# set(CTEST_CONFIGURE_COMMAND \"${CTEST_CONFIGURE_COMMAND} \\\"${CTEST_BINARY_DIRECTORY}\\\"\")\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "##########################################################################\n\n# Dashboard execution\n\n##########################################################################\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Test the kernel libs\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# builds target ${CTEST_BUILD_TARGET}\n",
        "Line" : 70,
        "CharPositionInLine" : 69
      },
      "CommentCount" : 16
    }
  },
  "FileTypes" : {
    "CMAKE" : 210,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 5117
}