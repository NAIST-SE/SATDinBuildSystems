{
  "Repository" : "27513115",
  "Revision" : "HEAD",
  "ObjectId" : "2500d1dc80ad360bf7768ed4b20d8592e8381c64",
  "CommitTime" : "2019-03-18T20:25:33Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "59b91aa9305fa1e4fcc1be41a597fecf834f2993",
      "LastModified" : "2019-03-09T19:29:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# First for the generic no-config case (e.g. with mingw)\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Second, for multi-config builds (e.g. msvc)\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# These includes are needed to let the include for IMPLICIT_DEPENDS for shaders work\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO cp $(UPDATEDIR)/nuklear.sync/demo/overview.c src/tests/testnuklear\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Makefile" : {
      "ObjectId" : "ddfe667186226cf7209ffeca414e6d188238cece",
      "LastModified" : "2019-03-13T06:15:10Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# currently not part of updatelibs - intentional - we adopted the original code.\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO native file dialog support\n\n# TODO simpleai support\n\n# TODO lua support\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindMosquitto.cmake" : {
      "ObjectId" : "418f7f429e7e9787281c591f34a10a67343b9894",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindUUID.cmake" : {
      "ObjectId" : "d33f849a9e4434e2701867617154a55c4bf72c81",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Findassimp.cmake" : {
      "ObjectId" : "7363e12480830c82be8acba4879b598827a80cf4",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Findbackward.cmake" : {
      "ObjectId" : "c1f4f02f6b9ddb0cb64f61c18dfd57eb532e0671",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Findbenchmark.cmake" : {
      "ObjectId" : "9c7311fb4c345a4ca4989bca0940469629f688b1",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Finddearimgui.cmake" : {
      "ObjectId" : "3c5bc43a081a61405232e672488368cca9c3db71",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Findfastnoise.cmake" : {
      "ObjectId" : "1b5c5a3e348683d85de4a9804cbf97608ff6e754",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Findflatbuffers.cmake" : {
      "ObjectId" : "97f2916be5133b1113085d15fb6c7dd47763ecf4",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Findglm.cmake" : {
      "ObjectId" : "a8d23e8bcddbe61f05ce19b6df3c8bacbf246b80",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#We need 0.9.8\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Findgtest.cmake" : {
      "ObjectId" : "a3467cb8137549e208b7bc30b45da3c982729c78",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Findlibcurl.cmake" : {
      "ObjectId" : "e2532731c27135d9b7d7695eaabaed543fe543df",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Findlibenet.cmake" : {
      "ObjectId" : "b25bbba406d2073c93bdb72b9fa91b5baac340f4",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Findlibuv.cmake" : {
      "ObjectId" : "e0c55dbe10ab446354a4f7f58ca3f46f5e16fe69",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Findlua53.cmake" : {
      "ObjectId" : "4d4fd7febe5645030cb0f8b512b32cf5be57d7bb",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Findrestclient-cpp.cmake" : {
      "ObjectId" : "430ae6be5610630b773263ce1178c54ff01ab8f3",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Findsdl2.cmake" : {
      "ObjectId" : "bef82a060a604167ce62091fa785af633aeaf833",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Findsimplecpp.cmake" : {
      "ObjectId" : "60f05aa0a4abce3358b5613657da019e7c1972a0",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Findzlib.cmake" : {
      "ObjectId" : "5cf36ad121f64b9f0f8041cc8645971c200fd457",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/GenerateUnity.cmake" : {
      "ObjectId" : "e191618829ad1a8317465037325ae8fdc7cd1d6f",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/common.cmake" : {
      "ObjectId" : "4d0467af8a3a6c7363b626d7d122512593f64caa",
      "LastModified" : "2019-03-09T19:29:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Don't error out, it might still work\n",
        "Line" : 15,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# thread sanitizer doesn't work in combination with address and leak\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set -Werror to catch \"argument unused during compilation\" warnings\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Also needs to be a link flag for test to pass\n",
        "Line" : 55,
        "CharPositionInLine" : 55
      },
      "4" : {
        "Text" : "# Also needs to be a link flag for test to pass\n",
        "Line" : 57,
        "CharPositionInLine" : 54
      },
      "5" : {
        "Text" : "#-Wthread-safety - http://clang.llvm.org/docs/ThreadSafetyAnalysis.html\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If we are cross compiling, create a directory for native build.\n\n#set(NATIVE_BUILD_DIR \"${CMAKE_BINARY_DIR}/native\" CACHE PATH \"Path to the native build directory\")\n\n#set(NATIVE_BINARY_DIR \"${NATIVE_BUILD_DIR}/bin\" CACHE PATH \"Path to the native binary directory\")\n\n#set(NATIVE_BUILD_TARGET \"${NATIVE_BUILD_DIR}/CMakeCache.txt\")\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#if(CMAKE_CROSSCOMPILING AND NOT TARGET native-cmake-build)\n\n#\tfile(MAKE_DIRECTORY ${NATIVE_BUILD_DIR})\n\n#\tadd_custom_command(\n\n#\t\tOUTPUT ${NATIVE_BUILD_TARGET}\n\n#\t\tCOMMAND ${CMAKE_COMMAND}\n\n#\t\t\t-G \"${CMAKE_GENERATOR}\"\n\n#\t\t\t\"${CMAKE_SOURCE_DIR}\"\n\n#\t\t\t\"-DCMAKE_MAKE_PROGRAM=${CMAKE_MAKE_PROGRAM}\"\n\n#\t\t\t\"-DCMAKE_RUNTIME_OUTPUT_DIRECTORY:PATH=${NATIVE_BINARY_DIR}\"\n\n#\t\tWORKING_DIRECTORY ${NATIVE_BUILD_DIR}\n\n#\t\tVERBATIM USES_TERMINAL\n\n#\t)\n\n#\n\n#\tadd_custom_target(native-cmake-build DEPENDS ${NATIVE_BUILD_TARGET})\n\n#endif()\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/debug.cmake" : {
      "ObjectId" : "1f1494636b545cbbf5fbb6a9271ab185cbd3c851",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/docker.cmake" : {
      "ObjectId" : "115b649d9a793c39fab7680bd0b1b22f7e428d35",
      "LastModified" : "2018-11-25T16:22:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Adds a docker target to a project if a Dockerfile (copied) or Dockerfile.in (template) is in the directory\n\n# The working directory is the root dir of the project.\n\n#\n\n# The DOCKER_IMAGE_NAME_TAG variable that is set here, must be in sync with the kubernetes manifests\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/externallib.cmake" : {
      "ObjectId" : "ad0a80a0a438815a73fabfd7514be63ff0789f38",
      "LastModified" : "2019-03-17T19:54:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# macro for the FindLibName.cmake files.\n\n#\n\n# parameters:\n\n# LIB: the library we are trying to find\n\n# HEADER: the header we are trying to find\n\n# SUFFIX: suffix for the include dir\n\n# VERSION: the operator and version that is given to the pkg-config call (e.g. \">=1.0\")\n\n#          (this only works for pkg-config)\n\n#\n\n# Example: engine_find(SDL2_image SDL_image.h SDL2 \"\")\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fink\n",
        "Line" : 34,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 35,
        "CharPositionInLine" : 13
      },
      "3" : {
        "Text" : "# Blastwave\n",
        "Line" : 36,
        "CharPositionInLine" : 11
      },
      "4" : {
        "Text" : "# Fink\n",
        "Line" : 85,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 86,
        "CharPositionInLine" : 13
      },
      "6" : {
        "Text" : "# Blastwave\n",
        "Line" : 87,
        "CharPositionInLine" : 11
      },
      "7" : {
        "Text" : "#\n\n# Add external dependency. It will trigger a find_package and use the system wide install if found\n\n#\n\n# parameters:\n\n# PUBLICHEADER: optional\n\n# LIB: the name of the lib. Must match the FindXXX.cmake module and the pkg-config name of the lib\n\n# GCCCFLAGS: optional\n\n# GCCLINKERFLAGS: optional\n\n# SRCS: the list of source files for the bundled lib\n\n# DEFINES: a list of defines (without -D or /D)\n\n#\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# now convert it again - looks like find_package exports PREFIX in some versions of cmake, too\n",
        "Line" : 148,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 9
    },
    "cmake/gencomputeshader.cmake" : {
      "ObjectId" : "54f5c29f2c124f94b2fc96687bce25a8d8fcf2df",
      "LastModified" : "2019-03-09T19:29:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO We have to add the shader/ dirs of all dependencies to the include path\n",
        "Line" : 41,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 1
    },
    "cmake/gendbmodel.cmake" : {
      "ObjectId" : "81637ca7028d82296d5f816888b3ac2aefa4d298",
      "LastModified" : "2019-03-09T19:29:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/genprotocol.cmake" : {
      "ObjectId" : "9fd20efabf00e43a43d827ed81436f94d7d1fa25",
      "LastModified" : "2019-03-09T19:29:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/genshader.cmake" : {
      "ObjectId" : "8ca9d58ff835a678ba76779d2b611ad3962966cb",
      "LastModified" : "2019-03-09T19:29:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO We have to add the shader/ dirs of all dependencies to the include path\n",
        "Line" : 50,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 1
    },
    "cmake/genunity.cmake" : {
      "ObjectId" : "168ce10f03e5c6df56063009306f7c88718d1e6c",
      "LastModified" : "2019-03-09T19:29:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/googletest.cmake" : {
      "ObjectId" : "4d52fc1b7ea098b85ac898910e0acfb34a19b168",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#   Macros for generating google unit tests.\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#   gtest_suite_begin(name)\n\n#   Begin defining a unit test suite.\n\n#\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add googletest lib dependency\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/lua.cmake" : {
      "ObjectId" : "d90081709f012be69343c437440e3e837965249c",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/macros.cmake" : {
      "ObjectId" : "6a211393767f1502572640c7fdce2c5ed4fbc000",
      "LastModified" : "2019-03-09T19:29:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# set up the binary for the application. This will also set up platform specific stuff for you\n\n#\n\n# Example: engine_add_executable(TARGET SomeTargetName SRCS Source.cpp Main.cpp WINDOWED)\n\n#\n\n# TARGET:    the target name (binary name)\n\n# SRCS:      the source files for this target\n\n# WINDOWED:  this is needed to indicate whether the application should e.g. spawn a console on windows\n\n# NOINSTALL: means that the binary and data files are not put into the final installation folder\n\n#            this can e.g. be useful for stuff like code generators that are only needed during build\n\n#            time.\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# e.g. used in desktop files\n",
        "Line" : 29,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# TODO systemd-analyze --user  verify build/Debug/src/server/vengi-server.service\n",
        "Line" : 96,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 3
    },
    "cmake/manifests.cmake" : {
      "ObjectId" : "9d45aab39d14090320bbe01c6ec0c04a0fab958d",
      "LastModified" : "2019-03-09T19:29:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Replace variables in the templates to create openshift/kubernetes manifests\n\n# Variables:\n\n# * DOCKER_IMAGE_NAME_TAG: The name of the docker image that is created or used in the deployment\n\n# * PROJECT_NAME: The project() variable of the service to create the manifests for\n\n#\n\n# There can be other variables of course that are service dependent.\n\n#\n\n# The DOCKER_IMAGE_NAME_TAG variable that is set here, must be in sync with the docker target\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/pack.cmake" : {
      "ObjectId" : "c36a4020f41e5ce8435669bdd2441dd7831793ab",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(CPACK_COMPONENTS_ALL_IN_ONE_PACKAGE ON)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CPACK_RESOURCE_FILE_LICENSE ${ROOT_DIR}/LICENSE)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/perf.cmake" : {
      "ObjectId" : "eb4c2f8853f3a42d24b33b29493b75c30f94d133",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/toolchains/android-toolchain.cmake" : {
      "ObjectId" : "48c9455543850c488927fddfab515c34fc1cc3e9",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2010-2011, Ethan Rublee\n\n# Copyright (c) 2011-2014, Andrey Kamaev\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# 1.  Redistributions of source code must retain the above copyright notice,\n\n#     this list of conditions and the following disclaimer.\n\n#\n\n# 2.  Redistributions in binary form must reproduce the above copyright notice,\n\n#     this list of conditions and the following disclaimer in the documentation\n\n#     and/or other materials provided with the distribution.\n\n#\n\n# 3.  Neither the name of the copyright holder nor the names of its\n\n#     contributors may be used to endorse or promote products derived from this\n\n#     software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n#  Android CMake toolchain file, for use with the Android NDK r5-r10e\n\n#  Requires cmake 2.6.3 or newer (2.8.9 or newer is recommended).\n\n#  See home page: https://github.com/taka-no-me/android-cmake\n\n#\n\n#  Usage Linux:\n\n#   $ export ANDROID_NDK=/absolute/path/to/the/android-ndk\n\n#   $ mkdir build && cd build\n\n#   $ cmake -DCMAKE_TOOLCHAIN_FILE=path/to/the/android.toolchain.cmake ..\n\n#   $ make -j8\n\n#\n\n#  Usage Windows:\n\n#     You need native port of make to build your project.\n\n#     Android NDK r7 (and newer) already has make.exe on board.\n\n#     For older NDK you have to install it separately.\n\n#     For example, this one: http://gnuwin32.sourceforge.net/packages/make.htm\n\n#\n\n#   $ SET ANDROID_NDK=C:\\absolute\\path\\to\\the\\android-ndk\n\n#   $ mkdir build && cd build\n\n#   $ cmake.exe -G\"MinGW Makefiles\"\n\n#       -DCMAKE_TOOLCHAIN_FILE=path\\to\\the\\android.toolchain.cmake\n\n#       -DCMAKE_MAKE_PROGRAM=\"%ANDROID_NDK%\\prebuilt\\windows\\bin\\make.exe\" ..\n\n#   $ cmake.exe --build .\n\n#\n\n#\n\n#  Options (can be set as cmake parameters: -D<option_name>=<value>):\n\n#    ANDROID_NDK=/opt/android-ndk - path to the NDK root.\n\n#      Can be set as environment variable. Can be set only at first cmake run.\n\n#\n\n#    ANDROID_ABI=armeabi-v7a - specifies the target Application Binary\n\n#      Interface (ABI). This option nearly matches to the APP_ABI variable\n\n#      used by ndk-build tool from Android NDK.\n\n#\n\n#      Possible targets are:\n\n#        \"armeabi\" - ARMv5TE based CPU with software floating point operations\n\n#        \"armeabi-v7a\" - ARMv7 based devices with hardware FPU instructions\n\n#            this ABI target is used by default\n\n#        \"armeabi-v7a with NEON\" - same as armeabi-v7a, but\n\n#            sets NEON as floating-point unit\n\n#        \"armeabi-v7a with VFPV3\" - same as armeabi-v7a, but\n\n#            sets VFPV3 as floating-point unit (has 32 registers instead of 16)\n\n#        \"armeabi-v6 with VFP\" - tuned for ARMv6 processors having VFP\n\n#        \"x86\" - IA-32 instruction set\n\n#        \"mips\" - MIPS32 instruction set\n\n#\n\n#      64-bit ABIs for NDK r10 and newer:\n\n#        \"arm64-v8a\" - ARMv8 AArch64 instruction set\n\n#        \"x86_64\" - Intel64 instruction set (r1)\n\n#        \"mips64\" - MIPS64 instruction set (r6)\n\n#\n\n#    ANDROID_NATIVE_API_LEVEL=android-8 - level of Android API compile for.\n\n#      Option is read-only when standalone toolchain is used.\n\n#      Note: building for \"android-L\" requires explicit configuration.\n\n#\n\n#    ANDROID_TOOLCHAIN_NAME=arm-linux-androideabi-4.9 - the name of compiler\n\n#      toolchain to be used. The list of possible values depends on the NDK\n\n#      version. For NDK r10c the possible values are:\n\n#\n\n#        * aarch64-linux-android-4.9\n\n#        * aarch64-linux-android-clang3.4\n\n#        * aarch64-linux-android-clang3.5\n\n#        * arm-linux-androideabi-4.6\n\n#        * arm-linux-androideabi-4.8\n\n#        * arm-linux-androideabi-4.9 (default)\n\n#        * arm-linux-androideabi-clang3.4\n\n#        * arm-linux-androideabi-clang3.5\n\n#        * mips64el-linux-android-4.9\n\n#        * mips64el-linux-android-clang3.4\n\n#        * mips64el-linux-android-clang3.5\n\n#        * mipsel-linux-android-4.6\n\n#        * mipsel-linux-android-4.8\n\n#        * mipsel-linux-android-4.9\n\n#        * mipsel-linux-android-clang3.4\n\n#        * mipsel-linux-android-clang3.5\n\n#        * x86-4.6\n\n#        * x86-4.8\n\n#        * x86-4.9\n\n#        * x86-clang3.4\n\n#        * x86-clang3.5\n\n#        * x86_64-4.9\n\n#        * x86_64-clang3.4\n\n#        * x86_64-clang3.5\n\n#\n\n#    ANDROID_FORCE_ARM_BUILD=OFF - set ON to generate 32-bit ARM instructions\n\n#      instead of Thumb. Is not available for \"armeabi-v6 with VFP\"\n\n#      (is forced to be ON) ABI.\n\n#\n\n#    ANDROID_NO_UNDEFINED=ON - set ON to show all undefined symbols as linker\n\n#      errors even if they are not used.\n\n#\n\n#    ANDROID_SO_UNDEFINED=OFF - set ON to allow undefined symbols in shared\n\n#      libraries. Automatically turned for NDK r5x and r6x due to GLESv2\n\n#      problems.\n\n#\n\n#    ANDROID_STL=gnustl_static - specify the runtime to use.\n\n#\n\n#      Possible values are:\n\n#        none           -> Do not configure the runtime.\n\n#        system         -> Use the default minimal system C++ runtime library.\n\n#                          Implies -fno-rtti -fno-exceptions.\n\n#                          Is not available for standalone toolchain.\n\n#        system_re      -> Use the default minimal system C++ runtime library.\n\n#                          Implies -frtti -fexceptions.\n\n#                          Is not available for standalone toolchain.\n\n#        gabi++_static  -> Use the GAbi++ runtime as a static library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        gabi++_shared  -> Use the GAbi++ runtime as a shared library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        stlport_static -> Use the STLport runtime as a static library.\n\n#                          Implies -fno-rtti -fno-exceptions for NDK before r7.\n\n#                          Implies -frtti -fno-exceptions for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        stlport_shared -> Use the STLport runtime as a shared library.\n\n#                          Implies -fno-rtti -fno-exceptions for NDK before r7.\n\n#                          Implies -frtti -fno-exceptions for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        gnustl_static  -> Use the GNU STL as a static library.\n\n#                          Implies -frtti -fexceptions.\n\n#        gnustl_shared  -> Use the GNU STL as a shared library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7b and newer.\n\n#                          Silently degrades to gnustl_static if not available.\n\n#\n\n#    ANDROID_STL_FORCE_FEATURES=ON - turn rtti and exceptions support based on\n\n#      chosen runtime. If disabled, then the user is responsible for settings\n\n#      these options.\n\n#\n\n#  What?:\n\n#    android-cmake toolchain searches for NDK/toolchain in the following order:\n\n#      ANDROID_NDK - cmake parameter\n\n#      ANDROID_NDK - environment variable\n\n#      ANDROID_STANDALONE_TOOLCHAIN - cmake parameter\n\n#      ANDROID_STANDALONE_TOOLCHAIN - environment variable\n\n#      ANDROID_NDK - default locations\n\n#      ANDROID_STANDALONE_TOOLCHAIN - default locations\n\n#\n\n#    Make sure to do the following in your scripts:\n\n#      SET( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${my_cxx_flags}\" )\n\n#      SET( CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${my_cxx_flags}\" )\n\n#    The flags will be prepopulated with critical flags, so don't loose them.\n\n#    Also be aware that toolchain also sets configuration-specific compiler\n\n#    flags and linker flags.\n\n#\n\n#    ANDROID and BUILD_ANDROID will be set to true, you may test any of these\n\n#    variables to make necessary Android-specific configuration changes.\n\n#\n\n#    Also ARMEABI or ARMEABI_V7A or X86 or MIPS or ARM64_V8A or X86_64 or MIPS64\n\n#    will be set true, mutually exclusive. NEON option will be set true\n\n#    if VFP is set to NEON.\n\n#\n\n# ------------------------------------------------------------------------------\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# subsequent toolchain loading is not really needed\n",
        "Line" : 190,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# touch toolchain variable to suppress \"unused variable\" warning\n",
        "Line" : 195,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# inherit settings in recursive loads\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# this one is important\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# this one not so much\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# rpath makes low sense for Android\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# NDK search paths\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# known ABIs\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# API level defaults\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# fight against cygwin\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# remove cygwin from PATH\n",
        "Line" : 347,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# detect current host platform\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# see if we have path to Android NDK\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# see if we have path to Android standalone toolchain\n",
        "Line" : 386,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "#try to find Android NDK in one of the the default locations\n",
        "Line" : 390,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#try to find Android standalone toolchain in one of the the default locations\n",
        "Line" : 404,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "# remember found paths\n",
        "Line" : 415,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# try to detect change\n",
        "Line" : 432,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# android NDK layout\n",
        "Line" : 456,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# try to automatically detect the layout\n",
        "Line" : 459,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# only 32-bit at the moment\n",
        "Line" : 471,
        "CharPositionInLine" : 71
      },
      "23" : {
        "Text" : "# only 32-bit at the moment\n",
        "Line" : 476,
        "CharPositionInLine" : 71
      },
      "24" : {
        "Text" : "# ANDROID_NDK_LAYOUT STREQUAL \"RELEASE\"\n",
        "Line" : 480,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# try to detect change of NDK\n",
        "Line" : 487,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# get all the details about standalone toolchain\n",
        "Line" : 501,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#message(\"machine: !${__machine}!\\narch: !${__arch}!\\nversion: !${__version}!\\ntoolchain: !${__toolchain}!\\n\")\n",
        "Line" : 568,
        "CharPositionInLine" : 3
      },
      "28" : {
        "Text" : "# get all the details about NDK\n",
        "Line" : 580,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# do not go through all toolchains if we know the name\n",
        "Line" : 589,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# we need clang to go after gcc\n",
        "Line" : 602,
        "CharPositionInLine" : 39
      },
      "31" : {
        "Text" : "# build list of available ABIs\n",
        "Line" : 620,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# choose target ABI\n",
        "Line" : 633,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# verify that target ABI is supported\n",
        "Line" : 635,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# set target ABI options\n",
        "Line" : 645,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# need always fallback to older platform\n",
        "Line" : 691,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "# really dirty hack\n\n# it is not possible to change CMAKE_SYSTEM_PROCESSOR after the first run...\n",
        "Line" : 719,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# choose toolchain\n",
        "Line" : 732,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# choose native API level\n",
        "Line" : 781,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# adjust API level\n",
        "Line" : 785,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# validate\n",
        "Line" : 797,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# remember target ABI\n",
        "Line" : 819,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# runtime choice (STL, rtti, exceptions)\n",
        "Line" : 827,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# setup paths and STL for standalone toolchain\n",
        "Line" : 895,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# old location ( pre r8c )\n",
        "Line" : 904,
        "CharPositionInLine" : 3
      },
      "45" : {
        "Text" : "# always search static GNU STL to get the location of libsupc++.a\n",
        "Line" : 914,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# clang\n",
        "Line" : 949,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# setup paths and STL for NDK\n",
        "Line" : 973,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# do nothing\n",
        "Line" : 979,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# before r7\n",
        "Line" : 989,
        "CharPositionInLine" : 42
      },
      "50" : {
        "Text" : "# before r8d\n",
        "Line" : 997,
        "CharPositionInLine" : 46
      },
      "51" : {
        "Text" : "# before r7\n",
        "Line" : 1002,
        "CharPositionInLine" : 42
      },
      "52" : {
        "Text" : "# gnustl binary for 4.7 compiler is buggy :(\n\n# TODO: look for right fix\n",
        "Line" : 1014,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# find libsupc++.a - rtti & exceptions\n",
        "Line" : 1032,
        "CharPositionInLine" : 1
      },
      "54" : {
        "Text" : "# r8b or newer\n",
        "Line" : 1034,
        "CharPositionInLine" : 137
      },
      "55" : {
        "Text" : "# r7-r8\n",
        "Line" : 1036,
        "CharPositionInLine" : 110
      },
      "56" : {
        "Text" : "# before r7\n",
        "Line" : 1038,
        "CharPositionInLine" : 36
      },
      "57" : {
        "Text" : "# case of shared STL linkage\n",
        "Line" : 1058,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# TODO: check if .so file exists before the renaming\n",
        "Line" : 1061,
        "CharPositionInLine" : 1
      },
      "59" : {
        "Text" : "# ccache support\n",
        "Line" : 1065,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# setup the cross-compiler\n",
        "Line" : 1078,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Use gcc-ar if we have it for better LTO support.\n",
        "Line" : 1102,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# Force set compilers because standard identification works badly for us\n",
        "Line" : 1126,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# force ASM compiler (required for CMake < 2.8.5)\n",
        "Line" : 1149,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# flags and definitions\n",
        "Line" : 1165,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# try to convert path to 8.3 form\n",
        "Line" : 1173,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# quotes can break try_compile and compiler identification\n",
        "Line" : 1188,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "# NDK flags\n",
        "Line" : 1196,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# always compile ARMEABI_V6 in arm mode; otherwise there is no difference from ARMEABI\n",
        "Line" : 1213,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# good/necessary when porting desktop libraries\n",
        "Line" : 1240,
        "CharPositionInLine" : 62
      },
      "70" : {
        "Text" : "# see https://android-review.googlesource.com/#/c/47564/\n",
        "Line" : 1247,
        "CharPositionInLine" : 72
      },
      "71" : {
        "Text" : "# ABI-specific flags\n",
        "Line" : 1250,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# vfp == vfpv2\n",
        "Line" : 1261,
        "CharPositionInLine" : 91
      },
      "73" : {
        "Text" : "# STL\n",
        "Line" : 1278,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# C objects:\n",
        "Line" : 1289,
        "CharPositionInLine" : 2
      },
      "75" : {
        "Text" : "# variables controlling optional build flags\n",
        "Line" : 1307,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# before r7\n",
        "Line" : 1308,
        "CharPositionInLine" : 40
      },
      "77" : {
        "Text" : "# libGLESv2.so in NDK's prior to r7 refers to missing external symbols.\n\n# So this flag option is required for all projects using OpenGL from native.\n",
        "Line" : 1309,
        "CharPositionInLine" : 1
      },
      "78" : {
        "Text" : "# linker flags\n",
        "Line" : 1329,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# this is *required* to use the following linker flags that routes around\n\n# a CPU bug in some Cortex-A8 implementations:\n",
        "Line" : 1333,
        "CharPositionInLine" : 1
      },
      "80" : {
        "Text" : "# there is some sysroot-related problem in mips linker...\n",
        "Line" : 1340,
        "CharPositionInLine" : 2
      },
      "81" : {
        "Text" : "# after r8b\n",
        "Line" : 1361,
        "CharPositionInLine" : 48
      },
      "82" : {
        "Text" : "# version 4.6\n",
        "Line" : 1369,
        "CharPositionInLine" : 8
      },
      "83" : {
        "Text" : "# cache flags\n",
        "Line" : 1391,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# put flags to cache (for debug purpose only)\n",
        "Line" : 1402,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# finish flags\n",
        "Line" : 1408,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# pie/pic\n",
        "Line" : 1425,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# configure rtti\n",
        "Line" : 1435,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# configure exceptios\n",
        "Line" : 1444,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# global includes and link directories\n",
        "Line" : 1455,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# avoid CMP0015 policy warning\n",
        "Line" : 1457,
        "CharPositionInLine" : 111
      },
      "91" : {
        "Text" : "# detect if need link crtbegin_so.o explicitly\n",
        "Line" : 1460,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# setup output directories\n",
        "Line" : 1497,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# copy shaed stl library to build directory\n",
        "Line" : 1514,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# set these global flags for cmake client scripts to change behavior\n",
        "Line" : 1526,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# where is the target environment\n",
        "Line" : 1530,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# only search for libraries and includes in the ndk toolchain\n",
        "Line" : 1533,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# macro to find packages on the host OS\n",
        "Line" : 1539,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "# macro to find programs on the host OS\n",
        "Line" : 1561,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# export toolchain settings for the try_compile() command\n",
        "Line" : 1583,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# force cmake to produce / instead of \\ in build commands for Ninja generator\n",
        "Line" : 1620,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# it is a bad hack after all\n\n# CMake generates Ninja makefiles with UNIX paths only if it thinks that we are going to build with MinGW\n",
        "Line" : 1622,
        "CharPositionInLine" : 1
      },
      "102" : {
        "Text" : "# tell CMake that we are MinGW\n\n# stop recursion\n",
        "Line" : 1624,
        "CharPositionInLine" : 37
      },
      "103" : {
        "Text" : "# unset( CMAKE_COMPILER_IS_MINGW ) # can't unset because CMake does not convert back-slashes in response files without it\n",
        "Line" : 1628,
        "CharPositionInLine" : 1
      },
      "104" : {
        "Text" : "# Variables controlling behavior or set by cmake toolchain:\n\n#   ANDROID_ABI : \"armeabi-v7a\" (default), \"armeabi\", \"armeabi-v7a with NEON\", \"armeabi-v7a with VFPV3\", \"armeabi-v6 with VFP\", \"x86\", \"mips\", \"arm64-v8a\", \"x86_64\", \"mips64\"\n\n#   ANDROID_NATIVE_API_LEVEL : 3,4,5,8,9,14,15,16,17,18,19,21 (depends on NDK version)\n\n#   ANDROID_STL : gnustl_static/gnustl_shared/stlport_static/stlport_shared/gabi++_static/gabi++_shared/system_re/system/none\n\n#   ANDROID_FORBID_SYGWIN : ON/OFF\n\n#   ANDROID_NO_UNDEFINED : ON/OFF\n\n#   ANDROID_SO_UNDEFINED : OFF/ON  (default depends on NDK version)\n\n#   ANDROID_FUNCTION_LEVEL_LINKING : ON/OFF\n\n#   ANDROID_GOLD_LINKER : ON/OFF\n\n#   ANDROID_NOEXECSTACK : ON/OFF\n\n#   ANDROID_RELRO : ON/OFF\n\n#   ANDROID_FORCE_ARM_BUILD : ON/OFF\n\n#   ANDROID_STL_FORCE_FEATURES : ON/OFF\n\n#   ANDROID_LIBM_PATH : path to libm.so (set to something like $(TOP)/out/target/product/<product_name>/obj/lib/libm.so) to workaround unresolved `sincos`\n\n# Can be set only at the first run:\n\n#   ANDROID_NDK : path to your NDK install\n\n#   NDK_CCACHE : path to your ccache executable\n\n#   ANDROID_TOOLCHAIN_NAME : the NDK name of compiler toolchain\n\n#   ANDROID_NDK_HOST_X64 : try to use x86_64 toolchain (default for x64 host systems)\n\n#   ANDROID_NDK_LAYOUT : the inner NDK structure (RELEASE, LINARO, ANDROID)\n\n#   LIBRARY_OUTPUT_PATH_ROOT : <any valid path>\n\n#   ANDROID_STANDALONE_TOOLCHAIN\n\n#\n\n# Primary read-only variables:\n\n#   ANDROID : always TRUE\n\n#   ARMEABI : TRUE for arm v6 and older devices\n\n#   ARMEABI_V6 : TRUE for arm v6\n\n#   ARMEABI_V7A : TRUE for arm v7a\n\n#   ARM64_V8A : TRUE for arm64-v8a\n\n#   NEON : TRUE if NEON unit is enabled\n\n#   VFPV3 : TRUE if VFP version 3 is enabled\n\n#   X86 : TRUE if configured for x86\n\n#   X86_64 : TRUE if configured for x86_64\n\n#   MIPS : TRUE if configured for mips\n\n#   MIPS64 : TRUE if configured for mips64\n\n#   BUILD_WITH_ANDROID_NDK : TRUE if NDK is used\n\n#   BUILD_WITH_STANDALONE_TOOLCHAIN : TRUE if standalone toolchain is used\n\n#   ANDROID_NDK_HOST_SYSTEM_NAME : \"windows\", \"linux-x86\" or \"darwin-x86\" depending on host platform\n\n#   ANDROID_NDK_ABI_NAME : \"armeabi\", \"armeabi-v7a\", \"x86\", \"mips\", \"arm64-v8a\", \"x86_64\", \"mips64\" depending on ANDROID_ABI\n\n#   ANDROID_NDK_RELEASE : from r5 to r10e; set only for NDK\n\n#   ANDROID_NDK_RELEASE_NUM : numeric ANDROID_NDK_RELEASE version (1000*major+minor)\n\n#   ANDROID_ARCH_NAME : \"arm\", \"x86\", \"mips\", \"arm64\", \"x86_64\", \"mips64\" depending on ANDROID_ABI\n\n#   ANDROID_SYSROOT : path to the compiler sysroot\n\n#   TOOL_OS_SUFFIX : \"\" or \".exe\" depending on host platform\n\n#   ANDROID_COMPILER_IS_CLANG : TRUE if clang compiler is used\n\n#\n\n# Secondary (less stable) read-only variables:\n\n#   ANDROID_COMPILER_VERSION : GCC version used (not Clang version)\n\n#   ANDROID_CLANG_VERSION : version of clang compiler if clang is used\n\n#   ANDROID_CXX_FLAGS : C/C++ compiler flags required by Android platform\n\n#   ANDROID_SUPPORTED_ABIS : list of currently allowed values for ANDROID_ABI\n\n#   ANDROID_TOOLCHAIN_MACHINE_NAME : \"arm-linux-androideabi\", \"arm-eabi\" or \"i686-android-linux\"\n\n#   ANDROID_TOOLCHAIN_ROOT : path to the top level of toolchain (standalone or placed inside NDK)\n\n#   ANDROID_CLANG_TOOLCHAIN_ROOT : path to clang tools\n\n#   ANDROID_SUPPORTED_NATIVE_API_LEVELS : list of native API levels found inside NDK\n\n#   ANDROID_STL_INCLUDE_DIRS : stl include paths\n\n#   ANDROID_RTTI : if rtti is enabled by the runtime\n\n#   ANDROID_EXCEPTIONS : if exceptions are enabled by the runtime\n\n#   ANDROID_GCC_TOOLCHAIN_NAME : read-only, differs from ANDROID_TOOLCHAIN_NAME only if clang is used\n\n#\n\n# Defaults:\n\n#   ANDROID_DEFAULT_NDK_API_LEVEL\n\n#   ANDROID_DEFAULT_NDK_API_LEVEL_${ARCH}\n\n#   ANDROID_NDK_SEARCH_PATHS\n\n#   ANDROID_SUPPORTED_ABIS_${ARCH}\n\n#   ANDROID_SUPPORTED_NDK_VERSIONS\n",
        "Line" : 1633,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 105
    },
    "cmake/toolchains/darwin-toolchain.cmake" : {
      "ObjectId" : "e25e92d4b75372781e567e26030f0e0ea1b12948",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/toolchains/ios-toolchain.cmake" : {
      "ObjectId" : "83f2fbd1b3c4e411eb1622b315b10086807746ba",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is based off of the Platform/Darwin.cmake and Platform/UnixPaths.cmake\n\n# files which are included with CMake 2.8.4\n\n# It has been altered for iOS development\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Options:\n\n#\n\n# IOS_PLATFORM = OS (default) or SIMULATOR or SIMULATOR64\n\n#   This decides if SDKS will be selected from the iPhoneOS.platform or iPhoneSimulator.platform folders\n\n#   OS - the default, used to build for iPhone and iPad physical devices, which have an arm arch.\n\n#   SIMULATOR - used to build for the Simulator platforms, which have an x86 arch.\n\n#\n\n# CMAKE_IOS_DEVELOPER_ROOT = automatic(default) or /path/to/platform/Developer folder\n\n#   By default this location is automatcially chosen based on the IOS_PLATFORM value above.\n\n#   If set manually, it will override the default location and force the user of a particular Developer Platform\n\n#\n\n# CMAKE_IOS_SDK_ROOT = automatic(default) or /path/to/platform/Developer/SDKs/SDK folder\n\n#   By default this location is automatcially chosen based on the CMAKE_IOS_DEVELOPER_ROOT value.\n\n#   In this case it will always be the most up-to-date SDK found in the CMAKE_IOS_DEVELOPER_ROOT path.\n\n#   If set manually, this will force the use of a specific SDK version\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Macros:\n\n#\n\n# set_xcode_property (TARGET XCODE_PROPERTY XCODE_VALUE)\n\n#  A convenience macro for setting xcode specific properties on targets\n\n#  example: set_xcode_property (myioslib IPHONEOS_DEPLOYMENT_TARGET \"3.1\")\n\n#\n\n# find_host_package (PROGRAM ARGS)\n\n#  A macro used to find executable programs on the host system, not within the iOS environment.\n\n#  Thanks to the android-cmake project for providing the command\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Standard settings\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Required as of cmake 2.8.10\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Determine the cmake host system version so we know where to find the iOS SDKs\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Force the compilers to gcc for iOS\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Skip the platform compiler checks for cross compiling\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# All iOS/Darwin specific settings - some may be redundant\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Hidden visibilty is required for cxx on iOS \n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# hack: if a new cmake (which uses CMAKE_INSTALL_NAME_TOOL) runs on an old build tree\n\n# (where install_name_tool was hardcoded) and where CMAKE_INSTALL_NAME_TOOL isn't in the cache\n\n# and still cmake didn't fail in CMakeFindBinUtils.cmake (because it isn't rerun)\n\n# hardcode CMAKE_INSTALL_NAME_TOOL here to install_name_tool, so it behaves as it did before, Alex\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Setup iOS platform unless specified manually with IOS_PLATFORM\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Setup building for arm64 or not\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Check the platform selection and setup for developer root\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This causes the installers to properly locate the output libraries\n",
        "Line" : 115,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# This causes the installers to properly locate the output libraries\n",
        "Line" : 121,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# This causes the installers to properly locate the output libraries\n",
        "Line" : 127,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# Setup iOS developer location unless specified manually with CMAKE_IOS_DEVELOPER_ROOT\n\n# Note Xcode 4.3 changed the installation location, choose the most recent one available\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Find and use the most recent iOS sdk unless specified manually with CMAKE_IOS_SDK_ROOT\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Set the sysroot default to the most recent SDK\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# set the architecture for iOS\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Set the find root to the iOS developer roots and to user defined paths\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# default to searching for frameworks first\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# set up the default search directories for frameworks\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# only search the iOS sdks, not the remainder of the host filesystem\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# This little macro lets you set any XCode specific property\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# This macro lets you find executable programs on the host system\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 27
    },
    "cmake/toolchains/linux-toolchain.cmake" : {
      "ObjectId" : "abc5c67eb7a26e7c349c76edc6cd8357d440f5a3",
      "LastModified" : "2019-03-17T19:54:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(CMAKE_C_STANDARD_LIBRARIES \"${CMAKE_C_STANDARD_LIBRARIES} ${CMAKE_DL_LIBS}\")\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# might also be in libc\n",
        "Line" : 66,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "cmake/toolchains/msvc-toolchain.cmake" : {
      "ObjectId" : "73964770fc0f1a3bdd335c0e510bbefb7343a015",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/toolchains/nacl-toolchain.cmake" : {
      "ObjectId" : "903e24911801f97782d9d242f8a35930cad9767d",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/toolchains/steamlink-toolchain.cmake" : {
      "ObjectId" : "1d640fc21769338e3ee80e754f6301e8eae9e006",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# see https://cmake.org/Wiki/CMake_Useful_Variables\n\n# see https://cmake.org/Wiki/CMake_Cross_Compiling\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Workaround for http://www.cmake.org/Bug/view.php?id=14075\n",
        "Line" : 12,
        "CharPositionInLine" : 30
      },
      "CommentCount" : 2
    },
    "cmake/toolchains/windows-toolchain.cmake" : {
      "ObjectId" : "a05b6ab0a7999d9db9dda4fa25844dbcf13f7227",
      "LastModified" : "2019-03-09T19:29:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/ui.cmake" : {
      "ObjectId" : "20ea78e2048552163404ff9f433a13967805be82",
      "LastModified" : "2019-03-09T19:29:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_dependencies(${TARGET} uitool)\n",
        "Line" : 18,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 1
    },
    "cmake/util.cmake" : {
      "ObjectId" : "8251abf5e5d6a83e08f7f584b06cb7708b65312a",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# some cross compiling toolchains define this\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set_source_files_properties(${ARGN} PROPERTIES LANGUAGE CXX)\n",
        "Line" : 30,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "cmake/valgrind.cmake" : {
      "ObjectId" : "b52005bd89ad848b339a32940f2b4757c0dae96a",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/vogl.cmake" : {
      "ObjectId" : "cd1bea9e5ffb9c0e933f52853caeab28911fb1d3",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/libs/CMakeLists.txt" : {
      "ObjectId" : "66ab935ba15a0199478d7906d33e4e5964159692",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(selene)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/libs/assimp/CMakeLists.txt" : {
      "ObjectId" : "5da685ab7039f9073779f6d58ce48b1119a9e40a",
      "LastModified" : "2019-03-09T19:29:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\tcode/C4DImporter.cpp\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#target_compile_definitions(assimp PRIVATE -DASSIMP_BUILD_NO_OBJ_IMPORTER)\n",
        "Line" : 212,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#target_compile_definitions(assimp PRIVATE -DASSIMP_BUILD_NO_MD5_IMPORTER)\n",
        "Line" : 216,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#target_compile_definitions(assimp PRIVATE -DASSIMP_BUILD_NO_COLLADA_IMPORTER)\n",
        "Line" : 230,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "#target_compile_definitions(assimp PRIVATE -DASSIMP_BUILD_NO_OPENGEX_IMPORTER)\n",
        "Line" : 236,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#target_compile_definitions(assimp PRIVATE -DASSIMP_BUILD_NO_FBX_IMPORTER)\n",
        "Line" : 244,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#target_compile_definitions(assimp PRIVATE -DASSIMP_BUILD_NO_COLLADA_EXPORTER)\n",
        "Line" : 253,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "#target_compile_definitions(assimp PRIVATE -DASSIMP_BUILD_NO_OBJ_EXPORTER)\n",
        "Line" : 256,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "#target_compile_definitions(assimp PRIVATE -DASSIMP_BUILD_NO_3DS_EXPORTER)\n",
        "Line" : 259,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 9
    },
    "contrib/libs/assimp/code/CMakeLists.txt" : {
      "ObjectId" : "7ae1a7e63e25abc3e924715cdb645a9c43615d0c",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Open Asset Import Library (assimp)\n\n# ----------------------------------------------------------------------\n\n#\n\n# Copyright (c) 2006-2018, assimp team\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# All rights reserved.\n\n#\n\n# Redistribution and use of this software in source and binary forms,\n\n# with or without modification, are permitted provided that the\n\n# following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer in the documentation and/or other\n\n#   materials provided with the distribution.\n\n#\n\n# * Neither the name of the assimp team, nor the names of its\n\n#   contributors may be used to endorse or promote products\n\n#   derived from this software without specific prior\n\n#   written permission of the assimp team.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#----------------------------------------------------------------------\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Listing and grouping of all the source files.\n\n# 1) Set the file lists for each component\n\n# 2) Create a Source Group for each component, for IDE project orginization\n\n# 3) Add libassimp using the file lists (eliminates duplication of file names between\n\n#    source groups and library command)\n\n#\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if this variable is set to TRUE, the user can manually disable importers by setting\n\n# ASSIMP_BUILD_XXX_IMPORTER to FALSE for each importer\n\n# if this variable is set to FALSE, the user can manually enable importers by setting\n\n# ASSIMP_BUILD_XXX_IMPORTER to TRUE for each importer\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# macro to add the CMake Option ADD_ASSIMP_IMPORTER_<name> which enables compile of loader\n\n# this way selective loaders can be compiled (reduces filesize + compile time)\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# list of enabled importers\n",
        "Line" : 224,
        "CharPositionInLine" : 33
      },
      "6" : {
        "Text" : "# disabled list (used to print)\n",
        "Line" : 225,
        "CharPositionInLine" : 34
      },
      "7" : {
        "Text" : "# Check dependencies for glTF importer with Open3DGC-compression.\n\n# RT-extensions is used in \"contrib/Open3DGC/o3dgcTimer.h\" for collecting statistics. Pointed file\n\n# has implementation for different platforms: WIN32, __MACH__ and other (\"else\" block).\n",
        "Line" : 821,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#!TODO: off course is better to remove statistics timers from o3dgc codec. Or propose to choose what to use.\n",
        "Line" : 831,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# VC2010 fixes\n",
        "Line" : 837,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Assimp Files\n",
        "Line" : 863,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Model Support\n",
        "Line" : 872,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Third-party libraries\n",
        "Line" : 875,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Necessary to show the headers in the project when using the VC++ generator:\n",
        "Line" : 883,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# in order to prevent DLL hell, each of the DLLs have to be suffixed with the major version and msvc prefix\n",
        "Line" : 918,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# use full version\n",
        "Line" : 941,
        "CharPositionInLine" : 32
      },
      "16" : {
        "Text" : "# PUBLIC_HEADER option does not support directory structure creation\n\n# add ./Compiler/*.h to assimp.framework via copy command\n",
        "Line" : 958,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Build against external unzip, or add ../contrib/unzip so\n\n# assimp can #include \"unzip.h\"\n",
        "Line" : 968,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Add RT-extension library for glTF importer with Open3DGC-compression.\n",
        "Line" : 977,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Create the coveralls target.\n",
        "Line" : 1024,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# The source files.\n\n# If we should upload.\n",
        "Line" : 1026,
        "CharPositionInLine" : 27
      },
      "21" : {
        "Text" : "# (Optional) Alternate project cmake module path.\n",
        "Line" : 1028,
        "CharPositionInLine" : 48
      },
      "CommentCount" : 22
    },
    "contrib/libs/assimp/contrib/gtest/CMakeLists.txt" : {
      "ObjectId" : "621d0f0421543eba41e1d69f497814104bb9c6a7",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 62,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Where Google Test's libraries can be found.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Summary of tuple support for Microsoft Visual Studio:\n\n# Compiler    version(MS)  version(cmake)  Support\n\n# ----------  -----------  --------------  -----------------------------\n\n# <= VS 2010  <= 10        <= 1600         Use Google Tests's own tuple.\n\n# VS 2012     11           1700            std::tr1::tuple + _VARIADIC_MAX=10\n\n# VS 2013     12           1800            std::tr1::tuple\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# If the CMake version supports it, attach header directory information\n\n# to the targets for when we are part of a parent build (ie being pulled\n\n# in via add_subdirectory() rather than being a standalone build).\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "########################################################################\n\n#\n\n# Install rules\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_samples=ON flag when running cmake.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 181,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# 1600 is Visual Studio 2010.\n",
        "Line" : 210,
        "CharPositionInLine" : 43
      },
      "22" : {
        "Text" : "# Visual Studio 2010, 2012, and 2013 define symbols in std::tr1 that\n\n# conflict with our own definitions. Therefore using our own tuple does not\n\n# work on those compilers.\n",
        "Line" : 211,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 225,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Visual Studio .NET 2003 does not support STL with exceptions disabled.\n",
        "Line" : 231,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# 1310 is Visual Studio .NET 2003\n",
        "Line" : 232,
        "CharPositionInLine" : 46
      },
      "26" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 268,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 27
    },
    "contrib/libs/assimp/contrib/gtest/Makefile.am" : {
      "ObjectId" : "29797e4e9de4e1d5e5f93bba14288de87f623946",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gtest source files that we don't compile directly.  They are\n\n# #included by gtest-all.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sample files that we don't compile.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ test files that we don't compile directly.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Python tests that we don't run.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake script\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MSVC project files\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# xcode project files\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# xcode sample files\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C++Builder project files\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Distribute and install M4 macro\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Bulid rules for samples and tests. Automake's naming for some of\n\n# these variables isn't terribly obvious, so this is a brief\n\n# reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# A simple sample on using gtest.\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Another sample.  It also verifies that libgtest works.\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This tests most constructs of gtest and verifies that libgtest_main\n\n# and libgtest work.\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Tests that fused gtest files compile and work.\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Build rules for putting fused Google Test files into the distribution\n\n# package. The user can also create those files by manually running\n\n# scripts/fuse_gtest_files.py.\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Test can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "contrib/libs/assimp/contrib/gtest/cmake/internal_utils.cmake" : {
      "ObjectId" : "777b91ed4b8caa226ea55cfa61fe7ec433ffb452",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# 1400 is Visual Studio 2005\n",
        "Line" : 59,
        "CharPositionInLine" : 33
      },
      "9" : {
        "Text" : "# Suppress spurious warnings MSVC 7.1 sometimes issues.\n\n# Forcing value to bool.\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Copy constructor and assignment operator could not be generated.\n",
        "Line" : 63,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Compatibility warnings not applicable to Google Test.\n\n# Resolved overload was found by argument-dependent lookup.\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# 1500 is Visual Studio 2008\n",
        "Line" : 69,
        "CharPositionInLine" : 33
      },
      "13" : {
        "Text" : "# Conditional expression is constant.\n\n# When compiling with /W4, we get several instances of C4127\n\n# (Conditional expression is constant). In our code, we disable that\n\n# warning on a case-by-case basis. However, on Visual Studio 2005,\n\n# the warning fires on std::list. Therefore on that compiler and earlier,\n\n# we disable the warning project-wide.\n",
        "Line" : 70,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# 1700 is Visual Studio 2012.\n",
        "Line" : 78,
        "CharPositionInLine" : 39
      },
      "15" : {
        "Text" : "# Suppress \"unreachable code\" warning on VS 2012 and later.\n\n# http://stackoverflow.com/questions/3232669 explains the issue.\n",
        "Line" : 79,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# 1900 is Visual Studio 2015\n",
        "Line" : 83,
        "CharPositionInLine" : 42
      },
      "17" : {
        "Text" : "# BigObj required for tests.\n",
        "Line" : 84,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# The pthreads library is available and allowed.\n",
        "Line" : 126,
        "CharPositionInLine" : 32
      },
      "24" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# We are not supporting Python tests on Linux yet as they consider\n\n# all Linux environments to be google3 and try to use google3 features.\n",
        "Line" : 235,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# ${CMAKE_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 238,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 38
    },
    "contrib/libs/assimp/contrib/openddlparser/CMakeLists.txt" : {
      "ObjectId" : "8a57fe7e901c5bf2a0700de86dd76d8b0f7a436d",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Force to always compile with W4\n",
        "Line" : 35,
        "CharPositionInLine" : 53
      },
      "CommentCount" : 1
    },
    "contrib/libs/assimp/contrib/zlib/CMakeLists.txt" : {
      "ObjectId" : "89d80c1a81884e250a6b5c3e25c3b1caedcda2ea",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake 3.0 changed the project command, setting policy CMP0048 reverts to the old behaviour.\n\n# See http://www.cmake.org/cmake/help/v3.0/policy/CMP0048.html\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(INSTALL_BIN_DIR \"${CMAKE_INSTALL_PREFIX}/bin\" CACHE PATH \"Installation directory for executables\")\n\n#set(INSTALL_LIB_DIR \"${CMAKE_INSTALL_PREFIX}/lib\" CACHE PATH \"Installation directory for libraries\")\n\n#set(INSTALL_INC_DIR \"${CMAKE_INSTALL_PREFIX}/include\" CACHE PATH \"Installation directory for headers\")\n\n#set(INSTALL_MAN_DIR \"${CMAKE_INSTALL_PREFIX}/share/man\" CACHE PATH \"Installation directory for manual pages\")\n\n#set(INSTALL_PKGCONFIG_DIR \"${CMAKE_INSTALL_PREFIX}/share/pkgconfig\" CACHE PATH \"Installation directory for pkgconfig (.pc) files\")\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# clear variable\n",
        "Line" : 54,
        "CharPositionInLine" : 32
      },
      "5" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\n\n# in their source tree...\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If present will override custom build rule below.\n",
        "Line" : 135,
        "CharPositionInLine" : 23
      },
      "10" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This gets us DLL resource information when compiling on MinGW.\n",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "contrib/libs/backward/CMakeLists.txt" : {
      "ObjectId" : "ada4768f5cdc9b373771c2e642624bd82d901c8e",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# OPTIONS\n\n###############################################################################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###############################################################################\n\n# CONFIGS\n\n###############################################################################\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# find libdw\n",
        "Line" : 35,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# find libbfd\n",
        "Line" : 43,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# find libdwarf\n",
        "Line" : 53,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# If we attempt to link against static bfd, make sure to link its dependencies, too\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Expand each definition in BACKWARD_DEFINITIONS to its own cmake var and export\n\n# to outer scope\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "contrib/libs/benchmark/CMakeLists.txt" : {
      "ObjectId" : "e861d6af2d87daaa31d5b6c06700e3222e6fd5e3",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/libs/benchmark/src/CMakeLists.txt" : {
      "ObjectId" : "977474f43f2abadc92f83fb069c535c077863efc",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Allow the source files to find headers in src/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Link threads.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We need extra libraries on Windows\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We need extra libraries on Solaris\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Benchmark main library\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Install target (will install the library to specified CMAKE_INSTALL_PREFIX variable)\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "contrib/libs/dearimgui/CMakeLists.txt" : {
      "ObjectId" : "918cd6e4a1f8e6829247fa68be8c6d5323974911",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/libs/flatbuffers/CMakeLists.txt" : {
      "ObjectId" : "94208d91268b2d5710cae9ff4770fd4941231209",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/libs/glm/CMakeLists.txt" : {
      "ObjectId" : "8caaf50b40d118fa0c7137ee9afe485b31e568b4",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/libs/gtest/CMakeLists.txt" : {
      "ObjectId" : "7149cbbf96e9ed9f4074bf91b3799dbc8b313e68",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/libs/libcurl/CMake/CurlSymbolHiding.cmake" : {
      "ObjectId" : "9f7d29633840a3240dcc3ac0978565454f95fab1",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# note: this is considered buggy prior to 4.0 but the autotools don't care, so let's ignore that fact\n",
        "Line" : 21,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "# note: this should probably just check for version 9.1.045 but I'm not 100% sure\n\n#       so let's to it the same way autotools do.\n",
        "Line" : 31,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "#present since 3.4.3 but broken\n",
        "Line" : 50,
        "CharPositionInLine" : 51
      },
      "CommentCount" : 3
    },
    "contrib/libs/libcurl/CMake/FindBrotli.cmake" : {
      "ObjectId" : "351b8f757b8bb2d992a64e4477a11d429565833d",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/libs/libcurl/CMake/FindCARES.cmake" : {
      "ObjectId" : "c4ab5f132209be9790d6baca5f21336d74cbc2d0",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find c-ares\n\n# Find the c-ares includes and library\n\n# This module defines\n\n#  CARES_INCLUDE_DIR, where to find ares.h, etc.\n\n#  CARES_LIBRARIES, the libraries needed to use c-ares.\n\n#  CARES_FOUND, If false, do not try to use c-ares.\n\n# also defined, but not for general use are\n\n# CARES_LIBRARY, where to find the c-ares library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/libs/libcurl/CMake/FindGSS.cmake" : {
      "ObjectId" : "60dcb73c923a2a23f4a5761cbf86dd440bbf4096",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the GSS Kerberos library\n\n# Once done this will define\n\n#\n\n#  GSS_ROOT_DIR - Set this variable to the root installation of GSS\n\n#\n\n# Read-Only variables:\n\n#  GSS_FOUND - system has the Heimdal library\n\n#  GSS_FLAVOUR - \"MIT\" or \"Heimdal\" if anything found.\n\n#  GSS_INCLUDE_DIR - the Heimdal include directory\n\n#  GSS_LIBRARIES - The libraries needed to use GSS\n\n#  GSS_LINK_DIRECTORIES - Directories to add to linker search path\n\n#  GSS_LINKER_FLAGS - Additional linker flags\n\n#  GSS_COMPILER_FLAGS - Additional compiler flags\n\n#  GSS_VERSION - This is set to version advertised by pkg-config or read from manifest.\n\n#                In case the library is found but no version info available it'll be set to \"unknown\"\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# try to find library using system pkg-config if user didn't specify root dir\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#not found by pkg-config. Let's take more traditional approach.\n",
        "Line" : 40,
        "CharPositionInLine" : 19
      },
      "3" : {
        "Text" : "# if not found in user-supplied directories, maybe system knows better\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# 0 means success\n",
        "Line" : 67,
        "CharPositionInLine" : 38
      },
      "5" : {
        "Text" : "# should also work in an odd case when multiple directories are given\n",
        "Line" : 68,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# 0 means success\n",
        "Line" : 89,
        "CharPositionInLine" : 38
      },
      "7" : {
        "Text" : "# this script gives us libraries and link directories. Blah. We have to deal with it.\n",
        "Line" : 90,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "# older versions may not have the \"--version\" parameter. In this case we just don't care.\n",
        "Line" : 115,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# older versions may not have the \"--vendor\" parameter. In this case we just don't care.\n",
        "Line" : 127,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# most probably, shouldn't really matter\n",
        "Line" : 129,
        "CharPositionInLine" : 39
      },
      "11" : {
        "Text" : "# either there is no config script or we are on platform that doesn't provide one (Windows?)\n",
        "Line" : 138,
        "CharPositionInLine" : 11
      },
      "12" : {
        "Text" : "#jay, we've found something\n",
        "Line" : 150,
        "CharPositionInLine" : 29
      },
      "13" : {
        "Text" : "# prevent compiling the header - just check if we can include it\n",
        "Line" : 157,
        "CharPositionInLine" : 16
      },
      "14" : {
        "Text" : "# I'm not convienced if this is the right way but this is what autotools do at the moment\n",
        "Line" : 168,
        "CharPositionInLine" : 12
      },
      "15" : {
        "Text" : "# if we have headers, check if we can link libraries\n",
        "Line" : 184,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# those suffixes are not checked for HINTS\n",
        "Line" : 208,
        "CharPositionInLine" : 62
      },
      "CommentCount" : 17
    },
    "contrib/libs/libcurl/CMake/FindLibSSH2.cmake" : {
      "ObjectId" : "12a7c612b3f4fd01803b85da97d1dd879076fea5",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the libssh2 library\n\n# Once done this will define\n\n#\n\n# LIBSSH2_FOUND - system has the libssh2 library\n\n# LIBSSH2_INCLUDE_DIR - the libssh2 include directory\n\n# LIBSSH2_LIBRARY - the libssh2 library name\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/libs/libcurl/CMake/FindMbedTLS.cmake" : {
      "ObjectId" : "a91639589218f082d349c69aba941b007f636572",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/libs/libcurl/CMake/FindNGHTTP2.cmake" : {
      "ObjectId" : "4e566cf028127164264f21e70826f5c679f8443e",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/libs/libcurl/CMake/Macros.cmake" : {
      "ObjectId" : "82aadca9d58e40a63d3db3b4db8229bce4bbbc89",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#File defines convenience macros for available feature testing\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This macro checks if the symbol exists in the library and if it\n\n# does, it prepends library to the list.  It is intended to be called\n\n# multiple times with a sequence of possibly dependent libraries in\n\n# order of least-to-most-dependent.  Some libraries depend on others\n\n# to link correctly.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check if header file exists and add it to the list.\n\n# This macro is intended to be called multiple times with a sequence of\n\n# possibly dependent header files.  Some headers depend on others to be\n\n# compiled correctly.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# For other curl specific tests, use this macro.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Need a way to write to stdin, this will do\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Tests for a valid nroff option to generate a manpage\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Save the option if it was valid\n",
        "Line" : 108,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# No need for the temporary file\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "contrib/libs/libcurl/CMake/OtherTests.cmake" : {
      "ObjectId" : "989f04eb2dc7d8b1f58bb5c7ae3200c7dc92014e",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The begin of the sources (macros and includes)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# See HAVE_POLL in CMakeLists.txt for why poll is disabled on macOS\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "contrib/libs/libcurl/CMake/Platforms/WindowsCache.cmake" : {
      "ObjectId" : "6fc2991cd14b81b0714c32021296fcba4850f570",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/libs/libcurl/CMake/Utilities.cmake" : {
      "ObjectId" : "005b166ff918c8b54e66a41b9ee2b5e823812f1f",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# File containing various utilities\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Converts a CMake list to a string containing elements separated by spaces\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Appends a lis of item to a string which is a space-separated list, if they don't already exist.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Convenience function that does the same as LIST(FIND ...) but with a TRUE/FALSE return value.\n\n# Ex: IN_STR_LIST(MY_LIST \"Searched item\" WAS_FOUND)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Returns a list of arguments that evaluate to true\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "contrib/libs/libcurl/CMake/curl-config.cmake" : {
      "ObjectId" : "119332cddb9737dc7d4c68b9a96052880f515a47",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# let CMake pick config at random\n",
        "Line" : 46,
        "CharPositionInLine" : 41
      },
      "CommentCount" : 1
    },
    "contrib/libs/libcurl/CMakeLists.txt" : {
      "ObjectId" : "c0300547c0b538688835bbfafb23cf83591f29e9",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#***************************************************************************\n\n#                                  _   _ ____  _\n\n#  Project                     ___| | | |  _ \\| |\n\n#                             / __| | | | |_) | |\n\n#                            | (__| |_| |  _ <| |___\n\n#                             \\___|\\___/|_| \\_\\_____|\n\n#\n\n# Copyright (C) 1998 - 2018, Daniel Stenberg, <daniel@haxx.se>, et al.\n\n#\n\n# This software is licensed as described in the file COPYING, which\n\n# you should have received as part of this distribution. The terms\n\n# are also available at https://curl.haxx.se/docs/copyright.html.\n\n#\n\n# You may opt to use, copy, modify, merge, publish, distribute and/or sell\n\n# copies of the Software, and permit persons to whom the Software is\n\n# furnished to do so, under the terms of the COPYING file.\n\n#\n\n# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n\n# KIND, either express or implied.\n\n#\n\n###########################################################################\n\n# curl/libcurl CMake script\n\n# by Tetetest and Sukender (Benoit Neil)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO:\n\n# The output .so file lacks the soname number which we currently have within the lib/Makefile.am file\n\n# Add full (4 or 5 libs) SSL support\n\n# Add INSTALL target (EXTRA_DIST variables in Makefile.am may be moved to Makefile.inc so that CMake/CPack is aware of what's to include).\n\n# Add CTests(?)\n\n# Check on all possible platforms\n\n# Test with as many configurations possible (With or without any option)\n\n# Create scripts that help keeping the CMake build system up to date (to reduce maintenance). According to Tetetest:\n\n#  - lists of headers that 'configure' checks for;\n\n#  - curl-specific tests (the ones that are in m4/curl-*.m4 files);\n\n#  - (most obvious thing:) curl version numbers.\n\n# Add documentation subproject\n\n#\n\n# To check:\n\n# (From Daniel Stenberg) The cmake build selected to run gcc with -fPIC on my box while the plain configure script did not.\n\n# (From Daniel Stenberg) The gcc command line use neither -g nor any -O options. As a developer, I also treasure our configure scripts's --enable-debug option that sets a long range of \"picky\" compiler options.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sukender: Is it necessary?\n",
        "Line" : 64,
        "CharPositionInLine" : 38
      },
      "3" : {
        "Text" : "# Setup package meta-data\n\n# SET(PACKAGE \"curl\")\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# SET(PACKAGE_TARNAME \"curl\")\n\n# SET(PACKAGE_NAME \"curl\")\n\n# SET(PACKAGE_VERSION \"-\")\n\n# SET(PACKAGE_STRING \"curl-\")\n\n# SET(PACKAGE_BUGREPORT \"a suitable curl mailing list => https://curl.haxx.se/mail/\")\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# surprisingly, CHECK_C_COMPILER_FLAG needs a new variable to store each new\n\n# test result in.\n",
        "Line" : 100,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# DEBUGBUILD will be defined only for Debug builds\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# For debug libs and exes, add \"-d\" postfix\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# initialize CURL_LIBS\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Force the feature off as this name is used as guard macro...\n",
        "Line" : 206,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# We need ansi c-flags, especially on HP\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Disable warnings on Borland to avoid changing 3rd party code.\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# If we are on AIX, do the _ALL_SOURCE magic\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Include all the necessary files for macros\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# On windows preload settings\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Check for all needed libraries\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Yellowtab Zeta needs different libraries than BeOS 5.\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# check SSL libraries\n\n# TODO support GNUTLS, NSS, POLARSSL, AXTLS, CYASSL\n",
        "Line" : 297,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Windows native SSL/TLS support\n",
        "Line" : 328,
        "CharPositionInLine" : 23
      },
      "19" : {
        "Text" : "# CMAKE_USE_WINSSL implies CURL_WINDOWS_SSPI\n",
        "Line" : 329,
        "CharPositionInLine" : 27
      },
      "20" : {
        "Text" : "# Now that we know, we're not using windows LDAP...\n",
        "Line" : 409,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Check for LDAP\n",
        "Line" : 414,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "#LDAP includes won't be used\n",
        "Line" : 430,
        "CharPositionInLine" : 66
      },
      "23" : {
        "Text" : "#LDAP includes won't be used\n",
        "Line" : 434,
        "CharPositionInLine" : 66
      },
      "24" : {
        "Text" : "# No ldap, no ldaps.\n",
        "Line" : 485,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Check for idn\n",
        "Line" : 498,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Check for symbol dlopen (same as HAVE_LIBDL)\n",
        "Line" : 501,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#libSSH2\n",
        "Line" : 532,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# find_package has already found the headers\n",
        "Line" : 549,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# now check for specific libssh2 symbols as they were added in different versions\n",
        "Line" : 554,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# MIT\n",
        "Line" : 584,
        "CharPositionInLine" : 11
      },
      "31" : {
        "Text" : "#\n\n# CA handling\n\n#\n",
        "Line" : 634,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Skip autodetection of unset CA path because CA bundle is set explicitly\n",
        "Line" : 667,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# Skip autodetection of unset CA bundle because CA path is set explicitly\n",
        "Line" : 669,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# first try autodetecting a CA bundle, then a CA path\n",
        "Line" : 671,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# Check for header files\n",
        "Line" : 706,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# off_t is sized later, after the HAVE_FILE_OFFSET_BITS test\n",
        "Line" : 803,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Check for some functions that are used\n",
        "Line" : 813,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# poll on macOS is unreliable, it first did not exist, then was broken until\n\n# fixed in 10.9 only to break again in 10.12.\n",
        "Line" : 822,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# symbol exists in win32, but function does not.\n",
        "Line" : 892,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# _WIN32_WINNT_VISTA (0x0600)\n",
        "Line" : 896,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# _WIN32_WINNT_WINXP (0x0501)\n",
        "Line" : 899,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# sigaction and sigsetjmp are special. Use special mechanism for\n\n# detecting those, but only if previous attempt failed.\n",
        "Line" : 913,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# If there is no stricmp(), do not allow LDAP to parse URLs\n",
        "Line" : 928,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Do curl specific tests\n",
        "Line" : 933,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# include this header to get the type\n",
        "Line" : 977,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Check for reentrant\n",
        "Line" : 992,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Some other minor tests\n",
        "Line" : 1028,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Fix libz / zlib.h\n",
        "Line" : 1034,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Check for nonblocking\n",
        "Line" : 1046,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# The Mac version of GCC warns about use of long double.  Disable it.\n",
        "Line" : 1068,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# TODO test which of these headers are required\n",
        "Line" : 1098,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# For Windows, all compilers used by CMake should support large files\n",
        "Line" : 1113,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Use the manifest embedded in the Windows Resource\n",
        "Line" : 1117,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# Disable default manifest added by CMake\n",
        "Line" : 1122,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# this assumes clang or gcc style options\n",
        "Line" : 1137,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# Helper to populate a list (_items) with a label when conditions (the remaining\n\n# args) are satisfied\n",
        "Line" : 1152,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# TODO need to disable policy CMP0054 (CMake 3.1) to allow this indirection\n",
        "Line" : 1155,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# Clear list and try to detect available features\n",
        "Line" : 1161,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# TODO SSP1 (WinSSL) check is missing\n",
        "Line" : 1174,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# TODO SSP1 missing for SPNEGO\n",
        "Line" : 1177,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# NTLM support requires crypto function adaptions from various SSL libs\n\n# TODO alternative SSL libs tests for SSP1, GNUTLS, NSS\n",
        "Line" : 1182,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# TODO missing option (autoconf: --enable-ntlm-wb)\n",
        "Line" : 1186,
        "CharPositionInLine" : 2
      },
      "63" : {
        "Text" : "# TODO missing option (--enable-tls-srp), depends on GNUTLS_SRP/OPENSSL_SRP\n",
        "Line" : 1189,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# TODO option --with-nghttp2 tests for nghttp2 lib and nghttp2/nghttp2.h header\n",
        "Line" : 1191,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Clear list and try to detect available protocols\n",
        "Line" : 1196,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# CURL_DISABLE_LDAP implies CURL_DISABLE_LDAPS\n\n# TODO check HAVE_LDAP_SSL (in autoconf this is enabled with --enable-ldaps)\n",
        "Line" : 1205,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# curl-config needs the following options to be set.\n",
        "Line" : 1227,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# TODO probably put a -D... options here?\n",
        "Line" : 1229,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# TODO when to set \"-DCURL_STATICLIB\" for CPPFLAG_CURL_STATICLIB?\n",
        "Line" : 1231,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# \"a\" (Linux) or \"lib\" (Windows)\n",
        "Line" : 1252,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Set this to \"yes\" to append all libraries on which -lcurl is dependent\n",
        "Line" : 1255,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# SUPPORT_FEATURES\n\n# SUPPORT_PROTOCOLS\n",
        "Line" : 1257,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# This needs to be run very last so other parts of the scripts can take advantage of this.\n",
        "Line" : 1261,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 74
    },
    "contrib/libs/libcurl/include/curl/Makefile.am" : {
      "ObjectId" : "7c924fcb5a8c1dad23f64f1b3010babc4564cda8",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#***************************************************************************\n\n#                                  _   _ ____  _\n\n#  Project                     ___| | | |  _ \\| |\n\n#                             / __| | | | |_) | |\n\n#                            | (__| |_| |  _ <| |___\n\n#                             \\___|\\___/|_| \\_\\_____|\n\n#\n\n# Copyright (C) 1998 - 2011, Daniel Stenberg, <daniel@haxx.se>, et al.\n\n#\n\n# This software is licensed as described in the file COPYING, which\n\n# you should have received as part of this distribution. The terms\n\n# are also available at https://curl.haxx.se/docs/copyright.html.\n\n#\n\n# You may opt to use, copy, modify, merge, publish, distribute and/or sell\n\n# copies of the Software, and permit persons to whom the Software is\n\n# furnished to do so, under the terms of the COPYING file.\n\n#\n\n# This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n\n# KIND, either express or implied.\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# curlbuild.h does not exist in the git tree. When the original libcurl\n\n# source code distribution archive file is created, curlbuild.h.dist is\n\n# renamed to curlbuild.h and included in the tarball so that it can be\n\n# used directly on non-configure systems.\n\n#\n\n# The distributed curlbuild.h will be overwritten on configure systems\n\n# when the configure script runs, with one that is suitable and specific\n\n# to the library being configured and built.\n\n#\n\n# curlbuild.h.in is the distributed template file from which the configure\n\n# script creates curlbuild.h at library configuration time, overwiting the\n\n# one included in the distribution archive.\n\n#\n\n# curlbuild.h.dist is not included in the source code distribution archive.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for debug builds, we scan the sources on all regular make invokes\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "contrib/libs/libcurl/include/curl/curlbuild.h.cmake" : {
      "ObjectId" : "bbb31a9408f229704ecfbadc8d886402cb95adf6",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/***************************************************************************\n *                                  _   _ ____  _\n *  Project                     ___| | | |  _ \\| |\n *                             / __| | | | |_) | |\n *                            | (__| |_| |  _ <| |___\n *                             \\___|\\___/|_| \\_\\_____|\n *\n * Copyright (C) 1998 - 2008, Daniel Stenberg, <daniel@haxx.se>, et al.\n *\n * This software is licensed as described in the file COPYING, which\n * you should have received as part of this distribution. The terms\n * are also available at https://curl.haxx.se/docs/copyright.html.\n *\n * You may opt to use, copy, modify, merge, publish, distribute and/or sell\n * copies of the Software, and permit persons to whom the Software is\n * furnished to do so, under the terms of the COPYING file.\n *\n * This software is distributed on an \"AS IS\" basis, WITHOUT WARRANTY OF ANY\n * KIND, either express or implied.\n *\n ***************************************************************************/",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* ================================================================ */\n/*               NOTES FOR CONFIGURE CAPABLE SYSTEMS                */\n/* ================================================================ */",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/*\n * NOTE 1:\n * -------\n *\n * Nothing in this file is intended to be modified or adjusted by the\n * curl library user nor by the curl library builder.\n *\n * If you think that something actually needs to be changed, adjusted\n * or fixed in this file, then, report it on the libcurl development\n * mailing list: https://cool.haxx.se/mailman/listinfo/curl-library/\n *\n * This header file shall only export symbols which are 'curl' or 'CURL'\n * prefixed, otherwise public name space would be polluted.\n *\n * NOTE 2:\n * -------\n *\n * Right now you might be staring at file include/curl/curlbuild.h.in or\n * at file include/curl/curlbuild.h, this is due to the following reason:\n *\n * On systems capable of running the configure script, the configure process\n * will overwrite the distributed include/curl/curlbuild.h file with one that\n * is suitable and specific to the library being configured and built, which\n * is generated from the include/curl/curlbuild.h.in template file.\n *\n */",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* ================================================================ */\n/*  DEFINITION OF THESE SYMBOLS SHALL NOT TAKE PLACE ANYWHERE ELSE  */\n/* ================================================================ */",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* ================================================================ */\n/*  EXTERNAL INTERFACE SETTINGS FOR CONFIGURE CAPABLE SYSTEMS ONLY  */\n/* ================================================================ */",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system  */\n/* header file ws2tcpip.h must be included by the external interface. */",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system   */\n/* header file sys/types.h must be included by the external interface. */",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system */\n/* header file stdint.h must be included by the external interface.  */",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system  */\n/* header file inttypes.h must be included by the external interface. */",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system    */\n/* header file sys/socket.h must be included by the external interface. */",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Configure process defines this to 1 when it finds out that system  */\n/* header file sys/poll.h must be included by the external interface. */",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* The size of `long', as computed by sizeof. */",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Integral data type used for curl_socklen_t. */",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* The size of `curl_socklen_t', as computed by sizeof. */",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Data type definition of curl_socklen_t. */",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Signed integral data type used for curl_off_t. */",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Data type definition of curl_off_t. */",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* curl_off_t formatting string directive without \"%\" conversion specifier. */",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* unsigned curl_off_t formatting string without \"%\" conversion specifier. */",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* curl_off_t formatting string directive with \"%\" conversion specifier. */",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* The size of `curl_off_t', as computed by sizeof. */",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* curl_off_t constant suffix. */",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* unsigned curl_off_t constant suffix. */",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "contrib/libs/libcurl/lib/CMakeLists.txt" : {
      "ObjectId" : "1e07838ebcea1cfb7c9fbc5d382ced4622749586",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SET(CSOURCES\n\n# #  memdebug.c -not used\n\n# # nwlib.c - Not used\n\n# # strtok.c - specify later\n\n# # strtoofft.c - specify later\n\n# )\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# # if we have Kerberos 4, right now this is never on\n\n# #OPTION(CURL_KRB4 \"Use Kerberos 4\" OFF)\n\n# IF(CURL_KRB4)\n\n# SET(CSOURCES ${CSOURCES}\n\n# krb4.c\n\n# security.c\n\n# )\n\n# ENDIF(CURL_KRB4)\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# #OPTION(CURL_MALLOC_DEBUG \"Debug mallocs in Curl\" OFF)\n\n# MARK_AS_ADVANCED(CURL_MALLOC_DEBUG)\n\n# IF(CURL_MALLOC_DEBUG)\n\n# SET(CSOURCES ${CSOURCES}\n\n# memdebug.c\n\n# )\n\n# ENDIF(CURL_MALLOC_DEBUG)\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# # only build compat strtoofft if we need to\n\n# IF(NOT HAVE_STRTOLL AND NOT HAVE__STRTOI64)\n\n# SET(CSOURCES ${CSOURCES}\n\n# strtoofft.c\n\n# )\n\n# ENDIF(NOT HAVE_STRTOLL AND NOT HAVE__STRTOI64)\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The rest of the build\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Static lib\n",
        "Line" : 130,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# DLL / so dynamic lib\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#  set_property(TARGET ${LIB_NAME} APPEND PROPERTY COMPILE_FLAGS ${CURL_CFLAG_SYMBOLS_HIDE})\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Remove the \"lib\" prefix since the library is already named \"libcurl\".\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add \"_imp\" as a suffix before the extension to avoid conflicting with the statically linked \"libcurl.lib\"\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "contrib/libs/libcurl/lib/curl_config.h.cmake" : {
      "ObjectId" : "ab0094be5dd23f6d339bf074b4314d4be96a4f52",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* lib/curl_config.h.in.  Generated somehow by cmake.  */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* when building libcurl itself */",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Location of default ca bundle */",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* define \"1\" to use built-in ca store of TLS backend */",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Location of default ca path */",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* to disable cookies support */",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* to disable cryptographic authentication */",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* to disable DICT */",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* to disable FILE */",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* to disable FTP */",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* to disable GOPHER */",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* to disable IMAP */",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* to disable HTTP */",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* to disable LDAP */",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* to disable LDAPS */",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* to disable POP3 */",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* to disable proxies */",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* to disable RTSP */",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* to disable SMB */",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* to disable SMTP */",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* to disable TELNET */",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* to disable TFTP */",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* to disable verbose strings */",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/* to make a symbol visible */",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/* Ensure using CURL_EXTERN_SYMBOL is possible */",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "/* Use Windows LDAP implementation */",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "/* when not building a shared library */",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "/* your Entropy Gathering Daemon socket pathname */",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "/* Define if you want to enable IPv6 support */",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "/* Define to the type qualifier of arg 1 for getnameinfo. */",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "/* Define to the type of arg 1 for getnameinfo. */",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "/* Define to the type of arg 2 for getnameinfo. */",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "/* Define to the type of args 4 and 6 for getnameinfo. */",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "/* Define to the type of arg 7 for getnameinfo. */",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "/* Specifies the number of arguments to getservbyport_r */",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "/* Specifies the size of the buffer to pass to getservbyport_r */",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "/* Define to 1 if you have the alarm function. */",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "/* Define to 1 if you have the <alloca.h> header file. */",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "/* Define to 1 if you have the <arpa/inet.h> header file. */",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "/* Define to 1 if you have the <arpa/tftp.h> header file. */",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "/* Define to 1 if you have the <assert.h> header file. */",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "/* Define to 1 if you have the `basename' function. */",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "/* Define to 1 if bool is an available type. */",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "/* Define to 1 if you have the clock_gettime function and monotonic timer. */",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "/* Define to 1 if you have the `closesocket' function. */",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "/* Define to 1 if you have the `CRYPTO_cleanup_all_ex_data' function. */",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "/* Define to 1 if you have the <crypto.h> header file. */",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "/* Define to 1 if you have the <des.h> header file. */",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "/* Define to 1 if you have the <dlfcn.h> header file. */",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "/* Define to 1 if you have the `ENGINE_load_builtin_engines' function. */",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "/* Define to 1 if you have the <errno.h> header file. */",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "/* Define to 1 if you have the <err.h> header file. */",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "/* Define to 1 if you have the fcntl function. */",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "/* Define to 1 if you have the <fcntl.h> header file. */",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "/* Define to 1 if you have a working fcntl O_NONBLOCK function. */",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "/* Define to 1 if you have the fdopen function. */",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "/* Define to 1 if you have the `fork' function. */",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "/* Define to 1 if you have the freeaddrinfo function. */",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "/* Define to 1 if you have the freeifaddrs function. */",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "/* Define to 1 if you have the ftruncate function. */",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "/* Define to 1 if you have a working getaddrinfo function. */",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "/* Define to 1 if you have the `geteuid' function. */",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "/* Define to 1 if you have the gethostbyaddr function. */",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "/* Define to 1 if you have the gethostbyaddr_r function. */",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "/* gethostbyaddr_r() takes 5 args */",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "/* gethostbyaddr_r() takes 7 args */",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "/* gethostbyaddr_r() takes 8 args */",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "/* Define to 1 if you have the gethostbyname function. */",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "/* Define to 1 if you have the gethostbyname_r function. */",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "/* gethostbyname_r() takes 3 args */",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "/* gethostbyname_r() takes 5 args */",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "/* gethostbyname_r() takes 6 args */",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "/* Define to 1 if you have the gethostname function. */",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "/* Define to 1 if you have a working getifaddrs function. */",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "/* Define to 1 if you have the getnameinfo function. */",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "/* Define to 1 if you have the `getpass_r' function. */",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "/* Define to 1 if you have the `getppid' function. */",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "/* Define to 1 if you have the `getprotobyname' function. */",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "/* Define to 1 if you have the `getpwuid' function. */",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "/* Define to 1 if you have the `getpwuid_r' function. */",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "/* Define to 1 if you have the `getrlimit' function. */",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "/* Define to 1 if you have the getservbyport_r function. */",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "/* Define to 1 if you have the `gettimeofday' function. */",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "/* Define to 1 if you have a working glibc-style strerror_r function. */",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "/* Define to 1 if you have a working gmtime_r function. */",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "/* if you have the gssapi libraries */",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "/* Define to 1 if you have the <gssapi/gssapi_generic.h> header file. */",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "/* Define to 1 if you have the <gssapi/gssapi.h> header file. */",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "/* Define to 1 if you have the <gssapi/gssapi_krb5.h> header file. */",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "/* if you have the GNU gssapi libraries */",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "/* if you have the Heimdal gssapi libraries */",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "/* if you have the MIT gssapi libraries */",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "/* Define to 1 if you have the `idna_strerror' function. */",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "/* Define to 1 if you have the `idn_free' function. */",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "/* Define to 1 if you have the <idn-free.h> header file. */",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "/* Define to 1 if you have the <ifaddrs.h> header file. */",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "/* Define to 1 if you have the `inet_addr' function. */",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "/* Define to 1 if you have the inet_ntoa_r function. */",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "/* inet_ntoa_r() takes 2 args */",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "/* inet_ntoa_r() takes 3 args */",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "/* Define to 1 if you have a IPv6 capable working inet_ntop function. */",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "/* Define to 1 if you have a IPv6 capable working inet_pton function. */",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "/* Define to 1 if you have the <inttypes.h> header file. */",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "/* Define to 1 if you have the ioctl function. */",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "/* Define to 1 if you have the ioctlsocket function. */",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "/* Define to 1 if you have the IoctlSocket camel case function. */",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "/* Define to 1 if you have a working IoctlSocket camel case FIONBIO function.\n   */",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "/* Define to 1 if you have a working ioctlsocket FIONBIO function. */",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "/* Define to 1 if you have a working ioctl FIONBIO function. */",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "/* Define to 1 if you have a working ioctl SIOCGIFADDR function. */",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "/* Define to 1 if you have the <io.h> header file. */",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "111" : {
        "Text" : "/* if you have the Kerberos4 libraries (including -ldes) */",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "112" : {
        "Text" : "/* Define to 1 if you have the `krb_get_our_ip_for_realm' function. */",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "113" : {
        "Text" : "/* Define to 1 if you have the <krb.h> header file. */",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "114" : {
        "Text" : "/* Define to 1 if you have the lber.h header file. */",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "115" : {
        "Text" : "/* Define to 1 if you have the ldapssl.h header file. */",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "116" : {
        "Text" : "/* Define to 1 if you have the ldap.h header file. */",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "117" : {
        "Text" : "/* Use LDAPS implementation */",
        "Line" : 353,
        "CharPositionInLine" : 0
      },
      "118" : {
        "Text" : "/* Define to 1 if you have the ldap_ssl.h header file. */",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "119" : {
        "Text" : "/* Define to 1 if you have the `ldap_url_parse' function. */",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "120" : {
        "Text" : "/* Define to 1 if you have the <libgen.h> header file. */",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "121" : {
        "Text" : "/* Define to 1 if you have the `idn' library (-lidn). */",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "122" : {
        "Text" : "/* Define to 1 if you have the `resolv' library (-lresolv). */",
        "Line" : 368,
        "CharPositionInLine" : 0
      },
      "123" : {
        "Text" : "/* Define to 1 if you have the `resolve' library (-lresolve). */",
        "Line" : 371,
        "CharPositionInLine" : 0
      },
      "124" : {
        "Text" : "/* Define to 1 if you have the `socket' library (-lsocket). */",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "125" : {
        "Text" : "/* Define to 1 if you have the `ssh2' library (-lssh2). */",
        "Line" : 377,
        "CharPositionInLine" : 0
      },
      "126" : {
        "Text" : "/* Define to 1 if libssh2 provides `libssh2_version'. */",
        "Line" : 380,
        "CharPositionInLine" : 0
      },
      "127" : {
        "Text" : "/* Define to 1 if libssh2 provides `libssh2_init'. */",
        "Line" : 383,
        "CharPositionInLine" : 0
      },
      "128" : {
        "Text" : "/* Define to 1 if libssh2 provides `libssh2_exit'. */",
        "Line" : 386,
        "CharPositionInLine" : 0
      },
      "129" : {
        "Text" : "/* Define to 1 if libssh2 provides `libssh2_scp_send64'. */",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "130" : {
        "Text" : "/* Define to 1 if libssh2 provides `libssh2_session_handshake'. */",
        "Line" : 392,
        "CharPositionInLine" : 0
      },
      "131" : {
        "Text" : "/* Define to 1 if you have the <libssh2.h> header file. */",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "132" : {
        "Text" : "/* Define to 1 if you have the `ssl' library (-lssl). */",
        "Line" : 398,
        "CharPositionInLine" : 0
      },
      "133" : {
        "Text" : "/* if zlib is available */",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "134" : {
        "Text" : "/* if brotli is available */",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "135" : {
        "Text" : "/* if your compiler supports LL */",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "136" : {
        "Text" : "/* Define to 1 if you have the <locale.h> header file. */",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "137" : {
        "Text" : "/* Define to 1 if you have a working localtime_r function. */",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "138" : {
        "Text" : "/* Define to 1 if the compiler supports the 'long long' data type. */",
        "Line" : 416,
        "CharPositionInLine" : 0
      },
      "139" : {
        "Text" : "/* Define to 1 if you have the malloc.h header file. */",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "140" : {
        "Text" : "/* Define to 1 if you have the <memory.h> header file. */",
        "Line" : 422,
        "CharPositionInLine" : 0
      },
      "141" : {
        "Text" : "/* Define to 1 if you have the MSG_NOSIGNAL flag. */",
        "Line" : 425,
        "CharPositionInLine" : 0
      },
      "142" : {
        "Text" : "/* Define to 1 if you have the <netdb.h> header file. */",
        "Line" : 428,
        "CharPositionInLine" : 0
      },
      "143" : {
        "Text" : "/* Define to 1 if you have the <netinet/in.h> header file. */",
        "Line" : 431,
        "CharPositionInLine" : 0
      },
      "144" : {
        "Text" : "/* Define to 1 if you have the <netinet/tcp.h> header file. */",
        "Line" : 434,
        "CharPositionInLine" : 0
      },
      "145" : {
        "Text" : "/* Define to 1 if you have the <net/if.h> header file. */",
        "Line" : 437,
        "CharPositionInLine" : 0
      },
      "146" : {
        "Text" : "/* Define to 1 if NI_WITHSCOPEID exists and works. */",
        "Line" : 440,
        "CharPositionInLine" : 0
      },
      "147" : {
        "Text" : "/* if you have an old MIT gssapi library, lacking GSS_C_NT_HOSTBASED_SERVICE */",
        "Line" : 443,
        "CharPositionInLine" : 0
      },
      "148" : {
        "Text" : "/* Define to 1 if you have the <openssl/crypto.h> header file. */",
        "Line" : 446,
        "CharPositionInLine" : 0
      },
      "149" : {
        "Text" : "/* Define to 1 if you have the <openssl/engine.h> header file. */",
        "Line" : 449,
        "CharPositionInLine" : 0
      },
      "150" : {
        "Text" : "/* Define to 1 if you have the <openssl/err.h> header file. */",
        "Line" : 452,
        "CharPositionInLine" : 0
      },
      "151" : {
        "Text" : "/* Define to 1 if you have the <openssl/pem.h> header file. */",
        "Line" : 455,
        "CharPositionInLine" : 0
      },
      "152" : {
        "Text" : "/* Define to 1 if you have the <openssl/pkcs12.h> header file. */",
        "Line" : 458,
        "CharPositionInLine" : 0
      },
      "153" : {
        "Text" : "/* Define to 1 if you have the <openssl/rsa.h> header file. */",
        "Line" : 461,
        "CharPositionInLine" : 0
      },
      "154" : {
        "Text" : "/* Define to 1 if you have the <openssl/ssl.h> header file. */",
        "Line" : 464,
        "CharPositionInLine" : 0
      },
      "155" : {
        "Text" : "/* Define to 1 if you have the <openssl/x509.h> header file. */",
        "Line" : 467,
        "CharPositionInLine" : 0
      },
      "156" : {
        "Text" : "/* Define to 1 if you have the <pem.h> header file. */",
        "Line" : 470,
        "CharPositionInLine" : 0
      },
      "157" : {
        "Text" : "/* Define to 1 if you have the `perror' function. */",
        "Line" : 473,
        "CharPositionInLine" : 0
      },
      "158" : {
        "Text" : "/* Define to 1 if you have the `pipe' function. */",
        "Line" : 476,
        "CharPositionInLine" : 0
      },
      "159" : {
        "Text" : "/* Define to 1 if you have a working poll function. */",
        "Line" : 479,
        "CharPositionInLine" : 0
      },
      "160" : {
        "Text" : "/* If you have a fine poll */",
        "Line" : 482,
        "CharPositionInLine" : 0
      },
      "161" : {
        "Text" : "/* Define to 1 if you have the <poll.h> header file. */",
        "Line" : 485,
        "CharPositionInLine" : 0
      },
      "162" : {
        "Text" : "/* Define to 1 if you have a working POSIX-style strerror_r function. */",
        "Line" : 488,
        "CharPositionInLine" : 0
      },
      "163" : {
        "Text" : "/* Define to 1 if you have the <pthread.h> header file */",
        "Line" : 491,
        "CharPositionInLine" : 0
      },
      "164" : {
        "Text" : "/* Define to 1 if you have the <pwd.h> header file. */",
        "Line" : 494,
        "CharPositionInLine" : 0
      },
      "165" : {
        "Text" : "/* Define to 1 if you have the `RAND_egd' function. */",
        "Line" : 497,
        "CharPositionInLine" : 0
      },
      "166" : {
        "Text" : "/* Define to 1 if you have the `RAND_screen' function. */",
        "Line" : 500,
        "CharPositionInLine" : 0
      },
      "167" : {
        "Text" : "/* Define to 1 if you have the `RAND_status' function. */",
        "Line" : 503,
        "CharPositionInLine" : 0
      },
      "168" : {
        "Text" : "/* Define to 1 if you have the recv function. */",
        "Line" : 506,
        "CharPositionInLine" : 0
      },
      "169" : {
        "Text" : "/* Define to 1 if you have the recvfrom function. */",
        "Line" : 509,
        "CharPositionInLine" : 0
      },
      "170" : {
        "Text" : "/* Define to 1 if you have the <rsa.h> header file. */",
        "Line" : 512,
        "CharPositionInLine" : 0
      },
      "171" : {
        "Text" : "/* Define to 1 if you have the select function. */",
        "Line" : 515,
        "CharPositionInLine" : 0
      },
      "172" : {
        "Text" : "/* Define to 1 if you have the send function. */",
        "Line" : 518,
        "CharPositionInLine" : 0
      },
      "173" : {
        "Text" : "/* Define to 1 if you have the 'fsetxattr' function. */",
        "Line" : 521,
        "CharPositionInLine" : 0
      },
      "174" : {
        "Text" : "/* fsetxattr() takes 5 args */",
        "Line" : 524,
        "CharPositionInLine" : 0
      },
      "175" : {
        "Text" : "/* fsetxattr() takes 6 args */",
        "Line" : 527,
        "CharPositionInLine" : 0
      },
      "176" : {
        "Text" : "/* Define to 1 if you have the <setjmp.h> header file. */",
        "Line" : 530,
        "CharPositionInLine" : 0
      },
      "177" : {
        "Text" : "/* Define to 1 if you have the `setlocale' function. */",
        "Line" : 533,
        "CharPositionInLine" : 0
      },
      "178" : {
        "Text" : "/* Define to 1 if you have the `setmode' function. */",
        "Line" : 536,
        "CharPositionInLine" : 0
      },
      "179" : {
        "Text" : "/* Define to 1 if you have the `setrlimit' function. */",
        "Line" : 539,
        "CharPositionInLine" : 0
      },
      "180" : {
        "Text" : "/* Define to 1 if you have the setsockopt function. */",
        "Line" : 542,
        "CharPositionInLine" : 0
      },
      "181" : {
        "Text" : "/* Define to 1 if you have a working setsockopt SO_NONBLOCK function. */",
        "Line" : 545,
        "CharPositionInLine" : 0
      },
      "182" : {
        "Text" : "/* Define to 1 if you have the <sgtty.h> header file. */",
        "Line" : 548,
        "CharPositionInLine" : 0
      },
      "183" : {
        "Text" : "/* Define to 1 if you have the sigaction function. */",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "184" : {
        "Text" : "/* Define to 1 if you have the siginterrupt function. */",
        "Line" : 554,
        "CharPositionInLine" : 0
      },
      "185" : {
        "Text" : "/* Define to 1 if you have the signal function. */",
        "Line" : 557,
        "CharPositionInLine" : 0
      },
      "186" : {
        "Text" : "/* Define to 1 if you have the <signal.h> header file. */",
        "Line" : 560,
        "CharPositionInLine" : 0
      },
      "187" : {
        "Text" : "/* Define to 1 if you have the sigsetjmp function or macro. */",
        "Line" : 563,
        "CharPositionInLine" : 0
      },
      "188" : {
        "Text" : "/* Define to 1 if sig_atomic_t is an available typedef. */",
        "Line" : 566,
        "CharPositionInLine" : 0
      },
      "189" : {
        "Text" : "/* Define to 1 if sig_atomic_t is already defined as volatile. */",
        "Line" : 569,
        "CharPositionInLine" : 0
      },
      "190" : {
        "Text" : "/* Define to 1 if struct sockaddr_in6 has the sin6_scope_id member */",
        "Line" : 572,
        "CharPositionInLine" : 0
      },
      "191" : {
        "Text" : "/* Define to 1 if you have the `socket' function. */",
        "Line" : 575,
        "CharPositionInLine" : 0
      },
      "192" : {
        "Text" : "/* Define to 1 if you have the `SSL_get_shutdown' function. */",
        "Line" : 578,
        "CharPositionInLine" : 0
      },
      "193" : {
        "Text" : "/* Define to 1 if you have the <ssl.h> header file. */",
        "Line" : 581,
        "CharPositionInLine" : 0
      },
      "194" : {
        "Text" : "/* Define to 1 if you have the <stdbool.h> header file. */",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "195" : {
        "Text" : "/* Define to 1 if you have the <stdint.h> header file. */",
        "Line" : 587,
        "CharPositionInLine" : 0
      },
      "196" : {
        "Text" : "/* Define to 1 if you have the <stdio.h> header file. */",
        "Line" : 590,
        "CharPositionInLine" : 0
      },
      "197" : {
        "Text" : "/* Define to 1 if you have the <stdlib.h> header file. */",
        "Line" : 593,
        "CharPositionInLine" : 0
      },
      "198" : {
        "Text" : "/* Define to 1 if you have the strcasecmp function. */",
        "Line" : 596,
        "CharPositionInLine" : 0
      },
      "199" : {
        "Text" : "/* Define to 1 if you have the strcasestr function. */",
        "Line" : 599,
        "CharPositionInLine" : 0
      },
      "200" : {
        "Text" : "/* Define to 1 if you have the strcmpi function. */",
        "Line" : 602,
        "CharPositionInLine" : 0
      },
      "201" : {
        "Text" : "/* Define to 1 if you have the strdup function. */",
        "Line" : 605,
        "CharPositionInLine" : 0
      },
      "202" : {
        "Text" : "/* Define to 1 if you have the strerror_r function. */",
        "Line" : 608,
        "CharPositionInLine" : 0
      },
      "203" : {
        "Text" : "/* Define to 1 if you have the stricmp function. */",
        "Line" : 611,
        "CharPositionInLine" : 0
      },
      "204" : {
        "Text" : "/* Define to 1 if you have the <strings.h> header file. */",
        "Line" : 614,
        "CharPositionInLine" : 0
      },
      "205" : {
        "Text" : "/* Define to 1 if you have the <string.h> header file. */",
        "Line" : 617,
        "CharPositionInLine" : 0
      },
      "206" : {
        "Text" : "/* Define to 1 if you have the strlcat function. */",
        "Line" : 620,
        "CharPositionInLine" : 0
      },
      "207" : {
        "Text" : "/* Define to 1 if you have the `strlcpy' function. */",
        "Line" : 623,
        "CharPositionInLine" : 0
      },
      "208" : {
        "Text" : "/* Define to 1 if you have the strncasecmp function. */",
        "Line" : 626,
        "CharPositionInLine" : 0
      },
      "209" : {
        "Text" : "/* Define to 1 if you have the strncmpi function. */",
        "Line" : 629,
        "CharPositionInLine" : 0
      },
      "210" : {
        "Text" : "/* Define to 1 if you have the strnicmp function. */",
        "Line" : 632,
        "CharPositionInLine" : 0
      },
      "211" : {
        "Text" : "/* Define to 1 if you have the <stropts.h> header file. */",
        "Line" : 635,
        "CharPositionInLine" : 0
      },
      "212" : {
        "Text" : "/* Define to 1 if you have the strstr function. */",
        "Line" : 638,
        "CharPositionInLine" : 0
      },
      "213" : {
        "Text" : "/* Define to 1 if you have the strtok_r function. */",
        "Line" : 641,
        "CharPositionInLine" : 0
      },
      "214" : {
        "Text" : "/* Define to 1 if you have the strtoll function. */",
        "Line" : 644,
        "CharPositionInLine" : 0
      },
      "215" : {
        "Text" : "/* if struct sockaddr_storage is defined */",
        "Line" : 647,
        "CharPositionInLine" : 0
      },
      "216" : {
        "Text" : "/* Define to 1 if you have the timeval struct. */",
        "Line" : 650,
        "CharPositionInLine" : 0
      },
      "217" : {
        "Text" : "/* Define to 1 if you have the <sys/filio.h> header file. */",
        "Line" : 653,
        "CharPositionInLine" : 0
      },
      "218" : {
        "Text" : "/* Define to 1 if you have the <sys/ioctl.h> header file. */",
        "Line" : 656,
        "CharPositionInLine" : 0
      },
      "219" : {
        "Text" : "/* Define to 1 if you have the <sys/param.h> header file. */",
        "Line" : 659,
        "CharPositionInLine" : 0
      },
      "220" : {
        "Text" : "/* Define to 1 if you have the <sys/poll.h> header file. */",
        "Line" : 662,
        "CharPositionInLine" : 0
      },
      "221" : {
        "Text" : "/* Define to 1 if you have the <sys/resource.h> header file. */",
        "Line" : 665,
        "CharPositionInLine" : 0
      },
      "222" : {
        "Text" : "/* Define to 1 if you have the <sys/select.h> header file. */",
        "Line" : 668,
        "CharPositionInLine" : 0
      },
      "223" : {
        "Text" : "/* Define to 1 if you have the <sys/socket.h> header file. */",
        "Line" : 671,
        "CharPositionInLine" : 0
      },
      "224" : {
        "Text" : "/* Define to 1 if you have the <sys/sockio.h> header file. */",
        "Line" : 674,
        "CharPositionInLine" : 0
      },
      "225" : {
        "Text" : "/* Define to 1 if you have the <sys/stat.h> header file. */",
        "Line" : 677,
        "CharPositionInLine" : 0
      },
      "226" : {
        "Text" : "/* Define to 1 if you have the <sys/time.h> header file. */",
        "Line" : 680,
        "CharPositionInLine" : 0
      },
      "227" : {
        "Text" : "/* Define to 1 if you have the <sys/types.h> header file. */",
        "Line" : 683,
        "CharPositionInLine" : 0
      },
      "228" : {
        "Text" : "/* Define to 1 if you have the <sys/uio.h> header file. */",
        "Line" : 686,
        "CharPositionInLine" : 0
      },
      "229" : {
        "Text" : "/* Define to 1 if you have the <sys/un.h> header file. */",
        "Line" : 689,
        "CharPositionInLine" : 0
      },
      "230" : {
        "Text" : "/* Define to 1 if you have the <sys/utime.h> header file. */",
        "Line" : 692,
        "CharPositionInLine" : 0
      },
      "231" : {
        "Text" : "/* Define to 1 if you have the <termios.h> header file. */",
        "Line" : 695,
        "CharPositionInLine" : 0
      },
      "232" : {
        "Text" : "/* Define to 1 if you have the <termio.h> header file. */",
        "Line" : 698,
        "CharPositionInLine" : 0
      },
      "233" : {
        "Text" : "/* Define to 1 if you have the <time.h> header file. */",
        "Line" : 701,
        "CharPositionInLine" : 0
      },
      "234" : {
        "Text" : "/* Define to 1 if you have the <tld.h> header file. */",
        "Line" : 704,
        "CharPositionInLine" : 0
      },
      "235" : {
        "Text" : "/* Define to 1 if you have the `tld_strerror' function. */",
        "Line" : 707,
        "CharPositionInLine" : 0
      },
      "236" : {
        "Text" : "/* Define to 1 if you have the `uname' function. */",
        "Line" : 710,
        "CharPositionInLine" : 0
      },
      "237" : {
        "Text" : "/* Define to 1 if you have the <unistd.h> header file. */",
        "Line" : 713,
        "CharPositionInLine" : 0
      },
      "238" : {
        "Text" : "/* Define to 1 if you have the `utime' function. */",
        "Line" : 716,
        "CharPositionInLine" : 0
      },
      "239" : {
        "Text" : "/* Define to 1 if you have the <utime.h> header file. */",
        "Line" : 719,
        "CharPositionInLine" : 0
      },
      "240" : {
        "Text" : "/* Define to 1 if compiler supports C99 variadic macro style. */",
        "Line" : 722,
        "CharPositionInLine" : 0
      },
      "241" : {
        "Text" : "/* Define to 1 if compiler supports old gcc variadic macro style. */",
        "Line" : 725,
        "CharPositionInLine" : 0
      },
      "242" : {
        "Text" : "/* Define to 1 if you have the winber.h header file. */",
        "Line" : 728,
        "CharPositionInLine" : 0
      },
      "243" : {
        "Text" : "/* Define to 1 if you have the windows.h header file. */",
        "Line" : 731,
        "CharPositionInLine" : 0
      },
      "244" : {
        "Text" : "/* Define to 1 if you have the winldap.h header file. */",
        "Line" : 734,
        "CharPositionInLine" : 0
      },
      "245" : {
        "Text" : "/* Define to 1 if you have the winsock2.h header file. */",
        "Line" : 737,
        "CharPositionInLine" : 0
      },
      "246" : {
        "Text" : "/* Define to 1 if you have the winsock.h header file. */",
        "Line" : 740,
        "CharPositionInLine" : 0
      },
      "247" : {
        "Text" : "/* Define this symbol if your OS supports changing the contents of argv */",
        "Line" : 743,
        "CharPositionInLine" : 0
      },
      "248" : {
        "Text" : "/* Define to 1 if you have the writev function. */",
        "Line" : 746,
        "CharPositionInLine" : 0
      },
      "249" : {
        "Text" : "/* Define to 1 if you have the ws2tcpip.h header file. */",
        "Line" : 749,
        "CharPositionInLine" : 0
      },
      "250" : {
        "Text" : "/* Define to 1 if you have the <x509.h> header file. */",
        "Line" : 752,
        "CharPositionInLine" : 0
      },
      "251" : {
        "Text" : "/* Define if you have the <process.h> header file. */",
        "Line" : 755,
        "CharPositionInLine" : 0
      },
      "252" : {
        "Text" : "/* if you have the zlib.h header file */",
        "Line" : 758,
        "CharPositionInLine" : 0
      },
      "253" : {
        "Text" : "/* Define to the sub-directory in which libtool stores uninstalled libraries.\n   */",
        "Line" : 761,
        "CharPositionInLine" : 0
      },
      "254" : {
        "Text" : "/* If you lack a fine basename() prototype */",
        "Line" : 765,
        "CharPositionInLine" : 0
      },
      "255" : {
        "Text" : "/* Define to 1 if you need the lber.h header file even with ldap.h */",
        "Line" : 768,
        "CharPositionInLine" : 0
      },
      "256" : {
        "Text" : "/* Define to 1 if you need the malloc.h header file even with stdlib.h */",
        "Line" : 771,
        "CharPositionInLine" : 0
      },
      "257" : {
        "Text" : "/* Define to 1 if _REENTRANT preprocessor symbol must be defined. */",
        "Line" : 774,
        "CharPositionInLine" : 0
      },
      "258" : {
        "Text" : "/* cpu-machine-OS */",
        "Line" : 777,
        "CharPositionInLine" : 0
      },
      "259" : {
        "Text" : "/* Name of package */",
        "Line" : 780,
        "CharPositionInLine" : 0
      },
      "260" : {
        "Text" : "/* Define to the address where bug reports for this package should be sent. */",
        "Line" : 783,
        "CharPositionInLine" : 0
      },
      "261" : {
        "Text" : "/* Define to the full name of this package. */",
        "Line" : 786,
        "CharPositionInLine" : 0
      },
      "262" : {
        "Text" : "/* Define to the full name and version of this package. */",
        "Line" : 789,
        "CharPositionInLine" : 0
      },
      "263" : {
        "Text" : "/* Define to the one symbol short name of this package. */",
        "Line" : 792,
        "CharPositionInLine" : 0
      },
      "264" : {
        "Text" : "/* Define to the version of this package. */",
        "Line" : 795,
        "CharPositionInLine" : 0
      },
      "265" : {
        "Text" : "/* a suitable file to read random data from */",
        "Line" : 798,
        "CharPositionInLine" : 0
      },
      "266" : {
        "Text" : "/* Define to the type of arg 1 for recvfrom. */",
        "Line" : 801,
        "CharPositionInLine" : 0
      },
      "267" : {
        "Text" : "/* Define to the type pointed by arg 2 for recvfrom. */",
        "Line" : 804,
        "CharPositionInLine" : 0
      },
      "268" : {
        "Text" : "/* Define to 1 if the type pointed by arg 2 for recvfrom is void. */",
        "Line" : 807,
        "CharPositionInLine" : 0
      },
      "269" : {
        "Text" : "/* Define to the type of arg 3 for recvfrom. */",
        "Line" : 810,
        "CharPositionInLine" : 0
      },
      "270" : {
        "Text" : "/* Define to the type of arg 4 for recvfrom. */",
        "Line" : 813,
        "CharPositionInLine" : 0
      },
      "271" : {
        "Text" : "/* Define to the type pointed by arg 5 for recvfrom. */",
        "Line" : 816,
        "CharPositionInLine" : 0
      },
      "272" : {
        "Text" : "/* Define to 1 if the type pointed by arg 5 for recvfrom is void. */",
        "Line" : 819,
        "CharPositionInLine" : 0
      },
      "273" : {
        "Text" : "/* Define to the type pointed by arg 6 for recvfrom. */",
        "Line" : 822,
        "CharPositionInLine" : 0
      },
      "274" : {
        "Text" : "/* Define to 1 if the type pointed by arg 6 for recvfrom is void. */",
        "Line" : 825,
        "CharPositionInLine" : 0
      },
      "275" : {
        "Text" : "/* Define to the function return type for recvfrom. */",
        "Line" : 828,
        "CharPositionInLine" : 0
      },
      "276" : {
        "Text" : "/* Define to the type of arg 1 for recv. */",
        "Line" : 831,
        "CharPositionInLine" : 0
      },
      "277" : {
        "Text" : "/* Define to the type of arg 2 for recv. */",
        "Line" : 834,
        "CharPositionInLine" : 0
      },
      "278" : {
        "Text" : "/* Define to the type of arg 3 for recv. */",
        "Line" : 837,
        "CharPositionInLine" : 0
      },
      "279" : {
        "Text" : "/* Define to the type of arg 4 for recv. */",
        "Line" : 840,
        "CharPositionInLine" : 0
      },
      "280" : {
        "Text" : "/* Define to the function return type for recv. */",
        "Line" : 843,
        "CharPositionInLine" : 0
      },
      "281" : {
        "Text" : "/* Define as the return type of signal handlers (`int' or `void'). */",
        "Line" : 846,
        "CharPositionInLine" : 0
      },
      "282" : {
        "Text" : "/* Define to the type qualifier of arg 5 for select. */",
        "Line" : 849,
        "CharPositionInLine" : 0
      },
      "283" : {
        "Text" : "/* Define to the type of arg 1 for select. */",
        "Line" : 852,
        "CharPositionInLine" : 0
      },
      "284" : {
        "Text" : "/* Define to the type of args 2, 3 and 4 for select. */",
        "Line" : 855,
        "CharPositionInLine" : 0
      },
      "285" : {
        "Text" : "/* Define to the type of arg 5 for select. */",
        "Line" : 858,
        "CharPositionInLine" : 0
      },
      "286" : {
        "Text" : "/* Define to the function return type for select. */",
        "Line" : 861,
        "CharPositionInLine" : 0
      },
      "287" : {
        "Text" : "/* Define to the type qualifier of arg 2 for send. */",
        "Line" : 864,
        "CharPositionInLine" : 0
      },
      "288" : {
        "Text" : "/* Define to the type of arg 1 for send. */",
        "Line" : 867,
        "CharPositionInLine" : 0
      },
      "289" : {
        "Text" : "/* Define to the type of arg 2 for send. */",
        "Line" : 870,
        "CharPositionInLine" : 0
      },
      "290" : {
        "Text" : "/* Define to the type of arg 3 for send. */",
        "Line" : 873,
        "CharPositionInLine" : 0
      },
      "291" : {
        "Text" : "/* Define to the type of arg 4 for send. */",
        "Line" : 876,
        "CharPositionInLine" : 0
      },
      "292" : {
        "Text" : "/* Define to the function return type for send. */",
        "Line" : 879,
        "CharPositionInLine" : 0
      },
      "293" : {
        "Text" : "/* The size of `int', as computed by sizeof. */",
        "Line" : 882,
        "CharPositionInLine" : 0
      },
      "294" : {
        "Text" : "/* The size of `short', as computed by sizeof. */",
        "Line" : 885,
        "CharPositionInLine" : 0
      },
      "295" : {
        "Text" : "/* The size of `long', as computed by sizeof. */",
        "Line" : 888,
        "CharPositionInLine" : 0
      },
      "296" : {
        "Text" : "/* The size of `off_t', as computed by sizeof. */",
        "Line" : 891,
        "CharPositionInLine" : 0
      },
      "297" : {
        "Text" : "/* The size of `curl_off_t', as computed by sizeof. */",
        "Line" : 894,
        "CharPositionInLine" : 0
      },
      "298" : {
        "Text" : "/* The size of `size_t', as computed by sizeof. */",
        "Line" : 897,
        "CharPositionInLine" : 0
      },
      "299" : {
        "Text" : "/* The size of `time_t', as computed by sizeof. */",
        "Line" : 900,
        "CharPositionInLine" : 0
      },
      "300" : {
        "Text" : "/* The size of `void*', as computed by sizeof. */",
        "Line" : 903,
        "CharPositionInLine" : 0
      },
      "301" : {
        "Text" : "/* Define to 1 if you have the ANSI C header files. */",
        "Line" : 906,
        "CharPositionInLine" : 0
      },
      "302" : {
        "Text" : "/* Define to the type of arg 3 for strerror_r. */",
        "Line" : 909,
        "CharPositionInLine" : 0
      },
      "303" : {
        "Text" : "/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */",
        "Line" : 912,
        "CharPositionInLine" : 0
      },
      "304" : {
        "Text" : "/* Define if you want to enable c-ares support */",
        "Line" : 915,
        "CharPositionInLine" : 0
      },
      "305" : {
        "Text" : "/* Define if you want to enable POSIX threaded DNS lookup */",
        "Line" : 918,
        "CharPositionInLine" : 0
      },
      "306" : {
        "Text" : "/* Define if you want to enable WIN32 threaded DNS lookup */",
        "Line" : 921,
        "CharPositionInLine" : 0
      },
      "307" : {
        "Text" : "/* Define to disable non-blocking sockets. */",
        "Line" : 924,
        "CharPositionInLine" : 0
      },
      "308" : {
        "Text" : "/* if GnuTLS is enabled */",
        "Line" : 927,
        "CharPositionInLine" : 0
      },
      "309" : {
        "Text" : "/* if PolarSSL is enabled */",
        "Line" : 930,
        "CharPositionInLine" : 0
      },
      "310" : {
        "Text" : "/* if DarwinSSL is enabled */",
        "Line" : 933,
        "CharPositionInLine" : 0
      },
      "311" : {
        "Text" : "/* if mbedTLS is enabled */",
        "Line" : 936,
        "CharPositionInLine" : 0
      },
      "312" : {
        "Text" : "/* if libSSH2 is in use */",
        "Line" : 939,
        "CharPositionInLine" : 0
      },
      "313" : {
        "Text" : "/* If you want to build curl with the built-in manual */",
        "Line" : 942,
        "CharPositionInLine" : 0
      },
      "314" : {
        "Text" : "/* if NSS is enabled */",
        "Line" : 945,
        "CharPositionInLine" : 0
      },
      "315" : {
        "Text" : "/* if you want to use OpenLDAP code instead of legacy ldap implementation */",
        "Line" : 948,
        "CharPositionInLine" : 0
      },
      "316" : {
        "Text" : "/* if OpenSSL is in use */",
        "Line" : 951,
        "CharPositionInLine" : 0
      },
      "317" : {
        "Text" : "/* to enable NGHTTP2  */",
        "Line" : 954,
        "CharPositionInLine" : 0
      },
      "318" : {
        "Text" : "/* if Unix domain sockets are enabled  */",
        "Line" : 957,
        "CharPositionInLine" : 0
      },
      "319" : {
        "Text" : "/* Define to 1 if you are building a Windows target with large file support. */",
        "Line" : 960,
        "CharPositionInLine" : 0
      },
      "320" : {
        "Text" : "/* to enable SSPI support */",
        "Line" : 963,
        "CharPositionInLine" : 0
      },
      "321" : {
        "Text" : "/* to enable Windows SSL  */",
        "Line" : 966,
        "CharPositionInLine" : 0
      },
      "322" : {
        "Text" : "/* enable multiple SSL backends */",
        "Line" : 969,
        "CharPositionInLine" : 0
      },
      "323" : {
        "Text" : "/* Define to 1 if using yaSSL in OpenSSL compatibility mode. */",
        "Line" : 972,
        "CharPositionInLine" : 0
      },
      "324" : {
        "Text" : "/* Version number of package */",
        "Line" : 975,
        "CharPositionInLine" : 0
      },
      "325" : {
        "Text" : "/* Define to 1 if OS is AIX. */",
        "Line" : 978,
        "CharPositionInLine" : 0
      },
      "326" : {
        "Text" : "/* Number of bits in a file offset, on hosts where this is settable. */",
        "Line" : 983,
        "CharPositionInLine" : 0
      },
      "327" : {
        "Text" : "/* Define for large files, on AIX-style hosts. */",
        "Line" : 986,
        "CharPositionInLine" : 0
      },
      "328" : {
        "Text" : "/* define this if you need it to compile thread-safe code */",
        "Line" : 989,
        "CharPositionInLine" : 0
      },
      "329" : {
        "Text" : "/* Define to empty if `const' does not conform to ANSI C. */",
        "Line" : 992,
        "CharPositionInLine" : 0
      },
      "330" : {
        "Text" : "/* Type to use in place of in_addr_t when system does not provide it. */",
        "Line" : 995,
        "CharPositionInLine" : 0
      },
      "331" : {
        "Text" : "/* Define to `__inline__' or `__inline' if that's what the C compiler\n   calls it, or to nothing if 'inline' is not supported under any name.  */",
        "Line" : 998,
        "CharPositionInLine" : 0
      },
      "332" : {
        "Text" : "/* Define to `unsigned int' if <sys/types.h> does not define. */",
        "Line" : 1004,
        "CharPositionInLine" : 0
      },
      "333" : {
        "Text" : "/* the signed version of size_t */",
        "Line" : 1007,
        "CharPositionInLine" : 0
      },
      "334" : {
        "Text" : "/* Define to 1 if you have the mach_absolute_time function. */",
        "Line" : 1010,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 335
    },
    "contrib/libs/libenet/CMakeLists.txt" : {
      "ObjectId" : "7f51e5705ea340c2bd4adce2667e3c20252d3af1",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/libs/libuv/CMakeLists.txt" : {
      "ObjectId" : "861efbfbecd7b262873ace4fc59eeece3716aa98",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Android has pthread as part of its c library, not as a separate\n\n# libpthread.so.\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "contrib/libs/lua53/CMakeLists.txt" : {
      "ObjectId" : "5414a87dddb8576a0a4427be255e66b94ffa1658",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: compile lua and luac binaries to check if there is no system wide installation\n\n# see common.cmake\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/libs/restclient-cpp/CMakeLists.txt" : {
      "ObjectId" : "7902d6f9328063ada39af939ea98660bfb58daa7",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/libs/sdl2/CMakeLists.txt" : {
      "ObjectId" : "f77217fead4f6fa92a2b8f41675f8c81bea9619b",
      "LastModified" : "2019-03-17T20:23:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# General source files\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# General settings\n\n# Edit include/SDL_version.h and change the version, then:\n\n#   SDL_MICRO_VERSION += 1;\n\n#   SDL_INTERFACE_AGE += 1;\n\n#   SDL_BINARY_AGE += 1;\n\n# if any functions have been added, set SDL_INTERFACE_AGE to 0.\n\n# if backwards compatibility has been broken,\n\n# set SDL_BINARY_AGE and SDL_INTERFACE_AGE to 0.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the following should match the versions in Xcode project file:\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Calculate a libtool-like version number\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# General settings & flags\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check for 64 or 32 bit\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Get the platform\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# TODO: iOS?\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Don't mistake osx for unix\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# JavaScript does not yet have threading support, so disable pthreads when building for Emscripten.\n",
        "Line" : 141,
        "CharPositionInLine" : 40
      },
      "10" : {
        "Text" : "# Default option knobs\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Compiler info\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# VisualStudio 8.0+\n",
        "Line" : 164,
        "CharPositionInLine" : 34
      },
      "13" : {
        "Text" : "#set(CMAKE_C_FLAGS \"/ZI /WX- /\n",
        "Line" : 166,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Default flags, if not set otherwise\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Hackish, but does the trick on Win32\n",
        "Line" : 186,
        "CharPositionInLine" : 37
      },
      "16" : {
        "Text" : "# Make sure /RTC1 is disabled, otherwise it will use functions from the CRT\n",
        "Line" : 202,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Those are used for pkg-config and friends, so that the SDL2.pc, sdl2-config,\n\n# etc. are created correctly.\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Emscripten toolchain has a nonempty default value for this, and the checks\n\n# in this file need to change that, so remember the original value, and\n\n# restore back to that afterwards. For check_function_exists() to work in\n\n# Emscripten, this value must be at its default value.\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# We build SDL on cygwin without the UNIX emulation layer\n",
        "Line" : 222,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# General includes\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# All these ENABLED_BY_DEFAULT vars will default to ON if not specified, so\n\n#  you only need to have a platform override them if they are disabling.\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Set up default values for the currently supported set of subsystems:\n\n# Emscripten/Javascript does not have assembly support, a dynamic library\n\n# loading architecture, low-level CPU inspection or multithreading.\n",
        "Line" : 248,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "#set_option(DEPENDENCY_TRACKING \"Use gcc -MMD -MT dependency tracking\" ON)\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# TODO: We should (should we?) respect cmake's ${BUILD_SHARED_LIBS} flag here\n\n# The options below are for compatibility to configure's default behaviour.\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Do nada - use optimization settings to determine the assertion level\n",
        "Line" : 348,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Compiler option evaluation\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Check for -Wall first, so later things can override pieces of it.\n",
        "Line" : 364,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# TODO: Those all seem to be quite GCC specific - needs to be\n\n# reworked for better compiler support\n",
        "Line" : 445,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# if only HAVE_ALTIVEC_H_HDR is set\n",
        "Line" : 586,
        "CharPositionInLine" : 31
      },
      "30" : {
        "Text" : "# TODO: SDL_cpuinfo.h needs to support the user's configuration wish\n\n# for MSVC - right now it is always activated\n",
        "Line" : 595,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# TODO:\n\n#else()\n\n#  if(USE_GCC OR USE_CLANG)\n\n#    list(APPEND EXTRA_CFLAGS \"-mno-sse\" \"-mno-sse2\" \"-mno-sse3\" \"-mno-mmx\")\n\n#  endif()\n",
        "Line" : 606,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# TODO: Can't deactivate on FreeBSD? w/o LIBC, SDL_stdinc.h can't define\n\n# anything.\n",
        "Line" : 613,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# needed for M_PI\n",
        "Line" : 640,
        "CharPositionInLine" : 41
      },
      "34" : {
        "Text" : "# TODO: refine the mprotect check\n",
        "Line" : 656,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# Enable/disable various subsystems of the SDL library\n",
        "Line" : 712,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Haptic requires some private functions from the joystick subsystem.\n",
        "Line" : 725,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# TODO: in configure.in, the test for LOADSO and SDL_DLOPEN is a bit weird:\n\n# if LOADSO is not wanted, SDL_LOADSO_DISABLED is set\n\n# If however on Unix or APPLE dlopen() is detected via CheckDLOPEN(),\n\n# SDL_LOADSO_DISABLED will not be set, regardless of the LOADSO settings\n",
        "Line" : 739,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# General SDL subsystem options, valid for all platforms\n",
        "Line" : 744,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# CheckDummyAudio/CheckDiskAudio - valid for all platforms\n",
        "Line" : 746,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# Relevant for Unix/Darwin only\n",
        "Line" : 762,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# SDL_spinlock.c Needs to be compiled in ARM mode.\n\n# There seems to be no better way currently to set the ARM mode.\n\n# see: https://issuetracker.google.com/issues/62264618\n\n# Another option would be to set ARM mode to all compiled files\n",
        "Line" : 782,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# Core stuff\n",
        "Line" : 848,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "#enable gles\n",
        "Line" : 855,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# Platform-specific options and settings\n",
        "Line" : 886,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Hide noisy warnings that intend to aid mostly during initial stages of porting a new\n\n# project. Uncomment at will for verbose cross-compiling -I/../ path info.\n",
        "Line" : 888,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "#enable gles\n",
        "Line" : 931,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "# Need to check for Raspberry PI first and add platform specific compiler flags, otherwise the test for GLES fails!\n",
        "Line" : 970,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# We've already found the header, so REQUIRE the lib to be present\n",
        "Line" : 1040,
        "CharPositionInLine" : 8
      },
      "49" : {
        "Text" : "# seems to be BSD specific - limit the test to BSD only?\n",
        "Line" : 1061,
        "CharPositionInLine" : 20
      },
      "50" : {
        "Text" : "# Prevent codegen that would use the VC runtime libraries.\n",
        "Line" : 1142,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# Check for DirectX\n",
        "Line" : 1149,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# xinput.h may need windows.h, but doesn't include it itself.\n",
        "Line" : 1162,
        "CharPositionInLine" : 6
      },
      "53" : {
        "Text" : "# TODO: change $ENV{DXSDL_DIR} to get the path from the include checks\n",
        "Line" : 1190,
        "CharPositionInLine" : 6
      },
      "54" : {
        "Text" : "# headers needed elsewhere ...\n",
        "Line" : 1198,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# requires SDL_LOADSO on Windows (IME, DX, etc.)\n",
        "Line" : 1223,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# Libraries for Win32 native and MinGW\n",
        "Line" : 1266,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# TODO: in configure.in the check for timers is set on\n\n# cygwin | mingw32* - does this include mingw32CE?\n",
        "Line" : 1269,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# TODO: rework this all for proper MacOS X, iOS and Darwin support\n",
        "Line" : 1351,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# We always need these libs on macOS at the moment.\n\n# !!! FIXME: we need Carbon for some very old API calls in\n\n# !!! FIXME:  src/video/cocoa/SDL_cocoakeyboard.c, but we should figure out\n\n# !!! FIXME:  how to dump those.\n",
        "Line" : 1353,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# Requires the darwin file implementation\n",
        "Line" : 1362,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# !!! FIXME: modern CMake doesn't need \"LANGUAGE C\" for Objective-C.\n",
        "Line" : 1366,
        "CharPositionInLine" : 4
      },
      "62" : {
        "Text" : "# !!! FIXME: why is COREVIDEO inside this if() block?\n",
        "Line" : 1369,
        "CharPositionInLine" : 4
      },
      "63" : {
        "Text" : "# !!! FIXME: modern CMake doesn't need \"LANGUAGE C\" for Objective-C.\n",
        "Line" : 1436,
        "CharPositionInLine" : 4
      },
      "64" : {
        "Text" : "# Actually load the frameworks at the end so we don't duplicate include.\n",
        "Line" : 1442,
        "CharPositionInLine" : 2
      },
      "65" : {
        "Text" : "# iOS hack needed - http://code.google.com/p/ios-cmake/ ?\n",
        "Line" : 1472,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# TODO: Use FIND_PACKAGE(OpenGL) instead\n",
        "Line" : 1517,
        "CharPositionInLine" : 6
      },
      "67" : {
        "Text" : "# Dummies\n\n# configure.in does it differently:\n\n# if not have X\n\n#   if enable_X {  SDL_X_DISABLED = 1 }\n\n#   [add dummy sources]\n\n# so it always adds a dummy, without checking, if it was actually requested.\n\n# This leads to missing internal references on building, since the\n\n# src/X/*.c does not get included.\n",
        "Line" : 1534,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# results in unresolved symbols on OSX\n",
        "Line" : 1544,
        "CharPositionInLine" : 33
      },
      "69" : {
        "Text" : "# We always need to have threads and timers around\n",
        "Line" : 1571,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Append the -MMD -MT flags\n\n# if(DEPENDENCY_TRACKING)\n\n#   if(COMPILER_IS_GNUCC)\n\n#     set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -MMD -MT \\$@\")\n\n#   endif()\n\n# endif()\n",
        "Line" : 1587,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Prepare the flags and remove duplicates\n",
        "Line" : 1600,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# Compat helpers for the configuration files\n",
        "Line" : 1613,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Clean up the different lists\n",
        "Line" : 1635,
        "CharPositionInLine" : 2
      },
      "74" : {
        "Text" : "##### Info output #####\n",
        "Line" : 1670,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Longest option is VIDEO_X11_XSCREENSAVER = 22 characters\n\n# Get the padding\n",
        "Line" : 1687,
        "CharPositionInLine" : 2
      },
      "76" : {
        "Text" : "# to keep changes as small as possible in our own copy\n",
        "Line" : 1715,
        "CharPositionInLine" : 11
      },
      "77" : {
        "Text" : "# Ensure that the extra cflags are used at compile time\n",
        "Line" : 1716,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Always build SDLmain\n",
        "Line" : 1719,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Don't try to link with the default set of libraries.\n",
        "Line" : 1742,
        "CharPositionInLine" : 4
      },
      "80" : {
        "Text" : "# Note: Apparently, OUTPUT_NAME must really be unique; even when\n\n# CMAKE_IMPORT_LIBRARY_SUFFIX or the like are given. Otherwise\n\n# the static build may race with the import lib and one will get\n\n# clobbered, when the suffix is realized via subsequent rename.\n",
        "Line" : 1757,
        "CharPositionInLine" : 4
      },
      "81" : {
        "Text" : "# TODO: Win32 platforms keep the same suffix .lib for import and static\n\n# libraries - do we need to consider this?\n",
        "Line" : 1768,
        "CharPositionInLine" : 2
      },
      "82" : {
        "Text" : "##### Installation targets #####\n",
        "Line" : 1775,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "##### Export files #####\n",
        "Line" : 1781,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# FreeBSD uses ${PREFIX}/libdata/pkgconfig\n",
        "Line" : 1831,
        "CharPositionInLine" : 4
      },
      "85" : {
        "Text" : "# TODO: what about the .spec file? Is it only needed for RPM creation?\n",
        "Line" : 1838,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 86
    },
    "contrib/libs/sdl2/cmake/macros.cmake" : {
      "ObjectId" : "96a7ce8b1406692acaf32a25d9c864da3f94cb45",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Message Output\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# prefix for each element\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Do not use string(REPLACE \";\" \" \") here to avoid messing up list\n\n# entries\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "contrib/libs/sdl2/cmake/sdlchecks.cmake" : {
      "ObjectId" : "f71b3d494d2ef2af71e15c04b4f7914790840e94",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# reduce the library name for shared linking\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# resolves symlinks\n",
        "Line" : 9,
        "CharPositionInLine" : 69
      },
      "2" : {
        "Text" : "# Requires:\n\n# - n/a\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - ALSA_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - PULSEAUDIO_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - JACK_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - ESD_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - ARTS_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# TODO\n",
        "Line" : 243,
        "CharPositionInLine" : 10
      },
      "9" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - NAS_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# TODO: set include paths properly, so the NAS headers are found\n",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - SNDIO_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# TODO: set include paths properly, so the sndio headers are found\n",
        "Line" : 294,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - FUSIONSOUND_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Requires:\n\n# - LIBSAMPLERATE\n\n# Optional:\n\n# - LIBSAMPLERATE_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - X11_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Check for multitouch\n",
        "Line" : 510,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Requires:\n\n# - EGL\n\n# - PkgCheckModules\n\n# Optional:\n\n# - WAYLAND_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 588,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# We have to generate some protocol interface code for some unstable Wayland features.\n",
        "Line" : 625,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# Requires:\n\n# - n/a\n\n#\n",
        "Line" : 662,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Apple always has Cocoa.\n",
        "Line" : 667,
        "CharPositionInLine" : 14
      },
      "21" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - DIRECTFB_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 680,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Requires:\n\n# - n/a\n",
        "Line" : 711,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Requires:\n\n# - nada\n",
        "Line" : 741,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Requires:\n\n# - nada\n",
        "Line" : 759,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Requires:\n\n# - nada\n\n# Optional:\n\n# - THREADS opt\n\n# Sets:\n\n# PTHREAD_CFLAGS\n\n# PTHREAD_LIBS\n",
        "Line" : 792,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# the android libc provides built-in support for pthreads, so no\n\n# additional linking or compile flags are necessary\n",
        "Line" : 802,
        "CharPositionInLine" : 6
      },
      "27" : {
        "Text" : "# causes Carbon.p complaints?\n\n# set(PTHREAD_CFLAGS \"-D_REENTRANT -D_THREAD_SAFE\")\n",
        "Line" : 812,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# Run some tests\n",
        "Line" : 844,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# Can be faked, if necessary\n\n# Can be faked, if necessary\n",
        "Line" : 911,
        "CharPositionInLine" : 65
      },
      "30" : {
        "Text" : "# Requires\n\n# - nada\n\n# Optional:\n\n# Sets:\n\n# USB_LIBS\n\n# USB_CFLAGS\n",
        "Line" : 928,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Requires:\n\n# - n/a\n",
        "Line" : 1068,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Requires:\n\n# - EGL\n\n# - PkgCheckModules\n\n# Optional:\n\n# - KMSDRM_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 1103,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 33
    },
    "contrib/libs/sdl2/include/SDL_config.h.cmake" : {
      "ObjectId" : "45acc9aa6625ff07c43709c2685d210032380eab",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\n  Simple DirectMedia Layer\n  Copyright (C) 1997-2019 Sam Lantinga <slouken@libsdl.org>\n\n  This software is provided 'as-is', without any express or implied\n  warranty.  In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely, subject to the following restrictions:\n\n  1. The origin of this software must not be misrepresented; you must not\n     claim that you wrote the original software. If you use this software\n     in a product, an acknowledgment in the product documentation would be\n     appreciated but is not required.\n  2. Altered source versions must be plainly marked as such, and must not be\n     misrepresented as being the original software.\n  3. This notice may not be removed or altered from any source distribution.\n*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/**\n *  \\file SDL_config.h.in\n *\n *  This is a set of defines to configure the SDL features\n */",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* General platform specific identifiers */",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* C language features */",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* C datatypes */\n/* Define SIZEOF_VOIDP for 64/32 architectures */",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Comment this if you want to build without any C library requirements */",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Useful headers */",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* C library functions */",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* We may need some replacement for stdarg.h here */",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* SDL internal assertion support */",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Allow disabling of core subsystems */",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Enable various audio drivers */",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Enable various input drivers */",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* Enable various sensor drivers */",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Enable various shared object loading systems */",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Enable various threading systems */",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Enable various timer systems */",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* Enable various video drivers */",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* Enable OpenGL support */",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* Enable Vulkan support */",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* Enable system power support */",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* Enable system filesystem support */",
        "Line" : 397,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* Enable assembly routines */",
        "Line" : 406,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/* Enable dynamic libsamplerate support */",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/* Platform specific definitions */",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "/* Older Visual C++ headers don't have the Win64-compatible typedefs... */",
        "Line" : 448,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "contrib/libs/sdl2/src/hidapi/Makefile.am" : {
      "ObjectId" : "3382a1f040bcd84e64b5b4d49f3bdd06df9d4604",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "contrib/libs/sdl2/src/hidapi/hidtest/Makefile.am" : {
      "ObjectId" : "d2786445a316ce0eb0e1033eb599ebf6fddd29d4",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Linux\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Other OS's\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "contrib/libs/sdl2/src/hidapi/ios/Makefile.am" : {
      "ObjectId" : "1f8f2cec66a275ecdb5a10322fc63a7c924da979",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "contrib/libs/sdl2/src/hidapi/libusb/Makefile.am" : {
      "ObjectId" : "13c9d355178815e6a3fb899501e30dbd1cd032ef",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "contrib/libs/sdl2/src/hidapi/linux/Makefile.am" : {
      "ObjectId" : "230eeb75a207745621b72a1a12bddf1c182cdade",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "contrib/libs/sdl2/src/hidapi/mac/Makefile.am" : {
      "ObjectId" : "23d96e08fb6c25a41e940a8dd0900353231dcf1c",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "contrib/libs/sdl2/src/hidapi/testgui/Makefile.am" : {
      "ObjectId" : "1c02f3f2c3559ba327db83c3d622221ef0c008ae",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Linux\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Other OS's\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Rules for copying the binary and its dependencies into the app bundle.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "contrib/libs/sdl2/src/hidapi/windows/Makefile.am" : {
      "ObjectId" : "97e261ac9ee1edaab169dbf068340240c823a257",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "contrib/libs/selene/CMakeLists.txt" : {
      "ObjectId" : "05d4ee7e182d3a7203c72bd1c2fdc16b34a9ff04",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/libs/simplecpp/CMakeLists.txt" : {
      "ObjectId" : "b3e0aa68ee903d50724f1e4d231ca402715dd064",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/libs/zlib/CMakeLists.txt" : {
      "ObjectId" : "82f75fd8f69557788732f8ecbcd11bcab0ce5398",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "2a72f7096489b185abd46e06149aac899c655532",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/client/CMakeLists.txt" : {
      "ObjectId" : "2162f33d1a1b694dd14059e576861cdf72500e19",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/CMakeLists.txt" : {
      "ObjectId" : "8d744fcbad64b3093b0695a1b90b2a581ac80963",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/ai/CMakeLists.txt" : {
      "ObjectId" : "813b3eef3bffe547463dbceaff9f1e3ae63442b5",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/attrib/CMakeLists.txt" : {
      "ObjectId" : "7c9d6c38d5cb583cc5c80f3bcfa0713bd86bbfa3",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# the network module will assemble the header with the attribute types\n\n# link it in because we need the directory where the c++ headers are\n\n# generated to be also added to this lib.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/modules/backend/CMakeLists.txt" : {
      "ObjectId" : "20acaa03394c3368b184e9abfdb3281bb76f9ceb",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/collection/CMakeLists.txt" : {
      "ObjectId" : "77e629e6324277b9e9475b10b182979348384b73",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/commonlua/CMakeLists.txt" : {
      "ObjectId" : "30991246392c538e534cc595288cc561e3d88a53",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/compute/CMakeLists.txt" : {
      "ObjectId" : "c9fc33ac91e20661469aa5ea48ff738070ede626",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# if opencl wasn't found, cuda might take over\n",
        "Line" : 20,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/modules/computevideo/CMakeLists.txt" : {
      "ObjectId" : "7099a44bac4cadb8a8865ade2f75403ffd0b4bb9",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# if opencl wasn't found, cuda might take over\n",
        "Line" : 11,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/modules/cooldown/CMakeLists.txt" : {
      "ObjectId" : "c690afa4ba5bee11d5a364f1646da0dd6dbcb9c0",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/core/CMakeLists.txt" : {
      "ObjectId" : "714d94e062be7f0338cc2cc831289fe75bd36d17",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/eventmgr/CMakeLists.txt" : {
      "ObjectId" : "36e8a55bc9a5d169263f4fa6911a49173de73f26",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/frontend/CMakeLists.txt" : {
      "ObjectId" : "b9cba8e0680416cec2813e03908727e95ec58b11",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/image/CMakeLists.txt" : {
      "ObjectId" : "71406b66616ab5a1c28945ca09ec8272b3801c83",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/io/CMakeLists.txt" : {
      "ObjectId" : "8bfa8c9c0f1fab50824c20097dbac568c0d9d64e",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/mail/CMakeLists.txt" : {
      "ObjectId" : "41b17e1d5e4a6ee517c4e7996c5f7c1eb47ce9e0",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/math/CMakeLists.txt" : {
      "ObjectId" : "96c6625089eb6e1b366c0cc1bdab40030c9ec067",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/metric/CMakeLists.txt" : {
      "ObjectId" : "c6e786f9a7d112703775f24e0951bd71add5b857",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/network/CMakeLists.txt" : {
      "ObjectId" : "13daa67098b76b0c38541a7fda3388b6a993bef6",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/noise/CMakeLists.txt" : {
      "ObjectId" : "799cc96f66a493d8383111ee50f60e32c64d7e16",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: maybe provide two noise modules, one noisefast (for e.g. client only stuff) and one noise-slow for stuff that must be cross plattform\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(MARCH native)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# http://christian-seiler.de/projekte/fpmath/\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/modules/persistence/CMakeLists.txt" : {
      "ObjectId" : "82362bc6d665294fc31d44215972b32883bc52cd",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/poi/CMakeLists.txt" : {
      "ObjectId" : "c6db0ffa0d541d32a2497b445911b8f13dfe3d82",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/render/CMakeLists.txt" : {
      "ObjectId" : "acc494a486b3a5f355ae6d7f8f03bc617543cd58",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/stock/CMakeLists.txt" : {
      "ObjectId" : "00c63816ac543420d82d5b927d6799f582df355a",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/testcore/CMakeLists.txt" : {
      "ObjectId" : "382550242ae801023fef97f3ad1e48f318f60fed",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/ui/CMakeLists.txt" : {
      "ObjectId" : "f1aa358d7c8bbc90695bcf4096e1d5cd4f06a80f",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/ui/imgui/CMakeLists.txt" : {
      "ObjectId" : "d7e9326d6895617f6fd4deec05cba4fab9651fd2",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/ui/nuklear/CMakeLists.txt" : {
      "ObjectId" : "e5071fa6b98c523f8e2ef976e8ff53bf84acc114",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/ui/turbobadger/CMakeLists.txt" : {
      "ObjectId" : "2b10f38e788167af6805fcdf1d1b01274b207af3",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/util/CMakeLists.txt" : {
      "ObjectId" : "1bc79a189d36e8e144d372908ac8f40bdda1958c",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/video/CMakeLists.txt" : {
      "ObjectId" : "f0f3ae026ffb9464effe4e2fdbde2c05b5a931fb",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set_source_files_properties(${SRCS_SHADERS} PROPERTIES LANGUAGE C)\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/modules/voxel/CMakeLists.txt" : {
      "ObjectId" : "c8003ec36cd943f0eb14bd5c898fe1a95bc77ac6",
      "LastModified" : "2019-03-18T17:17:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(MARCH generic)\n\n# http://christian-seiler.de/projekte/fpmath/\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/modules/voxelfont/CMakeLists.txt" : {
      "ObjectId" : "ec2586deb0ec7a4d1dfe7d1bc7b7d653b77d80fb",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/voxelformat/CMakeLists.txt" : {
      "ObjectId" : "eee62a28c4a891a612f3ddd5d31a621c997030f6",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/modules/voxelrender/CMakeLists.txt" : {
      "ObjectId" : "2b8699847d5354314d8cfc97f6ee0229a4ebe9af",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/server/CMakeLists.txt" : {
      "ObjectId" : "02a5d1cf5cfe2ead288396f281c1966e8e5eff27",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/CMakeLists.txt" : {
      "ObjectId" : "94002f5f3efd1fbacb34e3352d61557d70334782",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(testtemplate)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/tests/testcamera/CMakeLists.txt" : {
      "ObjectId" : "ce9a5a086bf61340af840644b7e76d5166f717ef",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/testcomputetexture3d/CMakeLists.txt" : {
      "ObjectId" : "0931c879880fcb82e1e1fe6b68dad3ff56bc0ada",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#generate_shaders(${PROJECT_NAME} testcomputetexture3d)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/tests/testdepthbuffer/CMakeLists.txt" : {
      "ObjectId" : "e9a1b03f38d659a436ff27cb9de284c5ea9d750a",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/testglslcomp/CMakeLists.txt" : {
      "ObjectId" : "02b3db12172a91dbb78380b4180b11feea6bddad",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/testglslgeom/CMakeLists.txt" : {
      "ObjectId" : "26f9acbf111803f1826451d0fbfd1f08e5b50761",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/testgpumc/CMakeLists.txt" : {
      "ObjectId" : "608d8e665836dabb733a21ab817ab8195d7cbc8c",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/testimgui/CMakeLists.txt" : {
      "ObjectId" : "642478f61453735351da898ac608378c17dcfa76",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/testluaui/CMakeLists.txt" : {
      "ObjectId" : "4071d764058975712f898fbe3c5688f13937ccb6",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/testmesh/CMakeLists.txt" : {
      "ObjectId" : "caf168a97edb92427321f4402cf33d04a99b634e",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/testnuklear/CMakeLists.txt" : {
      "ObjectId" : "db6e17e1a4bef42f42e28c743a030837da3eba08",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/testoctree/CMakeLists.txt" : {
      "ObjectId" : "b09da04d5e327eaa53cc0da7b8c73b48dfc48c0e",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/testoctreevisit/CMakeLists.txt" : {
      "ObjectId" : "5f7d280dd592f98d4f532b035e670f2d583960a5",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/testplane/CMakeLists.txt" : {
      "ObjectId" : "7cf47cdf2b9339bfa1fe8564c67a20ab22feb1b0",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/testshapebuilder/CMakeLists.txt" : {
      "ObjectId" : "3635ba869bf64d335de4bb80e4933334f083861e",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/testtemplate/CMakeLists.txt" : {
      "ObjectId" : "0830779c8277fe06853ea10ba2117f05d76dd298",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#generate_shaders(${PROJECT_NAME} testtemplate)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/tests/testtexture/CMakeLists.txt" : {
      "ObjectId" : "1df32b2cd23b997da2bf797271cc13598ffaf315",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/testtraze/CMakeLists.txt" : {
      "ObjectId" : "ce4800942e8beeed24010dd9ff7db3b7faecdf29",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/testturbobadger/CMakeLists.txt" : {
      "ObjectId" : "e81b89ad4f8136ca6a5c656602ff13590e0e5c63",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/testvoxelfont/CMakeLists.txt" : {
      "ObjectId" : "6865b2d06e99cdcc982d4cc06d5ed406ed8a6ad9",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tests/testvoxelgpu/CMakeLists.txt" : {
      "ObjectId" : "ff826e275d89aa346e8c74d3e0ec635bbc905114",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#generate_shaders(${PROJECT_NAME} testvoxelgpu)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/tools/CMakeLists.txt" : {
      "ObjectId" : "667eedd94de015eb6e25a757a6ded20ab9ecbf6a",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tools/computeshadertool/CMakeLists.txt" : {
      "ObjectId" : "39752d99f88d9d36d95cd26abef3b7b2789d0041",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tools/databasetool/CMakeLists.txt" : {
      "ObjectId" : "c8ddda2c9be36d0ae0b6cf3b82e8b01b0ce3a369",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tools/glslang/CMakeLists.txt" : {
      "ObjectId" : "3add41f75485d8ad8c2ba82931fffe55150fa70e",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For MinGW compiles, statically link against the GCC and C++ runtimes.\n\n# This avoids the need to ship those runtimes as DLLs.\n",
        "Line" : 13,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/tools/glslang/ChooseMSVCCRT.cmake" : {
      "ObjectId" : "209788174ff9cd9a45dc8a15483f21d6091e3e38",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The macro choose_msvc_crt() takes a list of possible\n\n# C runtimes to choose from, in the form of compiler flags,\n\n# to present to the user. (MTd for /MTd, etc)\n\n#\n\n# The macro is invoked at the end of the file.\n\n#\n\n# CMake already sets CRT flags in the CMAKE_CXX_FLAGS_* and\n\n# CMAKE_C_FLAGS_* variables by default. To let the user\n\n# override that for each build type:\n\n# 1. Detect which CRT is already selected, and reflect this in\n\n# LLVM_USE_CRT_* so the user can have a better idea of what\n\n# changes they're making.\n\n# 2. Replace the flags in both variables with the new flag via a regex.\n\n# 3. set() the variables back into the cache so the changes\n\n# are user-visible.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### Helper macros: ###\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Trying to match the beginning or end of the string with stuff\n\n# like [ ^]+ didn't work, so use a bunch of parentheses instead.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Find the selected-by-CMake CRT for each build type, if any.\n\n# Strip off the leading slash and any whitespace.\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Replaces or adds a flag to a variable.\n\n# Expects 'flag' to be padded with spaces.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Make sure this change gets reflected in the cache/gui.\n\n# CMake requires the docstring parameter whenever set() touches the cache,\n\n# so get the existing docstring and re-use that.\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# List of valid CRTs for MSVC\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/tools/glslang/External/CMakeLists.txt" : {
      "ObjectId" : "4d9690134ae916c52e837c65ff7815e0d86c1828",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Suppress all warnings from external projects.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We need to make sure Google Test does not mess up with the\n\n# global CRT settings on Windows.\n",
        "Line" : 8,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "src/tools/glslang/OGLCompilersDLL/CMakeLists.txt" : {
      "ObjectId" : "5bb3f0ee69690a44e0b7b2b31cd5638a1a49a1c8",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tools/glslang/SPIRV/CMakeLists.txt" : {
      "ObjectId" : "1997e74c30ab9e62f8149be17aa1632052c6f068",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tools/glslang/StandAlone/CMakeLists.txt" : {
      "ObjectId" : "5cea53d9f64e1c0b78e95e4f93743e4ebc93fff4",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tools/glslang/glslang/CMakeLists.txt" : {
      "ObjectId" : "113cde4ebf1cd447602cbe543dddd507794996ad",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This might be useful for making grammar changes:\n\n#\n\n# find_package(BISON)\n\n# add_custom_command(OUTPUT ${CMAKE_CURRENT_SOURCE_DIR}/MachineIndependent/glslang_tab.cpp ${CMAKE_CURRENT_SOURCE_DIR}/MachineIndependent/glslang_tab.cpp.h\n\n#                    COMMAND ${BISON_EXECUTABLE} --defines=${CMAKE_CURRENT_SOURCE_DIR}/MachineIndependent/glslang_tab.cpp.h -t ${CMAKE_CURRENT_SOURCE_DIR}/MachineIndependent/glslang.y -o ${CMAKE_CURRENT_SOURCE_DIR}/MachineIndependent/glslang_tab.cpp\n\n#                    MAIN_DEPENDENCY MachineIndependent/glslang.y\n\n#                    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})\n\n# set(BISON_GLSLParser_OUTPUT_SOURCE ${CMAKE_CURRENT_SOURCE_DIR}/MachineIndependent/glslang_tab.cpp)\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#glslang_pch(SOURCES MachineIndependent/pch.cpp)\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/tools/glslang/glslang/OSDependent/Unix/CMakeLists.txt" : {
      "ObjectId" : "e652f456249e45e3e8c9a4f775697df163afaa4f",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Link pthread\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Needed as long as we support CMake 2.8 for Ubuntu 14.04,\n\n# which does not support the recommended Threads::Threads target.\n\n# https://cmake.org/cmake/help/v2.8.12/cmake.html#module:FindThreads\n\n# Also needed when cross-compiling to work around\n\n# https://gitlab.kitware.com/cmake/cmake/issues/16920\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# This is the recommended way, so we use it for 3.1+.\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "src/tools/glslang/glslang/OSDependent/Windows/CMakeLists.txt" : {
      "ObjectId" : "f257418abbee006a1f82c772f3fb8c202011b35e",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# MinGW GCC complains about function pointer casts to void*.\n\n# Turn that off with -fpermissive.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/tools/mapedit/CMakeLists.txt" : {
      "ObjectId" : "c2e290b17ca1ddfe9855f92063f1d908e79f1650",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tools/noisetool/CMakeLists.txt" : {
      "ObjectId" : "3a1d5a6bc0aa28e2c80a42b93c7142adc63e3766",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tools/rcon/CMakeLists.txt" : {
      "ObjectId" : "147fea3cd52c936818be490bf19edde4022e8124",
      "LastModified" : "2018-11-11T19:40:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# NO QT\n",
        "Line" : 100,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "src/tools/shadertool/CMakeLists.txt" : {
      "ObjectId" : "1dbfaebc493b853b0e11c5542373bd1b6e78be62",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tools/uitool/CMakeLists.txt" : {
      "ObjectId" : "1f572fdfc91b2632cdee9389782621897c50cf3f",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tools/voxedit/CMakeLists.txt" : {
      "ObjectId" : "930f7946cc726c8ebc197d2967b498b1144efcfe",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tools/voxedit/voxedit-util/CMakeLists.txt" : {
      "ObjectId" : "b0faa83182fe449f2f9a0f3efab4cda1cbd3ca0a",
      "LastModified" : "2019-03-17T20:21:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 162,
    "CMAKESOURCE" : 3,
    "MAKEFILE" : 1,
    "AUTOMAKE" : 10
  },
  "ElapsedTime" : 2496
}