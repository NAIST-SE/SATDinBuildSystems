{
  "Repository" : "5472724",
  "Revision" : "HEAD",
  "ObjectId" : "83615d6a27fff227187bcae3ec3c933f14f88a50",
  "CommitTime" : "2019-04-17T15:49:58Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "01a311918fa9ef3bd984e5def7ab35b1f0c21b3f",
      "LastModified" : "2019-03-17T04:47:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This file is part of Espruino, a JavaScript interpreter for Microcontrollers\n\n#\n\n# Copyright (C) 2013 Gordon Williams <gw@pur3.co.uk>\n\n# Copyright (C) 2014 Alain SÃ©zille for NucleoF401RE, NucleoF411RE specific lines of this file\n\n#\n\n# This Source Code Form is subject to the terms of the Mozilla Public\n\n# License, v. 2.0. If a copy of the MPL was not distributed with this\n\n# file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\n#\n\n# -----------------------------------------------------------------------------\n\n# Makefile for Espruino\n\n# -----------------------------------------------------------------------------\n\n# Set the BOARD environment variable to one of the names of the .py file in\n\n# the `boards` directory. Eg. PICO, PUCKJS, ESPRUINOWIFI, etc\n\n#\n\n# make               # make whatever the default binary is\n\n# make flash         # Try and flash using the platform's normal flash tool\n\n# make serialflash   # flash over USB serial bootloader (STM32)\n\n# make lst           # Make listing files\n\n#\n\n# Also:\n\n#\n\n# DEBUG=1                 # add debug symbols (-g)\n\n# RELEASE=1               # Force release-style compile (no asserts, etc)\n\n# SINGLETHREAD=1          # Compile single-threaded to make compilation errors easier to find\n\n# BOOTLOADER=1            # make the bootloader (not Espruino)\n\n# PROFILE=1               # Compile with gprof profiling info\n\n# CFILE=test.c            # Compile in the supplied C file\n\n# CPPFILE=test.cpp        # Compile in the supplied C++ file\n\n#\n\n# WIZNET=1                # If compiling for a non-linux target that has internet support, use WIZnet W5500 support\n\n#   W5100=1               # Compile for WIZnet W5100 (not W5500)\n\n# CC3000=1                # If compiling for a non-linux target that has internet support, use CC3000 support\n\n# USB_PRODUCT_ID=0x1234   # force a specific USB Product ID (default 0x5740)\n\n#\n\n# GENDIR=MyGenDir\t\t  # sets directory for files generated during make\n\n#\t\t\t\t\t      # GENDIR=/home/mydir/mygendir\n\n# SETDEFINES=FileDefines  # settings which are called after definitions for board are done\n\n#                         # SETDEFINES=/home/mydir/myDefines\n\n# UNSUPPORTEDMAKE=FileUnsu# Adds additional files from unsupported sources(means not supported by Gordon) to actual make\n\n#                         # UNSUPPORTEDMAKE=/home/mydir/unsupportedCommands\n\n# PROJECTNAME=myBigProject# Sets projectname\n\n# BLACKLIST=fileBlacklist # Removes javascript commands given in a file from compilation and therefore from project defined firmware\n\n#                         # is used in build_jswrapper.py\n\n#                         # BLACKLIST=/home/mydir/myBlackList\n\n# VARIABLES=1700          # Sets number of variables for project defined firmware. This parameter can be dangerous, be careful before changing.\n\n#                         # used in build_platform_config.py\n\n# NO_COMPILE=1            # skips compiling and linking part, used to echo WRAPPERSOURCES only\n\n# RTOS=1                  # adds RTOS functions, available only for ESP32 (yet)\n\n# DFU_UPDATE_BUILD=1      # Uncomment this to build Espruino for a device firmware update over the air (nRF52).\n\n# PAD_FOR_BOOTLOADER=1    # When building for Espruino STM32 boards, pad the binary out with 0xFF where the bootloader should be (allows the Web IDE to flash the binary)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# multicore\n",
        "Line" : 60,
        "CharPositionInLine" : 14
      },
      "2" : {
        "Text" : "#-fdiagnostics-show-option - shows which flags can be used with -Werror\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# force no asserts to be compiled in\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default release labeling.  (This may fail and give inconsistent results due to the fact that\n\n# travis does a shallow clone.)\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# use egrep to count lines instead of wc to avoid whitespace error on Mac\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Alternate release labeling, which works nicely in travis and allows other developers to put their\n\n# initials into the build number.\n\n# The release label is constructed by appending the value of ALT_RELEASE followed by the branch\n\n# name as build number instead of commit info. For example, you can set ALT_RELEASE=peter and\n\n# then your builds for branch \"experiment\" come out with a version like\n\n# v1.81.peter_experiment_83bd432, where the last letters are the short of the current commit SHA.\n\n# Warning: this same release label derivation is also in scripts/common.py in get_version()\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Figure out whether we're building a tagged commit (true release) or not\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Try and guess board names\n",
        "Line" : 130,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# just a guess\n",
        "Line" : 132,
        "CharPositionInLine" : 20
      },
      "10" : {
        "Text" : "#$(info *************************************************************)\n\n#$(info *           To build, use BOARD=my_board make               *)\n\n#$(info *************************************************************)\n",
        "Line" : 138,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# ---------------------------------------------------------------------------------\n\n#                                                      Get info out of BOARDNAME.py\n\n# ---------------------------------------------------------------------------------\n\n# TODO: could check board here and make clean if it's different?\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#set or reset defines like USE_GRAPHIC from an external file to customize firmware\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ----------------------------- end of board defines ------------------------------\n\n# ---------------------------------------------------------------------------------\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ---------------------------------------------------------------------------------\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# If we're not on Linux and we want internet, we need either CC3000 or WIZnet support\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#OPTIMIZEFLAGS=-Os -g\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# These are files for platform-specific libraries\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# These are JS files to be included as pre-built Espruino modules\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Files that contains objects/functions/methods that will be\n\n# exported to JS. The order here actually determines the order\n\n# objects will be matched in. So for example Pins must come\n\n# above ints, since a Pin is also matched as an int.\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# it is important that _pin comes before stuff which uses\n\n# integers (as the check for int *includes* the chek for pin)\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Smaller, RLE compression for code\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# If we have enough flash, include the debugger\n\n# ESP8266 can't do it because it expects tasks to finish within set time\n",
        "Line" : 297,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Use use tab complete\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Heatshrink compression library and wrapper - better compression when saving code to flash\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# ------------------------------------------------------------------------------ DON'T USE IN BOOTLOADER\n",
        "Line" : 315,
        "CharPositionInLine" : 18
      },
      "26" : {
        "Text" : "# for LFN support (see _USE_LFN in ff.h)\n",
        "Line" : 328,
        "CharPositionInLine" : 40
      },
      "27" : {
        "Text" : "#USE_FILESYSTEM_SDIO\n",
        "Line" : 335,
        "CharPositionInLine" : 5
      },
      "28" : {
        "Text" : "#USE_FLASHFS\n\n#USE_FILESYSTEM_SDIO\n\n#!LINUX\n\n#USE_FILESYSTEM\n",
        "Line" : 343,
        "CharPositionInLine" : 6
      },
      "29" : {
        "Text" : "# special ESP8266 maths lib that doesn't go into RAM\n",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# everything else uses normal maths lib\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# For EMW3165 use SDIO to access BCN43362 rev A2\n",
        "Line" : 454,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "# RTOS\n",
        "Line" : 493,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# USE_ESP32\n",
        "Line" : 494,
        "CharPositionInLine" : 7
      },
      "34" : {
        "Text" : "# USE_NET\n",
        "Line" : 515,
        "CharPositionInLine" : 6
      },
      "35" : {
        "Text" : "# BOOTLOADER ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ DON'T USE STUFF ABOVE IN BOOTLOADER\n",
        "Line" : 581,
        "CharPositionInLine" : 6
      },
      "36" : {
        "Text" : "# =========================================================================\n",
        "Line" : 583,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# =========================================================================\n",
        "Line" : 589,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# =========================================================================\n",
        "Line" : 593,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# -ffreestanding -nodefaultlibs -nostdlib -fno-common\n\n# -nodefaultlibs -nostdlib -nostartfiles\n",
        "Line" : 607,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# -fdata-sections -ffunction-sections are to help remove unused code\n",
        "Line" : 610,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# -Wl,--gc-sections helps remove unused code\n\n# -Wl,--whole-archive checks for duplicates\n\n# --specs=nano.specs uses newlib-nano\n",
        "Line" : 613,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Adds additional files from unsupported sources(means not supported by Gordon) to actual make\n",
        "Line" : 636,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# sets projectname for actual make\n",
        "Line" : 640,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# =============================================================================\n\n# =============================================================================\n\n# =============================================================================\n",
        "Line" : 662,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# hack to ensure that Pico/etc have all possible firmware configs listed\n",
        "Line" : 671,
        "CharPositionInLine" : 8
      },
      "46" : {
        "Text" : "# nRF5x devices use their own linker files that aren't automatically generated.\n",
        "Line" : 689,
        "CharPositionInLine" : 13
      },
      "47" : {
        "Text" : "# EFM32\n\n# NRF5X\n",
        "Line" : 694,
        "CharPositionInLine" : 6
      },
      "48" : {
        "Text" : "# skips compiling and linking, if NO_COMPILE is defined\n\n# Generation of temporary files and setting of wrappersources is already done this moment\n",
        "Line" : 701,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# note: link is ignored for the ESP8266\n",
        "Line" : 709,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# case sensitive - Nordic's files are capitals\n",
        "Line" : 726,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# ---------------------------------------------------\n",
        "Line" : 735,
        "CharPositionInLine" : 12
      },
      "52" : {
        "Text" : "# ARM/etc, so generate bin, etc ---------------------------\n",
        "Line" : 741,
        "CharPositionInLine" : 5
      },
      "53" : {
        "Text" : "# ---------------------------------------------------\n",
        "Line" : 743,
        "CharPositionInLine" : 10
      },
      "54" : {
        "Text" : "# NO_COMPILE\n",
        "Line" : 745,
        "CharPositionInLine" : 5
      },
      "55" : {
        "Text" : "# log WRAPPERSOURCES to help Firmware creation tool\n",
        "Line" : 746,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# start make like this \"make varsonly\" to get all variables created and used during make process without compiling\n\n# this helps to better understand linking, or to find oddities\n",
        "Line" : 764,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 57
    },
    "libs/crypto/mbedtls/CMakeLists.txt" : {
      "ObjectId" : "094d9069b3b93bc14f2e0a4e1040233f43539d73",
      "LastModified" : "2015-09-30T14:53:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# the test suites currently have compile errors with MSVC\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# some warnings we want are not available with old GCC versions\n\n# note: starting with CMake 2.8 we could use CMAKE_C_COMPILER_VERSION\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# additional convenience targets for Unix only\n",
        "Line" : 97,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "libs/crypto/mbedtls/Makefile" : {
      "ObjectId" : "7f03115b022979626c16c23974a2acbb3435b34d",
      "LastModified" : "2015-09-30T14:53:15Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# note: for coverage testing, build with:\n\n# make CFLAGS='--coverage -g3 -O0'\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libs/crypto/mbedtls/include/CMakeLists.txt" : {
      "ObjectId" : "985a3530b9799529e05c046068d1fe3d892a01ee",
      "LastModified" : "2015-09-30T14:53:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/crypto/mbedtls/library/CMakeLists.txt" : {
      "ObjectId" : "ea43ccbaea60327481e4a988a3eec2793119ca48",
      "LastModified" : "2015-09-30T14:53:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/crypto/mbedtls/library/Makefile" : {
      "ObjectId" : "f72ae8e355e114a746a9a17b905bfff4b91181ed",
      "LastModified" : "2015-09-30T14:53:15Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Also see \"include/mbedtls/config.h\"\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MicroBlaze specific options:\n\n# CFLAGS += -mno-xl-soft-mul -mxl-barrel-shift\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# To compile on Plan9:\n\n# CFLAGS += -D_BSD_EXTENSION\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if were running on Windows build for Windows\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# To compile as a shared library:\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# all code is position-indep with mingw, avoid warning about useless flag\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# OSX shared library extension:\n\n# DLEXT=dylib\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Windows shared library extension:\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# tls\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# x509\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# crypto\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "targetlibs/nrf5x_12/external/nano-pb/generator/proto/Makefile" : {
      "ObjectId" : "3f00512ba29d875476ffccced769db50eb89aa4a",
      "LastModified" : "2018-01-15T12:35:11Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 3,
    "MAKEFILE" : 4
  },
  "ElapsedTime" : 6546
}