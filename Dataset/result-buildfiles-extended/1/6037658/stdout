{
  "Repository" : "6037658",
  "Revision" : "HEAD",
  "ObjectId" : "ed1a023154e031ccbe49de84e3c4a56fad879d4e",
  "CommitTime" : "2019-03-24T22:21:58Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "b0cbd597e878044f6766870e3cf0797e194121bb",
      "LastModified" : "2019-03-24T22:21:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##\n\n##  CMake build for FA\n\n##\n\n##  This script is slighly unusual, in that it requires components_resolve to be called once before\n\n##  building anything. Follow the instructions in README and all will be well.\n\n##\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set(MSVC_INCREMENTAL_DEFAULT ON)\n\n#\n\n# STRING(REPLACE \"INCREMENTAL:YES\" \"INCREMENTAL:NO\" replacementFlags ${CMAKE_EXE_LINKER_FLAGS_DEBUG})\n\n# SET(CMAKE_EXE_LINKER_FLAGS_DEBUG \"/INCREMENTAL:NO ${replacementFlags}\" )\n\n#\n\n# STRING(REPLACE \"INCREMENTAL:YES\" \"INCREMENTAL:NO\" replacementFlags3 ${CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO})\n\n# SET(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO \"/INCREMENTAL:NO ${replacementFlags3}\" )\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## ----------------------------------------------------------------------\n\n## Basic definitions\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO better check\n",
        "Line" : 41,
        "CharPositionInLine" : 10
      },
      "4" : {
        "Text" : "## ----------------------------------------------------------------------\n\n## Build options\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n#  This should hold\n\n#      CMAKE_OSX_DEPLOYMENT_TARGET\n\n#         <= CMAKE_OSX_SYSROOT\n\n#         <= (build machine OS X version)\n\n#\n\n#      CMAKE_OSX_DEPLOYMENT_TARGET is minimum supported version (i.e. 10.7)\n\n#      CMAKE_OSX_SYSROOT is path to SDK of maximum supported version\n\n#\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## ----------------------------------------------------------------------\n\n## Misc setup\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#find_package(Dist)\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## ----------------------------------------------------------------------\n\n## Sanity checks\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# string(COMPARE NOTEQUAL \"${CMAKE_OSX_ARCHITECTURES}\" \"i386\" ARCH_NOT_32_BIT)\n\n# if(ARCH_NOT_32_BIT)\n\n#   message(FATAL_ERROR\n\n#     \"\\nThe Audio Engine does not support 64-bit mode yet.\"\n\n#     \"\\nTry -DCMAKE_OSX_ARCHITECTURES=i386.\")\n\n# endif()\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "## ----------------------------------------------------------------------\n\n## Component manager\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\n\n#  These steps sets up the component manager and adds the components_resolve target\n\n#\n\n#  Usually there is no need to use this explicitly, as the boot script calls\n\n#  \"make components_resolve\" and it only needs to be called once. Note that components_resolve\n\n#  calls cmake again to proceed below the guard below.\n\n#\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## ----------------------------------------------------------------------\n\n## Add main targets\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#  We only proceed here if the component mangager has been run, as per above.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## ----------------------------------------------------------------------\n\n# Find packages\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "## ----------------------------------------------------------------------\n\n## Add compiler defs\n",
        "Line" : 209,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# message(\"Sysroot is \" ${CMAKE_OSX_SYSROOT})\n\n# message(\"Target is \"${CMAKE_OSX_DEPLOYMENT_TARGET})\n",
        "Line" : 216,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# add_definitions(-std=c99)\n\n# add_definitions(-fcolor-diagnostics)\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# add_definitions(-Wno-error=logical-op-parentheses)\n",
        "Line" : 224,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# -Wmissing-noreturn\n\n# -Wswitch-default\n\n# -Wswitch-enum\n\n# -Wreturn-type\n\n# -Wdeprecated\n\n# -Wswitch\n",
        "Line" : 228,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# add_definitions(\"-v\")\n",
        "Line" : 236,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "#    set(STD_LINK_FLAGS \"${STD_LINK_FLAGS} -mmin-macosx-version=${CMAKE_OSX_DEPLOYMENT_TARGET}\")\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# set(STD_LINK_FLAGS \"${STD_LINK_FLAGS} -v\")\n",
        "Line" : 241,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "## ----------------------------------------------------------------------\n\n## Add include directories\n",
        "Line" : 251,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# for the conf file\n",
        "Line" : 255,
        "CharPositionInLine" : 53
      },
      "25" : {
        "Text" : "## ----------------------------------------------------------------------\n\n## Add libraries\n",
        "Line" : 272,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# May be empty\n",
        "Line" : 275,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# May be empty\n",
        "Line" : 295,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "#find_library (WINMM   NAMES winmm   PATH_SUFFIXES lib PATHS \"C:/MinGW\")\n",
        "Line" : 313,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "## ----------------------------------------------------------------------\n\n## Add targets for source-only libraries\n",
        "Line" : 348,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "## ----------------------------------------------------------------------\n\n## Config file\n",
        "Line" : 354,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "## ----------------------------------------------------------------------\n\n## Add main targets\n",
        "Line" : 373,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 32
    },
    "cmake/modules/AudioEngine.cmake" : {
      "ObjectId" : "7fe021ad5904c7c25b49504b90fb39214152b951",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Component manager for the Audio Engine\n\n# Author : Hans Hoglund 2012\n\n#\n\n# Variables that influence the behaviour of this module:\n\n#\n\n#     AUDIO_ENGINE_SYSTEM_NAME\n\n#         May be set to anything, otherwise deault to osx, msvc or msys.\n\n#     AUDIO_ENGINE_SHOW_COMPONENT_OUTPUT\n\n#         Set to non-false to show intermediate build results on stdout/stderr.\n\n#     AUDIO_ENGINE_BUILD_COMPONENTS\n\n#         Set to non-false to compile components locally.\n\n#     AUDIO_ENGINE_WORKING_DIR\n\n#         Directory in which to run the supplied executables.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ==============================================================================\n\n# Public functions\n\n# ==============================================================================\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set a variable to a predicate that checks whether the given file exists. \n\n# The passed variable can then be passed to run_predicate().\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# predicates ...\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# predicates ...\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Run a given predicate (created by a predicate_ ... function).\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# args ...\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Add a component to be built or downloaded.\n\n#\n\n# The component should have a standard structure, providing a folder in ${AUDIO_ENGINE_COMPONENTS_DIR}\n\n# named ${name}, with a build/build and build/clean executable.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add a component to be built or downloaded.\n\n#   predicate         \n\n#     Should be a predicate (see above) to check it the component needs to be built or downloaded.\n\n#   build_executable  \n\n#     Should be the name of an executable that will build the component if requested.           \n\n#   clean_executable  \n\n#     Should be the name of an executable that will remove the component if requested.           \n\n#   package_name      \n\n#     Should be the name of the component on the package server.           \n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Print all components\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# TODO build, get, check status\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Clean all components\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Resolve all components. That is, for each component check whether it needs\n\n# to be resolved using the predicate, then either download or compile it\n\n# based on the value of AUDIO_ENGINE_BUILD_COMPONENTS.\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ==============================================================================\n\n# Internal functions\n\n# ==============================================================================\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# TODO really no cross-platform check in CMake?\n",
        "Line" : 187,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# ps ...\n",
        "Line" : 219,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# ps ...\n",
        "Line" : 234,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# message(\">>> ${p}\")\n\n# message(\">>> ${${p}}\")\n",
        "Line" : 238,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# message(\">>>> ${get_result}\")\n",
        "Line" : 308,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# string(REPLACE \"C:/\" \"C:/\" str ${str})\n\n# string(REPLACE \"y:/\" \"Y:/\" str ${str})\n",
        "Line" : 349,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# FIXME command style of package manager is hardcoded\n",
        "Line" : 386,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# ==============================================================================\n\n# Module init\n\n# ==============================================================================\n",
        "Line" : 396,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# TODO string(COMPRARE EQUAL ${CMAKE_GENERATOR} \"MSYS Makefiles\") or something\n",
        "Line" : 406,
        "CharPositionInLine" : 18
      },
      "23" : {
        "Text" : "# TODO else FATAL_ERROR unknown system\n",
        "Line" : 409,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 24
    },
    "cmake/modules/DynamicLet.cmake" : {
      "ObjectId" : "d42ed7594f4c3ade19c7c4b493c91c64c88acbb1",
      "LastModified" : "2012-07-20T19:58:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Dynamic let-bindings\n\n# Mainly useful for temporary updating global variables\n\n# \n\n# Examples:\n\n# \n\n#    set(X \"foo\")\n\n#    message(${X})       # X has value 'foo'\n\n#    let(X \"bar\")\n\n#      message(${X})     # X has value 'bar'\n\n#      let(X \"baz\")\n\n#        message(${X})   # X has value 'baz'\n\n#      endlet(X)\n\n#      message(${X})     # X has value 'bar'\n\n#    endlet(X)\n\n#    message(${X})       # X has initial value 'foo'\n\n# \n\n# \n\n#    letmany(CMAKE_FIND_LIBRARY_SUFFIXES \".a\")\n\n#      message(${CMAKE_FIND_LIBRARY_SUFFIXES})     # CMAKE_FIND_LIBRARY_SUFFIXES has value '.a'\n\n#    endletmany(CMAKE_FIND_LIBRARY_SUFFIXES)       # CMAKE_FIND_LIBRARY_SUFFIXES is restored to its initial value\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create a temporary binding of variable V to X \n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Restore a temporary binding of variable V \n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create a temporary binding to a list. Only works one level unfortunately.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Restore a temporary binding to a list. Only works one level unfortunately.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/modules/FindC++0x.cmake" : {
      "ObjectId" : "754e3fac8c630764bb4b40f27b78e6c9f1ef01ae",
      "LastModified" : "2012-09-19T17:09:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set(CMAKE_CXX_FLAGS \n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# \"${CMAKE_CXX_FLAGS} -stdlib=libc++\"\n\n# )\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindCurl.cmake" : {
      "ObjectId" : "4556890f7985879e7e28ec4f983f69d8c8d052fc",
      "LastModified" : "2016-09-15T22:53:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find curl\n\n# Once done this will define\n\n#\n\n#  CURL_FOUND - system has CURL\n\n#  CURL_INCLUDE_DIRS - the CURL include directory\n\n#  CURL_LIBRARIES - Link these to use CURL\n\n#  CURL_DEFINITIONS - Compiler switches required for using CURL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindDist.cmake" : {
      "ObjectId" : "6d1bf648177baa54385d6bf7a54b79ea7eecb55b",
      "LastModified" : "2012-07-24T17:37:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find dist\n\n# this module looks for the dist tool\n\n#\n\n#  DIST_EXECUTABLE     - the full path to dist\n\n#  DIST_FOUND          - If false, don't attempt to use dist.\n\n#  DIST_VERSION_STRING - version of dist found (since CMake 2.8.8)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### DIST_VERSION\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set DIST_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindFFTW3f.cmake" : {
      "ObjectId" : "e4c051079cc4b631bd5e2deea3f6a1edc1e04bd8",
      "LastModified" : "2012-07-20T19:58:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find single-precision (float) version of FFTW3\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindFluidsynth.cmake" : {
      "ObjectId" : "65157b109c9e34636ba82a28da12e2b231657ec1",
      "LastModified" : "2018-03-21T14:10:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Fluidsynth\n\n# Once done this will define\n\n#\n\n#  FLUIDSYNTH_FOUND - system has Fluidsynth\n\n#  FLUIDSYNTH_INCLUDE_DIRS - the Fluidsynth include directory\n\n#  FLUIDSYNTH_LIBRARIES - Link these to use Fluidsynth\n\n#  FLUIDSYNTH_DEFINITIONS - Compiler switches required for using Fluidsynth\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindGlib.cmake" : {
      "ObjectId" : "aafd9a51abcb283ff9b45378e4b09fd4bc4abf2d",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Glib\n\n# Once done this will define\n\n#\n\n#  GLIB_FOUND - system has Glib\n\n#  GLIB_INCLUDE_DIRS - the Glib include directory\n\n#  GLIB_LIBRARIES - Link these to use Glib\n\n#  GLIB_DEFINITIONS - Compiler switches required for using Glib\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FIXME Duplicates code in AudioEngine.cmake\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO string(COMPRARE EQUAL ${CMAKE_GENERATOR} \"MSYS Makefiles\") or something\n",
        "Line" : 18,
        "CharPositionInLine" : 16
      },
      "3" : {
        "Text" : "# TODO else FATAL_ERROR unknown system\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Not really necessary ...\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# find_library (GIO_LIBRARY\n\n#   NAMES gio-2.0\n\n#   PATH_SUFFIXES lib\n\n#   PATHS ${GLIB_PATHS}\n\n#   )\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#  ${GIO_LIBRARY}\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# message(${GLIB_LIBRARIES2})\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/modules/FindGtest.cmake" : {
      "ObjectId" : "cc4015c7909799dbb057e0019bce22999bf830e0",
      "LastModified" : "2012-12-09T16:37:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Gtest\n\n# Once done this will define\n\n#\n\n#  GTEST_FOUND - system has Gtest\n\n#  GTEST_INCLUDE_DIRS - the Gtest include directory\n\n#  GTEST_LIBRARIES - Link these to use Gtest\n\n#  GTEST_DEFINITIONS - Compiler switches required for using Gtest\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindICU.cmake" : {
      "ObjectId" : "ac93fa65a35027d79d9fe9e1ca29e374e44591ee",
      "LastModified" : "2012-12-09T16:37:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find ICU\n\n# Once done this will define\n\n#\n\n#  ICU_FOUND        - system has ICU\n\n#  ICU_INCLUDE_DIRS - the ICU include directory\n\n#  ICU_LIBRARIES    - Link these to use ICU\n\n#  ICU_DEFINITIONS  - Compiler switches required for using ICU\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#message(\">>>>>>> ${ICU_INCLUDE_DIRS}\")\n\n#message(\">>>>>>> ${ICU_LIBRARIES}\")\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindIconv.cmake" : {
      "ObjectId" : "654aae73f2b52815a5cb5baa7a607d89fb110d22",
      "LastModified" : "2012-12-09T16:37:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# # Find iconv library\n\n# #\n\n# # Author: Eddy Xu <eddyxu at gmail.com>\n\n# #\n\n# # Released under BSD license\n\n# #\n\n# #  ICONV_FOUND          - True if iconv found\n\n# #  ICONV_INCLUDE_DIRS   - where to find iconv.h, etc\n\n# #  ICONV_LIBRARIES      - Lists of libraries when using iconv\n\n# #  ICONV_DEFINITIONS    - HAVE_ICONV_H if iconv found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# # Look for the header file\n\n# FIND_PATH( ICONV_INCLUDE_DIR NAMES iconv.h )\n\n# MARK_AS_ADVANCED( ICONV_INCLUDE_DIR )\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# # Look for the library\n\n# FIND_LIBRARY( ICONV_LIBRARY NAMES iconv )\n\n# MARK_AS_ADVANCED( ICONV_LIBRARY )\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# INCLUDE(FindPackageHandleStandardArgs)\n\n# FIND_PACKAGE_HANDLE_STANDARD_ARGS(Iconv DEFAULT_MSG\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ICONV_LIBRARY ICONV_INCLUDE_DIR )\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# IF(ICONV_INCLUDE_DIR AND ICONV_LIBRARY)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# SET(ICONV_DEFINITIONS  -DHAVE_ICONV_H)\n\n# SET(ICONV_INCLUDE_DIRS ${ICONV_INCLUDE_DIR})\n\n# SET(ICONV_LIBRARIES    ${ICONV_LIBRARY})\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# ENDIF()\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# MARK_AS_ADVANCED(ICONV_INCLUDE_DIR)\n\n# MARK_AS_ADVANCED(ICONV_LIBRARY)\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# - Try to find Iconv\n\n# Once done this will define\n\n#\n\n#  ICONV_FOUND - system has Iconv\n\n#  ICONV_INCLUDE_DIRS - the Iconv include directory\n\n#  ICONV_LIBRARIES - Link these to use Iconv\n\n#  ICONV_DEFINITIONS - Compiler switches required for using Iconv\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/modules/FindLame.cmake" : {
      "ObjectId" : "84198efa638ff615212b641257596865f73118a9",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find lame\n\n# Once done this will define\n\n#\n\n#  LAME_FOUND - system has LAME\n\n#  LAME_INCLUDE_DIRS - the LAME include directory\n\n#  LAME_LIBRARIES - Link these to use LAME\n\n#  LAME_DEFINITIONS - Compiler switches required for using LAME\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindLiblo.cmake" : {
      "ObjectId" : "1051184b81b1818c6cd023c633645145555bac0f",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find liblo\n\n# Once done this will define\n\n#\n\n#  LIBLO_FOUND - system has Liblo\n\n#  LIBLO_INCLUDE_DIRS - the Liblo include directory\n\n#  LIBLO_LIBRARIES - Link these to use Liblo\n\n#  LIBLO_DEFINITIONS - Compiler switches required for using Liblo\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindLibogg.cmake" : {
      "ObjectId" : "24a2d82d61799bdecced1606eda71a218cacb97d",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libogg\n\n# Once done this will define\n\n#\n\n#  LIBOGG_FOUND - system has libogg\n\n#  LIBOGG_INCLUDE_DIRS - the libogg include directory\n\n#  LIBOGG_LIBRARIES - Link these to use libogg\n\n#  LIBOGG_DEFINITIONS - Compiler switches required for using libogg\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindLibvorbis.cmake" : {
      "ObjectId" : "f42d60252fe4f3326183742c89a78c60b8be817e",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libvorbis\n\n# Once done this will define\n\n#\n\n#  LIBVORBIS_FOUND - system has libvorbis\n\n#  LIBVORBIS_INCLUDE_DIRS - the libvorbis include directory\n\n#  LIBVORBIS_LIBRARIES - Link these to use libvorbis\n\n#  LIBVORBIS_DEFINITIONS - Compiler switches required for using libvorbis\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindMpg123.cmake" : {
      "ObjectId" : "f7016f5e0b81830437c3c4bb59381dcd47e2f70c",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find mpg123\n\n# Once done this will define\n\n#\n\n#  MPG123_FOUND - system has MPG123\n\n#  MPG123_INCLUDE_DIRS - the MPG123 include directory\n\n#  MPG123_LIBRARIES - Link these to use MPG123\n\n#  MPG123_DEFINITIONS - Compiler switches required for using MPG123\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindPortaudio.cmake" : {
      "ObjectId" : "705df49b506ef11eeec21fb047fc804ac0b3e355",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Portaudio\n\n# Once done this will define\n\n#\n\n#  PORTAUDIO_FOUND - system has Portaudio\n\n#  PORTAUDIO_INCLUDE_DIRS - the Portaudio include directory\n\n#  PORTAUDIO_LIBRARIES - Link these to use Portaudio\n\n#  PORTAUDIO_DEFINITIONS - Compiler switches required for using Portaudio\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindPortmidi.cmake" : {
      "ObjectId" : "134e08b013aded25786e75c62bf88407d1c69817",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Portmidi\n\n# Once done this will define\n\n#\n\n#  PORTMIDI_FOUND - system has Portmidi\n\n#  PORTMIDI_INCLUDE_DIRS - the Portmidi include directory\n\n#  PORTMIDI_LIBRARIES - Link these to use Portmidi\n\n#  PORTMIDI_DEFINITIONS - Compiler switches required for using Portmidi\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindPthreads.cmake" : {
      "ObjectId" : "0685f28f7f203dc5b3266363685d47840fc2d5cf",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the Pthreads library\n\n# This module searches for the Pthreads library (including the\n\n# pthreads-win32 port).\n\n#\n\n# This module defines these variables:\n\n#\n\n#  PTHREADS_FOUND\n\n#      True if the Pthreads library was found\n\n#  PTHREADS_INCLUDE_DIRS\n\n#      The include directory of the Pthreads library\n\n#  PTHREADS_LIBRARIES\n\n#      The location of the Pthreads library\n\n#  PTHREADS_DEFINITIONS\n\n#      Preprocessor definitions to define (HAVE_PTHREAD_H is a fairly common\n\n#      one)\n\n#\n\n# This module responds to the PTHREADS_EXCEPTION_SCHEME\n\n# variable on Win32 to allow the user to control the\n\n# library linked against.  The Pthreads-win32 port\n\n# provides the ability to link against a version of the\n\n# library with exception handling.  IT IS NOT RECOMMENDED\n\n# THAT YOU CHANGE PTHREADS_EXCEPTION_SCHEME TO ANYTHING OTHER THAN\n\n# \"C\" because most POSIX thread implementations do not support stack\n\n# unwinding.\n\n#\n\n#  PTHREADS_EXCEPTION_SCHEME\n\n#      C  = no exceptions (default)\n\n#         (NOTE: This is the default scheme on most POSIX thread\n\n#          implementations and what you should probably be using)\n\n#      CE = C++ Exception Handling\n\n#      SE = Structure Exception Handling (MSVC only)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Define a default exception scheme to link against\n\n# and validate user choice.\n\n#\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Assign default if needed\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Validate\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#\n\n# Find the header file\n\n#\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Find the library\n\n#\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Unix / Cygwin / Apple / Etc.\n",
        "Line" : 86,
        "CharPositionInLine" : 11
      },
      "7" : {
        "Text" : "# MARK_AS_ADVANCED(PTHREADS_INCLUDE_DIR)\n\n# MARK_AS_ADVANCED(PTHREADS_LIBRARY)\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/modules/FindSndfile.cmake" : {
      "ObjectId" : "254c5afb6dc4ad8b3fb1d90a34b0d41d8d51d414",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Sndfile\n\n# Once done this will define\n\n#\n\n#  SNDFILE_FOUND - system has Sndfile\n\n#  SNDFILE_INCLUDE_DIRS - the Sndfile include directory\n\n#  SNDFILE_LIBRARIES - Link these to use Sndfile\n\n#  SNDFILE_DEFINITIONS - Compiler switches required for using Sndfile\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FixOSXLionPaths.cmake" : {
      "ObjectId" : "f1886beb6542ac06c1afc733252c16c5fe3efbc3",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - See that /Developer/SDKs are present\n\n# If not, ask user to symlink.\n\n# Defines FIX_OSX_LION_PATHS_SYMLINKED\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/InstallDist.cmake" : {
      "ObjectId" : "a642ec3698def3b595d2617e450a6f0ff9dbf85f",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Install dist if not present\n\n# Works on unix only, sudo rights needed\n\n#\n\n# Warning:\n\n#   This module runs a script fetched over HTTP\n\n#   Do NOT change it if you are not sure what you are doing\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/Profiling.cmake" : {
      "ObjectId" : "b79ba106413bef720ba7db274110afefa9e20b3f",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Add appropriate definitions if PROFILING is set\n\n# Once done defins PROFILING_INCLUDED\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/scripts/components.cmake" : {
      "ObjectId" : "d0cbf5d12fb21811c31af1ae99dac913995c7db0",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include to define the components of the audio engine\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# predicate_file_exists(gtest_exists\n\n#   \"external/gtest/result/include/gtest/gtest.h\"\n\n#   )\n\n# add_standard_component(COMPONENTS Gtest\n\n#   gtest_exists\n\n#   ${AUDIO_ENGINE_SYSTEM_NAME}\n\n#   )\n\n# \n\n# predicate_file_exists(icu_exists\n\n#   \"external/icu2/result/include/unicode/uchar.h\"\n\n#   )\n\n# add_standard_component(COMPONENTS ICU\n\n#   icu_exists\n\n#   ${AUDIO_ENGINE_SYSTEM_NAME}\n\n#   )\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/scripts/components_clean.cmake" : {
      "ObjectId" : "10663d74ec902c0f660abe98800923b67f00c208",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/scripts/components_print.cmake" : {
      "ObjectId" : "e7eb76add89cdf90085d77babbe2ae1c545115d1",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/scripts/components_resolve.cmake" : {
      "ObjectId" : "74fa88be699e58152df0c320d6b2f97f7e79e4e3",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(COMPONENTS_RESOLVED True \n\n#  CACHE BOOL \"The components has been resolved\")\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doc/Makefile" : {
      "ObjectId" : "34237bd393703d451fe9b00561cec4c393857e3b",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# all : html\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# \n\n# pdf:\n\n# \tmkdir -p build/book; \\\n# \tpandoc -S --table-of-contents -o \"build/book/Audio Engine.pdf\" \\\n# \t\tIntroduction.md \\\n# \t\tOverview.md \\\n# \t\tSessions\\ and\\ devices.md \\\n# \t\tSignals\\ and\\ processors.md \\\n# \t\tScheduling.md \\\n# \t\tBuild\\ and\\ install.md;\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "doc/graphs/Makefile" : {
      "ObjectId" : "8034347be4f044328acd8aa675fcb9e4af64620c",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "doc/plots/Makefile" : {
      "ObjectId" : "73432d7ba0fc41d8ce884d7668e8c11f84faa225",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "external/CMakeLists.txt" : {
      "ObjectId" : "0c81f3d67a968f37952d329dc6948851b6334dbc",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Nothing to do\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "external/liblo/source/Makefile.am" : {
      "ObjectId" : "7108987f9236ef4e650486861ba4a6b74a6717ef",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "external/liblo/source/build/Makefile.am" : {
      "ObjectId" : "1b2b9070118a65670f9aa1000c3c73836e7e1f98",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "external/liblo/source/doc/Makefile.am" : {
      "ObjectId" : "4fa11ccdfec9da210e6cb7dc7e112d2960834375",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "external/liblo/source/doc/latex/Makefile" : {
      "ObjectId" : "8cc3866f4a039e77b793bd33774ce84e52a9ae16",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "external/liblo/source/examples/Makefile.am" : {
      "ObjectId" : "984961cdbf2a765b21ebb46807681ac25f0f6b67",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Example servers depends on threads, so skip it if threads are\n\n# disabled.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "external/liblo/source/lo/Makefile.am" : {
      "ObjectId" : "3d1280c0c581186f95189e1426c313f187412cdb",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "external/liblo/source/src/Makefile.am" : {
      "ObjectId" : "d84818e90ba308c2a8163388638ced04b9128d24",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Test programs depend on server threads, so skip them if threads are\n\n# disabled.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "external/liblo/source/src/tools/Makefile.am" : {
      "ObjectId" : "ab3b1d75330ef03358ee7fef62bcd21b20bf27d1",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "modules/Makefile" : {
      "ObjectId" : "a532f6f832a1251149ae44fc68a9f8c2d5521ee6",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# perl -i -pe 's/A/B/g' bindings/lisp/fa.lisp\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "shared/CMakeLists.txt" : {
      "ObjectId" : "76d388ce0ca3784ea789461a72bef418dff0e011",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Uses EXTS, APPLE and MSYS + options\n\n# Sets MAIN_LIBRARY\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To update, use\n\n#  find src -name '*'\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# atomic/stack.c\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# plot/gnuplot.c\n\n# plot.c\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# ../platform/macosx/fae/system/event.c\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "47d67dc199415d81b8fc1ef6397b107954770a04",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Uses EXTS, APPLE and MSYS + options and MAIN_LIBRARY\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add_custom_command(OUTPUT ${CMAKE_BINARY_DIR}/all_tests.c)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/CMakeLists.txt" : {
      "ObjectId" : "4048cddada9f8e2f50e18db3c2e6682f0c496751",
      "LastModified" : "2017-11-25T19:16:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Uses EXTS, APPLE and MSYS + options and MAIN_LIBRARY\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 32,
    "MAKEFILE" : 5,
    "AUTOMAKE" : 7
  },
  "ElapsedTime" : 3441
}