{
  "Repository" : "15484187",
  "Revision" : "HEAD",
  "ObjectId" : "9b5b42b1b118136cd9362132622053ec9e223c76",
  "CommitTime" : "2018-03-05T14:52:59Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "bfa48eeb0fef6ac33bc6653646c52d5ec91501a0",
      "LastModified" : "2018-03-04T17:42:17Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# run git submodule magic if somebody is antsy and doesn't type the magic incantation before typing make\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "build/iOS.cmake" : {
      "ObjectId" : "5fe64190b7504a1bdfb884b4a973a5808582c6a8",
      "LastModified" : "2018-03-04T17:42:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is based off of the Platform/Darwin.cmake and Platform/UnixPaths.cmake\n\n# files which are included with CMake 2.8.4\n\n# It has been altered for iOS development\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Options:\n\n#\n\n# IOS_PLATFORM = OS (default) or SIMULATOR or SIMULATOR64\n\n#   This decides if SDKS will be selected from the iPhoneOS.platform or iPhoneSimulator.platform folders\n\n#   OS - the default, used to build for iPhone and iPad physical devices, which have an arm arch.\n\n#   SIMULATOR - used to build for the Simulator platforms, which have an x86 arch.\n\n#\n\n# CMAKE_IOS_DEVELOPER_ROOT = automatic(default) or /path/to/platform/Developer folder\n\n#   By default this location is automatcially chosen based on the IOS_PLATFORM value above.\n\n#   If set manually, it will override the default location and force the user of a particular Developer Platform\n\n#\n\n# CMAKE_IOS_SDK_ROOT = automatic(default) or /path/to/platform/Developer/SDKs/SDK folder\n\n#   By default this location is automatcially chosen based on the CMAKE_IOS_DEVELOPER_ROOT value.\n\n#   In this case it will always be the most up-to-date SDK found in the CMAKE_IOS_DEVELOPER_ROOT path.\n\n#   If set manually, this will force the use of a specific SDK version\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Macros:\n\n#\n\n# set_xcode_property (TARGET XCODE_PROPERTY XCODE_VALUE)\n\n#  A convenience macro for setting xcode specific properties on targets\n\n#  example: set_xcode_property (myioslib IPHONEOS_DEPLOYMENT_TARGET \"3.1\")\n\n#\n\n# find_host_package (PROGRAM ARGS)\n\n#  A macro used to find executable programs on the host system, not within the iOS environment.\n\n#  Thanks to the android-cmake project for providing the command\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Standard settings\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Required as of cmake 2.8.10\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Determine the cmake host system version so we know where to find the iOS SDKs\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Force the compilers to gcc for iOS\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Skip the platform compiler checks for cross compiling\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# All iOS/Darwin specific settings - some may be redundant\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Hidden visibilty is required for cxx on iOS \n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# hack: if a new cmake (which uses CMAKE_INSTALL_NAME_TOOL) runs on an old build tree\n\n# (where install_name_tool was hardcoded) and where CMAKE_INSTALL_NAME_TOOL isn't in the cache\n\n# and still cmake didn't fail in CMakeFindBinUtils.cmake (because it isn't rerun)\n\n# hardcode CMAKE_INSTALL_NAME_TOOL here to install_name_tool, so it behaves as it did before, Alex\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Setup iOS platform unless specified manually with IOS_PLATFORM\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Setup building for arm64 or not\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Check the platform selection and setup for developer root\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This causes the installers to properly locate the output libraries\n",
        "Line" : 109,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# This causes the installers to properly locate the output libraries\n",
        "Line" : 115,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# This causes the installers to properly locate the output libraries\n",
        "Line" : 121,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# Setup iOS developer location unless specified manually with CMAKE_IOS_DEVELOPER_ROOT\n\n# Note Xcode 4.3 changed the installation location, choose the most recent one available\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Find and use the most recent iOS sdk unless specified manually with CMAKE_IOS_SDK_ROOT\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Set the sysroot default to the most recent SDK\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# set the architecture for iOS \n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# XXX(toshok) armv7s arm64\n",
        "Line" : 160,
        "CharPositionInLine" : 25
      },
      "22" : {
        "Text" : "#set (CMAKE_OSX_ARCHITECTURES ${IOS_ARCH} CACHE string  \"Build architecture for iOS\")\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Set the find root to the iOS developer roots and to user defined paths\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# default to searching for frameworks first\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# set up the default search directories for frameworks\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# only search the iOS sdks, not the remainder of the host filesystem\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# This little macro lets you set any XCode specific property\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# This macro lets you find executable programs on the host system\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "ejs-llvm/Makefile" : {
      "ObjectId" : "783ecb3a97d8bfa7559895f6b23a3ed9dfdf8527",
      "LastModified" : "2018-03-04T17:42:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "external-deps/Makefile" : {
      "ObjectId" : "d000d853f209dca348df61ed0f2dbf27ff3b8e6f",
      "LastModified" : "2018-03-04T17:42:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "lib/Makefile" : {
      "ObjectId" : "9a0784257fbb647c037fdec98504b8b111e271e2",
      "LastModified" : "2018-03-04T17:42:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "node-compat/Makefile" : {
      "ObjectId" : "d20315a1b6e3b5ff9b5709069026c615c726c2dc",
      "LastModified" : "2018-03-04T17:42:17Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#ejs-init.o.linux: ejs-atoms-gen.c\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ejs-init.o.osx ejs-init.o.sim ejs-init.o.armv7 ejs-init.o.armv7s: ejs-atoms-gen.c\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#XXX(toshok) this doesn't work for osx where we want to install multiple libraries to different archlibdirs...\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "node-llvm/Makefile" : {
      "ObjectId" : "5e51ac537798ddf90c28f3b0472cb1c854cd8206",
      "LastModified" : "2018-03-04T17:42:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "packaging/Makefile" : {
      "ObjectId" : "6afd914d0d7454723f866214658631e2d6ba09fb",
      "LastModified" : "2018-03-04T17:42:17Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#INSTALLKBYTES:=$(shell du -sk $(DIST_ROOT) | cut -f 1)\n\n#NUMFILES=$(shell find $(DIST_ROOT) | wc -l)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# arg1 = input directory\n\n# arg2 = output path\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# arg1 = input directory\n\n# arg2 = output path\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# arg1 = packagename-version\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# gross, but for now strip the .a's we've installed so that we aren't passing debug/local symbols around...\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "release/Makefile" : {
      "ObjectId" : "8b02c9c8b85ed6a6e574d23cc1c9372f382d4419",
      "LastModified" : "2018-03-04T17:42:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "runtime/Makefile" : {
      "ObjectId" : "9a5e686b52a117fb8d4eb4c0a9d580fb518dd466",
      "LastModified" : "2018-03-04T17:42:17Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# pretty terrible.. ubuntu 12.04 (travis-ci uses it) doesn't have a libuv that I can find, not even in ppas,\n\n# so we need an escape hatch.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#XXX(toshok) same as node-compat's Makefile - we need to install all targets to their respective archlibdirs\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "samples/Makefile" : {
      "ObjectId" : "8b41517018910488940ccc1365aac69b8ac6be1f",
      "LastModified" : "2018-03-04T17:42:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "samples/fetch/Makefile" : {
      "ObjectId" : "ddcc205b6d159ff4979265d36cc51e6b3ac1fca1",
      "LastModified" : "2018-03-04T17:42:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/Makefile" : {
      "ObjectId" : "325cefca040e0e2d76c8856c989516d5b096546b",
      "LastModified" : "2018-03-04T17:42:17Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# ignore all errors during test compilation/run so we always get a full run.\n",
        "Line" : 5,
        "CharPositionInLine" : 9
      },
      "CommentCount" : 1
    },
    "test/ios-test-es6/Makefile" : {
      "ObjectId" : "6a7099aae71661cc9332dfd53c7aed1b92abe536",
      "LastModified" : "2018-03-04T17:42:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/mozilla-tests/Makefile" : {
      "ObjectId" : "21cfc6f423fb1f78fc286bc8b476302d50974b00",
      "LastModified" : "2018-03-04T17:42:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/osx-test/Makefile" : {
      "ObjectId" : "3e8d9032b51581e7f894c70cb43e25059c680572",
      "LastModified" : "2018-03-04T17:42:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/require-test/Makefile" : {
      "ObjectId" : "b9a96d59c9bac12b4826a93ad51054cf2933f92f",
      "LastModified" : "2018-03-04T17:42:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/v8/Makefile" : {
      "ObjectId" : "de1534e7c81172dfddbc60e3d51c3ead46c9b15c",
      "LastModified" : "2018-03-04T17:42:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 1,
    "MAKEFILE" : 17
  },
  "ElapsedTime" : 1235
}