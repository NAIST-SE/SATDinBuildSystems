{
  "Repository" : "56897107",
  "Revision" : "HEAD",
  "ObjectId" : "25b315c07f01d05d6e0a2e67a0745808f91604f2",
  "CommitTime" : "2018-12-03T16:56:07Z",
  "Files" : {
    "podium-common/pom.xml" : {
      "ObjectId" : "009f26b1915bee109c08f87fc0bb3963c7618b0f",
      "LastModified" : "2018-12-03T16:30:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Discovery client ",
        "Line" : 112,
        "CharPositionInLine" : 34
      },
      "1" : {
        "Text" : " Metrics ",
        "Line" : 118,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : " Spectator ",
        "Line" : 190,
        "CharPositionInLine" : 27
      },
      "3" : {
        "Text" : " Hazelcast ",
        "Line" : 196,
        "CharPositionInLine" : 27
      },
      "4" : {
        "Text" : " Liquibase ",
        "Line" : 212,
        "CharPositionInLine" : 27
      },
      "5" : {
        "Text" : " Jackson ",
        "Line" : 224,
        "CharPositionInLine" : 25
      },
      "6" : {
        "Text" : " Thymeleaf ",
        "Line" : 255,
        "CharPositionInLine" : 27
      },
      "7" : {
        "Text" : " Logstash ",
        "Line" : 261,
        "CharPositionInLine" : 26
      },
      "8" : {
        "Text" : " Mapstruct ",
        "Line" : 286,
        "CharPositionInLine" : 27
      },
      "9" : {
        "Text" : " Lombok ",
        "Line" : 298,
        "CharPositionInLine" : 24
      },
      "10" : {
        "Text" : " Springfox / Swagger ",
        "Line" : 305,
        "CharPositionInLine" : 37
      },
      "11" : {
        "Text" : " JHipster ",
        "Line" : 323,
        "CharPositionInLine" : 26
      },
      "CommentCount" : 12
    },
    "podium-gateway/pom.xml" : {
      "ObjectId" : "61b3d6abc5bcbadb5d8bb8c94ca9d15973f173dc",
      "LastModified" : "2018-12-03T16:30:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n  ~ Copyright (c) 2017. The Hyve and respective contributors\n  ~\n  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n  ~ you may not use this file except in compliance with the License.\n  ~\n  ~ See the file LICENSE in the root of this repository.\n  ~\n  ",
        "Line" : 10,
        "CharPositionInLine" : 6
      },
      "1" : {
        "Text" : " DataStax driver ",
        "Line" : 26,
        "CharPositionInLine" : 33
      },
      "2" : {
        "Text" : " parent POM declares this dependency in default (compile) scope ",
        "Line" : 89,
        "CharPositionInLine" : 84
      },
      "3" : {
        "Text" : " netty's native is pulled, but is useless unless you explicitly add the native binary dependency.\n                 Having it in the classpath without the binary can cause warnings ",
        "Line" : 401,
        "CharPositionInLine" : 86
      },
      "4" : {
        "Text" : " Spring Cloud ",
        "Line" : 413,
        "CharPositionInLine" : 30
      },
      "5" : {
        "Text" : " security ",
        "Line" : 422,
        "CharPositionInLine" : 26
      },
      "6" : {
        "Text" : "\n                    This plugin's configuration is used to store Eclipse m2e settings only.\n                    It has no influence on the Maven build itself.\n                    Remove when the m2e plugin can correctly bind to Maven lifecycle\n                ",
        "Line" : 456,
        "CharPositionInLine" : 20
      },
      "7" : {
        "Text" : " This will run multiple simulations one by one. Useful when doing gatling tests in CI\n                         You must remove the simulationClass property in order to run multiple simulations ",
        "Line" : 546,
        "CharPositionInLine" : 111
      },
      "8" : {
        "Text" : "<runMultipleSimulations>true</runMultipleSimulations>",
        "Line" : 547,
        "CharPositionInLine" : 81
      },
      "9" : {
        "Text" : " This will force Gatling to ask which simulation to run\n                      This is useful when you have multiple simulations ",
        "Line" : 549,
        "CharPositionInLine" : 76
      },
      "10" : {
        "Text" : " Force alphabetical order to have a reproducible build ",
        "Line" : 644,
        "CharPositionInLine" : 83
      },
      "11" : {
        "Text" : " Sets the path to the file which contains the execution data. ",
        "Line" : 659,
        "CharPositionInLine" : 98
      },
      "12" : {
        "Text" : " Ensures that the code coverage report for unit tests is created after unit tests have been run ",
        "Line" : 663,
        "CharPositionInLine" : 124
      },
      "13" : {
        "Text" : "\n                    Enable the line below to have remote debugging of your application on port 5005\n                    <jvmArguments>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005</jvmArguments>\n                    ",
        "Line" : 730,
        "CharPositionInLine" : 24
      },
      "14" : {
        "Text" : " log configuration ",
        "Line" : 808,
        "CharPositionInLine" : 43
      },
      "15" : {
        "Text" : " default Spring profiles ",
        "Line" : 810,
        "CharPositionInLine" : 49
      },
      "16" : {
        "Text" : " log configuration ",
        "Line" : 911,
        "CharPositionInLine" : 43
      },
      "17" : {
        "Text" : " default Spring profiles ",
        "Line" : 913,
        "CharPositionInLine" : 49
      },
      "18" : {
        "Text" : "\n                Profile for doing \"continuous compilation\" with the Scala Maven plugin.\n                It allows automatic compilation of Java classes as soon as they are saved.\n                To use it, run in 3 terminals:\n                - './mvnw -Pcc scala:cc' for continous compilation of your classes\n                - './mvnw -Pcc' for hot reload of Spring boot\n                - 'gulp' for hot reload of the HTML/JavaScript assets\n                Everything should hot reload automatically!\n            ",
        "Line" : 932,
        "CharPositionInLine" : 16
      },
      "19" : {
        "Text" : "\n                            Enable the line below to have remote debugging of your application on port 5005\n                            <jvmArguments>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005</jvmArguments>\n                            ",
        "Line" : 995,
        "CharPositionInLine" : 32
      },
      "20" : {
        "Text" : " log configuration ",
        "Line" : 1001,
        "CharPositionInLine" : 43
      },
      "21" : {
        "Text" : " default Spring profiles ",
        "Line" : 1003,
        "CharPositionInLine" : 49
      },
      "22" : {
        "Text" : "\n                Profile for monitoring the application with Graphite.\n            ",
        "Line" : 1022,
        "CharPositionInLine" : 16
      },
      "23" : {
        "Text" : "\n                Profile for monitoring the application with Prometheus.\n            ",
        "Line" : 1034,
        "CharPositionInLine" : 16
      },
      "24" : {
        "Text" : "\n                Profile for applying IDE-specific configuration.\n                At the moment it only configures MapStruct, which you need when working\n                with DTOs.\n            ",
        "Line" : 1059,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 25
    },
    "podium-uaa/pom.xml" : {
      "ObjectId" : "d705238f35c2fa20ad1a59ff6fdb2238fc95abf2",
      "LastModified" : "2018-12-03T16:30:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n  ~ Copyright (c) 2017. The Hyve and respective contributors\n  ~\n  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n  ~ you may not use this file except in compliance with the License.\n  ~\n  ~ See the file LICENSE in the root of this repository.\n  ~\n  ",
        "Line" : 10,
        "CharPositionInLine" : 6
      },
      "1" : {
        "Text" : " parent POM declares this dependency in default (compile) scope ",
        "Line" : 68,
        "CharPositionInLine" : 84
      },
      "2" : {
        "Text" : " Spring Cloud ",
        "Line" : 328,
        "CharPositionInLine" : 30
      },
      "3" : {
        "Text" : " netty's native is pulled, but is useless unless you explicitly add the native binary dependency.\n                 Having it in the classpath without the binary can cause warnings ",
        "Line" : 353,
        "CharPositionInLine" : 86
      },
      "4" : {
        "Text" : " security ",
        "Line" : 369,
        "CharPositionInLine" : 26
      },
      "5" : {
        "Text" : "\n                    This plugin's configuration is used to store Eclipse m2e settings only.\n                    It has no influence on the Maven build itself.\n                    Remove when the m2e plugin can correctly bind to Maven lifecycle\n                ",
        "Line" : 402,
        "CharPositionInLine" : 20
      },
      "6" : {
        "Text" : " This will run multiple simulations one by one. Useful when doing gatling tests in CI\n                         You must remove the simulationClass property in order to run multiple simulations ",
        "Line" : 478,
        "CharPositionInLine" : 111
      },
      "7" : {
        "Text" : "<runMultipleSimulations>true</runMultipleSimulations>",
        "Line" : 479,
        "CharPositionInLine" : 81
      },
      "8" : {
        "Text" : " This will force Gatling to ask which simulation to run\n                      This is useful when you have multiple simulations ",
        "Line" : 481,
        "CharPositionInLine" : 76
      },
      "9" : {
        "Text" : " Force alphabetical order to have a reproducible build ",
        "Line" : 576,
        "CharPositionInLine" : 83
      },
      "10" : {
        "Text" : " Sets the path to the file which contains the execution data. ",
        "Line" : 591,
        "CharPositionInLine" : 98
      },
      "11" : {
        "Text" : " Ensures that the code coverage report for unit tests is created after unit tests have been run ",
        "Line" : 595,
        "CharPositionInLine" : 124
      },
      "12" : {
        "Text" : "\n                    Enable the line below to have remote debugging of your application on port 5005\n                    <jvmArguments>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005</jvmArguments>\n                    ",
        "Line" : 662,
        "CharPositionInLine" : 24
      },
      "13" : {
        "Text" : " log configuration ",
        "Line" : 704,
        "CharPositionInLine" : 43
      },
      "14" : {
        "Text" : " default Spring profiles ",
        "Line" : 706,
        "CharPositionInLine" : 49
      },
      "15" : {
        "Text" : " log configuration ",
        "Line" : 757,
        "CharPositionInLine" : 43
      },
      "16" : {
        "Text" : " default Spring profiles ",
        "Line" : 759,
        "CharPositionInLine" : 49
      },
      "17" : {
        "Text" : "\n                Profile for doing \"continuous compilation\" with the Scala Maven plugin.\n                It allows automatic compilation of Java classes as soon as they are saved.\n                To use it, run in 3 terminals:\n                - './mvnw -Pcc scala:cc' for continous compilation of your classes\n                - './mvnw -Pcc' for hot reload of Spring boot\n                - 'gulp' for hot reload of the HTML/JavaScript assets\n                Everything should hot reload automatically!\n            ",
        "Line" : 778,
        "CharPositionInLine" : 16
      },
      "18" : {
        "Text" : "\n                            Enable the line below to have remote debugging of your application on port 5005\n                            <jvmArguments>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005</jvmArguments>\n                            ",
        "Line" : 841,
        "CharPositionInLine" : 32
      },
      "19" : {
        "Text" : " log configuration ",
        "Line" : 847,
        "CharPositionInLine" : 43
      },
      "20" : {
        "Text" : " default Spring profiles ",
        "Line" : 849,
        "CharPositionInLine" : 49
      },
      "21" : {
        "Text" : "\n                Profile for applying IDE-specific configuration.\n                At the moment it only configures MapStruct, which you need when working\n                with DTOs.\n            ",
        "Line" : 869,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 22
    },
    "pom.xml" : {
      "ObjectId" : "512de9f09b6947a954e4b375746cc9a5474e90ef",
      "LastModified" : "2018-12-03T16:30:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n  ~ Copyright (c) 2017  The Hyve and respective contributors.\n  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n  ~ you may not use this file except in compliance with the License.\n  ~ See the file LICENSE in the root of this repository.\n  ",
        "Line" : 7,
        "CharPositionInLine" : 6
      },
      "1" : {
        "Text" : " These remain empty unless the corresponding profile is active ",
        "Line" : 81,
        "CharPositionInLine" : 79
      },
      "2" : {
        "Text" : " Sonar properties ",
        "Line" : 84,
        "CharPositionInLine" : 34
      },
      "3" : {
        "Text" : " Rule https://sonarqube.com/coding_rules#rule_key=Web%3ABoldAndItalicTagsCheck is ignored. Even if we agree that using the \"i\" tag is an awful practice, this is what is recommended by http://fontawesome.io/examples/ ",
        "Line" : 96,
        "CharPositionInLine" : 232
      },
      "4" : {
        "Text" : " Rule https://sonarqube.com/coding_rules#rule_key=squid%3AS3437 is ignored, as a JPA-managed field cannot be transient ",
        "Line" : 99,
        "CharPositionInLine" : 135
      },
      "5" : {
        "Text" : " Rule http://sonarqube.com/coding_rules#rule_key=squid%3AUndocumentedApi is ignored, as we want to follow \"clean code\" guidelines and classes, methods and arguments names should be self-explanatory ",
        "Line" : 102,
        "CharPositionInLine" : 214
      },
      "6" : {
        "Text" : " For Sonar < 6.2 ",
        "Line" : 111,
        "CharPositionInLine" : 33
      },
      "7" : {
        "Text" : " For Sonar >= 6.2 ",
        "Line" : 113,
        "CharPositionInLine" : 34
      },
      "8" : {
        "Text" : " Spring properties ",
        "Line" : 122,
        "CharPositionInLine" : 35
      },
      "CommentCount" : 9
    }
  },
  "FileTypes" : {
    "MAVEN" : 4
  },
  "ElapsedTime" : 1125
}