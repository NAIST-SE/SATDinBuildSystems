{
  "Repository" : "643882",
  "Revision" : "HEAD",
  "ObjectId" : "ab1d3aac891c9fc4e218609043de529c3fd3a64e",
  "CommitTime" : "2019-03-23T17:26:14Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "be0965debd011acb832301abbb550c90cef40d4d",
      "LastModified" : "2019-01-30T19:32:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set DAGMC version\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make the scripts in the \"cmake\" directory available to CMake\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Makefile" : {
      "ObjectId" : "2c32f96de43b21a506380dee5ca31392de11cc4d",
      "LastModified" : "2019-03-21T15:21:15Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Top-level directory of all the ReST source files\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Repository branch that contains the source\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Repository branch that contains the rendered HTML\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Repository that contains the rendered HTML\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Directory that contains the rendered HTML\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Sphinx executable\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Sphinx options\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/DAGMC_macros.cmake" : {
      "ObjectId" : "7d546802e0f0aac7b6c54997c52934a0c5a58c40",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# All DAGMC libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Default to a release build\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Installation directories\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Get some environment variables\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Figure out what LINK_LIBS_SHARED and LINK_LIBS_STATIC should be based on the\n\n# values of LINK_LIBS and LINK_LIBS_EXTERN_NAMES\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Setup the configuration file and install\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# To use the dagmc_install macros, the following lists must be defined:\n\n#   SRC_FILES: source files\n\n#   PUB_HEADERS: public header files\n\n#   LINK_LIBS: e.g. dagmc, pyne_dagmc, uwuw, lapack, gfortran\n\n#   LINK_LIBS_EXTERN_NAMES: e.g. MOAB_LIBRARIES\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Install a library in both shared and static mode\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Keep a list of all libraries being installed\n",
        "Line" : 224,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Install an executable\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Install a unit test\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Install a file needed for unit testing\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "cmake/FindDAGMC.cmake" : {
      "ObjectId" : "44ad23475e48871bbc7972288b4178586bbf68c3",
      "LastModified" : "2018-10-29T03:06:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find DAGMC\n\n#\n\n# Once done this will define\n\n#\n\n#  DAGMC_FOUND        - indicates that the package has been found by CMake\n\n#  DAGMC_INCLUDE_DIRS - include directories for installed DAGMC headers\n\n#  DAGMC_LIBRARY_DIRS - location of installed DAGMC libraries\n\n#  DAGMC_LIBRARIES    - set of libraries installed with DAGMC, use to link applications against DAGMC\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindFluka.cmake" : {
      "ObjectId" : "472877cd2c8bc9ff45f0a3307967733f0d2937e1",
      "LastModified" : "2018-10-29T03:06:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindGeant4.cmake" : {
      "ObjectId" : "8816ad46e0eead5624854cfd171cb189f7ec7eed",
      "LastModified" : "2018-11-22T18:35:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Geant4 cmake config file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Activate all available UI and Vis drivers by default\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get Geant4 include directories and libraries\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Get Geant4 compile definitions and flags\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/FindMOAB.cmake" : {
      "ObjectId" : "6edbd9304c748661c03f407f56201fc48505dbe9",
      "LastModified" : "2019-03-20T11:52:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find MOAB cmake config file\n\n# Only used to determine the location of the HDF5 with which MOAB was built\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find HDF5\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CMake doesn't let you find_package(HDF5) twice so we have to do this instead\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find MOAB library (shared)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find MOAB library (static)\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/test_config/CMakeLists.txt" : {
      "ObjectId" : "06f17a51560895d9d7bff8a4571e527a5ed12473",
      "LastModified" : "2018-10-29T03:06:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/test_config/FindDAGMC.cmake" : {
      "ObjectId" : "4dcb04bc14ba1212178a8bdf0717d8226eee04e1",
      "LastModified" : "2018-10-29T03:06:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "8ad0445a2284d4a301eb8dad2eca22d6aff2114b",
      "LastModified" : "2018-10-29T03:06:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Gtest\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Required libraries\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# UWUW\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# dagtally library (required for DAG-MCNP and CI)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tools\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Physics code interfaces\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/build_obb/CMakeLists.txt" : {
      "ObjectId" : "b084295bfb9ce02ad41b7370d687b040cbac7d7c",
      "LastModified" : "2018-10-29T03:06:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/dagmc/CMakeLists.txt" : {
      "ObjectId" : "2fbc05161a06a209140b980c0587f26685010d36",
      "LastModified" : "2019-03-20T11:52:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure version header\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/dagmc/tests/CMakeLists.txt" : {
      "ObjectId" : "d8e7e2ceaba6ecdc8964c90f5c585404cbe46ec7",
      "LastModified" : "2018-10-29T03:06:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/dagmc/tools/CMakeLists.txt" : {
      "ObjectId" : "a4e7f0c421ae9b9a427110de0d1885340198dc5b",
      "LastModified" : "2018-10-29T03:06:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/fluka/CMakeLists.txt" : {
      "ObjectId" : "dca34ce84cbb81e9aed59194012bc5133ad18d0a",
      "LastModified" : "2019-03-20T11:52:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/fluka/build/CMakeLists.txt" : {
      "ObjectId" : "be1ddc5192890a61a0ecceea312501d99c02ac81",
      "LastModified" : "2018-10-29T03:06:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/fluka/tests/CMakeLists.txt" : {
      "ObjectId" : "38e1d25cd1cd38e82a0dca5697282f79addd1637",
      "LastModified" : "2019-03-20T11:52:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Note: this test is known to fail\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We use a file from the MCNP test folder, so if not building MCNP5/6 we have to install it\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/geant4/CMakeLists.txt" : {
      "ObjectId" : "e9cd118670252ecbb6d8c8e0699f2c855e51033c",
      "LastModified" : "2019-03-20T11:52:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/geant4/build/CMakeLists.txt" : {
      "ObjectId" : "fafc4e9003f3bf01d4e49558055c93a7bd9aca8d",
      "LastModified" : "2018-10-29T03:06:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/geant4/tests/CMakeLists.txt" : {
      "ObjectId" : "bcecf409f6d83c331fcbf77c76a195875ee74c15",
      "LastModified" : "2018-10-29T03:06:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/gtest/CMakeLists.txt" : {
      "ObjectId" : "03db43cffcef6824cfc1e47247663e183f93b8b6",
      "LastModified" : "2018-10-29T03:06:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Source files\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include directories\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CXX compiler flags\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Compiler directives\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build gtest internal library\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/gtest/gtest-1.7.0/CMakeLists.txt" : {
      "ObjectId" : "4560e7eb8a51c7cafe6dfe49e758838162178901",
      "LastModified" : "2018-10-29T03:06:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# Experimental CMake build script for Google Test.\n\n#\n\n# Consider this a prototype.  It will change drastically.  For now,\n\n# this is only for people on the cutting edge.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For hermetic builds, we may need to tell CMake to use compiler in a\n\n# specific location.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where gtest's .h files can be found.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Where the gtest libraries can be found.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Defines the compiler/linker flags used to build gtest.  You can\n\n# tweak these definitions to suit your need.  A variable's value is\n\n# empty before it's explicitly assigned to.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# The pthreads library is available.\n",
        "Line" : 59,
        "CharPositionInLine" : 30
      },
      "10" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# TODO(vladl@google.com): Make static/shared a user option.\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Static versions of Google Test libraries.  We build them using more\n\n# strict warnings than what are used for other targets, to ensure that\n\n# gtest can be compiled by a user aggressive about warnings.\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags lib srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given library and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given lib and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "src/make_watertight/CMakeLists.txt" : {
      "ObjectId" : "10155fd5ee3e439ce13a0230f2560963eb3043bc",
      "LastModified" : "2018-10-29T03:06:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/make_watertight/build/CMakeLists.txt" : {
      "ObjectId" : "4ddd0f4c58fe62d733b80363b7f9f621484f1299",
      "LastModified" : "2018-10-29T03:06:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/make_watertight/tests/CMakeLists.txt" : {
      "ObjectId" : "8f8481fecf9149a7ce87a22e7a15c1ddf944fe2d",
      "LastModified" : "2019-03-21T15:21:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/mcnp/CMakeLists.txt" : {
      "ObjectId" : "f872cecebfdff8eb466a47efe33c8797c0d729cd",
      "LastModified" : "2019-03-20T11:52:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Preprocessor directives needed for correct name mangling to be applied\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/mcnp/mcnp5/CMakeLists.txt" : {
      "ObjectId" : "ca13c7d2ea4f440744ea32c01263b4d9d0c24456",
      "LastModified" : "2019-03-20T11:52:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Source files\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# PyNE mesh source files\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Remove MCNP's source.F90 file\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Figure out which version of MCNP we're compiling based on which source files are present\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# These files are present in 515 but not in 514\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# These files are present in 516 but not in 515\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Optimization flags\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# C compiler flags\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#set(CMAKE_C_FLAGS \"${CMAKE_Fortran_FLAGS} -mcmodel=medium\")\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Fortran compiler flags\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#set(CMAKE_Fortran_FLAGS \"${CMAKE_Fortran_FLAGS} -mcmodel=medium\")\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Preprocessor directives\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Make sure DATAPATH is set\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# MCNP Plotter\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# OpenMP\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# MPI\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# DAGMC\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Executable\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Install\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "src/mcnp/mcnp6/CMakeLists.txt" : {
      "ObjectId" : "124bc4bc859eba66a212f23b03237e516279a188",
      "LastModified" : "2019-03-20T11:52:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Source files\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# PyNE mesh source files\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Remove MCNP's source.F90 file\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Figure out which version of MCNP we're compiling based on which source files are present\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# These files are present in 610 but not in 602\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# These files are present in 611 but not in 610\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# These files are present in 620 but not in 611\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Optimization flags\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# C compiler flags\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# CXX compiler flags\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Fortran compiler flags\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Variables in mcnp_env.F90\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Preprocessor directives\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Make sure DATAPATH is set\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# MCNP Plotter\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# OpenMP\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# MPI\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# DAGMC\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Get list of boolean compiler definitions set to ON\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Choose a number that will be greater than the number of definitions\n\n# but not too much greater, as there will be a number of blank lines\n\n# equal to the difference.\n",
        "Line" : 300,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Executable\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Install\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "src/mcnp/tests/CMakeLists.txt" : {
      "ObjectId" : "fc4a5b3779f166f7bc891089df4422c2c2952415",
      "LastModified" : "2018-10-29T03:06:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/pyne/CMakeLists.txt" : {
      "ObjectId" : "46a85d0bfc9694197106553d153277be9d70e57c",
      "LastModified" : "2019-03-20T11:52:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tally/CMakeLists.txt" : {
      "ObjectId" : "2036b7fb842c9ec00f74d39d93e59bbfc9b2bb40",
      "LastModified" : "2019-03-20T11:52:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tally/tests/CMakeLists.txt" : {
      "ObjectId" : "5c1404ca400775a03e83f6f61c2e416865834dd2",
      "LastModified" : "2018-10-29T03:06:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/uwuw/CMakeLists.txt" : {
      "ObjectId" : "3901e920c2c7aa7cfb33a165ac3949ed8d2e875b",
      "LastModified" : "2019-03-20T11:52:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/uwuw/build/CMakeLists.txt" : {
      "ObjectId" : "78ca520dbf989bc5111bcff924a526c068f03cf3",
      "LastModified" : "2018-10-29T03:06:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/uwuw/tests/CMakeLists.txt" : {
      "ObjectId" : "538c96983cc278bfd0903df7d3f07a657bf62e1b",
      "LastModified" : "2018-10-29T03:06:08Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 34,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1574
}