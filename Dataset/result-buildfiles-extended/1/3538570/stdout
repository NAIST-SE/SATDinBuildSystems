{
  "Repository" : "3538570",
  "Revision" : "HEAD",
  "ObjectId" : "0ffceb9cafba9d4efae3f264f3ce059daf136af7",
  "CommitTime" : "2018-09-04T14:11:41Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "f67315dde7a007a7c2a0d969e8268d7a9569412c",
      "LastModified" : "2013-08-30T07:56:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Makefile" : {
      "ObjectId" : "436ca6ac244a1ac3dd9694ee8af71c621fce7091",
      "LastModified" : "2012-09-28T07:35:49Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "lib/orogen/templates/CMakeLists.txt" : {
      "ObjectId" : "dcbe61b6f3affe9b8958d19e6a92092c22c8d1d7",
      "LastModified" : "2015-06-16T16:05:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE(KDL)\n\n# FIND_PACKAGE(OCL)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/orogen/templates/config/Base.cmake" : {
      "ObjectId" : "6edb95acc7497afe15a83e9fe7dc018eccd5e841",
      "LastModified" : "2018-05-18T19:53:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# In Orogen project, the build target is specified at generation time\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Enable -Wall for compilers that know it\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define the necessary RPath information for all binaries. That can be stripped\n\n# later\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the build type to debug by default\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check for Doxygen and enable documentation building if available\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Start setting up the build itself\n\n#\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# First, we need the Orocos::RTT, and optionally the CORBA part\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add generic include directories\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Take care of the typekit\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# For backward compatibility\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Take care of the task library\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Finally, add deployment code\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Install typelib and/or Roby plugins\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "lib/orogen/templates/config/Deployment.cmake" : {
      "ObjectId" : "3dc2b07030297a1537c31b0e500f7e72bb298ca1",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Task files could be using headers in tasks/ so add the relevant directory in\n\n# our include path\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Link directories need to be set before(!) providing the target\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "lib/orogen/templates/config/FindBoost.cmake" : {
      "ObjectId" : "67637bf46a4a82a9820a29fe3be5caf8881d9580",
      "LastModified" : "2012-09-28T07:35:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Boost include dirs and libraries\n\n# Usage of this module as follows:\n\n#\n\n# NOTE: Take note of the Boost_ADDITIONAL_VERSIONS variable below.\n\n# Due to Boost naming conventions and limitations in CMake this find\n\n# module is NOT future safe with respect to Boost version numbers,\n\n# and may break.\n\n#\n\n# == Using Header-Only libraries from within Boost: ==\n\n#\n\n#   find_package( Boost 1.36.0 )\n\n#   if(Boost_FOUND)\n\n#      include_directories(${Boost_INCLUDE_DIRS})\n\n#      add_executable(foo foo.cc)\n\n#   endif()\n\n#\n\n#\n\n# == Using actual libraries from within Boost: ==\n\n#\n\n#   set(Boost_USE_STATIC_LIBS   ON)\n\n#   set(Boost_USE_MULTITHREADED ON)\n\n#   find_package( Boost 1.36.0 COMPONENTS date_time filesystem system ... )\n\n#\n\n#   if(Boost_FOUND)\n\n#      include_directories(${Boost_INCLUDE_DIRS})\n\n#      add_executable(foo foo.cc)\n\n#      target_link_libraries(foo ${Boost_LIBRARIES})\n\n#   endif()\n\n#\n\n#\n\n# The components list needs to contain actual names of boost libraries only,\n\n# such as \"date_time\" for \"libboost_date_time\".  If you're using parts of\n\n# Boost that contain header files only (e.g. foreach) you do not need to\n\n# specify COMPONENTS.\n\n#\n\n# You should provide a minimum version number that should be used. If you provide this \n\n# version number and specify the REQUIRED attribute, this module will fail if it\n\n# can't find the specified or a later version. If you specify a version number this is\n\n# automatically put into the considered list of version numbers and thus doesn't need\n\n# to be specified in the Boost_ADDITIONAL_VERSIONS variable (see below).\n\n#\n\n# NOTE for Visual Studio Users:\n\n#     Automatic linking is used on MSVC & Borland compilers by default when\n\n#     #including things in Boost.  It's important to note that setting\n\n#     Boost_USE_STATIC_LIBS to OFF is NOT enough to get you dynamic linking,\n\n#     should you need this feature.  Automatic linking typically uses static\n\n#     libraries with a few exceptions (Boost.Python is one).\n\n#\n\n#     Please see the section below near Boost_LIB_DIAGNOSTIC_DEFINITIONS for\n\n#     more details.  Adding a TARGET_LINK_LIBRARIES() as shown in the example\n\n#     above appears to cause VS to link dynamically if Boost_USE_STATIC_LIBS\n\n#     gets set to OFF.  It is suggested you avoid automatic linking since it\n\n#     will make your application less portable.\n\n#\n\n# =========== The mess that is Boost_ADDITIONAL_VERSIONS (sorry?) ============\n\n#\n\n# OK, so the Boost_ADDITIONAL_VERSIONS variable can be used to specify a list of\n\n# boost version numbers that should be taken into account when searching\n\n# for Boost. Unfortunately boost puts the version number into the\n\n# actual filename for the libraries, so this variable will certainly be needed\n\n# in the future when new Boost versions are released.\n\n#\n\n# Currently this module searches for the following version numbers:\n\n# 1.33, 1.33.0, 1.33.1, 1.34, 1.34.0, 1.34.1, 1.35, 1.35.0, 1.35.1,\n\n# 1.36, 1.36.0, 1.36.1, 1.37, 1.37.0, 1.38, 1.38.0, 1.39, 1.39.0,\n\n# 1.40, 1.40.0, 1.41, 1.41.0\n\n#\n\n# NOTE: If you add a new major 1.x version in Boost_ADDITIONAL_VERSIONS you should\n\n# add both 1.x and 1.x.0 as shown above.  Official Boost include directories\n\n# omit the 3rd version number from include paths if it is 0 although not all\n\n# binary Boost releases do so.\n\n#\n\n# SET(Boost_ADDITIONAL_VERSIONS \"1.78\" \"1.78.0\" \"1.79\" \"1.79.0\")\n\n#\n\n# ===================================== ============= ========================\n\n#\n\n# Variables used by this module, they can change the default behaviour and\n\n# need to be set before calling find_package:\n\n#\n\n#   Boost_USE_MULTITHREADED      Can be set to OFF to use the non-multithreaded\n\n#                                boost libraries.  If not specified, defaults\n\n#                                to ON.\n\n#\n\n#   Boost_USE_STATIC_LIBS        Can be set to ON to force the use of the static\n\n#                                boost libraries. Defaults to OFF.\n\n#\n\n# Other Variables used by this module which you may want to set.\n\n#\n\n#   Boost_ADDITIONAL_VERSIONS    A list of version numbers to use for searching\n\n#                                the boost include directory.  Please see\n\n#                                the documentation above regarding this\n\n#                                annoying, but necessary variable :(\n\n#\n\n#   Boost_DEBUG                  Set this to TRUE to enable debugging output\n\n#                                of FindBoost.cmake if you are having problems.\n\n#                                Please enable this before filing any bug\n\n#                                reports.\n\n#\n\n#   Boost_DETAILED_FAILURE_MSG   FindBoost doesn't output detailed information\n\n#                                about why it failed or how to fix the problem\n\n#                                unless this is set to TRUE or the REQUIRED\n\n#                                keyword is specified in find_package().\n\n#                                  [Since CMake 2.8.0]\n\n# \n\n#   Boost_COMPILER               Set this to the compiler suffix used by Boost\n\n#                                (e.g. \"-gcc43\") if FindBoost has problems finding\n\n#                                the proper Boost installation\n\n#\n\n# These last three variables are available also as environment variables:\n\n#\n\n#   BOOST_ROOT or BOOSTROOT      The preferred installation prefix for searching for\n\n#                                Boost.  Set this if the module has problems finding\n\n#                                the proper Boost installation.\n\n#\n\n#   BOOST_INCLUDEDIR             Set this to the include directory of Boost, if the\n\n#                                module has problems finding the proper Boost installation\n\n#\n\n#   BOOST_LIBRARYDIR             Set this to the lib directory of Boost, if the\n\n#                                module has problems finding the proper Boost installation\n\n#\n\n# Variables defined by this module:\n\n#\n\n#   Boost_FOUND                         System has Boost, this means the include dir was\n\n#                                       found, as well as all the libraries specified in\n\n#                                       the COMPONENTS list.\n\n#\n\n#   Boost_INCLUDE_DIRS                  Boost include directories: not cached\n\n#\n\n#   Boost_INCLUDE_DIR                   This is almost the same as above, but this one is\n\n#                                       cached and may be modified by advanced users\n\n#\n\n#   Boost_LIBRARIES                     Link to these to use the Boost libraries that you\n\n#                                       specified: not cached\n\n#\n\n#   Boost_LIBRARY_DIRS                  The path to where the Boost library files are.\n\n#\n\n#   Boost_VERSION                       The version number of the boost libraries that\n\n#                                       have been found, same as in version.hpp from Boost\n\n#\n\n#   Boost_LIB_VERSION                   The version number in filename form as\n\n#                                       it's appended to the library filenames\n\n#\n\n#   Boost_MAJOR_VERSION                 major version number of boost\n\n#   Boost_MINOR_VERSION                 minor version number of boost\n\n#   Boost_SUBMINOR_VERSION              subminor version number of boost\n\n#\n\n#   Boost_LIB_DIAGNOSTIC_DEFINITIONS    [WIN32 Only] You can call\n\n#                                       add_definitions(${Boost_LIB_DIAGNOSTIC_DEFINITIONS})\n\n#                                       to have diagnostic information about Boost's\n\n#                                       automatic linking outputted during compilation time.\n\n#\n\n# For each component you specify in find_package(), the following (UPPER-CASE)\n\n# variables are set.  You can use these variables if you would like to pick and\n\n# choose components for your targets instead of just using Boost_LIBRARIES.\n\n#\n\n#   Boost_${COMPONENT}_FOUND            True IF the Boost library \"component\" was found.\n\n#\n\n#   Boost_${COMPONENT}_LIBRARY          Contains the libraries for the specified Boost\n\n#                                       \"component\" (includes debug and optimized keywords\n\n#                                       when needed).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2006-2008 Andreas Schneider <mail@cynapses.org>\n\n# Copyright 2007      Wengo\n\n# Copyright 2007      Mike Jackson\n\n# Copyright 2008      Andreas Pakulat <apaku@gmx.de>\n\n# Copyright 2008-2009 Philip Lowman <philip@yhbt.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#  FindBoost functions & macros\n\n#\n\n############################################\n\n#\n\n# Check the existence of the libraries.\n\n#\n\n############################################\n\n# This macro was taken directly from the FindQt4.cmake file that is included\n\n# with the CMake distribution. This is NOT my work. All work was done by the\n\n# original authors of the FindQt4.cmake file. Only minor modifications were\n\n# made to remove references to Qt and make this file more generally applicable\n\n# And ELSE/ENDIF pairs were removed for readability.\n\n#########################################################################\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#######################################################################\n\n# For downward compatibility with CMake 2.6.0 the VERSION_LESS\n\n# functionality is being replaced with the help of following MACRO\n\n#\n\n# Input: a_in - value, not variable\n\n#        b_in - value, not variable\n\n#        result_out - variable with value:\n\n#                         -1 : a_in <  b_in\n\n#                          0 : a_in == b_in\n\n#                          1 : a_in >  b_in\n\n#\n\n# Written by James Bigler.\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Since SEPARATE_ARGUMENTS using ' ' as the separation token,\n\n# replace '.' with ' ' to allow easy tokenization of the string.\n",
        "Line" : 208,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Check the size of each list to see if they are equal.\n",
        "Line" : 215,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Pad the shorter list with zeros.\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Note that range needs to be one less than the length as the for\n\n# loop is inclusive (silly CMake).\n",
        "Line" : 221,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# a is shorter\n",
        "Line" : 224,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# b is shorter\n",
        "Line" : 229,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# PAD out if we need to\n",
        "Line" : 235,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Since shorter is an alias for b, we need to get to it by by dereferencing shorter.\n",
        "Line" : 238,
        "CharPositionInLine" : 12
      },
      "12" : {
        "Text" : "# Only continue to compare things as long as they are equal\n",
        "Line" : 246,
        "CharPositionInLine" : 12
      },
      "13" : {
        "Text" : "# LESS\n",
        "Line" : 249,
        "CharPositionInLine" : 12
      },
      "14" : {
        "Text" : "# GREATER\n",
        "Line" : 253,
        "CharPositionInLine" : 12
      },
      "15" : {
        "Text" : "# Copy out the return result\n",
        "Line" : 260,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "######################################################################\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "######################################################################\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# if the generator supports configuration types then set\n\n# optimized and debug libraries, or if the CMAKE_BUILD_TYPE has a value\n",
        "Line" : 285,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# if there are no configuration types and CMAKE_BUILD_TYPE has no value\n\n# then just use the release libraries\n",
        "Line" : 290,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# FIXME: This probably should be set for both cases\n",
        "Line" : 294,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# if only the release version was found, set the debug variable also to the release version\n",
        "Line" : 298,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# if only the debug version was found, set the release variable also to the debug version\n",
        "Line" : 305,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Remove superfluous \"debug\" / \"optimized\" keywords from\n\n# Boost_LIBRARY_DIRS\n",
        "Line" : 315,
        "CharPositionInLine" : 6
      },
      "24" : {
        "Text" : "# Make variables changeble to the advanced user\n",
        "Line" : 328,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#\n\n# Runs compiler with \"-dumpversion\" and parses major/minor\n\n# version with a regex.\n\n#\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#\n\n# A convenience function for marking desired components\n\n# as found or not\n\n#\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#\n\n# End functions/macros\n\n#  \n\n#-------------------------------------------------------------------------------\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# The version may appear in a directory with or without the patch\n\n# level, even when the patch level is non-zero.\n",
        "Line" : 378,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# The user has not requested an exact version.  Among known\n\n# versions, find those that are acceptable to the user request.\n",
        "Line" : 384,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Select acceptable versions.\n",
        "Line" : 393,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# This version is high enough.\n",
        "Line" : 397,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# This version is a short-form for the requested version with\n\n# the patch level dropped.\n",
        "Line" : 402,
        "CharPositionInLine" : 12
      },
      "34" : {
        "Text" : "# Any version is acceptable.\n",
        "Line" : 409,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# The reason that we failed to find Boost. This will be set to a\n\n# user-friendly message when we fail to find some necessary piece of\n\n# Boost.\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# On versions < 1.35, remove the System library from the considered list\n\n# since it wasn't added until 1.35.\n",
        "Line" : 422,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# in cache already\n",
        "Line" : 444,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# Need to search for boost\n",
        "Line" : 463,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# Output some of their choices\n",
        "Line" : 467,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# In windows, automatic linking is performed, so you do not have\n\n# to specify the libraries.  If you are linking to a dynamic\n\n# runtime, then you can choose to link to either a static or a\n\n# dynamic Boost library, the default is to do a static link.  You\n\n# can alter this for a specific library \"whatever\" by defining\n\n# BOOST_WHATEVER_DYN_LINK to force Boost library \"whatever\" to be\n\n# linked dynamically.  Alternatively you can force all Boost\n\n# libraries to dynamic link by defining BOOST_ALL_DYN_LINK.\n",
        "Line" : 477,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# This feature can be disabled for Boost library \"whatever\" by\n\n# defining BOOST_WHATEVER_NO_LIB, or for all of Boost by defining\n\n# BOOST_ALL_NO_LIB.\n",
        "Line" : 486,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# If you want to observe which libraries are being linked against\n\n# then defining BOOST_LIB_DIAGNOSTIC will cause the auto-linking\n\n# code to emit a #pragma message each time a library is selected\n\n# for linking.\n",
        "Line" : 490,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# If BOOST_ROOT was defined in the environment, use it.\n",
        "Line" : 506,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# If BOOSTROOT was defined in the environment, use it.\n",
        "Line" : 511,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# If BOOST_INCLUDEDIR was defined in the environment, use it.\n",
        "Line" : 516,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# If BOOST_LIBRARYDIR was defined in the environment, use it.\n",
        "Line" : 521,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Search for Boost include DIR \n\n# ------------------------------------------------------------------------\n\n# Try to find Boost by stepping backwards through the Boost versions\n\n# we know about.\n",
        "Line" : 556,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# Build a list of path suffixes for each version.\n",
        "Line" : 562,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# Add in a path suffix, based on the required version, ideally\n\n# we could read this from version.hpp, but for that to work we'd\n\n# need to know the include dir already\n",
        "Line" : 565,
        "CharPositionInLine" : 6
      },
      "50" : {
        "Text" : "# Transform 1.35 => 1_35 and 1.36.0 => 1_36_0\n",
        "Line" : 570,
        "CharPositionInLine" : 6
      },
      "51" : {
        "Text" : "# For BoostPro's underscores (and others?)\n",
        "Line" : 581,
        "CharPositionInLine" : 8
      },
      "52" : {
        "Text" : "# First check the default ones \n",
        "Line" : 596,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# Look for a standard boost header file.\n",
        "Line" : 603,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Extract version information from version.hpp\n\n# ------------------------------------------------------------------------\n",
        "Line" : 613,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# Extract Boost_VERSION and Boost_LIB_VERSION from version.hpp\n\n# Read the whole file:\n\n#\n",
        "Line" : 617,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Suffix initialization and compiler suffix detection.\n\n# ------------------------------------------------------------------------\n",
        "Line" : 652,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# Setting some more suffixes for the library\n",
        "Line" : 656,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# Attempt to guess the compiler suffix\n\n# NOTE: this is not perfect yet, if you experience any issues\n\n# please report them and use the Boost_COMPILER variable\n\n# to work around the problems.\n",
        "Line" : 669,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "# Good luck!\n",
        "Line" : 689,
        "CharPositionInLine" : 20
      },
      "60" : {
        "Text" : "# yes, this is correct\n",
        "Line" : 690,
        "CharPositionInLine" : 35
      },
      "61" : {
        "Text" : "# Good luck!\n",
        "Line" : 691,
        "CharPositionInLine" : 20
      },
      "62" : {
        "Text" : "# yes, this is correct\n",
        "Line" : 692,
        "CharPositionInLine" : 35
      },
      "63" : {
        "Text" : "# no GCC version encoding prior to 1.34\n",
        "Line" : 700,
        "CharPositionInLine" : 38
      },
      "64" : {
        "Text" : "# no GCC version encoding prior to 1.34\n",
        "Line" : 709,
        "CharPositionInLine" : 38
      },
      "65" : {
        "Text" : "# Determine which version of GCC we have.\n",
        "Line" : 712,
        "CharPositionInLine" : 10
      },
      "66" : {
        "Text" : "# In Boost 1.36.0 and newer, the mangled compiler name used\n\n# on Mac OS X/Darwin is \"xgcc\".\n",
        "Line" : 716,
        "CharPositionInLine" : 16
      },
      "67" : {
        "Text" : "# In Boost <= 1.35.0, there is no mangled compiler name for\n\n# the Mac OS X/Darwin version of GCC.\n",
        "Line" : 720,
        "CharPositionInLine" : 16
      },
      "68" : {
        "Text" : "# We don't know the Boost version, so assume it's\n\n# pre-1.36.0.\n",
        "Line" : 725,
        "CharPositionInLine" : 14
      },
      "69" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  Begin finding boost libraries\n\n# ------------------------------------------------------------------------\n",
        "Line" : 769,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "# Support preference of static libs by adjusting CMAKE_FIND_LIBRARY_SUFFIXES\n",
        "Line" : 808,
        "CharPositionInLine" : 4
      },
      "71" : {
        "Text" : "# Search first in the user specified locations \n",
        "Line" : 818,
        "CharPositionInLine" : 1
      },
      "72" : {
        "Text" : "# Consider system default pathes once custom search failed\n",
        "Line" : 842,
        "CharPositionInLine" : 1
      },
      "73" : {
        "Text" : "# ------------------------------------------------------------------------\n\n#  End finding boost libraries\n\n# ------------------------------------------------------------------------\n",
        "Line" : 874,
        "CharPositionInLine" : 2
      },
      "74" : {
        "Text" : "# Check the version of Boost against the requested version.\n",
        "Line" : 886,
        "CharPositionInLine" : 4
      },
      "75" : {
        "Text" : "# If the user requested an exact version of Boost, check\n\n# that. We already know that the Boost version we have is >= the\n\n# requested version.\n",
        "Line" : 910,
        "CharPositionInLine" : 6
      },
      "76" : {
        "Text" : "# If the user didn't specify a patchlevel, it's 0.\n",
        "Line" : 915,
        "CharPositionInLine" : 6
      },
      "77" : {
        "Text" : "# We'll set Boost_FOUND true again if we have an exact version match.\n",
        "Line" : 920,
        "CharPositionInLine" : 6
      },
      "78" : {
        "Text" : "# State that we found a version of Boost that is too new or too old.\n",
        "Line" : 934,
        "CharPositionInLine" : 6
      },
      "79" : {
        "Text" : "# We were unable to find some libraries, so generate a sensible\n\n# error message that lists the libraries we were unable to find.\n",
        "Line" : 966,
        "CharPositionInLine" : 6
      },
      "80" : {
        "Text" : "# Compatibility Code for backwards compatibility with CMake\n\n# 2.4's FindBoost module.\n",
        "Line" : 987,
        "CharPositionInLine" : 6
      },
      "81" : {
        "Text" : "# Look for the boost library path.\n\n# Note that the user may not have installed any libraries\n\n# so it is quite possible the Boost_LIBRARY_PATH may not exist.\n",
        "Line" : 990,
        "CharPositionInLine" : 6
      },
      "82" : {
        "Text" : "# Strip off the trailing \"/include\" in the path.\n",
        "Line" : 1000,
        "CharPositionInLine" : 8
      },
      "83" : {
        "Text" : "# we opt not to automatically output Boost_ERROR_REASON here as\n\n# it could be quite lengthy and somewhat imposing in it's requests\n\n# Since Boost is not always a required dependency we'll leave this\n\n# up to the end-user.\n",
        "Line" : 1046,
        "CharPositionInLine" : 8
      },
      "84" : {
        "Text" : "# show the Boost_INCLUDE_DIRS AND Boost_LIBRARIES variables only in the advanced view\n",
        "Line" : 1059,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 85
    },
    "lib/orogen/templates/config/FindOrocosCORBA.cmake" : {
      "ObjectId" : "7bc3b1a2206f4624ed754e4c221e5e3308691b13",
      "LastModified" : "2012-12-21T15:18:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# First, find the actual implementation of the used ORB (TAO or OMNIORB)\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# In the case of the TAO ORB, we add TAO_Strategies to be able to use\n\n# multiple communication methods\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# ORB-specific configuration steps if the TYPEKIT component\n\n# is required\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# The ${OrocosRTT_INCLUDE_DIRS}/rtt part is a workaround for RTT's\n\n# includes brokenness\n",
        "Line" : 44,
        "CharPositionInLine" : 16
      },
      "4" : {
        "Text" : "# The ${OrocosRTT_INCLUDE_DIRS}/rtt part is a workaround for RTT's\n\n# includes brokenness\n",
        "Line" : 60,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 5
    },
    "lib/orogen/templates/config/FindRTTPlugin.cmake" : {
      "ObjectId" : "1ec38a2977dc95fd8cbb774ed10a1761a27be644",
      "LastModified" : "2018-05-18T19:53:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#\n\n# CMake script for finding An Orocos RTT Plugin in case you require it during build time.\n\n# If the optional RTT_COMPONENT_PATH environment variable exists, header files and\n\n# libraries will be searched in the RTT_COMPONENT_PATH/include and RTT_COMPONENT_PATH/lib/orocos/plugins\n\n# directories, respectively. Otherwise the default CMake search process will be\n\n# used. Use the RTT_HINTS variable to hint the location of the orocos-rtt installation directory.\n\n#\n\n# Usage: find_package( RTTPlugin COMPONENTS rtt-scripting )\n\n#\n\n# This script creates the following variables:\n\n#  RTT_PLUGIN_<COMPONENT>_FOUND: Boolean that indicates if the plugin was found\n\n#  RTT_PLUGIN_<COMPONENT>_INCLUDE_DIRS: Path to the plugin header files (equal to OROCOS_RTT_INCLUDE_DIRS)\n\n#  RTT_PLUGIN_<COMPONENT>_LIBRARIES: Plugin library for the current OROCOS_TARGET cmake or environment variable.\n\n#  RTT_PLUGIN_<COMPONENT>_<OROCOS_TARGET>_LIBRARIES: Plugin library for the current OROCOS_TARGET cmake or environment variable (same as above).\n\n#\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We search for both 'given name' and 'given name + -target'\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#STRING(TOUPPER ${COMPONENT} COMPONENT)\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Find plugins\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Use location specified by environment variable\n",
        "Line" : 32,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Use default CMake search process\n",
        "Line" : 38,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Forward FIND_REQUIRED\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Forward FIND_QUIET\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Since libfind_process does not deal correctly with \"optimized\" and \"debug\" keywords,\n\n# we have to manualy add them thereafter\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Avoid worst case and disable the generic case:\n",
        "Line" : 82,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 11
    },
    "lib/orogen/templates/config/LibFindMacros.cmake" : {
      "ObjectId" : "db880c19b8a79fbe23c808b171f726ef5189eb9a",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Works the same as find_package, but forwards the \"REQUIRED\" and \"QUIET\" arguments\n\n# used for the current package. For this to work, the first parameter must be the\n\n# prefix of the current package, then the prefix of the new package etc, which are\n\n# passed to find_package.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Damn CMake developers made the UsePkgConfig system deprecated in the same release (2.6)\n\n# where they added pkg_check_modules. Consequently I need to support both in my scripts\n\n# to avoid those deprecated warnings. Here's a helper that does just that.\n\n# Works identically to pkg_check_modules, except that no checks are needed prior to use.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do the final processing once the paths have been detected.\n\n# If include dirs are needed, ${PREFIX}_PROCESS_INCLUDES should be set to contain\n\n# all the variables, each of which contain one include directory.\n\n# Ditto for ${PREFIX}_PROCESS_LIBS and library files.\n\n# Will set ${PREFIX}_FOUND, ${PREFIX}_INCLUDE_DIRS and ${PREFIX}_LIBRARIES.\n\n# Also handles errors in case library detection was required, etc.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Skip processing if already processed during this run\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Start with the assumption that the library was found\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Process all includes and set _FOUND to false if any are missing\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Process all libraries and set _FOUND to false if any are missing\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Print message and/or exit on fatal error\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# NOTE: else case not included in original file\n",
        "Line" : 75,
        "CharPositionInLine" : 38
      },
      "CommentCount" : 9
    },
    "lib/orogen/templates/config/OrogenPkgCheckModules.cmake" : {
      "ObjectId" : "6d743df33cdfb380574bbcc7bc70f172892ce02c",
      "LastModified" : "2012-09-29T08:14:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is the Cmake 2.6 FindPkgConfig macro\n",
        "Line" : 1,
        "CharPositionInLine" : 23
      },
      "CommentCount" : 1
    },
    "lib/orogen/templates/config/RPATHHandling.cmake" : {
      "ObjectId" : "d53af993512303d7a79eb2708bf603956ef88faa",
      "LastModified" : "2012-09-29T08:14:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# use, i.e. don't skip the full RPATH for the build tree\n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# when building, don't use the install RPATH already\n\n# (but later on when installing)\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# the RPATH to be used when installing\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# add the automatically determined parts of the RPATH\n\n# which point to directories outside the build tree to the install RPATH\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "lib/orogen/templates/config/TaskLib.cmake" : {
      "ObjectId" : "e457236871f5c7f14719a4a4c5d639db1127a6f1",
      "LastModified" : "2016-01-25T13:58:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# What does the task library needs ?\n\n#  - it needs to be able to include the <typekit_name>TypekitTypes.hpp files for\n\n#    each used typekit. It does not need to link the library, though, because the\n\n#    typekit itself is hidden from the actual task contexts.\n\n#  - it needs to have access to the dependent task libraries and libraries. This\n\n#    is true for both the headers and the link interface itself.\n\n#\n\n# What this file does is set up the following variables:\n\n#  component_TASKLIB_NAME\n\n#     the name of the library (test-tasks-gnulinux for instance)\n\n#\n\n#  <PROJECT>_TASKLIB_SOURCES\n\n#     the .cpp files that define the task context classes, including the\n\n#     autogenerated parts.\n\n#\n\n#  <PROJECT>_TASKLIB_SOURCES\n\n#     the .hpp files that declare the task context classes, including the\n\n#     autogenerated parts.\n\n#\n\n#  <PROJECT>_TASKLIB_DEPENDENT_LIBRARIES\n\n#     the list of libraries to which the task library should be linked.\n\n#\n\n#  <PROJECT>_TASKLIB_INTERFACE_LIBRARIES\n\n#     the list of libraries to which users of the task library should be linked\n\n#     as well\n\n#\n\n# These variables are used in tasks/CMakeLists.txt to actually build the shared\n\n# object.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/orogen/templates/tasks/CMakeLists.txt" : {
      "ObjectId" : "660b12defe240c979a602b2aa231a2ec420e22c1",
      "LastModified" : "2015-06-16T16:05:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generated from orogen/lib/orogen/templates/tasks/CMakeLists.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/orogen/templates/typekit/CMakeLists.txt" : {
      "ObjectId" : "81499d608387125b52799198949ad45e1e6078b2",
      "LastModified" : "2017-07-06T17:31:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generated from orogen/lib/orogen/templates/typekit/CMakeLists.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##\n\n# Header for typegen-generated typekits\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# In Orogen components, the build target is specified at generation time\n\n# But we allow to override in case of typegen/USE_OROCOS_RTT:\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If UseOrocos-RTT.cmake is used, install libs in /target/package subdir in order to allow\n\n# multi-target/package installs.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable -Wall for compilers that know it\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define the necessary RPath information for all binaries. That can be stripped\n\n# later\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set the build type to debug by default\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# END if typekit.standalone?\n\n##\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Manually define '-DIS_ROS_PACKAGE' or include the UseOrocos.cmake file to automatically detect&set this flag.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# When we import a typekit in a ROS package, we expect it to be in the package/lib directory\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Now set up the dependencies\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Generate the base typekit shared library\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Force the user to regenerate its typekit if the inputs changed\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "lib/orogen/templates/typekit/Makefile" : {
      "ObjectId" : "90c690e6e261de2948200871faade1d420716737",
      "LastModified" : "2012-09-29T08:14:45Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "lib/orogen/templates/typekit/corba/CMakeLists.txt" : {
      "ObjectId" : "20354cf5700b47856ddb43675d3875d5235d4cc2",
      "LastModified" : "2017-07-06T17:31:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generated from orogen/lib/orogen/templates/typekit/corba/CMakeLists.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set up generation of IDL files for CORBA support\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Generate the CORBA transport\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "lib/orogen/templates/typekit/mqueue/CMakeLists.txt" : {
      "ObjectId" : "521b330205b34ba8beb4e717e394a2a133799747",
      "LastModified" : "2013-08-30T07:56:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generated from orogen/lib/orogen/templates/typekit/mqueue/CMakeLists.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# OrocosRTT_PREFIX has been set by the pkg-config find modules:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set up generation of IDL files for MQueue support\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Generate the MQueue transport\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "lib/orogen/templates/typekit/ros/CMakeLists.txt" : {
      "ObjectId" : "87ae4a1081cd68adc9f4db49e7e307bcc42d823b",
      "LastModified" : "2014-12-24T14:35:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Don't depend on transports that actually don't define any messages\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# This is a shameless copy of code from share/genmsg/extras/genmsg-extras.cmake\n\n# genmsg-groovy forces us to find_package the transitive dependencies from our\n\n# direct dependencies.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add transitive msg dependencies\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# end of if !all_messages.empty?\n",
        "Line" : 84,
        "CharPositionInLine" : 7
      },
      "4" : {
        "Text" : "# Needed to generate the config.cmake file\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "lib/orogen/templates/typekit/typelib/CMakeLists.txt" : {
      "ObjectId" : "ff81c0404509085dad9a1a6da33260109862627a",
      "LastModified" : "2013-08-30T07:56:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generated from orogen/lib/orogen/templates/typekit/typelib/CMakeLists.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This policy indicates that the code below is cmake 2.6 compliant. This is necessary\n\n# To properly escape the add_definitions arguments.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# rospack support: if we're a ROS package, use rospack to return the location of our .tlb file.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Catkin style of fetching ROS deps\n",
        "Line" : 37,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# pre-Fuerte or Groovy\n",
        "Line" : 40,
        "CharPositionInLine" : 24
      },
      "5" : {
        "Text" : "# TODO: This block to get roslib is deprecated as of ROS Fuerte, but is left in for pre-Fuerte compatibility\n",
        "Line" : 41,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "### XXX hardcoded\n",
        "Line" : 42,
        "CharPositionInLine" : 57
      },
      "7" : {
        "Text" : "# Yells at user (non-QUIET !)\n",
        "Line" : 46,
        "CharPositionInLine" : 48
      },
      "CommentCount" : 8
    }
  },
  "FileTypes" : {
    "CMAKE" : 17,
    "MAKEFILE" : 2
  },
  "ElapsedTime" : 1632
}