{
  "Repository" : "95547",
  "Revision" : "HEAD",
  "ObjectId" : "e6e6c24e4d2b521941d14f13f3cc4fcbde873f96",
  "CommitTime" : "2016-08-31T20:09:22Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "9709a63413108352aed74be40ade610bbba669fb",
      "LastModified" : "2015-08-27T19:55:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set TARGET_SUPPORTS_SHARED_LIBS -- otherwise problems building shared libs on Macs (at least)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#IF(APPLE)\n\n#   SET(CMAKE_SHARED_MODULE_CREATE_C_FLAGS\n\n#       \"${CMAKE_SHARED_MODULE_CREATE_C_FLAGS} -flat_namespace -undefined suppress\")\n\n#ENDIF(APPLE)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set Camellia directories\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#  link_libraries(mpi_f77)\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#  link_libraries(${ADDITIONAL_LIBRARIES})\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Find Trilinos\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If FIND_PACKAGE successfully found your Trilinos install, it will\n\n# set the Boolean flag Trilinos_FOUND.  The following IF statement\n\n# fails with a FATAL_ERROR if Trilinos was not found.  If it _was_\n\n# found, it prints out the values of some Trilinos configuration\n\n# details.  You may find them useful for building your application\n\n# that uses Trilinos.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If you haven't already set the C++ compiler, use the same compiler\n\n# that was used to build Trilinos on your machine.  \n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Testing something:\n\n#SET(CMAKE_CXX_COMPILER \"echo\")\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#get_cmake_property(_variableNames VARIABLES)\n\n#foreach (_variableName ${_variableNames})\n\n#    message(STATUS \"${_variableName}=${${_variableName}}\")\n\n#endforeach()\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# -fPIC allows shared libraries to be built against the Camellia library\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#MESSAGE(\"CMAKE_CXX_FLAGS = ${CMAKE_CXX_FLAGS}\")\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# If you haven't already set the C compiler, use the same compiler\n\n# that was used to build Trilinos on your machine.  \n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#MESSAGE(\"CMAKE_C_FLAGS = ${CMAKE_C_FLAGS}\")\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# If you haven't already set the Fortran compiler, use the same compiler\n\n# that was used to build Trilinos on your machine.  \n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Find MOAB\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Find all library source files\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#${MUMPS_PATH}/lib\n",
        "Line" : 187,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Xdmd\n\n# hdf5_cpp\n\n#  dmumps\n\n#  mumps_common\n\n#  pord\n",
        "Line" : 208,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# target_link_libraries(Camellia Xdmf)\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Enable testing (see unit_tests directory)\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Build Drivers\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "ConfigureOptions.cmake" : {
      "ObjectId" : "18e73eb4a4ef0faf66e09dd863f718aae1af8e10",
      "LastModified" : "2014-08-05T15:42:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure file for Camellia -- deprecated.  Suggestion is to use a do-configure script to specify any arguments from the cmake invocation.  This allows having debug/release/MPI/serial builds that all depend on the same copy of the Camellia source.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(TRILINOS_PATH /workspace/truman/trilinos)\n\n#set(XDMF_PATH /workspace/truman/xdmf)\n\n#set(HDF5_PATH /workspace/truman/hdf5)\n\n#set(MUMPS_PATH /opt/apps/ossw/libraries/mumps)\n\n#set(TRILINOS_PATH $ENV{TRILINOS_DIR})\n\n#set(MUMPS_PATH /workspace/jchan/MUMPS_4.9.2/)\n\n#set(SCALAPACK_PATH /workspace/jchan/lib/scalapack)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(CMAKE_CXX_COMPILER mpicxx)\n\n#set(CMAKE_BUILD_TYPE DEBUG)\n\n#set(BUILD_SHARED_LIBS ON)\n\n#set(CMAKE_VERBOSE_MAKEFILE ON)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "build/cmake/CMakeLists.txt" : {
      "ObjectId" : "179c71a2cf9b62b83740802f9afc1dcb5957d8bb",
      "LastModified" : "2014-10-21T19:52:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# CMake example that uses FIND_PACKAGE(Trilinos ...) to build your C++\n\n# application with Trilinos.  You should know a little bit about CMake\n\n# before reading this example; in particular, you should know how to\n\n# add C++ source files and header files to your project.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You need CMake version >= 2.8 to use this example.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Your \"do-configure\" script that invokes CMake should set\n\n# TRILINOS_PATH to the path to your Trilinos install.\n\n# You do _not_ need to edit this line.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#  link_libraries(-L/Users/nroberts/lib/openmpi-1.4.3/lib -lmpi -lopen-rte -lopen-pal -lutil)\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#  link_libraries(${MPI_DIR}/lib/mpi)\n\n#  link_libraries(${MPI_DIR}/lib/mpi_f77)\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#  link_libraries(${ADDITIONAL_LIBRARIES})\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If FIND_PACKAGE successfully found your Trilinos install, it will\n\n# set the Boolean flag Trilinos_FOUND.  The following IF statement\n\n# fails with a FATAL_ERROR if Trilinos was not found.  If it _was_\n\n# found, it prints out the values of some Trilinos configuration\n\n# details.  You may find them useful for building your application\n\n# that uses Trilinos.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If you haven't already set the C++ compiler, use the same compiler\n\n# that was used to build Trilinos on your machine.  You do _not_ need\n\n# to edit this line.\n\n#IF(NOT CMAKE_CXX_COMPILER)\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#ENDIF()\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If you haven't already set the C compiler, use the same compiler\n\n# that was used to build Trilinos on your machine.  You do _not_ \n\n# need to edit this line.\n\n#IF(NOT CMAKE_C_COMPILER)\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#ENDIF()\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# If you haven't already set the Fortran compiler, use the same compiler\n\n# that was used to build Trilinos on your machine.  You do _not_ \n\n# need to edit this line.\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\n\n# EDIT HERE: Replace TrilinosExample with your project's name.\n\n#\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# \n\n# EDIT HERE: \n\n#\n\n# Source file(s) in your project.  Here, we include one source file, \n\n# main.cpp, which contains the main() function.  You may also want to \n\n# set HEADERS to the list of header files in your project, if there \n\n# are any.\n\n#\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#set( uBLAS_CHOLESKY_TEST\n\n#  \"${DRIVERS_DIR}/uBLAS/cholesky_test.cpp\"\n\n#)\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# \n\n# EDIT HERE:\n\n#\n\n# Add to the header include path the current directory, Trilinos'\n\n# include directory, and the include directories of the third-party\n\n# libraries (TPLs) with which Trilinos was built.\n\n#\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# for certain tests in DPGTests\n",
        "Line" : 327,
        "CharPositionInLine" : 46
      },
      "17" : {
        "Text" : "# for certain tests in DPGTests\n",
        "Line" : 328,
        "CharPositionInLine" : 48
      },
      "18" : {
        "Text" : "# for certain tests in DPGTests\n",
        "Line" : 329,
        "CharPositionInLine" : 45
      },
      "19" : {
        "Text" : "# Add to the library path Trilinos' library path, and the library\n\n# paths of the third-party libraries (TPLs) with which Trilinos was\n\n# built.  \n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# \n\n# EDIT HERE: Change trilinosExample to the name of the executable\n\n# file that you want to build.  This line tells CMake which source\n\n# file(s) to use to build the executable.\n\n#\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#add_executable(ublas_cholesky ${uBLAS_CHOLESKY_TEST})\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\n\n# EDIT HERE: Change trilinosExample to the name of the executable\n\n# file, as above.  This line tells the linker to link the executable \n\n# with the Trilinos libraries, and with the third-party libraries \n\n# (TPLs) with which Trilinos was built.\n\n#\n",
        "Line" : 383,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "build/cmake/bg-mpi-release/CMakeLists.txt" : {
      "ObjectId" : "de0cf227139ff67dd6d0493c03533e48d6ea8634",
      "LastModified" : "2013-10-11T22:21:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "build/cmake/cli-mpi-release/CMakeLists.txt" : {
      "ObjectId" : "de0cf227139ff67dd6d0493c03533e48d6ea8634",
      "LastModified" : "2013-10-11T22:21:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "build/cmake/xcode-debug/CMakeLists.txt" : {
      "ObjectId" : "de0cf227139ff67dd6d0493c03533e48d6ea8634",
      "LastModified" : "2013-10-11T22:21:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "build/cmake/xcode-mpi-release/CMakeLists.txt" : {
      "ObjectId" : "de0cf227139ff67dd6d0493c03533e48d6ea8634",
      "LastModified" : "2013-10-11T22:21:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "docs/Jesse/Confusion Notes/figs/phatch-0.2.7/docs/Makefile" : {
      "ObjectId" : "60ced9cabc230b081fd835e6a6c1f1e94546846d",
      "LastModified" : "2013-10-11T22:21:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "docs/Jesse/HeuerPaper/Makefile" : {
      "ObjectId" : "6c3e0c05be36ecb044ccaf27d525130515dfe76a",
      "LastModified" : "2013-10-11T22:21:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "docs/Truman/LocalConservation/common/Makefile" : {
      "ObjectId" : "bf89ac1afdfd69426a29300e76b2a7168f38c057",
      "LastModified" : "2013-10-11T22:21:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "docs/Truman/LocalConservation/talk/Makefile" : {
      "ObjectId" : "486dead835aad44ff74a6aa2c823a7f49814acf8",
      "LastModified" : "2013-10-11T22:21:35Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "drivers/Brendan/CMakeLists.txt" : {
      "ObjectId" : "c6009229c1c6eaf138a12b758f7fd03cd775af62",
      "LastModified" : "2015-10-16T22:03:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "drivers/CMakeLists.txt" : {
      "ObjectId" : "79d084f5c08013e76dbd4154f29f8609adc5123e",
      "LastModified" : "2015-10-16T22:03:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include headers from DPGTests for some drivers\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add each driver\n\n#add_subdirectory(Burgers)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "drivers/ConditioningExperiment/CMakeLists.txt" : {
      "ObjectId" : "089fcc32acf63b871849b7c469e8638ef5b67083",
      "LastModified" : "2015-10-16T22:03:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "drivers/Confusion_Jesse/CMakeLists.txt" : {
      "ObjectId" : "94231ee6f3aa983388ad26854ea50d80747b6d5d",
      "LastModified" : "2015-10-16T22:03:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "drivers/Convection/CMakeLists.txt" : {
      "ObjectId" : "6083202114af150d69ed162b5777cc4e4267a135",
      "LastModified" : "2015-10-16T22:03:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "drivers/DPGTests/CMakeLists.txt" : {
      "ObjectId" : "5765d3dc3c095f4023ced35811c2cd3c71651e5b",
      "LastModified" : "2015-10-16T22:03:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# for certain tests in DPGTests\n",
        "Line" : 14,
        "CharPositionInLine" : 46
      },
      "1" : {
        "Text" : "# for certain tests in DPGTests\n",
        "Line" : 15,
        "CharPositionInLine" : 48
      },
      "2" : {
        "Text" : "# for certain tests in DPGTests\n",
        "Line" : 16,
        "CharPositionInLine" : 45
      },
      "CommentCount" : 3
    },
    "drivers/HPCToolkitTest/CMakeLists.txt" : {
      "ObjectId" : "0fcab4dfb186bde02c8f2d2d6600242ee3f9343b",
      "LastModified" : "2015-10-16T22:03:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "drivers/IncompressibleNS/CMakeLists.txt" : {
      "ObjectId" : "ad6f316237d912651eefb04c63aedd846b4d75ee",
      "LastModified" : "2015-11-10T17:42:58Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "drivers/MeshMemorySize/CMakeLists.txt" : {
      "ObjectId" : "e098ebd313550b8defb69d658727b0915719bb09",
      "LastModified" : "2015-10-16T22:03:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "drivers/NavierStokes/CMakeLists.txt" : {
      "ObjectId" : "e5fe56e702c7b3bc49670f52fc2f77bed2cc1160",
      "LastModified" : "2015-10-16T22:03:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "drivers/NonlinearTests/CMakeLists.txt" : {
      "ObjectId" : "de288e382ecb4dcc718151f437847e15289c3414",
      "LastModified" : "2015-10-16T22:03:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "drivers/Poisson/CMakeLists.txt" : {
      "ObjectId" : "a303ef96242b1495d8f55dea55bf9848164950ac",
      "LastModified" : "2015-10-16T22:03:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_executable(PoissonPreconditioningTestsDriver \"PoissonPreconditioningTestsDriver.cpp\")\n\n#target_link_libraries(PoissonPreconditioningTestsDriver Camellia)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "drivers/Preconditioning/CMakeLists.txt" : {
      "ObjectId" : "7d7c8bc08ab2dd4757fede2fc08de6cf71e497bb",
      "LastModified" : "2015-10-16T22:03:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "drivers/ScratchPad/CMakeLists.txt" : {
      "ObjectId" : "5edae7972996ea8b2c0d9953360d0d0e0c287c44",
      "LastModified" : "2015-10-16T22:03:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# for certain tests in DPGTests\n",
        "Line" : 4,
        "CharPositionInLine" : 46
      },
      "1" : {
        "Text" : "# for certain tests in DPGTests\n",
        "Line" : 5,
        "CharPositionInLine" : 48
      },
      "2" : {
        "Text" : "# for certain tests in DPGTests\n",
        "Line" : 6,
        "CharPositionInLine" : 47
      },
      "CommentCount" : 3
    },
    "drivers/Stokes/CMakeLists.txt" : {
      "ObjectId" : "f92a43790e7b87cb47e027e12f819761cfe3c31e",
      "LastModified" : "2015-10-16T22:03:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "drivers/Truman/Brinkman/CMakeLists.txt" : {
      "ObjectId" : "9e14f2b13fa7652948de1706e05bf89b0be688ed",
      "LastModified" : "2015-10-16T22:03:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "drivers/Truman/CMakeLists.txt" : {
      "ObjectId" : "16de37ede605e34a716a9fd8e05dfc7c908f8e26",
      "LastModified" : "2015-10-16T22:03:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add each driver\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "drivers/Truman/CompressibleNS/CMakeLists.txt" : {
      "ObjectId" : "59fb628345aaf31ce9e8c6fe2f0a0c7f70e1016e",
      "LastModified" : "2015-10-16T22:03:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "drivers/Truman/ConvectionDiffusion/CMakeLists.txt" : {
      "ObjectId" : "af6194e2051103e0c06c7d392c0913394966a483",
      "LastModified" : "2015-10-16T22:03:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "drivers/Truman/Dissertation/CMakeLists.txt" : {
      "ObjectId" : "4eec15117a0ad19bc80ee9c21ac995ffa7f5a24c",
      "LastModified" : "2015-12-09T20:14:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "drivers/Truman/IncompressibleNS/CMakeLists.txt" : {
      "ObjectId" : "f5239633907a384650f7555ea17c1f0d94172937",
      "LastModified" : "2015-10-16T22:03:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "drivers/Truman/LocalConservation/CMakeLists.txt" : {
      "ObjectId" : "7d7a04f1c3ab9d2fcbb15ce15db318caeff9d2b6",
      "LastModified" : "2015-10-16T22:03:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "drivers/Truman/SpaceTime/Burgers/CMakeLists.txt" : {
      "ObjectId" : "cbb1f8e9582d0369bdc5119dc5214beaae8e6ea3",
      "LastModified" : "2015-10-16T22:03:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "drivers/Truman/SpaceTime/CMakeLists.txt" : {
      "ObjectId" : "5fbded34ffd3f060e5e4f57f3f77025b62fcdee1",
      "LastModified" : "2015-10-16T22:03:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add each directory\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "drivers/Truman/Tests/CMakeLists.txt" : {
      "ObjectId" : "6fd8c96b7ca6215843dcf5763b7971feaa9b1e76",
      "LastModified" : "2015-10-16T22:03:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add_executable(XDMFTests XDMFTests.cpp)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add_executable(XDMFTest XDMFTest.cpp)\n\n# target_link_libraries(XDMFTest Xdmf)",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "drivers/Truman/TimeStepping/CMakeLists.txt" : {
      "ObjectId" : "89d5f84e3696376b34249729e325053d374863da",
      "LastModified" : "2015-10-16T22:03:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "drivers/TutorialDriver/CMakeLists.txt" : {
      "ObjectId" : "2af168db1d750af8d3c5b3354e493e0eceb263de",
      "LastModified" : "2015-10-16T22:03:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "6637f0469fa947fbf360568599a2065650f76e35",
      "LastModified" : "2016-06-19T21:26:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/DGAdvection/CMakeLists.txt" : {
      "ObjectId" : "28b37ae58ed1dc060ea8ca1e53864ce1175aa2f5",
      "LastModified" : "2016-01-14T22:15:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/DPGAdvection/CMakeLists.txt" : {
      "ObjectId" : "63dbf5b6a34a9b8e4ae2c40db54122fd7bfc9b5c",
      "LastModified" : "2016-01-14T22:15:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/HeatSpaceTime/CMakeLists.txt" : {
      "ObjectId" : "fe03a887d32e34509e1bcd08f23f57eed284c8c7",
      "LastModified" : "2016-01-14T22:15:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/MOABReader/CMakeLists.txt" : {
      "ObjectId" : "7e1ffd138622521134633ec3533e80b1f1ee0fce",
      "LastModified" : "2016-01-14T22:15:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find MOAB\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/NavierStokesCavityFlow/CMakeLists.txt" : {
      "ObjectId" : "1b8a77890d37d04f6a82bda5e26f74dda2a759f3",
      "LastModified" : "2016-01-14T22:15:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/Poisson1D/CMakeLists.txt" : {
      "ObjectId" : "ab817b947b773e71199596266a248a4ea192c776",
      "LastModified" : "2016-06-19T21:26:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/Poisson1DMOAB/CMakeLists.txt" : {
      "ObjectId" : "4b0465bd31773ca96720592418c32fa25cae3d64",
      "LastModified" : "2016-06-19T21:26:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/PoissonPrimal/CMakeLists.txt" : {
      "ObjectId" : "4fa6cce40548cb6f5ef0ec80f3dd734a83056817",
      "LastModified" : "2016-06-19T21:26:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/StokesBackwardFacingStep/CMakeLists.txt" : {
      "ObjectId" : "21e6c552102b41c9f443224cd2ec51ab750dd32c",
      "LastModified" : "2016-06-19T21:26:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/StokesCavityFlow/CMakeLists.txt" : {
      "ObjectId" : "2878661cfa0b4d5b3f9249915548ee34ca3cf7ca",
      "LastModified" : "2016-06-19T21:26:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "slow_tests/CMakeLists.txt" : {
      "ObjectId" : "2b055db01fc3b3019e58ec7eb5048b6751b17a8f",
      "LastModified" : "2016-06-19T21:26:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "unit_tests/CMakeLists.txt" : {
      "ObjectId" : "eb4355b56784dadea8fbcc97171c48a835abf20a",
      "LastModified" : "2016-06-19T21:26:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 47,
    "MAKEFILE" : 4
  },
  "ElapsedTime" : 5854
}