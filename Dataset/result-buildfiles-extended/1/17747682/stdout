{
  "Repository" : "17747682",
  "Revision" : "HEAD",
  "ObjectId" : "7fdbfe6cc89d8895b411bfdeeabca12f8d3fa92c",
  "CommitTime" : "2018-02-08T09:47:25Z",
  "Files" : {
    "basex/pom.xml" : {
      "ObjectId" : "150aa985eaba71974b92ec26d34d1458a935acf6",
      "LastModified" : "2018-02-08T09:47:25Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " this is used for inheritance merges ",
        "Line" : 179,
        "CharPositionInLine" : 92
      },
      "1" : {
        "Text" : " bind to the packaging phase ",
        "Line" : 180,
        "CharPositionInLine" : 84
      },
      "CommentCount" : 2
    },
    "evaluation/pom.xml" : {
      "ObjectId" : "a8a58be441687b935487fea74db7403c29aecefc",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "flinkMLtest/pom.xml" : {
      "ObjectId" : "deba42f3ebbb016c005073e27872166874b22f9c",
      "LastModified" : "2017-01-31T07:54:07Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\nLicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n\"License\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, either express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : " These two requirements are the minimum to use and develop Flink.\n        You can add others like <artifactId>flink-scala</artifactId> for Scala! ",
        "Line" : 43,
        "CharPositionInLine" : 84
      },
      "2" : {
        "Text" : " Use this dependency if you are using the DataSet API ",
        "Line" : 60,
        "CharPositionInLine" : 70
      },
      "3" : {
        "Text" : " We use the maven-assembly plugin to create a fat jar that contains all dependencies\n    except flink and it's transitive dependencies. The resulting fat-jar can be executed\n    on a cluster. Change the value of Program-Class if your program entry point changes. ",
        "Line" : 85,
        "CharPositionInLine" : 93
      },
      "4" : {
        "Text" : " If you want to use Java 8, change this to \"1.8\" ",
        "Line" : 120,
        "CharPositionInLine" : 98
      },
      "5" : {
        "Text" : " If you want to use Java 8, change this to \"1.8\" ",
        "Line" : 121,
        "CharPositionInLine" : 98
      },
      "6" : {
        "Text" : " If you want to use Java 8 Lambda Expressions uncomment the following lines ",
        "Line" : 126,
        "CharPositionInLine" : 92
      },
      "CommentCount" : 7
    },
    "mathosphere-core/pom.xml" : {
      "ObjectId" : "390f331871933b519dc387a8e151d9a23abb2c5e",
      "LastModified" : "2018-01-11T07:52:32Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Logging via log4j2 ",
        "Line" : 42,
        "CharPositionInLine" : 36
      },
      "1" : {
        "Text" : " Redirect log4j logging to version 2 ",
        "Line" : 55,
        "CharPositionInLine" : 66
      },
      "2" : {
        "Text" : "dependency>\n            <groupId>org.apache.logging.log4j</groupId>\n            <artifactId>log4j-slf4j-impl</artifactId>\n            <version>2.10.0</version>\n        </dependency",
        "Line" : 65,
        "CharPositionInLine" : 24
      },
      "3" : {
        "Text" : " Other things ",
        "Line" : 67,
        "CharPositionInLine" : 30
      },
      "4" : {
        "Text" : " Flink ",
        "Line" : 124,
        "CharPositionInLine" : 23
      },
      "5" : {
        "Text" : " English models ",
        "Line" : 190,
        "CharPositionInLine" : 76
      },
      "6" : {
        "Text" : " German models ",
        "Line" : 197,
        "CharPositionInLine" : 75
      },
      "CommentCount" : 7
    },
    "mlp/pom.xml" : {
      "ObjectId" : "673ba3c701a998c3f26421bc577504406780bc6f",
      "LastModified" : "2015-10-16T12:13:43Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Logging ",
        "Line" : 34,
        "CharPositionInLine" : 25
      },
      "1" : {
        "Text" : " Flink ",
        "Line" : 51,
        "CharPositionInLine" : 23
      },
      "2" : {
        "Text" : " Ignore/Execute plugin execution ",
        "Line" : 206,
        "CharPositionInLine" : 57
      },
      "CommentCount" : 3
    },
    "pom.xml" : {
      "ObjectId" : "8eb93a9fdbf3a0a9c0331fa71eef96d14038b5e1",
      "LastModified" : "2018-01-11T07:47:20Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " this is used for inheritance merges ",
        "Line" : 127,
        "CharPositionInLine" : 69
      },
      "1" : {
        "Text" : " bind to the packaging phase ",
        "Line" : 129,
        "CharPositionInLine" : 61
      },
      "2" : {
        "Text" : "<instrumentation>",
        "Line" : 148,
        "CharPositionInLine" : 41
      },
      "3" : {
        "Text" : "<ignores>",
        "Line" : 149,
        "CharPositionInLine" : 37
      },
      "4" : {
        "Text" : "<ignore>BaseXResourceFactoryMachine</ignore>",
        "Line" : 150,
        "CharPositionInLine" : 76
      },
      "5" : {
        "Text" : "<ignore>BaseXResourceRouter</ignore>",
        "Line" : 151,
        "CharPositionInLine" : 68
      },
      "6" : {
        "Text" : "<ignore>BaseXResourceRouterFactoryMachine</ignore>",
        "Line" : 152,
        "CharPositionInLine" : 82
      },
      "7" : {
        "Text" : "<ignore>AppModuleFactoryMachine</ignore>",
        "Line" : 153,
        "CharPositionInLine" : 72
      },
      "8" : {
        "Text" : "</ignores>",
        "Line" : 154,
        "CharPositionInLine" : 38
      },
      "9" : {
        "Text" : "<excludes>",
        "Line" : 155,
        "CharPositionInLine" : 38
      },
      "10" : {
        "Text" : "<exclude>com/formulasearchengine/**/*BaseXResource*.class</exclude>",
        "Line" : 156,
        "CharPositionInLine" : 99
      },
      "11" : {
        "Text" : "<exclude>com/formulasearchengine/**/*FactoryMachine*.class</exclude>",
        "Line" : 157,
        "CharPositionInLine" : 100
      },
      "12" : {
        "Text" : "&lt;!&ndash;<exclude>com/example/**/*Test.class</exclude>&ndash;&gt;",
        "Line" : 158,
        "CharPositionInLine" : 100
      },
      "13" : {
        "Text" : "</excludes>",
        "Line" : 159,
        "CharPositionInLine" : 39
      },
      "14" : {
        "Text" : "</instrumentation>",
        "Line" : 160,
        "CharPositionInLine" : 42
      },
      "15" : {
        "Text" : "TODO: enable ",
        "Line" : 187,
        "CharPositionInLine" : 66
      },
      "CommentCount" : 16
    },
    "pomlp/pom.xml" : {
      "ObjectId" : "75d99861abb9da82e328a54588172651b730a20e",
      "LastModified" : "2018-01-11T09:58:44Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n                This is needed to that IntelliJ can find, handle and invoke JUnit5\n                test suites.\n            ",
        "Line" : 41,
        "CharPositionInLine" : 16
      },
      "1" : {
        "Text" : " Set system variable to prevent java tests to overwrite results ",
        "Line" : 63,
        "CharPositionInLine" : 96
      },
      "2" : {
        "Text" : " SnuggleTeX ",
        "Line" : 75,
        "CharPositionInLine" : 28
      },
      "3" : {
        "Text" : " Usually should be avoided... however, maven install-plugin won't work here ",
        "Line" : 83,
        "CharPositionInLine" : 92
      },
      "4" : {
        "Text" : " Robust Tree Edit Distance algorithm ",
        "Line" : 92,
        "CharPositionInLine" : 53
      },
      "5" : {
        "Text" : " MathML Query Handler ",
        "Line" : 99,
        "CharPositionInLine" : 38
      },
      "6" : {
        "Text" : " MathML Converter ",
        "Line" : 106,
        "CharPositionInLine" : 34
      },
      "7" : {
        "Text" : " MathML Converter ",
        "Line" : 113,
        "CharPositionInLine" : 34
      },
      "8" : {
        "Text" : " Spring REST to communicate with GitHub ",
        "Line" : 120,
        "CharPositionInLine" : 56
      },
      "9" : {
        "Text" : " JSON to Java parser ",
        "Line" : 127,
        "CharPositionInLine" : 37
      },
      "10" : {
        "Text" : " Note: core-annotations version x.y.0 is generally compatible with\n                 (identical to) version x.y.1, x.y.2, etc. ",
        "Line" : 136,
        "CharPositionInLine" : 63
      },
      "11" : {
        "Text" : " HTML4 Unescape for pre-processing latex input ",
        "Line" : 148,
        "CharPositionInLine" : 63
      },
      "12" : {
        "Text" : " Logging via log4j2 ",
        "Line" : 161,
        "CharPositionInLine" : 36
      },
      "13" : {
        "Text" : "command line options parser\n            http://jcommander.org/ ",
        "Line" : 175,
        "CharPositionInLine" : 39
      },
      "14" : {
        "Text" : " Needed for surefire, otherwise maven cannot find JUnit5 tests ",
        "Line" : 196,
        "CharPositionInLine" : 79
      },
      "15" : {
        "Text" : "\n               Several 3rd party tools to parse LaTeX to MathML!\n        ",
        "Line" : 205,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 16
    },
    "restd/pom.xml" : {
      "ObjectId" : "21f01e3a99df368511de4e2383fdda2188373221",
      "LastModified" : "2018-01-06T14:38:14Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " TODO Investigate if this dependency is required ",
        "Line" : 124,
        "CharPositionInLine" : 65
      },
      "1" : {
        "Text" : "\n                            we generate javadoc before packaging the jar to let a chance to apidocs doclet\n                            to generate comments dictionary to be packaged inside the jar as a resource\n                            ",
        "Line" : 159,
        "CharPositionInLine" : 32
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "MAVEN" : 8
  },
  "ElapsedTime" : 1079
}