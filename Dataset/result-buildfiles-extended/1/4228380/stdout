{
  "Repository" : "4228380",
  "Revision" : "HEAD",
  "ObjectId" : "b95e49216eb2974b8e0f69b6603595df1c698ccd",
  "CommitTime" : "2019-04-08T00:30:05Z",
  "Files" : {
    "CMake/CMakeMacros.cmake" : {
      "ObjectId" : "971ac420606915ae354f4a188d846f57105a01bd",
      "LastModified" : "2015-10-28T00:56:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Borrowed from http://stackoverflow.com/a/3323227/445373\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Borrowed from http://stackoverflow.com/a/7172941/445373\n\n# TODO: Upgrade to cmake 3.x so that this function is not needed.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use a modified form of sm_append_simple_target_property.\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Borrowed from http://stackoverflow.com/q/10113017\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get the compiler options generally used.\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "CMake/CPackSetup.cmake" : {
      "ObjectId" : "01d7c779485a0bc157951f3cc5d7fd10353526a2",
      "LastModified" : "2015-10-31T14:50:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Custom items for nsis go here.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The header and welcome bitmaps require backslashes.\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# By setting these install keys manually,\n\n# The default directory of \"StepMania major.minor.patch\" is lost.\n\n# This is currently done to maintain backwards compatibility.\n\n# However, removing these two will allow for multiple versions of StepMania\n\n# to be installed relatively cleanly.\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "CMake/DefineOptions.cmake" : {
      "ObjectId" : "2b2b1bb178329238bef0df6a32c4d088c474a2ae",
      "LastModified" : "2019-04-08T00:30:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Prep options that are needed for each platform.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This option allows for networking support with StepMania.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This option quiets warnings that are a part of external projects.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This option enables using SDL for windows. This will eventually always be ON.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This option is not yet working, but will likely default to ON in the future.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This option handles if we use SSE2 processing.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This option may go away in the future: if it does, JPEG will always be required.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Turn this on to set this to a specific release mode.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Turn this on to compile tomcrypt with no assembly data. This is a portable mode.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Turn this on to not use the ROLC assembly featurs of tomcrypt.\n\n# If WITH_PORTABLE_TOMCRYPT is ON, this will automatically have no effect.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Turn this option off to not use the GPL exclusive components.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Turn this option off to disable using WAV files with the game.\n\n# Note that it is recommended to keep this on.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Turn this option off to disable using MP3 files with the game.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Turn this option off to disable using OGG files with the game.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Turn this option on to log every segment added or removed.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Turn this option off to disable using FFMEPG.\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Change this number to utilize a different number of jobs for building FFMPEG.\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Turn this option on to enable using the Texture Font Generator.\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Turn this option off to use dynamic linking instead of static linking.\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Developer only option: connect to IRC to report the result. Only use with build servers.\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Builder beware: later versions of ffmpeg may break!\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 21
    },
    "CMake/Modules/FindDirectX.cmake" : {
      "ObjectId" : "bd6495a93e4ac53a3841e8684965bbd3ef152cdd",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# From the CMake wiki, get the DirectX version needed.\n\n# This assumes default directories.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Once loaded, the following are defined:\n\n#  DIRECTX_FOUND\n\n#  DIRECTX_INCLUDE_DIR\n\n#  DIRECTX_LIBRARIES\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: Do not be limited to x86 in the future.\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# TODO: Do not be limited to x86 in the future.\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "CMake/Modules/FindDl.cmake" : {
      "ObjectId" : "eca9b7a6102ec0c24e8201e2cac57a00dcd3cd04",
      "LastModified" : "2015-10-31T14:50:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Stick to traditional approaches here. The following are defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DL_FOUND - The system has the dl library.\n\n# DL_INCLUDE_DIR - The dl include directory.\n\n# DL_LIBRARIES - The library file to link to.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Already in cache, so don't repeat the finding procedures.\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "CMake/Modules/FindFFMPEG.cmake" : {
      "ObjectId" : "9a30433e28cce795e8700a1a31c32d0862f06433",
      "LastModified" : "2015-10-31T14:50:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This was copied from the robotology/ycm project.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindFFMPEG\n\n# ----------\n\n#\n\n# Find the native FFMPEG includes and library\n\n#\n\n# This module defines::\n\n#\n\n#  FFMPEG_INCLUDE_DIR, where to find avcodec.h, avformat.h ...\n\n#  FFMPEG_LIBRARIES, the libraries to link against to use FFMPEG.\n\n#  FFMPEG_FOUND, If false, do not try to use FFMPEG.\n\n#\n\n# also defined, but not for general use are::\n\n#\n\n#   FFMPEG_avformat_LIBRARY, where to find the FFMPEG avformat library.\n\n#   FFMPEG_avcodec_LIBRARY, where to find the FFMPEG avcodec library.\n\n#\n\n# This is useful to do it this way so that we can always add more libraries\n\n# if needed to ``FFMPEG_LIBRARIES`` if ffmpeg ever changes...\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Copyright: 1993-2008 Ken Martin, Will Schroeder, Bill Lorensen\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of YCM, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Originally from VTK project\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set package properties if FeatureSummary was included\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "CMake/Modules/FindIconv.cmake" : {
      "ObjectId" : "79ce26a7725a8877d25646d0e7d72c73531e43bb",
      "LastModified" : "2015-10-31T14:50:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Borrowed from https://github.com/onyx-intl/cmake_modules/blob/master/FindIconv.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find Iconv on the system. When this is done, the following are defined:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ICONV_FOUND - The system has Iconv.\n\n# ICONV_INCLUDE_DIR - The Iconv include directory.\n\n# ICONV_LIBRARIES - The library file to link to.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Already in cache, so don't repeat the finding procedures.\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "CMake/Modules/FindJACK.cmake" : {
      "ObjectId" : "a32cdf1946c12433701d271333a05b0077c179af",
      "LastModified" : "2015-10-31T14:50:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This was borrowed from the gnuradio repository.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find jack-2.6\n\n# Once done this will define\n\n#\n\n#  JACK_FOUND - system has jack\n\n#  JACK_INCLUDE_DIRS - the jack include directory\n\n#  JACK_LIBRARIES - Link these to use jack\n\n#  JACK_DEFINITIONS - Compiler switches required for using jack\n\n#\n\n#  Copyright (c) 2008 Andreas Schneider <mail@cynapses.org>\n\n#  Modified for other libraries by Lasse Kärkkäinen <tronic>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# show the JACK_INCLUDE_DIRS and JACK_LIBRARIES variables only in the advanced view\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "CMake/Modules/FindMad.cmake" : {
      "ObjectId" : "e22995142ceaf6123a4f37cfec7271f453aea115",
      "LastModified" : "2015-10-31T14:50:46Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/Modules/FindOSS.cmake" : {
      "ObjectId" : "681cfbcc1a0ee2a0a1eb6396bea6606cbeb6b304",
      "LastModified" : "2015-10-31T14:50:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copied from marsyas, which is also copied from fqterm.\n\n# Further modifications are done.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/Modules/FindOgg.cmake" : {
      "ObjectId" : "3ad80f5e85a1a48e6bd24c13f31dd4f023e88f52",
      "LastModified" : "2015-10-31T14:50:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Borrowed from code.openhub.net\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Base Io build system\n\n# Written by Jeremy Tregunna <jeremy.tregunna@me.com>\n\n#\n\n# Find libogg.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/Modules/FindPcre.cmake" : {
      "ObjectId" : "493f006329c9fd24e57b5e02827d120aa0036b05",
      "LastModified" : "2015-10-31T14:50:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find pcre using standard tools.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The following will be set:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# PCRE_INCLUDE_DIR\n\n# PCRE_LIBRARY\n\n# PCRE_FOUND\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Properly pass QUIETLY and REQUIRED.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "CMake/Modules/FindPulseAudio.cmake" : {
      "ObjectId" : "6128664c146454aab47e04f7f8872a01dee7b328",
      "LastModified" : "2015-10-31T14:50:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This comes from the PulseAudio QT project.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try to find the PulseAudio library\n\n#\n\n# Once done this will define:\n\n#\n\n#  PULSEAUDIO_FOUND - system has the PulseAudio library\n\n#  PULSEAUDIO_INCLUDE_DIR - the PulseAudio include directory\n\n#  PULSEAUDIO_LIBRARY - the libraries needed to use PulseAudio\n\n#\n\n# Copyright (c) 2008, Matthias Kretz, <kretz@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n\n# There was no COPYING-CMAKE-SCRIPTS file in the repo in question. --wolfman\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 19,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "#  PULSEAUDIO_DEFINITIONS - Compiler switches required for using PulseAudio\n\n#  set(PULSEAUDIO_DEFINITIONS ${PULSEAUDIO_CFLAGS})\n",
        "Line" : 29,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 4
    },
    "CMake/Modules/FindSDL2.cmake" : {
      "ObjectId" : "184ca736ba81fc1b99cb22466ac468bb1ef20fd8",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate SDL2 library\n\n# This module defines\n\n# SDL2_LIBRARY, the name of the library to link against\n\n# SDL2_FOUND, if false, do not try to link to SDL2\n\n# SDL2_INCLUDE_DIR, where to find SDL.h\n\n#\n\n# This module responds to the the flag:\n\n# SDL2_BUILDING_LIBRARY\n\n# If this is defined, then no SDL2main will be linked in because\n\n# only applications need main().\n\n# Otherwise, it is assumed you are building an application and this\n\n# module will attempt to locate and set the the proper link flags\n\n# as part of the returned SDL2_LIBRARY variable.\n\n#\n\n# Don't forget to include SDLmain.h and SDLmain.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDL2main which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL2 library\n\n# (SDL2.dll, libsdl2.so, SDL2.framework, etc).\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2DIR\n\n# used in building SDL2.\n\n# l.e.galup  9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL guidelines.\n\n# Added a search for SDL2main which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL convention\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 73,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 74,
        "CharPositionInLine" : 13
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 75,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDL2main. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDL2main for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 96,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# SDL2 may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MinGW needs an additional library, mwindows\n\n# It's total link flags should look like -lmingw32 -lSDL2main -lSDL2 -lmwindows\n\n# (Actually on second look, I think it only needs one of the m* libraries.)\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# For SDL2main\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# For MinGW library\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 14
    },
    "CMake/Modules/FindVa.cmake" : {
      "ObjectId" : "33bfdc5c647f0c6c19f1e085e5b0202fb48d5097",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the Video Acceleration library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The following will be set:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# VA_INCLUDE_DIR\n\n# VA_LIBRARY\n\n# VA_FOUND\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMake/Modules/FindVorbis.cmake" : {
      "ObjectId" : "558c9b2fc76c7b8cd9f7f18bfdfb507ae8feac13",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Borrowed from code.openhub.net\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Base Io build system\n\n# Written by Jeremy Tregunna <jeremy.tregunna@me.com>\n\n#\n\n# Find libvorbis.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/Modules/FindVorbisFile.cmake" : {
      "ObjectId" : "9043a2203c018a712ac24f4188de46242798c509",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Inspired by Jeremy Tregunna's cmake work <jeremy.tregunna@me.com>\n\n#\n\n# Find libvorbisfile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/Modules/FindXinerama.cmake" : {
      "ObjectId" : "7574dc3e933821d231fdd1066a6a057528a0ea79",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is borrowed from FreeRDP.\n\n# - Find XINERAMA\n\n# Find the XINERAMA libraries\n\n#\n\n#  This module defines the following variables:\n\n#     XINERAMA_FOUND        - true if XINERAMA_INCLUDE_DIR & XINERAMA_LIBRARY are found\n\n#     XINERAMA_LIBRARIES    - Set when XINERAMA_LIBRARY is found\n\n#     XINERAMA_INCLUDE_DIRS - Set when XINERAMA_INCLUDE_DIR is found\n\n#\n\n#     XINERAMA_INCLUDE_DIR  - where to find Xinerama.h, etc.\n\n#     XINERAMA_LIBRARY      - the XINERAMA library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 O.S. Systems Software Ltda.\n\n# Copyright 2011 Otavio Salvador <otavio@ossystems.com.br>\n\n# Copyright 2011 Marc-Andre Moreau <marcandre.moreau@gmail.com>\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#=============================================================================\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/Modules/FindXrandr.cmake" : {
      "ObjectId" : "c2960911d57a7a82266aec82723906b33d087120",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is borrowed from FreeRDP.\n\n# - Find XRANDR\n\n# Find the XRANDR libraries\n\n#\n\n#  This module defines the following variables:\n\n#     XRANDR_FOUND        - true if XRANDR_INCLUDE_DIR & XRANDR_LIBRARY are found\n\n#     XRANDR_LIBRARIES    - Set when XRANDR_LIBRARY is found\n\n#     XRANDR_INCLUDE_DIRS - Set when XRANDR_INCLUDE_DIR is found\n\n#\n\n#     XRANDR_INCLUDE_DIR  - where to find Xrandr.h, etc.\n\n#     XRANDR_LIBRARY      - the XRANDR library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2012 Alam Arias <Alam.GBC@gmail.com>\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#=============================================================================\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/Modules/Findnasm.cmake" : {
      "ObjectId" : "ae7271b060e590309ec8095bb11c7eaeedd1d9a8",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the nasm assembly program.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/Modules/Findyasm.cmake" : {
      "ObjectId" : "fb02c2c3fb3e2eed25c0650f19aff75d5e102a05",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the yasm assembly program.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/SMDefs.cmake" : {
      "ObjectId" : "eebcf6b2f51aa5f684e5ecdff663e7ad516191e9",
      "LastModified" : "2017-10-26T23:24:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set up version numbers according to the new scheme.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build the version strings appropriately.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get timestamps appropriately.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMake/SetupFfmpeg.cmake" : {
      "ObjectId" : "62191ca7a873536d79669c745a958183adc8c8f4",
      "LastModified" : "2018-12-30T08:33:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Borrow from http://stackoverflow.com/q/11845823\n\n# string(SUBSTRING ${SM_FFMPEG_CONFIGURE_EXE} 0 1 FIRST_LETTER)\n\n# string(TOLOWER ${FIRST_LETTER} FIRST_LETTER_LOW)\n\n# string(REPLACE \"${FIRST_LETTER}:\" \"/${FIRST_LETTER_LOW}\" # SM_FFMPEG_CONFIGURE_EXE ${SM_FFMPEG_CONFIGURE_EXE})\n\n# string(REGEX REPLACE \"\\\\\\\\\" \"/\" SM_FFMPEG_CONFIGURE_EXE \"${SM_FFMPEG_CONFIGURE_EXE}\")\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "CMake/SetupOggVorbis.cmake" : {
      "ObjectId" : "6c7f2ad5759bdacad8a2141c7d3305e9c91b1443",
      "LastModified" : "2018-12-30T08:33:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Xcode does this and CMake is somehow aware, but with Unix Makefiles this is\n\n# necessary for the time being.\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# See note above\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "CMake/VerStubUtil.cmake" : {
      "ObjectId" : "fb7f87d585c96a0ddc8b3234f5864022b9f2dd21",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SM_TIMESTAMP_DATE and SM_TIMESTAMP_TIME, needed for the stub, are prepared/generated as we want them in SMDefs\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeLists.txt" : {
      "ObjectId" : "c2beb90ceebdee64875baa64af64be4c7ca76cb4",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The external libraries need to be included.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The internal libraries and eventual executable to be used.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Makefile.am" : {
      "ObjectId" : "408a11fa6f99cdc6cb05b0a598406f2a816fc862",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Need 1.7 for subdir support.  (Well, 1.4 doesn't work, I don't know if anything between does.)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# todo: properly remove data\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "StepmaniaCore.cmake" : {
      "ObjectId" : "d6249382abb72f8dbfaed488db1a1d87ed868ce1",
      "LastModified" : "2018-12-30T08:33:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include the macros and functions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set up helper variables for future configuring.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: Reconsile the OS dependent naming scheme.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Some OS specific helpers.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Allow for finding our libraries in a standard location.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Put the predefined targets in separate groups.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set up the linker flags for MSVC builds.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Determine which projects can be compiled in.\n",
        "Line" : 55,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Checks the standard include directories for c-style headers.\n\n# We may use C++ in this project, but the check works better with plain C headers.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Mostly Windows functions.\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Mostly non-Windows functions.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Mostly universal symbols.\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Checks to make it easier to work with fixed size types.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Dependencies go here.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# TODO: Identify which headers to check for ensuring this will always work.\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# FFMPEG...it can be evil.\n",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# TODO: Better way of determining if OGG is required.\n\n# Also: Keep WITH_OGG checks together.\n",
        "Line" : 285,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Define installer based items for cpack.\n",
        "Line" : 453,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "extern/CMakeLists.txt" : {
      "ObjectId" : "28051c06a8482a17121de4401c2ad85ab9bf6ad6",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extern/CMakeProject-cppformat.cmake" : {
      "ObjectId" : "87a9d3bf37bc97e88559b5216ad4f4346abd6d33",
      "LastModified" : "2018-12-30T08:33:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Unix\n",
        "Line" : 33,
        "CharPositionInLine" : 7
      },
      "CommentCount" : 1
    },
    "extern/CMakeProject-enum-flags.cmake" : {
      "ObjectId" : "f358c925688f377ee26f679605fa8190dcb02b4f",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set_property(TARGET \"enum-flags\" PROPERTY FOLDER \"External Libraries\")\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "extern/CMakeProject-glew.cmake" : {
      "ObjectId" : "413238286a6844a5cff7bde3760b555665b0bc96",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extern/CMakeProject-googletest.cmake" : {
      "ObjectId" : "bb20882025ade212263f6cbe7dc9d7ea8a4bc938",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Explicitly skipping unit test support. No need to report a status on this.\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "extern/CMakeProject-jpeg.cmake" : {
      "ObjectId" : "76b467f901b70ced20bd6e19f4d4ee06aaa49012",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extern/CMakeProject-json.cmake" : {
      "ObjectId" : "d0e28d13aba498322afd7b690a1fa50076deafba",
      "LastModified" : "2018-12-30T08:33:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Unix/Linux\n",
        "Line" : 36,
        "CharPositionInLine" : 7
      },
      "CommentCount" : 1
    },
    "extern/CMakeProject-lua.cmake" : {
      "ObjectId" : "4fe3984807adfc7728d398711256c84d3a5fe8d5",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include_directories(src)\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "extern/CMakeProject-mad.cmake" : {
      "ObjectId" : "1efcca537dfc4f947a3edb4efb9b3fb492a12011",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: Remove the need for this check since it's tied to 32-bit builds from first glance.\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# TODO: Provide a proper define for inline.\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "extern/CMakeProject-mmmagic.cmake" : {
      "ObjectId" : "45b1fd2ba7447b09eedda5cd1de0e5c55615a088",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extern/CMakeProject-ogg.cmake" : {
      "ObjectId" : "cf61849f9e4e94e1a32a1faa1e3c271e1e95cf08",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extern/CMakeProject-pcre.cmake" : {
      "ObjectId" : "69ceefb4065c18e700755315042a9dd65d457f33",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extern/CMakeProject-png.cmake" : {
      "ObjectId" : "1f9ca89dec6b432ccbdf45b61b53083943c1ee47",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extern/CMakeProject-tomcrypt.cmake" : {
      "ObjectId" : "87169fd01aced510fd4e3fcde644ac64b16779e7",
      "LastModified" : "2018-12-30T08:33:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# bit\n",
        "Line" : 201,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# boolean\n",
        "Line" : 207,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# choice\n",
        "Line" : 211,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# generalizedtime\n",
        "Line" : 213,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# ia5\n",
        "Line" : 217,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# integer\n",
        "Line" : 221,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# object_identifier\n",
        "Line" : 225,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# octect\n",
        "Line" : 229,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# printable_string\n",
        "Line" : 233,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# sequence\n",
        "Line" : 237,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# set\n",
        "Line" : 248,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# short_integer\n",
        "Line" : 251,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# teletex_string\n",
        "Line" : 255,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# utctime\n",
        "Line" : 258,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# utf8\n",
        "Line" : 262,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Required since building from the source.\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Required since tommath is a dependency.\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# This was defined behind an always active block.\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Common formulas used by our app.\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Use the full AES encryption items.\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Other definitions we used in the past, but whose meanings are not clear.\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# no MAC (message authentication code) support\n",
        "Line" : 338,
        "CharPositionInLine" : 50
      },
      "CommentCount" : 22
    },
    "extern/CMakeProject-tommath.cmake" : {
      "ObjectId" : "90f53957aa092f9b83db8d0bebe360a7bdbb3896",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extern/CMakeProject-vorbis.cmake" : {
      "ObjectId" : "cfdea7c9a19b0868b260f90087a5b5cdcba0b912",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extern/CMakeProject-vorbisfile.cmake" : {
      "ObjectId" : "5e6b3d060fe4452e0e90c4c4651ff1c1e485f962",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extern/CMakeProject-zlib.cmake" : {
      "ObjectId" : "0ed4184c478943451a7451c37e3e0e8010e5401e",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extern/libpng/include/CMakeLists.txt" : {
      "ObjectId" : "b5117891d64555d3b82ab63902803c8fdea59382",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (C) 2007-2011 Glenn Randers-Pehrson\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This code is released under the libpng license.\n\n# For conditions of distribution and use, see the disclaimer\n\n# and license in png.h\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# workaround CMake 2.4.x bug\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# needed packages\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# not needed on windows\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# COMMAND LINE OPTIONS\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Many more configuration options could be added here\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# SET LIBNAME\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# to distinguish between debug and release lib\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Use the prebuilt pnglibconf.h file from the scripts folder\n\n# TODO: fix this by building with awk; without this no cmake build can be\n\n# configured directly (to do so indirectly use your local awk to build a\n\n# pnglibconf.h in the build directory.)\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# OUR SOURCES\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# SOME NEEDED DEFINITIONS\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# NOW BUILD OUR TARGET\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# msvc does not append 'lib' - do it here to have consistent name\n",
        "Line" : 144,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# does not work without changing name\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# msvc does not append 'lib' - do it here to have consistent name\n",
        "Line" : 156,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# does not work with msvc due to png_lib_ver issue\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "#\n",
        "Line" : 171,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Ensure the CMAKE_LIBRARY_OUTPUT_DIRECTORY is set\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Set a variable with CMake code which:\n\n# Creates a symlink from src to dest (if possible) or alternatively\n\n# copies if different.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# libpng is a library so default to 'lib'\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# CREATE PKGCONFIG FILES\n\n# we use the same files like ./configure, so we have to set its vars\n\n# Only do this on Windows for Cygwin - the files don't make much sense outside\n\n# a UNIX look alike\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# SET UP LINKS\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#   VERSION 15.${PNGLIB_RELEASE}.1.5.10\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# MSVC doesn't use a different file extension for shared vs. static\n\n# libs.  We are able to change OUTPUT_NAME to remove the _static\n\n# for all other platforms.\n",
        "Line" : 234,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# If CMake > 2.4.x, we set a variable used below to export\n\n# targets to an export file.\n\n# TODO: Use VERSION_GREATER after our cmake_minimum_required >= 2.6.2\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# future proof\n",
        "Line" : 249,
        "CharPositionInLine" : 38
      },
      "28" : {
        "Text" : "# INSTALL\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Create a symlink for libpng.dll.a => libpng15.dll.a on Cygwin\n",
        "Line" : 262,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# Install man pages\n",
        "Line" : 308,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Install pkg-config files\n",
        "Line" : 314,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# On versions of CMake that support it, create an export file CMake\n\n# users can include() to import our targets\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# what's with libpng-$VER%.txt and all the extra files?\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# UNINSTALL\n\n# do we need this?\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# DIST\n\n# do we need this?\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# to create msvc import lib for mingw compiled shared lib\n\n# pexports libpng.dll > libpng.def\n\n# lib /def:libpng.def /machine:x86\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 37
    },
    "extern/libpng/include/Makefile.am" : {
      "ObjectId" : "19652c4bdad009ae02b365fb520fe779b3e6f491",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am:\n\n#   Source file for Makefile.in (and hence Makefile)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# libpng does not follow GNU file name conventions\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# \"color-tests\" requires automake 1.11.1 or later.  Enable it if you like,\n\n# to get red \"FAIL\" and green \"PASS\" notations during tests.\n\n# AUTOMAKE_OPTIONS = foreign color-tests\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# test programs - run on make check, make distcheck\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Only do the following if the contrib directory is present.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# man pages\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# generate the -config scripts if required\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# rules to build libpng, only build the old library on request\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# EXTRA_LTLIBRARIES= libpng.la\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#   Versioned symbols and restricted exports\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#   Only restricted exports when possible\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#distribute headers in /usr/include/libpng/*\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# pkg-config stuff, note that libpng.pc is always required in order\n\n# to get the correct library\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#extra source distribution files.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# DFNCPP is normally just CPP - the C preprocessor - but on Solaris and maybe\n\n# other operating systems (NeXT?) the C preprocessor selected by configure\n\n# checks input tokens for validity - effectively it performs part of the ANSI-C\n\n# parsing - and therefore fails with the .df files.  configure.ac has special\n\n# checks for this and sets DFNCPP appropriately.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# The following is necessary to ensure that the local pnglibconf.h is used, not\n\n# an installed one (this can happen immediately after on a clean system if\n\n# 'make test' is the first thing the user does.)\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# We must use -DPNG_NO_USE_READ_MACROS here even when the library may actually\n\n# be built with PNG_USE_READ_MACROS; this prevents the read macros from\n\n# interfering with the symbol file format.\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#include \"$<\"' >dfn.c\n",
        "Line" : 146,
        "CharPositionInLine" : 7
      },
      "18" : {
        "Text" : "# The .dfn file for pnglibconf.h is machine generated\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Symbol checks (.def and .out files should match)\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# used on demand to regenerate the standard header, CPPFLAGS should\n\n# be empty - no non-standard defines\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Extra checks\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Don't distribute the generated script files\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# install the .../include headers as links to the new ones\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# do evil things to libpng to cause libpng@PNGLIB_MAJOR@@PNGLIB_MINOR@ to be used\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25,
      "Errorlog" : "line 149:63 token recognition error at: '\\1'\n"
    },
    "extern/mad-0.15.1b/Makefile.am" : {
      "ObjectId" : "5d576a99f1bebc483ba3836fceb4fa6e2fce94d5",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##\r\n\n## libmad - MPEG audio decoder library\r\n\n## Copyright (C) 2000-2004 Underbit Technologies, Inc.\r\n\n##\r\n\n## This program is free software; you can redistribute it and/or modify\r\n\n## it under the terms of the GNU General Public License as published by\r\n\n## the Free Software Foundation; either version 2 of the License, or\r\n\n## (at your option) any later version.\r\n\n##\r\n\n## This program is distributed in the hope that it will be useful,\r\n\n## but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n\n## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n\n## GNU General Public License for more details.\r\n\n##\r\n\n## You should have received a copy of the GNU General Public License\r\n\n## along with this program; if not, write to the Free Software\r\n\n## Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\r\n\n##\r\n\n## $Id: Makefile.am 8581 2004-02-18 04:36:30Z gmaynard $\r\n\n##\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Process this file with automake to produce Makefile.in\r\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#synth_mmx.S\r\n",
        "Line" : 52,
        "CharPositionInLine" : 40
      },
      "3" : {
        "Text" : "## From the libtool documentation on library versioning:\r\n\n##\r\n\n## CURRENT\r\n\n##      The most recent interface number that this library implements.\r\n\n##\r\n\n## REVISION\r\n\n##      The implementation number of the CURRENT interface.\r\n\n##\r\n\n## AGE\r\n\n##      The difference between the newest and oldest interfaces that this\r\n\n##      library implements.  In other words, the library implements all the\r\n\n##      interface numbers in the range from number `CURRENT - AGE' to\r\n\n##      `CURRENT'.\r\n\n##\r\n\n##    If two libraries have identical CURRENT and AGE numbers, then the\r\n\n## dynamic linker chooses the library with the greater REVISION number.\r\n\n##\r\n\n##   1. Start with version information of `0:0:0' for each libtool library.\r\n\n##\r\n\n##   2. Update the version information only immediately before a public\r\n\n##      release of your software.  More frequent updates are unnecessary,\r\n\n##      and only guarantee that the current interface number gets larger\r\n\n##      faster.\r\n\n##\r\n\n##   3. If the library source code has changed at all since the last\r\n\n##      update, then increment REVISION (`C:R:A' becomes `C:r+1:A').\r\n\n##\r\n\n##   4. If any interfaces have been added, removed, or changed since the\r\n\n##      last update, increment CURRENT, and set REVISION to 0.\r\n\n##\r\n\n##   5. If any interfaces have been added since the last public release,\r\n\n##      then increment AGE.\r\n\n##\r\n\n##   6. If any interfaces have been removed since the last public release,\r\n\n##      then set AGE to 0.\r\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# *define  *\\(HAVE_.*_ASM\\).*/# define \\1/p'  \\\r\n\t\tconfig.h; echo;  \\\r\n\tsed -ne 's/^# *define  *OPT_\\(SPEED\\|ACCURACY\\).*/# define OPT_\\1/p'  \\\r\n\t\tconfig.h; echo;  \\\r\n\tsed -ne 's/^# *define  *\\(SIZEOF_.*\\)/# define \\1/p'  \\\r\n\t\tconfig.h; echo;  \\\r\n\tfor header in $(exported_headers); do  \\\r\n\t\techo;  \\\r\n\t\tsed -n -f $(srcdir)/mad.h.sed $(srcdir)/$$header;  \\\r\n\tdone; echo;  \\\r\n\techo \"# ifdef __cplusplus\";  \\\r\n\techo '}';  \\\r\n\techo \"# endif\") >$@\r\n",
        "Line" : 116,
        "CharPositionInLine" : 13
      },
      "CommentCount" : 5
    },
    "extern/newogg/Makefile.am" : {
      "ObjectId" : "f7c680b01686968b09dd30d05617434448c4a4e1",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#AUTOMAKE_OPTIONS = foreign 1.6 dist-zip\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "extern/newogg/doc/Makefile.am" : {
      "ObjectId" : "3dd47b92c89ff6993566901c2b0ac98962cfadf6",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this with automake to create Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "extern/newogg/doc/libogg/Makefile.am" : {
      "ObjectId" : "4007907a9ccca7812da69d911cdf0c3f07617830",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "extern/newogg/include/Makefile.am" : {
      "ObjectId" : "0084e4d8298a2ec161888420af70ba0f1f3cc778",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "extern/newogg/include/ogg/Makefile.am" : {
      "ObjectId" : "142699d35608e1bbe175746ef0073f8f2e01fb61",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "extern/newogg/src/Makefile.am" : {
      "ObjectId" : "b207e7865bfce7ca6cece9b2747b128754d32198",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# build and run the self tests on 'make check'\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "extern/newvorbis/Makefile.am" : {
      "ObjectId" : "e05d521ae98e9accaa63d99ae20ce647150b966f",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#AUTOMAKE_OPTIONS = 1.7 foreign dist-zip dist-bzip2\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "extern/newvorbis/doc/Makefile.am" : {
      "ObjectId" : "cfc9bbca07cb3da5490a160984c836cece6351ad",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this with automake to create Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### all of the static docs, commited to SVN and included as is\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# bits needed by the spec\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# conditionally make the generated documentation\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# these are expensive; only remove if we have to\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# explicit rules for generating docs\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "extern/newvorbis/doc/libvorbis/Makefile.am" : {
      "ObjectId" : "0bcc135b75d8069ecea9180f9672f28a7323d611",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "extern/newvorbis/doc/vorbisenc/Makefile.am" : {
      "ObjectId" : "bbab3c5ba4b0586181badf250fef2ae1fa8b88e9",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "extern/newvorbis/doc/vorbisfile/Makefile.am" : {
      "ObjectId" : "fb27d44ae8a4fbfdc7df92de8e4f149b6521fe70",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "extern/newvorbis/examples/Makefile.am" : {
      "ObjectId" : "45189763e468b857c071d2c3bdd87f86e4cab771",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# uncomment to build static executables from the example code\n\n#LDFLAGS = -all-static \n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "extern/newvorbis/include/Makefile.am" : {
      "ObjectId" : "0f34fab4ca61c0ef3f650a643f53286d532ab09f",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "extern/newvorbis/include/vorbis/Makefile.am" : {
      "ObjectId" : "dbba34e55974a19203f0c094e91a3ed69298e150",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "extern/newvorbis/lib/Makefile.am" : {
      "ObjectId" : "50f7ea4f293e79bfab4a5f8bb307a8f24435686c",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# build and run the self tests on 'make check'\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#vorbis_selftests = test_codebook test_sharedbook\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#test_codebook_SOURCES = codebook.c\n\n#test_codebook_CFLAGS = -D_V_SELFTEST\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# recurse for alternate targets\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "extern/newvorbis/lib/books/Makefile.am" : {
      "ObjectId" : "3697a7177ec1c115ccd1ef4e9412ce8c6bf08f39",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "extern/newvorbis/lib/books/coupled/Makefile.am" : {
      "ObjectId" : "1115201dd09248cd89d8b7af0fbe89cef2236e3d",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "extern/newvorbis/lib/books/floor/Makefile.am" : {
      "ObjectId" : "272ab1a28c68d4f0393a7cd41ba6f1f50f4f85fc",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "extern/newvorbis/lib/books/uncoupled/Makefile.am" : {
      "ObjectId" : "93ff417c8f13e5a4eff7884acc146cc2f153ac92",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "extern/newvorbis/lib/modes/Makefile.am" : {
      "ObjectId" : "5c7ffefaa4a66ac02e8ab68a422e435887e87e9a",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "extern/newvorbis/m4/Makefile.am" : {
      "ObjectId" : "cd184850f71e5db41c307fbdfcedb3f86edb9056",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "extern/newvorbis/test/Makefile.am" : {
      "ObjectId" : "d92237434db9b8008501d03f5fdceb7f4b3f7690",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "extern/newvorbis/vq/Makefile.am" : {
      "ObjectId" : "6fd105c5c0b157100d950f4f50392a6bb5f363ae",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "extern/zlib/CMakeLists.txt" : {
      "ObjectId" : "a64fe0b2cae5790b2a20ff30898f31919cf5767f",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clear variable\n",
        "Line" : 40,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\n\n# in their source tree...\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This gets us DLL resource information when compiling on MinGW.\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# This property causes shared libraries on Linux to have the full version\n\n# encoded into their final filename.  We disable this on Cygwin because\n\n# it causes cygz-${ZLIB_FULL_VERSION}.dll to be created when cygz.dll\n\n# seems to be the default.\n\n#\n\n# This has no effect with MSVC, on that platform the version info for\n\n# the DLL comes from the resource file win32/zlib1.rc\n",
        "Line" : 139,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# On unix-like platforms the library is almost always called libz\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Creates zlib1.dll when building shared library version\n",
        "Line" : 153,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#============================================================================\n\n# Example binaries\n\n#============================================================================\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "src/CMakeData-actor.cmake" : {
      "ObjectId" : "454552681439eeb258f2eec7012c31759c7f4de4",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeData-arch.cmake" : {
      "ObjectId" : "764058a251ae14ebdfab51233ff9ba1c2319770a",
      "LastModified" : "2018-12-30T08:33:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Unix\n",
        "Line" : 74,
        "CharPositionInLine" : 7
      },
      "1" : {
        "Text" : "# Unix\n",
        "Line" : 141,
        "CharPositionInLine" : 7
      },
      "2" : {
        "Text" : "# TODO: Confirm if Apple can use the export.\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Unix/Linux\n",
        "Line" : 389,
        "CharPositionInLine" : 7
      },
      "CommentCount" : 4
    },
    "src/CMakeData-data.cmake" : {
      "ObjectId" : "353e4d118c261e6dfdf0aceba0af1fef6230a0d4",
      "LastModified" : "2018-12-30T08:33:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeData-file-types.cmake" : {
      "ObjectId" : "8ab96a3deb6bc19dbc3cba06f8446ffbdb896abc",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeData-globals.cmake" : {
      "ObjectId" : "d1b2736600be5acdebdd50896fcb55d6a6f3a326",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: Refactor into separate main project.\n",
        "Line" : 5,
        "CharPositionInLine" : 18
      },
      "1" : {
        "Text" : "# TODO: Have this be auto-generated.\n",
        "Line" : 13,
        "CharPositionInLine" : 18
      },
      "2" : {
        "Text" : "# TODO: Refactor into separate main project.\n",
        "Line" : 15,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 3
    },
    "src/CMakeData-gtk.cmake" : {
      "ObjectId" : "81e279ddd45b4e3a6e9bf0f974076229ddc7073b",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# It is normally not appropriate to set the prefix to the empty string.\n\n# This is to maintain compatibility with the current source.\n\n# At some point, it may be worth being more flexible.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/CMakeData-os.cmake" : {
      "ObjectId" : "fee0dc7dcfdd85178e118071cf7e65f1b5734a4b",
      "LastModified" : "2018-12-30T08:33:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# precompiled header.\n",
        "Line" : 26,
        "CharPositionInLine" : 37
      },
      "1" : {
        "Text" : "# Unix\n",
        "Line" : 92,
        "CharPositionInLine" : 9
      },
      "2" : {
        "Text" : "# TODO: X11 check, crash handler check\n",
        "Line" : 93,
        "CharPositionInLine" : 30
      },
      "CommentCount" : 3
    },
    "src/CMakeData-rage.cmake" : {
      "ObjectId" : "fc7e71d8f5c2f00cc5516589fec0356d4a475b99",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: Turn Rage into a libary.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: Remove the need for this and replace with c++11 smart pointers\n",
        "Line" : 15,
        "CharPositionInLine" : 23
      },
      "CommentCount" : 2
    },
    "src/CMakeData-screen.cmake" : {
      "ObjectId" : "51c51bb469caa7aaa528034e0ccb9a8c34be9447",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeData-singletons.cmake" : {
      "ObjectId" : "36569297932c928fe82adc4cc52c8b97f9ca1c46",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "a5d8db6b992c5d71b2a3ef544f0da326cd5fa7d5",
      "LastModified" : "2018-12-30T08:33:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the mapconv program of the past to allow for debugging information.\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Keep the module path local for easier grabbing.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Main project is below.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Configure generated files here.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TODO: Make this actually be data and not an executable.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Required for usage of tomcrypt and tommath.\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Compilation flags per project here.\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# TODO: Find a way to do this cleanly for non MSVC users.\n",
        "Line" : 148,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# TODO: Remove this potential duplicate.\n",
        "Line" : 172,
        "CharPositionInLine" : 55
      },
      "9" : {
        "Text" : "# TODO: Look into a better way for custom commands to reduce duplication.\n",
        "Line" : 186,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Attempt to allow generating a stack trace.\n",
        "Line" : 191,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Copy the SDL2.dll\n",
        "Line" : 193,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Allow for getting a virtualdub stack trace.\n",
        "Line" : 198,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# Add the ability to copy the resource file.\n",
        "Line" : 284,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Linux\n",
        "Line" : 291,
        "CharPositionInLine" : 7
      },
      "15" : {
        "Text" : "# used only in the ArchHooks_Unix.cpp file\n",
        "Line" : 303,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# The misc libraries are here.\n",
        "Line" : 390,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# The following were removed from SMDATA_LINK_LIB to \"match\" StepMania's pbxproj.\n",
        "Line" : 437,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "#    ${MAC_FRAME_APPKIT}\n\n#    ${MAC_FRAME_FOUNDATION}\n\n#    \"ffmpeg\"\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Unix / Linux\n",
        "Line" : 481,
        "CharPositionInLine" : 7
      },
      "20" : {
        "Text" : "# TODO: Remember to find and locate the zip archive files.\n",
        "Line" : 482,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# No mention of OSS libraries.\n",
        "Line" : 544,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# PACKAGE_NAME and PACKAGE_VERSION are only used in this scenario. Why is not clear.\n\n# TODO: Remove this silliness.\n",
        "Line" : 550,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Hardcoding the values for now since the foreach loop is not working as intended.\n",
        "Line" : 688,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# foreach(SM_WINDOW_DLL \"${SM_WINDOWS_PROGRAM_DLLS}\")\n\n#   install(FILES \"${SM_WINDOW_DLL}\" DESTINATION \"${SM_INSTALL_DESTINATION}\")\n\n# endforeach()\n",
        "Line" : 700,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 25
    },
    "src/CMakeProject-irc.cmake" : {
      "ObjectId" : "d444654e4a7da0b53f86ecabd9d560120a44af48",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeProject-mapconv.cmake" : {
      "ObjectId" : "a602eb214a64527be739bf2843217c77e657f34d",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeProject-rage-test.cmake" : {
      "ObjectId" : "984f1d6e3540608c6b4f49ef26578e552bc4e63f",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeProject-rage.cmake" : {
      "ObjectId" : "32f581e45117de17f8f4253627ec6aea848d96cf",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeProject-texture.cmake" : {
      "ObjectId" : "e4cee5f123021cc1fe6bdc278926f68d2459216e",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Makefile.am" : {
      "ObjectId" : "9a2d5cc491bc0e4bf7df4db17cb70d911a9b97e9",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Windows resource files\n\n# Using $^ here makes it add .dirstamp garbage as well. So just the first file please.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Do not install stepmania in the traditional way.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Relax inlining; the default of 600 takes way too long to compile and\n\n# generates enormous output.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Header inclusion necessary to get linker symbols right\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ===================================\n\n# (Potentially) multiplatform drivers\n\n# ===================================\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# XXX We need a GTK DialogDriver for Linux\n",
        "Line" : 263,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Yes, really. MinGW provides pthread.\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# InputHandler_X11 depends on LowLevelWindow_X11\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# =========================\n\n# Platform-specific drivers\n\n# =========================\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add this to AM_CXXFLAGS, not stepmania_CXXFLAGS: that'll cause multiple copies of\n\n# several sources to be built. We link to this at runtime, so don't add ALSA_LDFLAGS.\n",
        "Line" : 317,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# =========================================\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# XXX We may want to ditch DirectShow in favor of using ffmpeg on all platforms.\n\n# FIXME BROKEN\n\n# MovieTexture += arch/MovieTexture/MovieTexture_DShow.cpp arch/MovieTexture/MovieTexture_DShow.h \\\n #\tarch/MovieTexture/MovieTexture_DShowHelper.cpp arch/MovieTexture/MovieTexture_DShowHelper.h\n",
        "Line" : 385,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# XXX: Do we want to detect DirectX SDK and selectively enable DirectX drivers?\n",
        "Line" : 390,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# FIXME: BROKEN\n\n# \tarch/Sound/RageSoundDriver_WDMKS.cpp arch/Sound/RageSoundDriver_WDMKS.h\n",
        "Line" : 400,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Compile NetworkSyncManager even if networking is disabled; it'll stub itself.\n",
        "Line" : 604,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "#-I$(top_srcdir)/extern/glew-1.5.8/include\n",
        "Line" : 721,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#TESTS += test_notedata\n\n#test_notedata_SOURCES = \\\n#\t\t$(all_test_SOURCES) \\\n#\t\ttests/test_notedata.cpp \\\n#\t\tNoteData.cpp NoteData.h NoteDataUtil.cpp NoteDataUtil.h \\\n#\t\tNewNoteData.cpp NewNoteData.h \\\n#\t\tNoteTypes.cpp NoteTypes.h \\\n#\t\tTimingData.cpp TimingData.h\n",
        "Line" : 837,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#NewNoteDataUtil.cpp NewNoteDataUtil.h\n",
        "Line" : 845,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18,
      "Errorlog" : "line 34:52 token recognition error at: '\\1'\n"
    },
    "src/smpackage/ZipArchive/Linux/Makefile" : {
      "ObjectId" : "3afd97a2cc00fed023157c96821c799421e4f06c",
      "LastModified" : "2016-11-22T20:06:55Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for ZipArchive library\r\n\n# Copyright (C) 2000-2003 Tadeusz Dracz\r\n\n# For conditions of distribution and use, see copyright notice in License.txt\r\n\n# To install to /usr/lib and /usr/include, type:\r\n\n#    make install\r\n\n# to install to a different directory change prefix\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#FLAGSD = -g\r\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#OBJSZLIB = zlib/adler32.o zlib/compress.o zlib/crc32.o zlib/uncompr.o zlib/deflate.o zlib/trees.o \\\r\nzlib/zutil.o zlib/inflate.o zlib/infblock.o zlib/inftrees.o zlib/infcodes.o zlib/infutil.o zlib/inffast.o\r\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\t$(CC) -I$(zipardir) $(FLAGSD) -o zippie ZIPPIELOCATION)zippie.cpp $(ZIPPIELOCATION)CmdLine.cpp -lstdc++ -lziparch\r\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    }
  },
  "FileTypes" : {
    "CMAKE" : 63,
    "MAKEFILE" : 1,
    "AUTOMAKE" : 27
  },
  "ElapsedTime" : 6655
}