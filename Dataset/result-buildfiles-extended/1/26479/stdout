{
  "Repository" : "26479",
  "Revision" : "HEAD",
  "ObjectId" : "f6b9d9e0689871226d671fb641698974e3f38762",
  "CommitTime" : "2019-03-29T10:35:30Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "f4ba1da74f49a2293327fa1415a19c0b57af6914",
      "LastModified" : "2018-07-24T02:15:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Some tweak parameters\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# defines\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# pkg-config\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "CMakeModules/FindBoehmGC.cmake" : {
      "ObjectId" : "bdb7240e6d8c4805ec600f033d9e0985fd0fa4f1",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Boehm GC\n\n#   Once done, this will define\n\n#\n\n#   BOEHM_GC_FOUND - system has Boehm GC\n\n#   BOEHM_GC_INCLUDE_DIR - the Boehm GC include directories\n\n#   BOEHM_GC_LIBRARIES - link these to use Boehm GC\n\n# \n\n#   Copyright (c) 2010-2015  Takashi Kato <ktakashi@ymail.com>\n\n# \n\n#   Redistribution and use in source and binary forms, with or without\n\n#   modification, are permitted provided that the following conditions\n\n#   are met:\n\n# \n\n#   1. Redistributions of source code must retain the above copyright\n\n#      notice, this list of conditions and the following disclaimer.\n\n# \n\n#   2. Redistributions in binary form must reproduce the above copyright\n\n#      notice, this list of conditions and the following disclaimer in the\n\n#      documentation and/or other materials provided with the distribution.\n\n# \n\n#   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n#   \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n#   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n#   A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n#   OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n#   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n\n#   TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\n#   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\n#   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\n#   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n#   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n# \n\n#  $Id: $\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake module to find Boehm GC\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# use pkg-config if available\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# try newer one first in case of gc.h is overwritten.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# For FreeBSD we need to use gc-threaded\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# checks if 'gc' supports 'GC_get_parallel' and if it does\n\n# then use it\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# not sure if this links properly...\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# bdw-gc-threaded is the proper name for FreeBSD pkg-config\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# OK just use it\n",
        "Line" : 87,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# OpenSolaris uses bgc as Boehm GC runtime in its package manager.\n\n# so try it\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "CMakeModules/FindCairo.cmake" : {
      "ObjectId" : "cea95b9f2a03bb050be15b904606574c4679adaf",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Cairo\n\n# Once done, this will define\n\n#\n\n#  CAIRO_FOUND - system has Cairo\n\n#  CAIRO_INCLUDE_DIRS - the Cairo include directories\n\n#  CAIRO_LIBRARIES - link these to use Cairo\n\n#\n\n# Copyright (C) 2012 Raphael Kubo da Costa <rakuco@webkit.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# 1.  Redistributions of source code must retain the above copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n# 2.  Redistributions in binary form must reproduce the above copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND ITS CONTRIBUTORS ``AS\n\n# IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n\n# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\n# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR ITS\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\n# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\n# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n\n# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n\n# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n\n# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeModules/FindGCrypt.cmake" : {
      "ObjectId" : "762a59c32647121c440548ca1be87a9bb344e917",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GCrypt\n\n# Once done this will define\n\n#\n\n#  GCRYPT_FOUND - system has GCrypt\n\n#  GCRYPT_INCLUDE_DIRS - the GCrypt include directory\n\n#  GCRYPT_LIBRARIES - Link these to use GCrypt\n\n#  GCRYPT_DEFINITIONS - Compiler switches required for using GCrypt\n\n#\n\n#=============================================================================\n\n#  Copyright (c) 2009-2011 Andreas Schneider <asn@cryptomilk.org>\n\n#\n\n#  Distributed under the OSI-approved BSD License (the \"License\");\n\n#  see accompanying file Copyright.txt for details.\n\n#\n\n#  This software is distributed WITHOUT ANY WARRANTY; without even the\n\n#  implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n#  See the License for more information.\n\n#=============================================================================\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# show the GCRYPT_INCLUDE_DIRS and GCRYPT_LIBRARIES variables only in the advanced view\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeModules/FindGnuTLS.cmake" : {
      "ObjectId" : "7315f1dd44007a369e6878e51e70664557514d20",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the GNU Transport Layer Security library (gnutls)\n\n#\n\n# Once done this will define\n\n#\n\n#  GNUTLS_FOUND - System has gnutls\n\n#  GNUTLS_INCLUDE_DIR - The gnutls include directory\n\n#  GNUTLS_LIBRARIES - The libraries needed to use gnutls\n\n#  GNUTLS_DEFINITIONS - Compiler switches required for using gnutls\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2009 Philip Lowman <philip@yhbt.com>\n\n# Copyright 2009 Brad Hards <bradh@kde.org>\n\n# Copyright 2006 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Note that this doesn't try to find the gnutls-extra package.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# in cache already\n",
        "Line" : 30,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# try using pkg-config to get the directories and then use these values\n\n# in the find_path() and find_library() calls\n\n# also fills in GNUTLS_DEFINITIONS, although that isn't normally useful\n",
        "Line" : 35,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set GNUTLS_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "CMakeModules/FindHiRedis.cmake" : {
      "ObjectId" : "757baa7d72eaae5c41d3e7a198b82eddfd37b463",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Redis client db (hiredis from https://github.com/antirez/hiredis)\n\n# Find the hiredis includes and client library\n\n# This module defines\n\n#  HIREDIS_INCLUDE_DIR, where to find hiredis/hiredis.h\n\n#  HIREDIS_LIBRARIES, the libraries needed to use redis.\n\n#  HIREDIS_FOUND, If false, do not try to use redis.\n\n#\n\n# Copyright (c) 2012, Lothar Braun, <braun@net.in.tum.de>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add the redis include paths here\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeModules/FindLibEv.cmake" : {
      "ObjectId" : "712251c78db8c66bf0c3b2619716565ad052890f",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LibEv\n\n# Once done this will define\n\n#\n\n#  LIBEV_FOUND - system has libev\n\n#  LIBEV_INCLUDE_DIR - the libev include directory\n\n#  LIBEV_LIBRARIES - Link these to use libev\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# show the LIBEV_INCLUDE_DIRS and LIBEV_LIBRARIES variables only in the advanced view\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeModules/FindLibEvent.cmake" : {
      "ObjectId" : "dce5052050a8b65d1b80480788175f15b8e6e01b",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find libevent\n\n# Find the native libevent includes and library.\n\n# Once done this will define\n\n#\n\n#  LIBEVENT_INCLUDE_DIRS - where to find event2/event.h, etc.\n\n#  LIBEVENT_LIBRARIES    - List of libraries when using libevent.\n\n#  LIBEVENT_FOUND        - True if libevent found.\n\n#\n\n#  LIBEVENT_VERSION_STRING - The version of libevent found (x.y.z)\n\n#  LIBEVENT_VERSION_MAJOR  - The major version\n\n#  LIBEVENT_VERSION_MINOR  - The minor version\n\n#  LIBEVENT_VERSION_PATCH  - The patch version\n\n#\n\n# Avaliable components:\n\n#  core\n\n#  pthreads\n\n#  extra\n\n#  openssl\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Read and parse libevent version header file for version number\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBEVENT_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMakeModules/FindLibXml2.cmake" : {
      "ObjectId" : "73224286d951f9090000b44f5dbd87001f0c9481",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindLibXml2\n\n# -----------\n\n#\n\n# Try to find the LibXml2 xml processing library\n\n#\n\n# Once done this will define\n\n#\n\n# ::\n\n#\n\n#   LIBXML2_FOUND - System has LibXml2\n\n#   LIBXML2_INCLUDE_DIR - The LibXml2 include directory\n\n#   LIBXML2_LIBRARIES - The libraries needed to use LibXml2\n\n#   LIBXML2_DEFINITIONS - Compiler switches required for using LibXml2\n\n#   LIBXML2_XMLLINT_EXECUTABLE - The XML checking tool xmllint coming with LibXml2\n\n#   LIBXML2_VERSION_STRING - the version of LibXml2 found (since CMake 2.8.8)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2006 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the find_path() and find_library() calls\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# for backwards compat. with KDE 4.0.x:\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBXML2_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "CMakeModules/FindPAM.cmake" : {
      "ObjectId" : "25307bd3c3ae94b97137f635fa969509695d4a91",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the PAM libraries\n\n# Once done this will define\n\n#\n\n#  PAM_FOUND - system has pam\n\n#  PAM_INCLUDE_DIR - the pam include directory\n\n#  PAM_LIBRARIES - libpam library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 9,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# darwin claims to be something special\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# XXX does this work with plain c?\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "CMakeModules/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "1acb021e80bc2d47ce0de0ad99871fd2b4aa7984",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(<name> ... )\n\n#\n\n# This function is intended to be used in FindXXX.cmake modules files.\n\n# It handles the REQUIRED, QUIET and version-related arguments to FIND_PACKAGE().\n\n# It also sets the <UPPERCASED_NAME>_FOUND variable.\n\n# The package is considered found if all variables <var1>... listed contain\n\n# valid results, e.g. valid filepaths.\n\n#\n\n# There are two modes of this function. The first argument in both modes is\n\n# the name of the Find-module where it is called (in original casing).\n\n#\n\n# The first simple mode looks like this:\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(<name> (DEFAULT_MSG|\"Custom failure message\") <var1>...<varN> )\n\n# If the variables <var1> to <varN> are all valid, then <UPPERCASED_NAME>_FOUND\n\n# will be set to TRUE.\n\n# If DEFAULT_MSG is given as second argument, then the function will generate\n\n# itself useful success and error messages. You can also supply a custom error message\n\n# for the failure case. This is not recommended.\n\n#\n\n# The second mode is more powerful and also supports version checking:\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME [REQUIRED_VARS <var1>...<varN>]\n\n#                                           [VERSION_VAR   <versionvar>\n\n#                                           [CONFIG_MODE]\n\n#                                           [FAIL_MESSAGE \"Custom failure message\"] )\n\n#\n\n# As above, if <var1> through <varN> are all valid, <UPPERCASED_NAME>_FOUND\n\n# will be set to TRUE.\n\n# After REQUIRED_VARS the variables which are required for this package are listed.\n\n# Following VERSION_VAR the name of the variable can be specified which holds\n\n# the version of the package which has been found. If this is done, this version\n\n# will be checked against the (potentially) specified required version used\n\n# in the find_package() call. The EXACT keyword is also handled. The default\n\n# messages include information about the required version and the version\n\n# which has been actually found, both if the version is ok or not.\n\n# Use the option CONFIG_MODE if your FindXXX.cmake module is a wrapper for\n\n# a find_package(... NO_MODULE) call, in this case all the information\n\n# provided by the config-mode of find_package() will be evaluated\n\n# automatically.\n\n# Via FAIL_MESSAGE a custom failure message can be specified, if this is not\n\n# used, the default message will be displayed.\n\n#\n\n# Example for mode 1:\n\n#\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(LibXml2  DEFAULT_MSG  LIBXML2_LIBRARY LIBXML2_INCLUDE_DIR)\n\n#\n\n# LibXml2 is considered to be found, if both LIBXML2_LIBRARY and\n\n# LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.\n\n# If it is not found and REQUIRED was used, it fails with FATAL_ERROR,\n\n# independent whether QUIET was used or not.\n\n# If it is found, success will be reported, including the content of <var1>.\n\n# On repeated Cmake runs, the same message won't be printed again.\n\n#\n\n# Example for mode 2:\n\n#\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(BISON  REQUIRED_VARS BISON_EXECUTABLE\n\n#                                             VERSION_VAR BISON_VERSION)\n\n# In this case, BISON is considered to be found if the variable(s) listed\n\n# after REQUIRED_VAR are all valid, i.e. BISON_EXECUTABLE in this case.\n\n# Also the version of BISON will be checked by using the version contained\n\n# in BISON_VERSION.\n\n# Since no FAIL_MESSAGE is given, the default messages will be printed.\n\n#\n\n# Another example for mode 2:\n\n#\n\n#    FIND_PACKAGE(Automoc4 QUIET NO_MODULE HINTS /opt/automoc4)\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(Automoc4  CONFIG_MODE)\n\n# In this case, FindAutmoc4.cmake wraps a call to FIND_PACKAGE(Automoc4 NO_MODULE)\n\n# and adds an additional search directory for automoc4.\n\n# The following FIND_PACKAGE_HANDLE_STANDARD_ARGS() call produces a proper\n\n# success/error message.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# internal helper macro\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# internal helper macro to generate the failure message when used in CONFIG_MODE:\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# <name>_CONFIG is set, but FOUND is false, this means that some other of the REQUIRED_VARS was not found:\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# If _CONSIDERED_CONFIGS is set, the config-file has been found, but no suitable version.\n\n# List them all in the error message:\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Simple case: No Config-file was found at all:\n",
        "Line" : 120,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# set up the arguments for CMAKE_PARSE_ARGUMENTS and check whether we are in\n\n# new extended or in the \"old\" mode:\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# now that we collected all arguments, process them\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# In config-mode, we rely on the variable <package>_CONFIG, which is set by find_package()\n\n# when it successfully found the config-file, including version checking:\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# collect all variables which were not found, so they can be printed, so the\n\n# user knows better what went wrong (#6375)\n",
        "Line" : 177,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# check if all passed variables are valid\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# version handling:\n",
        "Line" : 193,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# exact version required\n",
        "Line" : 201,
        "CharPositionInLine" : 44
      },
      "14" : {
        "Text" : "# minimum version specified:\n",
        "Line" : 209,
        "CharPositionInLine" : 44
      },
      "15" : {
        "Text" : "# if the package was not found, but a version was given, add that to the output:\n",
        "Line" : 220,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# print the result:\n",
        "Line" : 241,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 17
    },
    "CMakeModules/FindSQLite3.cmake" : {
      "ObjectId" : "77b8eb4e821053f734846adc2ec6b409fc1b205a",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Sqlite3\n\n# Once done this will define\n\n#\n\n#  SQLITE3_FOUND - system has Sqlite3\n\n#  SQLITE3_INCLUDE_DIRS - the Sqlite3 include directory\n\n#  SQLITE3_LIBRARIES - Link these to use Sqlite3\n\n#  SQLITE3_DEFINITIONS - Compiler switches required for using Sqlite3\n\n#\n\n#  Copyright (c) 2008 Andreas Schneider <mail@cynapses.org>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# show the SQLITE3_INCLUDE_DIRS and SQLITE3_LIBRARIES variables only in the advanced view\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "CMakeModules/FindSystemd.cmake" : {
      "ObjectId" : "09d60115035a0ec1852dd2db8003f0aadcb5e05a",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindSystemd\n\n# -------\n\n#\n\n# Find Systemd library\n\n#\n\n# Try to find Systemd library on UNIX systems. The following values are defined\n\n#\n\n# ::\n\n#\n\n#   SYSTEMD_FOUND         - True if Systemd is available\n\n#   SYSTEMD_INCLUDE_DIRS  - Include directories for Systemd\n\n#   SYSTEMD_LIBRARIES     - List of libraries for Systemd\n\n#   SYSTEMD_DEFINITIONS   - List of definitions for Systemd\n\n#\n\n#=============================================================================\n\n# Copyright (c) 2015 Jari Vetoniemi\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CPackConfig.cmake" : {
      "ObjectId" : "5aebe3ecda83ea1a05fd551df16e7be579e7b8eb",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "f80f80aedd90865d55e03dc8645af6d7de3c55b0",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/basic/CMakeLists.txt" : {
      "ObjectId" : "cc50daeec0176cc9e313937e0ce46a6f772f3f7a",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/boehm-gc/CMakeLists.txt" : {
      "ObjectId" : "6e3075a566fa7c8bb215019495286e8b58e4b8c9",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/cairo/CMakeLists.txt" : {
      "ObjectId" : "cfe1e1c978363ba5fcbf220b32ba07f1dbc5b5f9",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/cpp/CMakeLists.txt" : {
      "ObjectId" : "4928fcfb2e4d9de42cb4ee0d1368bc982fc60a39",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/fileserver/CMakeLists.txt" : {
      "ObjectId" : "df38f64e9890c6b902ca4664b0715cb2da7c291c",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/hello/CMakeLists.txt" : {
      "ObjectId" : "0e401b8e1d6829eee9c89cb42b7e52bdf79407f1",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/interactive/CMakeLists.txt" : {
      "ObjectId" : "5f89c7123740aae70eebef7e06fde9407525e743",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/jsonrpc/CMakeLists.txt" : {
      "ObjectId" : "1c35b029e855a2f1f68bad7d6748694455e93832",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/longpoll/CMakeLists.txt" : {
      "ObjectId" : "461a4964831c75f17c62a2302aef0994f5a894f7",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/mandelbrot/CMakeLists.txt" : {
      "ObjectId" : "c3453de50630e0b4b0f79b6e6fa5c94e68d733bb",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/multiport-cpp/CMakeLists.txt" : {
      "ObjectId" : "85416ff6ae79ca1313246bdded0496dc7ef725aa",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/multiport/CMakeLists.txt" : {
      "ObjectId" : "548f8c2204592be10f93f1f12c2e1d32986a65f5",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/ofileserver/CMakeLists.txt" : {
      "ObjectId" : "a1e870c9cbff2c5b85617ffd6350c623688adabe",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/oterm/CMakeLists.txt" : {
      "ObjectId" : "88127e56990610b6e6cf6e5449ad8832d4727b7e",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_definitions(-D__DEBUG__)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# util is for pty support.. who choose so generic name?\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/otop/CMakeLists.txt" : {
      "ObjectId" : "7712a9261a97b41cfca3b1ad0e7731da0bc8d8f2",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/post/CMakeLists.txt" : {
      "ObjectId" : "9a5a9267ada06ba41938d22d4fb2483a34d27f82",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/post/Makefile" : {
      "ObjectId" : "40c3249b1e27e56672db9983f7edf09dfa9e2d9a",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "examples/userver/CMakeLists.txt" : {
      "ObjectId" : "2722cf9d36619ee822731865aa1b281d5c257558",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/websockets/CMakeLists.txt" : {
      "ObjectId" : "c9f8b01e3e9bf2c5a8d8c2e4093e2242e7ac5988",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "manpages/CMakeLists.txt" : {
      "ObjectId" : "54d5add038a326d7cbba6f7d9e696f3c25ddae93",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "2784495aaa1336530df787076836feac7190c16a",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/bindings/CMakeLists.txt" : {
      "ObjectId" : "56f3642e11acaf0f7207e2e32e1bcb6e7e7a52f3",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/bindings/cpp/CMakeLists.txt" : {
      "ObjectId" : "485f88fe0e1a9549178902292ee56cd92bdc66b7",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/onion/CMakeLists.txt" : {
      "ObjectId" : "af1d8b9b59e6c78a2f530fb4f7f37cf00dfaacdd",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# the lib itself. Two versions, static and shared.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## optional add sources and libraries depeding on features\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Poller can be a bit more complex, but basically the same.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# library dependencies\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Only if png by the moment, maybe later other functionalities there.\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/onion/extras/CMakeLists.txt" : {
      "ObjectId" : "87dfb6005dfd3eb6715ceebe2cee2174af3860e6",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/onion/handlers/CMakeLists.txt" : {
      "ObjectId" : "93418132862afd7498129efee4806d31137a5b41",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/01-internal/CMakeLists.txt" : {
      "ObjectId" : "e9c1bce2ccd87ac1ab2c6f9451ba6dae9a546803",
      "LastModified" : "2018-07-30T20:09:01Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/02-fullserver/CMakeLists.txt" : {
      "ObjectId" : "70092e6a4cff1e5581ac70719c5953b68dd91b04",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \n\n# ADD_CUSTOM_COMMAND(\n\n# \tOUTPUT 01-userver.sh ALL\n\n# \tCOMMAND cp ${CMAKE_CURRENT_SOURCE_DIR}/01-userver.sh ${CMAKE_CURRENT_BINARY_DIR}/01-userver.sh\n\n# \tDEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/01-userver.sh\n\n# \t)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/03-methods/CMakeLists.txt" : {
      "ObjectId" : "6d53fd3fa7387f100971f00a1819cdad9981c701",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/04-prerecorded/CMakeLists.txt" : {
      "ObjectId" : "8687d6be213682eabb009d8bf4d0d4d1e43afa17",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/05-sessions/CMakeLists.txt" : {
      "ObjectId" : "790e0c9f52ca2f067728d01b118251f6ccefac1b",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/07-tools/CMakeLists.txt" : {
      "ObjectId" : "b874869e619e539416d9c0103949d5a8e1e21cbe",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add_executable(02-test 02-test.cpp test_html.c external_html.c extended_html.c base_html.c)\n\n# target_link_libraries(02-test onion_static onion_handlers onioncpp)\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/08-cpp/CMakeLists.txt" : {
      "ObjectId" : "c477de338197bccc3cec5c0d24b4af7e0d6df9fa",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/09-webdav/CMakeLists.txt" : {
      "ObjectId" : "32efee7a5e2d2ed2fa2d2629d84d792ace4ff9ed",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "cb3b020ec978e93523cd95036045494f95e2d6be",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_subdirectory(06-handlers)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/CMakeLists.txt" : {
      "ObjectId" : "e4494929262cff874cd7fbdc3361cb5534932b58",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/compilerunloop/CMakeLists.txt" : {
      "ObjectId" : "2543dadc6132d9f450334a584543c66660672935",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/opack/CMakeLists.txt" : {
      "ObjectId" : "a7b040e8fc77e94dee9ad99afd85fa98e0fd9705",
      "LastModified" : "2018-08-02T10:53:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/otemplate/CMakeLists.txt" : {
      "ObjectId" : "5d08c915b21c1d66c322c4a89265587e93c5bde2",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/otemplate/templatetags/CMakeLists.txt" : {
      "ObjectId" : "5287ab61e735507b66ee12941bbda86dfd8b5fe9",
      "LastModified" : "2016-08-17T20:05:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 54,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1468
}