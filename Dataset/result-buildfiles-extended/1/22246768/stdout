{
  "Repository" : "22246768",
  "Revision" : "HEAD",
  "ObjectId" : "b343b9504ac8103796ee355d3c03937b373c99e2",
  "CommitTime" : "2019-04-06T03:14:39Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "3f08e5e7ce97f7f0805bf74f7c2cc3fb579bf3c1",
      "LastModified" : "2017-10-19T22:35:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Grab the git describe output and store it in GIT_DESCRIBE\n\n# Thanks to http://xit0.org/2013/04/cmake-use-git-branch-and-commit-details-in-project/\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# (see http://sourceforge.net/p/mingw-w64/wiki2/printf%20and%20scanf%20family/)\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set our C/C++ dialects\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO: remove these \n",
        "Line" : 115,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# disable \"conversion from .. to .., possible loss of data\" warning\n\n# disable \"signed/unsigned mismatch\" warning\n\n# disable \"nonstandard extension used: zero-sized array in struct/union\" warning\n",
        "Line" : 117,
        "CharPositionInLine" : 28
      },
      "5" : {
        "Text" : "#minimum version that supports unordered_map\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#CPack configuration\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "bspinfo/CMakeLists.txt" : {
      "ObjectId" : "75838b79be60b2e3ade4988d473de5269ddb7b70",
      "LastModified" : "2016-10-18T01:52:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "bsputil/CMakeLists.txt" : {
      "ObjectId" : "d5081278c942b598235702714a3c85ad31e7aac2",
      "LastModified" : "2017-04-23T21:58:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/ubuntu-mingw-cross.cmake" : {
      "ObjectId" : "7fcc78c0863a8c1168c73d6bd94b02b2b19915a3",
      "LastModified" : "2016-08-05T08:07:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# based on http://www.vtk.org/Wiki/CmakeMingw\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the name of the target operating system\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# which compilers to use for C and C++\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# here is the target environment located\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search \n\n# programs in the host environment\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "light/CMakeLists.txt" : {
      "ObjectId" : "30ddedac3df3cf766ece72a5905e341020fc5aa1",
      "LastModified" : "2018-07-24T06:49:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This needs to be before the add_executable\n",
        "Line" : 53,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Gather all .dylib's that are not symlinks\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# so the executable will search for dylib's in the same directory as the executable \n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# test\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#see https://cmake.org/Wiki/CMakeEmulateMakeCheck\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "lightpreview/CMakeLists.txt" : {
      "ObjectId" : "5b37162789d2347f6c337696f2453d32ada517e5",
      "LastModified" : "2017-10-19T22:35:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# from: http://stackoverflow.com/questions/40564443/copying-qt-dlls-to-executable-directory-on-windows-using-cmake\n\n# Copy Qt DLL's to bin directory for debugging\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install Qt DLL's\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "lightpreview/lightpreview.pro" : {
      "ObjectId" : "9f8b06890d00eb401a7af4d5239f0605d2db77ec",
      "LastModified" : "2017-04-28T19:29:37Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2017-03-20T13:10:04\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The following define makes your compiler emit warnings if you use\n\n# any feature of Qt which as been marked as deprecated (the exact warnings\n\n# depend on your compiler). Please consult the documentation of the\n\n# deprecated API in order to know how to port your code away from it.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# You can also make your code fail to compile if you use deprecated APIs.\n\n# In order to do so, uncomment the following line.\n\n# You can also select to disable deprecated APIs only up to a certain version of Qt.\n\n#DEFINES += QT_DISABLE_DEPRECATED_BEFORE=0x060000    # disables all the APIs deprecated before Qt 6.0.0\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "man/CMakeLists.txt" : {
      "ObjectId" : "6a54a3ae1295d8d901352494fd8be60781429b73",
      "LastModified" : "2017-04-28T19:29:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#make each of the main targets depend on the manuals\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "qbsp/CMakeLists.txt" : {
      "ObjectId" : "a539a35b4623dd211a5295eba9882938c691d586",
      "LastModified" : "2017-10-19T22:35:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# test (copied from light/CMakeLists.txt)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "qbsp3/CMakeLists.txt" : {
      "ObjectId" : "768943a829eb21e034e16e97618de52019a579f6",
      "LastModified" : "2017-10-19T22:35:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set our C/C++ dialects\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "vis/CMakeLists.txt" : {
      "ObjectId" : "1e7340ed8e61bc882111069d4c925a666a266d9f",
      "LastModified" : "2017-10-19T22:35:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 10,
    "QMAKE" : 1
  },
  "ElapsedTime" : 2569
}