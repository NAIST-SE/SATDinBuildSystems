{
  "Repository" : "48695129",
  "Revision" : "HEAD",
  "ObjectId" : "4284987c912c2afddec33de7f7db1a16f03ea109",
  "CommitTime" : "2019-04-08T17:48:45Z",
  "Files" : {
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/amqplib/Makefile" : {
      "ObjectId" : "89a50e9a9231d3f371358b9d657ae6714a9ba172",
      "LastModified" : "2018-10-10T20:52:49Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/array-includes/Makefile" : {
      "ObjectId" : "b9e4fe1aab3dde87b3071e9b39e45a22ce3bf33a",
      "LastModified" : "2018-10-10T20:52:49Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Since we rely on paths relative to the makefile location, abort if make isn't being run from there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The files that need updating when incrementing the version number.\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Add the local npm packages' bin folder to the PATH, so that `make` can find them, when invoked directly.\n\n# Note that rather than using `$(npm bin)` the 'node_modules/.bin' path component is hard-coded, so that invocation works even from an environment\n\n# where npm is (temporarily) unavailable due to having deactivated an nvm instance loaded into the calling shell in order to avoid interference with tests.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure that all required utilities can be located.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default target (by virtue of being the first non '.'-prefixed in the file).\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Lists all targets defined in this makefile.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All-tests target: invokes the specified test suites for ALL shells defined in $(SHELLS).\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Ensures that the git workspace is clean.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Makes a release; invoke with `make TAG=<versionOrIncrementSpec> release`.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#v}; \\\n\t new_ver=`echo \"$(TAG)\" | sed 's/^v//'`; new_ver=$${new_ver:-patch}; \\\n\t if printf \"$$new_ver\" | command grep -q '^[0-9]'; then \\\n\t   semver \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be major.minor.patch' >&2; exit 2; }; \\\n\t   semver -r \"> $$old_ver\" \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be HIGHER than current one.' >&2; exit 2; } \\\n\t else \\\n\t   new_ver=`semver -i \"$$new_ver\" \"$$old_ver\"` || { echo 'Invalid version-increment specifier: $(TAG)' >&2; exit 2; } \\\n\t fi; \\\n\t printf \"=== Bumping version **$$old_ver** to **$$new_ver** before committing and tagging:\\n=== TYPE 'proceed' TO PROCEED, anything else to abort: \" && read response && [ \"$$response\" = 'proceed' ] || { echo 'Aborted.' >&2; exit 2; };  \\\n\t replace \"$$old_ver\" \"$$new_ver\" -- $(VERSIONED_FILES) && \\\n\t git commit -m \"v$$new_ver\" $(VERSIONED_FILES) CHANGELOG.md && \\\n\t git tag -a -m \"v$$new_ver\" \"v$$new_ver\"\n",
        "Line" : 50,
        "CharPositionInLine" : 158
      },
      "CommentCount" : 10
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/arraybuffer.slice/Makefile" : {
      "ObjectId" : "849887f7fafa87e356e644f284781a040009f4b9",
      "LastModified" : "2018-10-10T20:52:49Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/backo2/Makefile" : {
      "ObjectId" : "9987df81aae366edffe9f845b048f7fe8a0c90db",
      "LastModified" : "2018-10-10T20:52:49Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/batch/Makefile" : {
      "ObjectId" : "634e37219281be9e2f2129c5d31390b166cfdd9e",
      "LastModified" : "2018-10-10T20:52:49Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/better-assert/Makefile" : {
      "ObjectId" : "36a3ed7d0a641bdc9d47c3608b07a2f683e17fac",
      "LastModified" : "2018-10-10T20:52:49Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/bitsyntax/Makefile" : {
      "ObjectId" : "ee27ab81c124560eb6414f8e81ac95b8125a01d6",
      "LastModified" : "2018-10-10T20:52:49Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/blob/Makefile" : {
      "ObjectId" : "7d9601a95b3cad21257840a1305c9a1273c3f5dd",
      "LastModified" : "2018-10-10T20:52:49Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/callsite/Makefile" : {
      "ObjectId" : "634e37219281be9e2f2129c5d31390b166cfdd9e",
      "LastModified" : "2018-10-10T20:52:49Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/component-bind/Makefile" : {
      "ObjectId" : "4e9c8d36ebcd2f63843cf5a534e4db3459b2d637",
      "LastModified" : "2018-10-10T20:52:49Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/component-inherit/Makefile" : {
      "ObjectId" : "ebbc52a3df3bf5bd55c578ef664efbf555a3d822",
      "LastModified" : "2018-10-10T20:52:49Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/custom-event/Makefile" : {
      "ObjectId" : "ba5c6cd2a11b180733649e63783e8a6f2e0f3b4d",
      "LastModified" : "2018-10-10T20:52:49Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# get Makefile directory name: http://stackoverflow.com/a/5982798/376773\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BIN directory\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# applications\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/debug/Makefile" : {
      "ObjectId" : "584da8bf938e639ece3ba2bd4105c215c2b1ff51",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# get Makefile directory name: http://stackoverflow.com/a/5982798/376773\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BIN directory\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Path\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# applications\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/delayed-stream/Makefile" : {
      "ObjectId" : "b4ff85a33b6eb482476385b7c3e6661ec9c9eb0c",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/delegates/Makefile" : {
      "ObjectId" : "a9dcfd50dbdb227343ca0ca3193d78d135e4298d",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/dom-serialize/Makefile" : {
      "ObjectId" : "fdc9f16d338a42f8caf59d84a083f9ebe10ad12c",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# get Makefile directory name: http://stackoverflow.com/a/5982798/376773\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BIN directory\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# applications\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/domain-context/Makefile" : {
      "ObjectId" : "117769db8264d16d88772bb9bbcbb429cfe77756",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/engine.io-client/node_modules/debug/Makefile" : {
      "ObjectId" : "3ddd1360e6a95e6d7161f2d4d4f8cb9a0816f577",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# get Makefile directory name: http://stackoverflow.com/a/5982798/376773\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BIN directory\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Path\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# applications\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/engine.io/node_modules/debug/Makefile" : {
      "ObjectId" : "3ddd1360e6a95e6d7161f2d4d4f8cb9a0816f577",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# get Makefile directory name: http://stackoverflow.com/a/5982798/376773\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BIN directory\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Path\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# applications\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/es-abstract/Makefile" : {
      "ObjectId" : "959bbd49c1def0b484e00ec993e35158f4e1c71f",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Since we rely on paths relative to the makefile location, abort if make isn't being run from there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The files that need updating when incrementing the version number.\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Add the local npm packages' bin folder to the PATH, so that `make` can find them, when invoked directly.\n\n# Note that rather than using `$(npm bin)` the 'node_modules/.bin' path component is hard-coded, so that invocation works even from an environment\n\n# where npm is (temporarily) unavailable due to having deactivated an nvm instance loaded into the calling shell in order to avoid interference with tests.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure that all required utilities can be located.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default target (by virtue of being the first non '.'-prefixed in the file).\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Lists all targets defined in this makefile.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All-tests target: invokes the specified test suites for ALL shells defined in $(SHELLS).\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Ensures that the git workspace is clean.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Makes a release; invoke with `make TAG=<versionOrIncrementSpec> release`.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#v}; \\\n\t new_ver=`echo \"$(TAG)\" | sed 's/^v//'`; new_ver=$${new_ver:-patch}; \\\n\t if printf \"$$new_ver\" | command grep -q '^[0-9]'; then \\\n\t   semver \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be major.minor.patch' >&2; exit 2; }; \\\n\t   semver -r \"> $$old_ver\" \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be HIGHER than current one.' >&2; exit 2; } \\\n\t else \\\n\t   new_ver=`semver -i \"$$new_ver\" \"$$old_ver\"` || { echo 'Invalid version-increment specifier: $(TAG)' >&2; exit 2; } \\\n\t fi; \\\n\t printf \"=== Bumping version **$$old_ver** to **$$new_ver** before committing and tagging:\\n=== TYPE 'proceed' TO PROCEED, anything else to abort: \" && read response && [ \"$$response\" = 'proceed' ] || { echo 'Aborted.' >&2; exit 2; };  \\\n\t replace \"$$old_ver\" \"$$new_ver\" -- $(VERSIONED_FILES) && \\\n\t git commit -m \"v$$new_ver\" $(VERSIONED_FILES) CHANGELOG.md && \\\n\t git tag -a -m \"v$$new_ver\" \"v$$new_ver\"\n",
        "Line" : 50,
        "CharPositionInLine" : 158
      },
      "CommentCount" : 10
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/es-to-primitive/Makefile" : {
      "ObjectId" : "b9e4fe1aab3dde87b3071e9b39e45a22ce3bf33a",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Since we rely on paths relative to the makefile location, abort if make isn't being run from there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The files that need updating when incrementing the version number.\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Add the local npm packages' bin folder to the PATH, so that `make` can find them, when invoked directly.\n\n# Note that rather than using `$(npm bin)` the 'node_modules/.bin' path component is hard-coded, so that invocation works even from an environment\n\n# where npm is (temporarily) unavailable due to having deactivated an nvm instance loaded into the calling shell in order to avoid interference with tests.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure that all required utilities can be located.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default target (by virtue of being the first non '.'-prefixed in the file).\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Lists all targets defined in this makefile.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All-tests target: invokes the specified test suites for ALL shells defined in $(SHELLS).\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Ensures that the git workspace is clean.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Makes a release; invoke with `make TAG=<versionOrIncrementSpec> release`.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#v}; \\\n\t new_ver=`echo \"$(TAG)\" | sed 's/^v//'`; new_ver=$${new_ver:-patch}; \\\n\t if printf \"$$new_ver\" | command grep -q '^[0-9]'; then \\\n\t   semver \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be major.minor.patch' >&2; exit 2; }; \\\n\t   semver -r \"> $$old_ver\" \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be HIGHER than current one.' >&2; exit 2; } \\\n\t else \\\n\t   new_ver=`semver -i \"$$new_ver\" \"$$old_ver\"` || { echo 'Invalid version-increment specifier: $(TAG)' >&2; exit 2; } \\\n\t fi; \\\n\t printf \"=== Bumping version **$$old_ver** to **$$new_ver** before committing and tagging:\\n=== TYPE 'proceed' TO PROCEED, anything else to abort: \" && read response && [ \"$$response\" = 'proceed' ] || { echo 'Aborted.' >&2; exit 2; };  \\\n\t replace \"$$old_ver\" \"$$new_ver\" -- $(VERSIONED_FILES) && \\\n\t git commit -m \"v$$new_ver\" $(VERSIONED_FILES) CHANGELOG.md && \\\n\t git tag -a -m \"v$$new_ver\" \"v$$new_ver\"\n",
        "Line" : 50,
        "CharPositionInLine" : 158
      },
      "CommentCount" : 10
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/extsprintf/Makefile" : {
      "ObjectId" : "db845189ad1ba05a37c881e06b8c6e082420148d",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2012, Joyent, Inc. All rights reserved.\n\n#\n\n# Makefile: top-level Makefile\n\n#\n\n# This Makefile contains only repo-specific logic and uses included makefiles\n\n# to supply common targets (javascriptlint, jsstyle, restdown, etc.), which are\n\n# used by other repos as well.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Files\n\n#\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Default target is \"check\"\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/fileset/Makefile" : {
      "ObjectId" : "e6175ba790174716ae7b19238d66eb2855e5fe02",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/follow-redirects/node_modules/debug/Makefile" : {
      "ObjectId" : "3ddd1360e6a95e6d7161f2d4d4f8cb9a0816f577",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# get Makefile directory name: http://stackoverflow.com/a/5982798/376773\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BIN directory\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Path\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# applications\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/foreach/Makefile" : {
      "ObjectId" : "eae41178666a0e7f624dd07f1e9fc8d8e38e038b",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/fsevents/build/Makefile" : {
      "ObjectId" : "800b7ae85f81fe4b2a01a40973e426665106f06d",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# We borrow heavily from the kernel build setup, though we are simpler since\n\n# we don't have Kconfig tweaking settings on us.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The implicit make rules have it looking for RCS files, among other things.\n\n# We instead explicitly write all the rules we care about.\n\n# It's even quicker (saves ~200ms) to pass -r on the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The source directory tree.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The name of the builddir.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The V=1 flag on command line makes us verbosely print command lines.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Specify BUILDTYPE=Release on the command line for a release build.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Directory all our build output goes into.\n\n# Note that this must be two directories beneath src/ for unit tests to pass,\n\n# as they reach into the src/ directory for data with relative paths.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Object output directory.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# We build up a list of every single one of the targets so we can slurp in the\n\n# generated dependency rule Makefiles in one pass.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# C++ apps need to be linked with g++.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# TODO(evan): move all cross-compilation logic to gyp-time so we don't need\n\n# to replicate this environment fallback in make as well.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define a dir function that can handle spaces.\n\n# http://www.gnu.org/software/make/manual/make.html#Syntax-of-Functions\n\n# \"leading spaces cannot appear in the text of the first argument as written.\n\n# These characters can be put into the argument value by variable substitution.\"\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# http://stackoverflow.com/questions/1189781/using-make-dir-or-notdir-on-a-path-with-spaces\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Flags to make gcc output dependency info.  Note that you need to be\n\n# careful here to use the flags that ccache and distcc can understand.\n\n# We write to a dep file on the side first and then rename at the end\n\n# so we can't end up with a broken dep file.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# We have to fixup the deps output in a few ways.\n\n# (1) the file output should mention the proper .o file.\n\n# ccache or distcc lose the path to the target, so we convert a rule of\n\n# the form:\n\n#   foobar.o: DEP1 DEP2\n\n# into\n\n#   path/to/foobar.o: DEP1 DEP2\n\n# (2) we want missing files not to cause us to fail to build.\n\n# We want to rewrite\n\n#   foobar.o: DEP1 DEP2 \\\n#               DEP3\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# to\n\n#   DEP1:\n\n#   DEP2:\n\n#   DEP3:\n\n# so if the files are missing, they're just considered phony rules.\n\n# We have to do some pretty insane escaping to get those backslashes\n\n# and dollar signs past make, the shell, and sed at the same time.\n\n# Doesn't work with spaces, but that's fine: .d files have spaces in\n\n# their names replaced with other characters.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# The depfile may not exist if the input file didn't have any #includes.\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Fixup path as in (1).\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Add extra rules as in (2).\n\n# We remove slashes and replace spaces with new lines;\n\n# remove blank lines;\n\n# delete the first line and append a colon to the remaining lines.\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Command definitions:\n\n# - cmd_foo is the actual command to run;\n\n# - quiet_cmd_foo is the brief-output summary of the command.\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Commands for precompiled header files.\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# gyp-mac-tool is written next to the root Makefile by gyp.\n\n# Use $(4) for the command, since $(2) and $(3) are used as flag by do_cmd\n\n# already.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# send stderr to /dev/null to ignore messages when linking directories.\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Define an escape_quotes function to escape single quotes.\n\n# This allows us to handle quotes properly as long as we always use\n\n# use single quotes and escape_quotes.\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# This comment is here just to include a ' to unconfuse syntax highlighting.\n\n# Define an escape_vars function to escape '$' variable syntax.\n\n# This allows us to read/write command lines with shell variables (e.g.\n\n# $LD_LIBRARY_PATH), without triggering make substitution.\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Helper that expands to a shell command to echo a string exactly as it is in\n\n# make. This uses printf instead of echo because printf's behaviour with respect\n\n# to escape sequences is more portable than echo's across different shells\n\n# (e.g., dash, bash).\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Helper to compare the command we're about to run against the command\n\n# we logged the last time we ran the command.  Produces an empty\n\n# string (false) when the commands match.\n\n# Tricky point: Make has no string-equality test function.\n\n# The kernel uses the following, but it seems like it would have false\n\n# positives, where one string reordered its arguments.\n\n#   arg_check = $(strip $(filter-out $(cmd_$(1)), $(cmd_$@)) \\\n#                       $(filter-out $(cmd_$@), $(cmd_$(1))))\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# We instead substitute each for the empty string into the other, and\n\n# say they're equal if both substitutions produce the empty string.\n\n# .d files contain ? instead of spaces, take that into account.\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Helper that is non-empty when a prerequisite changes.\n\n# Normally make does this implicitly, but we force rules to always run\n\n# so we can check their command lines.\n\n#   $? -- new prerequisites\n\n#   $| -- order-only dependencies\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Helper that executes all postbuilds until one fails.\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# do_cmd: run a command via the above cmd_foo names, if necessary.\n\n# Should always run for a given target to handle command-line changes.\n\n# Second argument, if non-zero, makes it do asm/C/C++ dependency munging.\n\n# Third argument, if non-zero, makes it do POSTBUILDS processing.\n\n# Note: We intentionally do NOT call dirx for depfile, since it contains ? for\n\n# spaces already and dirx strips the ? characters.\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Declare the \"all\" target first so it is the default,\n\n# even though we don't have the deps yet.\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# make looks for ways to re-generate included makefiles, but in our case, we\n\n# don't have a direct way. Explicitly telling make that it has nothing to do\n\n# for them makes it go faster.\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Use FORCE_DO_CMD to force a target to run.  Should be coupled with\n\n# do_cmd.\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Suffix rules, putting all outputs into $(obj).\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Try building from generated source, too.\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# \"all\" is a concatenation of the \"all\" targets from all the included\n\n# sub-makefiles. This is just here to clarify.\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Add in dependency-tracking rules.  $(all_deps) is the list of every single\n\n# target in our tree. Only consider the ones with .d (dependency) info:\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 38
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/fsevents/node_modules/debug/Makefile" : {
      "ObjectId" : "584da8bf938e639ece3ba2bd4105c215c2b1ff51",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# get Makefile directory name: http://stackoverflow.com/a/5982798/376773\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BIN directory\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Path\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# applications\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/fsevents/node_modules/delegates/Makefile" : {
      "ObjectId" : "a9dcfd50dbdb227343ca0ca3193d78d135e4298d",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/fsevents/node_modules/isarray/Makefile" : {
      "ObjectId" : "787d56e1e982e48588bc199f36f0d50cb4724066",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/has-cors/Makefile" : {
      "ObjectId" : "0f14dac306f8e0e08c210fa2410c5ef1807600a0",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/http-proxy-agent/node_modules/debug/Makefile" : {
      "ObjectId" : "3ddd1360e6a95e6d7161f2d4d4f8cb9a0816f577",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# get Makefile directory name: http://stackoverflow.com/a/5982798/376773\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BIN directory\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Path\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# applications\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/https-proxy-agent/node_modules/debug/Makefile" : {
      "ObjectId" : "3ddd1360e6a95e6d7161f2d4d4f8cb9a0816f577",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# get Makefile directory name: http://stackoverflow.com/a/5982798/376773\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BIN directory\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Path\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# applications\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/indexof/Makefile" : {
      "ObjectId" : "3f6119d227040d0493452f89e06013b2a9886da6",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/is-callable/Makefile" : {
      "ObjectId" : "b9e4fe1aab3dde87b3071e9b39e45a22ce3bf33a",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Since we rely on paths relative to the makefile location, abort if make isn't being run from there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The files that need updating when incrementing the version number.\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Add the local npm packages' bin folder to the PATH, so that `make` can find them, when invoked directly.\n\n# Note that rather than using `$(npm bin)` the 'node_modules/.bin' path component is hard-coded, so that invocation works even from an environment\n\n# where npm is (temporarily) unavailable due to having deactivated an nvm instance loaded into the calling shell in order to avoid interference with tests.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure that all required utilities can be located.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default target (by virtue of being the first non '.'-prefixed in the file).\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Lists all targets defined in this makefile.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All-tests target: invokes the specified test suites for ALL shells defined in $(SHELLS).\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Ensures that the git workspace is clean.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Makes a release; invoke with `make TAG=<versionOrIncrementSpec> release`.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#v}; \\\n\t new_ver=`echo \"$(TAG)\" | sed 's/^v//'`; new_ver=$${new_ver:-patch}; \\\n\t if printf \"$$new_ver\" | command grep -q '^[0-9]'; then \\\n\t   semver \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be major.minor.patch' >&2; exit 2; }; \\\n\t   semver -r \"> $$old_ver\" \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be HIGHER than current one.' >&2; exit 2; } \\\n\t else \\\n\t   new_ver=`semver -i \"$$new_ver\" \"$$old_ver\"` || { echo 'Invalid version-increment specifier: $(TAG)' >&2; exit 2; } \\\n\t fi; \\\n\t printf \"=== Bumping version **$$old_ver** to **$$new_ver** before committing and tagging:\\n=== TYPE 'proceed' TO PROCEED, anything else to abort: \" && read response && [ \"$$response\" = 'proceed' ] || { echo 'Aborted.' >&2; exit 2; };  \\\n\t replace \"$$old_ver\" \"$$new_ver\" -- $(VERSIONED_FILES) && \\\n\t git commit -m \"v$$new_ver\" $(VERSIONED_FILES) CHANGELOG.md && \\\n\t git tag -a -m \"v$$new_ver\" \"v$$new_ver\"\n",
        "Line" : 50,
        "CharPositionInLine" : 158
      },
      "CommentCount" : 10
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/is-date-object/Makefile" : {
      "ObjectId" : "b9e4fe1aab3dde87b3071e9b39e45a22ce3bf33a",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Since we rely on paths relative to the makefile location, abort if make isn't being run from there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The files that need updating when incrementing the version number.\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Add the local npm packages' bin folder to the PATH, so that `make` can find them, when invoked directly.\n\n# Note that rather than using `$(npm bin)` the 'node_modules/.bin' path component is hard-coded, so that invocation works even from an environment\n\n# where npm is (temporarily) unavailable due to having deactivated an nvm instance loaded into the calling shell in order to avoid interference with tests.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure that all required utilities can be located.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default target (by virtue of being the first non '.'-prefixed in the file).\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Lists all targets defined in this makefile.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All-tests target: invokes the specified test suites for ALL shells defined in $(SHELLS).\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Ensures that the git workspace is clean.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Makes a release; invoke with `make TAG=<versionOrIncrementSpec> release`.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#v}; \\\n\t new_ver=`echo \"$(TAG)\" | sed 's/^v//'`; new_ver=$${new_ver:-patch}; \\\n\t if printf \"$$new_ver\" | command grep -q '^[0-9]'; then \\\n\t   semver \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be major.minor.patch' >&2; exit 2; }; \\\n\t   semver -r \"> $$old_ver\" \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be HIGHER than current one.' >&2; exit 2; } \\\n\t else \\\n\t   new_ver=`semver -i \"$$new_ver\" \"$$old_ver\"` || { echo 'Invalid version-increment specifier: $(TAG)' >&2; exit 2; } \\\n\t fi; \\\n\t printf \"=== Bumping version **$$old_ver** to **$$new_ver** before committing and tagging:\\n=== TYPE 'proceed' TO PROCEED, anything else to abort: \" && read response && [ \"$$response\" = 'proceed' ] || { echo 'Aborted.' >&2; exit 2; };  \\\n\t replace \"$$old_ver\" \"$$new_ver\" -- $(VERSIONED_FILES) && \\\n\t git commit -m \"v$$new_ver\" $(VERSIONED_FILES) CHANGELOG.md && \\\n\t git tag -a -m \"v$$new_ver\" \"v$$new_ver\"\n",
        "Line" : 50,
        "CharPositionInLine" : 158
      },
      "CommentCount" : 10
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/is-regex/Makefile" : {
      "ObjectId" : "b9e4fe1aab3dde87b3071e9b39e45a22ce3bf33a",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Since we rely on paths relative to the makefile location, abort if make isn't being run from there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The files that need updating when incrementing the version number.\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Add the local npm packages' bin folder to the PATH, so that `make` can find them, when invoked directly.\n\n# Note that rather than using `$(npm bin)` the 'node_modules/.bin' path component is hard-coded, so that invocation works even from an environment\n\n# where npm is (temporarily) unavailable due to having deactivated an nvm instance loaded into the calling shell in order to avoid interference with tests.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure that all required utilities can be located.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default target (by virtue of being the first non '.'-prefixed in the file).\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Lists all targets defined in this makefile.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All-tests target: invokes the specified test suites for ALL shells defined in $(SHELLS).\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Ensures that the git workspace is clean.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Makes a release; invoke with `make TAG=<versionOrIncrementSpec> release`.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#v}; \\\n\t new_ver=`echo \"$(TAG)\" | sed 's/^v//'`; new_ver=$${new_ver:-patch}; \\\n\t if printf \"$$new_ver\" | command grep -q '^[0-9]'; then \\\n\t   semver \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be major.minor.patch' >&2; exit 2; }; \\\n\t   semver -r \"> $$old_ver\" \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be HIGHER than current one.' >&2; exit 2; } \\\n\t else \\\n\t   new_ver=`semver -i \"$$new_ver\" \"$$old_ver\"` || { echo 'Invalid version-increment specifier: $(TAG)' >&2; exit 2; } \\\n\t fi; \\\n\t printf \"=== Bumping version **$$old_ver** to **$$new_ver** before committing and tagging:\\n=== TYPE 'proceed' TO PROCEED, anything else to abort: \" && read response && [ \"$$response\" = 'proceed' ] || { echo 'Aborted.' >&2; exit 2; };  \\\n\t replace \"$$old_ver\" \"$$new_ver\" -- $(VERSIONED_FILES) && \\\n\t git commit -m \"v$$new_ver\" $(VERSIONED_FILES) CHANGELOG.md && \\\n\t git tag -a -m \"v$$new_ver\" \"v$$new_ver\"\n",
        "Line" : 50,
        "CharPositionInLine" : 158
      },
      "CommentCount" : 10
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/is-symbol/Makefile" : {
      "ObjectId" : "b9e4fe1aab3dde87b3071e9b39e45a22ce3bf33a",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Since we rely on paths relative to the makefile location, abort if make isn't being run from there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The files that need updating when incrementing the version number.\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Add the local npm packages' bin folder to the PATH, so that `make` can find them, when invoked directly.\n\n# Note that rather than using `$(npm bin)` the 'node_modules/.bin' path component is hard-coded, so that invocation works even from an environment\n\n# where npm is (temporarily) unavailable due to having deactivated an nvm instance loaded into the calling shell in order to avoid interference with tests.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure that all required utilities can be located.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default target (by virtue of being the first non '.'-prefixed in the file).\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Lists all targets defined in this makefile.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All-tests target: invokes the specified test suites for ALL shells defined in $(SHELLS).\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Ensures that the git workspace is clean.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Makes a release; invoke with `make TAG=<versionOrIncrementSpec> release`.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#v}; \\\n\t new_ver=`echo \"$(TAG)\" | sed 's/^v//'`; new_ver=$${new_ver:-patch}; \\\n\t if printf \"$$new_ver\" | command grep -q '^[0-9]'; then \\\n\t   semver \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be major.minor.patch' >&2; exit 2; }; \\\n\t   semver -r \"> $$old_ver\" \"$$new_ver\" >/dev/null || { echo 'Invalid version number specified: $(TAG) - must be HIGHER than current one.' >&2; exit 2; } \\\n\t else \\\n\t   new_ver=`semver -i \"$$new_ver\" \"$$old_ver\"` || { echo 'Invalid version-increment specifier: $(TAG)' >&2; exit 2; } \\\n\t fi; \\\n\t printf \"=== Bumping version **$$old_ver** to **$$new_ver** before committing and tagging:\\n=== TYPE 'proceed' TO PROCEED, anything else to abort: \" && read response && [ \"$$response\" = 'proceed' ] || { echo 'Aborted.' >&2; exit 2; };  \\\n\t replace \"$$old_ver\" \"$$new_ver\" -- $(VERSIONED_FILES) && \\\n\t git commit -m \"v$$new_ver\" $(VERSIONED_FILES) CHANGELOG.md && \\\n\t git tag -a -m \"v$$new_ver\" \"v$$new_ver\"\n",
        "Line" : 50,
        "CharPositionInLine" : 158
      },
      "CommentCount" : 10
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/isarray/Makefile" : {
      "ObjectId" : "787d56e1e982e48588bc199f36f0d50cb4724066",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/istanbul-lib-source-maps/node_modules/debug/Makefile" : {
      "ObjectId" : "3ddd1360e6a95e6d7161f2d4d4f8cb9a0816f577",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# get Makefile directory name: http://stackoverflow.com/a/5982798/376773\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BIN directory\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Path\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# applications\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/json-stringify-safe/Makefile" : {
      "ObjectId" : "36088c723a3b3f96e449136639da88e43cd716dd",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/log4js/node_modules/debug/Makefile" : {
      "ObjectId" : "3ddd1360e6a95e6d7161f2d4d4f8cb9a0816f577",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# get Makefile directory name: http://stackoverflow.com/a/5982798/376773\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BIN directory\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Path\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# applications\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/mailgun-js/node_modules/debug/Makefile" : {
      "ObjectId" : "3ddd1360e6a95e6d7161f2d4d4f8cb9a0816f577",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# get Makefile directory name: http://stackoverflow.com/a/5982798/376773\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BIN directory\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Path\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# applications\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/node-sass/src/libsass/Makefile" : {
      "ObjectId" : "f3a2945339bfda2e902faad1f73233d0ea57801b",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Solaris/Illumos flavors\n\n# ginstall from coreutils\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# enable mandatory flag\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# this is needed for mingw\n",
        "Line" : 90,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# link statically into lib\n\n# makes it a lot more portable\n\n# increases size by about 50KB\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/object-component/Makefile" : {
      "ObjectId" : "b6b98504ec9ce79a7abfb6b8b7c10426c234c963",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/options/Makefile" : {
      "ObjectId" : "7496b6fcc5008519c078985a624fac04b6e9e285",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/pac-proxy-agent/node_modules/debug/Makefile" : {
      "ObjectId" : "3ddd1360e6a95e6d7161f2d4d4f8cb9a0816f577",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# get Makefile directory name: http://stackoverflow.com/a/5982798/376773\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BIN directory\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Path\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# applications\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/parseqs/Makefile" : {
      "ObjectId" : "2fbcce992e108fff2d1999bfa4fa5a9be8e4b6b9",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/parseuri/Makefile" : {
      "ObjectId" : "2fbcce992e108fff2d1999bfa4fa5a9be8e4b6b9",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/performance-now/Makefile" : {
      "ObjectId" : "8a2a565b0d46b009f3d78c7a9a00edda6942b024",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/proxy-agent/node_modules/debug/Makefile" : {
      "ObjectId" : "3ddd1360e6a95e6d7161f2d4d4f8cb9a0816f577",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# get Makefile directory name: http://stackoverflow.com/a/5982798/376773\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BIN directory\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Path\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# applications\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/qjobs/Makefile" : {
      "ObjectId" : "4eca68802e90f9b93888fb2c96feb3da76975bd3",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/saucelabs/Makefile" : {
      "ObjectId" : "f3da84f7525729ddd846abaa16da4177b850b2ff",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/slack-node/Makefile" : {
      "ObjectId" : "91dd878da683de1b75a9596bb6d8b555ba8968d1",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/sntp/Makefile" : {
      "ObjectId" : "417fd93708605f0a88b4cf36f0eab46d9eb653ca",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/socket.io-parser/node_modules/debug/Makefile" : {
      "ObjectId" : "3ddd1360e6a95e6d7161f2d4d4f8cb9a0816f577",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# get Makefile directory name: http://stackoverflow.com/a/5982798/376773\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BIN directory\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Path\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# applications\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/sockjs/Makefile" : {
      "ObjectId" : "d9afd78860efe47dad4ce28cb0fdd0a93ea9a317",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#### General\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### Testing\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/streamroller/node_modules/debug/Makefile" : {
      "ObjectId" : "3ddd1360e6a95e6d7161f2d4d4f8cb9a0816f577",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# get Makefile directory name: http://stackoverflow.com/a/5982798/376773\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BIN directory\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Path\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# applications\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/thunkify/Makefile" : {
      "ObjectId" : "9987df81aae366edffe9f845b048f7fe8a0c90db",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/toposort/Makefile" : {
      "ObjectId" : "0f14dac306f8e0e08c210fa2410c5ef1807600a0",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/uws/build/Makefile" : {
      "ObjectId" : "cdb8bad716c729cc1ad5be2fb29475a23be0a262",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# We borrow heavily from the kernel build setup, though we are simpler since\n\n# we don't have Kconfig tweaking settings on us.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The implicit make rules have it looking for RCS files, among other things.\n\n# We instead explicitly write all the rules we care about.\n\n# It's even quicker (saves ~200ms) to pass -r on the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The source directory tree.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The name of the builddir.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The V=1 flag on command line makes us verbosely print command lines.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Specify BUILDTYPE=Release on the command line for a release build.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Directory all our build output goes into.\n\n# Note that this must be two directories beneath src/ for unit tests to pass,\n\n# as they reach into the src/ directory for data with relative paths.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Object output directory.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# We build up a list of every single one of the targets so we can slurp in the\n\n# generated dependency rule Makefiles in one pass.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# C++ apps need to be linked with g++.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# TODO(evan): move all cross-compilation logic to gyp-time so we don't need\n\n# to replicate this environment fallback in make as well.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define a dir function that can handle spaces.\n\n# http://www.gnu.org/software/make/manual/make.html#Syntax-of-Functions\n\n# \"leading spaces cannot appear in the text of the first argument as written.\n\n# These characters can be put into the argument value by variable substitution.\"\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# http://stackoverflow.com/questions/1189781/using-make-dir-or-notdir-on-a-path-with-spaces\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Flags to make gcc output dependency info.  Note that you need to be\n\n# careful here to use the flags that ccache and distcc can understand.\n\n# We write to a dep file on the side first and then rename at the end\n\n# so we can't end up with a broken dep file.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# We have to fixup the deps output in a few ways.\n\n# (1) the file output should mention the proper .o file.\n\n# ccache or distcc lose the path to the target, so we convert a rule of\n\n# the form:\n\n#   foobar.o: DEP1 DEP2\n\n# into\n\n#   path/to/foobar.o: DEP1 DEP2\n\n# (2) we want missing files not to cause us to fail to build.\n\n# We want to rewrite\n\n#   foobar.o: DEP1 DEP2 \\\n#               DEP3\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# to\n\n#   DEP1:\n\n#   DEP2:\n\n#   DEP3:\n\n# so if the files are missing, they're just considered phony rules.\n\n# We have to do some pretty insane escaping to get those backslashes\n\n# and dollar signs past make, the shell, and sed at the same time.\n\n# Doesn't work with spaces, but that's fine: .d files have spaces in\n\n# their names replaced with other characters.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# The depfile may not exist if the input file didn't have any #includes.\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Fixup path as in (1).\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Add extra rules as in (2).\n\n# We remove slashes and replace spaces with new lines;\n\n# remove blank lines;\n\n# delete the first line and append a colon to the remaining lines.\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Command definitions:\n\n# - cmd_foo is the actual command to run;\n\n# - quiet_cmd_foo is the brief-output summary of the command.\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Commands for precompiled header files.\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# gyp-mac-tool is written next to the root Makefile by gyp.\n\n# Use $(4) for the command, since $(2) and $(3) are used as flag by do_cmd\n\n# already.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# send stderr to /dev/null to ignore messages when linking directories.\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Define an escape_quotes function to escape single quotes.\n\n# This allows us to handle quotes properly as long as we always use\n\n# use single quotes and escape_quotes.\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# This comment is here just to include a ' to unconfuse syntax highlighting.\n\n# Define an escape_vars function to escape '$' variable syntax.\n\n# This allows us to read/write command lines with shell variables (e.g.\n\n# $LD_LIBRARY_PATH), without triggering make substitution.\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Helper that expands to a shell command to echo a string exactly as it is in\n\n# make. This uses printf instead of echo because printf's behaviour with respect\n\n# to escape sequences is more portable than echo's across different shells\n\n# (e.g., dash, bash).\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Helper to compare the command we're about to run against the command\n\n# we logged the last time we ran the command.  Produces an empty\n\n# string (false) when the commands match.\n\n# Tricky point: Make has no string-equality test function.\n\n# The kernel uses the following, but it seems like it would have false\n\n# positives, where one string reordered its arguments.\n\n#   arg_check = $(strip $(filter-out $(cmd_$(1)), $(cmd_$@)) \\\n#                       $(filter-out $(cmd_$@), $(cmd_$(1))))\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# We instead substitute each for the empty string into the other, and\n\n# say they're equal if both substitutions produce the empty string.\n\n# .d files contain ? instead of spaces, take that into account.\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Helper that is non-empty when a prerequisite changes.\n\n# Normally make does this implicitly, but we force rules to always run\n\n# so we can check their command lines.\n\n#   $? -- new prerequisites\n\n#   $| -- order-only dependencies\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Helper that executes all postbuilds until one fails.\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# do_cmd: run a command via the above cmd_foo names, if necessary.\n\n# Should always run for a given target to handle command-line changes.\n\n# Second argument, if non-zero, makes it do asm/C/C++ dependency munging.\n\n# Third argument, if non-zero, makes it do POSTBUILDS processing.\n\n# Note: We intentionally do NOT call dirx for depfile, since it contains ? for\n\n# spaces already and dirx strips the ? characters.\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Declare the \"all\" target first so it is the default,\n\n# even though we don't have the deps yet.\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# make looks for ways to re-generate included makefiles, but in our case, we\n\n# don't have a direct way. Explicitly telling make that it has nothing to do\n\n# for them makes it go faster.\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Use FORCE_DO_CMD to force a target to run.  Should be coupled with\n\n# do_cmd.\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Suffix rules, putting all outputs into $(obj).\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Try building from generated source, too.\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# \"all\" is a concatenation of the \"all\" targets from all the included\n\n# sub-makefiles. This is just here to clarify.\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Add in dependency-tracking rules.  $(all_deps) is the list of every single\n\n# target in our tree. Only consider the ones with .d (dependency) info:\n",
        "Line" : 342,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 38
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/webpack-dev-server/node_modules/debug/Makefile" : {
      "ObjectId" : "3ddd1360e6a95e6d7161f2d4d4f8cb9a0816f577",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# get Makefile directory name: http://stackoverflow.com/a/5982798/376773\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BIN directory\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Path\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# applications\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/webpack-dev-server/node_modules/expand-brackets/node_modules/debug/Makefile" : {
      "ObjectId" : "584da8bf938e639ece3ba2bd4105c215c2b1ff51",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# get Makefile directory name: http://stackoverflow.com/a/5982798/376773\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BIN directory\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Path\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# applications\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "fixtures/angular_msbuild_dotnet_2.1/ClientApp/node_modules/xtend/Makefile" : {
      "ObjectId" : "d583fcf49dc1a343087a932f9912fab74e2b2f6b",
      "LastModified" : "2018-10-10T22:46:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "vendor/github.com/Masterminds/semver/Makefile" : {
      "ObjectId" : "a7a1b4e36de966056eb74a4d46c98d8d7d0d8144",
      "LastModified" : "2019-01-08T22:35:21Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "vendor/github.com/go-ini/ini/Makefile" : {
      "ObjectId" : "af27ff0768faeb36d27299048f016e153b849c8d",
      "LastModified" : "2019-01-08T22:35:21Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "vendor/github.com/gravityblast/go-jsmin/Makefile" : {
      "ObjectId" : "22221aefaa24a5df6a9975bf4a78adfaa4c6a68d",
      "LastModified" : "2019-01-08T22:35:21Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "vendor/github.com/hpcloud/tail/Makefile" : {
      "ObjectId" : "6591b24fc11d4a7077e25ebec116bfcc1523cb71",
      "LastModified" : "2019-01-08T22:35:21Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Run the test in an isolated environment.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "vendor/github.com/onsi/gomega/Makefile" : {
      "ObjectId" : "c92cd56e3adcd1e5b257edee919735fc61f803de",
      "LastModified" : "2019-03-13T18:49:02Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 68
  },
  "ElapsedTime" : 3637
}