{
  "Repository" : "47761311",
  "Revision" : "HEAD",
  "ObjectId" : "779a43777ed6c19cbdc82ebdeeb956d4e7601356",
  "CommitTime" : "2018-10-03T15:49:46Z",
  "Files" : {
    "ArchiveDepacker/ArchiveDepacker.pro" : {
      "ObjectId" : "5d24ed1520acdc7e2f847a008617f4b52f1b5ec0",
      "LastModified" : "2016-10-08T03:17:34Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "BlendtabAnalyzer/BlendtabAnalyzer.pro" : {
      "ObjectId" : "d90b42101f40597607dc1a843095aef99942e490",
      "LastModified" : "2017-08-05T04:45:47Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "CMakeLists.txt" : {
      "ObjectId" : "6cbce5c3d1ce3309af09b5b2b5d641bf07e42db1",
      "LastModified" : "2018-09-08T13:25:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CarToTGAConverter/CarToTGAConverter.pro" : {
      "ObjectId" : "d90b42101f40597607dc1a843095aef99942e490",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "CelDepacker/CelDepacker.pro" : {
      "ObjectId" : "edfae121c8917ad0f9ad1fc16e62411d632633a1",
      "LastModified" : "2017-08-05T04:45:47Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "Common/Common.pri" : {
      "ObjectId" : "6e0e75616e88459db7862d16b77569f59d90c206",
      "LastModified" : "2017-08-05T04:45:47Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# For very old qmake, that can not recognize c++11 flag in config\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "FloorsExtractor/FloorsExtractor.pro" : {
      "ObjectId" : "d90b42101f40597607dc1a843095aef99942e490",
      "LastModified" : "2017-08-05T04:45:47Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "MapToTGAConverter/MapToTGAConverter.pro" : {
      "ObjectId" : "edfae121c8917ad0f9ad1fc16e62411d632633a1",
      "LastModified" : "2017-08-05T04:45:47Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "ObjToTGAConverter/ObjToTGAConverter.pro" : {
      "ObjectId" : "d90b42101f40597607dc1a843095aef99942e490",
      "LastModified" : "2017-08-05T04:45:47Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "PaletteExtractor/PaletteExtractor.pro" : {
      "ObjectId" : "d90b42101f40597607dc1a843095aef99942e490",
      "LastModified" : "2017-08-05T04:45:47Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "PanzerChasm/CMakeLists.txt" : {
      "ObjectId" : "dba23ce5298d30eea61cc796e253eec1ca5b9a31",
      "LastModified" : "2018-02-10T10:50:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Source and header files\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Detect MMX support\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Configure libraries\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Configure executable\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "PanzerChasm/FindSDL2.cmake" : {
      "ObjectId" : "464ca2d924e7469ca0477e390e65cfe71f80e47a",
      "LastModified" : "2018-02-08T02:20:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module defines\n\n# SDL2_LIBRARY, the name of the library to link against\n\n# SDL2_FOUND, if false, do not try to link to SDL2\n\n# SDL2_INCLUDE_DIR, where to find SDL.h\n\n#\n\n# This module responds to the the flag:\n\n# SDL2_BUILDING_LIBRARY\n\n# If this is defined, then no SDL2main will be linked in because\n\n# only applications need main().\n\n# Otherwise, it is assumed you are building an application and this\n\n# module will attempt to locate and set the the proper link flags\n\n# as part of the returned SDL2_LIBRARY variable.\n\n#\n\n# Don't forget to include SDLmain.h and SDLmain.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDL2main which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL2 library\n\n# (SDL2.dll, libsdl2.so, SDL2.framework, etc).\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2DIR\n\n# used in building SDL2.\n\n# l.e.galup  9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL guidelines.\n\n# Added a search for SDL2main which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL convention\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# message(\"<FindSDL2.cmake>\")\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Fink\n",
        "Line" : 75,
        "CharPositionInLine" : 5
      },
      "4" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 76,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "# Blastwave\n",
        "Line" : 77,
        "CharPositionInLine" : 10
      },
      "6" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDL2main. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDL2main for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# SDL2 may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# MinGW needs an additional link flag, -mwindows\n\n# It's total link flags should look like -lmingw32 -lSDL2main -lSDL2 -mwindows\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# For SDL2main\n",
        "Line" : 134,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 141,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 151,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# For MinGW library\n",
        "Line" : 158,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 163,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 165,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# message(\"</FindSDL2.cmake>\")\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "PanzerChasm/PanzerChasm.pro" : {
      "ObjectId" : "8540f17c0661c8b549635bfd4971e489685ea7aa",
      "LastModified" : "2018-02-08T02:20:02Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#put your SDL2 paths here\n",
        "Line" : 5,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Windows sockets 2 (ws2_32.lib).\n",
        "Line" : 13,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#MMX instructions here.\n\n# remove compiler option and define, if you do not need mmx, or if build target is not x86.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "CMAKE" : 3,
    "QMAKE" : 10
  },
  "ElapsedTime" : 850
}