{
  "Repository" : "3246",
  "Revision" : "HEAD",
  "ObjectId" : "2d6d2bad501d4d84c9b0075225201bdc9faafaea",
  "CommitTime" : "2019-04-17T17:33:05Z",
  "Files" : {
    "cmake/Modules/CMakeSystemSpecificInformation.cmake" : {
      "ObjectId" : "cc223a63afb24cd0a2208a880c5f8b310db33c96",
      "LastModified" : "2014-07-10T16:45:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# XXX Emscripten:\n\n# This file is copied as-is from the CMake source tree. Due to how CMake\n\n# platform toolchain files work, we must have a copy of this file located\n\n# relative to Emscripten platform toolchain file, or file inclusion order\n\n# in cmGlobalGenerator::EnableLanguage will not find Emscripten.cmake\n\n# toolchain file, and as a result, it is not possible to set the default\n\n# compilation output suffix to .js, and as a consequence the script\n\n# check_function_exists() will not function properly (it will try to\n\n# build to wrong file suffix)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake - Cross Platform Makefile Generator\n\n# Copyright 2000-2014 Kitware, Inc.\n\n# Copyright 2000-2011 Insight Software Consortium\n\n# All rights reserved.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ------------------------------------------------------------------------------\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# The above copyright and license notice applies to distributions of\n\n# CMake in source and binary form.  Some source files contain additional\n\n# notices of original copyright by their contributors; see each source\n\n# for details.  Third-party software packages supplied with CMake under\n\n# compatible licenses provide their own copyright notices documented in\n\n# corresponding subdirectories.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ------------------------------------------------------------------------------\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# CMake was initially developed by Kitware with the following sponsorship:\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#  * National Library of Medicine at the National Institutes of Health\n\n#    as part of the Insight Segmentation and Registration Toolkit (ITK).\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#  * US National Labs (Los Alamos, Livermore, Sandia) ASC Parallel\n\n#    Visualization Initiative.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#  * National Alliance for Medical Image Computing (NAMIC) is funded by the\n\n#    National Institutes of Health through the NIH Roadmap for Medical Research,\n\n#    Grant U54 EB005149.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#  * Kitware, Inc.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# This file is included by cmGlobalGenerator::EnableLanguage.\n\n# It is included after the compiler has been determined, so\n\n# we know things like the compiler name and if the compiler is gnu.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# before cmake 2.6 these variables were set in cmMakefile.cxx. This is still\n\n# done to keep scripts and custom language and compiler modules working.\n\n# But they are reset here and set again in the platform files for the target\n\n# platform, so they can be used for testing the target platform instead\n\n# of testing the host platform.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# include Generic system information\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# 2. now include SystemName.cmake file to set the system specific information\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# optionally include a file which can do extra-generator specific things, e.g.\n\n# CMakeFindEclipseCDT4.cmake asks gcc for the system include dirs for the Eclipse CDT4 generator\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# for most systems a module is the same as a shared library\n\n# so unless the variable CMAKE_MODULE_EXISTS is set just\n\n# copy the values from the LIBRARY variables\n\n# this has to be done after the system information has been loaded\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "cmake/Modules/CheckTypeSize.cmake" : {
      "ObjectId" : "e277605977b49190e6ad86cd1e6f43eb7f6277f9",
      "LastModified" : "2015-05-12T14:24:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# CheckTypeSize\n\n# -------------\n\n#\n\n# Check sizeof a type\n\n#\n\n# ::\n\n#\n\n#   CHECK_TYPE_SIZE(TYPE VARIABLE [BUILTIN_TYPES_ONLY]\n\n#                                 [LANGUAGE <language>])\n\n#\n\n# Check if the type exists and determine its size.  On return,\n\n# \"HAVE_${VARIABLE}\" holds the existence of the type, and \"${VARIABLE}\"\n\n# holds one of the following:\n\n#\n\n# ::\n\n#\n\n#    <size> = type has non-zero size <size>\n\n#    \"0\"    = type has arch-dependent size (see below)\n\n#    \"\"     = type does not exist\n\n#\n\n# Both ``HAVE_${VARIABLE}`` and ``${VARIABLE}`` will be created as internal\n\n# cache variables.\n\n#\n\n# Furthermore, the variable \"${VARIABLE}_CODE\" holds C preprocessor code\n\n# to define the macro \"${VARIABLE}\" to the size of the type, or leave\n\n# the macro undefined if the type does not exist.\n\n#\n\n# The variable \"${VARIABLE}\" may be \"0\" when CMAKE_OSX_ARCHITECTURES has\n\n# multiple architectures for building OS X universal binaries.  This\n\n# indicates that the type size varies across architectures.  In this\n\n# case \"${VARIABLE}_CODE\" contains C preprocessor tests mapping from\n\n# each architecture macro to the corresponding type size.  The list of\n\n# architecture macros is stored in \"${VARIABLE}_KEYS\", and the value for\n\n# each key is stored in \"${VARIABLE}-${KEY}\".\n\n#\n\n# If the BUILTIN_TYPES_ONLY option is not given, the macro checks for\n\n# headers <sys/types.h>, <stdint.h>, and <stddef.h>, and saves results\n\n# in HAVE_SYS_TYPES_H, HAVE_STDINT_H, and HAVE_STDDEF_H.  The type size\n\n# check automatically includes the available headers, thus supporting\n\n# checks of types defined in the headers.\n\n#\n\n# If LANGUAGE is set, the specified compiler will be used to perform the\n\n# check. Acceptable values are C and CXX\n\n#\n\n# Despite the name of the macro you may use it to check the size of more\n\n# complex expressions, too.  To check e.g.  for the size of a struct\n\n# member you can do something like this:\n\n#\n\n# ::\n\n#\n\n#   check_type_size(\"((struct something*)0)->member\" SIZEOF_MEMBER)\n\n#\n\n#\n\n#\n\n# The following variables may be set before calling this macro to modify\n\n# the way the check is run:\n\n#\n\n# ::\n\n#\n\n#   CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#   CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#   CMAKE_REQUIRED_INCLUDES = list of include directories\n\n#   CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n\n#   CMAKE_REQUIRED_QUIET = execute quietly without messages\n\n#   CMAKE_EXTRA_INCLUDE_FILES = list of extra headers to include\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2002-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Helper function.  DO NOT CALL DIRECTLY.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include header files.\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Perform the check.\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# The check failed to compile.\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# parse arguments\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# change to MATCHES for more keys\n",
        "Line" : 163,
        "CharPositionInLine" : 43
      },
      "9" : {
        "Text" : "# Optionally check for standard headers.\n",
        "Line" : 185,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Compute or load the size or size map.\n",
        "Line" : 203,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Create preprocessor code.\n",
        "Line" : 213,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "cmake/Modules/FindOpenAL.cmake" : {
      "ObjectId" : "3170966d66c4c9cfe0ce502fd8010051c2e67878",
      "LastModified" : "2015-05-12T14:24:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate OpenAL\n\n# This module defines\n\n# OPENAL_LIBRARY\n\n# OPENAL_FOUND, if false, do not try to link to OpenAL \n\n# OPENAL_INCLUDE_DIR, where to find the headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The implementation is based on the standard FindOpenAL.cmake provided with CMake,\n\n# but customized for targeting Emscripten only.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For Emscripten-compiled apps in the test suite (test_alut), this is expected...\n",
        "Line" : 13,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# ... but the stock FindOpenAL.cmake would have returned this.\n\n#SET(OPENAL_INCLUDE_DIR \"${EMSCRIPTEN_ROOT_PATH}/system/include/AL\")\n",
        "Line" : 15,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# No library to link against for OpenAL, this is picked up automatically by library_openal.js,\n\n# but need to report something, or CMake thinks we failed in the search.\n",
        "Line" : 18,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 5
    },
    "cmake/Modules/FindOpenGL.cmake" : {
      "ObjectId" : "f348ba25ccec9fb60378df1cf9566867d439cd21",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate OpenGL\n\n# This module defines:\n\n# OPENGL_FOUND       - system has OpenGL\n\n# OPENGL_XMESA_FOUND - system has XMESA\n\n# OPENGL_GLU_FOUND   - system has GLU\n\n# OPENGL_INCLUDE_DIR - the GL include directory\n\n# OPENGL_LIBRARIES   - Link these to use OpenGL and GLU\n\n# OPENGL_gl_LIBRARY  - Path to OpenGL Library\n\n# OPENGL_glu_LIBRARY - Path to GLU Library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The implementation is based on the standard FindOpenGL.cmake provided with CMake,\n\n# but customized for targeting Emscripten only.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# These libraries are provided with Emscripten\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Doesn't look like this one is part of Emscripten\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This is the path where <GL/gl.h> is found\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# No library to link against for OpenGL, since Emscripten picks it up automatically from library_webgl.js,\n\n# but need to report something, or CMake thinks we failed in the search.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/Modules/Platform/Emscripten.cmake" : {
      "ObjectId" : "0ef6f5838577a70dd699ecd6f3d443a5f2edac56",
      "LastModified" : "2019-04-01T22:51:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is a 'toolchain description file' for CMake.\n\n# It teaches CMake about the Emscripten compiler, so that CMake can generate makefiles\n\n# from CMakeLists.txt that invoke emcc.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# At the moment this required minimum version is not exact (i.e. we do not know of a feature that needs CMake 3.0.0 specifically)\n\n# It is possible that CMake 3.0.0 is too old and will not actually work. If you do find such a case, please report it at Emscripten\n\n# bug tracker to revise the minimum requirement. See also https://github.com/emscripten-core/emsdk/issues/108\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# To use this toolchain file with CMake, invoke CMake with the following command line parameters\n\n# cmake -DCMAKE_TOOLCHAIN_FILE=<EmscriptenRoot>/cmake/Modules/Platform/Emscripten.cmake\n\n#       -DCMAKE_BUILD_TYPE=<Debug|RelWithDebInfo|Release|MinSizeRel>\n\n#       -G \"Unix Makefiles\" (Linux and OSX)\n\n#       -G \"MinGW Makefiles\" (Windows)\n\n#       <path/to/CMakeLists.txt> # Note, pass in here ONLY the path to the file, not the filename 'CMakeLists.txt' itself.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# After that, build the generated Makefile with the command 'make'. On Windows, you may download and use 'mingw32-make' instead.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The following variable describes the target OS we are building to.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Advertise Emscripten as a 32-bit platform (as opposed to CMAKE_SYSTEM_PROCESSOR=x86_64 for 64-bit platform),\n\n# since some projects (e.g. OpenCV) use this to detect bitness.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Tell CMake how it should instruct the compiler to generate multiple versions of an outputted .so library: e.g. \"libfoo.so, libfoo.so.1, libfoo.so.1.4\" etc.\n\n# This feature is activated if a shared library project has the property SOVERSION defined.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# In CMake, CMAKE_HOST_WIN32 is set when we are cross-compiling from Win32 to Emscripten: http://www.cmake.org/cmake/help/v2.8.12/cmake.html#variable:CMAKE_HOST_WIN32\n\n# The variable WIN32 is set only when the target arch that will run the code will be WIN32, so unset WIN32 when cross-compiling.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# The same logic as above applies for APPLE and CMAKE_HOST_APPLE, so unset APPLE.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# And for UNIX and CMAKE_HOST_UNIX. However, Emscripten is often able to mimic being a Linux/Unix system, in which case a lot of existing CMakeLists.txt files can be configured for Emscripten while assuming UNIX build, so this is left enabled.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Do a no-op access on the CMAKE_TOOLCHAIN_FILE variable so that CMake will not issue a warning on it being unused.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# In order for check_function_exists() detection to work, we must signal it to pass an additional flag, which causes the compilation\n\n# to abort if linking results in any undefined symbols. The CMake detection mechanism depends on the undefined symbol error to be raised.\n\n# Disable wasm in cmake checks so that (1) we do not depend on wasm support just for configuration (perhaps the user does not intend\n\n# to build to wasm; using asm.js only depends on js which we need anyhow), and (2) we don't have issues with a separate .wasm file\n\n# on the side, async startup, etc..\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Locate where the Emscripten compiler resides in relative to this toolchain file.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# If not found by above search, locate using the EMSCRIPTEN environment variable.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Abort if not found. \n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Normalize, convert Windows backslashes to forward slashes or CMake will crash.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Specify the compilers to use for C and C++\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Don't allow CMake to autodetect the compiler, since it does not understand Emscripten.\n\n# Pass -DEMSCRIPTEN_FORCE_COMPILERS=OFF to disable (sensible mostly only for testing/debugging purposes).\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Detect version of the 'emcc' executable. Note that for CMake, we tell it the version of the Clang compiler and not the version of Emscripten,\n\n# because CMake understands Clang better.\n",
        "Line" : 107,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# Toolchain script is interpreted multiple times, so don't rerun the check if already done before.\n",
        "Line" : 109,
        "CharPositionInLine" : 35
      },
      "20" : {
        "Text" : "# Capture the Emscripten version to EMSCRIPTEN_VERSION variable.\n",
        "Line" : 129,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# To find programs to execute during CMake run time with find_program(), e.g. 'git' or so, we allow looking\n\n# into system paths.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Since Emscripten is a cross-compiler, we should never look at the system-provided directories like /usr/include and so on.\n\n# Therefore only CMAKE_FIND_ROOT_PATH should be used as a find directory. See http://www.cmake.org/cmake/help/v3.0/variable/CMAKE_FIND_ROOT_PATH_MODE_INCLUDE.html\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# We would prefer to specify a standard set of Clang+Emscripten-friendly common convention for suffix files, especially for CMake executable files,\n\n# but if these are adjusted, ${CMAKE_ROOT}/Modules/CheckIncludeFile.cmake will fail, since it depends on being able to compile output files with predefined names.\n\n#SET(CMAKE_LINK_LIBRARY_SUFFIX \"\")\n\n#SET(CMAKE_STATIC_LIBRARY_PREFIX \"\")\n\n#SET(CMAKE_SHARED_LIBRARY_PREFIX \"\")\n\n#SET(CMAKE_FIND_LIBRARY_PREFIXES \"\")\n\n#SET(CMAKE_FIND_LIBRARY_SUFFIXES \".bc\")\n\n#SET(CMAKE_SHARED_LIBRARY_SUFFIX \".bc\")\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Specify the program to use when building static libraries. Force Emscripten-related command line options to clang.\n",
        "Line" : 210,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "# Set a global EMSCRIPTEN variable that can be used in client CMakeLists.txt to detect when building using Emscripten.\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Hardwire support for cmake-2.8/Modules/CMakeBackwardsCompatibilityC.cmake without having CMake to try complex things\n\n# to autodetect these:\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# A global counter to guarantee unique names for js library files.\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Internal function: Do not call from user CMakeLists.txt files. Use one of em_link_js_library()/em_link_pre_js()/em_link_post_js() instead.\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# User can input list of JS files either as a single list, or as variable arguments to this function, so iterate over varargs, and treat each\n\n# item in varargs as a list itself, to support both syntax forms.\n",
        "Line" : 279,
        "CharPositionInLine" : 1
      },
      "30" : {
        "Text" : "# If the user edits the JS file, we want to relink the emscripten application, but unfortunately it is not possible to make a link step\n\n# depend directly on a source file. Instead, we must make a dummy no-op build target on that source file, and make the project depend on\n\n# that target.\n",
        "Line" : 283,
        "CharPositionInLine" : 3
      },
      "31" : {
        "Text" : "# Sanitate the source .js filename to a good symbol name to use as a dummy filename.\n",
        "Line" : 287,
        "CharPositionInLine" : 3
      },
      "32" : {
        "Text" : "# Create a new static library target that with a single dummy .c file.\n",
        "Line" : 293,
        "CharPositionInLine" : 3
      },
      "33" : {
        "Text" : "# Make the dummy .c file depend on the .js file we are linking, so that if the .js file is edited, the dummy .c file, and hence the static library will be rebuild (no-op). This causes the main application to be relinked, which is what we want.\n\n# This approach was recommended by http://www.cmake.org/pipermail/cmake/2010-May/037206.html\n",
        "Line" : 295,
        "CharPositionInLine" : 3
      },
      "34" : {
        "Text" : "# Link the js-library to the target\n\n# When a linked library starts with a \"-\" cmake will just add it to the linker command line as it is.\n\n# The advantage of doing it this way is that the js-library will also be automatically linked to targets\n\n# that depend on this target.\n",
        "Line" : 300,
        "CharPositionInLine" : 3
      },
      "35" : {
        "Text" : "# This function links a (list of ) .js library file(s) to the given CMake project.\n\n# Example: em_link_js_library(my_executable \"lib1.js\" \"lib2.js\")\n\n#    will result in emcc passing --js-library lib1.js --js-library lib2.js to the emscripten linker, as well as\n\n#    tracking the modification timestamp between the linked .js files and the main project, so that editing the .js file\n\n#    will cause the target project to be relinked.\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# This function is identical to em_link_js_library(), except the .js files will be added with '--pre-js file.js' command line flag,\n\n# which is generally used to add some preamble .js code to a generated output file.\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# This function is identical to em_link_js_library(), except the .js files will be added with '--post-js file.js' command line flag,\n\n# which is generally used to add some postamble .js code to a generated output file.\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Experimental support for targeting generation of Visual Studio project files (vs-tool) of Emscripten projects for Windows.\n\n# To use this, pass the combination -G \"Visual Studio 10\" -DCMAKE_TOOLCHAIN_FILE=Emscripten.cmake\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# By default, CMake generates VS project files with a <GenerateManifest>true</GenerateManifest> directive.\n\n# This causes VS to attempt to invoke rc.exe during the build, which will fail since app manifests are meaningless for Emscripten.\n\n# To disable this, add the following linker flag. This flag will not go to emcc, since the Visual Studio CMake generator will swallow it.\n",
        "Line" : 336,
        "CharPositionInLine" : 1
      },
      "40" : {
        "Text" : "# CMake is hardcoded to write a ClCompile directive <ObjectFileName>$(IntDir)</ObjectFileName> in all VS project files it generates.\n\n# This makes VS pass emcc a -o param that points to a directory instead of a file, which causes emcc autogenerate the output filename.\n\n# CMake is hardcoded to assume all object files have the suffix .obj, so adjust the emcc-autogenerated default suffix name to match.\n",
        "Line" : 340,
        "CharPositionInLine" : 1
      },
      "41" : {
        "Text" : "# Also hint CMake that it should not hardcode <ObjectFileName> generation. Requires a custom CMake build for this to work (ignored on others)\n\n# See http://www.cmake.org/Bug/view.php?id=14673 and https://github.com/juj/CMake\n",
        "Line" : 344,
        "CharPositionInLine" : 1
      },
      "42" : {
        "Text" : "# Apply and cache Emscripten Visual Studio IDE-specific linker flags.\n",
        "Line" : 348,
        "CharPositionInLine" : 1
      },
      "43" : {
        "Text" : "# No-op on CMAKE_CROSSCOMPILING_EMULATOR so older versions of cmake do not\n\n# complain about unused CMake variable.\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 44
    },
    "cmake/Modules/TestBigEndian.cmake" : {
      "ObjectId" : "81d478998784b2212fe2d96e38d14b8339aedfac",
      "LastModified" : "2015-05-12T14:24:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# TestBigEndian\n\n# -------------\n\n#\n\n# The TestBigEndian.cmake module that ships with CMake, which\n\n# checks if the system is big endian or little endian, assumes\n\n# that a binary is produced that will have bytes that correspond to the\n\n# endianness on the target system. Since emscripten produces Javascript, we\n\n# override the default behavior and always return little endian.\n\n#\n\n# ::\n\n#\n\n#   TEST_BIG_ENDIAN(VARIABLE)\n\n#   VARIABLE - variable to store the result to\n\n#=============================================================================\n\n# Copyright 2002-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "site/Makefile" : {
      "ObjectId" : "7e8fe45a63ce49a6828820c7cb86996dfcb189b6",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# User-friendly check for sphinx-build\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Internal variables.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "system/include/libcxx/CMakeLists.txt" : {
      "ObjectId" : "b98e09260ca1730be95a3168a1f078f63455deb9",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generate and install a custom __config header. The new header is created\n\n# by  prepending __config_site to the current __config header.\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Add a target that executes the generation commands.\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Install the generated header as __config.\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# this target is just needed as a placeholder for the distribution target\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Stripping is a no-op for headers\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "system/lib/libc/musl/Makefile" : {
      "ObjectId" : "8246b78f73b341c3eb2e3e4c4b4684a130e777ea",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Makefile for musl (requires GNU make)\n\n#\n\n# This is how simple every makefile should be...\n\n# No, I take that back - actually most should be less than half this size.\n\n#\n\n# Use config.mak to override any of the following variables.\n\n# Do not make changes here.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Choose invocation of assembler to be used\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/box2d/Box2D/Box2DConfig.cmake" : {
      "ObjectId" : "b567c17d14df997bb1edfe29e50e7a28b998c51a",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/box2d/Box2D/CMakeLists.txt" : {
      "ObjectId" : "445c248acfa189a1f5b33fa02cfa8c3cf7b0d66d",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# These are used to create visual studio folders.\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# install headers\n",
        "Line" : 184,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# install libraries\n",
        "Line" : 194,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# install build system hooks for third-party apps\n",
        "Line" : 202,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "tests/box2d/CMakeLists.txt" : {
      "ObjectId" : "a9dc06cbfbea480c962cd00b8d934362e695ef61",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The Box2D library.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# HelloWorld console example.\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Testbed and dependencies.\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "tests/box2d/HelloWorld/CMakeLists.txt" : {
      "ObjectId" : "c6ae2b2fd45efd3e04f48e0f24b1c9926b6f85aa",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Hello World examples\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/box2d/Makefile" : {
      "ObjectId" : "ee1f4b5e270b776aa892d59002530298438b0505",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for generating a Box2D library using Emscripten.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/box2d/Testbed/CMakeLists.txt" : {
      "ObjectId" : "b030a4840ea1f86ddcbceb8e92199c2cece86486",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Some flags for Freeglut and GLUI.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define the framework files.\r\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#define the test files.\r\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# These are used to create visual studio folders.\r\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We are not using the Apple's framework version, but X11's\r\n",
        "Line" : 72,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 5
    },
    "tests/box2d/freeglut/CMakeLists.txt" : {
      "ObjectId" : "8c97446deb60bbb08eb945ad0305b4d498798912",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/box2d/glui/CMakeLists.txt" : {
      "ObjectId" : "1e502988013506141c9ede56f4bb7e640ea9aa6d",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/bullet/CMakeLists.txt" : {
      "ObjectId" : "55299a0615d156239540b0b52f39c4138483956e",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#this line has to appear before 'PROJECT' in order to be able to disable incremental linking\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# SET(CMAKE_BUILD_TYPE \"Debug\")\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#MESSAGE(\"CMAKE_CXX_FLAGS_DEBUG=\"+${CMAKE_CXX_FLAGS_DEBUG})\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#SET(CMAKE_EXE_LINKER_FLAGS_INIT    \"/STACK:10000000 /INCREMENTAL:NO\")\t\n\n#SET(CMAKE_EXE_LINKER_FLAGS    \"/STACK:10000000 /INCREMENTAL:NO\")\t\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#MESSAGE(\"MSVC_INCREMENTAL_YES_FLAG\"+${MSVC_INCREMENTAL_YES_FLAG})\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#MESSAGE(\"MSVC_INCREMENTAL_DEFAULT\"+${MSVC_INCREMENTAL_DEFAULT})\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#\t\tSTRING(REPLACE \"INCREMENTAL:YES\" \"INCREMENTAL:NO\" replacementFlags2 ${CMAKE_EXE_LINKER_FLAGS}) \n\n#\t\tSET(CMAKE_EXE_LINKER_FLAGS ${replacementFlag2}) \n\n#\t\tSTRING(REPLACE \"INCREMENTAL:YES\" \"\" replacementFlags3 ${CMAKE_EXTRA_LINK_FLAGS}) \n\n#\t\tSET(CMAKE_EXTRA_LINK_FLAGS ${replacementFlag3}) \n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#We statically link to reduce dependancies\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#AMD adds an extras slash at the end of the ATISTREAMSDKROOT variable\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# This is the shortcut to finding GLU, GLUT and OpenGL if they are properly installed on your system\n\n# This should be the case.\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ADD_DEFINITIONS(-DBT_USE_FREEGLUT)\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#TODO add better GLUT detection for MinGW\n",
        "Line" : 250,
        "CharPositionInLine" : 3
      },
      "12" : {
        "Text" : "# This is added for linux. This should always work if everything is installed and working fine.\n",
        "Line" : 269,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#  \"Demos_ps3\")\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#Maya Dynamica plugin is moved to http://dynamica.googlecode.com\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#by default, don't enable the 'INSTALL' option for Xcode and MSVC projectfiles\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## the following are directories where stuff will be installed to\n",
        "Line" : 316,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "#INSTALL of other files requires CMake 2.6\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "tests/bullet/Extras/CMakeLists.txt" : {
      "ObjectId" : "0b7ba7a1b9f75fe9b04b974fbb65b728a19ff3ce",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Maya Dynamica plugin is moved to http://dynamica.googlecode.com\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/bullet/Extras/ConvexDecomposition/CMakeLists.txt" : {
      "ObjectId" : "693e9d26a426faf3b080e8ee31dbbf9c47e8f04e",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "tests/bullet/Extras/Makefile.am" : {
      "ObjectId" : "8628c3945a7cb27d36f20e33efa66f91bc099cc8",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "tests/bullet/Extras/glui/CMakeLists.txt" : {
      "ObjectId" : "c2018a7855d30eebef1d0ea75111317ab9b38021",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is basically the overall name of the project in Visual Studio this is the name of the Solution File\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For every executable you have with a main method you should have an add_executable line below.\n\n# For every add executable line you should list every .cpp and .h file you have associated with that executable.  \n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is the variable for Windows.  I use this to define the root of my directory structure.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# You shouldn't have to modify anything below this line \n\n########################################################\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This is the shortcut to finding GLU, GLUT and OpenGL if they are properly installed on your system\n\n# This should be the case.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This is the Windows code for which Opengl, and Glut are not properly installed\n\n# since I can't install them I must cheat and copy libraries around\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# LINK_DIRECTORIES(${GLUT_ROOT}\\\\lib)\n\n# IF (${GLUT_glut_LIBRARY} MATCHES \"GLUT_glut_LIBRARY-NOTFOUND\")\n\n#   LINK_LIBRARIES(${GLUT_ROOT}\\\\lib\\\\glut32 ${OPENGL_gl_LIBRARY} ${OPENGL_glU_LIBRARY})\n\n#   TARGET_LINK_LIBRARIES(table ${GLUT_ROOT}\\\\lib\\\\glut32)\n",
        "Line" : 27,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "#\n\n#    ADD_CUSTOM_COMMAND(TARGET table POST_BUILD COMMAND copy ${GLUT_ROOT}\\\\lib\\\\glut32.dll ${GLUT_ROOT}\\\\bin\\\\vs2005\\\\Debug\n\n#                        COMMAND copy ${GLUT_ROOT}\\\\lib\\\\glut32.dll ${GLUT_ROOT}\\\\bin\\\\vs2003\\\\Debug \n\n#            COMMAND copy ${GLUT_ROOT}\\\\lib\\\\glut32.dll ${GLUT_ROOT}\\\\bin\\\\vs6\\\\Debug)\n\n#  ELSE (${GLUT_glut_LIBRARY} MATCHES \"GLUT_glut_LIBRARY-NOTFOUND\")\n\n#    LINK_LIBRARIES(${GLUT_glut_LIBRARY} ${OPENGL_gl_LIBRARY} ${OPENGL_glu_LIBRARY}) \n\n#    TARGET_LINK_LIBRARIES(table ${GLUT_glut_LIBRARY})\n\n#  ENDIF(${GLUT_glut_LIBRARY} MATCHES \"GLUT_glut_LIBRARY-NOTFOUND\")\n\n#  TARGET_LINK_LIBRARIES(table ${OPENGL_gl_LIBRARY})\n\n#  TARGET_LINK_LIBRARIES(table ${OPENGL_glu_LIBRARY}) \n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This is the lines for linux.  This should always work if everything is installed and working fine.\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#  SET(CMAKE_BUILD_TYPE Debug)\n\n#  SET(CMAKE_CXX_FLAGS_DEBUG \"-g\")\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#  TARGET_LINK_LIBRARIES(table ${GLUT_glut_LIBRARY} ${OPENGL_gl_LIBRARY} ${OPENGL_glu_LIBRARY})\n\n#  TARGET_LINK_LIBRARIES(checker ${GLUT_glut_LIBRARY} ${OPENGL_gl_LIBRARY} ${OPENGL_glu_LIBRARY})\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "tests/bullet/Makefile.am" : {
      "ObjectId" : "32ecfe7a93e1aec9e27663db8b03638adc18d9ac",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "tests/bullet/bullet.pc.cmake" : {
      "ObjectId" : "c5649d58d237e693539993bfe556cc6895dc8914",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/bullet/src/BulletCollision/CMakeLists.txt" : {
      "ObjectId" : "cef6293e2f143bd1a8f94ce331b2e1c441109d27",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#INSTALL of other files requires CMake 2.6\n",
        "Line" : 253,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Have to list out sub-directories manually:\n",
        "Line" : 270,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "tests/bullet/src/BulletCollision/ibmsdk/Makefile" : {
      "ObjectId" : "8a787832683f03c9925a4d3d5d55aa4b53d523e9",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#### Source code Dirs\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### Library\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#### Compiler flags\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#### Optimization level flags\n\n#CC_OPT_LEVEL =  $(CC_OPT_LEVEL_DEBUG)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##### Objects to be archived in lib\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#### Install directories\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "tests/bullet/src/BulletDynamics/CMakeLists.txt" : {
      "ObjectId" : "894350fa98198f3eeaa61276d1d548febedace62",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Have to list out sub-directories manually:\n",
        "Line" : 106,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 1
    },
    "tests/bullet/src/BulletDynamics/ibmsdk/Makefile" : {
      "ObjectId" : "57505d8351877101910aea8d534e7eed40a56d0d",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#### Source code Dirs\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### Library\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#### Compiler flags\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#### Optimization level flags\n\n#CC_OPT_LEVEL =  $(CC_OPT_LEVEL_DEBUG)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##### Objects to be archived in lib\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#### Install directories \n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "tests/bullet/src/BulletMultiThreaded/CMakeLists.txt" : {
      "ObjectId" : "d15c317f0a823e9b7d1f4b85891a3d01e0ff6e45",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\t\tSPURS_PEGatherScatterTask/SpuPEGatherScatterTask.cpp\n\n#\t\tSPURS_PEGatherScatterTask/SpuPEGatherScatterTask.h\n\n#\t\tSpuPEGatherScatterTaskProcess.cpp\n\n#\t\tSpuPEGatherScatterTaskProcess.h\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Some GPU related stuff, mainly CUDA and perhaps OpenCL\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#INSTALL of other files requires CMake 2.6\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#\t\t\tIF(INSTALL_EXTRA_LIBS)\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\t\t\tENDIF (INSTALL_EXTRA_LIBS)\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "tests/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/CMakeLists.txt" : {
      "ObjectId" : "63cc88b7a72a4a2b2b500563dde035669ae5fbcd",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/CPU/CMakeLists.txt" : {
      "ObjectId" : "908ff37369c078269f8e5dae2c6ad7342361e741",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#headers are already installed by BulletMultiThreaded library\r\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/DX11/CMakeLists.txt" : {
      "ObjectId" : "393d37d6a10e8fea633e4d9fad121018252e632e",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# OpenCL and HLSL Shaders.\r\n\n# Build rules generated to stringify these into headers\r\n\n# which are needed by some of the sources\r\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#headers are already installed by BulletMultiThreaded library\r\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/AMD/CMakeLists.txt" : {
      "ObjectId" : "38e5a6620e54955b2a2c48ed060ed827dbe0c805",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# OpenCL and HLSL Shaders.\r\n\n# Build rules generated to stringify these into headers\r\n\n# which are needed by some of the sources\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\tOutputToVertexArray\r\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#headers are already installed by BulletMultiThreaded library\r\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/Apple/CMakeLists.txt" : {
      "ObjectId" : "5c54c6587fdca56a39790f4f708c704fb75b9378",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# OpenCL and HLSL Shaders.\r\n\n# Build rules generated to stringify these into headers\r\n\n# which are needed by some of the sources\r\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\tOutputToVertexArray\r\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#headers are already installed by BulletMultiThreaded library\r\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/CMakeLists.txt" : {
      "ObjectId" : "d298956ce9635a032530a0cadbc918dc3dfc3450",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/MiniCL/CMakeLists.txt" : {
      "ObjectId" : "d4627b0f8072ea6b4b6b8d273124c43b8d80f51c",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# OpenCL and HLSL Shaders.\r\n\n# Build rules generated to stringify these into headers\r\n\n# which are needed by some of the sources\r\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\tOutputToVertexArray\r\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#headers are already installed by BulletMultiThreaded library\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/bullet/src/BulletMultiThreaded/GpuSoftBodySolvers/OpenCL/NVidia/CMakeLists.txt" : {
      "ObjectId" : "f102d36939f5a0f8e7e620f35d3d1a7a7c276cb7",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# OpenCL and HLSL Shaders.\r\n\n# Build rules generated to stringify these into headers\r\n\n# which are needed by some of the sources\r\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\tOutputToVertexArray\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#headers are already installed by BulletMultiThreaded library\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/bullet/src/BulletSoftBody/CMakeLists.txt" : {
      "ObjectId" : "10537958280c0f408c9ac6115586903c82ab6454",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SUBDIRS( Solvers )\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/bullet/src/CMakeLists.txt" : {
      "ObjectId" : "5f5ab012ff64787996a88e01b10b3bca864ec2d9",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#INSTALL of other files requires CMake 2.6\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Don't actually need to install any common files, the frameworks include everything\n",
        "Line" : 7,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 2
    },
    "tests/bullet/src/LinearMath/CMakeLists.txt" : {
      "ObjectId" : "54ec735c8044a26ac676a32e36d017015fb5022d",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FILES_MATCHING requires CMake 2.6\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "tests/bullet/src/LinearMath/ibmsdk/Makefile" : {
      "ObjectId" : "04148730f820e9b770f46a31e2248229bc713a84",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#### Source code Dirs\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#### Library\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#### Compiler flags\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#### Optimization level flags\n\n#CC_OPT_LEVEL =  $(CC_OPT_LEVEL_DEBUG)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##### Objects to be archived in lib\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#### Install directories\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "tests/bullet/src/Makefile.am" : {
      "ObjectId" : "af50d184937e297b0b46cabf7f32b05b7ae04403",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "tests/bullet/src/MiniCL/CMakeLists.txt" : {
      "ObjectId" : "bfaaf6b71364c768e81baafb87a415f0386c5200",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#MiniCL provides a small subset of OpenCL\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#INSTALL of other files requires CMake 2.6\r\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#\t\t\tIF(INSTALL_EXTRA_LIBS)\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\t\t\tENDIF (INSTALL_EXTRA_LIBS)\r\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tests/bullet/src/ibmsdk/Makefile" : {
      "ObjectId" : "1a0453eefd64bcf19c08a10208e2d699dd96681b",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#### Visit Bullet library ibmsdk dirs and build  code\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/cmake/cmake_with_emval/CMakeLists.txt" : {
      "ObjectId" : "a6d487f7142eaca23ae2c3881f7c7fb9c710ac93",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/cmake/cpp_lib/CMakeLists.txt" : {
      "ObjectId" : "94a89f3f727a30d1325d53e63f9d5244ff3bfd90",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/cmake/emscripten_version/CMakeLists.txt" : {
      "ObjectId" : "6f161bbaf85465295f1a0e0d81e4e601538a46bb",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# EMSCRIPTEN_VERSION CMake variable is introduced in Emscripten version 1.38.6, so test that the value is at least that new.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# A particular gotcha about Emscripten version testing: do not use the following code:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#    if (${EMSCRIPTEN_VERSION} VERSION_GREATER \"1.38.5\")\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# because this would fail when running on an Emscripten version older than 1.38.6. That is, note the needed double quotes\n\n# around ${EMSCRIPTEN_VERSION}. This is because in older Emscripten versions, the EMSCRIPTEN_VERSION CMake variable did\n\n# not yet exist, so the above if statement would expand to an empty left hand side: if ( VERSION_GREATER_EQUAL 1.38.6)\n\n# which would be a syntax error. if (\"\" VERSION_GREATER_EQUAL 1.38.6) is fine however.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tests/cmake/static_lib/CMakeLists.txt" : {
      "ObjectId" : "8270d80f35dcad7b244670639082a5e44df5b1d2",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test mode that checks that it's possible to override the file suffix (independent of whether ar archive or LLVM bitcode file is created)\n\n# Note that \"-DCMAKE_STATIC_LIBRARY_SUFFIX=foo\" cannot be passed to CMake from command line to override the suffix, but changing it needs\n\n# to happen in the CMakeLists.txt file itself. (this is likely due to CMake internal script evaluation order(?))\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Also check that we can control the prefix. Setting this to an empty string can be useful to get rid of the \"lib\" prefix that gets added by default.\n",
        "Line" : 11,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "tests/cmake/stdproperty/CMakeLists.txt" : {
      "ObjectId" : "8cfad672623e3a9fe6b6249031b1ee9c1745b11d",
      "LastModified" : "2019-02-12T19:00:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Items marked with '***' are tested to be identical across CMake configures with Emscripten Clang when targeting native vs Emscripten.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/cmake/target_html/CMakeLists.txt" : {
      "ObjectId" : "a4a8c9ed191ba30b2945372dfb12a7d291d03fe5",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Either MinSizeRel, RelWithDebInfo or Release, all which run with optimizations enabled.\n",
        "Line" : 11,
        "CharPositionInLine" : 7
      },
      "1" : {
        "Text" : "# with NO_DEFAULT_PATH + ONLY_CMAKE_FIND_ROOT_PATH, we ensure that\n\n# only ${CMAKE_FIND_ROOT_PATH}/include will be searched for\n\n# emscripten/emscripten.h\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Artificially make up a long command line. This tests that long command lines work when passed to check_include_file().\n\n# This fails on Windows with CMake 3.2.0 with mingw32-make (GNU make 4.0) and older. Upgrade to CMake 3.3.1 to fix.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CMake built-in check_include_file() macro interacts with CMAKE_EXECUTABLE_SUFFIX, so make sure it works after user changes that.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Validating asm.js requires SpiderMonkey JS VM - detect its presence via the SPIDERMONKEY environment variable.\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "tests/cmake/target_js/CMakeLists.txt" : {
      "ObjectId" : "124927aa2b80f577b3f46fcbd5829b86fc8cb41a",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Either MinSizeRel, RelWithDebInfo or Release, all which run with optimizations enabled.\n",
        "Line" : 15,
        "CharPositionInLine" : 7
      },
      "1" : {
        "Text" : "# Ensure synchronous startup for this test, whose output expects it\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Test that the CMake-provided macro check_function_exists() works.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Test that the CMake-provided macro check_function_exists() is not actually trivially returning true for everything.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Test that the CMake-provided macro check_include_file() works.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Test that the CMake-provided macro check_include_file() is not actually trivially returning true for everything.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake built-in check_include_file() macro interacts with CMAKE_EXECUTABLE_SUFFIX, so make sure it works after user changes that.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Requires CMAKE_CROSSCOMPILING_EMULATOR support.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# GOTCHA: If your project has custom link flags, these must be set *before* calling any of the em_link_xxx functions!\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# To link .js files using the --js-library flag, use the following helper function.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# To link .js files using the --pre-js flag, use the following helper function.\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# To link .js files using the --post-js flag, use the following helper function.\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "tests/cmake/target_library/CMakeLists.txt" : {
      "ObjectId" : "4aee575326f2029e60169090387ea84e94c2889e",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Either MinSizeRel, RelWithDebInfo or Release, all which run with optimizations enabled.\n",
        "Line" : 11,
        "CharPositionInLine" : 7
      },
      "1" : {
        "Text" : "# GOTCHA: If your project has custom link flags, these must be set *before* calling any of the em_link_xxx functions!\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/cmake/target_library/srcfile.cmake" : {
      "ObjectId" : "10e9e6f8c1daf907dc79bea3b4e63e1a70ab1f4e",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#include <stdio.h>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/cube2hash/Makefile" : {
      "ObjectId" : "5d0a7a636c5b1fbeee6d9acb6dcc3b5189f5d8ea",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/enet/Makefile.am" : {
      "ObjectId" : "f5ce96912ad79edb082fec02dec42a2dd03e3fa8",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# see info '(libtool) Updating version info' before making a release\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/freealut/CMakeLists.txt" : {
      "ObjectId" : "c11680cda4661415b7ee0715eabad01810cc9559",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cmake project file by Prakash Punnoor\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#want test-suit?\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We could possibly need struct timespec and random(), which are not ANSI.\n\n# Define to 500 if Single Unix conformance is wanted, 600 for sixth revision.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We might need nanosleep, which is a POSIX IEEE Std 1003.1b-1993 feature.\n\n# Define to the POSIX version that should be used.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Without __NO_CTYPE tolower and friends are macros which introduce a GLIBC 2.3\n\n# dependency. By defining this identifier we are currently backwards compatible\n\n# to GLIBC 2.1.3, which is a good thing. In addition, the macros lead to code\n\n# which triggers warnings with -Wunreachable-code.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Emscripten cannot use FIND_LIBRARY, since that seaches for linkable library files, but Emscripten supports\n\n# OpenAL in core and there are no library files to link against. Instead, use a custom OpenAL package finder\n\n# provided by Emscripten.\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# All the include file checks bloew are no-ops for Emscripten, so for that platform, just define the flags we support.\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Emscripten is a cross-compiler and cannot verify paths of include files with CHECK_INCLUDE_FILES, since that requires building native executables.\n",
        "Line" : 102,
        "CharPositionInLine" : 20
      },
      "8" : {
        "Text" : "# FindSleepFunction will check for unistd.h if time.h wasn't found\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# compiler specific settings\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# we can't create a static library with the same name\n\n# as the shared one, so we copy it over after creation\n",
        "Line" : 154,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# needed for openal.pc.in and openal-config.in\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# static linking dependecies are broken, so pthread isn't needed currently\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# test-suite\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# examples\n",
        "Line" : 198,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#copy over testdata, so test-suite can be used in binary dir\n",
        "Line" : 227,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 16
    },
    "tests/freealut/Makefile.am" : {
      "ObjectId" : "a5ac942f4d4088e95dcb99dc9d0869be6ad7e376",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Build, install and distribute the following subdirectories:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We keep our local autoconf macros in a separate 'm4'subdirectory.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The following files should be in our source distribution in addition to the\n\n# standard ones included by automake itself:\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Automatically rebuild libtool if it becomes out-of-date.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The Creative repository has some broken permissions, let's fix this.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Automatically reformat all C headers and sources with indent according to\n\n# admin/autotools/.indent.pro, but be make-friendly and take some precautions to\n\n# leave those files untouched which wouldn't change. Do not reformat the public\n\n# ALUT header, it won't look the way we want it due to the 'extern \"C\" { ... }' \n\n# wrapper in it.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Targets which are no files\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "tests/freealut/admin/CMakeModules/FindCompilerAttribute.cmake" : {
      "ObjectId" : "c16188aeb82615f93f639f08b27b61563e15e12f",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/freealut/admin/CMakeModules/FindCompilerFlagsSet.cmake" : {
      "ObjectId" : "1e31daae56367b7f633f900ed9cc56ac45a046f9",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_DEFINITIONS(-std=c99)\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Should we use turn warnings into errors?\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# -pg and -fomit-frame-pointer are incompatible\n",
        "Line" : 27,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "tests/freealut/admin/CMakeModules/FindCompilerVisibility.cmake" : {
      "ObjectId" : "2d5282bd4b50bbd1bd7c7f3035628d78ef2d9c08",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/freealut/admin/CMakeModules/FindConfigHelper.cmake" : {
      "ObjectId" : "1f3a6faa4b8fc5efa699fe4e76de02428609ed7d",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# config.h magic\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# can't cache mulitline values\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Generate config.h only if values differ\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/freealut/admin/CMakeModules/FindSleepFunction.cmake" : {
      "ObjectId" : "ebb823fe590a5626e0075ed0857af62b9998db37",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/freealut/admin/Makefile.am" : {
      "ObjectId" : "1060db7c7a6916951d2a4099d4e3a0352124394c",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "tests/freealut/admin/autotools/.indent.pro" : {
      "ObjectId" : "fed34fdc763f05fa45cfe2768b1232f0c2d40a8e",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "tests/freealut/admin/pkgconfig/Makefile.am" : {
      "ObjectId" : "6b6cec2422c32cccb2cc618c8c13cf3e6c621f1d",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "tests/freealut/examples/Makefile.am" : {
      "ObjectId" : "4c99c50be327b478ced9ad2033b299222e2c80f0",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Build, but do not install the following test programs:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We need to link against our *own* libalut.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Specifying the following path is needed to find <AL/alut.h>.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/freealut/include/Makefile.am" : {
      "ObjectId" : "9423e7b28b78df8e196fa92310614fc69e924332",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "tests/freealut/src/Makefile.am" : {
      "ObjectId" : "8bd9a2782e6e1a16e51d037b05acca0a2c7fdee2",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# The following files should be in our source distribution in addition to the\n\n# standard ones included by automake itself:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We want to build a libalut library with libtool.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# libalut consists of the followin sources and internal headers:\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We use sin and floor, so we might need -lm, autoconf takes care of this.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The following libtool flag is neccessary for building DLLs on Windows.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Append -version-info for correct library versioning with libtool.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Specifying the following path is needed to find <AL/alut.h>.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "tests/freealut/test_suite/Makefile.am" : {
      "ObjectId" : "898e19254974608bf317b49c340e418339a4edc6",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# The following files should be in our source distribution in addition to the\n\n# standard ones included by automake itself:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build, but do not install the following test programs:\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We need to link against our *own* libalut.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Specifying the following path is needed to find <AL/alut.h>.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# test_retrostuff tests deprecated functions, but we don't want to get compiler\n\n# warnings because of that.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "tests/freetype/Makefile" : {
      "ObjectId" : "c1fa16cee542044c2b91397de1bd931260d2d0ce",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# FreeType 2 build system -- top-level Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright 1996-2000, 2002, 2006 by\n\n# David Turner, Robert Wilhelm, and Werner Lemberg.\n\n#\n\n# This file is part of the FreeType project, and may only be used, modified,\n\n# and distributed under the terms of the FreeType project license,\n\n# LICENSE.TXT.  By continuing to use, modify, or distribute this file you\n\n# indicate that you have read the license and understand and accept it\n\n# fully.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Project names\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The variable TOP_DIR holds the path to the topmost directory in the project\n\n# engine source hierarchy.  If it is not defined, default it to `.'.\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The variable OBJ_DIR gives the location where object files and the\n\n# FreeType library are built.\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# EOF\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "tests/freetype/src/tools/ftrandom/Makefile" : {
      "ObjectId" : "2e619299cdfcdb13ec98282f200b013d60a002c3",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# TOP_DIR and OBJ_DIR should be set by the user to the right directories,\n\n# if necessary.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The setup below is for gcc on a Unix-like platform.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# EOF\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/glbook/Makefile" : {
      "ObjectId" : "62cffedfa68e17ec62355b41dce7b2d53357424a",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Straight forward Makefile to compile all examples in a row\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#     ./Chapter_11/Multisample/CH11_Multisample.bc \\\n#     ./Chapter_11/Stencil_Test/CH11_Stencil_Test.bc \\\n\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/lua/Makefile" : {
      "ObjectId" : "9f0a2edde5a04d74c49ae10e645ba16a5dd02e4f",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for installing Lua\n\n# See doc/readme.html for installation and customization instructions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Your platform. See PLATS for possible values.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to install. The installation starts in the src and doc directories,\n\n# so take care if INSTALL_TOP is not an absolute path. See the local target.\n\n# You may want to make INSTALL_LMOD and INSTALL_CMOD consistent with\n\n# LUA_ROOT, LUA_LDIR, and LUA_CDIR in luaconf.h.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# How to install. If your install program does not support \"-p\", then\n\n# you may have to run ranlib on the installed liblua.a.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# If you don't have \"install\" you can use \"cp\" instead.\n\n# INSTALL= cp -p\n\n# INSTALL_EXEC= $(INSTALL)\n\n# INSTALL_DATA= $(INSTALL)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Other utilities.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# == END OF USER SETTINGS -- NO NEED TO CHANGE ANYTHING BELOW THIS LINE =======\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Convenience platforms targets.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# What to install.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Lua version and release.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Targets start here.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# XXX Emscripten Added quotes to $(MAKE) to properly call make when the path contains spaces\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# make may get confused with test/ and install/\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# echo config parameters\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# echo pkg-config data\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# list targets that do not create files (but not all makes understand .PHONY)\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# (end of Makefile)\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "tests/lua/src/Makefile" : {
      "ObjectId" : "a9cf091105da12d13ee71072839ecccfee9ba24c",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for building Lua\n\n# See ../doc/readme.html for installation and customization instructions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Your platform. See PLATS for possible values.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# XXX EMSCRIPTEN - comment out several lines here, to pick them up from the environment\n\n#CC= gcc\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#LDFLAGS= $(SYSLDFLAGS) $(MYLDFLAGS)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#AR= ar\n\n#RANLIB= ranlib\n\n#RM= rm -f\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# XXX EMSCRIPTEN - add this\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# == END OF USER SETTINGS -- NO NEED TO CHANGE ANYTHING BELOW THIS LINE =======\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Targets start here.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# XXX EMSCRIPTEN: add AR_ARGS\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Convenience targets for popular platforms\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# list targets that do not create files (but not all makes understand .PHONY)\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# DO NOT DELETE\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "tests/lzma/Makefile" : {
      "ObjectId" : "d6f4770f94342397969a083c824ddcbbe94a7680",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for generating an LZMA library using Emscripten.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/openjpeg/CMake/CheckHaveGetopt.cmake" : {
      "ObjectId" : "c0fd5dcf91f5237bf40e44cce10e2851aae3d126",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check if getopt is present:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#I am pretty sure only *nix sys have this anyway\n",
        "Line" : 4,
        "CharPositionInLine" : 9
      },
      "2" : {
        "Text" : "# Seems like we need the contrary:\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "tests/openjpeg/CMakeLists.txt" : {
      "ObjectId" : "d8671fed0045c29362aa60496be8d9eacb70bbfc",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Main CMakeLists.txt to build the OpenJPEG project using CMake (www.cmake.org)\n\n# Written by Mathieu Malaterre\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This CMake project will by default create a library called openjpeg\n\n# But if you want to use this project within your own (CMake) project\n\n# you will eventually like to prefix the library to avoid linking confusion\n\n# For this purpose you can define a CMake var: OPENJPEG_NAMESPACE to whatever you like\n\n# e.g.:\n\n# SET(OPENJPEG_NAMESPACE \"GDCMOPENJPEG\")\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# In all cases:\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Do full dependency headers.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# OPENJPEG version number, useful for packaging and doxygen doc:\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This setting of SOVERSION assumes that any API change\n\n# will increment either the minor or major version number of openjpeg\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# You will also need to define a value for the following variables:\n\n# OPENJPEG_INSTALL_BIN_DIR          - binary dir (executables)\n\n# OPENJPEG_INSTALL_LIB_DIR          - library dir (libs)\n\n# OPENJPEG_INSTALL_DATA_DIR         - share dir (say, examples, data, etc)\n\n# OPENJPEG_INSTALL_INCLUDE_DIR      - include dir (headers)\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# On Visual Studio 8 MS deprecated C. This removes all 1.276E1265 security\n\n# warnings\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# Install directories\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Test for some required system information.\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Test for getopt being available in this system\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Setup file for setting custom ctest vars\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# OpenJPEG build configuration options.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# configure name mangling to allow multiple libraries to coexist\n\n# peacefully\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Always build the library\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Build CODEC executables ?\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Build MJ2 executables ?\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Build JPWL executables ?\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Build JP3D executables ?\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Build INDEXER_JPIP executables ?\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Build DOCUMENTATION ?\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# For openjpeg team if they ever want CDash+CMake\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Adding test with dataset from:\n\n# http://www.crc.ricoh.com/~gormish/jpeg2000conformance/\n\n# -> wget http://www.crc.ricoh.com/~gormish/jpeg2000conformance/j2kp4files_v1_5.zip\n\n# http://www.jpeg.org/jpeg2000guide/testimages/testimages.html\n\n#-----------------------------------------------------------------------------\n\n# Adding JPEG2000_CONFORMANCE_DATA_ROOT\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Compiler specific flags:\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# For all builds, make sure openjpeg is std99 compliant:\n\n# SET(CMAKE_C_FLAGS \"-Wall -std=c99 ${CMAKE_C_FLAGS}\") # FIXME: this setting prevented us from setting a coverage build.\n\n# Do not use ffast-math for all build, it would produce incorrect results, only set for release:\n",
        "Line" : 217,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# install all targets referenced as OPENJPEGTargets\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# install CHANGES and LICENSE\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#\n\n# Does the system have png library installed ?\n\n#\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\n\n# Does the system have tiff library installed ?\n\n# \n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#\n\n#\n\n# Does the system have lcms library installed ?\n\n#\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#\n\n# generate opj_config.h\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 37
    },
    "tests/openjpeg/CTestConfig.cmake" : {
      "ObjectId" : "6d3866ef18303f2c4339809c8f4ca438d3ec5b80",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/openjpeg/Makefile.am" : {
      "ObjectId" : "9d5aa9b6dcd54e4c969375998a811dc219e7d00c",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#OpenJPEG top source directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/openjpeg/codec/CMakeLists.txt" : {
      "ObjectId" : "a1ef69f3f44da1d525abe879a81eab2cf98c1e6c",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build the demo app, small examples\n",
        "Line" : 1,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# First thing define the common source:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Headers file are located here:\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Loop over all executables:\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# calling those exe without option will make them fail always:\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# On unix you need to link to the math library:\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Install exe\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Install man pages\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Do testing here, once we know the examples are being built:\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#message( \"found:${output_variable} for ${filename_temp}\" )\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#if(UNIX)\n\n#  ADD_TEST(cmp-${filename_temp}-${codec_type} cmp ${filename} ${filename_temp}.${codec_type}${filename_ext})\n\n#endif(UNIX)\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "tests/openjpeg/codec/Makefile.am" : {
      "ObjectId" : "b75b4b4bb78d982c9cb6b58c8961254cb1c59bc6",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "tests/openjpeg/doc/CMakeLists.txt" : {
      "ObjectId" : "aadbadbae5c33c3eb3e3bb7ecb7f9f3406e540eb",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The Doxyfile.dox is poorly defined and produce output\n\n# in the source dir\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# By default doxygen target is added to the 'all' target. Project is small\n\n# thus running doxygen is not too time consuming\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/openjpeg/doc/Makefile.am" : {
      "ObjectId" : "809c80114a32ed65f12220acdda2c3753d599b46",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "tests/openjpeg/libopenjpeg/CMakeLists.txt" : {
      "ObjectId" : "39fb2a9a0b56be420f72d6c3e8ff5f1934c8dcc1",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines the source code for the library\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build the library\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Install library\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Install includes files\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# install man page of the library\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "tests/openjpeg/libopenjpeg/Makefile.am" : {
      "ObjectId" : "30a2b815b13e54868940dcf801c15a36170e6cd7",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Converts cr/lf to just lf\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/poppler/CMakeLists.txt" : {
      "ObjectId" : "303beb4944b7e002df271fce47ff7e71ce54e853",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# command line switches\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Enable these unconditionally.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# setting the minimum required versions for some components\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check for introspection\n",
        "Line" : 96,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Set the minimum required Internet Explorer version to 5.0\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# gdi32 is needed under win32\n",
        "Line" : 357,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "tests/poppler/ConfigureChecks.cmake" : {
      "ObjectId" : "04de970c4e1a44285fc9b5a9ecc19175fd8ff2cd",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2008 Pino Toscano, <pino@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/poppler/Makefile.am" : {
      "ObjectId" : "eb7cad25d09d4416fc5d2ac5ce69f05daa9e1114",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Add CMake buildsystem files here so they get added on make dist\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/poppler/cmake/modules/FindCairo.cmake" : {
      "ObjectId" : "d536c0519f1cfafd7750d4c520ddaca88d38749a",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find Cairo\n\n# Once done this will define\n\n#\n\n#  CAIRO_FOUND - system has Cairo\n\n#  CAIRO_CFLAGS - the Cairo CFlags\n\n#  CAIRO_INCLUDE_DIRS - the Cairo include directories\n\n#  CAIRO_LIBRARIES - Link these to use Cairo\n\n#\n\n# Copyright (C) 2007, 2010, Pino Toscano, <pino@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# assume so, for now\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# set it back as false\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "tests/poppler/cmake/modules/FindFontconfig.cmake" : {
      "ObjectId" : "268a61aea76143f3f1817679a86079f71c6d0093",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the  Fontconfig\n\n# Once done this will define\n\n#\n\n#  FONTCONFIG_FOUND - system has Fontconfig\n\n#  FONTCONFIG_INCLUDE_DIR - The include directory to use for the fontconfig headers\n\n#  FONTCONFIG_LIBRARIES - Link these to use FONTCONFIG\n\n#  FONTCONFIG_DEFINITIONS - Compiler switches required for using FONTCONFIG\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006,2007 Laurent Montel, <montel@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "tests/poppler/cmake/modules/FindGDK.cmake" : {
      "ObjectId" : "cd642cf23978f2541f9f0f17500de6c9da7ad081",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find GDK libraries\n\n# Once done this will define\n\n#\n\n#  GDK_FOUND - system has GDK\n\n#  GDK2_CFLAGS - the GDK CFlags\n\n#  GDK2_LIBRARIES - Link these to use GDK\n\n#\n\n# Copyright 2008-2010 Pino Toscano, <pino@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/poppler/cmake/modules/FindGLIB.cmake" : {
      "ObjectId" : "15fb0c75c1615792c31e04e8a5ba8b2cfa407aab",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find the GLIB libraries\n\n# Once done this will define\n\n#\n\n#  GLIB_FOUND - system has GLib\n\n#  GLIB2_CFLAGS - the GLib CFlags\n\n#  GLIB2_LIBRARIES - Link these to use GLib\n\n#\n\n# Copyright 2008-2010 Pino Toscano, <pino@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/poppler/cmake/modules/FindGObjectIntrospection.cmake" : {
      "ObjectId" : "2073c3cb17a509ef3d09c25d915800bfc49864f4",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find gobject-introspection\n\n#\n\n# Once done this will define\n\n#\n\n#  INTROSPECTION_FOUND - system has gobject-introspection\n\n#  INTROSPECTION_SCANNER - the gobject-introspection scanner, g-ir-scanner\n\n#  INTROSPECTION_COMPILER - the gobject-introspection compiler, g-ir-compiler\n\n#  INTROSPECTION_GENERATE - the gobject-introspection generate, g-ir-generate\n\n#  INTROSPECTION_GIRDIR\n\n#  INTROSPECTION_TYPELIBDIR\n\n#  INTROSPECTION_CFLAGS\n\n#  INTROSPECTION_LIBS\n\n#\n\n# Copyright (C) 2010, Pino Toscano, <pino@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/poppler/cmake/modules/FindGTK.cmake" : {
      "ObjectId" : "4d66bd3a9a8d06803f33d2e2006ed3849a3ef515",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find GTK libraries\n\n# Once done this will define\n\n#\n\n#  GTK_FOUND - system has GTK\n\n#  GTK2_CFLAGS - the GTK CFlags\n\n#  GTK2_LIBRARIES - Link these to use GTK\n\n#\n\n# Copyright 2008-2010 Pino Toscano, <pino@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/poppler/cmake/modules/FindIconv.cmake" : {
      "ObjectId" : "338d17d0550deac11c2d481a79c5358b33a44eec",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Iconv \n\n# Once done this will define \n\n# \n\n#  ICONV_FOUND - system has Iconv \n\n#  ICONV_INCLUDE_DIR - the Iconv include directory \n\n#  ICONV_LIBRARIES - Link these to use Iconv \n\n#  ICONV_SECOND_ARGUMENT_IS_CONST - the second argument for iconv() is const\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "tests/poppler/cmake/modules/FindLCMS.cmake" : {
      "ObjectId" : "9d162d2cfdd8345d3712943cd4a98f675a9612aa",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find LCMS\n\n# Find the LCMS includes and library\n\n# This module defines\n\n#  LCMS_INCLUDE_DIR, where to find lcms.h\n\n#  LCMS_LIBRARIES, the libraries needed to use LCMS.\n\n#  LCMS_VERSION, The value of LCMS_VERSION defined in lcms.h\n\n#  LCMS_FOUND, If false, do not try to use LCMS.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2008, Adrian Page, <adrian@pagenet.plus.com>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/poppler/cmake/modules/FindLIBOPENJPEG.cmake" : {
      "ObjectId" : "978ee7d93fccf9a65524638bdf3577421705e440",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the libopenjpeg library\n\n# Once done this will define\n\n#\n\n#  LIBOPENJPEG_FOUND - system has libopenjpeg\n\n#  LIBOPENJPEG_INCLUDE_DIRS - the libopenjpeg include directories\n\n#  LIBOPENJPEG_LIBRARIES - Link these to use libopenjpeg\n\n#  LIBOPENJPEG_INCLUDE_DIR is internal and deprecated for use\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2008, Albert Astals Cid, <aacid@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#reset vars\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "tests/poppler/cmake/modules/FindQt3.cmake" : {
      "ObjectId" : "06ff94014be2e1325d27f34df47a325328423ba6",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Locate Qt include paths and libraries\n\n# This module defines:\n\n#  QT3_INCLUDE_DIR - where to find qt.h, etc.\n\n#  QT3_LIBRARIES   - the libraries to link against to use Qt.\n\n#  QT3_DEFINITIONS - definitions to use when \n\n#                   compiling code that uses Qt.\n\n#  QT3_FOUND       - If false, don't try to use Qt.\n\n#\n\n# If you need the multithreaded version of Qt, set QT_MT_REQUIRED to TRUE\n\n#\n\n# Also defined, but not for general use are:\n\n#  QT3_MOC_EXECUTABLE, where to find the moc tool.\n\n#  QT3_UIC_EXECUTABLE, where to find the uic tool.\n\n#  QT3_QT_LIBRARY, where to find the Qt library.\n\n#  QT3_QTMAIN_LIBRARY, where to find the qtmain \n\n#   library. This is only required by Qt3 on Windows.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These are around for backwards compatibility \n\n# they will be set\n\n#  QT_WRAP_CPP, set true if QT3_MOC_EXECUTABLE is found\n\n#  QT_WRAP_UI set true if QT3_UIC_EXECUTABLE is found\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if qglobal.h is not in the qt_include_dir then set\n\n# QT3_INCLUDE_DIR to NOTFOUND\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#extract the version string from qglobal.h\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Under windows the qt library (MSVC) has the format qt-mtXYZ where XYZ is the\n\n# version X.Y.Z, so we need to remove the dots from version\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# qt 3 should prefer QTDIR over the PATH\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# qt 3 should prefer QTDIR over the PATH\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#now parse the parts of the user given version string into variables \n",
        "Line" : 194,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# req = \"6.5.4\", qt = \"3.2.1\"\n",
        "Line" : 204,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# (6 > 3) ?\n",
        "Line" : 206,
        "CharPositionInLine" : 64
      },
      "10" : {
        "Text" : "# yes\n",
        "Line" : 207,
        "CharPositionInLine" : 126
      },
      "11" : {
        "Text" : "# no\n",
        "Line" : 208,
        "CharPositionInLine" : 64
      },
      "12" : {
        "Text" : "# (6 < 3) ?\n",
        "Line" : 209,
        "CharPositionInLine" : 63
      },
      "13" : {
        "Text" : "# yes\n",
        "Line" : 210,
        "CharPositionInLine" : 62
      },
      "14" : {
        "Text" : "# ( 6==3) ?\n",
        "Line" : 211,
        "CharPositionInLine" : 63
      },
      "15" : {
        "Text" : "# (5>2) ?\n",
        "Line" : 212,
        "CharPositionInLine" : 62
      },
      "16" : {
        "Text" : "# yes\n",
        "Line" : 213,
        "CharPositionInLine" : 124
      },
      "17" : {
        "Text" : "# no\n",
        "Line" : 214,
        "CharPositionInLine" : 62
      },
      "18" : {
        "Text" : "# (5<2) ?\n",
        "Line" : 215,
        "CharPositionInLine" : 61
      },
      "19" : {
        "Text" : "# yes\n",
        "Line" : 216,
        "CharPositionInLine" : 60
      },
      "20" : {
        "Text" : "# (5==2)\n",
        "Line" : 217,
        "CharPositionInLine" : 61
      },
      "21" : {
        "Text" : "# (4>1) ?\n",
        "Line" : 218,
        "CharPositionInLine" : 60
      },
      "22" : {
        "Text" : "# yes\n",
        "Line" : 219,
        "CharPositionInLine" : 121
      },
      "23" : {
        "Text" : "# (4>1) ?\n",
        "Line" : 220,
        "CharPositionInLine" : 60
      },
      "24" : {
        "Text" : "# yes\n",
        "Line" : 221,
        "CharPositionInLine" : 59
      },
      "25" : {
        "Text" : "# (4>1) ?\n",
        "Line" : 222,
        "CharPositionInLine" : 60
      },
      "26" : {
        "Text" : "# if the include a library are found then we have it\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# for version 3\n",
        "Line" : 242,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# for version 2\n",
        "Line" : 247,
        "CharPositionInLine" : 6
      },
      "29" : {
        "Text" : "# Backwards compatibility for CMake1.4 and 1.2\n",
        "Line" : 264,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# for unix add X11 stuff\n",
        "Line" : 267,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 31
    },
    "tests/poppler/cmake/modules/FindQt4.cmake" : {
      "ObjectId" : "9122bb33f6d9dfa543a1a26523f1fb960f8906e5",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find QT 4\n\n# This module can be used to find Qt4.\n\n# The most important issue is that the Qt4 qmake is available via the system path.\n\n# This qmake is then used to detect basically everything else.\n\n# This module defines a number of key variables and macros. First is \n\n# QT_USE_FILE which is the path to a CMake file that can be included to compile\n\n# Qt 4 applications and libraries.  By default, the QtCore and QtGui \n\n# libraries are loaded. This behavior can be changed by setting one or more \n\n# of the following variables to true:\n\n#                    QT_DONT_USE_QTCORE\n\n#                    QT_DONT_USE_QTGUI\n\n#                    QT_USE_QT3SUPPORT\n\n#                    QT_USE_QTASSISTANT\n\n#                    QT_USE_QTDESIGNER\n\n#                    QT_USE_QTMOTIF\n\n#                    QT_USE_QTMAIN\n\n#                    QT_USE_QTNETWORK\n\n#                    QT_USE_QTNSPLUGIN\n\n#                    QT_USE_QTOPENGL\n\n#                    QT_USE_QTSQL\n\n#                    QT_USE_QTXML\n\n#                    QT_USE_QTSVG\n\n#                    QT_USE_QTTEST\n\n#                    QT_USE_QTUITOOLS\n\n#                    QT_USE_QTDBUS\n\n#                    QT_USE_QTSCRIPT\n\n#\n\n# All the libraries required are stored in a variable called QT_LIBRARIES.  \n\n# Add this variable to your TARGET_LINK_LIBRARIES.\n\n#  \n\n#  macro QT4_WRAP_CPP(outfiles inputfile ... OPTIONS ...)\n\n#        create moc code from a list of files containing Qt class with\n\n#        the Q_OBJECT declaration.  Options may be given to moc, such as those found\n\n#        when executing \"moc -help\"\n\n#\n\n#  macro QT4_WRAP_UI(outfiles inputfile ... OPTIONS ...)\n\n#        create code from a list of Qt designer ui files.\n\n#        Options may be given to uic, such as those found\n\n#        when executing \"uic -help\"\n\n#\n\n#  macro QT4_ADD_RESOURCES(outfiles inputfile ... OPTIONS ...)\n\n#        create code from a list of Qt resource files.\n\n#        Options may be given to rcc, such as those found\n\n#        when executing \"rcc -help\"\n\n#\n\n#  macro QT4_AUTOMOC(inputfile ... )\n\n#  macro QT4_GENERATE_MOC(inputfile outputfile )\n\n#\n\n#  macro QT4_ADD_DBUS_INTERFACE(outfiles interface basename)\n\n#        create a the interface header and implementation files with the \n\n#        given basename from the given interface xml file and add it to \n\n#        the list of sources.\n\n#        To disable generating a namespace header, set the source file property \n\n#        NO_NAMESPACE to TRUE on the interface file.\n\n#\n\n#  macro QT4_ADD_DBUS_INTERFACES(outfiles inputfile ... )\n\n#        create the interface header and implementation files \n\n#        for all listed interface xml files\n\n#        the name will be automatically determined from the name of the xml file\n\n#        To disable generating namespace headers, set the source file property \n\n#        NO_NAMESPACE to TRUE for these inputfiles.\n\n#\n\n#  macro QT4_ADD_DBUS_ADAPTOR(outfiles xmlfile parentheader parentclassname [basename] [classname])\n\n#        create a dbus adaptor (header and implementation file) from the xml file\n\n#        describing the interface, and add it to the list of sources. The adaptor\n\n#        forwards the calls to a parent class, defined in parentheader and named\n\n#        parentclassname. The name of the generated files will be\n\n#        <basename>adaptor.{cpp,h} where basename defaults to the basename of the xml file.\n\n#        If <classname> is provided, then it will be used as the classname of the\n\n#        adaptor itself.\n\n#\n\n#  macro QT4_GENERATE_DBUS_INTERFACE( header [interfacename] OPTIONS ...)\n\n#        generate the xml interface file from the given header.\n\n#        If the optional argument interfacename is omitted, the name of the \n\n#        interface file is constructed from the basename of the header with\n\n#        the suffix .xml appended.\n\n#        Options may be given to uic, such as those found when executing \"qdbuscpp2xml --help\"\n\n#\n\n#  QT_FOUND         If false, don't try to use Qt.\n\n#  QT4_FOUND        If false, don't try to use Qt 4.\n\n#\n\n#  QT4_QTCORE_FOUND        True if QtCore was found.\n\n#  QT4_QTGUI_FOUND         True if QtGui was found.\n\n#  QT4_QT3SUPPORT_FOUND    True if Qt3Support was found.\n\n#  QT4_QTASSISTANT_FOUND   True if QtAssistant was found.\n\n#  QT4_QTDBUS_FOUND        True if QtDBus was found.\n\n#  QT4_QTDESIGNER_FOUND    True if QtDesigner was found.\n\n#  QT4_QTDESIGNERCOMPONENTS True if QtDesignerComponents was found.\n\n#  QT4_QTMOTIF_FOUND       True if QtMotif was found.\n\n#  QT4_QTNETWORK_FOUND     True if QtNetwork was found.\n\n#  QT4_QTNSPLUGIN_FOUND    True if QtNsPlugin was found.\n\n#  QT4_QTOPENGL_FOUND      True if QtOpenGL was found.\n\n#  QT4_QTSQL_FOUND         True if QtSql was found.\n\n#  QT4_QTXML_FOUND         True if QtXml was found.\n\n#  QT4_QTSVG_FOUND         True if QtSvg was found.\n\n#  QT4_QTSCRIPT_FOUND      True if QtScript was found.\n\n#  QT4_QTTEST_FOUND        True if QtTest was found.\n\n#  QT4_QTUITOOLS_FOUND     True if QtUiTools was found.\n\n#                      \n\n#  QT4_DEFINITIONS   Definitions to use when compiling code that uses Qt.\n\n#                  \n\n#  QT4_INCLUDES      List of paths to all include directories of \n\n#                   Qt4 QT4_INCLUDE_DIR and QT4_QTCORE_INCLUDE_DIR are\n\n#                   always in this variable even if NOTFOUND,\n\n#                   all other INCLUDE_DIRS are\n\n#                   only added if they are found.\n\n#   \n\n#  QT4_INCLUDE_DIR              Path to \"include\" of Qt4\n\n#  QT4_QT4_INCLUDE_DIR           Path to \"include/Qt\" \n\n#  QT4_QT3SUPPORT_INCLUDE_DIR   Path to \"include/Qt3Support\" \n\n#  QT4_QTASSISTANT_INCLUDE_DIR  Path to \"include/QtAssistant\" \n\n#  QT4_QTCORE_INCLUDE_DIR       Path to \"include/QtCore\"         \n\n#  QT4_QTDESIGNER_INCLUDE_DIR   Path to \"include/QtDesigner\" \n\n#  QT4_QTDESIGNERCOMPONENTS_INCLUDE_DIR   Path to \"include/QtDesigner\"\n\n#  QT4_QTDBUS_INCLUDE_DIR       Path to \"include/QtDBus\" \n\n#  QT4_QTGUI_INCLUDE_DIR        Path to \"include/QtGui\" \n\n#  QT4_QTMOTIF_INCLUDE_DIR      Path to \"include/QtMotif\" \n\n#  QT4_QTNETWORK_INCLUDE_DIR    Path to \"include/QtNetwork\" \n\n#  QT4_QTNSPLUGIN_INCLUDE_DIR   Path to \"include/QtNsPlugin\" \n\n#  QT4_QTOPENGL_INCLUDE_DIR     Path to \"include/QtOpenGL\" \n\n#  QT4_QTSQL_INCLUDE_DIR        Path to \"include/QtSql\" \n\n#  QT4_QTXML_INCLUDE_DIR        Path to \"include/QtXml\" \n\n#  QT4_QTSVG_INCLUDE_DIR        Path to \"include/QtSvg\"\n\n#  QT4_QTSCRIPT_INCLUDE_DIR     Path to \"include/QtScript\"\n\n#  QT4_QTTEST_INCLUDE_DIR       Path to \"include/QtTest\"\n\n#                            \n\n#  QT4_LIBRARY_DIR              Path to \"lib\" of Qt4\n\n# \n\n#  QT4_PLUGINS_DIR              Path to \"plugins\" for Qt4\n\n#                            \n\n# For every library of Qt, a QT4_QTFOO_LIBRARY variable is defined, with the full path to the library.\n\n#\n\n# So there are the following variables:\n\n# The Qt3Support library:     QT4_QT3SUPPORT_LIBRARY\n\n#\n\n# The QtAssistant library:    QT4_QTASSISTANT_LIBRARY\n\n#\n\n# The QtCore library:         QT4_QTCORE_LIBRARY\n\n#\n\n# The QtDBus library:         QT4_QTDBUS_LIBRARY\n\n#\n\n# The QtDesigner library:     QT4_QTDESIGNER_LIBRARY\n\n#\n\n# The QtDesignerComponents library:     QT4_QTDESIGNERCOMPONENTS_LIBRARY\n\n#\n\n# The QtGui library:          QT4_QTGUI_LIBRARY\n\n#\n\n# The QtMotif library:        QT4_QTMOTIF_LIBRARY\n\n#\n\n# The QtNetwork library:      QT4_QTNETWORK_LIBRARY\n\n#\n\n# The QtNsPLugin library:     QT4_QTNSPLUGIN_LIBRARY\n\n#\n\n# The QtOpenGL library:       QT4_QTOPENGL_LIBRARY\n\n#\n\n# The QtSql library:          QT4_QTSQL_LIBRARY\n\n#\n\n# The QtXml library:          QT4_QTXML_LIBRARY\n\n#\n\n# The QtSvg library:          QT4_QTSVG_LIBRARY\n\n#\n\n# The QtScript library:       QT4_QTSCRIPT_LIBRARY\n\n#\n\n# The QtTest library:         QT4_QTTEST_LIBRARY\n\n#\n\n# The qtmain library for Windows QT4_QTMAIN_LIBRARY\n\n#\n\n# The QtUiTools library:      QT4_QTUITOOLS_LIBRARY\n\n#  \n\n# also defined, but NOT for general use are\n\n#  QT4_MOC_EXECUTABLE         Where to find the moc tool.\n\n#  QT4_UIC_EXECUTABLE         Where to find the uic tool.\n\n#  QT_UIC3_EXECUTABLE         Where to find the uic3 tool.\n\n#  QT_RCC_EXECUTABLE          Where to find the rcc tool\n\n#  QT_DBUSCPP2XML_EXECUTABLE  Where to find the qdbuscpp2xml tool.\n\n#  QT_DBUSXML2CPP_EXECUTABLE  Where to find the qdbusxml2cpp tool.\n\n#  \n\n#  QT_DOC_DIR                Path to \"doc\" of Qt4\n\n#  QT_MKSPECS_DIR            Path to \"mkspecs\" of Qt4\n\n#\n\n#\n\n# These are around for backwards compatibility \n\n# they will be set\n\n#  QT_WRAP_CPP  Set true if QT4_MOC_EXECUTABLE is found\n\n#  QT_WRAP_UI   Set true if QT4_UIC_EXECUTABLE is found\n\n#  \n\n# These variables do _NOT_ have any effect anymore (compared to FindQt.cmake)\n\n#  QT_MT_REQUIRED         Qt4 is now always multithreaded\n\n#  \n\n# These variables are set to \"\" Because Qt structure changed \n\n# (They make no sense in Qt4)\n\n#  QT4_QT_LIBRARY        Qt-Library is now split\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2002 Kitware, Inc., Insight Consortium.  All rights reserved.\n\n# See Copyright.txt or http://www.cmake.org/HTML/Copyright.html for details.\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check already done in this cmake run, nothing more to do\n",
        "Line" : 198,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# check that QT_NO_DEBUG is defined for release configurations\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#  macro for asking qmake to process pro files\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Invoke qmake with the tmp.pro program to get the desired\n\n# information.  Use the same variable for both stdout and stderr\n\n# to make sure we get the output on all platforms.\n",
        "Line" : 232,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# check for qmake\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# check for qt3 qmake and then try and find qmake4 or qmake-qt4 in the path\n",
        "Line" : 268,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# check that we found the Qt4 qmake, Qt3 qmake output won't match here\n",
        "Line" : 282,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# we need at least version 4.0.0\n",
        "Line" : 286,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#now parse the parts of the user given version string into variables\n",
        "Line" : 291,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# now parse the parts of the user given version string into variables\n",
        "Line" : 297,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# and now the version string given by qmake\n",
        "Line" : 306,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# compute an overall version number which can be compared at once\n",
        "Line" : 311,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# get qt install dir \n",
        "Line" : 328,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# ask qmake for the library dir\n\n# Set QT4_LIBRARY_DIR\n",
        "Line" : 333,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# ask qmake for the binary dir\n",
        "Line" : 359,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# ask qmake for the include dir\n",
        "Line" : 367,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# ask qmake for the documentation directory\n",
        "Line" : 376,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# ask qmake for the mkspecs directory\n",
        "Line" : 384,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# ask qmake for the plugins directory\n",
        "Line" : 395,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "########################################\n\n#\n\n#       Setting the INCLUDE-Variables\n\n#\n\n########################################\n",
        "Line" : 402,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Set QT4_INCLUDE_DIR by removine \"/QtCore\" in the string ${QT4_QTCORE_INCLUDE_DIR}\n",
        "Line" : 414,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "#############################################\n\n#\n\n# Find out what window system we're using\n\n#\n\n#############################################\n\n# Save required includes and required_flags variables\n",
        "Line" : 430,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Add QT4_INCLUDE_DIR to CMAKE_REQUIRED_INCLUDES\n",
        "Line" : 437,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# On Mac OS X when Qt has framework support, also add the framework path\n",
        "Line" : 439,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Check for Window system symbols (note: only one should end up being set)\n",
        "Line" : 443,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Restore CMAKE_REQUIRED_INCLUDES+CMAKE_REQUIRED_FLAGS variables\n",
        "Line" : 456,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "#\n\n#############################################\n",
        "Line" : 458,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Set QT4_QT3SUPPORT_INCLUDE_DIR\n",
        "Line" : 465,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Set QT4_QT4_INCLUDE_DIR\n",
        "Line" : 473,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Set QT4_QTGUI_INCLUDE_DIR\n",
        "Line" : 481,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Set QT4_QTSVG_INCLUDE_DIR\n",
        "Line" : 489,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# Set QT4_QTSCRIPT_INCLUDE_DIR\n",
        "Line" : 497,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# Set QT4_QTTEST_INCLUDE_DIR\n",
        "Line" : 505,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# Set QT4_QTUITOOLS_INCLUDE_DIR\n",
        "Line" : 513,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# Set QT4_QTMOTIF_INCLUDE_DIR\n",
        "Line" : 523,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# Set QT4_QTNETWORK_INCLUDE_DIR\n",
        "Line" : 528,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# Set QT4_QTNSPLUGIN_INCLUDE_DIR\n",
        "Line" : 536,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# Set QT4_QTOPENGL_INCLUDE_DIR\n",
        "Line" : 544,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# Set QT4_QTSQL_INCLUDE_DIR\n",
        "Line" : 552,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Set QT4_QTXML_INCLUDE_DIR\n",
        "Line" : 560,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# Set QT4_QTASSISTANT_INCLUDE_DIR\n",
        "Line" : 568,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# Set QT4_QTDESIGNER_INCLUDE_DIR\n",
        "Line" : 577,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# Set QT4_QTDESIGNERCOMPONENTS_INCLUDE_DIR\n",
        "Line" : 586,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# Set QT4_QTDBUS_INCLUDE_DIR\n",
        "Line" : 595,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# Make variables changeble to the advanced user\n",
        "Line" : 603,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# Set QT4_INCLUDES\n",
        "Line" : 606,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "########################################\n\n#\n\n#       Setting the LIBRARY-Variables\n\n#\n\n########################################\n",
        "Line" : 610,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# If FIND_LIBRARY found libraries in Apple frameworks, we would NOT have\n\n# to jump through these hoops.\n",
        "Line" : 617,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# WTF?  why don't we have frameworks?  :P\n\n# Set QT4_QTUITOOLS_LIBRARY\n",
        "Line" : 689,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# Set QT4_QTSCRIPT_LIBRARY\n",
        "Line" : 692,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# Set QT4_QTCORE_LIBRARY by searching for a lib with \"QtCore.\"  as part of the filename\n",
        "Line" : 697,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# Set QT4_QT3SUPPORT_LIBRARY\n",
        "Line" : 700,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# Set QT4_QTGUI_LIBRARY\n",
        "Line" : 703,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# Set QT4_QTMOTIF_LIBRARY\n",
        "Line" : 706,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# Set QT4_QTNETWORK_LIBRARY\n",
        "Line" : 711,
        "CharPositionInLine" : 4
      },
      "57" : {
        "Text" : "# Set QT4_QTNSPLUGIN_LIBRARY\n",
        "Line" : 714,
        "CharPositionInLine" : 4
      },
      "58" : {
        "Text" : "# Set QT4_QTOPENGL_LIBRARY\n",
        "Line" : 717,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "# Set QT4_QTSQL_LIBRARY\n",
        "Line" : 720,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "# Set QT4_QTXML_LIBRARY\n",
        "Line" : 723,
        "CharPositionInLine" : 4
      },
      "61" : {
        "Text" : "# Set QT4_QTSVG_LIBRARY\n",
        "Line" : 726,
        "CharPositionInLine" : 4
      },
      "62" : {
        "Text" : "# Set QT4_QTSCRIPT_LIBRARY\n",
        "Line" : 729,
        "CharPositionInLine" : 4
      },
      "63" : {
        "Text" : "# Set QT4_QTUITOOLS_LIBRARY\n",
        "Line" : 732,
        "CharPositionInLine" : 4
      },
      "64" : {
        "Text" : "# Set QT4_QTTEST_LIBRARY\n",
        "Line" : 735,
        "CharPositionInLine" : 4
      },
      "65" : {
        "Text" : "# Set QT4_QTASSISTANT_LIBRARY\n",
        "Line" : 782,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# Set QT4_QTDESIGNER_LIBRARY\n",
        "Line" : 785,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "# Set QT4_QTDESIGNERCOMPONENTS_LIBRARY\n",
        "Line" : 788,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "# Set QT4_QTMAIN_LIBRARY\n",
        "Line" : 791,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "############################################\n\n#\n\n# Check the existence of the libraries.\n\n#\n\n############################################\n",
        "Line" : 796,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "# Both set\n",
        "Line" : 806,
        "CharPositionInLine" : 8
      },
      "71" : {
        "Text" : "# Only debug was found\n",
        "Line" : 811,
        "CharPositionInLine" : 8
      },
      "72" : {
        "Text" : "# Only release was found\n",
        "Line" : 816,
        "CharPositionInLine" : 8
      },
      "73" : {
        "Text" : "# Hmm, is this used anywhere ? Yes, in UseQt4.cmake. We are currently incompatible :-(\n",
        "Line" : 821,
        "CharPositionInLine" : 8
      },
      "74" : {
        "Text" : "#add the include directory to QT4_INCLUDES\n",
        "Line" : 835,
        "CharPositionInLine" : 6
      },
      "75" : {
        "Text" : "# Make variables changeble to the advanced user\n",
        "Line" : 839,
        "CharPositionInLine" : 4
      },
      "76" : {
        "Text" : "# Set QT_xyz_LIBRARY variable and add \n\n# library include path to QT4_INCLUDES\n",
        "Line" : 844,
        "CharPositionInLine" : 2
      },
      "77" : {
        "Text" : "# platform dependent libraries\n",
        "Line" : 863,
        "CharPositionInLine" : 2
      },
      "78" : {
        "Text" : "#######################################\n\n#\n\n#       Check the executables of Qt \n\n#          ( moc, uic, rcc )\n\n#\n\n#######################################\n",
        "Line" : 872,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "# find moc and uic using qmake\n",
        "Line" : 880,
        "CharPositionInLine" : 2
      },
      "80" : {
        "Text" : "######################################\n\n#\n\n#       Macros for building Qt files\n\n#\n\n######################################\n",
        "Line" : 930,
        "CharPositionInLine" : 2
      },
      "81" : {
        "Text" : "# get include dirs\n",
        "Line" : 964,
        "CharPositionInLine" : 2
      },
      "82" : {
        "Text" : "# dont run automoc on this file\n",
        "Line" : 985,
        "CharPositionInLine" : 75
      },
      "83" : {
        "Text" : "# QT4_WRAP_CPP(outfiles inputfile ... )\n\n# TODO  perhaps add support for -D, -U and other minor options\n",
        "Line" : 991,
        "CharPositionInLine" : 2
      },
      "84" : {
        "Text" : "# get include dirs\n",
        "Line" : 995,
        "CharPositionInLine" : 4
      },
      "85" : {
        "Text" : "# QT4_WRAP_UI(outfiles inputfile ... )\n",
        "Line" : 1014,
        "CharPositionInLine" : 2
      },
      "86" : {
        "Text" : "# QT4_ADD_RESOURCES(outfiles inputfile ... )\n\n# TODO  perhaps consider adding support for compression and root options to rcc\n",
        "Line" : 1033,
        "CharPositionInLine" : 2
      },
      "87" : {
        "Text" : "#  parse file for dependencies \n\n#  all files are absolute paths or relative to the location of the qrc file\n",
        "Line" : 1044,
        "CharPositionInLine" : 6
      },
      "88" : {
        "Text" : "# get the part before the \".xml\" suffix\n",
        "Line" : 1102,
        "CharPositionInLine" : 8
      },
      "89" : {
        "Text" : "# _customName OPTIONS -some -options )\n",
        "Line" : 1110,
        "CharPositionInLine" : 45
      },
      "90" : {
        "Text" : "# _optionalBasename _optionalClassName)\n",
        "Line" : 1129,
        "CharPositionInLine" : 71
      },
      "91" : {
        "Text" : "# if \"SKIP_AUTOMOC\" is set to true, we will not handle this file here.\n\n# here. this is required to make bouic work correctly:\n\n# we need to add generated .cpp files to the sources (to compile them),\n\n# but we cannot let automoc handle them, as the .cpp files don't exist yet when\n\n# cmake is run for the very first time on them -> however the .cpp files might\n\n# exist at a later run. at that time we need to skip them, so that we don't add two\n\n# different rules for the same moc file\n",
        "Line" : 1171,
        "CharPositionInLine" : 9
      },
      "92" : {
        "Text" : "#               SET(_header ${CMAKE_CURRENT_SOURCE_DIR}/${_basename}.h)\n",
        "Line" : 1192,
        "CharPositionInLine" : 3
      },
      "93" : {
        "Text" : "######################################\n\n#\n\n#       decide if Qt got found\n\n#\n\n######################################\n",
        "Line" : 1214,
        "CharPositionInLine" : 2
      },
      "94" : {
        "Text" : "# if the includes,libraries,moc,uic and rcc are found then we have it\n",
        "Line" : 1220,
        "CharPositionInLine" : 2
      },
      "95" : {
        "Text" : "#######################################\n\n#\n\n#       System dependent settings  \n\n#\n\n#######################################\n\n# for unix add X11 stuff\n",
        "Line" : 1251,
        "CharPositionInLine" : 2
      },
      "96" : {
        "Text" : "# on OS X X11 may not be required\n",
        "Line" : 1258,
        "CharPositionInLine" : 4
      },
      "97" : {
        "Text" : "#######################################\n\n#\n\n#       compatibility settings \n\n#\n\n#######################################\n\n# Backwards compatibility for CMake1.4 and 1.2\n",
        "Line" : 1267,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 98
    },
    "tests/poppler/cmake/modules/GObjectIntrospectionMacros.cmake" : {
      "ObjectId" : "e7d62a39e5124d76b66dbcc720368684b4d46899",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2010, Pino Toscano, <pino@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Transform the gir filename to something which can reference through a variable\n\n## without automake/make complaining, eg Gtk-2.0.gir -> Gtk_2_0_gir\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Namespace and Version is either fetched from the gir filename\n\n# or the _NAMESPACE/_VERSION variable combo\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# _PROGRAM is an optional variable which needs it's own --program argument\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Variables which provides a list of things\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Reuse the LIBTOOL variable from by automake if it's set\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "tests/poppler/cmake/modules/MacroBoolTo01.cmake" : {
      "ObjectId" : "63b9852660df493de81a41745c8d09e2f150fa86",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# MACRO_BOOL_TO_01( VAR RESULT0 ... RESULTN )\n\n# This macro evaluates its first argument\n\n# and sets all the given vaiables either to 0 or 1\n\n# depending on the value of the first one\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Alexander Neundorf, <neundorf@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/poppler/cmake/modules/MacroEnsureVersion.cmake" : {
      "ObjectId" : "6797e5b7dbb8b98d9b6f53c8d644712d10c43f4c",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file defines the following macros for developers to use in ensuring\n\n# that installed software is of the right version:\n\n#\n\n# MACRO_ENSURE_VERSION        - test that a version number is greater than\n\n#                               or equal to some minimum\n\n# MACRO_ENSURE_VERSION_RANGE - test that a version number is greater than\n\n#                               or equal to some minimum and less than some\n\n#                               maximum\n\n# MACRO_ENSURE_VERSION2       - deprecated, do not use in new code\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MACRO_ENSURE_VERSION\n\n# This macro compares version numbers of the form \"x.y.z\" or \"x.y\"\n\n# MACRO_ENSURE_VERSION( FOO_MIN_VERSION FOO_VERSION_FOUND FOO_VERSION_OK)\n\n# will set FOO_VERSION_OK to true if FOO_VERSION_FOUND >= FOO_MIN_VERSION\n\n# Leading and trailing text is ok, e.g.\n\n# MACRO_ENSURE_VERSION( \"2.5.31\" \"flex 2.5.4a\" VERSION_OK)\n\n# which means 2.5.31 is required and \"flex 2.5.4a\" is what was found on the system\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Copyright (c) 2006, David Faure, <faure@kde.org>\n\n# Copyright (c) 2007, Will Stephenson <wstephenson@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# MACRO_ENSURE_VERSION_RANGE\n\n# This macro ensures that a version number of the form\n\n# \"x.y.z\" or \"x.y\" falls within a range defined by\n\n# min_version <= found_version < max_version.\n\n# If this expression holds, FOO_VERSION_OK will be set TRUE\n\n#\n\n# Example: MACRO_ENSURE_VERSION_RANGE3( \"0.1.0\" ${FOOCODE_VERSION} \"0.7.0\" FOO_VERSION_OK )\n\n#\n\n# This macro will break silently if any of x,y,z are greater than 100.\n\n#\n\n# Copyright (c) 2007, Will Stephenson <wstephenson@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# NORMALIZE_VERSION\n\n# Helper macro to convert version numbers of the form \"x.y.z\"\n\n# to an integer equal to 10^4 * x + 10^2 * y + z\n\n#\n\n# This macro will break silently if any of x,y,z are greater than 100.\n\n#\n\n# Copyright (c) 2006, David Faure, <faure@kde.org>\n\n# Copyright (c) 2007, Will Stephenson <wstephenson@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# CHECK_RANGE_INCLUSIVE_LOWER\n\n# Helper macro to check whether x <= y < z\n\n#\n\n# Copyright (c) 2007, Will Stephenson <wstephenson@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# parse the parts of the version string\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# compute an overall version number which can be compared at once\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "tests/poppler/cmake/modules/MacroOptionalFindPackage.cmake" : {
      "ObjectId" : "d4ed48e33a59170d9ed8f9b3223a42b5c4883cfd",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - MACRO_OPTIONAL_FIND_PACKAGE() combines FIND_PACKAGE() with an OPTION()\n\n# MACRO_OPTIONAL_FIND_PACKAGE( <name> [QUIT] )\n\n# This macro is a combination of OPTION() and FIND_PACKAGE(), it\n\n# works like FIND_PACKAGE(), but additionally it automatically creates\n\n# an option name WITH_<name>, which can be disabled via the cmake GUI.\n\n# or via -DWITH_<name>=OFF\n\n# The standard <name>_FOUND variables can be used in the same way\n\n# as when using the normal FIND_PACKAGE()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006-2010 Alexander Neundorf, <neundorf@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is just a helper macro to set a bunch of variables empty.\n\n# We don't know whether the package uses UPPERCASENAME or CamelCaseName, so we try both:\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/poppler/cmake/modules/MacroPushRequiredVars.cmake" : {
      "ObjectId" : "650b566eedfbecff8830bea953f2c4ce651a3b4d",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this module defines two macros:\n\n# MACRO_PUSH_REQUIRED_VARS()\n\n# and\n\n# MACRO_POP_REQUIRED_VARS()\n\n# use these if you call cmake macros which use\n\n# any of the CMAKE_REQUIRED_XXX variables\n\n#\n\n# Usage:\n\n# MACRO_PUSH_REQUIRED_VARS()\n\n# SET(CMAKE_REQUIRED_DEFINITIONS ${CMAKE_REQUIRED_DEFINITIONS} -DSOME_MORE_DEF)\n\n# CHECK_FUNCTION_EXISTS(...)\n\n# MACRO_POP_REQUIRED_VARS()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Alexander Neundorf, <neundorf@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# don't pop more than we pushed\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/poppler/cmake/modules/PopplerDefaults.cmake" : {
      "ObjectId" : "b0374cf9a0fb35720b509536d89061fe21579802",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# enable the testing facilities\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# put the include directories of the sources before other include paths\n\n# (eg, system includes)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# colored output\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CMake policy #0002: we can have multiple targets with the same name (for the unit tests)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# CMake policy #0011 (>= 2.6.3): make policy changes (as done here) taking effect for all the tree\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "tests/poppler/cmake/modules/PopplerMacros.cmake" : {
      "ObjectId" : "83b103e7277948757a10fea879a598873fdbd05a",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2008 Pino Toscano, <pino@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if the tests are EXCLUDE_FROM_ALL, add a target \"buildtests\" to build all tests\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# if the tests are EXCLUDE_FROM_ALL, add a target \"buildtests\" to build all tests\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# under Windows dlls may be also installed in bin/\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# set the default compile warnings\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "tests/poppler/config.h.cmake" : {
      "ObjectId" : "5d27156a836e65603e18b0313d6b30808c116abf",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* config.h.  Generated from config.h.cmake by cmake.  */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* Build against libcurl. */",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Use libjpeg instead of builtin jpeg decoder. */",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* Use libopenjpeg instead of builtin jpeg2000 decoder. */",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Build against libpng. */",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Do not hardcode the library location */",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Use zlib instead of builtin zlib decoder. */",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* Use cairo for rendering. */",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* Define to 1 if you have the <dirent.h> header file, and it defines `DIR'.\n   */",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* Define to 1 if you have the <dlfcn.h> header file. */",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Define to 1 if you have the <fcntl.h> header file. */",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Have FreeType2 include files */",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Define to 1 if you have the `fseek64' function. */",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Define to 1 if you have the `ftell64' function. */",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Defines if gettimeofday is available on your system */",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Defines if gmtime_r is available on your system */",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* Define if you have the iconv() function and it works. */",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* Define to 1 if you have the <inttypes.h> header file. */",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* Define to 1 if you have the `openjpeg' library (-lopenjpeg). */",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* Define to 1 if you have the `z' library (-lz). */",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* Defines if localtime_r is available on your system */",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* Define to 1 if you have the <memory.h> header file. */",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/* Define to 1 if you have the `mkstemp' function. */",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/* Define to 1 if you have the `mkstemps' function. */",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "/* Define to 1 if you have the <ndir.h> header file, and it defines `DIR'. */",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "/* Define to 1 if you have the <openjpeg.h> header file. */",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "/* Define to 1 if you have the `popen' function. */",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "/* Define if you have POSIX threads libraries and header files. */",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "/* Use splash for rendering. */",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "/* Define to 1 if you have the <stdint.h> header file. */",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "/* Define to 1 if you have the <stdlib.h> header file. */",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "/* Define to 1 if you have the <strings.h> header file. */",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "/* Define to 1 if you have the <string.h> header file. */",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "/* Define to 1 if you have the <sys/dir.h> header file, and it defines `DIR'.\n   */",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "/* Define to 1 if you have the <sys/mman.h> header file. */",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "/* Define to 1 if you have the <sys/ndir.h> header file, and it defines `DIR'.\n   */",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "/* Define to 1 if you have the <sys/stat.h> header file. */",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "/* Define to 1 if you have the <sys/types.h> header file. */",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "/* Define to 1 if you have the <unistd.h> header file. */",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "/* Define to 1 if you have the <zlib.h> header file. */",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "/* Define to 1 if you have a big endian machine */",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "/* Define as const if the declaration of iconv() needs const. */",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "/* Enable multithreading support. */",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "/* Generate OPI comments in PS output. */",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "/* Name of package */",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "/* Define to the address where bug reports for this package should be sent. */",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "/* Define to the full name of this package. */",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "/* Define to the full name and version of this package. */",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "/* Define to the one symbol short name of this package. */",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "/* Define to the home page for this package. */",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "/* Define to the version of this package. */",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "/* Poppler data dir */",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "/* Support for curl based doc builder is compiled in. */",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "/* Have GDK */",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "/* Define to 1 if you have the ANSI C header files. */",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "/* Enable word list support. */",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "/* Defines if use cms */",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "/* Use fixed point arithmetic in the Splash backend */",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "/* Use single precision arithmetic in the Splash backend */",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "/* Version number of package */",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "/* Use fontconfig font configuration backend */",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "/* Use win32 font configuration backend */",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "/* Define to 1 if the X Window System is missing or not being used. */\n/* #undef X_DISPLAY_MISSING */",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "/*\n * jpeg.h needs HAVE_BOOLEAN, when the system uses boolean in system\n * headers and I'm too lazy to write a configure test as long as only\n * unixware is related\n */",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "/* MS has defined snprintf as deprecated */",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "/* Number of bits in a file offset, on hosts where this is settable. */\n/* #undef _FILE_OFFSET_BITS */",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */\n/* #undef _LARGEFILE_SOURCE */",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "/* Define for large files, on AIX-style hosts. */\n/* #undef _LARGE_FILES */",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 69
    },
    "tests/poppler/cpp/CMakeLists.txt" : {
      "ObjectId" : "e606988a66d1d34d5898a320c7851ac23e4ac200",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/poppler/cpp/Makefile.am" : {
      "ObjectId" : "eddbde30d8c34ca162162ed9188ed155320f0e4c",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "tests/poppler/cpp/tests/CMakeLists.txt" : {
      "ObjectId" : "6ea24a58508b7af7bd00dee99350e1f88e0b9ef6",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/poppler/cpp/tests/Makefile.am" : {
      "ObjectId" : "aab55f2e514ae9a506ba2986f92699bbc0277811",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "tests/poppler/fofi/Makefile.am" : {
      "ObjectId" : "7a30248650505d49209c881b9903b297fad176bb",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "tests/poppler/glib/CMakeLists.txt" : {
      "ObjectId" : "b59935e8c685109c123ea62c3635160a71f28fa2",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# GObject Introspection\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/poppler/glib/Makefile.am" : {
      "ObjectId" : "76818ca8d8b41948599c1a4335d2caf66bb87e30",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# GObject Introspection\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#HAVE_INTROSPECTION\n",
        "Line" : 130,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 2
    },
    "tests/poppler/glib/demo/CMakeLists.txt" : {
      "ObjectId" : "286fbd798781363eaf78a67c44dbb810bfacf0e0",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/poppler/glib/demo/Makefile.am" : {
      "ObjectId" : "28fc22d22c9b988b0786a6980fb6ff88478357fa",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "tests/poppler/glib/poppler-features.h.cmake" : {
      "ObjectId" : "99c7ed8e02d8bfef3ab33a744b3f4c0f1d9f01b8",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* poppler-features.h: glib interface to poppler\n * Copyright (C) 2006, Red Hat, Inc.\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2, or (at your option)\n * any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.\n */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/poppler/glib/reference/Makefile.am" : {
      "ObjectId" : "61955c7a7589eac69fcaa2e8b42acd5054c2cac4",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We require automake 1.6 at least.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is a blank Makefile.am for using gtk-doc.\n\n# Copy this to your project's API docs directory and modify the variables to\n\n# suit your project. See the GTK+ Makefiles in gtk+/docs/reference for examples\n\n# of using the various options.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The name of the module, e.g. 'glib'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The top-level SGML file. You can change this if you want to.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The directory containing the source code. Relative to $(srcdir).\n\n# gtk-doc will search all .c & .h files beneath here for inline comments\n\n# documenting the functions and macros.\n\n# e.g. DOC_SOURCE_DIR=../../../gtk\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Extra options to pass to gtkdoc-scangobj. Not normally needed.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Extra options to supply to gtkdoc-scan.\n\n# e.g. SCAN_OPTIONS=--deprecated-guards=\"GTK_DISABLE_DEPRECATED\" \n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Extra options to supply to gtkdoc-mkdb.\n\n# e.g. MKDB_OPTIONS=--sgml-mode --output-format=xml\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Extra options to supply to gtkdoc-mktmpl\n\n# e.g. MKTMPL_OPTIONS=--only-section-tmpl\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Extra options to supply to gtkdoc-fixref. Not normally needed.\n\n# e.g. FIXXREF_OPTIONS=--extra-dir=../gdk-pixbuf/html --extra-dir=../gdk/html\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Used for dependencies. The docs will be rebuilt if any of these change.\n\n# e.g. HFILE_GLOB=$(top_srcdir)/gtk/*.h\n\n# e.g. CFILE_GLOB=$(top_srcdir)/gtk/*.c\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Header files to ignore when scanning.\n\n# e.g. IGNORE_HFILES=gtkdebug.h gtkintl.h\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Images to copy into HTML directory.\n\n# e.g. HTML_IMAGES=$(top_srcdir)/gtk/stock-icons/stock_about_24.png\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Extra SGML files that are included by $(DOC_MAIN_SGML_FILE).\n\n# e.g. content_files=running.sgml building.sgml changes-2.0.sgml\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# SGML files where gtk-doc abbrevations (#GtkWidget) are expanded\n\n# These files must be listed here *and* in content_files\n\n# e.g. expand_content_files=running.sgml\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# CFLAGS and LDFLAGS for compiling gtkdoc-scangobj with your library.\n\n# Only needed if you are using gtkdoc-scangobj to dynamically query widget\n\n# signals and properties.\n\n# e.g. INCLUDES=-I$(top_srcdir) -I$(top_builddir) $(GTK_DEBUG_FLAGS)\n\n# e.g. GTKDOC_LIBS=$(top_builddir)/gtk/$(gtktargetlib)\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# This includes the standard gtk-doc make rules, copied by gtkdocize.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Other files to distribute\n\n# e.g. EXTRA_DIST += version.xml.in\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "tests/poppler/goo/Makefile.am" : {
      "ObjectId" : "de894afe3b55b078b436c2b5f697cd8c957276a0",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "tests/poppler/poppler-cairo.pc.cmake" : {
      "ObjectId" : "b32f118314b81d500d40415185c618af226d81f2",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/poppler/poppler-cpp.pc.cmake" : {
      "ObjectId" : "3f56b3d9d903210996f4a07aac551fd97748ea1d",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/poppler/poppler-glib.pc.cmake" : {
      "ObjectId" : "2a8bc66e87829d860ef9af7bf9a892be812c8d19",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/poppler/poppler-qt.pc.cmake" : {
      "ObjectId" : "a01c03ee52b05c9644e373ea1839851969072728",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/poppler/poppler-qt4.pc.cmake" : {
      "ObjectId" : "b17fd5d84533ecee2b047235a66acd6ab433110d",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/poppler/poppler-splash.pc.cmake" : {
      "ObjectId" : "cb95b3d2d27da4bfb4449b6c4c1a6def21f0dfe2",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/poppler/poppler.pc.cmake" : {
      "ObjectId" : "f1aebedbefdeaeb9627f5751680f31a04d6a86ed",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/poppler/poppler/Makefile.am" : {
      "ObjectId" : "9344ebac3929f234d6b4ff65dc0e7f13d9225bc1",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "tests/poppler/poppler/poppler-config.h.cmake" : {
      "ObjectId" : "2243498bbaa944ba9da1dacc30955142f4493be3",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "//================================================= -*- mode: c++ -*- ====\n//\n// poppler-config.h\n//\n// Copyright 1996-2004 Glyph & Cog, LLC\n//\n//========================================================================",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "// We duplicate some of the config.h #define's here since they are\n// used in some of the header files we install.  The #ifndef/#endif\n// around #undef look odd, but it's to silence warnings about\n// redefining those symbols.",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Enable multithreading support. */",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* Use fixedpoint. */",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Include support for OPI comments. */",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Enable word list support. */",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Use fontconfig font configuration backend */",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* Use win32 font configuration backend */",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* Support for curl is compiled in. */",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "// Also, there's a couple of preprocessor symbols in the header files\n// that are used but never defined: DISABLE_OUTLINE, DEBUG_MEM and",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "//------------------------------------------------------------------------\n// version\n//------------------------------------------------------------------------",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "// copyright notice",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "//------------------------------------------------------------------------\n// popen\n//------------------------------------------------------------------------",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "//------------------------------------------------------------------------\n// Win32 stuff\n//------------------------------------------------------------------------",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "//------------------------------------------------------------------------\n// Compiler\n//------------------------------------------------------------------------",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "tests/poppler/qt/CMakeLists.txt" : {
      "ObjectId" : "5e83e40086e422d5134875bdeaacc703d42859ef",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/poppler/qt/Makefile.am" : {
      "ObjectId" : "75c0b48e1550e65377cfbf41cba8e582b225d8ce",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "tests/poppler/qt4/CMakeLists.txt" : {
      "ObjectId" : "a364abf197613c8fca7256901163b369ed934dfe",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/poppler/qt4/Makefile.am" : {
      "ObjectId" : "69a10cb14099373cf070b9561c72e1bd1a1b9b3f",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "tests/poppler/qt4/demos/CMakeLists.txt" : {
      "ObjectId" : "76accf819f2dc2f57851698c6f849a7632d817f1",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/poppler/qt4/demos/Makefile.am" : {
      "ObjectId" : "50486b8420d98a4a8410581923513d1f28c82335",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# This rule lets GNU make create any *.moc from the equivalent *.h\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/poppler/qt4/src/CMakeLists.txt" : {
      "ObjectId" : "479e6ad454cb2f81abbd4465c6b46bc7910c460e",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/poppler/qt4/src/Makefile.am" : {
      "ObjectId" : "9b4dfd938a72b8a86fbf91d47b000cc2db0e51db",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# This rule lets GNU make create any *.moc from the equivalent *.h\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/poppler/qt4/tests/CMakeLists.txt" : {
      "ObjectId" : "d0ba76299fa38dad0596754654a9c4b6f3b7cae6",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/poppler/qt4/tests/Makefile.am" : {
      "ObjectId" : "93e11322f8bb4c68bfc89beac456e309f12aaf13",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "tests/poppler/splash/Makefile.am" : {
      "ObjectId" : "914b308cf874fea6e9402ee1efdc7388d12eb7ad",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "tests/poppler/test/CMakeLists.txt" : {
      "ObjectId" : "acb867bea5d5985efe28dc0ffeac4681e43d8cba",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/poppler/test/Makefile.am" : {
      "ObjectId" : "38bf72dc9d65001c6bcd36df9fdf2fbdef564b4c",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "tests/poppler/utils/CMakeLists.txt" : {
      "ObjectId" : "7b44b05c52d3eb9ca474a032679c644e1f04320c",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# pdftoppm\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# pdffonts\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# pdfimages\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# pdfinfo\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# pdftops\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# pdftotext\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# pdftohtml\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# pdftoabw\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "tests/poppler/utils/Makefile.am" : {
      "ObjectId" : "56f2cfd25c82c69d94e90460fb0e635dda5822b9",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Yay, automake!  It should be able to figure out that it has to dist\n\n# pdftoppm.1, but nooo.  So we just add it here.\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/sockets/ws/Makefile" : {
      "ObjectId" : "00f19fa01ca24d8d4e807fdb9493a75a50d3042a",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tests/zlib/CMakeLists.txt" : {
      "ObjectId" : "01a19fb54777b629a7f1098cde7eda41e3552401",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clear variable\n",
        "Line" : 40,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\n\n# in their source tree...\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#    win32/zlib1.rc XXX Emscripten remove the Windows resource file from build, not needed and not included in source tree.\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This gets us DLL resource information when compiling on MinGW.\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# This property causes shared libraries on Linux to have the full version\n\n# encoded into their final filename.  We disable this on Cygwin because\n\n# it causes cygz-${ZLIB_FULL_VERSION}.dll to be created when cygz.dll\n\n# seems to be the default.\n\n#\n\n# This has no effect with MSVC, on that platform the version info for\n\n# the DLL comes from the resource file win32/zlib1.rc\n",
        "Line" : 139,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# On unix-like platforms the library is almost always called libz\n",
        "Line" : 150,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Creates zlib1.dll when building shared library version\n",
        "Line" : 153,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#============================================================================\n\n# Example binaries\n\n#============================================================================\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "third_party/lzma.js/lzip/Makefile" : {
      "ObjectId" : "8a5baee3a6879a19ded8ef45c422dec7702d5829",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Lzip - Data compressor based on the LZMA algorithm\n\n# Copyright (C) 2008, 2009, 2010, 2011 Antonio Diaz Diaz.\n\n# This file was generated automatically by configure. Do not edit.\n\n#\n\n# This Makefile is free software: you have unlimited permission\n\n# to copy, distribute and modify it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "third_party/websockify/Makefile" : {
      "ObjectId" : "7dc1bc4f0313c84529dbe1aa67b15314498f3d7c",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/websockify/other/Makefile" : {
      "ObjectId" : "f8d2864550f99f9f4340cc10c30cc68c9a625411",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tools/optimizer/CMakeLists.txt" : {
      "ObjectId" : "9fe229bf25d836435028aa27f3032e41982f54b2",
      "LastModified" : "2019-02-12T14:43:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -DCMAKE_CXX_FLAGS=-DPROFILING will print crude timing information to stderr\n\n# for initial identification of areas to profile in more depth with\n\n# CALLGRIND_{START,STOP}_INSTRUMENTATION or similar\n\n# Don't forget to also pass -DCMAKE_BUILD_TYPE=Release to cmake or your build\n\n# won't be optimized by the compiler!\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Debug build in Visual Studio is large and generates error C1128 if not explicitly recognized, so pass /bigobj for that\n",
        "Line" : 32,
        "CharPositionInLine" : 43
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 95,
    "CMAKESOURCE" : 3,
    "QMAKE" : 1,
    "MAKEFILE" : 18,
    "AUTOMAKE" : 32
  },
  "ElapsedTime" : 3261
}