{
  "Repository" : "40244923",
  "Revision" : "HEAD",
  "ObjectId" : "6f374480b81a766531d18129bb66c93ebcc9292c",
  "CommitTime" : "2019-04-12T21:33:49Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "231d05d97db9b18058882e9bfd5869b570f9e250",
      "LastModified" : "2019-04-12T13:01:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################\n\n# Fix build type because of possible capitalization issues #\n\n############################################################\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#############################\n\n# Options for nova's builds #\n\n#############################\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Warn about unsued linked libraries\n",
        "Line" : 36,
        "CharPositionInLine" : 38
      },
      "3" : {
        "Text" : "#########################################################\n\n# Enable tests if not in submodule and debug or if MSVC #\n\n#########################################################\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "############################\n\n# Initialize cmake options #\n\n############################\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#################################\n\n# Setup our own cmake additions #\n\n#################################\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#################################\n\n# Setup 3rd party dependencies. #\n\n#################################\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "########################\n\n# Add Nova source code #\n\n########################\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "####################\n\n# Add Nova headers #\n\n####################\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##################################\n\n# Select platform dependent code #\n\n##################################\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##########################################\n\n# Set platform dependent compile options #\n\n##########################################\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##########################################\n\n# Setup required options for backtracing #\n\n##########################################\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#################\n\n# Organize code #\n\n#################\n\n# For now just put everthing in a single nova source group\n\n# because there are several sub groups that would be extremely small\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "##########################\n\n# Setup the nova library #\n\n##########################\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "##################################\n\n# Add extra warnings if possible #\n\n##################################\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#########################\n\n# Set libraries to link #\n\n#########################\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "##############################\n\n# Find C++ filesystem header #\n\n##############################\n\n# On some toolchains its still <experimental/filesystem> while on others its already <filesystem>\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "############################\n\n# Platform dependent fixes #\n\n############################\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# MSVC 15.9 broke the Windows SDK by implementing two phase lookup. \"/Zc:twoPhase-\" disables it.\n",
        "Line" : 330,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Visual Studio is stupid. Is it really that hard to use filesystem directories to organize code like literally\n\n# everyone else?\n",
        "Line" : 338,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# GCC and Clang complain loudly about the #pragma region stuff. This shuts them up.\n",
        "Line" : 347,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "###############################\n\n# Link all required libraries #\n\n###############################\n",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#############################\n\n# Fix issue with permissive #\n\n#############################\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##########################\n\n# Add tests if requested #\n\n##########################\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "external/external.cmake" : {
      "ObjectId" : "c5f3223d7316938c31ee0f8a7d4899c2c0580768",
      "LastModified" : "2019-03-19T02:44:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#############################\n\n# Overriding default values #\n\n#############################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#########################\n\n# External dependencies #\n\n#########################\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#####################\n\n# Test dependencies #\n\n#####################\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "0583435b59c9f212ca312861fa5ade455ba4f388",
      "LastModified" : "2019-02-28T07:43:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#################################\n\n# Setup our own cmake additions #\n\n#################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We need threads\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###################\n\n# End-to-end test #\n\n###################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############\n\n# Unit tests #\n\n##############\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Reset shared libraries option if changed by us\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# TODO: Non-hacky solution when someone who knows what they're doing can do things\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "tools/cmake/ClangFormat.cmake" : {
      "ObjectId" : "f0d6bdc224bbae96b880de6a8d967d20cf8ff362",
      "LastModified" : "2019-03-19T02:44:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# no-op\n",
        "Line" : 22,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# no-op\n",
        "Line" : 25,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "tools/cmake/ClangTidy.cmake" : {
      "ObjectId" : "62b7a12115fbaa5462a11357d7d293d8230adb97",
      "LastModified" : "2019-03-14T02:50:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# function(lint)\n\n#     # no-op\n\n# endfunction()\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# function(lint TARGET)\n\n#     add_custom_target(${TARGET}-lint VERBATIM)\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#     list(APPEND SOURCE_LIST)\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#     get_property(TARGET_SOURCES TARGET ${TARGET} PROPERTY SOURCES)\n\n#     foreach(SOURCE_FILE ${TARGET_SOURCES})\n\n#     \tget_filename_component(EXTANT ${SOURCE_FILE} EXT)\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#     \tif(EXTANT MATCHES [[.*\\.[cC].*]])\n\n#         \tlist(APPEND SOURCE_LIST ${SOURCE_FILE})\n\n#         endif()\n\n#     endforeach()\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#     set_property(GLOBAL PROPERTY CLANG_TIDY_FILES ${CLANG_TIDY_FILES})\n\n# endfunction()\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# function(enable_linting RUN_CLANG_TIDY)\n\n# \tget_property(CLANG_TIDY_FILES GLOBAL PROPERTY CLANG_TIDY_FILES)\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# \tadd_custom_target(lint \n\n# \t\tCOMMAND ${run_clang_tidy} )\n\n# endfunction()\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "tools/cmake/CompilerOptionsUtils.cmake" : {
      "ObjectId" : "46bdc409f82d9e4fd6c1ded27dc1dee3e713d4c1",
      "LastModified" : "2019-03-14T02:50:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/cmake/FindGLFW3.cmake" : {
      "ObjectId" : "a17141f51ff00cd46e414bfb5054712ab9723175",
      "LastModified" : "2019-03-14T02:50:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate the glfw3 library\n\n#\n\n# This module defines the following variables:\n\n#\n\n# GLFW3_LIBRARY      the name of the library;\n\n# GLFW3_INCLUDE_DIR  where to find glfw include files.\n\n# GLFW3_FOUND        true if both the GLFW3_LIBRARY and GLFW3_INCLUDE_DIR have been found.\n\n#\n\n# To help locate the library and include file, you can define a \n\n# variable called GLFW3_ROOT which points to the root of the glfw library \n\n# installation.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# default search dirs\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check environment for root search directory\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Put user specified location at beginning of search\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Search for the header \n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Search for the library\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "tools/cmake/FindGLM.cmake" : {
      "ObjectId" : "a699cc3891aec44978a915feee9e72a736777724",
      "LastModified" : "2019-03-14T02:50:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindGLM - attempts to locate the glm matrix/vector library.\n\n#\n\n# This module defines the following variables (on success):\n\n#   GLM_INCLUDE_DIRS  - where to find glm/glm.hpp\n\n#   GLM_FOUND         - if the library was successfully located\n\n#\n\n# It is trying a few standard installation locations, but can be customized\n\n# with the following variables:\n\n#   GLM_ROOT_DIR      - root directory of a glm installation\n\n#                       Headers are expected to be found in either:\n\n#                       <GLM_ROOT_DIR>/glm/glm.hpp           OR\n\n#                       <GLM_ROOT_DIR>/include/glm/glm.hpp\n\n#                       This variable can either be a cmake or environment\n\n#                       variable. Note however that changing the value\n\n#                       of the environment varible will NOT result in\n\n#                       re-running the header search and therefore NOT\n\n#                       adjust the variables set by this module.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2012 Carsten Neumann\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# default search dirs\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# check environment variable\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# put user specified location at beginning of search\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# locate header\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "tools/cmake/FindVulkan.cmake" : {
      "ObjectId" : "9d490ad0a10018c37e15d4ad2ddd41897bc7ccd7",
      "LastModified" : "2019-03-14T02:50:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindVulkan\n\n# ----------\n\n#\n\n# Try to find Vulkan\n\n#\n\n# IMPORTED Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines :prop_tgt:`IMPORTED` target ``Vulkan::Vulkan``, if\n\n# Vulkan has been found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following variables::\n\n#\n\n#   Vulkan_FOUND          - True if Vulkan was found\n\n#   Vulkan_INCLUDE_DIRS   - include directories for Vulkan\n\n#   Vulkan_LIBRARIES      - link against this library to use Vulkan\n\n#\n\n# The module will also define two cache variables::\n\n#\n\n#   Vulkan_INCLUDE_DIR    - the Vulkan include directory\n\n#   Vulkan_LIBRARY        - the path to the Vulkan library\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/cmake/FindWindowsSDK.cmake" : {
      "ObjectId" : "c0bf79bcb30ab539b00fd3b194a4d655189de0ff",
      "LastModified" : "2019-03-14T02:50:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the Windows SDK aka Platform SDK\n\n#\n\n# Relevant Wikipedia article: http://en.wikipedia.org/wiki/Microsoft_Windows_SDK\n\n#\n\n# Pass \"COMPONENTS tools\" to ignore Visual Studio version checks: in case\n\n# you just want the tool binaries to run, rather than the libraries and headers\n\n# for compiling.\n\n#\n\n# Variables:\n\n#  WINDOWSSDK_FOUND - if any version of the windows or platform SDK was found that is usable with the current version of visual studio\n\n#  WINDOWSSDK_LATEST_DIR\n\n#  WINDOWSSDK_LATEST_NAME\n\n#  WINDOWSSDK_FOUND_PREFERENCE - if we found an entry indicating a \"preferred\" SDK listed for this visual studio version\n\n#  WINDOWSSDK_PREFERRED_DIR\n\n#  WINDOWSSDK_PREFERRED_NAME\n\n#\n\n#  WINDOWSSDK_DIRS - contains no duplicates, ordered most recent first.\n\n#  WINDOWSSDK_PREFERRED_FIRST_DIRS - contains no duplicates, ordered with preferred first, followed by the rest in descending recency\n\n#\n\n# Functions:\n\n#  windowssdk_name_lookup(<directory> <output variable>) - Find the name corresponding with the SDK directory you pass in, or\n\n#     NOTFOUND if not recognized. Your directory must be one of WINDOWSSDK_DIRS for this to work.\n\n#\n\n#  windowssdk_build_lookup(<directory> <output variable>) - Find the build version number corresponding with the SDK directory you pass in, or\n\n#     NOTFOUND if not recognized. Your directory must be one of WINDOWSSDK_DIRS for this to work.\n\n#\n\n#  get_windowssdk_from_component(<file or dir> <output variable>) - Given a library or include dir,\n\n#     find the Windows SDK root dir corresponding to it, or NOTFOUND if unrecognized.\n\n#\n\n#  get_windowssdk_library_dirs(<directory> <output variable>) - Find the architecture-appropriate\n\n#     library directories corresponding to the SDK directory you pass in (or NOTFOUND if none)\n\n#\n\n#  get_windowssdk_library_dirs_multiple(<output variable> <directory> ...) - Find the architecture-appropriate\n\n#     library directories corresponding to the SDK directories you pass in, in order, skipping those not found. NOTFOUND if none at all.\n\n#     Good for passing WINDOWSSDK_DIRS or WINDOWSSDK_DIRS to if you really just want a file and don't care where from.\n\n#\n\n#  get_windowssdk_include_dirs(<directory> <output variable>) - Find the\n\n#     include directories corresponding to the SDK directory you pass in (or NOTFOUND if none)\n\n#\n\n#  get_windowssdk_include_dirs_multiple(<output variable> <directory> ...) - Find the\n\n#     include directories corresponding to the SDK directories you pass in, in order, skipping those not found. NOTFOUND if none at all.\n\n#     Good for passing WINDOWSSDK_DIRS or WINDOWSSDK_DIRS to if you really just want a file and don't care where from.\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2012 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2012.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# pre-output\n",
        "Line" : 57,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# pre-output\n",
        "Line" : 58,
        "CharPositionInLine" : 19
      },
      "3" : {
        "Text" : "# pre-output\n",
        "Line" : 59,
        "CharPositionInLine" : 26
      },
      "4" : {
        "Text" : "# pre-output\n",
        "Line" : 60,
        "CharPositionInLine" : 28
      },
      "5" : {
        "Text" : "# search parameters\n",
        "Line" : 61,
        "CharPositionInLine" : 23
      },
      "6" : {
        "Text" : "# search parameters\n",
        "Line" : 62,
        "CharPositionInLine" : 18
      },
      "7" : {
        "Text" : "# Redstone 5 aka Win10 1809 \"October 2018 Update\"\n\n# Redstone 4 aka Win10 1803 \"April 1018 Update\"\n\n# Redstone 3 aka Win10 1709 \"Fall Creators Update\"\n\n# Redstone 2 aka Win10 1703 \"Creators Update\"\n\n# Redstone aka Win10 1607 \"Anniversary Update\"\n\n# TH2 aka Win10 1511\n\n# Win10 RTM\n\n# just ucrt\n",
        "Line" : 76,
        "CharPositionInLine" : 14
      },
      "8" : {
        "Text" : "# Appends to the three main pre-output lists used only if the path exists\n\n# and is not already in the list.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Path invalid - do not add\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Path already in list - do not add\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Not yet in the list, so we'll add it\n",
        "Line" : 108,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Appends to the \"preferred SDK\" lists only if the path exists\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Path invalid - do not add\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Path already in list - do not add\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Not yet in the list, so we'll add it\n",
        "Line" : 138,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# Just in case we somehow missed it:\n",
        "Line" : 142,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# Given a version like v7.0A, looks for an SDK in the registry under \"Microsoft SDKs\".\n\n# If the given version might be in both HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Microsoft SDKs\\\\Windows\n\n# and HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows Kits\\\\Installed Roots aka \"Windows Kits\",\n\n# use this macro first, since these registry keys usually have more information.\n\n#\n\n# Pass a \"default\" build number as an extra argument in case we can't find it.\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Default build number passed as extra argument\n",
        "Line" : 160,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# See if the registry holds a Microsoft-mutilated, err, designated, product name\n\n# (just using get_filename_component to execute the registry lookup)\n",
        "Line" : 162,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# Got a product name\n",
        "Line" : 168,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# try for a version to augment our name\n\n# (just using get_filename_component to execute the registry lookup)\n",
        "Line" : 172,
        "CharPositionInLine" : 1
      },
      "22" : {
        "Text" : "# Got a version\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# and it's not an invalid one with two dots in it:\n\n# use to override the default build\n",
        "Line" : 180,
        "CharPositionInLine" : 3
      },
      "24" : {
        "Text" : "# Got a version that's not already in the name, let's use it to improve our name.\n",
        "Line" : 184,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Given a name for identification purposes, the build number, and a key (technically a \"value name\")\n\n# corresponding to a Windows SDK packaged as a \"Windows Kit\", look for it\n\n# in HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows Kits\\\\Installed Roots\n\n# Note that the key or \"value name\" tends to be something weird like KitsRoot81 -\n\n# no easy way to predict, just have to observe them in the wild.\n\n# Doesn't hurt to also try _winsdk_check_microsoft_sdks_registry for these:\n\n# sometimes you get keys in both parts of the registry (in the wow64 portion especially),\n\n# and the non-\"Windows Kits\" location is often more descriptive.\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Given a name for identification purposes and the build number\n\n# corresponding to a Windows 10 SDK packaged as a \"Windows Kit\", look for it\n\n# in HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows Kits\\\\Installed Roots\n\n# Doesn't hurt to also try _winsdk_check_microsoft_sdks_registry for these:\n\n# sometimes you get keys in both parts of the registry (in the wow64 portion especially),\n\n# and the non-\"Windows Kits\" location is often more descriptive.\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# not found\n",
        "Line" : 218,
        "CharPositionInLine" : 11
      },
      "28" : {
        "Text" : "# Given a name for indentification purposes, the build number, and the associated package GUID,\n\n# look in the registry under both HKLM and HKCU in \\\\SOFTWARE\\\\Microsoft\\\\MicrosoftSDK\\\\InstalledSDKs\\\\\n\n# for that guid and the SDK it points to.\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "###\n\n# Detect toolchain information: to know whether it's OK to use Vista+ only SDKs\n\n###\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# VC 10 and older has broad target support\n",
        "Line" : 242,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "# VC 11 by default targets Vista and later only, so we can add a few more SDKs that (might?) only work on vista+\n",
        "Line" : 244,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# This is the XP-compatible v110+ toolset\n",
        "Line" : 246,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# This is the VS2010/VS2008 toolset\n",
        "Line" : 248,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# OK, we're VC11 or newer and not using a backlevel or XP-compatible toolset.\n\n# These versions have no XP (and possibly Vista pre-SP1) support\n",
        "Line" : 250,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "###\n\n# MSVC version checks - keeps messy conditionals in one place\n\n# (messy because of _WINDOWSSDK_IGNOREMSVC)\n\n###\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Newer than VS .NET/VS Toolkit 2003\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# VS2005/2008\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# VS2013+\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "###\n\n# START body of find module\n\n###\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Newer than VS .NET/VS Toolkit 2003\n",
        "Line" : 292,
        "CharPositionInLine" : 30
      },
      "41" : {
        "Text" : "###\n\n# Look for \"preferred\" SDKs\n\n###\n",
        "Line" : 293,
        "CharPositionInLine" : 1
      },
      "42" : {
        "Text" : "# Environment variable for SDK dir\n",
        "Line" : 297,
        "CharPositionInLine" : 1
      },
      "43" : {
        "Text" : "# Per-user current Windows SDK for VS2005/2008\n",
        "Line" : 303,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# System-wide current Windows SDK for VS2005/2008\n",
        "Line" : 309,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "###\n\n# Begin the massive list of SDK searching!\n\n###\n",
        "Line" : 316,
        "CharPositionInLine" : 1
      },
      "46" : {
        "Text" : "# These require at least Visual Studio 2013 (VC12)\n",
        "Line" : 320,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# Windows Software Development Kit (SDK) for Windows 10\n\n# Several different versions living in the same directory - if nothing else we can assume RTM (10240)\n",
        "Line" : 324,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# vista-only and 2013+\n",
        "Line" : 330,
        "CharPositionInLine" : 9
      },
      "49" : {
        "Text" : "# Included in Visual Studio 2013\n\n# Includes the v120_xp toolset\n",
        "Line" : 332,
        "CharPositionInLine" : 1
      },
      "50" : {
        "Text" : "# Windows Software Development Kit (SDK) for Windows 8.1\n\n# http://msdn.microsoft.com/en-gb/windows/desktop/bg162891\n",
        "Line" : 337,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# vista-only and 2013+\n",
        "Line" : 341,
        "CharPositionInLine" : 9
      },
      "52" : {
        "Text" : "# Included in Visual Studio 2012\n",
        "Line" : 344,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# Microsoft Windows SDK for Windows 8 and .NET Framework 4.5\n\n# This is the first version to also include the DirectX SDK\n\n# http://msdn.microsoft.com/en-US/windows/desktop/hh852363.aspx\n",
        "Line" : 347,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# vista-only\n",
        "Line" : 352,
        "CharPositionInLine" : 9
      },
      "55" : {
        "Text" : "# Included with VS 2012 Update 1 or later\n\n# Introduces v110_xp toolset\n",
        "Line" : 354,
        "CharPositionInLine" : 1
      },
      "56" : {
        "Text" : "# Microsoft Windows SDK for Windows 7 and .NET Framework 4\n\n# http://www.microsoft.com/downloads/en/details.aspx?FamilyID=6b6c21d2-2006-4afa-9702-529fa782d63b\n",
        "Line" : 358,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# vista-only\n",
        "Line" : 361,
        "CharPositionInLine" : 9
      },
      "58" : {
        "Text" : "# Included with VS 2010\n",
        "Line" : 363,
        "CharPositionInLine" : 1
      },
      "59" : {
        "Text" : "# Windows SDK for Windows 7 and .NET Framework 3.5 SP1\n\n# Works with VC9\n\n# http://www.microsoft.com/en-us/download/details.aspx?id=18950\n",
        "Line" : 366,
        "CharPositionInLine" : 1
      },
      "60" : {
        "Text" : "# Two versions call themselves \"v6.1\":\n\n# Older:\n\n# Windows Vista Update & .NET 3.0 SDK\n\n# http://www.microsoft.com/en-us/download/details.aspx?id=14477\n",
        "Line" : 371,
        "CharPositionInLine" : 1
      },
      "61" : {
        "Text" : "# Newer:\n\n# Windows Server 2008 & .NET 3.5 SDK\n\n# may have broken VS9SP1? they recommend v7.0 instead, or a KB...\n\n# http://www.microsoft.com/en-us/download/details.aspx?id=24826\n",
        "Line" : 376,
        "CharPositionInLine" : 1
      },
      "62" : {
        "Text" : "# Included in VS 2008\n",
        "Line" : 382,
        "CharPositionInLine" : 1
      },
      "63" : {
        "Text" : "# Microsoft Windows Software Development Kit for Windows Vista and .NET Framework 3.0 Runtime Components\n\n# http://blogs.msdn.com/b/stanley/archive/2006/11/08/microsoft-windows-software-development-kit-for-windows-vista-and-net-framework-3-0-runtime-components.aspx\n",
        "Line" : 385,
        "CharPositionInLine" : 1
      },
      "64" : {
        "Text" : "# Let's not forget the Platform SDKs, which sometimes are useful!\n",
        "Line" : 390,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "###\n\n# Finally, look for \"preferred\" SDKs\n\n###\n",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Newer than VS .NET/VS Toolkit 2003\n",
        "Line" : 398,
        "CharPositionInLine" : 30
      },
      "67" : {
        "Text" : "# Environment variable for SDK dir\n",
        "Line" : 401,
        "CharPositionInLine" : 1
      },
      "68" : {
        "Text" : "# Per-user current Windows SDK for VS2005/2008\n",
        "Line" : 407,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# System-wide current Windows SDK for VS2005/2008\n",
        "Line" : 413,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "# If we found something...\n",
        "Line" : 444,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Fallback, in case no preference found.\n",
        "Line" : 451,
        "CharPositionInLine" : 1
      },
      "72" : {
        "Text" : "# If we found indications of a user preference...\n",
        "Line" : 458,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Internal: Architecture-appropriate library directory names.\n",
        "Line" : 476,
        "CharPositionInLine" : 1
      },
      "74" : {
        "Text" : "# Only supported in Win10 SDK and up.\n",
        "Line" : 479,
        "CharPositionInLine" : 3
      },
      "75" : {
        "Text" : "# what the WDK for Win8+ calls this architecture\n",
        "Line" : 480,
        "CharPositionInLine" : 28
      },
      "76" : {
        "Text" : "# what the architecture used to be called in oldest SDKs\n",
        "Line" : 482,
        "CharPositionInLine" : 30
      },
      "77" : {
        "Text" : "# what the architecture used to be called\n",
        "Line" : 483,
        "CharPositionInLine" : 25
      },
      "78" : {
        "Text" : "# what the WDK for Win8+ calls this architecture\n",
        "Line" : 484,
        "CharPositionInLine" : 26
      },
      "79" : {
        "Text" : "# what the architecture used to be called in oldest SDKs\n",
        "Line" : 488,
        "CharPositionInLine" : 30
      },
      "80" : {
        "Text" : "# what the architecture used to be called\n",
        "Line" : 489,
        "CharPositionInLine" : 27
      },
      "81" : {
        "Text" : "# what the WDK for Win8+ calls this architecture\n",
        "Line" : 490,
        "CharPositionInLine" : 26
      },
      "82" : {
        "Text" : "# what the architecture used to be called in oldest SDKs\n\n# what the architecture used to be called\n\n# what the WDK for Win8+ calls this architecture\n",
        "Line" : 492,
        "CharPositionInLine" : 26
      },
      "83" : {
        "Text" : "# If we don't have any \"parent directory\" items...\n",
        "Line" : 505,
        "CharPositionInLine" : 3
      },
      "84" : {
        "Text" : "# Fail.\n",
        "Line" : 511,
        "CharPositionInLine" : 2
      },
      "85" : {
        "Text" : "# SDKs like 7.1A\n",
        "Line" : 517,
        "CharPositionInLine" : 28
      },
      "86" : {
        "Text" : "# just because some SDKs have x86 dir and root dir\n",
        "Line" : 518,
        "CharPositionInLine" : 25
      },
      "87" : {
        "Text" : "# Win2k min requirement\n\n# WinXP min requirement\n",
        "Line" : 519,
        "CharPositionInLine" : 29
      },
      "88" : {
        "Text" : "# Win Server 2003 min requirement\n",
        "Line" : 521,
        "CharPositionInLine" : 30
      },
      "89" : {
        "Text" : "# Win Vista (\"Long Horn\") min requirement\n",
        "Line" : 523,
        "CharPositionInLine" : 33
      },
      "90" : {
        "Text" : "# Win 7 min requirement\n",
        "Line" : 525,
        "CharPositionInLine" : 34
      },
      "91" : {
        "Text" : "# Win Vista (\"Long Horn\") min requirement\n",
        "Line" : 528,
        "CharPositionInLine" : 7
      },
      "92" : {
        "Text" : "# Win 7 min requirement\n\n# Win 8 min requirement\n",
        "Line" : 529,
        "CharPositionInLine" : 8
      },
      "93" : {
        "Text" : "# Win 8.1 min requirement\n",
        "Line" : 531,
        "CharPositionInLine" : 11
      },
      "94" : {
        "Text" : "# Look for WDF libraries in Win10+ SDK\n",
        "Line" : 541,
        "CharPositionInLine" : 2
      },
      "95" : {
        "Text" : "# Look in each Win10+ SDK version for the components\n",
        "Line" : 549,
        "CharPositionInLine" : 2
      },
      "96" : {
        "Text" : "# Check to see if a library actually exists here.\n",
        "Line" : 557,
        "CharPositionInLine" : 3
      },
      "97" : {
        "Text" : "# Check to see if a header file actually exists here.\n",
        "Line" : 587,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 98
    },
    "tools/cmake/IncludeTarget.cmake" : {
      "ObjectId" : "f14d8f4dc5fc78164651a0cfea8a878830d0f760",
      "LastModified" : "2019-03-14T02:50:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/cmake/RemovePermissive.cmake" : {
      "ObjectId" : "865f3b35790ad3d682c3f0b5fb6ce5db18d10821",
      "LastModified" : "2019-03-14T02:50:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/cmake/TargetIncludesSystem.cmake" : {
      "ObjectId" : "2493ff908960620785ced3f1f640ca0596b16d29",
      "LastModified" : "2019-03-14T02:50:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 13
  },
  "ElapsedTime" : 2102
}