{
  "Repository" : "26113420",
  "Revision" : "HEAD",
  "ObjectId" : "511e551bda893c9dd12d03457983fd83dc11b6a7",
  "CommitTime" : "2019-03-12T17:15:44Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "5e5b2bbdebee70ef1b30f5f77db882c41c1f6cd1",
      "LastModified" : "2019-01-04T11:32:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Update this: Alpha = 90, Beta 1 = 91, RC 1 = 94\n",
        "Line" : 6,
        "CharPositionInLine" : 28
      },
      "1" : {
        "Text" : "# ECM\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Own\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Dependencies\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Required components to build this framework\n\n# TODO move Widgets-dependent part to a libKDbWidgets\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "KDb.pc.cmake" : {
      "ObjectId" : "1fc8be0e607053c3134a64550b919349cbee6916",
      "LastModified" : "2018-07-03T20:36:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "autotests/CMakeLists.txt" : {
      "ObjectId" : "e81f7221fbb6e3722414b7fcd3d24b3371c261d1",
      "LastModified" : "2019-01-04T21:30:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# make plugins work without installing them:\n",
        "Line" : 12,
        "CharPositionInLine" : 5
      },
      "1" : {
        "Text" : "# nonstandard path for sqlite3 extensions, they would work too if we placed them\n\n# in ${KDB_LOCAL_PLUGINS_DIR}/sqlite3 but we want to test the \"extraSqliteExtensionPaths\"\n\n# connection option in ConnectionTest::testCreateDb():\n",
        "Line" : 14,
        "CharPositionInLine" : 5
      },
      "2" : {
        "Text" : "# this removes access to yytokentype enum as we should access KDb::Token instead\n",
        "Line" : 18,
        "CharPositionInLine" : 18
      },
      "3" : {
        "Text" : "# A helper library for db-related tests\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tests\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#TODO enable for Windows when headers_test.sh is ported e.g. to python\n",
        "Line" : 59,
        "CharPositionInLine" : 14
      },
      "CommentCount" : 6
    },
    "autotests/headers/CMakeLists.txt" : {
      "ObjectId" : "38e8c241d86b04583f379c6e5da34eb533ebd9f8",
      "LastModified" : "2017-06-09T20:35:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test if all the installed headers can be included individually. Requires installed headers.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Just show dependent files in the project:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "autotests/headers/HeadersTestInclude.cmake" : {
      "ObjectId" : "ff672982eb8e919bd6f47d6fdfc27b0234f063d5",
      "LastModified" : "2018-01-31T21:42:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Honor visibility properties for all target types (since cmake 3.3)\n",
        "Line" : 8,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : "# Don't warn when combining AUTOMOC with qt5_wrap_ui() or qt5_add_resources() (since cmake 3.10)\n",
        "Line" : 11,
        "CharPositionInLine" : 19
      },
      "CommentCount" : 2
    },
    "autotests/parser/CMakeLists.txt" : {
      "ObjectId" : "e59406ed8e7a7edcaa0e809114ff8723b91e3eb5",
      "LastModified" : "2016-07-14T22:17:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "autotests/tools/CMakeLists.txt" : {
      "ObjectId" : "5d8b112f0130827d0858a340112dd87bc3a1ff06",
      "LastModified" : "2019-03-08T21:15:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/modules/BuildTests.cmake" : {
      "ObjectId" : "4ee2b4ddb27f350b61d23e40a2b790060035d08d",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/modules/FindFreeTDS.cmake" : {
      "ObjectId" : "fe3a6f908a26301d0b20c936988d35e8475bdd17",
      "LastModified" : "2015-06-15T22:21:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the FreeTDS library\n\n# Once done this will define\n\n#\n\n#  FreeTDS_FOUND - system has FreeTDS\n\n#  FreeTDS_INCLUDE_DIR - the FreeTDS include directory\n\n#  FreeTDS_LIBRARIES - Link these to use FreeTDS\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache\n",
        "Line" : 11,
        "CharPositionInLine" : 7
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindICU.cmake" : {
      "ObjectId" : "c78be741007faa5e1301f6b6cc465fcd00585a38",
      "LastModified" : "2018-07-03T20:42:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindICU\n\n# -------\n\n#\n\n# Find the International Components for Unicode (ICU) libraries and\n\n# programs.\n\n#\n\n# This module supports multiple components.\n\n# Components can include any of: ``data``, ``i18n``, ``io``, ``le``,\n\n# ``lx``, ``test``, ``tu`` and ``uc``.\n\n#\n\n# Note that on Windows ``data`` is named ``dt`` and ``i18n`` is named\n\n# ``in``; any of the names may be used, and the appropriate\n\n# platform-specific library name will be automatically selected.\n\n#\n\n# This module reports information about the ICU installation in\n\n# several variables.  General variables::\n\n#\n\n#   ICU_VERSION - ICU release version\n\n#   ICU_FOUND - true if the main programs and libraries were found\n\n#   ICU_LIBRARIES - component libraries to be linked\n\n#   ICU_INCLUDE_DIRS - the directories containing the ICU headers\n\n#\n\n# Imported targets::\n\n#\n\n#   ICU::<C>\n\n#\n\n# Where ``<C>`` is the name of an ICU component, for example\n\n# ``ICU::i18n``.\n\n#\n\n# ICU programs are reported in::\n\n#\n\n#   ICU_GENCNVAL_EXECUTABLE - path to gencnval executable\n\n#   ICU_ICUINFO_EXECUTABLE - path to icuinfo executable\n\n#   ICU_GENBRK_EXECUTABLE - path to genbrk executable\n\n#   ICU_ICU-CONFIG_EXECUTABLE - path to icu-config executable\n\n#   ICU_GENRB_EXECUTABLE - path to genrb executable\n\n#   ICU_GENDICT_EXECUTABLE - path to gendict executable\n\n#   ICU_DERB_EXECUTABLE - path to derb executable\n\n#   ICU_PKGDATA_EXECUTABLE - path to pkgdata executable\n\n#   ICU_UCONV_EXECUTABLE - path to uconv executable\n\n#   ICU_GENCFU_EXECUTABLE - path to gencfu executable\n\n#   ICU_MAKECONV_EXECUTABLE - path to makeconv executable\n\n#   ICU_GENNORM2_EXECUTABLE - path to gennorm2 executable\n\n#   ICU_GENCCODE_EXECUTABLE - path to genccode executable\n\n#   ICU_GENSPREP_EXECUTABLE - path to gensprep executable\n\n#   ICU_ICUPKG_EXECUTABLE - path to icupkg executable\n\n#   ICU_GENCMN_EXECUTABLE - path to gencmn executable\n\n#\n\n# ICU component libraries are reported in::\n\n#\n\n#   ICU_<C>_FOUND - ON if component was found\n\n#   ICU_<C>_LIBRARIES - libraries for component\n\n#\n\n# ICU datafiles are reported in::\n\n#\n\n#   ICU_MAKEFILE_INC - Makefile.inc\n\n#   ICU_PKGDATA_INC - pkgdata.inc\n\n#\n\n# Note that ``<C>`` is the uppercased name of the component.\n\n#\n\n# This module reads hints about search results from::\n\n#\n\n#   ICU_ROOT - the root of the ICU installation\n\n#\n\n# The environment variable ``ICU_ROOT`` may also be used; the\n\n# ICU_ROOT variable takes precedence.\n\n#\n\n# The following cache variables may also be set::\n\n#\n\n#   ICU_<P>_EXECUTABLE - the path to executable <P>\n\n#   ICU_INCLUDE_DIR - the directory containing the ICU headers\n\n#   ICU_<C>_LIBRARY - the library for component <C>\n\n#\n\n# .. note::\n\n#\n\n#   In most cases none of the above variables will require setting,\n\n#   unless multiple ICU versions are available and a specific version\n\n#   is required.\n\n#\n\n# Other variables one may set to control this module are::\n\n#\n\n#   ICU_DEBUG - Set to ON to enable debug output from FindICU.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Written by Roger Leigh <rleigh@codelibre.net>\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The ICU checks are contained in a function due to the large number\n\n# of temporary variables needed.\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set up search paths, taking compiler into account.  Search ICU_ROOT,\n\n# with ICU_ROOT in the environment as a fallback if unset.\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Find include directory\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Get version\n",
        "Line" : 137,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# 64-bit binary directory\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# 64-bit library directory\n",
        "Line" : 153,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Find all ICU programs\n",
        "Line" : 158,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Find all ICU libraries\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Special case deliberate library naming mismatches between Unix\n\n# and Windows builds\n",
        "Line" : 184,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Note there is no debug variant at present\n",
        "Line" : 192,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# Note there is no debug variant at present\n",
        "Line" : 197,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# Find all ICU data files\n",
        "Line" : 245,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 15
    },
    "cmake/modules/FindMySQL.cmake" : {
      "ObjectId" : "9b398f569a43dd34c8ce04b4ae5e5c88b9f2b642",
      "LastModified" : "2018-07-03T20:36:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find MySQL / MySQL Embedded library\n\n# Find the MySQL includes and client library\n\n# This module defines\n\n#  MYSQL_INCLUDE_DIR, where to find mysql.h\n\n#  MYSQL_LIBRARIES, the libraries needed to use MySQL.\n\n#  MYSQL_LIB_DIR, path to the MYSQL_LIBRARIES\n\n#  MYSQL_EMBEDDED_LIBRARIES, the libraries needed to use MySQL Embedded.\n\n#  MYSQL_EMBEDDED_LIB_DIR, path to the MYSQL_EMBEDDED_LIBRARIES\n\n#  MySQL_FOUND, If false, do not try to use MySQL.\n\n#  MySQL_Embedded_FOUND, If false, do not try to use MySQL Embedded.\n\n#  MYSQL_USING_MARIADB, If true MariaDB has been found and will be used as a replacement for MySQL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006-2018, Jarosław Staniek <staniek@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# MariaDB\n",
        "Line" : 36,
        "CharPositionInLine" : 35
      },
      "3" : {
        "Text" : "# MariaDB\n",
        "Line" : 37,
        "CharPositionInLine" : 39
      },
      "4" : {
        "Text" : "# First try to identify MariaDB.\n\n# Once we find headers of MariaDB we will look for MariaDB and mot MySQL.\n\n# This way we avoid mixing MariaDB and MySQL files.\n",
        "Line" : 40,
        "CharPositionInLine" : 3
      },
      "5" : {
        "Text" : "# now a real find\n",
        "Line" : 51,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 57,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# path suffix for debug/release mode\n\n# binary_dist: mysql binary distribution\n\n# build_dist: custom build\n",
        "Line" : 81,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# MariaDB\n\n# MariaDB\n",
        "Line" : 95,
        "CharPositionInLine" : 35
      },
      "9" : {
        "Text" : "# MariaDB\n",
        "Line" : 97,
        "CharPositionInLine" : 39
      },
      "10" : {
        "Text" : "# once we find one MariaDB component, always search for MariaDB, not MySQL components\n",
        "Line" : 106,
        "CharPositionInLine" : 9
      },
      "11" : {
        "Text" : "# mysql\n",
        "Line" : 109,
        "CharPositionInLine" : 10
      },
      "12" : {
        "Text" : "# !win32\n",
        "Line" : 129,
        "CharPositionInLine" : 7
      },
      "13" : {
        "Text" : "# TODO: set MYSQL_USING_MARIADB if MariaDB found\n",
        "Line" : 141,
        "CharPositionInLine" : 3
      },
      "14" : {
        "Text" : "# Did we find anything?\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "cmake/modules/FindPostgreSQL.cmake" : {
      "ObjectId" : "8ec30db84f099a79763fa43470950d2413e1a703",
      "LastModified" : "2018-07-03T20:36:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindPostgreSQL\n\n# --------------\n\n#\n\n# Find the PostgreSQL installation.\n\n#\n\n# In Windows, we make the assumption that, if the PostgreSQL files are\n\n# installed, the default directory will be C:\\Program Files\\PostgreSQL.\n\n#\n\n# This module defines\n\n#\n\n# ::\n\n#\n\n#   PostgreSQL_LIBRARIES - the PostgreSQL libraries needed for linking\n\n#   PostgreSQL_INCLUDE_DIRS - the directories of the PostgreSQL headers\n\n#   PostgreSQL_VERSION_STRING - the version of PostgreSQL found (since CMake 2.8.8)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2004-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# History:\n\n# This module is derived from the module originally found in the VTK source tree.\n\n#\n\n# ----------------------------------------------------------------------------\n\n# Note:\n\n# PostgreSQL_ADDITIONAL_VERSIONS is a variable that can be used to set the\n\n# version mumber of the implementation of PostgreSQL.\n\n# In Windows the default installation of PostgreSQL uses that as part of the path.\n\n# E.g C:\\Program Files\\PostgreSQL\\8.4.\n\n# Currently, the following version numbers are known to this module:\n\n# \"9.1\" \"9.0\" \"8.4\" \"8.3\" \"8.2\" \"8.1\" \"8.0\"\n\n#\n\n# To use this variable just do something like this:\n\n# set(PostgreSQL_ADDITIONAL_VERSIONS \"9.2\" \"8.4.4\")\n\n# before calling find_package(PostgreSQL) in your CMakeLists.txt file.\n\n# This will mean that the versions you set here will be found first in the order\n\n# specified before the default ones are searched.\n\n#\n\n# ----------------------------------------------------------------------------\n\n# You may need to manually set:\n\n#  PostgreSQL_INCLUDE_DIR  - the path to where the PostgreSQL include files are.\n\n#  PostgreSQL_LIBRARY_DIR  - The path to where the PostgreSQL library files are.\n\n# If FindPostgreSQL.cmake cannot find the include files or the library files.\n\n#\n\n# ----------------------------------------------------------------------------\n\n# The following variables are set if PostgreSQL is found:\n\n#  PostgreSQL_FOUND         - Set to true when PostgreSQL is found.\n\n#  PostgreSQL_INCLUDE_DIRS  - Include directories for PostgreSQL\n\n#  PostgreSQL_LIBRARY_DIRS  - Link directories for PostgreSQL libraries\n\n#  PostgreSQL_LIBRARIES     - The PostgreSQL libraries.\n\n#\n\n# ----------------------------------------------------------------------------\n\n# If you have installed PostgreSQL in a non-standard location.\n\n# (Please note that in the following comments, it is assumed that <Your Path>\n\n# points to the root directory of the include directory of PostgreSQL.)\n\n# Then you have three options.\n\n# 1) After CMake runs, set PostgreSQL_INCLUDE_DIR to <Your Path>/include and\n\n#    PostgreSQL_LIBRARY_DIR to wherever the library pq (or libpq in windows) is\n\n# 2) Use CMAKE_INCLUDE_PATH to set a path to <Your Path>/PostgreSQL<-version>. This will allow find_path()\n\n#    to locate PostgreSQL_INCLUDE_DIR by utilizing the PATH_SUFFIXES option. e.g. In your CMakeLists.txt file\n\n#    set(CMAKE_INCLUDE_PATH ${CMAKE_INCLUDE_PATH} \"<Your Path>/include\")\n\n# 3) Set an environment variable called ${PostgreSQL_ROOT} that points to the root of where you have\n\n#    installed PostgreSQL, e.g. <Your Path>.\n\n#\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define additional search paths for root directories.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use pkg-config to get the directories and then use these values in the find_path()\n\n# and find_library() calls.\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Look for an installation.\n\n#\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Look in other places.\n",
        "Line" : 122,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# Help the user find it if we cannot.\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Look in other places.\n",
        "Line" : 135,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "# Help the user find it if we cannot.\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# The PostgreSQL library.\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Setting some more prefixes for the library\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Help the user find it if we cannot.\n",
        "Line" : 165,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Some platforms include multiple pg_config.hs for multi-lib configurations\n\n# This is a temporary workaround.  A better solution would be to compile\n\n# a dummy c file and extract the value of the symbol.\n",
        "Line" : 174,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Did we find anything?\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Now try to get the include and library path.\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#message(\"Final PostgreSQL include dir: ${PostgreSQL_INCLUDE_DIRS}\")\n\n#message(\"Final PostgreSQL library dir: ${PostgreSQL_LIBRARY_DIRS}\")\n\n#message(\"Final PostgreSQL libraries:   ${PostgreSQL_LIBRARIES}\")\n",
        "Line" : 209,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 17
    },
    "cmake/modules/FindQHelpGenerator.cmake" : {
      "ObjectId" : "d3bed444a1836bf312421633a09a587396a2fe8b",
      "LastModified" : "2016-12-04T23:31:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Finds the Qt5 QHelpGenerator\n\n#\n\n#  QHelpGenerator_FOUND     - True if QHelpGenerator found.\n\n#  QHelpGenerator_EXECUTABLE - Path to executable\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# try \n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# assume same folder as qmake executable\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# TODO: prevent that the Qt4 version is picked up\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindSqlite.cmake" : {
      "ObjectId" : "5cf0a4cd2e0ea7fdf1ec9bec5704a933d95855cc",
      "LastModified" : "2018-07-03T20:36:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find SQLite 3\n\n# This module can be used to find SQLite 3.\n\n# (THIS IS AN EXTENDED VERSION OF THE FUTURE FindSqlite.cmake FOR KDB TO MAKE SURE\n\n#  THE DETECTION WORKS AS EXPECTED)\n\n#\n\n# Accepted variables:\n\n#  SQLITE_RECOMMENDED_VERSION\n\n#        If defined, warning will be displayed for SQLite versions older\n\n#        than specified.\n\n#        For example use this before calling find_package:\n\n#           set(SQLITE_RECOMMENDED_VERSION \"3.6.22\")\n\n#  SQLITE_LOAD_EXTENSION_REQUIRED\n\n#        If defined, extensions loading feature of SQLite is required.\n\n#        For example use this before calling find_package:\n\n#           set(SQLITE_LOAD_EXTENSION_REQUIRED ON)\n\n#\n\n# This module allows to depend on a particular minimum version of SQLite.\n\n# To acomplish that one should use the appropriate cmake syntax for\n\n# find_package(). For example to depend on SQLite >= 3.6.16 one should use:\n\n#\n\n#  find_package(SQLite 3.6.16 REQUIRED)\n\n#\n\n# Variables that FindSqlite.cmake sets:\n\n#  Sqlite_FOUND             TRUE if required version of Sqlite has been found\n\n#  SQLITE_INCLUDE_DIR       include directories to use SQLite\n\n#  SQLITE_LIBRARIES         link these to use SQLite\n\n#  SQLITE_MIN_VERSION       minimum version, if as the second argument of find_package()\n\n#  SQLITE_VERSION_STRING    found version of SQLite, e.g. \"3.6.16\"\n\n#  SQLITE_VERSION           integer for the found version of SQLite, e.g. 3006016 for 3.6.16\n\n#  SQLITE_MIN_VERSION_MAJOR found major version of SQLite, e.g. 3\n\n#  SQLITE_MIN_VERSION_MINOR found major version of SQLite, e.g. 6\n\n#  SQLITE_MIN_VERSION_PATCH found major version of SQLite, e.g. 16\n\n#  SQLITE_SHELL             sqlite3 executable with full path\n\n#  SQLITE_COMPILE_OPTIONS   compile options used to build libsqlite3\n\n#  SQLITE_CHECK_COMPILE_OPTION(X)\n\n#      Sets X variable to ON if option X has been set in compile options for libsqlite3.\n\n#      Supported can be, among others:\n\n#      ENABLE_COLUMN_METADATA ENABLE_FTS3 ENABLE_FTS3_PARENTHESIS ENABLE_MEMORY_MANAGEMENT\n\n#      ENABLE_RTREE ENABLE_UNLOCK_NOTIFY ENABLE_UPDATE_DELETE_LIMIT SECURE_DELETE SOUNDEX\n\n#      TEMP_STORE THREADSAFE OMIT_LOAD_EXTENSION.\n\n#      For complete list of options read https://www.sqlite.org/compile.html\n\n#      SQLITE_COMPILE_OPTIONS list is used for the check.\n\n#  SQLITE_INCLUDE_PATH      include directory for sqlite3.h\n\n#  SQLITE_EXT_INCLUDE_PATH      include directory for sqlite3ext.h\n\n#\n\n# Copyright (C) 2008 Gilles Caulier <caulier.gilles@gmail.com>\n\n# Copyright (C) 2010-2015 Jarosław Staniek <staniek@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# start with empty list\n",
        "Line" : 75,
        "CharPositionInLine" : 24
      },
      "4" : {
        "Text" : "# most of the headers will be in the same directories, avoid creating a list of duplicates\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#message(DEBUG \" SQLITE_INCLUDE_DIR: ${SQLITE_INCLUDE_DIR}\")\n\n#message(DEBUG \" SQLITE_INCLUDE_PATH: ${SQLITE_INCLUDE_PATH}\")\n\n#message(DEBUG \" SQLITE_EXT_INCLUDE_PATH: ${SQLITE_EXT_INCLUDE_PATH}\")\n\n#message(DEBUG \" SQLITE_LIBRARIES: ${SQLITE_LIBRARIES}\")\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Suppport finding at least a particular version, for instance FIND_PACKAGE(Sqlite 3.6.22)\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "cmake/modules/FindXBase.cmake" : {
      "ObjectId" : "2f438f0810277bda8fff545de5029415cfaaa2fe",
      "LastModified" : "2016-12-04T23:31:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the XBase library\n\n# Once done this will define\n\n#\n\n#  XBase_FOUND - system has XBase\n\n#  XBase_INCLUDE_DIR - the XBase include directory\n\n#  XBase_LIBRARIES - Link these to use XBase\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache\n",
        "Line" : 11,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "cmake/modules/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "ee7f38fb7717f124abe559a21826692ee7d9071a",
      "LastModified" : "2018-07-03T20:36:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# https://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# https://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 45,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 49,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# check if this is a submodule\n",
        "Line" : 56,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 97,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    },
    "cmake/modules/KDbAddExamples.cmake" : {
      "ObjectId" : "420a49188e347311c839e37bd837059deae047a8",
      "LastModified" : "2018-07-03T20:36:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Additional CMake macros\n\n#\n\n# Copyright (C) 2015-2017 Jarosław Staniek <staniek@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Adds BUILD_EXAMPLES option to enable examples. If enabled, build in examples/ subdirectory\n\n# is enabled. If optional argument ARG1 is ON, building examples will be ON by default.\n\n# Otherwise building examples will be OFF. ARG1 is OFF by default.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/KDbAddQCH.cmake" : {
      "ObjectId" : "45708bd67b720d1604fe0eaa3f773c87a4cef62e",
      "LastModified" : "2018-07-03T20:36:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# KDbAddQCH\n\n# ------------------\n\n#\n\n# This module provides the ``kdb_add_qch`` function for generating API\n\n# documentation files in the QCH format, and the ``kdb_install_qch_export``\n\n# function for generating and installing exported CMake targets for such\n\n# generated QCH files to enable builds of other software with generation of\n\n# QCH files to create links into the given QCH files.\n\n#\n\n# ::\n\n#\n\n#   kdb_add_qch(<target_name>\n\n#       NAME <name>\n\n#       VERSION <version>\n\n#       QCH_INSTALL_DESTINATION <qchfile_install_path>\n\n#       TAGFILE_INSTALL_DESTINATION <tagsfile_install_path>\n\n#       [BASE_NAME <basename>]\n\n#       [SOURCE_DIRS <dir> [<dir2> [...]]]\n\n#       [SOURCES <file> [<file2> [...]]]\n\n#       |MD_MAINPAGE <md_file>]\n\n#       [IMAGE_DIRS <idir> [<idir2> [...]]]\n\n#       [EXAMPLE_DIRS <edir> [<edir2> [...]]]\n\n#       [ORG_DOMAIN <domain>]\n\n#       [NAMESPACE <namespace>]\n\n#       [LINK_QCHS <qch> [<qch2> [...]]]\n\n#       [LINK_QCHS_VERSIONED <qchv> [<qchv2> [...]]]\n\n#       [BLANK_MACROS <macro> [<macro2> [...]]]\n\n#       [CONFIG_TEMPLATE <configtemplate_file>]\n\n#       [VERBOSE]\n\n#   )\n\n#\n\n# This macro adds a target called <target_name> for the creation of an API\n\n# documentation manual in the QCH format from the given sources.\n\n# It currently uses doxygen, future versions might optionally also allow other\n\n# tools.\n\n# Next to the QCH file the target will generate a corresponding doxygen tag\n\n# file, which enables creating links from other documentation into the\n\n# generated QCH file.\n\n#\n\n# If the required tools are not found, the macro will skip creation of the\n\n# target and only emit a warning, so the use of the macro can be introduced\n\n# without requiring anyone to also have the needed tools present at that time.\n\n# This behaviour might change in future versions to result in a fail instead.\n\n# It is recommended to make the use of this macro optional, by depending\n\n# the call to ``kdb_add_qch()`` on a CMake option being set, with a name like\n\n# ``BUILD_QCH`` and being TRUE by default. This will allow the developers to\n\n# saves resources on normal source development build cycles by setting this\n\n# option to FALSE.\n\n#\n\n# The macro will set the target properties DOXYGEN_TAGFILE, QHP_NAMESPACE,\n\n# QHP_NAMESPACE_VERSIONED and QHP_VIRTUALFOLDER to the respective values, to\n\n# allow other code access to them, e.g. the macro kdb_install_qch_export().\n\n# To enable the use of the target <target_name> as item for LINK_QCHS or\n\n# LINK_QCHS_VERSIONED in further ``kdb_add_qch()`` calls in the current build,\n\n# additionally a target property DOXYGEN_TAGFILE_BUILD is set, with the path\n\n# of the created doxygen tag file in the build dir.\n\n# If existing, ``kdb_add_qch()`` will use this property instead of\n\n# DOXYGEN_TAGFILE for access to the tags file.\n\n#\n\n# NAME specifies the name for the generated documentation.\n\n#\n\n# VERSION specifies the version of the library for which the documentation is\n\n# created.\n\n#\n\n# BASE_NAME specifies the base name for the generated files.\n\n# The default basename is ``<name>``.\n\n#\n\n# SOURCE_DIRS specifies the dirs (incl. subdirs) with the source files for\n\n# which the API documentation should be generated.  Dirs can be relative to\n\n# the current source dir. Dependencies to the files in the dirs are not\n\n# tracked currently, other than with the SOURCES argument. So do not use for\n\n# sources generated during the build.\n\n# Needs to be used when SOURCES or CONFIG_TEMPLATE are not used.\n\n#\n\n# SOURCES specifies the source files for which the API documentation should be\n\n# generated.\n\n# Needs to be used when SOURCE_DIRS or CONFIG_TEMPLATE are not used.\n\n#\n\n# MD_MAINPAGE specifies a file in Markdown format that should be used as main\n\n# page. This page will overrule any ``\\mainpage`` command in the included\n\n# sources.\n\n#\n\n# IMAGE_DIRS specifies the dirs which contain images that are included in the\n\n# documentation. Dirs can be relative to the current source dir.\n\n#\n\n# EXAMPLE_DIRS specifies the dirs which contain examples that are included in\n\n# the documentation. Dirs can be relative to the current source dir.\n\n#\n\n# QCH_INSTALL_DESTINATION specifies where the generated QCH file will be\n\n# installed.\n\n#\n\n# TAGFILE_INSTALL_DESTINATION specifies where the generated tag file will be\n\n# installed.\n\n#\n\n# NAMESPACE can be used to set a custom namespace <namespace> of the generated\n\n# QCH file. The namepspace is used as the unique id by QHelpEngine (cmp.\n\n# https://doc.qt.io/qt-5/qthelpproject.html#namespace).\n\n# The default namespace is ``<domain>.<name>``.\n\n# Needs to be used when ORG_DOMAIN is not used.\n\n#\n\n# ORG_DOMAIN can be used to define the organization domain prefix for the\n\n# default namespace of the generated QCH file.\n\n# Needs to be used when NAMESPACE is not used.\n\n#\n\n# LINK_QCHS specifies a list of other QCH targets which should be used for\n\n# creating references to API documenation of code in external libraries.\n\n# For each target <qch> in the list these target properties are expected to be\n\n# defined: DOXYGEN_TAGFILE, QHP_NAMESPACE and QHP_VIRTUALFOLDER.\n\n# If any of these is not existing, <qch> will be ignored.\n\n# Use the macro kdb_install_qch_export for exporting a target with these\n\n# properties with the CMake config of a library.\n\n# Any target <qch> can also be one created before in the same buildsystem by\n\n# another call of ``kdb_add_qch()``.\n\n#\n\n# LINK_QCHS_VERSIONED does basically the same as LINK_QCHS, but binds the links\n\n# to a certain version.\n\n# For each <qchv> in the list these target properties are expected to be\n\n# defined: DOXYGEN_TAGFILE, QHP_NAMESPACE_VERSIONED and QHP_VIRTUALFOLDER.\n\n# If any of these is not existing, <qchv> will be ignored.\n\n# Use the macro kdb_install_qch_export for exporting a target with these\n\n# properties with the CMake config of a library.\n\n# Any <qchv> can also be one created before in the same buildsystem by another\n\n# call of ``kdb_add_qch()``.\n\n#\n\n# BLANK_MACROS specifies a list of C/C++ macro names which should be ignored by\n\n# the API dox generation tool and handled as if they resolve to empty strings.\n\n# Examples are export macros only defined in generated files, so whose\n\n# definition might be not available to the tool.\n\n#\n\n# CONFIG_TEMPLATE specifies a custom cmake template file for the config file\n\n# that is created to control the execution of the API dox generation tool.\n\n# The following CMake variables need to be used:\n\n# ECM_DOXYGENQCH_PERL_EXECUTABLE, ECM_DOXYGENQCH_QHELPGENERATOR_EXECUTABLE,\n\n# ECM_DOXYGENQCH_FILEPATH, ECM_DOXYGENQCH_TAGFILE.\n\n# The following CMake variables can be used:\n\n# ECM_DOXYGENQCH_PROJECTNAME, ECM_DOXYGENQCH_PROJECTVERSION,\n\n# ECM_DOXYGENQCH_VIRTUALFOLDER, ECM_DOXYGENQCH_FULLNAMESPACE,\n\n# ECM_DOXYGENQCH_TAGFILES,\n\n# ECM_DOXYGENQCH_WARN_LOGFILE, ECM_DOXYGENQCH_QUIET.\n\n# There is no guarantue that the other CMake variables currently used in the\n\n# default config file template will also be present with the same semantics\n\n# in future versions of this macro.\n\n#\n\n# VERBOSE tells the API dox generation tool to be more verbose about its\n\n# activity.\n\n#\n\n# Example usage:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#   kdb_add_qch(\n\n#       MyLib_QCH\n\n#       NAME MyLib\n\n#       VERSION \"0.42.0\"\n\n#       ORG_DOMAIN org.myorg\n\n#       SOURCE_DIRS\n\n#           src\n\n#       LINK_QCHS\n\n#           Qt5Core_QCH\n\n#           Qt5Xml_QCH\n\n#           Qt5Gui_QCH\n\n#           Qt5Widgets_QCH\n\n#       BLANK_MACROS\n\n#           MyLib_EXPORT\n\n#           MyLib_DEPRECATED\n\n#       TAGFILE_INSTALL_DESTINATION ${CMAKE_INSTALL_PREFIX}/share/docs/tags\n\n#       QCH_INSTALL_DESTINATION ${CMAKE_INSTALL_PREFIX}/share/docs/qch\n\n#   )\n\n#\n\n# Example usage (with two QCH files, second linking first):\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#   kdb_add_qch(\n\n#       MyLib_QCH\n\n#       NAME MyLib\n\n#       VERSION ${MyLib_VERSION}\n\n#       ORG_DOMAIN org.myorg\n\n#       SOURCES ${MyLib_PUBLIC_HEADERS}\n\n#       MD_MAINPAGE src/mylib/README.md\n\n#       LINK_QCHS Qt5Core_QCH\n\n#       TAGFILE_INSTALL_DESTINATION ${CMAKE_INSTALL_PREFIX}/share/docs/tags\n\n#       QCH_INSTALL_DESTINATION ${CMAKE_INSTALL_PREFIX}/share/docs/qch\n\n#   )\n\n#   kdb_add_qch(\n\n#       MyOtherLib_QCH\n\n#       NAME MyOtherLib\n\n#       VERSION ${MyOtherLib_VERSION}\n\n#       ORG_DOMAIN org.myorg\n\n#       SOURCES ${MyOtherLib_PUBLIC_HEADERS}\n\n#       MD_MAINPAGE src/myotherlib/README.md\n\n#       LINK_QCHS Qt5Core_QCH MyLib_QCH\n\n#       TAGFILE_INSTALL_DESTINATION ${CMAKE_INSTALL_PREFIX}/share/docs/tags\n\n#       QCH_INSTALL_DESTINATION ${CMAKE_INSTALL_PREFIX}/share/docs/qch\n\n#   )\n\n#\n\n# ::\n\n#\n\n#   kdb_install_qch_export(\n\n#       TARGETS [<name> [<name2> [...]]]\n\n#       FILE <file>\n\n#       DESTINATION <dest>\n\n#       [COMPONENT <component>}]\n\n#   )\n\n#\n\n# This macro creates and installs a CMake file <file> which exports the given\n\n# QCH targets <name> etc., so they can be picked up by CMake-based builds of\n\n# other software that also generate QCH files (using ``kdb_add_qch()``) and\n\n# which should include links to the QCH files created by the given targets.\n\n# The installed CMake file <file> is expected to be included by the CMake\n\n# config file created for the software the related QCH files are documenting.\n\n#\n\n# TARGETS specifies the QCH targets which should be exported. If a target does\n\n# not exist or does not have all needed properties, a warning will be\n\n# generated and the target skipped.\n\n# This behaviour might change in future versions to result in a fail instead.\n\n#\n\n# FILE specifies the name of the created CMake file, typically with a .cmake\n\n# extension.\n\n#\n\n# DESTINATION specifies the directory on disk to which the file will be\n\n# installed. It usually is the same as the one where the CMake config files\n\n# for this software are installed.\n\n#\n\n# COMPONENT specifies the installation component name with which the\n\n# install rule is associated.\n\n#\n\n# Example usage:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#   kdb_install_qch_export(\n\n#       TARGETS MyLib_QCH\n\n#       FILE MyLibQCHTargets.cmake\n\n#       DESTINATION \"${CMAKE_INSTALL_PREFIX}/lib/cmake/MyLib\"\n\n#       COMPONENT Devel\n\n#   )\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2016 Friedrich W. H. Kossebau <kossebau@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n# 3. The name of the author may not be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# needed to find helper files\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Estimate KDB_QTQCH_FULL_INSTALL_DIR\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# for KDE_INSTALL_USE_QT_SYS_PATHS & KDE_INSTALL_FULL_DATAROOTDIR\n",
        "Line" : 270,
        "CharPositionInLine" : 24
      },
      "5" : {
        "Text" : "# Parse arguments\n",
        "Line" : 282,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# check required args\n",
        "Line" : 288,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# find required tools\n\n# TODO: check with doxygen author if perl is really still required, PERL_PATH seems unused in doxygen\n",
        "Line" : 304,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# create QCH targets for Qt\n\n# Ideally one day Qt CMake Config files provide these\n",
        "Line" : 343,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# get Qt version, if any\n",
        "Line" : 346,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "# lookup tag files\n",
        "Line" : 348,
        "CharPositionInLine" : 12
      },
      "11" : {
        "Text" : "# TODO: properly find each tag file\n\n# TODO: complete list of Qt modules\n",
        "Line" : 357,
        "CharPositionInLine" : 16
      },
      "12" : {
        "Text" : "# prepare base dirs, working file names and other vars\n",
        "Line" : 378,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "### Create doxygen config file\n",
        "Line" : 400,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Setup variables used in config file template, ECM_DOXYGENQCH_*\n",
        "Line" : 407,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# concat dirs separated by a break, it is no issue that first has also a leading break\n",
        "Line" : 416,
        "CharPositionInLine" : 12
      },
      "16" : {
        "Text" : "# concat dirs separated by a break, it is no issue that first has also a leading break\n",
        "Line" : 424,
        "CharPositionInLine" : 12
      },
      "17" : {
        "Text" : "# concat dirs separated by a break, it is no issue that first has also a leading break\n",
        "Line" : 441,
        "CharPositionInLine" : 16
      },
      "18" : {
        "Text" : "# concat sources separated by a break, it is no issue that first has also a leading break\n",
        "Line" : 462,
        "CharPositionInLine" : 16
      },
      "19" : {
        "Text" : "# concat dirs separated by a break, it is no issue that first has also a leading break\n",
        "Line" : 476,
        "CharPositionInLine" : 12
      },
      "20" : {
        "Text" : "# if same build, then prefer build version over any installed one\n",
        "Line" : 505,
        "CharPositionInLine" : 20
      },
      "21" : {
        "Text" : "# concat dirs separated by a break, it is no issue that first has also a leading break\n",
        "Line" : 511,
        "CharPositionInLine" : 20
      },
      "22" : {
        "Text" : "# TARGETS may be empty (and ARGS_TARGETS will not be defined then by cmake_parse_arguments)\n",
        "Line" : 585,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 23
    },
    "cmake/modules/KDbAddSimpleOption.cmake" : {
      "ObjectId" : "3ca6357f105cfc71e22aac9b3b0295cbb20d3113",
      "LastModified" : "2018-07-03T20:36:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Additional CMake macros\n\n#\n\n# Copyright (C) 2015-2017 Jarosław Staniek <staniek@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Adds a feature info using add_feature_info() with _NAME and _DESCRIPTION.\n\n# If _NAME is equal to _DEFAULT, shows this fact.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Adds a simple option using option() with _NAME and _DESCRIPTION and a feature\n\n# info for it using add_simple_feature_info(). If _NAME is equal to _DEFAULT, shows this fact.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/KDbAddTests.cmake" : {
      "ObjectId" : "b1f09b7243d0cc2030f8e3dfa39dd3d2890bdad9",
      "LastModified" : "2018-07-03T20:36:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Additional CMake macros\n\n#\n\n# Copyright (C) 2015-2017 Jarosław Staniek <staniek@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n\n# Note: the file must be included before KDEInstallDirs or add_tests() won't fully work\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Adds BUILD_TESTING option to enable all kinds of tests. If enabled, build in autotests/\n\n# and tests/ subdirectory is enabled. If optional argument ARG1 is ON, building tests will\n\n# be ON by default. Otherwise building tests will be OFF. ARG1 is OFF by default.\n\n# If tests are OFF, BUILD_COVERAGE is set to OFF.\n\n# If tests are on BUILD_TESTING macro is defined.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# override default from CTest.cmake\n",
        "Line" : 29,
        "CharPositionInLine" : 53
      },
      "CommentCount" : 3
    },
    "cmake/modules/KDbCreateSharedDataClasses.cmake" : {
      "ObjectId" : "dc5101d9fec267f0af24d69df06bedc0517c1cbd",
      "LastModified" : "2018-07-03T20:36:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file defines the KDB_CREATE_SHARED_DATA_CLASSES macro.\n\n#\n\n# KDB_CREATE_SHARED_DATA_CLASSES(LIST)\n\n#   Creates header file out of the LIST files in .shared.h format.\n\n#   FILES should be a list of relative paths to ${CMAKE_SOURCE_DIR}.\n\n#\n\n# Following example creates ${CMAKE_CURRENT_BINARY_DIR}/Foo.h\n\n# and ${CMAKE_CURRENT_BINARY_DIR}/Baz.h files:\n\n#\n\n# INCLUDE(KDbCreateSharedDataClass)\n\n# KDB_CREATE_SHARED_DATA_CLASS(OUTPUT_VAR Bar/Foo.shared.h Baz.shared.h)\n\n#\n\n# Copyright (C) 2010 Jarosław Staniek <staniek@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# message(STATUS \"KDB_CREATE_SHARED_DATA_CLASSES ARGV: ${ARGV}\")\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# message(STATUS \"OUTPUT_VAR: ${OUTPUT_VAR} ${_args}\")\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#MESSAGE(DEBUG \"--------- ${_input} ${OUTPUT} ${INPUT}\")\n\n#MESSAGE(DEBUG \"COMMAND python2 ${CMAKE_SOURCE_DIR}/tools/sdc.py ${INPUT} ${CMAKE_CURRENT_BINARY_DIR}/${OUTPUT}\")\n",
        "Line" : 34,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# message(STATUS \"OUTPUT_DIR: ${OUTPUT_DIR} ${PREFIX}\")\n",
        "Line" : 43,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# MESSAGE(STATUS \"...result: ${KDB_CREATE_SHARED_DATA_CLASSES_RESULT}\")\n",
        "Line" : 52,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# message(STATUS \"KDB_REMOVE_EXTENSIONS ARGV: ${ARGV}\")\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# message(STATUS \"OUTPUT_VAR: ${OUTPUT_VAR} ${_args}\")\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# message(STATUS \"...result: ${OUTPUT}\")\n",
        "Line" : 66,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 9
    },
    "cmake/modules/KDbGenerateHeaders.cmake" : {
      "ObjectId" : "75b4aed2ef90240be4438c0558d55fe535224218",
      "LastModified" : "2018-07-03T20:36:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# ECMGenerateHeaders\n\n# ------------------\n\n#\n\n# Generate C/C++ CamelCase forwarding headers.\n\n#\n\n# ::\n\n#\n\n#   ecm_generate_headers(<camelcase_forwarding_headers_var>\n\n#       HEADER_NAMES <CamelCaseName> [<CamelCaseName> [...]]\n\n#       [ORIGINAL <CAMELCASE|LOWERCASE>]\n\n#       [OUTPUT_DIR <output_dir>]\n\n#       [PREFIX <prefix>]\n\n#       [REQUIRED_HEADERS <variable>]\n\n#       [RELATIVE <relative_path>])\n\n#\n\n# For each CamelCase header name passed to HEADER_NAMES, a file of that name\n\n# will be generated that will include a version with ``.h`` appended.\n\n# For example, the generated header ``ClassA`` will include ``classa.h`` (or\n\n# ``ClassA.h``, see ORIGINAL).\n\n# The file locations of these generated headers will be stored in\n\n# <camelcase_forwarding_headers_var>.\n\n#\n\n# ORIGINAL specifies how the name of the original header is written: lowercased\n\n# or also camelcased.  The default is LOWERCASE. Since 1.8.0.\n\n#\n\n# PREFIX places the generated headers in subdirectories.  This should be a\n\n# CamelCase name like ``KParts``, which will cause the CamelCase forwarding\n\n# headers to be placed in the ``KParts`` directory (e.g. ``KParts/Part``).  It\n\n# will also, for the convenience of code in the source distribution, generate\n\n# forwarding headers based on the original names (e.g. ``kparts/part.h``).  This\n\n# allows includes like ``\"#include <kparts/part.h>\"`` to be used before\n\n# installation, as long as the include_directories are set appropriately.\n\n#\n\n# OUTPUT_DIR specifies where the files will be generated; this should be within\n\n# the build directory. By default, ``${CMAKE_CURRENT_BINARY_DIR}`` will be used.\n\n# This option can be used to avoid file conflicts.\n\n#\n\n# REQUIRED_HEADERS specifies an output variable name where all the required\n\n# headers will be appended so that they can be installed together with the\n\n# generated ones.  This is mostly intended as a convenience so that adding a new\n\n# header to a project only requires specifying the CamelCase variant in the\n\n# CMakeLists.txt file; the original variant will then be added to this\n\n# variable.\n\n#\n\n# The RELATIVE argument indicates where the original headers can be found\n\n# relative to CMAKE_CURRENT_SOURCE_DIR.  It does not affect the generated\n\n# CamelCase forwarding files, but ecm_generate_headers() uses it when checking\n\n# that the original header exists, and to generate originally named forwarding\n\n# headers when PREFIX is set.\n\n#\n\n# To allow other parts of the source distribution (eg: tests) to use the\n\n# generated headers before installation, it may be desirable to set the\n\n# INCLUDE_DIRECTORIES property for the library target to output_dir.  For\n\n# example, if OUTPUT_DIR is CMAKE_CURRENT_BINARY_DIR (the default), you could do\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#   target_include_directories(MyLib PUBLIC \"$<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}>\")\n\n#\n\n# Example usage (without PREFIX):\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#   ecm_generate_headers(\n\n#       MyLib_FORWARDING_HEADERS\n\n#       HEADERS\n\n#           MLFoo\n\n#           MLBar\n\n#           # etc\n\n#       REQUIRED_HEADERS MyLib_HEADERS\n\n#   )\n\n#   install(FILES ${MyLib_FORWARDING_HEADERS} ${MyLib_HEADERS}\n\n#           DESTINATION ${CMAKE_INSTALL_PREFIX}/include\n\n#           COMPONENT Devel)\n\n#\n\n# Example usage (with PREFIX):\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#   ecm_generate_headers(\n\n#       MyLib_FORWARDING_HEADERS\n\n#       HEADERS\n\n#           Foo\n\n#           Bar\n\n#           # etc\n\n#       PREFIX MyLib\n\n#       REQUIRED_HEADERS MyLib_HEADERS\n\n#   )\n\n#   install(FILES ${MyLib_FORWARDING_HEADERS}\n\n#           DESTINATION ${CMAKE_INSTALL_PREFIX}/include/MyLib\n\n#           COMPONENT Devel)\n\n#   install(FILES ${MyLib_HEADERS}\n\n#           DESTINATION ${CMAKE_INSTALL_PREFIX}/include/mylib\n\n#           COMPONENT Devel)\n\n#\n\n# Since pre-1.0.0.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2013 Aleix Pol Gonzalez <aleixpol@blue-systems.com>\n\n# Copyright 2014 Alex Merry <alex.merry@kdemail.net>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file COPYING-CMAKE-SCRIPTS for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of extra-cmake-modules, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# default\n",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Make sure EGH_RELATIVE is /-terminated when it's not empty\n",
        "Line" : 141,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Local forwarding header, for namespaced headers, e.g. kparts/part.h\n",
        "Line" : 180,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 5
    },
    "cmake/modules/KDbMacros.cmake" : {
      "ObjectId" : "d09507f7e74d30e049b0e5655c4dbeae93661b39",
      "LastModified" : "2018-07-03T20:36:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Additional CMake macros\n\n#\n\n# Copyright (C) 2015-2018 Jarosław Staniek <staniek@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# x.81.z or larger means test release, so the stable major version is x+1\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# x.y.81 or larger means test release, so the stable minor version is y+1\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Fetches git revision and branch from the source dir of the current build if possible.\n\n# Sets ${PROJECT_NAME_UPPER}_GIT_SHA1_STRING and ${PROJECT_NAME_UPPER}_GIT_BRANCH_STRING variables.\n\n# If git information is not available but ${CMAKE_SOURCE_DIR}/GIT_VERSION file exists,\n\n# it is parsed. This file can be created by scripts while preparing tarballs and is\n\n# supposed to contain two lines: hash and branch.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Adds ${PROJECT_NAME_UPPER}_UNFINISHED option. If it is ON, unfinished features\n\n# (useful for testing but may confuse end-user) are compiled-in.\n\n# This option is OFF by default.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Adds commands that generate ${_filename}${PROJECT_STABLE_VERSION_MAJOR}.pc file\n\n# out of ${_filename}.pc.cmake file and installs the .pc file to ${LIB_INSTALL_DIR}/pkgconfig.\n\n# These commands are not executed for WIN32.\n\n# ${CMAKE_SOURCE_DIR}/${_filename}.pc.cmake should exist.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Sets detailed version information for library co-installability.\n\n# - adds PROJECT_STABLE_VERSION_MAJOR to the lib name\n\n# - sets VERSION to PROJECT_STABLE_VERSION_MAJOR.PROJECT_STABLE_VERSION_MINOR.PROJECT_STABLE_VERSION_PATCH\n\n# - sets SOVERSION to PROJECT_STABLE_VERSION_MAJOR\n\n#        (special case for 3.0 < PROJECT_STABLE_VERSION < 4.0: sets SOVERSION to PROJECT_STABLE_VERSION_MAJOR + 1\n\n#         to separate from incompatible version 3.0)\n\n# - sets ${_target_upper}_BASE_NAME variable to the final lib name\n\n# - sets ${_target_upper}_BASE_NAME_LOWER variable to the final lib name, lowercase\n\n# - sets ${_target_upper}_INCLUDE_INSTALL_DIR to include dir for library headers\n\n# - (where _target_upper is uppercase ${_target}\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/modules/KDbQueryQmake.cmake" : {
      "ObjectId" : "ac40fd94c981f5aef3604e8b75b5ecd072435737",
      "LastModified" : "2018-07-03T20:36:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copied from ECM 5.28.0, ECMQueryQmake.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n# 3. The name of the author may not be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is not public API (yet)!\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/MacroAdditionalCleanFiles.cmake" : {
      "ObjectId" : "682289c88079ad078fa9a8b32323c3e7802f3aa3",
      "LastModified" : "2018-07-03T20:36:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - MACRO_ADDITIONAL_CLEAN_FILES(files...)\n\n# MACRO_OPTIONAL_FIND_PACKAGE( <name> [QUIT] )\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Alexander Neundorf, <neundorf@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/MacroEnsureOutOfSourceBuild.cmake" : {
      "ObjectId" : "5fb7a63fa9e6d65add7c8763fbbb3ac9e1744b22",
      "LastModified" : "2018-07-03T20:36:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/modules/MacroPushRequiredVars.cmake" : {
      "ObjectId" : "3e7560c4a4654223c099c5b05af45a78dd9c91f4",
      "LastModified" : "2018-07-03T20:36:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this module defines two macros:\n\n# MACRO_PUSH_REQUIRED_VARS()\n\n# and\n\n# MACRO_POP_REQUIRED_VARS()\n\n# use these if you call cmake macros which use\n\n# any of the CMAKE_REQUIRED_XXX variables\n\n#\n\n# Usage:\n\n# MACRO_PUSH_REQUIRED_VARS()\n\n# SET(CMAKE_REQUIRED_DEFINITIONS ${CMAKE_REQUIRED_DEFINITIONS} -DSOME_MORE_DEF)\n\n# CHECK_FUNCTION_EXISTS(...)\n\n# MACRO_POP_REQUIRED_VARS()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Alexander Neundorf, <neundorf@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# don't pop more than we pushed\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/SelectLibraryConfigurations.cmake" : {
      "ObjectId" : "dce6f99262df94c26ea76fc248ceda6081d80804",
      "LastModified" : "2018-07-03T20:42:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# SelectLibraryConfigurations\n\n# ---------------------------\n\n#\n\n#\n\n#\n\n# select_library_configurations( basename )\n\n#\n\n# This macro takes a library base name as an argument, and will choose\n\n# good values for basename_LIBRARY, basename_LIBRARIES,\n\n# basename_LIBRARY_DEBUG, and basename_LIBRARY_RELEASE depending on what\n\n# has been found and set.  If only basename_LIBRARY_RELEASE is defined,\n\n# basename_LIBRARY will be set to the release value, and\n\n# basename_LIBRARY_DEBUG will be set to basename_LIBRARY_DEBUG-NOTFOUND.\n\n# If only basename_LIBRARY_DEBUG is defined, then basename_LIBRARY will\n\n# take the debug value, and basename_LIBRARY_RELEASE will be set to\n\n# basename_LIBRARY_RELEASE-NOTFOUND.\n\n#\n\n# If the generator supports configuration types, then basename_LIBRARY\n\n# and basename_LIBRARIES will be set with debug and optimized flags\n\n# specifying the library to be used for the given configuration.  If no\n\n# build type has been set or the generator in use does not support\n\n# configuration types, then basename_LIBRARY and basename_LIBRARIES will\n\n# take only the release value, or the debug value if the release one is\n\n# not set.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This macro was adapted from the FindQt4 CMake module and is maintained by Will\n\n# Dicharry <wdicharry@stellarscience.com>.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if the generator supports configuration types or CMAKE_BUILD_TYPE\n\n# is set, then set optimized and debug options.\n",
        "Line" : 44,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "cmake/modules/SetKDbCMakePolicies.cmake" : {
      "ObjectId" : "bc28d8a8f37abafdaae400ea423bc550ef49b4a3",
      "LastModified" : "2018-07-03T20:42:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2003-2016 Jarosław Staniek <staniek@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for PROJECT_VERSION\n\n# TODO remove, temporary fix for a bug in Qt 5.8's Qt5ModuleLocation.cmake\n\n# \"Simplify variable reference and escape sequence evaluation\"\n",
        "Line" : 7,
        "CharPositionInLine" : 30
      },
      "2" : {
        "Text" : "# Don’t treat DEFINITIONS as a built-in directory property.\n",
        "Line" : 11,
        "CharPositionInLine" : 19
      },
      "3" : {
        "Text" : "# Honor visibility properties for all target types (since cmake 3.3)\n",
        "Line" : 14,
        "CharPositionInLine" : 19
      },
      "4" : {
        "Text" : "# Don't warn when combining AUTOMOC with qt5_wrap_ui() or qt5_add_resources() (since cmake 3.10)\n",
        "Line" : 17,
        "CharPositionInLine" : 19
      },
      "CommentCount" : 5
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "c9cc0dd8eb93a5341b9dc52dd765a4206e244cd0",
      "LastModified" : "2019-03-09T21:02:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Private options (visible only within KDb)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Public options (affecting public behavior or contents of KDb)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NOTE: always add public options to KDbConfig.cmake.in as well\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#add_definitions(\n\n#    TODO  -DKDE_DEFAULT_DEBUG_AREA=44000\n\n#)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########### generate parser/lexer files ###############\n\n# as described at https://public.kitware.com/pipermail/cmake/2002-September/003028.html\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create target for the parser\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create custom command for flex/lex (note the outputs)\n\n# TODO(GEN) uncomment GENERATED if we ever use this patch: https://phabricator.kde.org/D357 \"No more generated parser/scanner files in the source dir\"\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#TODO(GEN)     ${PARSER_SOURCE_DIR}/generated/sqlparser.h\n\n#TODO(GEN)     ${PARSER_SOURCE_DIR}/generated/sqlparser.cpp\n\n#TODO(GEN)     ${PARSER_SOURCE_DIR}/generated/sqlscanner.cpp\n\n#TODO(GEN)     ${PARSER_SOURCE_DIR}/generated/KDbToken.h\n\n#TODO(GEN)     ${PARSER_SOURCE_DIR}/generated/KDbToken.cpp\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# disable warning C4018: '<' : signed/unsigned mismatch\n",
        "Line" : 51,
        "CharPositionInLine" : 78
      },
      "9" : {
        "Text" : "# Mark files as generated, set compile flags\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#TODO(GEN) GENERATED TRUE\n",
        "Line" : 57,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# YYERROR_VERBOSE=1 needed to get a token table for tokenName() even for release builds\n",
        "Line" : 59,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# TODO(GEN) set_source_files_properties(${PARSER_SOURCE_DIR}/generated/sqlparser.h PROPERTIES GENERATED TRUE)\n\n# TODO(GEN) set_source_files_properties(${PARSER_SOURCE_DIR}/generated/KDbToken.h PROPERTIES GENERATED TRUE)\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#TODO(GEN) GENERATED TRUE\n",
        "Line" : 73,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# mostly copied from KReport's KReportJsonTrader_p.cpp\n",
        "Line" : 90,
        "CharPositionInLine" : 29
      },
      "15" : {
        "Text" : "#TODO tools/debuggui.cpp\n\n#TODO tools/KDbSimpleCommandLineApp.cpp\n",
        "Line" : 97,
        "CharPositionInLine" : 3
      },
      "16" : {
        "Text" : "# private:\n",
        "Line" : 162,
        "CharPositionInLine" : 3
      },
      "17" : {
        "Text" : "# non-source:\n",
        "Line" : 165,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "# output variable with list of headers\n",
        "Line" : 176,
        "CharPositionInLine" : 44
      },
      "19" : {
        "Text" : "# subdirectory in which the headers should be generated\n",
        "Line" : 177,
        "CharPositionInLine" : 14
      },
      "20" : {
        "Text" : "#message(STATUS \"kdb_GENERATED_SHARED_DATA_CLASS_HEADERS: ${kdb_GENERATED_SHARED_DATA_CLASS_HEADERS}\")\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#add_dependencies(KDb _shared_classes) # generate shared classes before they can be used in KDb\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# needed where sqlparser.h is used\n",
        "Line" : 226,
        "CharPositionInLine" : 55
      },
      "23" : {
        "Text" : "# Qt::ISODateWithMs APIs present\n",
        "Line" : 234,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Create a Config.cmake and a ConfigVersion.cmake file and install them\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#todo KDbSimpleCommandLineApp\n",
        "Line" : 393,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "#message(STATUS \"%% ${kdb_GENERATED_SHARED_DATA_CLASS_BASENAMES}\")\n",
        "Line" : 400,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#message(STATUS \"%%kdb_HEADERS_FROM_BUILDDIR ${kdb_HEADERS_FROM_BUILDDIR}\")\n",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# KDb/Private includes\n\n# install( FILES\n\n#   Connection_p.h\n\n#   Driver_p.h\n\n#   DESTINATION ${KDB_INCLUDE_INSTALL_DIR}/Private COMPONENT Devel\n\n# )\n",
        "Line" : 430,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# KDb/Interfaces includes\n\n# install( FILES\n\n#   Interfaces/KDbPreparedStatementInterface.h includes/KDb/Interfaces/KDbPreparedStatementInterface\n\n#   DESTINATION ${KDB_INCLUDE_INSTALL_DIR}/Interfaces COMPONENT Devel\n\n# )\n",
        "Line" : 437,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "src/config-kdb-private.h.cmake" : {
      "ObjectId" : "5709f2b3c30175b90ab098329e9ab5c260201677",
      "LastModified" : "2019-01-04T22:14:22Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* config-kdb-private.h. Generated by cmake from config-kdb-private.h.cmake */",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/*! @file config-kdb-private.h\n    Private KDb configuration (build time)\n*/",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "//! @def KDB_EXPRESSION_DEBUG\n//! @brief Defined if debugging for expressions is enabled",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "//! @def KDB_DRIVERMANAGER_DEBUG\n//! @brief Defined if debugging for the driver manager is enabled",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "//! @def KDB_TRANSACTIONS_DEBUG\n//! @brief Defined if debugging for database transactions is enabled\n//! @since 3.1",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "//! @def KDB_TABLESCHEMACHANGELISTENER_DEBUG\n//! @brief Defined if debugging of the KDbTableSchemaChangeListener class is enabled\n//! @since 3.1",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "//! @def KDB_QUERYSCHEMA_DEBUG\n//! @brief Defined if debugging of the Debugging of the QuerySchema class is enabled\n//! @since 3.2.0",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "//! @def KDB_SQLPARSER_DEBUG\n//! @brief Defined if debugging of the SQL parser is enabled\n//! @since 3.2.0",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/config-kdb.h.cmake" : {
      "ObjectId" : "b3be9c0b3abf2906860f29db6b7789fd93ae96cd",
      "LastModified" : "2018-07-03T20:42:09Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* config-kdb.h. Generated by cmake from config-kdb.h.cmake */",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/*! @file config-kdb.h\n    Global KDb configuration (build time)\n*/",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "//! @def KDB_GIT_SHA1_STRING\n//! @brief Indicates the git sha1 commit which was used for compilation of KDb",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "//! @def KDB_GIT_BRANCH_STRING\n//! @brief Indicates the git branch which was used for compilation of KDb",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "//! @def BIN_INSTALL_DIR\n//! @brief The subdirectory relative to the install prefix for executables.",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "//! @def KDB_BASE_NAME\n//! @brief Base name for the framework, based on major stable version.\n//!        Useful for co-installability.",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "//! @def KDB_BASE_NAME_LOWER\n//! @brief Like KDB_BASE_NAME but lowercase.",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "//! @def KDB_STABLE_VERSION_MAJOR\n//! @brief Extra version info, stable major, e.g. 3 for 3.1.0 Alpha (3.0.90)",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "//! @def KDB_STABLE_VERSION_MINOR\n//! @brief Extra version info, stable minor, e.g. 1 for 3.1.0 Alpha (3.0.90)",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "//! @def KDB_STABLE_VERSION_PATCH\n//! @brief Extra version info, stable patch, e.g. 0 for 3.1.0 Alpha (3.0.90)",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "//! @def KDB_TESTING_EXPORT\n//! @brief Export symbols for testing",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "//! @def KDB_EXPRESSION_DEBUG\n//! @brief Defined if debugging for expressions is enabled",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "//! @def KDB_DRIVERMANAGER_DEBUG\n//! @brief Defined if debugging for the driver manager is enabled",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "//! @def KDB_TRANSACTIONS_DEBUG\n//! @brief Defined if debugging for database transactions is enabled\n//! @since 3.1",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "//! @def KDB_TABLESCHEMACHANGELISTENER_DEBUG\n//! @brief Debugging of the KDbTableSchemaChangeListener class\n//! @since 3.1",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "//! @def KDB_DEBUG_GUI\n//! @brief Defined if a GUI for debugging is enabled",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "//! @def KDB_UNFINISHED\n//! @brief Defined if unfinished features of KDb are enabled",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "src/drivers/CMakeLists.txt" : {
      "ObjectId" : "eaabab94d3a6c18daa938a170bca0f9716b86818",
      "LastModified" : "2019-02-12T21:22:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#TODO  add_definitions(-DKDE_DEFAULT_DEBUG_AREA=44001)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -----------------------\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Needed for examples and autotests:\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# -----------------------\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# find SQLite:\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -----------------------\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -----------------------\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#set(BUILD_SYBASE_DB_DRIVER_DESC \"Sybase/MSSQL database driver\")\n\n#find_package(FreeTDS)\n\n#set_package_properties(FreeTDS PROPERTIES\n\n#                       DESCRIPTION \"Open source implementation of the TDS (Tabular Data Stream) protocol\"\n\n#                       URL \"https://www.freetds.org\"\n\n#                       TYPE OPTIONAL\n\n#                       PURPOSE \"Required by ${BUILD_SYBASE_DB_DRIVER_DESC}\"\n\n#)\n\n#if(FreeTDS_FOUND)\n\n#   ecm_optional_add_subdirectory(sybase)\n\n#else()\n\n#   add_feature_info(BUILD_SYBASE_DB_DRIVER FALSE \"${BUILD_SYBASE_DB_DRIVER_DESC} (because FreeTDS protocol implementation not found)\")\n\n#endif()\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#set(BUILD_XBASE_DB_DRIVER_DESC \"xBase database driver\")\n\n#find_package(XBase)\n\n#set_package_properties(XBase PROPERTIES\n\n#                       DESCRIPTION \"XBase compatible C++ class library\"\n\n#                       URL \"https://linux.techass.com/projects/xdb\"\n\n#                       TYPE OPTIONAL\n\n#                       PURPOSE \"Required by ${BUILD_XBASE_DB_DRIVER_DESC}\"\n\n#)\n\n#if(XBASE_FOUND)\n\n#   ecm_optional_add_subdirectory(xbase)\n\n#else()\n\n#   add_feature_info(BUILD_XBASE_DB_DRIVER FALSE \"${BUILD_XBASE_DB_DRIVER_DESC} (because XBase compatible C++ class library not found)\")\n\n#endif()\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "src/drivers/mysql/CMakeLists.txt" : {
      "ObjectId" : "317f51da2ed477f40adc4f5c5427dc77060102ed",
      "LastModified" : "2018-07-03T20:42:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/drivers/postgresql/CMakeLists.txt" : {
      "ObjectId" : "03b7b5d8c0a36966ef7053020f83960c731fc068",
      "LastModified" : "2018-07-03T20:42:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# needed because server/c.h uses #if _MSC_VER >= 1400\n",
        "Line" : 23,
        "CharPositionInLine" : 38
      },
      "CommentCount" : 1
    },
    "src/drivers/sqlite/CMakeLists.txt" : {
      "ObjectId" : "5ab3b19a6c03513cae6af642217be3177464a1cb",
      "LastModified" : "2018-07-03T20:42:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generate SqliteGlobal.h\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Definitions used for the sqlite driver and the shell\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# sqlite compile-time options, https://sqlite.org/compile.html\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Some additional APIs that provide convenient access to meta-data\n\n# about tables and queries\n",
        "Line" : 17,
        "CharPositionInLine" : 36
      },
      "4" : {
        "Text" : "# Version 3 of the full-text search engine\n",
        "Line" : 19,
        "CharPositionInLine" : 25
      },
      "5" : {
        "Text" : "# Modifies the query pattern parser in FTS3 such that it supports\n\n# operators AND and NOT (in addition to the usual OR and NEAR)\n\n# and also allows query expressions to contain nested parenthesesis.\n",
        "Line" : 20,
        "CharPositionInLine" : 37
      },
      "6" : {
        "Text" : "# Extra logic to SQLite that allows it to release unused memory upon request\n",
        "Line" : 23,
        "CharPositionInLine" : 38
      },
      "7" : {
        "Text" : "# Support for the R*Tree index extension\n\n# Additional logic to the ANALYZE command and to the query planner that can help SQLite\n\n# to chose a better query plan under certain situations\n",
        "Line" : 24,
        "CharPositionInLine" : 26
      },
      "8" : {
        "Text" : "# Optional ORDER BY and LIMIT clause on UPDATE and DELETE statements\n",
        "Line" : 27,
        "CharPositionInLine" : 40
      },
      "9" : {
        "Text" : "# Enables the sqlite3_unlock_notify() interface and its associated functionality\n\n# (https://sqlite.org/unlock_notify.html)\n",
        "Line" : 28,
        "CharPositionInLine" : 34
      },
      "10" : {
        "Text" : "# Enables the soundex() SQL function (https://sqlite.org/lang_corefunc.html#soundex)\n",
        "Line" : 30,
        "CharPositionInLine" : 21
      },
      "11" : {
        "Text" : "# todo -DSQLITE_OMIT_DEPRECATED\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# avoid deprecated warnings\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 13
    },
    "src/drivers/sqlite/SqliteGlobal.h.cmake" : {
      "ObjectId" : "7e60915d1302a1e30a00bdc9c70d9109cf5fac81",
      "LastModified" : "2018-07-03T20:42:09Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* This file is part of the KDE project\n   Copyright (C) 2012 Jarosław Staniek <staniek@kde.org>\n\n   This program is free software; you can redistribute it and/or\n   modify it under the terms of the GNU Library General Public\n   License as published by the Free Software Foundation; either\n   version 2 of the License, or (at your option) any later version.\n\n   This program is distributed in the hope that it will be useful,\n   but WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n   Library General Public License for more details.\n\n   You should have received a copy of the GNU Library General Public License\n   along with this program; see the file COPYING.  If not, write to\n   the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,\n * Boston, MA 02110-1301, USA.\n*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "//global SQLite driver's public definitions",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "//! Support for SQLite vacuum (compacting) feature",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/drivers/sqlite/dump/CMakeLists.txt" : {
      "ObjectId" : "cfffb5c6e8c77894e7a9bfd669a8d7802b9bd9e6",
      "LastModified" : "2018-07-03T20:42:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/drivers/sqlite/icu/CMakeLists.txt" : {
      "ObjectId" : "378c1e2b173e70bc322e7e070f0b40ee1f444467",
      "LastModified" : "2018-07-03T20:42:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# nonstandard path for sqlite3 extensions, they would work too if we placed them\n\n# in ${PROJECT_BINARY_DIR}/plugins/kdb/sqlite3 but we want to test the \"extraSqliteExtensionPaths\"\n\n# connection option in ConnectionTest::testCreateDb():\n",
        "Line" : 13,
        "CharPositionInLine" : 22
      },
      "1" : {
        "Text" : "# Use a subdir for clarity\n",
        "Line" : 20,
        "CharPositionInLine" : 55
      },
      "CommentCount" : 2
    },
    "src/drivers/sybase/CMakeLists.txt" : {
      "ObjectId" : "dc6c5c3582558a22df3486e2d8c208b652a5d36f",
      "LastModified" : "2018-07-03T20:42:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/drivers/xbase/CMakeLists.txt" : {
      "ObjectId" : "dfc405382dfb8dc8aee4228be993ed4c464deac7",
      "LastModified" : "2018-07-03T20:42:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "65dbb8b932fde06f44b598521c637e60400e5262",
      "LastModified" : "2018-07-03T20:42:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/features/CMakeLists.txt" : {
      "ObjectId" : "5322133dec1401a50c0cabdf98e7ded86400cf45",
      "LastModified" : "2018-07-03T20:42:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# temp\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### next target ###############\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/CMakeLists.txt" : {
      "ObjectId" : "5f8195a1851c9f9989c5e4a026041125a97ae606",
      "LastModified" : "2018-07-03T20:42:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 41,
    "CMAKESOURCE" : 3
  },
  "ElapsedTime" : 1848
}