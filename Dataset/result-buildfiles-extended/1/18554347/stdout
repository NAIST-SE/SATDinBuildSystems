{
  "Repository" : "18554347",
  "Revision" : "HEAD",
  "ObjectId" : "ac4c9b5ec2e4b2ef1c32aa5b43cf7f8b4fafe3e2",
  "CommitTime" : "2019-04-12T08:27:56Z",
  "Files" : {
    "3dparty/assimp/CMakeLists.txt" : {
      "ObjectId" : "dd2317cca9d0cbb9ab84fa497a8f1771ef835d3c",
      "LastModified" : "2017-12-28T10:56:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Open Asset Import Library (assimp)\n\n# ----------------------------------------------------------------------\n\n# Copyright (c) 2006-2017, assimp team\n\n# All rights reserved.\n\n#\n\n# Redistribution and use of this software in source and binary forms,\n\n# with or without modification, are permitted provided that the\n\n# following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer in the documentation and/or other\n\n#   materials provided with the distribution.\n\n#\n\n# * Neither the name of the assimp team, nor the names of its\n\n#   contributors may be used to endorse or promote products\n\n#   derived from this software without specific prior\n\n#   written permission of the assimp team.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#----------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Remove when CMake >= 2.8.4 is required\n",
        "Line" : 36,
        "CharPositionInLine" : 33
      },
      "2" : {
        "Text" : "# All supported options ###############################################\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define here the needed parameters\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Needed for openddl_parser config, no use of c++11 at this moment\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Get the current working branch\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Get the latest abbreviated commit hash of the working branch\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Ensure that we do not run into issues like http://www.tcm.phy.cam.ac.uk/sw/inodes64.html on 32 bit linux\n",
        "Line" : 194,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# only necessary for 32-bit linux\n",
        "Line" : 197,
        "CharPositionInLine" : 38
      },
      "9" : {
        "Text" : "#ADD_DEFINITIONS(-D_FILE_OFFSET_BITS=64 )\n",
        "Line" : 198,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Use GNUInstallDirs for Unix predefined directories\n",
        "Line" : 202,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Grouped compiler settings\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# hide all not-exported symbols\n",
        "Line" : 209,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# enable multi-core compilation with MSVC\n",
        "Line" : 214,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# disable \"elements of array '' will be default initialized\" warning on MSVC2013\n",
        "Line" : 217,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# If this is an in-source build (CMAKE_SOURCE_DIR == CMAKE_BINARY_DIR),\n\n# write the library/executable files to the respective directories in the\n\n# source tree. During an out-of-source build, however, do not litter this\n\n# directory, since that is probably what the user wanted to avoid.\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Cache these to allow the user to override them manually.\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Only generate this target if no higher-level project already has\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# add make uninstall capability\n",
        "Line" : 288,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# cmake configuration files\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Look for system installed irrXML\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Search for external dependencies, and build them from source if not found\n\n# Search for zlib\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# compile from sources\n",
        "Line" : 320,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Search for unzip\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# ${CMAKE_GENERATOR}\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# pick the correct prebuilt library\n",
        "Line" : 366,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# winsock and winmm are necessary dependencies of melange (this is undocumented, but true.)\n",
        "Line" : 392,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Check dependencies for assimp_qt_viewer.\n\n# Why here? Maybe user do not want Qt viewer and have no Qt.\n\n# Why assimp_qt_viewer/CMakeLists.txt still contain similar check?\n\n# Because viewer can be build independently of Assimp.\n",
        "Line" : 416,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Generate a pkg-config .pc for the Assimp library.\n",
        "Line" : 454,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Packing information\n",
        "Line" : 459,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# debian\n",
        "Line" : 484,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 31
    },
    "3dparty/assimp/cmake-modules/Coveralls.cmake" : {
      "ObjectId" : "5343f1583c176f41c197667f7419935745912a6a",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# The MIT License (MIT)\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n# Copyright (C) 2014 Joakim SÃ¶derberg <joakim.soderberg@gmail.com>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# must be outside coveralls_setup() to get correct path\n",
        "Line" : 25,
        "CharPositionInLine" : 50
      },
      "2" : {
        "Text" : "#\n\n# Param _COVERAGE_SRCS\tA list of source files that coverage should be collected for.\n\n# Param _COVERALLS_UPLOAD Upload the result to coveralls?\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# When passing a CMake list to an external process, the list\n\n# will be converted from the format \"1;2;3\" to \"1 2 3\".\n\n# This means the script we're calling won't see it as a list\n\n# of sources, but rather just one long path. We remedy this\n\n# by replacing \";\" with \"*\" and then reversing that in the script\n\n# that we're calling.\n\n# http://cmake.3232098.n2.nabble.com/Passing-a-CMake-list-quot-as-is-quot-to-a-custom-target-td6505681.html\n",
        "Line" : 47,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "#message(\"Coverage sources: ${COVERAGE_SRCS}\")\n",
        "Line" : 60,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Zero the coverage counters.\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Run regress tests.\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Generate Gcov and translate it into coveralls JSON.\n\n# We do this by executing an external CMake script.\n\n# (We don't want this to run at CMake generation time, but after compilation and everything has run).\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# TODO: This is passed like: \"a b c\", not \"a;b;c\"\n",
        "Line" : 75,
        "CharPositionInLine" : 39
      },
      "9" : {
        "Text" : "# Upload the JSON to coveralls.\n",
        "Line" : 95,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 10
    },
    "3dparty/assimp/cmake-modules/CoverallsClear.cmake" : {
      "ObjectId" : "a9ad487630513df789ffcfec5ac058361e21fccb",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# The MIT License (MIT)\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n# Copyright (C) 2014 Joakim SÃ¶derberg <joakim.soderberg@gmail.com>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# do not follow symlinks in file(GLOB_RECURSE ...)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3dparty/assimp/cmake-modules/CoverallsGenerateGcov.cmake" : {
      "ObjectId" : "1047371642ca0eed4f16c31d510aaeb489ab0427",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# The MIT License (MIT)\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n# Copyright (C) 2014 Joakim SÃ¶derberg <joakim.soderberg@gmail.com>\n\n#\n\n# This is intended to be run by a custom target in a CMake project like this.\n\n# 0. Compile program with coverage support.\n\n# 1. Clear coverage data. (Recursively delete *.gcda in build dir)\n\n# 2. Run the unit tests.\n\n# 3. Run this script specifying which source files the coverage should be performed on.\n\n#\n\n# This script will then use gcov to generate .gcov files in the directory specified\n\n# via the COV_PATH var. This should probably be the same as your cmake build dir.\n\n#\n\n# It then parses the .gcov files to convert them into the Coveralls JSON format:\n\n# https://coveralls.io/docs/api\n\n#\n\n# Example for running as standalone CMake script from the command line:\n\n# (Note it is important the -P is at the end...)\n\n# $ cmake -DCOV_PATH=$(pwd)\n\n#         -DCOVERAGE_SRCS=\"catcierge_rfid.c;catcierge_timer.c\"\n\n#         -P ../cmake/CoverallsGcovUpload.cmake\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Make sure we have the needed arguments.\n\n#\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Since it's not possible to pass a CMake list properly in the\n\n# \"1;2;3\" format to an external process, we have replaced the\n\n# \";\" with \"*\", so reverse that here so we get it back into the\n\n# CMake list format.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# convert all paths in COVERAGE_SRCS to absolute paths\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TODO: Fill in git remote data\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Branch.\n",
        "Line" : 110,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "############################# Macros #########################################\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# This macro converts from the full path format gcov outputs:\n\n#\n\n#    /path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n#\n\n# to the original source file path the .gcov is for:\n\n#\n\n#   /path/to/project/root/subdir/the_file.c\n\n#\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# /path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n# ->\n\n# #path#to#project#root#subdir#the_file.c.gcov\n",
        "Line" : 165,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# #path#to#project#root#subdir#the_file.c.gcov -> /path/to/project/root/subdir/the_file.c\n",
        "Line" : 170,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "##############################################################################\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Get the coverage data.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Get a list of all the object directories needed by gcov\n\n# (The directories the .gcda files and .o files are found in)\n\n# and run gcov on those.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n\n# The -p below refers to \"Preserve path components\",\n\n# This means that the generated gcov filename of a source file will\n\n# keep the original files entire filepath, but / is replaced with #.\n\n# Example:\n\n#\n\n# /path/to/project/root/build/CMakeFiles/the_file.dir/subdir/the_file.c.gcda\n\n# ------------------------------------------------------------------------------\n\n# File '/path/to/project/root/subdir/the_file.c'\n\n# Lines executed:68.34% of 199\n\n# /path/to/project/root/subdir/the_file.c:creating '#path#to#project#root#subdir#the_file.c.gcov'\n\n#\n\n# If -p is not specified then the file is named only \"the_file.c.gcov\"\n\n#\n",
        "Line" : 190,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# TODO: Make these be absolute path\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Get only the filenames to use for filtering.\n\n#set(COVERAGE_SRCS_NAMES \"\")\n\n#foreach (COVSRC ${COVERAGE_SRCS})\n\n#\tget_filename_component(COVSRC_NAME ${COVSRC} NAME)\n\n#\tmessage(\"${COVSRC} -> ${COVSRC_NAME}\")\n\n#\tlist(APPEND COVERAGE_SRCS_NAMES \"${COVSRC_NAME}\")\n\n#endforeach()\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#\n\n# Filter out all but the gcov files we want.\n\n#\n\n# We do this by comparing the list of COVERAGE_SRCS filepaths that the\n\n# user wants the coverage data for with the paths of the generated .gcov files,\n\n# so that we only keep the relevant gcov files.\n\n#\n\n# Example:\n\n# COVERAGE_SRCS =\n\n#\t\t\t\t/path/to/project/root/subdir/the_file.c\n\n#\n\n# ALL_GCOV_FILES =\n\n#\t\t\t\t/path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n#\t\t\t\t/path/to/project/root/build/#path#to#project#root#subdir#other_file.c.gcov\n\n#\n\n# Result should be:\n\n# GCOV_FILES =\n\n#\t\t\t\t/path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n#\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#message(\"Look in coverage sources: ${COVERAGE_SRCS}\")\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#\n\n# /path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n# ->\n\n# /path/to/project/root/subdir/the_file.c\n",
        "Line" : 249,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# Is this in the list of source files?\n\n# TODO: We want to match against relative path filenames from the source file root...\n",
        "Line" : 256,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# We remove it from the list, so we don't bother searching for it again.\n\n# Also files left in COVERAGE_SRCS_REMAINING after this loop ends should\n\n# have coverage data generated from them (no lines are covered).\n",
        "Line" : 264,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# TODO: Enable setting these\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Read the GCOV files line by line and get the coverage data.\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# The new coveralls API doesn't need the entire source (Yay!)\n\n# However, still keeping that part for now. Will cleanup in the future.\n",
        "Line" : 307,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# Loads the gcov file as a list of lines.\n\n# (We first open the file and replace all occurrences of [] with _\n\n#  because CMake will fail to parse a line containing unmatched brackets...\n\n#  also the \\ to escaped \\n in macros screws up things.)\n\n# https://public.kitware.com/Bug/view.php?id=15369\n",
        "Line" : 312,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "# Remove file contents to avoid encoding issues (cmake 2.8 has no ENCODING option)\n",
        "Line" : 322,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# Instead of trying to parse the source from the\n\n# gcov file, simply read the file contents from the source file.\n\n# (Parsing it from the gcov is hard because C-code uses ; in many places\n\n#  which also happens to be the same as the CMake list delimiter).\n",
        "Line" : 329,
        "CharPositionInLine" : 1
      },
      "27" : {
        "Text" : "# According to http://json.org/ these should be escaped as well.\n\n# Don't know how to do that in CMake however...\n\n#string(REPLACE \"\\b\" \"\\\\\\\\b\" GCOV_FILE_SOURCE \"${GCOV_FILE_SOURCE}\")\n\n#string(REPLACE \"\\f\" \"\\\\\\\\f\" GCOV_FILE_SOURCE \"${GCOV_FILE_SOURCE}\")\n\n#string(REGEX REPLACE \"\\u([a-fA-F0-9]{4})\" \"\\\\\\\\u\\\\1\" GCOV_FILE_SOURCE \"${GCOV_FILE_SOURCE}\")\n",
        "Line" : 340,
        "CharPositionInLine" : 1
      },
      "28" : {
        "Text" : "# We want a json array of coverage data as a single string\n\n# start building them from the contents of the .gcov\n",
        "Line" : 346,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "# Line number for the .gcov.\n",
        "Line" : 350,
        "CharPositionInLine" : 24
      },
      "30" : {
        "Text" : "#message(\"${GCOV_LINE}\")\n\n# Example of what we're parsing:\n\n# Hitcount  |Line | Source\n\n# \"        8:   26:        if (!allowed || (strlen(allowed) == 0))\"\n",
        "Line" : 353,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Check if we should exclude lines using the Lcov syntax.\n",
        "Line" : 363,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Lines with 0 line numbers are metadata and can be ignored.\n",
        "Line" : 393,
        "CharPositionInLine" : 3
      },
      "33" : {
        "Text" : "# Translate the hitcount into valid JSON values.\n",
        "Line" : 399,
        "CharPositionInLine" : 5
      },
      "34" : {
        "Text" : "# Advanced way of removing the trailing comma in the JSON array.\n\n# \"[1, 2, 3, \" -> \"[1, 2, 3\"\n",
        "Line" : 421,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "# Append the trailing ] to complete the JSON array.\n",
        "Line" : 425,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "# Generate the final JSON for this file.\n",
        "Line" : 428,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# Loop through all files we couldn't find any coverage for\n\n# as well, and generate JSON for those as well with 0% coverage.\n",
        "Line" : 435,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Set variables for json replacement\n",
        "Line" : 439,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "# Loads the source file as a list of lines.\n",
        "Line" : 444,
        "CharPositionInLine" : 1
      },
      "40" : {
        "Text" : "# Remove trailing comma, and complete JSON array with ]\n",
        "Line" : 460,
        "CharPositionInLine" : 1
      },
      "41" : {
        "Text" : "# Generate the final JSON for this file.\n",
        "Line" : 464,
        "CharPositionInLine" : 1
      },
      "42" : {
        "Text" : "# Get rid of trailing comma.\n",
        "Line" : 470,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Generate the final complete JSON!\n",
        "Line" : 474,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 44
    },
    "3dparty/assimp/cmake-modules/DebSourcePPA.cmake" : {
      "ObjectId" : "d8a786fb2bdc8cfba48c4260600dbe6e9525eed6",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Debian Source Package Generator\n\n#\n\n# Copyright (c) 2010 Daniel Pfeifer <daniel@pfeifer-mail.de>\n\n# Many modifications by Rosen Diankov <rosen.diankov@gmail.com>\n\n#\n\n# Creates source debian files and manages library dependencies\n\n#\n\n# Features:\n\n# \n\n# - Automatically generates symbols and run-time dependencies from the build dependencies\n\n# - Custom copy of source directory via CPACK_DEBIAN_PACKAGE_SOURCE_COPY\n\n# - Simultaneous output of multiple debian source packages for each distribution\n\n# - Can specificy distribution-specific dependencies by suffixing DEPENDS with _${DISTRO_NAME}, for example: CPACK_DEBIAN_PACKAGE_DEPENDS_LUCID, CPACK_COMPONENT_MYCOMP0_DEPENDS_LUCID\n\n#\n\n# Usage:\n\n#\n\n# set(CPACK_DEBIAN_BUILD_DEPENDS debhelper cmake)\n\n# set(CPACK_DEBIAN_PACKAGE_PRIORITY optional)\n\n# set(CPACK_DEBIAN_PACKAGE_SECTION devel)\n\n# set(CPACK_DEBIAN_CMAKE_OPTIONS \"-DMYOPTION=myvalue\")\n\n# set(CPACK_DEBIAN_PACKAGE_DEPENDS mycomp0 mycomp1 some_ubuntu_package)\n\n# set(CPACK_DEBIAN_PACKAGE_DEPENDS_UBUNTU_LUCID mycomp0 mycomp1 lucid_specific_package)\n\n# set(CPACK_DEBIAN_PACKAGE_NAME mypackage)\n\n# set(CPACK_DEBIAN_PACKAGE_REMOVE_SOURCE_FILES unnecessary_file unnecessary_dir/file0)\n\n# set(CPACK_DEBIAN_PACKAGE_SOURCE_COPY svn export --force) # if using subversion\n\n# set(CPACK_DEBIAN_DISTRIBUTION_NAME ubuntu)\n\n# set(CPACK_DEBIAN_DISTRIBUTION_RELEASES karmic lucid maverick natty)\n\n# set(CPACK_DEBIAN_CHANGELOG \"  * Extra change log lines\")\n\n# set(CPACK_DEBIAN_PACKAGE_SUGGESTS \"ipython\")\n\n# set(CPACK_COMPONENT_X_RECOMMENDS \"recommended-package\")\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DEBIAN/control\n\n# debian policy enforce lower case for package name\n\n# Package: (mandatory)\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Section: (recommended)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Priority: (recommended)\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# remove unnecessary folders\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# create the original source tar\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##############################################################################\n\n# debian/control\n",
        "Line" : 89,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "##############################################################################\n\n# debian/copyright\n",
        "Line" : 248,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "##############################################################################\n\n# debian/rules\n",
        "Line" : 255,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# for reducing size\n",
        "Line" : 290,
        "CharPositionInLine" : 18
      },
      "10" : {
        "Text" : "##############################################################################\n\n# debian/compat\n",
        "Line" : 314,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "##############################################################################\n\n# debian/source/format\n",
        "Line" : 318,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "##############################################################################\n\n# debian/changelog\n",
        "Line" : 322,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "##############################################################################\n\n# debuild -S\n",
        "Line" : 333,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "##############################################################################\n\n# dput ppa:your-lp-id/ppa <source.changes>\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "3dparty/assimp/cmake-modules/FindDevIL.cmake" : {
      "ObjectId" : "381a75dd2af039f3b647ba56df232e4986976b0f",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindDevIL\n\n# ---------\n\n#\n\n#\n\n#\n\n# This module locates the developer's image library.\n\n# http://openil.sourceforge.net/\n\n#\n\n# This module sets:\n\n#\n\n# ::\n\n#\n\n#    IL_LIBRARIES -   the name of the IL library. These include the full path to\n\n#                     the core DevIL library. This one has to be linked into the\n\n#                     application.\n\n#    ILU_LIBRARIES -  the name of the ILU library. Again, the full path. This\n\n#                     library is for filters and effects, not actual loading. It\n\n#                     doesn't have to be linked if the functionality it provides\n\n#                     is not used.\n\n#    ILUT_LIBRARIES - the name of the ILUT library. Full path. This part of the\n\n#                     library interfaces with OpenGL. It is not strictly needed\n\n#                     in applications.\n\n#    IL_INCLUDE_DIR - where to find the il.h, ilu.h and ilut.h files.\n\n#    IL_FOUND -       this is set to TRUE if all the above variables were set.\n\n#                     This will be set to false if ILU or ILUT are not found,\n\n#                     even if they are not needed. In most systems, if one\n\n#                     library is found all the others are as well. That's the\n\n#                     way the DevIL developers release it.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: Add version support.\n\n# Tested under Linux and Windows (MSVC)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#include(${CMAKE_CURRENT_LIST_DIR}/FindPackageHandleStandardArgs.cmake)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#message(\"IL_INCLUDE_DIR is ${IL_INCLUDE_DIR}\")\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#message(\"IL_LIBRARIES is ${IL_LIBRARIES}\")\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#message(\"ILUT_LIBRARIES is ${ILUT_LIBRARIES}\")\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#message(\"ILU_LIBRARIES is ${ILU_LIBRARIES}\")\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "3dparty/assimp/cmake-modules/FindDirectX.cmake" : {
      "ObjectId" : "70704314233f84221f7b3b6ebd78d36dfd00a395",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Find DirectX SDK\n\n# Define:\n\n# DirectX_FOUND\n\n# DirectX_INCLUDE_DIR\n\n# DirectX_LIBRARY\n\n# DirectX_ROOT_DIR\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The only platform it makes sense to check for DirectX SDK\n",
        "Line" : 18,
        "CharPositionInLine" : 10
      },
      "3" : {
        "Text" : "# Get path, convert backslashes as ${ENV_DXSDK_DIR}\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# construct search paths\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# redo search if prefix path changed\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# dlls are in DirectX_ROOT_DIR/Developer Runtime/x64|x86\n\n# lib files are in DirectX_ROOT_DIR/Lib/x64|x86\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# look for dxgi (needed by both 10 and 11)\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# look for d3dcompiler (needed by 11)\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# look for D3D11 components\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "3dparty/assimp/cmake-modules/FindIrrXML.cmake" : {
      "ObjectId" : "5434e0b8629010b790d5e8190f0c209dfe6e5b31",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find IrrXMl from irrlicht project\n\n#\n\n# Find LibIrrXML headers and library\n\n#\n\n#   IRRXML_FOUND          - IrrXML found\n\n#   IRRXML_INCLUDE_DIR    - Headers location\n\n#   IRRXML_LIBRARY        - IrrXML main library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3dparty/assimp/cmake-modules/FindPkgMacros.cmake" : {
      "ObjectId" : "074cce35236c472f0e8131c10e0dde066d63a0da",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##################################################################\n\n# Provides some common functionality for the FindPackage modules\n\n##################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Begin processing of package\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Display a status message unless FIND_QUIETLY is set\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get environment variable, define it as ENV_$var and make sure backslashes are converted to forward slashes\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# replace won't work if var is blank\n",
        "Line" : 31,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# Construct search paths for includes and libraries from a PREFIX_PATH\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# clear cache variables if a certain variable changed\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# test against internal check variable\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Try to get some hints from pkg-config, if available\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Android does not support PKG_CONFIG so we disable it\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Couple a set of release AND debug libraries (or frameworks)\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Generate debug names from given release names\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Add the parent dir from DIR to VAR\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Do the final processing for the package find.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# skip if already processed during this run\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Slightly customised framework finder\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "3dparty/assimp/cmake-modules/FindRT.cmake" : {
      "ObjectId" : "17d5df81db5ebfaa67e09e4dbf9c0d41cee230cc",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find real time libraries\n\n# Once done, this will define\n\n#\n\n# RT_FOUND - system has rt library\n\n# RT_LIBRARIES - rt libraries directory\n\n#\n\n# Source: https://gitlab.cern.ch/dss/eos/commit/44070e575faaa46bd998708ef03eedb381506ff0\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set\n\n# RT_FOUND to TRUE if all listed variables are TRUE\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3dparty/assimp/cmake-modules/FindZLIB.cmake" : {
      "ObjectId" : "95eb51547377ad817104e6cdbf8367dcdc6c6c90",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Try to find ZLIB\n\n# Once done, this will define\n\n#\n\n#  ZLIB_FOUND - system has ZLIB\n\n#  ZLIB_INCLUDE_DIRS - the ZLIB include directories\n\n#  ZLIB_LIBRARIES - link these to use ZLIB\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get path, convert backslashes as ${ENV_${var}}\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# construct search paths\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# redo search if prefix path changed\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "3dparty/assimp/cmake-modules/Findassimp.cmake" : {
      "ObjectId" : "95f3250b3fc9d01b2a9c2f1c8b548f2bcab1a68f",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find path of each library\n",
        "Line" : 10,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "3dparty/assimp/cmake-modules/MinGW_x86_64.cmake" : {
      "ObjectId" : "d5c1f15011ed47146856b311cd27d55d9e93e570",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this one sets internal to crosscompile (in theory)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# the minimalistic settings\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# where is the target (so called staging) environment\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# search for programs in the build host directories (default BOTH)\n\n#SET(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)\n\n# for libraries and headers in the target directories\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "3dparty/assimp/cmake-modules/PrecompiledHeader.cmake" : {
      "ObjectId" : "6af7866f5034660c9e6b84192cdd2e7f678cef47",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Do not consider .c files\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Add precompiled header to SourcesVar\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "3dparty/assimp/code/CMakeLists.txt" : {
      "ObjectId" : "6b0809b82ef9d063fb403f86cc24a8ce49d5d998",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Open Asset Import Library (assimp)\n\n# ----------------------------------------------------------------------\n\n#\n\n# Copyright (c) 2006-2018, assimp team\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# All rights reserved.\n\n#\n\n# Redistribution and use of this software in source and binary forms,\n\n# with or without modification, are permitted provided that the\n\n# following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer in the documentation and/or other\n\n#   materials provided with the distribution.\n\n#\n\n# * Neither the name of the assimp team, nor the names of its\n\n#   contributors may be used to endorse or promote products\n\n#   derived from this software without specific prior\n\n#   written permission of the assimp team.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#----------------------------------------------------------------------\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Listing and grouping of all the source files.\n\n# 1) Set the file lists for each component\n\n# 2) Create a Source Group for each component, for IDE project orginization\n\n# 3) Add libassimp using the file lists (eliminates duplication of file names between\n\n#    source groups and library command)\n\n#\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if this variable is set to TRUE, the user can manually disable importers by setting\n\n# ASSIMP_BUILD_XXX_IMPORTER to FALSE for each importer\n\n# if this variable is set to FALSE, the user can manually enable importers by setting\n\n# ASSIMP_BUILD_XXX_IMPORTER to TRUE for each importer\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# macro to add the CMake Option ADD_ASSIMP_IMPORTER_<name> which enables compile of loader\n\n# this way selective loaders can be compiled (reduces filesize + compile time)\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# list of enabled importers\n",
        "Line" : 226,
        "CharPositionInLine" : 33
      },
      "6" : {
        "Text" : "# disabled list (used to print)\n",
        "Line" : 227,
        "CharPositionInLine" : 34
      },
      "7" : {
        "Text" : "# Check dependencies for glTF importer with Open3DGC-compression.\n\n# RT-extensions is used in \"contrib/Open3DGC/o3dgcTimer.h\" for collecting statistics. Pointed file\n\n# has implementation for different platforms: WIN32, __MACH__ and other (\"else\" block).\n",
        "Line" : 821,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#!TODO: off course is better to remove statistics timers from o3dgc codec. Or propose to choose what to use.\n",
        "Line" : 831,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# VC2010 fixes\n",
        "Line" : 837,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Assimp Files\n",
        "Line" : 863,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Model Support\n",
        "Line" : 872,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Third-party libraries\n",
        "Line" : 875,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Necessary to show the headers in the project when using the VC++ generator:\n",
        "Line" : 883,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# in order to prevent DLL hell, each of the DLLs have to be suffixed with the major version and msvc prefix\n",
        "Line" : 921,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# use full version\n",
        "Line" : 948,
        "CharPositionInLine" : 32
      },
      "16" : {
        "Text" : "# PUBLIC_HEADER option does not support directory structure creation\n\n# add ./Compiler/*.h to assimp.framework via copy command\n",
        "Line" : 965,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Build against external unzip, or add ../contrib/unzip so\n\n# assimp can #include \"unzip.h\"\n",
        "Line" : 975,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Add RT-extension library for glTF importer with Open3DGC-compression.\n",
        "Line" : 984,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Create the coveralls target.\n",
        "Line" : 1031,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# The source files.\n\n# If we should upload.\n",
        "Line" : 1033,
        "CharPositionInLine" : 27
      },
      "21" : {
        "Text" : "# (Optional) Alternate project cmake module path.\n",
        "Line" : 1035,
        "CharPositionInLine" : 48
      },
      "CommentCount" : 22
    },
    "3dparty/assimp/contrib/CMakeLists.txt" : {
      "ObjectId" : "362f1653d1c569470eb7035459672a1da0b4622d",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Compile internal irrXML only if system is not requested\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3dparty/assimp/contrib/gtest/CMakeLists.txt" : {
      "ObjectId" : "621d0f0421543eba41e1d69f497814104bb9c6a7",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 62,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Where Google Test's libraries can be found.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Summary of tuple support for Microsoft Visual Studio:\n\n# Compiler    version(MS)  version(cmake)  Support\n\n# ----------  -----------  --------------  -----------------------------\n\n# <= VS 2010  <= 10        <= 1600         Use Google Tests's own tuple.\n\n# VS 2012     11           1700            std::tr1::tuple + _VARIADIC_MAX=10\n\n# VS 2013     12           1800            std::tr1::tuple\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# If the CMake version supports it, attach header directory information\n\n# to the targets for when we are part of a parent build (ie being pulled\n\n# in via add_subdirectory() rather than being a standalone build).\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "########################################################################\n\n#\n\n# Install rules\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_samples=ON flag when running cmake.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 181,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# 1600 is Visual Studio 2010.\n",
        "Line" : 210,
        "CharPositionInLine" : 43
      },
      "22" : {
        "Text" : "# Visual Studio 2010, 2012, and 2013 define symbols in std::tr1 that\n\n# conflict with our own definitions. Therefore using our own tuple does not\n\n# work on those compilers.\n",
        "Line" : 211,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 225,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Visual Studio .NET 2003 does not support STL with exceptions disabled.\n",
        "Line" : 231,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# 1310 is Visual Studio .NET 2003\n",
        "Line" : 232,
        "CharPositionInLine" : 46
      },
      "26" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 268,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 27
    },
    "3dparty/assimp/contrib/gtest/Makefile.am" : {
      "ObjectId" : "29797e4e9de4e1d5e5f93bba14288de87f623946",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gtest source files that we don't compile directly.  They are\n\n# #included by gtest-all.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sample files that we don't compile.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ test files that we don't compile directly.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Python tests that we don't run.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake script\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MSVC project files\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# xcode project files\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# xcode sample files\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C++Builder project files\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Distribute and install M4 macro\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Bulid rules for samples and tests. Automake's naming for some of\n\n# these variables isn't terribly obvious, so this is a brief\n\n# reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# A simple sample on using gtest.\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Another sample.  It also verifies that libgtest works.\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This tests most constructs of gtest and verifies that libgtest_main\n\n# and libgtest work.\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Tests that fused gtest files compile and work.\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Build rules for putting fused Google Test files into the distribution\n\n# package. The user can also create those files by manually running\n\n# scripts/fuse_gtest_files.py.\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Test can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "3dparty/assimp/contrib/gtest/make/Makefile" : {
      "ObjectId" : "9ac74493ba55246597e90b898fae847ae358eab5",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A sample Makefile for building Google Test and using it in user\n\n# tests.  Please tweak it to suit your environment and project.  You\n\n# may want to move it to your project's root directory.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Please tweak the following variable definitions as needed by your\n\n# project, except GTEST_HEADERS, which you can use in your own targets\n\n# but shouldn't modify.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Points to the root of Google Test, relative to where this file is.\n\n# Remember to tweak this if you move this file.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find user code.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# Set Google Test's header directory as a system directory, such that\n\n# the compiler doesn't generate warnings in Google Test headers.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All tests produced by this Makefile.  Remember to add new tests you\n\n# created to the list.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# All Google Test headers.  Usually you shouldn't change this\n\n# definition.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# House-keeping build targets.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Builds gtest.a and gtest_main.a.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Usually you shouldn't tweak such internal variables, indicated by a\n\n# trailing _.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# For simplicity and to avoid depending on Google Test's\n\n# implementation details, the dependencies specified below are\n\n# conservative and not optimized.  This is fine as Google Test\n\n# compiles fast and for ordinary users its source rarely changes.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Builds a sample test.  A test should link with either gtest.a or\n\n# gtest_main.a, depending on whether it defines its own main()\n\n# function.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "3dparty/assimp/contrib/gtest/scripts/test/Makefile" : {
      "ObjectId" : "cdff584637b7a6e9df1fa43ce8f588c43815e561",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A Makefile for fusing Google Test and building a sample test against it.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make check  - makes everything and runs the built sample test.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Points to the root of fused Google Test, relative to where this file is.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Paths to the fused gtest files.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find the sample test.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to find gtest_main.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# We have no idea here whether pthreads is available in the system, so\n\n# disable its use.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "3dparty/assimp/contrib/irrXML/CMakeLists.txt" : {
      "ObjectId" : "48941970a1284d0c4ae6a4e48c57f0bc837ffc51",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3dparty/assimp/contrib/openddlparser/CMakeLists.txt" : {
      "ObjectId" : "9e903ca3f10162607e15180ff9067b3113bba44c",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Force to always compile with W4\n",
        "Line" : 58,
        "CharPositionInLine" : 53
      },
      "1" : {
        "Text" : "# Update if necessary\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Include the doc component.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create the coveralls target.\n",
        "Line" : 159,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# The source files.\n\n# If we should upload.\n",
        "Line" : 161,
        "CharPositionInLine" : 27
      },
      "5" : {
        "Text" : "# (Optional) Alternate project cmake module path.\n",
        "Line" : 163,
        "CharPositionInLine" : 40
      },
      "CommentCount" : 6
    },
    "3dparty/assimp/contrib/zip/CMakeLists.txt" : {
      "ObjectId" : "450ef3a987c5c06a25baf77034e7ce2ad2b1905a",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use secure functions by defaualt and suppress warnings about \"deprecated\" functions\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# zip\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# test\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "3dparty/assimp/contrib/zip/test/CMakeLists.txt" : {
      "ObjectId" : "7734dcbe757f019c8e41d8fb43a20da55e2cf3ea",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# test\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3dparty/assimp/contrib/zlib/CMakeLists.txt" : {
      "ObjectId" : "5f1368adb96501e00888f85c6ec04fe4853e4da0",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake 3.0 changed the project command, setting policy CMP0048 reverts to the old behaviour.\n\n# See http://www.cmake.org/cmake/help/v3.0/policy/CMP0048.html\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(INSTALL_BIN_DIR \"${CMAKE_INSTALL_PREFIX}/bin\" CACHE PATH \"Installation directory for executables\")\n\n#set(INSTALL_LIB_DIR \"${CMAKE_INSTALL_PREFIX}/lib\" CACHE PATH \"Installation directory for libraries\")\n\n#set(INSTALL_INC_DIR \"${CMAKE_INSTALL_PREFIX}/include\" CACHE PATH \"Installation directory for headers\")\n\n#set(INSTALL_MAN_DIR \"${CMAKE_INSTALL_PREFIX}/share/man\" CACHE PATH \"Installation directory for manual pages\")\n\n#set(INSTALL_PKGCONFIG_DIR \"${CMAKE_INSTALL_PREFIX}/share/pkgconfig\" CACHE PATH \"Installation directory for pkgconfig (.pc) files\")\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# clear variable\n",
        "Line" : 54,
        "CharPositionInLine" : 32
      },
      "5" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\n\n# in their source tree...\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If present will override custom build rule below.\n",
        "Line" : 135,
        "CharPositionInLine" : 23
      },
      "10" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This gets us DLL resource information when compiling on MinGW.\n",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "3dparty/assimp/doc/CMakeLists.txt" : {
      "ObjectId" : "f7ce7b7269a0f17bdf84d5f5ae11ced3e904a099",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enable Microsoft CHM help style only on Windows\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3dparty/assimp/port/AndroidJNI/CMakeLists.txt" : {
      "ObjectId" : "ddc71885000e8206253e353c4cd5f4f0cfa5a7d2",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3dparty/assimp/port/jassimp/build.xml" : {
      "ObjectId" : "1352e3ffa70fc35ca42b1504b7d8a3f971b9cc28",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    },
    "3dparty/assimp/samples/SimpleOpenGL/CMakeLists.txt" : {
      "ObjectId" : "455cbd8ca8a1371c0ed82fc12bdb1361591fa3b1",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3dparty/assimp/samples/SimpleTexturedOpenGL/CMakeLists.txt" : {
      "ObjectId" : "1b206af50be2f8f311ff0e40680f21ebe7f3093f",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3dparty/assimp/test/CMakeLists.txt" : {
      "ObjectId" : "741da953433acbfd9d59e626425db5015f1b9e9b",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Open Asset Import Library (assimp)\n\n# ----------------------------------------------------------------------\n\n#\n\n# Copyright (c) 2006-2017, assimp team\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# All rights reserved.\n\n#\n\n# Redistribution and use of this software in source and binary forms,\n\n# with or without modification, are permitted provided that the\n\n# following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer in the documentation and/or other\n\n#   materials provided with the distribution.\n\n#\n\n# * Neither the name of the assimp team, nor the names of its\n\n#   contributors may be used to endorse or promote products\n\n#   derived from this software without specific prior\n\n#   written permission of the assimp team.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#----------------------------------------------------------------------\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add the temporary output directories to the library path to make sure the\n\n# Assimp library can be found, even if it is not installed system-wide yet.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "3dparty/assimp/test/headercheck/CMakeLists.txt" : {
      "ObjectId" : "fa6b35c669cc80e2af2e7ba407bc4bae2badfde9",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Spring engine (GPL v2 or later), see LICENSE.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#pseudo unique name\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# create test file\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# add library\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "3dparty/assimp/tools/assimp_cmd/CMakeLists.txt" : {
      "ObjectId" : "cb78942d736c2e68734777c55c453f470c56a0e3",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Open Asset Import Library (assimp)\n\n# ----------------------------------------------------------------------\n\n# \n\n# Copyright (c) 2006-2017, assimp team\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# All rights reserved.\n\n#\n\n# Redistribution and use of this software in source and binary forms,\n\n# with or without modification, are permitted provided that the\n\n# following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer in the documentation and/or other\n\n#   materials provided with the distribution.\n\n#\n\n# * Neither the name of the assimp team, nor the names of its\n\n#   contributors may be used to endorse or promote products\n\n#   derived from this software without specific prior\n\n#   written permission of the assimp team.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#----------------------------------------------------------------------\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3dparty/assimp/tools/assimp_qt_viewer/CMakeLists.txt" : {
      "ObjectId" : "42ef0fb348f33489037a95ee3be8c21ecc3e9e3e",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check if we are on Windows\n\n# Check if we are using the Visual Studio compiler\n",
        "Line" : 31,
        "CharPositionInLine" : 10
      },
      "1" : {
        "Text" : "#set_target_properties(TestProject PROPERTIES LINK_FLAGS_RELEASE \"/SUBSYSTEM:WINDOWS\")\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -mwindows\") # Not tested\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Nothing special required\n",
        "Line" : 40,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "3dparty/assimp/tools/assimp_view/CMakeLists.txt" : {
      "ObjectId" : "adf2ae877e618a27b2c09304a63f3b8b24b4d6fc",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Open Asset Import Library (assimp)\n\n# ----------------------------------------------------------------------\n\n# \n\n# Copyright (c) 2006-2017, assimp team\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# All rights reserved.\n\n#\n\n# Redistribution and use of this software in source and binary forms,\n\n# with or without modification, are permitted provided that the\n\n# following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above\n\n#   copyright notice, this list of conditions and the\n\n#   following disclaimer in the documentation and/or other\n\n#   materials provided with the distribution.\n\n#\n\n# * Neither the name of the assimp team, nor the names of its\n\n#   contributors may be used to endorse or promote products\n\n#   derived from this software without specific prior\n\n#   written permission of the assimp team.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#----------------------------------------------------------------------\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make sure the linker can find the Assimp library once it is built.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Link the executable to the assimp + dx libs.\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "3dparty/glew/CMakeLists.txt" : {
      "ObjectId" : "a0dc18ec9b867327871cc8d6315c48ec68848509",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3dparty/glew/Makefile" : {
      "ObjectId" : "9b829f3d3cecbf5f043709c570ee40fdb6de10fa",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# CMAKE generated file: DO NOT EDIT!\n\n# Generated by \"Unix Makefiles\" Generator, CMake Version 3.10\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Default target executed when no arguments are given to make.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Allow only one \"make -f Makefile2\" at a time, but pass parallelism.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#=============================================================================\n\n# Special targets provided by cmake.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Disable implicit rules so canonical targets will work.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Remove some rules from gmake that .SUFFIXES does not remove.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Suppress display of executed commands.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# A target that is always out of date.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#=============================================================================\n\n# Set environment variables for the build.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# The shell in which to execute make rules.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# The CMake executable.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# The command to remove a file.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Escaping for special characters.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# The top-level source directory on which CMake was run.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# The top-level build directory on which CMake was run.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#=============================================================================\n\n# Targets provided globally by CMake.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Special rule for the target install/strip\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Special rule for the target install/strip\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Special rule for the target edit_cache\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Special rule for the target edit_cache\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Special rule for the target list_install_components\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Special rule for the target list_install_components\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Special rule for the target install/local\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Special rule for the target install/local\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Special rule for the target rebuild_cache\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Special rule for the target rebuild_cache\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Special rule for the target install\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Special rule for the target install\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# The main all target\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# The main clean target\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# The main clean target\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Prepare targets for installation.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Prepare targets for installation.\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# clear depends\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Convenience name for target.\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Convenience name for target.\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# fast build rule for target.\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# target to build an object file\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# target to build an object file\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Help Target\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#=============================================================================\n\n# Special targets to cleanup operation of make.\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Special rule to run CMake to check the build system integrity.\n\n# No rule that depends on this can have commands that come from listfiles\n\n# because they might be regenerated.\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 46
    },
    "3dparty/glew/auto/Makefile" : {
      "ObjectId" : "e05ceef43dec730e92d15ee71d5acb2ae9397ab4",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "## Copyright (C) 2002-2008, Marcelo E. Magallon <mmagallo[]debian org>\n\n## Copyright (C) 2002-2008, Milan Ikits <milan ikits[]ieee org>\n\n##\n\n## This program is distributed under the terms and conditions of the GNU\n\n## General Public License Version 2 as published by the Free Software\n\n## Foundation or, at your option, any later version.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#GLEW_SPLIT_SOURCE = yes\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "### Use git repository for GL extension specifications\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n### Conventional desktop OpenGL settings\n\n###\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###\n\n### Experimental OpenGL ES settings\n\n###\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# REGISTRY     = registry/gles\n\n# EXT          = extensions/gles\n\n# FILTER       = filter_gles_ext.sh\n\n# CORE         = core/gles\n\n# REGISTRY_URL = http://www.khronos.org/registry/gles/\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#GL_CORE_SPEC  := $(shell grep GL_VERSION custom.txt    |                       perl -pi -e \"s=^=$(CORE)/=g;\")\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#GLX_CORE_SPEC := $(shell grep GLX_VERSION custom.txt   |                       perl -pi -e \"s=^=$(CORE)/=g;\")\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\tperl -e \"s/GLEW_VERSION_STRING/$(GLEW_VERSION)/g\" -pi $@\n\n#\tperl -e \"s/GLEW_ARB_vertex_shader = !_glewInit_GL_ARB_vertex_shader\\(GLEW_CONTEXT_ARG_VAR_INIT\\);/{ GLEW_ARB_vertex_shader = !_glewInit_GL_ARB_vertex_shader(GLEW_CONTEXT_ARG_VAR_INIT); _glewInit_GL_ARB_vertex_program(GLEW_CONTEXT_ARG_VAR_INIT); }/g\" -pi $@\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Update documentation\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#<a href=\"$(@F)\">(.*)</a>#\\1#' > $@\n",
        "Line" : 347,
        "CharPositionInLine" : 12
      },
      "11" : {
        "Text" : "#<a href=\"$(@F)\">(.*)</a>#\\1#' $@\n",
        "Line" : 357,
        "CharPositionInLine" : 15
      },
      "12" : {
        "Text" : "#<a href=\"$(@F)\">(.*)</a>#\\1#' $@\n",
        "Line" : 367,
        "CharPositionInLine" : 15
      },
      "13" : {
        "Text" : "#<a href=\"$(@F)\">(.*)</a>#\\1#' $@\n",
        "Line" : 377,
        "CharPositionInLine" : 15
      },
      "CommentCount" : 14
    },
    "3dparty/glew/build/vc6/Makefile" : {
      "ObjectId" : "9f0ab41c83a3a15673f0cd9032f91f6406f42e93",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "3dparty/glm/CMakeLists.txt" : {
      "ObjectId" : "756673a398b77b35ed02f5dd22cf1bbdd49661a8",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# VC doesn't support SSE4.2\n",
        "Line" : 145,
        "CharPositionInLine" : 34
      },
      "1" : {
        "Text" : "# VC doesn't support SSE4.1\n",
        "Line" : 155,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : "# VC doesn't support SSSE3\n",
        "Line" : 165,
        "CharPositionInLine" : 34
      },
      "3" : {
        "Text" : "# VC doesn't support SSE3\n",
        "Line" : 175,
        "CharPositionInLine" : 34
      },
      "4" : {
        "Text" : "# Compiler and default options\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# build tree package config\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# install tree package config\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# build pkg-config file\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# install pkg-config file\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "3dparty/glm/glm/CMakeLists.txt" : {
      "ObjectId" : "01c594f47fe35dd90974758637d42bcf60c2bde7",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3dparty/glm/test/CMakeLists.txt" : {
      "ObjectId" : "988d9d9ee02e9923123d9fb24a1cf5cb632918fb",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3dparty/glm/test/bug/CMakeLists.txt" : {
      "ObjectId" : "26e8569429f190180afc3744d48d9023f67c469e",
      "LastModified" : "2017-12-28T12:11:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3dparty/glm/test/core/CMakeLists.txt" : {
      "ObjectId" : "a1f1d0ff89063e854ca9c769120e8e3901eea79e",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3dparty/glm/test/ext/CMakeLists.txt" : {
      "ObjectId" : "f4152e70200fff274305e49d7abd980169320ef3",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3dparty/glm/test/external/gli/CMakeLists.txt" : {
      "ObjectId" : "6b91c28801ad559b9f69b60a1122d5d25f1b43b7",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3dparty/glm/test/gtc/CMakeLists.txt" : {
      "ObjectId" : "4aef24a897f91343f784176ced2064a26d9c0d1d",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3dparty/glm/test/gtx/CMakeLists.txt" : {
      "ObjectId" : "5c8095ccbb500cb6d3ed5ad8b3cfd27d4187d80c",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3dparty/glm/test/perf/CMakeLists.txt" : {
      "ObjectId" : "19c70508ce9fa497a2fcc4a45ceaaf886da40ab8",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3dparty/glm/util/conan-package/test_package/CMakeLists.txt" : {
      "ObjectId" : "c2b30814423033ae5e58538e0a5e8cee32750202",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3dparty/gmock-1.7.0/CMakeLists.txt" : {
      "ObjectId" : "572d0444bf14834b1fde7f3e7398638cf4e4b7ce",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Mock.\n\n#\n\n# To run the tests for Google Mock itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# A directory to find Google Test sources.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Google Test also calls hermetic setup functions from add_subdirectory,\n\n# although its changes will not affect things at the current scope.\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gmock_SOURCE_DIR} and to the root binary directory as\n\n# ${gmock_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Instructs CMake to process Google Test's CMakeLists.txt and add its\n\n# targets to the current scope.  We are placing Google Test's binary\n\n# directory in a subdirectory of our own as VC compilation may break\n\n# if they are the same (the default).\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Although Google Test's CMakeLists.txt calls this function, the\n\n# changes there don't affect the current scope.  Therefore we have to\n\n# call it again here.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# from ${gtest_dir}/cmake/internal_utils.cmake\n",
        "Line" : 56,
        "CharPositionInLine" : 30
      },
      "10" : {
        "Text" : "# Adds Google Mock's and Google Test's header directories to the search path.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This directory is needed to build directly from Google\n\n# Test sources.\n",
        "Line" : 62,
        "CharPositionInLine" : 20
      },
      "12" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gmock & gmock_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Google Mock libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that Google Mock can be compiled by\n\n# a user aggressive about warnings.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "########################################################################\n\n#\n\n# Google Mock's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Mock itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gmock_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgmock_build_tests=ON flag when running cmake.\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 101,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# gmock_all_test is commented to save time building and running tests.\n\n# Uncomment if necessary.\n\n# cxx_test(gmock_all_test gmock_main)\n",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Tests that a binary can be built with Google Mock as a shared library.  On\n\n# some system configurations, it may not possible to run the binary without\n\n# knowing more details about the system configurations. We do not try to run\n\n# this binary. To get a more robust shared library coverage, configure with\n\n# -DBUILD_SHARED_LIBS=ON.\n",
        "Line" : 152,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 21
    },
    "3dparty/gmock-1.7.0/Makefile.am" : {
      "ObjectId" : "0eb7bd8f342e94ff8e8c74834d740cf7abd4add8",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We may need to build our internally packaged gtest. If so, it will be\n\n# included in the 'subdirs' variable.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This is generated by the configure script, so clean it for distribution.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Build rules for tests. Automake's naming for some of these variables isn't\n\n# terribly obvious, so this is a brief reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This exercises all major components of Google Mock.  It also\n\n# verifies that libgmock works.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This tests using Google Mock in multiple translation units.  It also\n\n# verifies that libgmock_main and libgmock work.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Tests that fused gmock files compile and work.\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Google Mock source files that we don't compile directly.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# C++ tests that we don't compile using autotools.\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Python tests, which we don't run using autotools.\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Nonstandard package files for distribution.\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Pump scripts for generating Google Mock headers.\n\n# TODO(chandlerc@google.com): automate the generation of *.h from *.h.pump.\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Script for fusing Google Mock and Google Test source files.\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# The Google Mock Generator tool from the cppclean project.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# CMake scripts.\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Microsoft Visual Studio 2005 projects.\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Microsoft Visual Studio 2010 projects.\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# gmock_test.cc does not really depend on files generated by the\n\n# fused-gmock-internal rule.  However, gmock_test.o does, and it is\n\n# important to include test/gmock_test.cc as part of this rule in order to\n\n# prevent compiling gmock_test.o until all dependent files have been\n\n# generated.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# TODO(vladl@google.com): Find a way to add Google Tests's sources here.\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Mock can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "3dparty/gmock-1.7.0/gtest/CMakeLists.txt" : {
      "ObjectId" : "57470c84f3af0772c411bbb8bbbb41b515747ecd",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# CMake build script for Google Test.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# BUILD_SHARED_LIBS is a standard CMake variable, but we declare it here to\n\n# make it prominent in the GUI.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When other libraries are using a shared version of runtime libraries,\n\n# Google Test also has to use one.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Defines pre_project_set_up_hermetic_build() and set_up_hermetic_build().\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define helper functions and macros used by Google Test.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Defined in internal_utils.cmake.\n",
        "Line" : 52,
        "CharPositionInLine" : 30
      },
      "8" : {
        "Text" : "# Where Google Test's .h files can be found.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Where Google Test's libraries can be found.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Google Test libraries.  We build them using more strict warnings than what\n\n# are used for other targets, to ensure that gtest can be compiled by a user\n\n# aggressive about warnings.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# gtest_build_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_samples=ON flag when running cmake.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# The tests are not built by default.  To build them, set the\n\n# gtest_build_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dgtest_build_tests=ON flag when running cmake.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# The C++ Standard specifies tuple_element<int, class>.\n\n# Yet MSVC 10's <utility> declares tuple_element<size_t, class>.\n\n# That declaration conflicts with our own standard-conforming\n\n# tuple implementation.  Therefore using our own tuple with\n\n# MSVC 10 doesn't compile.\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# MSVC 7.1 does not support STL with exceptions disabled.\n",
        "Line" : 234,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 22
    },
    "3dparty/gmock-1.7.0/gtest/Makefile.am" : {
      "ObjectId" : "9c96b42572ca943d5fb4d4303842f12a545e8523",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Automake file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Nonstandard package files for distribution\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gtest source files that we don't compile directly.  They are\n\n# #included by gtest-all.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sample files that we don't compile.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# C++ test files that we don't compile directly.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Python tests that we don't run.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# CMake script\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MSVC project files\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# xcode project files\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# xcode sample files\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C++Builder project files\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Distribute and install M4 macro\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# We define the global AM_CPPFLAGS as everything we compile includes from these\n\n# directories.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Modifies compiler and linker flags for pthreads compatibility.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Build rules for libraries.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Bulid rules for samples and tests. Automake's naming for some of\n\n# these variables isn't terribly obvious, so this is a brief\n\n# reference:\n\n#\n\n# TESTS -- Programs run automatically by \"make check\"\n\n# check_PROGRAMS -- Programs built by \"make check\" but not necessarily run\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# A simple sample on using gtest.\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Another sample.  It also verifies that libgtest works.\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This tests most constructs of gtest and verifies that libgtest_main\n\n# and libgtest work.\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Tests that fused gtest files compile and work.\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Build rules for putting fused Google Test files into the distribution\n\n# package. The user can also create those files by manually running\n\n# scripts/fuse_gtest_files.py.\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Death tests may produce core dumps in the build directory. In case\n\n# this happens, clean them to keep distcleancheck happy.\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Disables 'make install' as installing a compiled version of Google\n\n# Test can lead to undefined behavior due to violation of the\n\n# One-Definition Rule.\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "3dparty/gmock-1.7.0/gtest/cmake/internal_utils.cmake" : {
      "ObjectId" : "8cb21894cebacd5bdfb598c8663a5be50325d70f",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines functions and macros useful for building Google Test and\n\n# Google Mock.\n\n#\n\n# Note:\n\n#\n\n# - This file will be run twice when building Google Mock (once via\n\n#   Google Test's CMakeLists.txt, and once via Google Mock's).\n\n#   Therefore it shouldn't have any side effects other than defining\n\n#   the functions and macros.\n\n#\n\n# - The functions/macros defined in this file may depend on Google\n\n#   Test and Google Mock's option() definitions, and thus must be\n\n#   called *after* the options have been defined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tweaks CMake's default compiler/linker settings to suit Google Test's needs.\n\n#\n\n# This must be a macro(), as inside a function string() can only\n\n# update variables in the function scope.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# When Google Test is built as a shared library, it should also use\n\n# shared runtime libraries.  Otherwise, it may end up with multiple\n\n# copies of runtime library data in different modules, resulting in\n\n# hard-to-find crashes. When it is built as a static library, it is\n\n# preferable to use CRT as static libraries, as we don't have to rely\n\n# on CRT DLLs being available. CMake always defaults to using shared\n\n# CRT libraries, so we override that default here.\n",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Defines the compiler/linker flags used to build Google Test and\n\n# Google Mock.  You can tweak these definitions to suit your need.  A\n\n# variable's value is empty before it's explicitly assigned to.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n\n# TODO(vladl@google.com): Add -RTCs and -RTCu to debug builds.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Suppress spurious warnings MSVC 7.1 sometimes issues.\n\n# Forcing value to bool.\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# Copy constructor and assignment operator could not be generated.\n",
        "Line" : 63,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Compatibility warnings not applicable to Google Test.\n\n# Resolved overload was found by argument-dependent lookup.\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# RTTI can not be disabled in HP aCC compiler.\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# The pthreads library is available and allowed.\n",
        "Line" : 107,
        "CharPositionInLine" : 32
      },
      "17" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "########################################################################\n\n#\n\n# Helper functions for creating build targets.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given libraries and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given libs and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# We are not supporting Python tests on Linux yet as they consider\n\n# all Linux environments to be google3 and try to use google3 features.\n",
        "Line" : 216,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# ${CMAKE_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 31
    },
    "3dparty/gmock-1.7.0/gtest/make/Makefile" : {
      "ObjectId" : "9ac74493ba55246597e90b898fae847ae358eab5",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A sample Makefile for building Google Test and using it in user\n\n# tests.  Please tweak it to suit your environment and project.  You\n\n# may want to move it to your project's root directory.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Please tweak the following variable definitions as needed by your\n\n# project, except GTEST_HEADERS, which you can use in your own targets\n\n# but shouldn't modify.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Points to the root of Google Test, relative to where this file is.\n\n# Remember to tweak this if you move this file.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find user code.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# Set Google Test's header directory as a system directory, such that\n\n# the compiler doesn't generate warnings in Google Test headers.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All tests produced by this Makefile.  Remember to add new tests you\n\n# created to the list.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# All Google Test headers.  Usually you shouldn't change this\n\n# definition.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# House-keeping build targets.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Builds gtest.a and gtest_main.a.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Usually you shouldn't tweak such internal variables, indicated by a\n\n# trailing _.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# For simplicity and to avoid depending on Google Test's\n\n# implementation details, the dependencies specified below are\n\n# conservative and not optimized.  This is fine as Google Test\n\n# compiles fast and for ordinary users its source rarely changes.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Builds a sample test.  A test should link with either gtest.a or\n\n# gtest_main.a, depending on whether it defines its own main()\n\n# function.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "3dparty/gmock-1.7.0/gtest/scripts/test/Makefile" : {
      "ObjectId" : "cdff584637b7a6e9df1fa43ce8f588c43815e561",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A Makefile for fusing Google Test and building a sample test against it.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make check  - makes everything and runs the built sample test.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Points to the root of fused Google Test, relative to where this file is.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Paths to the fused gtest files.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to find the sample test.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to find gtest_main.cc.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# We have no idea here whether pthreads is available in the system, so\n\n# disable its use.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "3dparty/gmock-1.7.0/make/Makefile" : {
      "ObjectId" : "c1cc0e90f172b9f6a48fa9f74d72342d1d2e2585",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# A sample Makefile for building both Google Mock and Google Test and\n\n# using them in user tests.  This file is self-contained, so you don't\n\n# need to use the Makefile in Google Test's source tree.  Please tweak\n\n# it to suit your environment and project.  You may want to move it to\n\n# your project's root directory.\n\n#\n\n# SYNOPSIS:\n\n#\n\n#   make [all]  - makes everything.\n\n#   make TARGET - makes the given target.\n\n#   make clean  - removes all files generated by make.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Please tweak the following variable definitions as needed by your\n\n# project, except GMOCK_HEADERS and GTEST_HEADERS, which you can use\n\n# in your own targets but shouldn't modify.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Points to the root of Google Test, relative to where this file is.\n\n# Remember to tweak this if you move this file, or if you want to use\n\n# a copy of Google Test at a different location.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Points to the root of Google Mock, relative to where this file is.\n\n# Remember to tweak this if you move this file.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to find user code.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags passed to the preprocessor.\n\n# Set Google Test and Google Mock's header directories as system\n\n# directories, such that the compiler doesn't generate warnings in\n\n# these headers.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Flags passed to the C++ compiler.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# All tests produced by this Makefile.  Remember to add new tests you\n\n# created to the list.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# All Google Test headers.  Usually you shouldn't change this\n\n# definition.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# All Google Mock headers. Note that all Google Test headers are\n\n# included here too, as they are #included by Google Mock headers.\n\n# Usually you shouldn't change this definition.\t\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# House-keeping build targets.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Builds gmock.a and gmock_main.a.  These libraries contain both\n\n# Google Mock and Google Test.  A test should link with either gmock.a\n\n# or gmock_main.a, depending on whether it defines its own main()\n\n# function.  It's fine if your test only uses features from Google\n\n# Test (and not Google Mock).\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Usually you shouldn't tweak such internal variables, indicated by a\n\n# trailing _.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# For simplicity and to avoid depending on implementation details of\n\n# Google Mock and Google Test, the dependencies specified below are\n\n# conservative and not optimized.  This is fine as Google Mock and\n\n# Google Test compile fast and for ordinary users their source rarely\n\n# changes.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Builds a sample test.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "3dparty/jsoncpp-1.8.4/CMakeLists.txt" : {
      "ObjectId" : "2110a639a1702ae009c7d9fff9ef037aadf82195",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# vim: et ts=4 sts=4 sw=4 tw=0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ensures that CMAKE_BUILD_TYPE is visible in cmake-gui on Unix\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Enable runtime search path support for dynamic libraries on OSX\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Adhere to GNU filesystem layout conventions\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set variable named ${VAR_NAME} to value ${VALUE}\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Extract major, minor, patch from version text\n\n# Parse a version string \"X.Y.Z\" and outputs\n\n# version parts in ${OUPUT_PREFIX}_MAJOR, _MINOR, _PATCH.\n\n# If parse succeeds then ${OUPUT_PREFIX}_FOUND is TRUE.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Read out version from \"version\" file\n\n#FILE(STRINGS \"version\" JSONCPP_VERSION)\n\n#SET( JSONCPP_VERSION_MAJOR X )\n\n#SET( JSONCPP_VERSION_MINOR Y )\n\n#SET( JSONCPP_VERSION_PATCH Z )\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#IF(NOT JSONCPP_VERSION_FOUND)\n\n#    MESSAGE(FATAL_ERROR \"Failed to parse version string properly. Expect X.Y.Z\")\n\n#ENDIF(NOT JSONCPP_VERSION_FOUND)\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# File version.h is only regenerated on CMake configure step\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Only enabled in debug because some old versions of VS STL generate\n\n# warnings when compiled in release configuration.\n",
        "Line" : 81,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Include our configuration header\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Only enabled in debug because some old versions of VS STL generate\n\n# unreachable code warning when compiled in release configuration.\n",
        "Line" : 96,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Require C++11 support, prefer ISO C++ over GNU variants,\n\n# as relying solely on ISO C++ is more portable.\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# using regular Clang or AppleClang\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# using GCC\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# not yet ready for -Wsign-conversion\n",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "#Â using Intel compiler\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Build the different applications\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#install the includes\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "3dparty/jsoncpp-1.8.4/include/CMakeLists.txt" : {
      "ObjectId" : "cc866f173d736930233b331c964d3d0f5edf77e6",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3dparty/jsoncpp-1.8.4/src/CMakeLists.txt" : {
      "ObjectId" : "ca8ac15e28a882513d24b05eb2b23ac6f8ba752b",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3dparty/jsoncpp-1.8.4/src/jsontestrunner/CMakeLists.txt" : {
      "ObjectId" : "20d01e6268813808476e5696db2054e95cb37628",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Run end to end parser/writer tests\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "3dparty/jsoncpp-1.8.4/src/lib_json/CMakeLists.txt" : {
      "ObjectId" : "9730e9ace646f9890958e896eddfa07ce1c12f41",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Get compiler version.\n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#-Werror=* was introduced -after- GCC 4.1.2\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# The \"LANGUAGE CXX\" parameter is not supported in CMake versions below 3,\n\n# so the C compiler and header has to be used.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Install instructions for this target\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set library's runtime search path on OSX\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# avoid name clashes on windows as the shared import lib is also named jsoncpp.lib\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "3dparty/jsoncpp-1.8.4/src/test_lib_json/CMakeLists.txt" : {
      "ObjectId" : "7000264a71d0d1c4cad6aa111452456eff4c565b",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# vim: et ts=4 sts=4 sw=4 tw=0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# another way to solve issue #90\n\n#set_target_properties(jsoncpp_test PROPERTIES COMPILE_FLAGS -ffloat-store)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Run unit tests in post-build\n\n# (default cmake workflow hides away the test result into a file, resulting in poor dev workflow?!?)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# First, copy the shared lib, for Microsoft.\n\n# Then, run the test executable.\n",
        "Line" : 24,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Just run the test executable.\n",
        "Line" : 31,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "3dparty/lua-5.3.5/CMakeLists.txt" : {
      "ObjectId" : "6ee7350d04e66681e647393d9614e68c427a80dc",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3dparty/lua-5.3.5/src/Makefile" : {
      "ObjectId" : "64c78f775ba0eddb6e3a98c74bfebb2252f382ac",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for building Lua\n\n# See ../doc/readme.html for installation and customization instructions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Your platform. See PLATS for possible values.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# == END OF USER SETTINGS -- NO NEED TO CHANGE ANYTHING BELOW THIS LINE =======\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Targets start here.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Convenience targets for popular platforms\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# list targets that do not create files (but not all makes understand .PHONY)\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# DO NOT DELETE\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# (end of Makefile)\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "3dparty/soil/CMakeLists.txt" : {
      "ObjectId" : "832290de114265867939c7a4d7f64b93d5d6f7da",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3dparty/unzip/CMakeLists.txt" : {
      "ObjectId" : "92dd74c37fd09637a1da54e9c26655ac65a1167f",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3dparty/zlib/CMakeLists.txt" : {
      "ObjectId" : "16c97ce1de3fb0a221c83b34382814dbbdbbfc31",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(INSTALL_BIN_DIR \"${CMAKE_INSTALL_PREFIX}/bin\" CACHE PATH \"Installation directory for executables\")\n\n#set(INSTALL_LIB_DIR \"${CMAKE_INSTALL_PREFIX}/lib\" CACHE PATH \"Installation directory for libraries\")\n\n#set(INSTALL_INC_DIR \"${CMAKE_INSTALL_PREFIX}/include\" CACHE PATH \"Installation directory for headers\")\n\n#set(INSTALL_MAN_DIR \"${CMAKE_INSTALL_PREFIX}/share/man\" CACHE PATH \"Installation directory for manual pages\")\n\n#set(INSTALL_PKGCONFIG_DIR \"${CMAKE_INSTALL_PREFIX}/share/pkgconfig\" CACHE PATH \"Installation directory for pkgconfig (.pc) files\")\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#check_include_file(stdint.h HAVE_STDINT_H)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# clear variable\n",
        "Line" : 47,
        "CharPositionInLine" : 32
      },
      "5" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\n\n# in their source tree...\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If present will override custom build rule below.\n",
        "Line" : 129,
        "CharPositionInLine" : 23
      },
      "10" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This gets us DLL resource information when compiling on MinGW.\n",
        "Line" : 172,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "3dparty/zlib/contrib/blast/Makefile" : {
      "ObjectId" : "9be80bafe050eed57029ef2e690f36677a3003c0",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "3dparty/zlib/contrib/minizip/Makefile" : {
      "ObjectId" : "84eaad20d4fb19b00965268dd75d7e9b66c8cc21",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "3dparty/zlib/contrib/puff/Makefile" : {
      "ObjectId" : "b6b69404c7453bd3707f1c258ac238fe93dac867",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "3dparty/zlib/contrib/untgz/Makefile" : {
      "ObjectId" : "b54266fba20a167a1d83b7afd503dfd2f849ca57",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "CMakeLists.txt" : {
      "ObjectId" : "a7bd596f3293cb4ecb316cfc56471665f61f247a",
      "LastModified" : "2019-04-11T22:37:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Cache these to allow the user to override them manually.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# we want to have all wanings\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Force to always compile with W4\n",
        "Line" : 95,
        "CharPositionInLine" : 53
      },
      "3" : {
        "Text" : "# Update if necessary\n",
        "Line" : 102,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Configuring assimp\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include all sub directories of the engine code component\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Include the doc component\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#set_target_properties(  assimp_cmd         PROPERTIES FOLDER ThirdParty )\n\n#set_target_properties(  assimp_viewer      PROPERTIES FOLDER ThirdParty )\n\n#set_target_properties(  IrrXML             PROPERTIES FOLDER ThirdParty )\n\n#set_target_properties(  jsoncpp_lib_static PROPERTIES FOLDER ThirdParty )\n\n#set_target_properties(  zlib               PROPERTIES FOLDER ThirdParty )\n\n#set_target_properties(  zlibstatic         PROPERTIES FOLDER ThirdParty )\n\n#set_target_properties(  unit               PROPERTIES FOLDER ThirdParty )\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "samples/CMakeLists.txt" : {
      "ObjectId" : "fce85047e157a05e70b2b7f29428f3f5170099f5",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/Editor/CMakeLists.txt" : {
      "ObjectId" : "885001e7f317a48b32cc5f6d5cfedc892bef9b59",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==============================================================================\n\n# NativeEditorDll\n\n#==============================================================================\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#==============================================================================\n\n# Define the editor dll\n\n#==============================================================================\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/Engine/CMakeLists.txt" : {
      "ObjectId" : "dcb2ae595f4c6b4abf720f7485e9014948c33169",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For Vulkan support\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#==============================================================================\n\n# App\n\n#==============================================================================\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#==============================================================================\n\n# Assets\n\n#==============================================================================\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#==============================================================================\n\n# Common\n\n#==============================================================================\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#==============================================================================\n\n# Collision\n\n#==============================================================================\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#==============================================================================\n\n# Debugging\n\n#==============================================================================\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#==============================================================================\n\n# Documentation\n\n#==============================================================================\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#==============================================================================\n\n# IO\n\n#==============================================================================\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#==============================================================================\n\n# Math\n\n#==============================================================================\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#==============================================================================\n\n# Platform\n\n#==============================================================================\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#==============================================================================\n\n# Profiling\n\n#==============================================================================\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#==============================================================================\n\n# Properties\n\n#==============================================================================\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#==============================================================================\n\n# Scene\n\n#==============================================================================\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#==============================================================================\n\n# RenderBackend\n\n#==============================================================================\n",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#==============================================================================\n\n# Scripting with Mono\n\n#==============================================================================\n",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#==============================================================================\n\n# UI\n\n#==============================================================================\n",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#==============================================================================\n\n# Threading\n\n#==============================================================================\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#==============================================================================\n\n# Defined Source groups\n\n#==============================================================================\n",
        "Line" : 457,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#==============================================================================\n\n# Define the Infrastructure library\n\n#==============================================================================\n",
        "Line" : 510,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "test/RenderTests/CMakeLists.txt" : {
      "ObjectId" : "3bb0158c312b9fae988260db3992e4cb14755ca7",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/UnitTests/CMakeLists.txt" : {
      "ObjectId" : "a5d67215574b40e655c5bf9b15a637fd8f9dfb9e",
      "LastModified" : "2019-04-09T18:37:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 62,
    "MAKEFILE" : 13,
    "AUTOMAKE" : 3,
    "ANT" : 1
  },
  "ElapsedTime" : 4853
}