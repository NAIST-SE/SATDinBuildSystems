{
  "Repository" : "861430",
  "Revision" : "HEAD",
  "ObjectId" : "b769d1353ac55cdd9b3b30bf56604d812210edd6",
  "CommitTime" : "2019-04-18T13:51:41Z",
  "Files" : {
    "Makefile.am" : {
      "ObjectId" : "d0ebb84f88eac2efb342882dbbb335bee77265bb",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#bindir=@bindir@/@host@_@METHOD@\n\n#libdir=@libdir@/@host@_@METHOD@\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#src\n",
        "Line" : 4,
        "CharPositionInLine" : 18
      },
      "2" : {
        "Text" : "# We might have turned on -Werror and/or paranoid warnings\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We need to set the no-undefined flag for linking\n\n# with libtool, because Windows requires all shared\n\n# libraries to include all used symbols. This flag\n\n# should do no harm on other platforms.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# As discussed on this thread [0], automake passes -h to tar in the\n\n# \"make dist\" target, and this has the effect of creating hard links\n\n# out of soft links in the resulting archives.  Since not all\n\n# filesystems support hard links well (for example AFS, see libmesh\n\n# #2046) this option causes the directory links to be created as\n\n# normal files instead. The --hard-dereference option requires at least tar 1.29 to\n\n# work, but we generally completely control the systems where we run\n\n# \"make dist\" and therefore we don't need the most portable \"make\n\n# dist\" possible, but rather a \"make dist\" target that gives us the\n\n# most portable tarballs possible.\n\n# [0]: http://gnu-automake.7480.n7.nabble.com/bug-19616-dist-tarball-contains-hardlinks-td21667.html\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# AM_CPPFLAGS are method-independent cppflags that\n\n# we use when compiling libmesh proper, or its utility\n\n# codes.  These will be augmented with method-specific\n\n# cppflags later on\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# required for libmesh_version.h\n",
        "Line" : 45,
        "CharPositionInLine" : 45
      },
      "7" : {
        "Text" : "# additional files which must be included in 'make dist'\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# If the metaphysicl submodule has not been initialized, throw an\n\n# error during \"make dist\". We need the submodule to be properly\n\n# initalized so that the sources can be copied into the distribution,\n\n# and trying to do it \"on the fly\" is too complicated.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Tools in the auxillary directory\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Support for pkgconfig\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# install the libtool script so that dependent apps can also use it\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Support for libmesh-config in $(exec_prefix)/bin\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# This rule extends the built-in make install rule, and can\n\n# be used to:\n\n#  when doing 'make install prefix=/other/path', update generated files\n\n#  when doing 'make install', symlik etc/libmesh/Make.common\n\n#  when doing 'make install', update libmesh_config\n\n#  fix up buggy libtool postdeps under specific compiler/mpi configurations\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# this rule invokes emacs on each source file to remove trailing whitespace.\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Additional files to be deleted by 'make distclean'\n\n# _configs.sed seems to be leftover by prefix_config\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# intel-14.0 seems to leave an a.out from configure with mpich, clean that up for distclean\n",
        "Line" : 159,
        "CharPositionInLine" : 11
      },
      "17" : {
        "Text" : "# # Additional files to be deleted by 'make maintainer-clean'\n\n# MAINTAINERCLEANFILES =  \\\n#          $(AUX_DIST)                              \\\n#          Makefile.in                              \\\n#          aclocal.m4                               \\\n#          aminclude.am                             \\\n#          autom4te.cache/*                         \\\n#          config.h                                 \\\n#          config.h.in                              \\\n#          config.log                               \\\n#          config.status                            \\\n#          config.sub                               \\\n#          configure                                \\\n#          data/Makefile.in                         \\\n#          src/Makefile.in                          \\\n#          src/physics/properties/Makefile.in       \\\n#          test/Makefile.in                         \\\n#          test/common/Makefile.in                  \\\n#          test/comp_ns/Makefile.in                 \\\n#          test/unit/Makefile.in\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# A convenience library to hold proper libMesh\n\n# objects.  This will get appended with any contributed\n\n# sources to create the final library.\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "###########################################################\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# empty, append below\n\n# empty, append below\n\n# empty, append below\n",
        "Line" : 246,
        "CharPositionInLine" : 15
      },
      "21" : {
        "Text" : "###########################################################\n\n# Utility programs\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# empty, append below\n\n# empty, append below\n\n# empty, append below\n\n# empty, append below\n\n# empty, append below\n",
        "Line" : 252,
        "CharPositionInLine" : 17
      },
      "23" : {
        "Text" : "# fparser_parse\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# getpot_parse\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# amr\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# meshtool\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# calculator\n",
        "Line" : 334,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# compare\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# meshbcid\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# meshid\n",
        "Line" : 394,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# meshavg\n",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# meshdiff\n",
        "Line" : 432,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# meshnorm\n",
        "Line" : 451,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# projection\n",
        "Line" : 470,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# output_libmesh_version\n",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# meshplot\n",
        "Line" : 508,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# solution_components\n",
        "Line" : 527,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# splitter\n",
        "Line" : 546,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "###########################################################\n\n# Examples\n",
        "Line" : 577,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "###########################################################\n\n# Documentation\n",
        "Line" : 583,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#\n\n# documentation for the examples\n",
        "Line" : 589,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#\n\n# doxygen documentation - be sure to generate symlinks in include/libmesh!\n",
        "Line" : 594,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#\t$(MAKE) examples_doc\n",
        "Line" : 597,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Upload the web page to github.io.\n",
        "Line" : 600,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# uncomment below when ready\n\n#\tcd libMesh.github.io && git push\n\n#\t-rm -rf libMesh.github.io\n",
        "Line" : 606,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\n\n# special things to do when running 'make dist'\n",
        "Line" : 611,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\n\n# support 'make run_examples'\n",
        "Line" : 617,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#\n\n# support top-level 'make test_headers'\n",
        "Line" : 622,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# -------------------------------------------\n\n# Optional support for code coverage analysis\n\n# -------------------------------------------\n",
        "Line" : 628,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# General philosophy is to maintain code coverage for the\n\n# base library as generated by \"make check\" tests.\n",
        "Line" : 637,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 51
    },
    "contrib/Makefile.am" : {
      "ObjectId" : "d4459eb8fd66d8bb3e156677af6fa20002d64db5",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "###########################################################\n\n# add contributed libraries that are conditionally compiled\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Doesn't seem to be used directly in this Makefile; add\n\n# it in case someone includes this Makefile?\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NetCDF version 4, use their autotools package\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# I don't think this actually copies any symbols into\n\n# libcontrib.la because we aren't using them here...\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ATM always compile fparser with optimized flags,\n\n# and reuse in all methods\n",
        "Line" : 203,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# header-only library - no library dependencies\n",
        "Line" : 215,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# header-only library for the parts we use - no library dependencies\n",
        "Line" : 220,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "######################################################################\n\n#\n\n# Building the flavors\n\n#\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "contrib/boost/include/Makefile.am" : {
      "ObjectId" : "b2d1f3fb6c8a7436cf32ace76c096a12549325e4",
      "LastModified" : "2016-06-29T21:43:52Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#includedir = $(prefix)/include/libmesh\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These are the headers we actually want to install and make available\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "contrib/capnproto/Makefile.am" : {
      "ObjectId" : "29608680afa965c131bee01b1107a3bf1200c9d6",
      "LastModified" : "2016-06-29T21:43:52Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# these \"sources\" are built from rb_data.capnp, and also will be cleaned\n\n# note we use rb_data-capnp.c++ rather than rb_data.capnp.c++ to avoid\n\n# an erroneous suffix rule conflict with rb_data.capnp\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# these are the sources that go into building the library, and also rolled up\n\n# into the distribution\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We need to specify the source file's dependencies and how it is\n\n# built. The capnp program generates both the header and source file,\n\n# so we don't need to have a separate target for each.\n\n#\n\n# Notes:\n\n# 1.) We use double-$ in the perl commands below to escape the single-$ sign from Make.\n\n# 2.) We have already tested that capnp is in the user's PATH (this is required for capnp to work)\n\n#     so there is no need to provide a PATH here.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The rule above actually generates both the .h and .c++ files.  This\n\n# is just a dummy rule so that make knows how the c++ file is\n\n# \"generated\", and makes the whole thing work with \"make -j\" runs.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# These are the headers we actually want to install and make available\n\n# to a user.  Consider these the public interface of libMesh.\n\n# will get installed into '$(prefix)/include/libmesh'\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Make.common is another automake file that handles compiling/linking flags and METHODs stuff.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Ensure these don't get packaged up, with or without Cap'N Proto we want to make sure thet are rebuilt\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "contrib/eigen/3.2.9/CMakeLists.txt" : {
      "ObjectId" : "d7232cc0af1784a71310e4e182f4e0685ac61734",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# guard against in-source builds\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# guard against bad build-type strings\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#############################################################################\n\n# retrieve version infomation                                               #\n\n#############################################################################\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# automatically parse the version number\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# if the mercurial program is absent, this will leave the EIGEN_HG_CHANGESET string empty,\n\n# but won't stop CMake.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# if this is the default (aka development) branch, extract the mercurial changeset number from the hg tip output...\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#...and show it next to the version number\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#############################################################################\n\n# find how to link to the standard libraries                                #\n\n#############################################################################\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# We assume that other compilers are partly compatible with GNUCC\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# clang outputs some warnings for unknwon flags that are not caught by check_cxx_compiler_flag\n\n# adding -Werror turns such warnings into errors\n",
        "Line" : 125,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#ei_add_cxx_compiler_flag(\"-Weverything\")              # clang\n",
        "Line" : 135,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# disable ICC's \"operands are evaluated in unspecified order\" remark\n\n# disbale ICC's \"warning #2304: non-explicit constructor with single argument may cause implicit type conversion\" produced by -Wnon-virtual-dtor\n",
        "Line" : 153,
        "CharPositionInLine" : 56
      },
      "12" : {
        "Text" : "# The -ansi flag must be added last, otherwise it is also used as a linker flag by check_cxx_compiler_flag making it fails\n\n# Moreover we should not set both -strict-ansi and -ansi\n",
        "Line" : 156,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# disable clang warning: argument unused during compilation: '-ansi'\n",
        "Line" : 159,
        "CharPositionInLine" : 56
      },
      "14" : {
        "Text" : "# C4127 - conditional expression is constant\n\n# C4714 - marked as __forceinline not inlined (I failed to deactivate it selectively)\n\n#         We can disable this warning in the unit tests since it is clear that it occurs\n\n#         because we are oftentimes returning objects that have a destructor or may\n\n#         throw exceptions - in particular in the unit tests we are throwing extra many\n\n#         exceptions to cover indexing errors.\n\n# C4505 - unreferenced local function has been removed (impossible to deactive selectively)\n",
        "Line" : 222,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# replace all /Wx by /W4\n",
        "Line" : 231,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# arch is not supported on 64 bit systems, SSE is enabled automatically.\n",
        "Line" : 246,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# Backward compatibility support for EIGEN_INCLUDE_INSTALL_DIR\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# similar to set_target_properties but append the property instead of overwriting it\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# if the property wasn't previously set, ${previous} is now \"previous-NOTFOUND\" which cmake allows catching with plain if()\n",
        "Line" : 315,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# fixme, not sure this line is still needed:\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# must be called from the root CMakeLists, see man page\n",
        "Line" : 341,
        "CharPositionInLine" : 17
      },
      "22" : {
        "Text" : "# can't do EXCLUDE_FROM_ALL here, breaks CTest\n",
        "Line" : 345,
        "CharPositionInLine" : 25
      },
      "23" : {
        "Text" : "# must be after test and unsupported, for configuring buildtests.in\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# TODO: consider also replacing EIGEN_BUILD_BTL by a custom target \"make btl\"?\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "contrib/eigen/3.2.9/CTestConfig.cmake" : {
      "ObjectId" : "0557c491a32c3a937656813fbc1414e465b9d839",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## This file should be placed in the root directory of your project.\n\n## Then modify the CMakeLists.txt file in the root directory of your\n\n## project to incorporate the testing dashboard.\n\n## # The following are required to uses Dart and the Cdash dashboard\n\n##   ENABLE_TESTING()\n\n##   INCLUDE(CTest)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/eigen/3.2.9/Eigen/CMakeLists.txt" : {
      "ObjectId" : "a92dd6f6cafd2206f8be1a50f1294e2ae49feb5a",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/CMakeLists.txt" : {
      "ObjectId" : "c326f374d9ee89c953dd9caefbfaffccb905511c",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/Cholesky/CMakeLists.txt" : {
      "ObjectId" : "d01488b41a826850277a918f555e3668167dd367",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/CholmodSupport/CMakeLists.txt" : {
      "ObjectId" : "146ca3af64ee719755759e8dcd2d539433175549",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/Core/CMakeLists.txt" : {
      "ObjectId" : "2346fc2bbca4d9bd699efc4c366afd7abd400e3c",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/Core/arch/AltiVec/CMakeLists.txt" : {
      "ObjectId" : "9f8d2e9c46765f4253d6877d040e5c2a90612086",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/Core/arch/CMakeLists.txt" : {
      "ObjectId" : "8456dec1581554a4f7798ebe7d9d292369f21607",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/Core/arch/Default/CMakeLists.txt" : {
      "ObjectId" : "339c091d156100d46f3acbc67ad205749d8f4b3d",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/Core/arch/NEON/CMakeLists.txt" : {
      "ObjectId" : "fd4d4af50cb46dac7e6b29ef8654e70528e1f3ca",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/Core/arch/SSE/CMakeLists.txt" : {
      "ObjectId" : "46ea7cc623c62394c78425b15e100b84126b40a7",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/Core/products/CMakeLists.txt" : {
      "ObjectId" : "21fc94ae38a5574289ae4e304ce087f3ed6897f0",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/Core/util/CMakeLists.txt" : {
      "ObjectId" : "7964a114fa8c8f236388966254c80c831230af8d",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/Eigen2Support/CMakeLists.txt" : {
      "ObjectId" : "7ae41b3cbe9c568f7efdaf45cd1a1ef874bf309b",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/Eigen2Support/Geometry/CMakeLists.txt" : {
      "ObjectId" : "c347a8f26228694dc67e0e89ff6d509152dac738",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/Eigenvalues/CMakeLists.txt" : {
      "ObjectId" : "193e0268599516e2515318ed04eb6dda37b2dd59",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/Geometry/CMakeLists.txt" : {
      "ObjectId" : "f8f728b84faf0e08d91fac04e2986260368b9063",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/Geometry/arch/CMakeLists.txt" : {
      "ObjectId" : "1267a79c78767c43d11c529cc84468cbdd1052a2",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/Householder/CMakeLists.txt" : {
      "ObjectId" : "ce4937db061bbadb0357ccc45547b141761a70e3",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/IterativeLinearSolvers/CMakeLists.txt" : {
      "ObjectId" : "59ccc0072cc4ed78e6aa783bfab2486aac757fca",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/Jacobi/CMakeLists.txt" : {
      "ObjectId" : "490dac626439ade5e05baaba504689366db22e6d",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/LU/CMakeLists.txt" : {
      "ObjectId" : "2352627977d42963615ca645de796b3d64cc95c9",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/LU/arch/CMakeLists.txt" : {
      "ObjectId" : "f6b7ed9ecc3a25e3885c7fece60428481e51c696",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/MetisSupport/CMakeLists.txt" : {
      "ObjectId" : "e5daec2d42412c40d1990c079967fef7e2728a8e",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/OrderingMethods/CMakeLists.txt" : {
      "ObjectId" : "9f4bb275808257ac71d6c04d9c602ce5c0b5be8d",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/PaStiXSupport/CMakeLists.txt" : {
      "ObjectId" : "8fa0070a96baec8341504cfc951bee70e7d154d2",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/PardisoSupport/CMakeLists.txt" : {
      "ObjectId" : "9db9326c430a4b8a7845ce38e76c58e3343f3465",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/QR/CMakeLists.txt" : {
      "ObjectId" : "96f43d7f5b30fa024b9bd2d9e3a5dacb9d401ecb",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/SPQRSupport/CMakeLists.txt" : {
      "ObjectId" : "4968beaf2c59bcec07fe1861b5d72cb4d6723a6d",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/SVD/CMakeLists.txt" : {
      "ObjectId" : "55efc44b12970d5ec715393cb68cd061203ce941",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/SparseCholesky/CMakeLists.txt" : {
      "ObjectId" : "375a59d7a577877313a1ff2a6bf1c8fac138768b",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/SparseCore/CMakeLists.txt" : {
      "ObjectId" : "dd045053a15531a0165bd8c02f173955e3ebc089",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/SparseLU/CMakeLists.txt" : {
      "ObjectId" : "69729ee8961aa7d4ef514e9f890de0d29f12161f",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/SparseQR/CMakeLists.txt" : {
      "ObjectId" : "f9ddf2bdb75878292267c18697d9dedbd69a6611",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/StlSupport/CMakeLists.txt" : {
      "ObjectId" : "0f094f637acd51b0931e58a199c30f550beaa282",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/SuperLUSupport/CMakeLists.txt" : {
      "ObjectId" : "b1e7d46b66a98ea3fdb9e197ab2e13031342161c",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/UmfPackSupport/CMakeLists.txt" : {
      "ObjectId" : "8f890a22908b7e61531d1df94bf6f6ea45aa631d",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/misc/CMakeLists.txt" : {
      "ObjectId" : "a58ffb7457e06a7a69426a21a9d46d07a6a8ee91",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Eigen/src/plugins/CMakeLists.txt" : {
      "ObjectId" : "1a1d3ffbd724d17e161c40c48ac56c8b1aeb2e1f",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/Makefile.am" : {
      "ObjectId" : "f2ce8e7f35cabfdf699f1d9d79c8181344e35546",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# where to install our headers\n\n#includedir=$(prefix)/include/libmesh\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# omit from 'make TAGS'\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: Automate maintenance of this list.\n\n# for file in `find Eigen unsupported -type f | grep -v CMakeLists.txt` ; do echo \"        $file \\\\\" ; done\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "contrib/eigen/3.2.9/bench/btl/CMakeLists.txt" : {
      "ObjectId" : "119b470d9342aa9e78e3590fe1f29ae4fd51f3ad",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#   SET(CMAKE_Fortran_FLAGS \"-g0 -O3 -DNDEBUG\")\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find_package(MKL)\n\n# if (MKL_FOUND)\n\n#   add_definitions(-DHAVE_MKL)\n\n#   set(DEFAULT_LIBRARIES ${MKL_LIBRARIES})\n\n# endif (MKL_FOUND)\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "contrib/eigen/3.2.9/bench/btl/cmake/FindACML.cmake" : {
      "ObjectId" : "f45ae1b0de58ce095c47ada25c6b11f7c2e09916",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/bench/btl/cmake/FindATLAS.cmake" : {
      "ObjectId" : "e0db347b8bd988e47ab41a7e41d29e0c066e917a",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# search the default lapack lib link to it\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "contrib/eigen/3.2.9/bench/btl/cmake/FindBlitz.cmake" : {
      "ObjectId" : "92880bbed7cc687dee65ba2419e236e383c26479",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find blitz lib\n\n# Once done this will define\n\n#\n\n#  BLITZ_FOUND - system has blitz lib\n\n#  BLITZ_INCLUDES - the blitz include directory\n\n#  BLITZ_LIBRARIES - The libraries needed to use blitz\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2007, Allen Winter, <winter@kde.org>\n\n# Copyright (C) 2008 Gael Guennebaud <gael.guennebaud@inria.fr>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include(FindLibraryWithDebug)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "contrib/eigen/3.2.9/bench/btl/cmake/FindCBLAS.cmake" : {
      "ObjectId" : "554f0291b4130ff86b71cf9555e415e09fec9708",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# include(FindLibraryWithDebug)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/eigen/3.2.9/bench/btl/cmake/FindGMM.cmake" : {
      "ObjectId" : "5049c64edcea43027c7875c9efa328a849cdb53f",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# in cache already\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "contrib/eigen/3.2.9/bench/btl/cmake/FindGOTO.cmake" : {
      "ObjectId" : "67ea0934a52c80701c9c3c1a67fde1c0ab5846ae",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/bench/btl/cmake/FindGOTO2.cmake" : {
      "ObjectId" : "46b6d05d79f02a5577a745df1a3e3c8af42c32e0",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# find_path(GOTO_INCLUDES\n\n#   NAMES\n\n#   cblas.h\n\n#   PATHS\n\n#   $ENV{GOTODIR}/include\n\n#   ${INCLUDE_INSTALL_DIR}\n\n# )\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/eigen/3.2.9/bench/btl/cmake/FindMKL.cmake" : {
      "ObjectId" : "f4d7c6ebe7dd629d20b7579ee6efa4dad989edcf",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/bench/btl/cmake/FindMTL4.cmake" : {
      "ObjectId" : "3de4909802be09039c847931d323a81b8998fa50",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find eigen2 headers\n\n# Once done this will define\n\n#\n\n#  MTL4_FOUND - system has eigen2 lib\n\n#  MTL4_INCLUDE_DIR - the eigen2 include directory\n\n#\n\n# Copyright (C) 2008 Gael Guennebaud <gael.guennebaud@inria.fr>\n\n# Adapted from FindEigen.cmake:\n\n# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "contrib/eigen/3.2.9/bench/btl/cmake/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "9613b3d6eeed13a5fd85f41097be5bfdc0d4038f",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME (DEFAULT_MSG|\"Custom failure message\") VAR1 ... )\n\n#\n\n# This macro is intended to be used in FindXXX.cmake modules files.\n\n# It handles the REQUIRED and QUIET argument to FIND_PACKAGE() and\n\n# it also sets the <UPPERCASED_NAME>_FOUND variable.\n\n# The package is found if all variables listed are TRUE.\n\n# Example:\n\n#\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(LibXml2 DEFAULT_MSG LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR)\n\n#\n\n# LibXml2 is considered to be found, if both LIBXML2_LIBRARIES and\n\n# LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.\n\n# If it is not found and REQUIRED was used, it fails with FATAL_ERROR,\n\n# independent whether QUIET was used or not.\n\n#\n\n# If it is found, the location is reported using the VAR1 argument, so\n\n# here a message \"Found LibXml2: /usr/lib/libxml2.so\" will be printed out.\n\n# If the second argument is DEFAULT_MSG, the message in the failure case will\n\n# be \"Could NOT find LibXml2\", if you don't like this message you can specify\n\n# your own custom failure message there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/eigen/3.2.9/bench/btl/cmake/FindTvmet.cmake" : {
      "ObjectId" : "26a29d965d125b34b1fff2c6bbfc2b5bf52e42df",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find tvmet headers\n\n# Once done this will define\n\n#\n\n#  TVMET_FOUND - system has tvmet lib\n\n#  TVMET_INCLUDE_DIR - the tvmet include directory\n\n#\n\n# Copyright (C) 2008 Gael Guennebaud <gael.guennebaud@inria.fr>\n\n# Adapted from FindEigen.cmake:\n\n# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "contrib/eigen/3.2.9/bench/btl/cmake/MacroOptionalAddSubdirectory.cmake" : {
      "ObjectId" : "4c1a1117acd5e4f79e2b696ddea301754bf4d8ef",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - MACRO_OPTIONAL_ADD_SUBDIRECTORY() combines ADD_SUBDIRECTORY() with an OPTION()\n\n# MACRO_OPTIONAL_ADD_SUBDIRECTORY( <dir> )\n\n# If you use MACRO_OPTIONAL_ADD_SUBDIRECTORY() instead of ADD_SUBDIRECTORY(),\n\n# this will have two effects\n\n# 1 - CMake will not complain if the directory doesn't exist\n\n#     This makes sense if you want to distribute just one of the subdirs\n\n#     in a source package, e.g. just one of the subdirs in kdeextragear.\n\n# 2 - If the directory exists, it will offer an option to skip the\n\n#     subdirectory.\n\n#     This is useful if you want to compile only a subset of all\n\n#     directories.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2007, Alexander Neundorf, <neundorf@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "contrib/eigen/3.2.9/bench/btl/data/CMakeLists.txt" : {
      "ObjectId" : "6af2a366f77ac4923d84584f1e7e4d7a834123bc",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/bench/btl/libs/BLAS/CMakeLists.txt" : {
      "ObjectId" : "de42fe047cafc469f7d807fc0f2637db9555358d",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# we are inside Eigen and blas/lapack interface is compilable\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "contrib/eigen/3.2.9/bench/btl/libs/STL/CMakeLists.txt" : {
      "ObjectId" : "4cfc2dcf298fbd1baba1fb0202f3b9d48bae2bd1",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/bench/btl/libs/blitz/CMakeLists.txt" : {
      "ObjectId" : "880ab7338564d89aaa919e7af064faf06b27e44e",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/bench/btl/libs/eigen2/CMakeLists.txt" : {
      "ObjectId" : "a2e8fc6da0948e1207d634ee9aca120aa8fc1352",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# EIGEN2_FOUND\n",
        "Line" : 19,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "contrib/eigen/3.2.9/bench/btl/libs/eigen3/CMakeLists.txt" : {
      "ObjectId" : "00cae23d3a74f3cfe14b2ecf8335145aa185a419",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# unless EIGEN3_INCLUDE_DIR is defined, let's use current Eigen version\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#     if(BUILD_btl_eigen3_adv)\n\n#       target_link_libraries(btl_eigen3_adv ${MKL_LIBRARIES})\n\n#     endif(BUILD_btl_eigen3_adv)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "contrib/eigen/3.2.9/bench/btl/libs/gmm/CMakeLists.txt" : {
      "ObjectId" : "bc2586243092771e0b1f9919c6a093f522b8d685",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/bench/btl/libs/mtl4/CMakeLists.txt" : {
      "ObjectId" : "14b47a808c990500baadcef95268a8636b2e3bd1",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/bench/btl/libs/tvmet/CMakeLists.txt" : {
      "ObjectId" : "25b565b972360f99d49dc7560bd7989ba1f24682",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/bench/btl/libs/ublas/CMakeLists.txt" : {
      "ObjectId" : "bdb58bea1ba0c7aedec5b82f1c6b8f2c2c443c89",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/bench/spbench/CMakeLists.txt" : {
      "ObjectId" : "9a6055a8a45a5309b90f954cbccce05cddb8f6bc",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find_library(PARDISO_LIBRARIES pardiso412-GNU450-X86-64)\n\n# if(PARDISO_LIBRARIES)\n\n#   add_definitions(\"-DEIGEN_PARDISO_SUPPORT\")\n\n#   set(SPARSE_LIBS ${SPARSE_LIBS} ${PARDISO_LIBRARIES})\n\n# endif(PARDISO_LIBRARIES)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/eigen/3.2.9/blas/CMakeLists.txt" : {
      "ObjectId" : "a9bc051374a3af8eeb0240d0f077c2b36ae6ae4e",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# can't do EXCLUDE_FROM_ALL here, breaks CTest\n",
        "Line" : 54,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 1
    },
    "contrib/eigen/3.2.9/blas/testing/CMakeLists.txt" : {
      "ObjectId" : "d9a56df3fee53c97bc56530ee31b84d9dcfb6d27",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add_custom_target(level1)\n\n# add_dependencies(level1 sblat1)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/eigen/3.2.9/cmake/EigenConfigureTesting.cmake" : {
      "ObjectId" : "b5b62aee6758797682d08f249a1e041685d8d6ae",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# configure the \"site\" and \"buildname\"\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# retrieve and store the build string\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# check whether /bin/bash exists\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This call activates testing and generates the DartConfiguration.tcl\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Overwrite default DartConfiguration.tcl such that ctest can build our unit tests.\n\n# Recall that our unit tests are not in the \"all\" target, so we have to explicitely ask ctest to build our custom 'buildtests' target.\n\n# At this stage, we can also add custom flags to the build tool through the user defined EIGEN_TEST_BUILD_FLAGS variable.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# try to grab the default flags\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# some documentation of this function would be nice\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# configure Eigen related testing options\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "contrib/eigen/3.2.9/cmake/EigenDetermineOSVersion.cmake" : {
      "ObjectId" : "78f45f5d256fbe7542925a128746af34eec90f36",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The utility function DetermineOSVersion aims at providing an\n\n# improved version of the CMake variable ${CMAKE_SYSTEM} on Windows\n\n# machines.\n\n#\n\n# Usage:\n\n#  include(EigenDetermineOSVersion)\n\n#  DetermineOSVersion(OS_VERSION)\n\n#  message(\"OS: ${OS_VERSION}\")\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - A little helper variable which should not be directly called\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "contrib/eigen/3.2.9/cmake/EigenDetermineVSServicePack.cmake" : {
      "ObjectId" : "8e5546a851f2fbd23ee614fd390d7fd66bc7a8ac",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The code is almost identical to the CMake version. The only difference is that we remove\n\n# _DetermineVSServicePack_FastCheckVersionWithCompiler which lead to errors on some systems.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Call helper function to determine VS version\n",
        "Line" : 18,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 2
    },
    "contrib/eigen/3.2.9/cmake/EigenTesting.cmake" : {
      "ObjectId" : "19358d007887b20fab33772f12d9e6f44999a16e",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#internal. See documentation of ei_add_test for details.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# let the user pass flags.\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# it could be that some cmake module provides a bad library string \" \"  (just spaces),\n\n# and that severely breaks target_link_libraries (\"can't link to -l-lstdc++\" errors).\n\n# so we check for strings containing only spaces.\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# notice: no double quotes around ${libs_to_link} here. It may be a list.\n",
        "Line" : 66,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Specify target and test labels accoirding to EIGEN_CURRENT_SUBPROJECT\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Macro to add a test\n\n#\n\n# the unique mandatory parameter testname must correspond to a file\n\n# <testname>.cpp which follows this pattern:\n\n#\n\n# #include \"main.h\"\n\n# void test_<testname>() { ... }\n\n#\n\n# Depending on the contents of that file, this macro can have 2 behaviors,\n\n# see below.\n\n#\n\n# The optional 2nd parameter is libraries to link to.\n\n#\n\n# A. Default behavior\n\n#\n\n# this macro adds an executable <testname> as well as a ctest test\n\n# named <testname> too.\n\n#\n\n# On platforms with bash simply run:\n\n#   \"ctest -V\" or \"ctest -V -R <testname>\"\n\n# On other platform use ctest as usual\n\n#\n\n# B. Multi-part behavior\n\n#\n\n# If the source file matches the regexp\n\n#    CALL_SUBTEST_[0-9]+|EIGEN_TEST_PART_[0-9]+\n\n# then it is interpreted as a multi-part test. The behavior then depends on the\n\n# CMake option EIGEN_SPLIT_LARGE_TESTS, which is ON by default.\n\n#\n\n# If EIGEN_SPLIT_LARGE_TESTS is OFF, the behavior is the same as in A (the multi-part\n\n# aspect is ignored).\n\n#\n\n# If EIGEN_SPLIT_LARGE_TESTS is ON, the test is split into multiple executables\n\n#   test_<testname>_<N>\n\n# where N runs from 1 to the greatest occurence found in the source file. Each of these\n\n# executables is built passing -DEIGEN_TEST_PART_N. This allows to split large tests\n\n# into smaller executables.\n\n#\n\n# Moreover, targets <testname> are still generated, they\n\n# have the effect of building all the parts of the test.\n\n#\n\n# Again, ctest -R allows to run all matching tests.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# adds a failtest, i.e. a test that succeed if the program fails to compile\n\n# note that the test runner for these is CMake itself, when passed -DEIGEN_FAILTEST=ON\n\n# so here we're just running CMake commands immediately, we're not adding any targets.\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# print a summary of the different options\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# vectorization / alignment options\n",
        "Line" : 266,
        "CharPositionInLine" : 10
      },
      "9" : {
        "Text" : "# uncomment anytime you change the ei_get_compilerver_from_cxx_version_string macro\n\n# ei_test_get_compilerver_from_cxx_version_string()\n",
        "Line" : 291,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# if the sitename is not yet set, try to set it\n",
        "Line" : 296,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# in case it is already set, enforce lower case\n",
        "Line" : 306,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# on windows system, we use a modified CMake script\n",
        "Line" : 314,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# on all other system we rely on ${CMAKE_CXX_COMPILER}\n\n# supporting a \"--version\" or \"/version\" flag\n",
        "Line" : 324,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Extract compiler name and version from a raw version string\n\n# WARNING: if you edit thid macro, then please test it by  uncommenting\n\n# the testing macro call in ei_init_testing() of the EigenTesting.cmake file.\n\n# See also the ei_test_get_compilerver_from_cxx_version_string macro at the end of the file\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# extract possible compiler names\n",
        "Line" : 348,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# combine them\n",
        "Line" : 355,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# extract possible version numbers\n\n# first try to extract 3 isolated numbers:\n",
        "Line" : 368,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# try to extract 2 isolated ones:\n",
        "Line" : 372,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# try to extract 3:\n",
        "Line" : 375,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# try to extract 2:\n",
        "Line" : 378,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# helper macro for testing ei_get_compilerver_from_cxx_version_string\n\n# STR: raw version string\n\n# REFNAME: expected compiler name\n\n# REFVER: expected compiler version\n",
        "Line" : 464,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# macro for testing ei_get_compilerver_from_cxx_version_string\n\n# feel free to add more version strings\n",
        "Line" : 476,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "contrib/eigen/3.2.9/cmake/FindAdolc.cmake" : {
      "ObjectId" : "1a7ff3628a1aa6bd0a033b75edf23bbdc587d899",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/cmake/FindBLAS.cmake" : {
      "ObjectId" : "68c4e072417b9bc434895d1feb6e89e3bc7e5548",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find BLAS library\n\n#\n\n# This module finds an installed library that implements the BLAS\n\n# linear-algebra interface (see http://www.netlib.org/blas/).\n\n# The list of libraries searched for is mainly taken\n\n# from the autoconf macro file, acx_blas.m4 (distributed at\n\n# http://ac-archive.sourceforge.net/ac-archive/acx_blas.html).\n\n#\n\n# This module sets the following variables:\n\n#  BLAS_FOUND - set to true if a library implementing the BLAS interface\n\n#    is found\n\n#  BLAS_INCLUDE_DIR - Directories containing the BLAS header files\n\n#  BLAS_DEFINITIONS - Compilation options to use BLAS\n\n#  BLAS_LINKER_FLAGS - Linker flags to use BLAS (excluding -l\n\n#    and -L).\n\n#  BLAS_LIBRARIES_DIR - Directories containing the BLAS libraries.\n\n#     May be null if BLAS_LIBRARIES contains libraries name using full path.\n\n#  BLAS_LIBRARIES - List of libraries to link against BLAS interface.\n\n#     May be null if the compiler supports auto-link (e.g. VC++).\n\n#  BLAS_USE_FILE - The name of the cmake module to include to compile\n\n#     applications or libraries using BLAS.\n\n#\n\n# This module was modified by CGAL team:\n\n# - find libraries for a C++ compiler, instead of Fortran\n\n# - added BLAS_INCLUDE_DIR, BLAS_DEFINITIONS and BLAS_LIBRARIES_DIR\n\n# - removed BLAS95_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This macro checks for the existence of the combination of fortran libraries\n\n# given by _list.  If the combination is found, this macro checks (using the\n\n# check_function_exists macro) whether can link against that library\n\n# combination using the name of a routine given by _name using the linker\n\n# flags given by _flags.  If the combination of libraries is found and passes\n\n# the link test, LIBRARIES is set to the list of complete library paths that\n\n# have been found and DEFINITIONS to the required definitions.\n\n# Otherwise, LIBRARIES is set to FALSE.\n\n# N.B. _prefix is the prefix applied to the names of all cached variables that\n\n# are generated internally and marked advanced by this macro.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(\"DEBUG: check_fortran_libraries(${_list} in ${_path})\")\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Check for the existence of the libraries given by _list\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# search first in ${_path}\n",
        "Line" : 54,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# if not found, search in environment variables and system\n",
        "Line" : 59,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Test this combination of libraries with the Fortran/f2c interface.\n\n# We test the Fortran interface first as it is well standardized.\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Some C++ linkers require the f2c library to link with Fortran libraries.\n\n# I do not know which ones, thus I just add the f2c library if it is available.\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#message(\"DEBUG: CMAKE_REQUIRED_DEFINITIONS = ${CMAKE_REQUIRED_DEFINITIONS}\")\n\n#message(\"DEBUG: CMAKE_REQUIRED_LIBRARIES = ${CMAKE_REQUIRED_LIBRARIES}\")\n\n# Check if function exists with f2c calling convention (ie a trailing underscore)\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# If not found, test this combination of libraries with a C interface.\n\n# A few implementations (ie ACML) provide a C interface. Unfortunately, there is no standard.\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#message(\"DEBUG: CMAKE_REQUIRED_LIBRARIES = ${CMAKE_REQUIRED_LIBRARIES}\")\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# on failure\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#message(\"DEBUG: ${DEFINITIONS} = ${${DEFINITIONS}}\")\n\n#message(\"DEBUG: ${LIBRARIES} = ${${LIBRARIES}}\")\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#\n\n# main\n\n#\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Is it already configured?\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# reset variables\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "#\n\n# If Unix, search for BLAS function in possible libraries\n\n#\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# BLAS in ATLAS library? (http://math-atlas.sourceforge.net/)\n",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# BLAS in PhiPACK libraries? (requires generic BLAS lib, too)\n",
        "Line" : 168,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# BLAS in Alpha CXML library?\n",
        "Line" : 181,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# BLAS in Alpha DXML library? (now called CXML, see above)\n",
        "Line" : 194,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# BLAS in Sun Performance library?\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Extra linker flag\n",
        "Line" : 219,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# BLAS in SCSL library?  (SGI/Cray Scientific Library)\n",
        "Line" : 224,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# BLAS in SGIMATH library?\n",
        "Line" : 237,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# BLAS in IBM ESSL library? (requires generic BLAS lib, too)\n",
        "Line" : 250,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "#BLAS in intel mkl 10 library? (em64t 64bit)\n",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "### windows version of intel mkl 10?\n",
        "Line" : 276,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "#older versions of intel mkl libs\n",
        "Line" : 289,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# BLAS in intel mkl library? (shared)\n",
        "Line" : 291,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "#BLAS in intel mkl library? (static, 32bit)\n",
        "Line" : 304,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "#BLAS in intel mkl library? (static, em64t 64bit)\n",
        "Line" : 317,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "#BLAS in acml library?\n",
        "Line" : 330,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# Apple BLAS library?\n",
        "Line" : 343,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Generic BLAS library?\n\n# This configuration *must* be the last try as this library is notably slow.\n",
        "Line" : 368,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# Add variables to cache\n",
        "Line" : 400,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "#message(\"DEBUG: BLAS_INCLUDE_DIR = ${BLAS_INCLUDE_DIR}\")\n\n#message(\"DEBUG: BLAS_DEFINITIONS = ${BLAS_DEFINITIONS}\")\n\n#message(\"DEBUG: BLAS_LINKER_FLAGS = ${BLAS_LINKER_FLAGS}\")\n\n#message(\"DEBUG: BLAS_LIBRARIES = ${BLAS_LIBRARIES}\")\n\n#message(\"DEBUG: BLAS_LIBRARIES_DIR = ${BLAS_LIBRARIES_DIR}\")\n\n#message(\"DEBUG: BLAS_FOUND = ${BLAS_FOUND}\")\n",
        "Line" : 412,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 37
    },
    "contrib/eigen/3.2.9/cmake/FindCholmod.cmake" : {
      "ObjectId" : "46007a6211f65843ee9ff7c69a314c19a361ef26",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Cholmod lib usually requires linking to a blas and lapack library.\n\n# It is up to the user of this module to find a BLAS and link to it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/eigen/3.2.9/cmake/FindEigen2.cmake" : {
      "ObjectId" : "a834b887286045fcdc381633ec95bf204834aadf",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen2 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen2 2.0.3)\n\n# to require version 2.0.3 to newer of Eigen2.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN2_FOUND - system has eigen lib with correct version\n\n#  EIGEN2_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN2_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "contrib/eigen/3.2.9/cmake/FindEigen3.cmake" : {
      "ObjectId" : "9c546a05d859b18c49554d7ee7221cc486b7760e",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "contrib/eigen/3.2.9/cmake/FindFFTW.cmake" : {
      "ObjectId" : "8a74443c2f4be463249a7b346779d52f5d7665b5",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the FFTW library\n\n#\n\n# Usage:\n\n#   find_package(FFTW [REQUIRED] [QUIET] )\n\n#\n\n# It sets the following variables:\n\n#   FFTW_FOUND               ... true if fftw is found on the system\n\n#   FFTW_LIBRARIES           ... full path to fftw library\n\n#   FFTW_INCLUDES            ... fftw include directory\n\n#\n\n# The following variables will be checked by the function\n\n#   FFTW_USE_STATIC_LIBS    ... if true, only static libraries are found\n\n#   FFTW_ROOT               ... if set, the libraries are exclusively searched\n\n#                               under this path\n\n#   FFTW_LIBRARY            ... fftw library to use\n\n#   FFTW_INCLUDE_DIR        ... fftw include directory\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#If environment variable FFTWDIR is specified, it has same effect as FFTW_ROOT\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check if we can use PkgConfig\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Determine from PKG\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Check whether to search static or dynamic libs\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#find libs\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#find includes\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "contrib/eigen/3.2.9/cmake/FindGLEW.cmake" : {
      "ObjectId" : "663fbb2b37cd72a1511e7c0b64d364aeeab31fc4",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2009 Boudewijn Rempt <boud@valdyas.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n\n# - try to find glew library and include files\n\n#  GLEW_INCLUDE_DIR, where to find GL/glew.h, etc.\n\n#  GLEW_LIBRARIES, the libraries to link against\n\n#  GLEW_FOUND, If false, do not try to use GLEW.\n\n# Also defined, but not for general use are:\n\n#  GLEW_GLEW_LIBRARY = the full path to the glew library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These values for Apple could probably do with improvement.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Is -lXi and -lXmu required on all platforms that have it?\n\n# If not, we need some way to figure out what platform we are on.\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#The following deprecated settings are for backwards compatibility with CMake1.4\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "contrib/eigen/3.2.9/cmake/FindGMP.cmake" : {
      "ObjectId" : "1f0273960142810512c933c53e2ff8de7ab9d428",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the GNU Multiple Precision Arithmetic Library (GMP)\n\n# See http://gmplib.org/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/eigen/3.2.9/cmake/FindGSL.cmake" : {
      "ObjectId" : "5c37ef1b01718ea6d980ff6ec0698ee14472485f",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find gnu scientific library GSL\n\n# See\n\n# http://www.gnu.org/software/gsl/  and\n\n# http://gnuwin32.sourceforge.net/packages/gsl.htm\n\n#\n\n# Once run this will define:\n\n#\n\n# GSL_FOUND       = system has GSL lib\n\n#\n\n# GSL_LIBRARIES   = full path to the libraries\n\n#    on Unix/Linux with additional linker flags from \"gsl-config --libs\"\n\n#\n\n# CMAKE_GSL_CXX_FLAGS  = Unix compiler flags for GSL, essentially \"`gsl-config --cxxflags`\"\n\n#\n\n# GSL_INCLUDE_DIR      = where to find headers\n\n#\n\n# GSL_LINK_DIRECTORIES = link directories, useful for rpath on Unix\n\n# GSL_EXE_LINKER_FLAGS = rpath on Unix\n\n#\n\n# Felix Woelk 07/2004\n\n# Jan Woetzel\n\n#\n\n# www.mip.informatik.uni-kiel.de\n\n# --------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# JW tested with gsl-1.8, Windows XP, MSVS 7.1\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#MESSAGE(\"DBG\\n\"\n\n#  \"GSL_GSL_LIBRARY=${GSL_GSL_LIBRARY}\\n\"\n\n#  \"GSL_GSLCBLAS_LIBRARY=${GSL_GSLCBLAS_LIBRARY}\\n\"\n\n#  \"GSL_LIBRARIES=${GSL_LIBRARIES}\")\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# MESSAGE(\"DBG GSL_CONFIG ${GSL_CONFIG}\")\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# set CXXFLAGS to be fed into CXX_FLAGS by the user:\n",
        "Line" : 97,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# set INCLUDE_DIRS to prefix+include\n",
        "Line" : 100,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# set link libraries and link flags\n\n#SET(GSL_LIBRARIES \"`${GSL_CONFIG} --libs`\")\n",
        "Line" : 106,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# extract link dirs for rpath\n",
        "Line" : 112,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# extract version\n",
        "Line" : 117,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# split version as major/minor\n",
        "Line" : 122,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# split off the link dirs (for rpath)\n\n# use regular expression to match wildcard equivalent \"-L*<endchar>\"\n\n# with <endchar> is a space or a semicolon\n",
        "Line" : 128,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "#      MESSAGE(\"DBG  GSL_LINK_DIRECTORIES_WITH_PREFIX=${GSL_LINK_DIRECTORIES_WITH_PREFIX}\")\n",
        "Line" : 134,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# remove prefix -L because we need the pure directory for LINK_DIRECTORIES\n",
        "Line" : 136,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "#      MESSAGE(\"DBG  GSL_LINK_DIRECTORIES=${GSL_LINK_DIRECTORIES}\")\n\n#      MESSAGE(\"DBG  GSL_EXE_LINKER_FLAGS=${GSL_EXE_LINKER_FLAGS}\")\n",
        "Line" : 142,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "#      ADD_DEFINITIONS(\"-DHAVE_GSL\")\n\n#      SET(GSL_DEFINITIONS \"-DHAVE_GSL\")\n",
        "Line" : 145,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 15
    },
    "contrib/eigen/3.2.9/cmake/FindGoogleHash.cmake" : {
      "ObjectId" : "f6a81a02ce9dbac0710ef2b5e46eb8b9c5aa5999",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# let's make sure it compiles with the current compiler\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "contrib/eigen/3.2.9/cmake/FindLAPACK.cmake" : {
      "ObjectId" : "2fcae2199f5f55f707089108301eb2c0a350671d",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find LAPACK library\n\n#\n\n# This module finds an installed library that implements the LAPACK\n\n# linear-algebra interface (see http://www.netlib.org/lapack/).\n\n# The approach follows mostly that taken for the autoconf macro file, acx_lapack.m4\n\n# (distributed at http://ac-archive.sourceforge.net/ac-archive/acx_lapack.html).\n\n#\n\n# This module sets the following variables:\n\n#  LAPACK_FOUND - set to true if a library implementing the LAPACK interface\n\n#    is found\n\n#  LAPACK_INCLUDE_DIR - Directories containing the LAPACK header files\n\n#  LAPACK_DEFINITIONS - Compilation options to use LAPACK\n\n#  LAPACK_LINKER_FLAGS - Linker flags to use LAPACK (excluding -l\n\n#    and -L).\n\n#  LAPACK_LIBRARIES_DIR - Directories containing the LAPACK libraries.\n\n#     May be null if LAPACK_LIBRARIES contains libraries name using full path.\n\n#  LAPACK_LIBRARIES - List of libraries to link against LAPACK interface.\n\n#     May be null if the compiler supports auto-link (e.g. VC++).\n\n#  LAPACK_USE_FILE - The name of the cmake module to include to compile\n\n#     applications or libraries using LAPACK.\n\n#\n\n# This module was modified by CGAL team:\n\n# - find libraries for a C++ compiler, instead of Fortran\n\n# - added LAPACK_INCLUDE_DIR, LAPACK_DEFINITIONS and LAPACK_LIBRARIES_DIR\n\n# - removed LAPACK95_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This macro checks for the existence of the combination of fortran libraries\n\n# given by _list.  If the combination is found, this macro checks (using the\n\n# check_function_exists macro) whether can link against that library\n\n# combination using the name of a routine given by _name using the linker\n\n# flags given by _flags.  If the combination of libraries is found and passes\n\n# the link test, LIBRARIES is set to the list of complete library paths that\n\n# have been found and DEFINITIONS to the required definitions.\n\n# Otherwise, LIBRARIES is set to FALSE.\n\n# N.B. _prefix is the prefix applied to the names of all cached variables that\n\n# are generated internally and marked advanced by this macro.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(\"DEBUG: check_lapack_libraries(${_list} in ${_path} with ${_blas})\")\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Check for the existence of the libraries given by _list\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# search first in ${_path}\n",
        "Line" : 53,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# if not found, search in environment variables and system\n",
        "Line" : 58,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Test this combination of libraries with the Fortran/f2c interface.\n\n# We test the Fortran interface first as it is well standardized.\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Some C++ linkers require the f2c library to link with Fortran libraries.\n\n# I do not know which ones, thus I just add the f2c library if it is available.\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#message(\"DEBUG: CMAKE_REQUIRED_DEFINITIONS = ${CMAKE_REQUIRED_DEFINITIONS}\")\n\n#message(\"DEBUG: CMAKE_REQUIRED_LIBRARIES = ${CMAKE_REQUIRED_LIBRARIES}\")\n\n# Check if function exists with f2c calling convention (ie a trailing underscore)\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# If not found, test this combination of libraries with a C interface.\n\n# A few implementations (ie ACML) provide a C interface. Unfortunately, there is no standard.\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#message(\"DEBUG: CMAKE_REQUIRED_LIBRARIES = ${CMAKE_REQUIRED_LIBRARIES}\")\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# on failure\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#message(\"DEBUG: ${DEFINITIONS} = ${${DEFINITIONS}}\")\n\n#message(\"DEBUG: ${LIBRARIES} = ${${LIBRARIES}}\")\n",
        "Line" : 127,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#\n\n# main\n\n#\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# LAPACK requires BLAS\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Is it already configured?\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# reset variables\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# unused (yet)\n",
        "Line" : 158,
        "CharPositionInLine" : 32
      },
      "18" : {
        "Text" : "#\n\n# If Unix, search for LAPACK function in possible libraries\n\n#\n",
        "Line" : 162,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "#intel mkl lapack?\n",
        "Line" : 166,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "#acml lapack?\n",
        "Line" : 180,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Apple LAPACK library?\n",
        "Line" : 194,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Generic LAPACK library?\n\n# This configuration *must* be the last try as this library is notably slow.\n",
        "Line" : 221,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Add variables to cache\n",
        "Line" : 254,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "#message(\"DEBUG: LAPACK_INCLUDE_DIR = ${LAPACK_INCLUDE_DIR}\")\n\n#message(\"DEBUG: LAPACK_DEFINITIONS = ${LAPACK_DEFINITIONS}\")\n\n#message(\"DEBUG: LAPACK_LINKER_FLAGS = ${LAPACK_LINKER_FLAGS}\")\n\n#message(\"DEBUG: LAPACK_LIBRARIES = ${LAPACK_LIBRARIES}\")\n\n#message(\"DEBUG: LAPACK_LIBRARIES_DIR = ${LAPACK_LIBRARIES_DIR}\")\n\n#message(\"DEBUG: LAPACK_FOUND = ${LAPACK_FOUND}\")\n",
        "Line" : 266,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 25
    },
    "contrib/eigen/3.2.9/cmake/FindMPFR.cmake" : {
      "ObjectId" : "094aa2dc0e381cb8c0a3aa639f38cb18bb340113",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the MPFR library\n\n# See http://www.mpfr.org/\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(MPFR 2.3.0)\n\n# to require version 2.3.0 to newer of MPFR.\n\n#\n\n# Once done this will define\n\n#\n\n#  MPFR_FOUND - system has MPFR lib with correct version\n\n#  MPFR_INCLUDES - the MPFR include directory\n\n#  MPFR_LIBRARIES - the MPFR library\n\n#  MPFR_VERSION - MPFR version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2010 Jitse Niesen, <jitse@maths.leeds.ac.uk>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set MPFR_INCLUDES\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set MPFR_FIND_VERSION to 1.0.0 if no minimum version is specified\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set MPFR_VERSION\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Check whether found version exceeds minimum version\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Set MPFR_LIBRARIES\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Epilogue\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "contrib/eigen/3.2.9/cmake/FindMetis.cmake" : {
      "ObjectId" : "678fd6b5ee7c9389f4b2d571c472893ee5b242cf",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Pastix requires METIS or METIS (partitioning and reordering tools)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/eigen/3.2.9/cmake/FindPastix.cmake" : {
      "ObjectId" : "e2e6c810d3cf985eb5faca6d87768e42a81e89ea",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Pastix lib requires linking to a blas library.\n\n# It is up to the user of this module to find a BLAS and link to it.\n\n# Pastix requires SCOTCH or METIS (partitioning and reordering tools) as well\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/eigen/3.2.9/cmake/FindSPQR.cmake" : {
      "ObjectId" : "839b7bf4dc43c2d5392f887acfb9888c7badcd82",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# SPQR lib usually requires linking to a blas and lapack library.\n\n# It is up to the user of this module to find a BLAS and link to it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# SPQR lib requires Cholmod, colamd and amd as well.\n\n# FindCholmod.cmake can be used to find those packages before finding spqr\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "contrib/eigen/3.2.9/cmake/FindScotch.cmake" : {
      "ObjectId" : "28451d0d755607faba0bc008c832779cbfa2d1d7",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Pastix requires SCOTCH or METIS (partitioning and reordering tools)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/eigen/3.2.9/cmake/FindStandardMathLibrary.cmake" : {
      "ObjectId" : "711b0e4b4f1d82323123088b4ef04cd0836b5f9f",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find how to link to the standard math library, if anything at all is needed to do.\n\n# On most platforms this is automatic, but for example it's not automatic on QNX.\n\n#\n\n# Once done this will define\n\n#\n\n#  STANDARD_MATH_LIBRARY_FOUND - we found how to successfully link to the standard math library\n\n#  STANDARD_MATH_LIBRARY - the name of the standard library that one has to link to.\n\n#                            -- this will be left empty if it's automatic (most platforms).\n\n#                            -- this will be set to \"m\" on platforms where one must explicitly\n\n#                               pass the \"-lm\" linker flag.\n\n#\n\n# Copyright (c) 2010 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# a little test program for c++ math functions.\n\n# notice the std:: is required on some platforms such as QNX\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# first try compiling/linking the test program without any linker flags\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the test program linked successfully without any linker flag.\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# the test program did not link successfully without any linker flag.\n\n# This is a very uncommon case that so far we only saw on QNX. The next try is the\n\n# standard name 'm' for the standard math library.\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# the test program linked successfully when linking to the 'm' library\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# the test program still doesn't link successfully\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "contrib/eigen/3.2.9/cmake/FindSuperLU.cmake" : {
      "ObjectId" : "9437696e465363547dfecc10acd5804fb6aa02f6",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Umfpack lib usually requires linking to a blas library.\n\n# It is up to the user of this module to find a BLAS and link to it.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/eigen/3.2.9/cmake/FindUmfpack.cmake" : {
      "ObjectId" : "2019208bda8b5dc2a533393de2ada03313878965",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Umfpack lib usually requires linking to a blas library.\n\n# It is up to the user of this module to find a BLAS and link to it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/eigen/3.2.9/cmake/RegexUtils.cmake" : {
      "ObjectId" : "b59dfc340f524d25add382306ba143e662baabdb",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/cmake/language_support.cmake" : {
      "ObjectId" : "68159e87b5ddc6d22b6af2b38d1cc6069015a8f7",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cmake/modules/language_support.cmake\n\n#\n\n# Temporary additional general language support is contained within this\n\n# file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This additional function definition is needed to provide a workaround for\n\n# CMake bug 9220.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# On debian testing (cmake 2.6.2), I get return code zero when calling\n\n# cmake the first time, but cmake crashes when running a second time\n\n# as follows:\n\n#\n\n#  -- The Fortran compiler identification is unknown\n\n#  CMake Error at /usr/share/cmake-2.6/Modules/CMakeFortranInformation.cmake:7 (GET_FILENAME_COMPONENT):\n\n#    get_filename_component called with incorrect number of arguments\n\n#  Call Stack (most recent call first):\n\n#    CMakeLists.txt:3 (enable_language)\n\n#\n\n# My workaround is to invoke cmake twice.  If both return codes are zero,\n\n# it is safe to invoke ENABLE_LANGUAGE(Fortran OPTIONAL)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#message(\"DEBUG: language = ${language}\")\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Second run\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Temporary tests of the above function.\n\n#workaround_9220(CXX CXX_language_works)\n\n#message(\"CXX_language_works = ${CXX_language_works}\")\n\n#workaround_9220(CXXp CXXp_language_works)\n\n#message(\"CXXp_language_works = ${CXXp_language_works}\")\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "contrib/eigen/3.2.9/demos/CMakeLists.txt" : {
      "ObjectId" : "b0d2eddbb8eaaf87a668274fbe63bddfb02ac792",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/demos/mandelbrot/CMakeLists.txt" : {
      "ObjectId" : "5c500e064dec6a01c8b203e250f746d26b7e626f",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/demos/opengl/CMakeLists.txt" : {
      "ObjectId" : "299aa441df95a47c84443068c95ad19ecee42516",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/doc/CMakeLists.txt" : {
      "ObjectId" : "02790ee43dbaebe20723800f935478ac282caa32",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set some Doxygen flags\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set(EIGEN_DOXY_TAGFILES                 \"\\\"${Eigen_BINARY_DIR}/doc/eigen.doxytags =../\\\"\")\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "contrib/eigen/3.2.9/doc/examples/CMakeLists.txt" : {
      "ObjectId" : "08cf8efd7c1cf448c363984d4d2b77eec9627c81",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/doc/snippets/CMakeLists.txt" : {
      "ObjectId" : "1135900cf47686a95feff9350f24a1382aeb9726",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/doc/special_examples/CMakeLists.txt" : {
      "ObjectId" : "3ab75dbfe910efcc218e3dfc4fa3600a3bef5d84",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/failtest/CMakeLists.txt" : {
      "ObjectId" : "cadc6a2556f83d367d2b28b05dc0d4ef763e0a50",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/lapack/CMakeLists.txt" : {
      "ObjectId" : "fabe76afb6c407ecb3e5539d8fd4ebe920a50d8b",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Download lapack and install sources and testing at the right place\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# The following comes from lapack/TESTING/CMakeLists.txt\n\n# Get Python\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#  string(REPLACE \"/STACK:10000000\" \"/STACK:900000000000000000\"\n\n#    CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS}\")\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# ======== SINGLE RFP LIN TESTS ========================\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#\n\n#\n\n# ======== SINGLE EIG TESTS ===========================\n\n#\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#\n\n# ======== DOUBLE LIN TESTS ===========================\n",
        "Line" : 223,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#\n\n# ======== DOUBLE RFP LIN TESTS ========================\n",
        "Line" : 226,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#\n\n# ======== DOUBLE EIG TESTS ===========================\n",
        "Line" : 229,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#\n\n# ======== COMPLEX RFP LIN TESTS ========================\n",
        "Line" : 291,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#\n\n# ======== COMPLEX EIG TESTS ===========================\n",
        "Line" : 294,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#\n\n# ======== COMPLEX16 LIN TESTS ========================\n",
        "Line" : 355,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#\n\n# ======== COMPLEX16 RFP LIN TESTS ========================\n",
        "Line" : 358,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#\n\n# ======== COMPLEX16 EIG TESTS ===========================\n",
        "Line" : 361,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#\n\n# ======== SINGLE-DOUBLE PROTO LIN TESTS ==============\n",
        "Line" : 424,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#\n\n# ======== COMPLEX-COMPLEX16 LIN TESTS ========================\n",
        "Line" : 433,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# ==============================================================================\n",
        "Line" : 439,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 16
    },
    "contrib/eigen/3.2.9/scripts/CMakeLists.txt" : {
      "ObjectId" : "0d9a631a9dd0d46b726703af0e51d5f49fddf029",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/test/CMakeLists.txt" : {
      "ObjectId" : "c0d8a4e2882305f45ce4bb2bc222e0b36246e99e",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# generate split test header file\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# configure blas/lapack (use Eigen's ones)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ei_add_test(denseLM)\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "contrib/eigen/3.2.9/test/eigen2/CMakeLists.txt" : {
      "ObjectId" : "9615a6026ef87d4586ad7e3605aebfb0b48c08c6",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ei_add_test(eigen2_first_aligned)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ei_add_test(eigen2_packetmath)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ei_add_test(eigen2_vectorization_logic)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# no support for eigen2 sparse module\n\n# if(NOT EIGEN_DEFAULT_TO_ROW_MAJOR)\n\n#   ei_add_test(eigen2_sparse_vector)\n\n#   ei_add_test(eigen2_sparse_basic)\n\n#   ei_add_test(eigen2_sparse_solvers \" \" \"${SPARSE_LIBS}\")\n\n#   ei_add_test(eigen2_sparse_product)\n\n# endif()\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "contrib/eigen/3.2.9/test/eigen2/testsuite.cmake" : {
      "ObjectId" : "12b6bfa2ebf3f045c975f368ea020e6c5f0e81de",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####################################################################\n\n#\n\n# Usage:\n\n#  - create a new folder, let's call it cdash\n\n#  - in that folder, do:\n\n#    ctest -S path/to/eigen2/test/testsuite.cmake[,option1=value1[,option2=value2]]\n\n#\n\n# Options:\n\n#  - EIGEN_CXX: compiler, eg.: g++-4.2\n\n#      default: default c++ compiler\n\n#  - EIGEN_SITE: eg, INRIA-Bdx_pc-gael, or the name of the contributor, etc.\n\n#      default: hostname\n\n#  - EIGEN_BUILD_STRING: a string which identify the system/compiler. It should be formed like that:\n\n#        <OS_name>-<OS_version>-<arch>-<compiler-version>\n\n#      with:\n\n#        <OS_name> = opensuse, debian, osx, windows, cygwin, freebsd, solaris, etc.\n\n#        <OS_version> = 11.1, XP, vista, leopard, etc.\n\n#        <arch> = i386, x86_64, ia64, powerpc, etc.\n\n#        <compiler-version> = gcc-4.3.2, icc-11.0, MSVC-2008, etc.\n\n#  - EIGEN_EXPLICIT_VECTORIZATION: novec, SSE2, Altivec\n\n#       default: SSE2 for x86_64 systems, novec otherwise\n\n#       Its value is automatically appended to EIGEN_BUILD_STRING\n\n#  - EIGEN_CMAKE_DIR: path to cmake executable\n\n#  - EIGEN_MODE: dashboard model, can be Experimental, Nightly, or Continuous\n\n#      default: Nightly\n\n#  - EIGEN_WORK_DIR: directory used to download the source files and make the builds\n\n#      default: folder which contains this script\n\n#  - EIGEN_CMAKE_ARGS: additional arguments passed to cmake\n\n#  - CTEST_SOURCE_DIRECTORY: path to eigen's src (use a new and empty folder, not the one you are working on)\n\n#      default: <EIGEN_WORK_DIR>/src\n\n#  - CTEST_BINARY_DIRECTORY: build directory\n\n#      default: <EIGEN_WORK_DIR>/nightly-<EIGEN_CXX>\n\n#\n\n# Here is an example running several compilers on a linux system:\n\n# #!/bin/bash\n\n# ARCH=`uname -m`\n\n# SITE=`hostname`\n\n# VERSION=opensuse-11.1\n\n# WORK_DIR=/home/gael/Coding/eigen2/cdash\n\n# # get the last version of the script\n\n# wget http://bitbucket.org/eigen/eigen/raw/tip/test/testsuite.cmake -o $WORK_DIR/testsuite.cmake\n\n# COMMON=\"ctest -S $WORK_DIR/testsuite.cmake,EIGEN_WORK_DIR=$WORK_DIR,EIGEN_SITE=$SITE,EIGEN_MODE=$1,EIGEN_BUILD_STRING=$OS_VERSION-$ARCH\"\n\n# $COMMON-gcc-3.4.6,EIGEN_CXX=g++-3.4\n\n# $COMMON-gcc-4.0.1,EIGEN_CXX=g++-4.0.1\n\n# $COMMON-gcc-4.3.2,EIGEN_CXX=g++-4.3,EIGEN_EXPLICIT_VECTORIZATION=novec\n\n# $COMMON-gcc-4.3.2,EIGEN_CXX=g++-4.3,EIGEN_EXPLICIT_VECTORIZATION=SSE2\n\n# $COMMON-icc-11.0,EIGEN_CXX=icpc\n\n#\n\n####################################################################\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# process the arguments\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# pick first\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# remove first\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# decompose as a pair key=value\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# set the variable to the specified value\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "####################################################################\n\n# Automatically set some user variables if they have not been defined manually\n\n####################################################################\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# let's try to find all information we need to make the build string ourself\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# OS\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# arch\n",
        "Line" : 101,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "## mandatory variables (the default should be ok in most cases):\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# which ctest command to use for running the dashboard\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# what cmake command to use for configuring this dashboard\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "####################################################################\n\n# The values in this section are optional you can either\n\n# have them or leave them commented out\n\n####################################################################\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# this make sure we get consistent outputs\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# should ctest wipe the binary tree before running\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# this is the initial cache to use for the binary tree, be careful to escape\n\n# any quotes inside of this string if you use it\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#message(SEND_ERROR \"win32\")\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# set any extra environment variables to use during the execution of the script here:\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "contrib/eigen/3.2.9/test/testsuite.cmake" : {
      "ObjectId" : "ad068f56b28657300980e4a6e09b413e03601534",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####################################################################\n\n#\n\n# Usage:\n\n#  - create a new folder, let's call it cdash\n\n#  - in that folder, do:\n\n#    ctest -S path/to/eigen/test/testsuite.cmake[,option1=value1[,option2=value2]]\n\n#\n\n# Options:\n\n#  - EIGEN_CXX: compiler, eg.: g++-4.2\n\n#      default: default c++ compiler\n\n#  - EIGEN_SITE: eg, INRIA-Bdx_pc-gael, or the name of the contributor, etc.\n\n#      default: hostname\n\n#  - EIGEN_BUILD_STRING: a string which identify the system/compiler. It should be formed like that:\n\n#        <OS_name>-<OS_version>-<arch>-<compiler-version>\n\n#      with:\n\n#        <OS_name> = opensuse, debian, osx, windows, cygwin, freebsd, solaris, etc.\n\n#        <OS_version> = 11.1, XP, vista, leopard, etc.\n\n#        <arch> = i386, x86_64, ia64, powerpc, etc.\n\n#        <compiler-version> = gcc-4.3.2, icc-11.0, MSVC-2008, etc.\n\n#  - EIGEN_EXPLICIT_VECTORIZATION: novec, SSE2, Altivec\n\n#       default: SSE2 for x86_64 systems, novec otherwise\n\n#       Its value is automatically appended to EIGEN_BUILD_STRING\n\n#  - EIGEN_CMAKE_DIR: path to cmake executable\n\n#  - EIGEN_MODE: dashboard model, can be Experimental, Nightly, or Continuous\n\n#      default: Nightly\n\n#  - EIGEN_WORK_DIR: directory used to download the source files and make the builds\n\n#      default: folder which contains this script\n\n#  - EIGEN_CMAKE_ARGS: additional arguments passed to cmake\n\n#  - EIGEN_GENERATOR_TYPE: allows to overwrite the generator type\n\n#      default: nmake (windows\n\n#      See http://www.cmake.org/cmake/help/cmake2.6docs.html#section_Generators for a complete\n\n#      list of supported generators.\n\n#  - EIGEN_NO_UPDATE: allows to submit dash boards from local repositories\n\n#      This might be interesting in case you want to submit dashboards\n\n#      including local changes.\n\n#  - CTEST_SOURCE_DIRECTORY: path to eigen's src (use a new and empty folder, not the one you are working on)\n\n#      default: <EIGEN_WORK_DIR>/src\n\n#  - CTEST_BINARY_DIRECTORY: build directory\n\n#      default: <EIGEN_WORK_DIR>/nightly-<EIGEN_CXX>\n\n#\n\n# Here is an example running several compilers on a linux system:\n\n# #!/bin/bash\n\n# ARCH=`uname -m`\n\n# SITE=`hostname`\n\n# VERSION=opensuse-11.1\n\n# WORK_DIR=/home/gael/Coding/eigen/cdash\n\n# # get the last version of the script\n\n# wget http://bitbucket.org/eigen/eigen/raw/tip/test/testsuite.cmake -o $WORK_DIR/testsuite.cmake\n\n# COMMON=\"ctest -S $WORK_DIR/testsuite.cmake,EIGEN_WORK_DIR=$WORK_DIR,EIGEN_SITE=$SITE,EIGEN_MODE=$1,EIGEN_BUILD_STRING=$OS_VERSION-$ARCH\"\n\n# $COMMON-gcc-3.4.6,EIGEN_CXX=g++-3.4\n\n# $COMMON-gcc-4.0.1,EIGEN_CXX=g++-4.0.1\n\n# $COMMON-gcc-4.3.2,EIGEN_CXX=g++-4.3,EIGEN_EXPLICIT_VECTORIZATION=novec\n\n# $COMMON-gcc-4.3.2,EIGEN_CXX=g++-4.3,EIGEN_EXPLICIT_VECTORIZATION=SSE2\n\n# $COMMON-icc-11.0,EIGEN_CXX=icpc\n\n#\n\n####################################################################\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# process the arguments\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# pick first\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# remove first\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# decompose as a pair key=value\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# set the variable to the specified value\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "####################################################################\n\n# Automatically set some user variables if they have not been defined manually\n\n####################################################################\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# let's try to find all information we need to make the build string ourself\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# OS\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# arch\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "## mandatory variables (the default should be ok in most cases):\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# the backup is CVS related ...\n",
        "Line" : 145,
        "CharPositionInLine" : 37
      },
      "12" : {
        "Text" : "# which ctest command to use for running the dashboard\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# what cmake command to use for configuring this dashboard\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "####################################################################\n\n# The values in this section are optional you can either\n\n# have them or leave them commented out\n\n####################################################################\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# this make sure we get consistent outputs\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# should ctest wipe the binary tree before running\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# raise the warning/error limit\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# this is the initial cache to use for the binary tree, be careful to escape\n\n# any quotes inside of this string if you use it\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#message(SEND_ERROR \"win32\")\n",
        "Line" : 174,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# set any extra environment variables to use during the execution of the script here:\n\n# setting this variable on windows machines causes trouble ...\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "contrib/eigen/3.2.9/unsupported/CMakeLists.txt" : {
      "ObjectId" : "4fef40a86c6d17dd8cc792a5e4f9e8d65abcdf58",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# can't do EXCLUDE_FROM_ALL here, breaks CTest\n",
        "Line" : 4,
        "CharPositionInLine" : 25
      },
      "CommentCount" : 1
    },
    "contrib/eigen/3.2.9/unsupported/Eigen/CMakeLists.txt" : {
      "ObjectId" : "e1fbf97e2b211d87ebe9a10746c1e3ea653c5b98",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/unsupported/Eigen/src/AutoDiff/CMakeLists.txt" : {
      "ObjectId" : "ad91fd9c4628cd921b2efedc59b093218dc34064",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/unsupported/Eigen/src/BVH/CMakeLists.txt" : {
      "ObjectId" : "b377d865cb1f9d2db01426f0b599929a4fa6458a",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/unsupported/Eigen/src/CMakeLists.txt" : {
      "ObjectId" : "d8b9f406817331bde83fb03628a6ea383cdfb4b5",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/unsupported/Eigen/src/Eigenvalues/CMakeLists.txt" : {
      "ObjectId" : "1d4387c82432970b48168d8d96c5a3d4d76e79a2",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/unsupported/Eigen/src/FFT/CMakeLists.txt" : {
      "ObjectId" : "edcffcb189c872b5339f345aa32d772cda3f8bf0",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/unsupported/Eigen/src/IterativeSolvers/CMakeLists.txt" : {
      "ObjectId" : "7986afc5ed4ecf09fa871c726a0c2ab1945e8559",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/unsupported/Eigen/src/KroneckerProduct/CMakeLists.txt" : {
      "ObjectId" : "4daefebee6f676c073f5ecacf9e8781aa5d673c2",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/unsupported/Eigen/src/LevenbergMarquardt/CMakeLists.txt" : {
      "ObjectId" : "d9690854db3d8f757642055cc80d1c92457a8bc4",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/unsupported/Eigen/src/MatrixFunctions/CMakeLists.txt" : {
      "ObjectId" : "cdde64d2cd45b59bee6b55d6590f2fcd7827d52c",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/unsupported/Eigen/src/MoreVectorization/CMakeLists.txt" : {
      "ObjectId" : "1b887cc8e3447b27bb9d289274eeb1ee0b5e71e0",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/unsupported/Eigen/src/NonLinearOptimization/CMakeLists.txt" : {
      "ObjectId" : "9322ddadf0364cc12cd9a77fdf0b48e2cbe49f85",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/unsupported/Eigen/src/NumericalDiff/CMakeLists.txt" : {
      "ObjectId" : "1199aca2f7073703a946344a922e0adec1e22b3e",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/unsupported/Eigen/src/Polynomials/CMakeLists.txt" : {
      "ObjectId" : "51f13f3cb91ea44bc113178d58ab26db47369d25",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/unsupported/Eigen/src/SVD/CMakeLists.txt" : {
      "ObjectId" : "b40baf09210610f0c605ac4a3079700f9b447bd4",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/unsupported/Eigen/src/Skyline/CMakeLists.txt" : {
      "ObjectId" : "3bf1b0dd46a7d1fa7cf90884e2284c0c06c4e8a5",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/unsupported/Eigen/src/SparseExtra/CMakeLists.txt" : {
      "ObjectId" : "7ea32ca5e26bf653f5814ce780c63c078ee83e29",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/unsupported/Eigen/src/Splines/CMakeLists.txt" : {
      "ObjectId" : "55c6271e96328c14e32ae6252521182e3051f713",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/unsupported/doc/CMakeLists.txt" : {
      "ObjectId" : "9e9ab98007eb189f2625f7fdd3c232c2d3da4e3b",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/unsupported/doc/examples/CMakeLists.txt" : {
      "ObjectId" : "c47646dfca9d76e45cf929d74508e32698d96ee3",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/unsupported/doc/snippets/CMakeLists.txt" : {
      "ObjectId" : "f0c5cc2a84dd65edd575963bf648a1481f9b1dde",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/eigen/3.2.9/unsupported/test/CMakeLists.txt" : {
      "ObjectId" : "097b5202f0da04a3e9e963058ffbf7da89817536",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this test seems to never have been successful on x87, so is considered to contain a FP-related bug.\n\n# see thread: \"non-linear optimization test summary\"\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/exodusii/5.22b/exodus/CMakeLists.txt" : {
      "ObjectId" : "935da5a6f3d28d1c8e5bf2f0a28d081bec67d537",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Hack for HDF5\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/exodusii/5.22b/exodus/DartConfig.cmake" : {
      "ObjectId" : "5264ed81b5505b3c701cfcdd350bdf709c6db01e",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Dashboard is opened for submissions for a 24 hour period starting at\n\n# the specified NIGHLY_START_TIME. Time is specified in 24 hour format.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dart server to submit results (used by client)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Project Home Page\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "contrib/exodusii/5.22b/exodus/Makefile.am" : {
      "ObjectId" : "655e3399eccdd1aa0f8dbff9af1f9d2bfd9a0159",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# generally we do not install contributed headers, but Moose and\n\n# some client apps expect exodusII.h to be there when libMesh\n\n# is present. since we've implicitly guaranteed this for ~10 years\n\n# no need to break that trust now.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# additional sources required for Fortran API\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# import as much commonality as possible\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "contrib/exodusii/5.22b/exodus/cbind/CMakeLists.txt" : {
      "ObjectId" : "9aa54e90b47ab7aa0c18c0cf66044a20294046b1",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/exodusii/5.22b/exodus/cbind/test/CMakeLists.txt" : {
      "ObjectId" : "5374f7f9dfd295186e99168ee78a0ccdb9c6c6e8",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Always report error/warning messages during testing:\n\n# The ex_opts call precipitates the EXTRA_INCLUDE below.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ===============================================\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#SET( EXECUTABLE_OUTPUT_DIR ${CMAKE_CURRENT_BINARY_DIR} )\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "contrib/exodusii/5.22b/exodus/cmake/Dependencies.cmake" : {
      "ObjectId" : "4d0922ab8aa9a9265bcfb5853f4b4902dc39d1ed",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/exodusii/5.22b/exodus/forbind/CMakeLists.txt" : {
      "ObjectId" : "4a5e7c7f91eaa17d375334b2a0e7d340fd67fa3a",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set Mangling by hand \n\n# Assume _name mangling see src/exo_jack.c code for how ADDC_ will be used in\n\n# Fortran mangling\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hack for HDF5\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "contrib/exodusii/5.22b/exodus/forbind/test/CMakeLists.txt" : {
      "ObjectId" : "5d661478ad87271d97fb4775fccdaf96eb0b9cb7",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# NOTE: The \"LINKER_LANGUAGE CXX\" is used to workaround an issue with\n\n#       the trilinos cmake adding the pamgen and pamgen_extras libraries as\n\n#       a dependency.  These are C++ libraries and result in unresolved depedencies\n\n#       when built with shareable libraries on some platforms....\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "contrib/exodusii/5.22b/nemesis/CMakeLists.txt" : {
      "ObjectId" : "64aff5d8dabe911706681f326dd641e30de5be98",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Hack for HDF5\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/exodusii/5.22b/nemesis/Makefile.am" : {
      "ObjectId" : "7809050b99f3763fd71ccd14dc4f6e6439b95a8b",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# import as much commonality as possible\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#####################################################\n\n## support the ne_ctest_wrap function for 'make check'\n\n#check_PROGRAMS = \n\n#\n\n#if LIBMESH_DBG_MODE\n\n#  check_PROGRAMS            += ne_ctest_wrap-dbg\n\n#  ne_ctest_wrap_dbg_SOURCES  = ne_ctest_wrap.c\n\n#  ne_ctest_wrap_dbg_LDADD    = libdbg.la \\\n#\t\t\t       $(top_builddir)/contrib/exodusii/v5.22/exodus/cbind/libdbg.la \\\n#                               $(top_builddir)/contrib/netcdf/v4/liblib/libnetcdf.la\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#endif\n\n#\n\n#if LIBMESH_DEVEL_MODE\n\n#  check_PROGRAMS              += ne_ctest_wrap-devel\n\n#  ne_ctest_wrap_devel_SOURCES  = ne_ctest_wrap.c\n\n#  ne_ctest_wrap_devel_LDADD    = libdevel.la \\\n#\t\t\t         $(top_builddir)/contrib/exodusii/v5.22/exodus/cbind/libdevel.la \\\n#                                 $(top_builddir)/contrib/netcdf/v4/liblib/libnetcdf.la\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#endif\n\n#\n\n#if LIBMESH_OPT_MODE\n\n#  check_PROGRAMS            += ne_ctest_wrap-opt\n\n#  ne_ctest_wrap_opt_SOURCES  = ne_ctest_wrap.c\n\n#  ne_ctest_wrap_opt_LDADD    = libopt.la \\\n#\t\t\t       $(top_builddir)/contrib/exodusii/v5.22/exodus/cbind/libopt.la \\\n#                               $(top_builddir)/contrib/netcdf/v4/liblib/libnetcdf.la\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#endif\n\n#\n\n#TESTS = $(check_PROGRAMS)\n\n#CLEANFILES = ne_test.exoII\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "contrib/exodusii/Lib/Makefile.am" : {
      "ObjectId" : "589d7287a7fd7c89ebf8365ca4f348ddf455d376",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# generally we do not install contributed headers, but Moose and\n\n# some client apps expect exodusII.h to be there when libMesh\n\n# is present. since we've implicitly guaranteed this for ~10 years\n\n# no need to break that trust now.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# import as much commonality as possible\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "contrib/fparser/Makefile.am" : {
      "ObjectId" : "98087df56cab04ccc7e779ec47c5e59bd9f347f7",
      "LastModified" : "2018-06-09T02:09:39Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#FEATURE_FLAGS += -DFP_SUPPORT_TR1_MATH_FUNCS\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#FEATURE_FLAGS += -DFP_USE_THREAD_SAFE_EVAL\n\n#FEATURE_FLAGS += -DFP_USE_THREAD_SAFE_EVAL_WITH_ALLOCA\n\n#FEATURE_FLAGS += -DFP_NO_EVALUATION_CHECKS\n\n#FEATURE_FLAGS += -D_GLIBCXX_DEBUG\n\n#FEATURE_FLAGS += -DFP_DISABLE_SHORTCUT_LOGICAL_EVALUATION\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#FEATURE_FLAGS += -DFP_SUPPORT_MPFR_FLOAT_TYPE\n\n#FEATURE_FLAGS += -DFP_SUPPORT_GMP_INT_TYPE\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#FEATURE_FLAGS += -DFP_USE_STRTOLD\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We now explicitly require compiler support for std::move\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# none, append below\n\n# none, append below\n\n# none, append below\n\n# none, append below\n\n# none, append below\n",
        "Line" : 30,
        "CharPositionInLine" : 18
      },
      "6" : {
        "Text" : "# generally we do not install contributed headers, but for fparser.hh we\n\n# must because it can optionally be included directly by our\n\n# parsed_function.h\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# fpoptimizer/grammar_data.cc is a generated source, and this rule specifies how we build it.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# util/tree_grammar_parser is a utility which is required to build\n\n# fpoptimizer/grammar_data.cc.  But this file itself is only needed\n\n# when we are compiling with optimization support enabled.\n\n#\n\n# Note that we always need this rule, so 'make dist' will work\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# nothing fancy - don't use our compile flags for this utility code lest it be horribly slow\n",
        "Line" : 113,
        "CharPositionInLine" : 37
      },
      "10" : {
        "Text" : "# util/cpp_compress.hh\n",
        "Line" : 149,
        "CharPositionInLine" : 33
      },
      "11" : {
        "Text" : "# nothing fancy - don't use our compile flags for this utility code lest it be horribly slow\n",
        "Line" : 151,
        "CharPositionInLine" : 39
      },
      "12" : {
        "Text" : "# 'util/make_function_name_parser' is used to create extrasrc/fp_identifier_parser.inc,\n\n# but it seems to only define a snippet.  So for now we use the distributed version\n\n# of that file rather than treating it as a built source.\n\n# util_make_function_name_parser_SOURCES  = util/make_function_name_parser.cc util/cpp_compress.cc\n",
        "Line" : 154,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#  util_cpp_compress_CXXFLAGS = # nothing fancy - don't use our compile flags for this utility code lest it be horribly slow\n\n#  util_cpp_compress_SOURCES  = util/cpp_compress.hh util/cpp_compress.cc util/cpp_compress_main.cc\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# when doing 'make clean' we need to remove the generated sources\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# in case they weren't conditionally cleaned:\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# DISTCLEANFILES += util/cpp_compress\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# extrasrc/fp_opcode_add.inc is a generated source, and this rule specifies how we build it.\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Build up utility programs used to define parsing, not needed\n\n# for installation\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# noinst_PROGRAMS           += util/cpp_compress\n\n# noinst_PROGRAMS           += util/make_function_name_parser\n",
        "Line" : 195,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# when doing 'make clean' we need to remove the generated sources\n",
        "Line" : 200,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 21
    },
    "contrib/fparser/extrasrc/Makefile.am" : {
      "ObjectId" : "a056096778e8435dbd5de34cba80ea76848a6509",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# if we are building the development package, there is\n\n# nothing to do here, and fp_opcode_add.inc will get\n\n# generated. however, if we are building the release\n\n# version, we need to link it.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle linking source files\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "contrib/gmv/Makefile.am" : {
      "ObjectId" : "94b3267104c8b3e904d2437310b9f3b879bc586c",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# import as much commonality as possible\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/gzstream/Makefile.am" : {
      "ObjectId" : "552dea139a4e67baa0c6aafa945a829fb80eacd6",
      "LastModified" : "2018-06-09T02:09:39Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# import as much commonality as possible\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/laspack/Makefile.am" : {
      "ObjectId" : "b1ac56b15f95830b552d86d55fe87f57d0f6e04f",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#for #include \"libmesh/libmesh_config.h\"\n",
        "Line" : 1,
        "CharPositionInLine" : 41
      },
      "1" : {
        "Text" : "# import as much commonality as possible\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "contrib/libHilbert/Makefile.am" : {
      "ObjectId" : "de93d136d02bcd4f9f96b114984bb067746051b9",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# import as much commonality as possible\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/metis/GKlib/CMakeLists.txt" : {
      "ObjectId" : "67b600aa6c3313d50ae7792a333fd829e29c3dd5",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/metis/GKlib/GKlibSystem.cmake" : {
      "ObjectId" : "3fcc29108d0a1817597d5e40a8fd686d7bf52e6e",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Helper modules.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Setup options.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add compiler flags.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# GCC opts.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# GCC warnings.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Sun insists on -xc99.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Find OpenMP if it is requested.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add various definitions.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add various options\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Check for features.\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Custom check for TLS.\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This if checks if that value is cached or not.\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Finally set the official C flags.\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Find GKlib sources.\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "contrib/metis/GKlib/test/CMakeLists.txt" : {
      "ObjectId" : "372b0e2f43a22ce8cb0aa35e5b04d498ec88aeb9",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Where the header files reside\n\n#include_directories(../)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build program.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "contrib/metis/Makefile.am" : {
      "ObjectId" : "cc7cfc6f4a4998e0b68d158381d3816978f8a45b",
      "LastModified" : "2018-06-09T02:09:39Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#for #include \"libmesh/libmesh_config.h\"\n",
        "Line" : 4,
        "CharPositionInLine" : 42
      },
      "1" : {
        "Text" : "# import as much commonality as possible\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "contrib/metis/include/CMakeLists.txt" : {
      "ObjectId" : "9515a51b6e5a70bc272ce62f6003aa645d2ea305",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/metis/libmetis/CMakeLists.txt" : {
      "ObjectId" : "120e94d715b28c5a830d4859562b9e202b85e106",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add this directory for internal users.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find sources.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build libmetis.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "contrib/nanoflann/CMakeLists.txt" : {
      "ObjectId" : "2a0ba3f548e0b66547976d29f9fb56739a104256",
      "LastModified" : "2018-06-09T02:09:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# Root CMake file for nanoflann\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# dont mix relative and absolute paths in lib lists\n",
        "Line" : 8,
        "CharPositionInLine" : 30
      },
      "2" : {
        "Text" : "# allow target \"test\"\n",
        "Line" : 10,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "# Enable a high level of warnings.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The -Wno-long-long is required in 64bit systems when including sytem headers.\n\n# The -Wno-variadic-macros was needed for Eigen3, StdVector.h\n",
        "Line" : 15,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# Workaround: Eigen <3.4 produces *tons* of warnings in GCC >=6. See http://eigen.tuxfamily.org/bz/show_bug.cgi?id=1221\n",
        "Line" : 18,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# Solution Folder options:\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# allow target \"test\"\n",
        "Line" : 31,
        "CharPositionInLine" : 32
      },
      "8" : {
        "Text" : "# Extract library version into \"NANOFLANN_VERSION\"\n\n# -----------------------------------------------------\n\n# Look for: \"#define NANOFLANN_VERSION 0xABC\"\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Compiler options:\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Define nanoflann lib (header-only)\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Examples\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Benchmarks\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# 3rdparty Libraries\n",
        "Line" : 80,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Tests\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# --------------------------------------------------------------------\n\n# Install/uninstall targets\n\n# --------------------------------------------------------------------\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#--------------------------------------------------------------\n\n# If we are building the final step of the Debian package,\n\n#  save each library files in the corresponding directories:\n\n#--------------------------------------------------------------\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Values when building a Debian package ---------------\n",
        "Line" : 103,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# Values when building a Debian package\n",
        "Line" : 106,
        "CharPositionInLine" : 48
      },
      "19" : {
        "Text" : "# Values under normal conditions -----------------------\n",
        "Line" : 108,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# Values under normal conditions\n",
        "Line" : 110,
        "CharPositionInLine" : 68
      },
      "21" : {
        "Text" : "# Generate the pkg-config file:\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Set relative install directories\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Generate the cmake config and cmake config-version file:\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Uninstall target, for \"make uninstall\"\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "contrib/nanoflann/Makefile.am" : {
      "ObjectId" : "2e10f86035a0f6c5362839df0f238a8f18dc2443",
      "LastModified" : "2018-06-09T02:09:39Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# generally we do not install contributed headers, but\n\n# for nanoflann we will because of its tight inlining\n\n# in InverseDistanceInterpolation and friends\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "######################################################################\n\n#\n\n# Building the examples\n\n#\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "contrib/nanoflann/examples/CMakeLists.txt" : {
      "ObjectId" : "06607b02bb147ca0c318c4c878769d05abe77f0f",
      "LastModified" : "2018-06-09T02:09:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find Eigen3 for use in the examples\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try to find eigen3 with pkg-config\n",
        "Line" : 5,
        "CharPositionInLine" : 45
      },
      "2" : {
        "Text" : "# examples:\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adds the \"#include\" directory.\n",
        "Line" : 24,
        "CharPositionInLine" : 44
      },
      "CommentCount" : 4
    },
    "contrib/nemesis/Lib/Makefile.am" : {
      "ObjectId" : "c9ca5fb88861db4a39ececbfe45c6d6771c42b5a",
      "LastModified" : "2016-08-17T14:33:17Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# import as much commonality as possible\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/netcdf/netcdf-c-4.6.2/CMakeInstallation.cmake" : {
      "ObjectId" : "4ee9df9920469d149510dffc6d580aae19a3550a",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#####\n\n# Contains variables and settings used\n\n# by the CMake build system in order to\n\n# build binary installers.\n\n#####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##\n\n# Declare exclusions list used when building a source file.\n\n# NOTE!! This list uses regular expressions, NOT wildcards!!\n\n##\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Set options specific to the\n\n# Nullsoft Installation System (NSIS)\n\n###\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# Set debian-specific options used when\n\n# creating .deb.\n\n#\n\n# http://www.cmake.org/Wiki/CMake:CPackPackageGenerators\n\n###\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This should be set using the output of dpkg --print-architecture.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define a macro for getting the dpkg architecture.\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "##\n\n# Set Copyright, License info for CPack.\n\n##\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##\n\n# Create an 'uninstall' target.\n\n##\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##\n\n# Customize some of the package component descriptions\n\n##\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "contrib/netcdf/netcdf-c-4.6.2/CMakeLists.txt" : {
      "ObjectId" : "e440b4bb28bb4c45e8e99e6b70ef158c6a2064c7",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## This is a CMake file, part of Unidata's netCDF package.\n\n# Copyright 2012-2018, see the COPYRIGHT file for more information.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##################################\n\n# Set Project Properties\n\n##################################\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Minimum required CMake Version\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Project Name\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#####\n\n# Version Info:\n\n#\n\n# Release Version\n\n# Library Version\n\n# SO Version\n\n#\n\n# SO Version is computed from library version. See:\n\n# http://www.gnu.org/software/libtool/manual/libtool.html#Libtool-versioning\n\n#####\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Get system configuration, Use it to determine osname, os release, cpu. These\n\n# will be used when committing to CDash.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###\n\n# Allow for some customization of the buildname.\n\n# This will make it easier to identify different builds,\n\n# based on values passed from command line/shell scripts.\n\n#\n\n# For ctest scripts, we can use CTEST_BUILD_NAME.\n\n###\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###\n\n# End BUILDNAME customization.\n\n###\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# For CMAKE_INSTALL_LIBDIR\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Add custom CMake Module\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# auto-configure style checks, other CMake modules.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# A check to see if the system is big endian\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# A macro to check if a C linker supports a particular flag.\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Enable 'dist and distcheck'.\n\n# File adapted from http://ensc.de/cmake/FindMakeDist.cmake\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# End 'enable dist and distcheck'\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Set the build type.\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Set build type uppercase\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Determine the configure date.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "##\n\n# Allow for extra dependencies.\n\n##\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "################################\n\n# End Project Properties\n\n################################\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "################################\n\n# Set CTest Properties\n\n################################\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Copy the CTest customization file into binary directory, as required.\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Set Memory test program for non-MSVC based builds.\n\n# Assume valgrind for now.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Set variable to define the build type.\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "################################\n\n# End CTest Properties\n\n################################\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "################################\n\n# Compiler and Linker Configuration\n\n################################\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "##\n\n# Default building shared libraries.\n\n# BUILD_SHARED_LIBS is provided by/used by\n\n# CMake directly.\n\n##\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "##\n\n# We've had a request to allow for non-versioned shared libraries.\n\n# This seems reasonable enough to accommodate.  See\n\n# https://github.com/Unidata/netcdf-c/issues/228 for more info.\n\n##\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Set some default linux gcc & apple compiler options for\n\n# debug builds.\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Debugging flags\n",
        "Line" : 214,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Check to see if -Wl,--no-undefined is supported.\n",
        "Line" : 217,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Coverage tests need to have optimization turned off.\n",
        "Line" : 225,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Warnings for 64-to-32 bit conversions.\n",
        "Line" : 232,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# End default linux gcc & apple compiler options.\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Suppress CRT Warnings.\n\n# Only necessary for Windows\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#####\n\n# System inspection checks\n\n#####\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "################################\n\n# End Compiler Configuration\n\n################################\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "##\n\n# Configuration for post-install RPath\n\n# Adapted from http://www.cmake.org/Wiki/CMake_RPATH_handling\n\n##\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# use, i.e. don't skip the full RPATH for the build tree\n",
        "Line" : 277,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# when building, don't use the install RPATH already\n\n# (but later on when installing)\n",
        "Line" : 280,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# add the automatically determined parts of the RPATH\n\n# which point to directories outside the build tree to the install RPATH\n",
        "Line" : 288,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# the RPATH to be used when installing,\n\n# but only if it's not a system directory\n",
        "Line" : 292,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "##\n\n# End configuration for post-install RPath\n\n##\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "################################\n\n# Option checks\n\n################################\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# HDF5 cache variables.\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Set the appropriate compiler/architecture for universal OSX binaries.\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Macro for replacing '/MD' with '/MT'.\n\n# Used only on Windows, /MD tells VS to use the shared\n\n# CRT libs, MT tells VS to use the static CRT libs.\n\n#\n\n# Taken From:\n\n#   http://www.cmake.org/Wiki/CMake_FAQ#How_can_I_build_my_MSVC_application_with_a_static_runtime.3F\n\n#\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Option to use Static Runtimes in MSVC\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Option to build netCDF Version 2\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Option to build utilities\n",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Option to use MMAP\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Option to use examples.\n",
        "Line" : 384,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Option to automatically build netcdf-fortran.\n",
        "Line" : 387,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "###\n\n# Allow the user to specify libraries\n\n# to link against, similar to automakes 'LIBS' variable.\n\n###\n",
        "Line" : 412,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "###\n\n# End user-specified dependent libraries.\n\n###\n",
        "Line" : 434,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Option to use HDF4\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Check for include files, libraries.\n",
        "Line" : 442,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# End include files, libraries.\n",
        "Line" : 464,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# Look for the jpeglib.h header file.\n",
        "Line" : 469,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# Option to enable HDF4 file tests.\n",
        "Line" : 486,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# Option to Build DLL\n",
        "Line" : 499,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Did the user specify a default minimum blocksize for posixio?\n",
        "Line" : 509,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Build netCDF4\n",
        "Line" : 512,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Option Logging, only valid for netcdf4.\n",
        "Line" : 525,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Option to allow for strict null file padding.\n\n# See https://github.com/Unidata/netcdf-c/issues/657 for more information\n",
        "Line" : 542,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Option for building RPC\n",
        "Line" : 550,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "##\n\n# Option to Enable HDF5\n\n#\n\n# The HDF5 cmake variables differ between platform (linux/osx and Windows),\n\n# as well as between HDF5 versions.  As a result, this section is a bit convoluted.\n\n#\n\n# Note that the behavior seems much more stable across HDF5 versions under linux,\n\n# so we do not have to do as much version-based tweaking.\n\n#\n\n# At the end of it, we should have the following defined:\n\n#\n\n# * HDF5_C_LIBRARY\n\n# * HDF5_HL_LIBRARY\n\n# * HDF5_LIBRARIES\n\n# * HDF5_INCLUDE_DIR\n\n# *\n\n##\n",
        "Line" : 556,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "##\n\n# Accommodate developers who have hdf5 libraries and\n\n# headers on their system, but do not have a the hdf\n\n# .cmake files.  If this is the case, they should\n\n# specify HDF5_HL_LIB, HDF5_LIB, HDF5_INCLUDE_DIR manually.\n\n##\n",
        "Line" : 577,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "# We are seeking out HDF5 with Find Package.\n",
        "Line" : 591,
        "CharPositionInLine" : 64
      },
      "69" : {
        "Text" : "###\n\n# For now we assume that if we are building netcdf\n\n# as a shared library, we will use hdf5 as a shared\n\n# library. If we are building netcdf statically,\n\n# we will use a static library.  This can be toggled\n\n# by explicitly modifying NC_FIND_SHARED_LIBS.\n\n##\n",
        "Line" : 592,
        "CharPositionInLine" : 4
      },
      "70" : {
        "Text" : "#####\n\n# First, find the C and HL libraries.\n\n#\n\n# This has been updated to reflect what is in the hdf5\n\n# examples, even though the previous version of what we\n\n# had worked.\n\n#####\n",
        "Line" : 609,
        "CharPositionInLine" : 4
      },
      "71" : {
        "Text" : "##\n\n# Next, check the HDF5 version. This will inform which\n\n# HDF5 variables we need to munge.\n\n##\n",
        "Line" : 623,
        "CharPositionInLine" : 4
      },
      "72" : {
        "Text" : "##\n\n# Assert HDF5 version meets minimum required version.\n\n##\n",
        "Line" : 628,
        "CharPositionInLine" : 4
      },
      "73" : {
        "Text" : "##\n\n# Include the HDF5 include directory.\n\n##\n",
        "Line" : 648,
        "CharPositionInLine" : 4
      },
      "74" : {
        "Text" : "###\n\n# This is the block where we figure out what the appropriate\n\n# variables are, and we ensure that we end up with\n\n# HDF5_C_LIBRARY, HDF5_HL_LIBRARY and HDF5_LIBRARIES.\n\n###\n",
        "Line" : 657,
        "CharPositionInLine" : 4
      },
      "75" : {
        "Text" : "##\n\n# HDF5 1.8.15 defined HDF5_LIBRARIES.\n\n##\n",
        "Line" : 663,
        "CharPositionInLine" : 6
      },
      "76" : {
        "Text" : "# Depending on the install, either HDF5_hdf_library or\n\n# HDF5_C_LIBRARIES may be defined.  We must check for either.\n",
        "Line" : 683,
        "CharPositionInLine" : 6
      },
      "77" : {
        "Text" : "# There is a missing case in the above code so default it\n",
        "Line" : 697,
        "CharPositionInLine" : 2
      },
      "78" : {
        "Text" : "###\n\n# The following options are not used in Windows currently.\n\n###\n",
        "Line" : 702,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "# Find out if HDF5 was built with parallel support.\n\n# Do that by checking for the targets H5Pget_fapl_mpiposx and\n\n# H5Pget_fapl_mpio in ${HDF5_LIB}.\n",
        "Line" : 706,
        "CharPositionInLine" : 4
      },
      "80" : {
        "Text" : "# H5Pset_fapl_mpiposix and H5Pget_fapl_mpiposix have been removed since HDF5 1.8.12.\n\n# Use H5Pset_fapl_mpio and H5Pget_fapl_mpio, instead.\n\n# CHECK_LIBRARY_EXISTS(${HDF5_C_LIBRARY_hdf5} H5Pget_fapl_mpiposix \"\" HDF5_IS_PARALLEL_MPIPOSIX)\n",
        "Line" : 710,
        "CharPositionInLine" : 4
      },
      "81" : {
        "Text" : "#Check to see if HDF5 library has collective metadata APIs, (HDF5 >= 1.10.0)\n",
        "Line" : 721,
        "CharPositionInLine" : 4
      },
      "82" : {
        "Text" : "#Check to see if H5Z_SZIP exists in HDF5_Libraries. If so, we must use szip.\n",
        "Line" : 725,
        "CharPositionInLine" : 2
      },
      "83" : {
        "Text" : "#option to include HDF5 High Level header file (hdf5_hl.h) in case we are not doing a make install\n",
        "Line" : 760,
        "CharPositionInLine" : 2
      },
      "84" : {
        "Text" : "# Option to Build DAP2+DAP4 Clients\n",
        "Line" : 766,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Check to see if CURLOPT_USERNAME is defined.\n\n# It is present starting version 7.19.1.\n",
        "Line" : 787,
        "CharPositionInLine" : 2
      },
      "86" : {
        "Text" : "# Check to see if CURLOPT_PASSWORD is defined.\n\n# It is present starting version 7.19.1.\n",
        "Line" : 793,
        "CharPositionInLine" : 2
      },
      "87" : {
        "Text" : "# Check to see if CURLOPT_KEYPASSWD is defined.\n\n# It is present starting version 7.16.4.\n",
        "Line" : 799,
        "CharPositionInLine" : 2
      },
      "88" : {
        "Text" : "# Check to see if CURLINFO_RESPONSE_CODE is defined.\n\n# It showed up in curl 7.10.7.\n",
        "Line" : 805,
        "CharPositionInLine" : 2
      },
      "89" : {
        "Text" : "# Check to see if CURLINFO_HTTP_CONNECTCODE is defined.\n\n# It showed up in curl 7.10.7.\n",
        "Line" : 811,
        "CharPositionInLine" : 2
      },
      "90" : {
        "Text" : "# Check to see if CURLOPT_BUFFERSIZE is defined.\n\n# It is present starting version 7.59\n",
        "Line" : 817,
        "CharPositionInLine" : 2
      },
      "91" : {
        "Text" : "# Check to see if CURLOPT_TCP_KEEPALIVE is defined.\n\n# It is present starting version 7.25\n",
        "Line" : 823,
        "CharPositionInLine" : 2
      },
      "92" : {
        "Text" : "# Check for the math library so it can be explicitly linked.\n",
        "Line" : 835,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# Option to Enable DAP long tests, remote tests.\n",
        "Line" : 844,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# If netCDF4 and DAP, Option for DAP groups.\n",
        "Line" : 849,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# Enable some developer-only tests\n",
        "Line" : 856,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# Option to use bundled XGetopt in place of getopt(). This is mostly useful\n\n# for MSVC builds. If not building utilities, getopt() isn't required at all.\n",
        "Line" : 862,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# STDIO instead of posixio.\n",
        "Line" : 874,
        "CharPositionInLine" : 2
      },
      "98" : {
        "Text" : "# FFIO insteaad of PosixIO\n",
        "Line" : 880,
        "CharPositionInLine" : 2
      },
      "99" : {
        "Text" : "##\n\n# Enable Tests\n\n##\n",
        "Line" : 887,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# Options for CTest-based tests, dashboards.\n",
        "Line" : 894,
        "CharPositionInLine" : 2
      },
      "101" : {
        "Text" : "# Create a CTestConfig file from the template.\n",
        "Line" : 912,
        "CharPositionInLine" : 2
      },
      "102" : {
        "Text" : "###\n\n# This option dictates whether or not to turn on\n\n# tests which are known to fail.  This is not the\n\n# same thing as an 'expected failure'. Rather, these\n\n# are tests that will need to be fixed eventually.\n\n#\n\n# By placing them here, we can occasionaly turn this\n\n# flag on and see if any known failures have been\n\n# fixed in the course of code improvement/other bug\n\n# fixes.\n\n#\n\n# To use this, simply add as a fencepost around tests\n\n# which are known to fail.\n\n###\n",
        "Line" : 918,
        "CharPositionInLine" : 2
      },
      "103" : {
        "Text" : "###\n\n# End known-failures.\n\n###\n",
        "Line" : 935,
        "CharPositionInLine" : 2
      },
      "104" : {
        "Text" : "###\n\n# Option to enable extreme numbers during testing.\n\n###\n",
        "Line" : 941,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "# Enable Large file tests\n",
        "Line" : 949,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "# Location for large file tests.\n",
        "Line" : 959,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "# Temporary\n",
        "Line" : 967,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "# Linux specific large file support flags.\n\n# Modelled after check in CMakeLists.txt for hdf5.\n",
        "Line" : 973,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "# Enable Parallel IO with netCDF-4/HDF5 files using HDF5 parallel I/O.\n",
        "Line" : 991,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "# Options to enable parallel IO for classic formats with PnetCDF library.\n",
        "Line" : 1012,
        "CharPositionInLine" : 0
      },
      "111" : {
        "Text" : "# Check for ncmpi_create in libpnetcdf, define USE_PNETCDF\n\n# Does the user want to turn on PnetCDF read ability?\n",
        "Line" : 1017,
        "CharPositionInLine" : 2
      },
      "112" : {
        "Text" : "# Check PnetCDF version. Must be >= 1.6.0\n",
        "Line" : 1028,
        "CharPositionInLine" : 4
      },
      "113" : {
        "Text" : "# PnetCDF => parallel\n",
        "Line" : 1044,
        "CharPositionInLine" : 6
      },
      "114" : {
        "Text" : "# Options to enable use of fill values for elements causing NC_ERANGE\n",
        "Line" : 1054,
        "CharPositionInLine" : 0
      },
      "115" : {
        "Text" : "# enable or auto\n",
        "Line" : 1057,
        "CharPositionInLine" : 23
      },
      "116" : {
        "Text" : "# explicitly enabled\n",
        "Line" : 1060,
        "CharPositionInLine" : 6
      },
      "117" : {
        "Text" : "# Now ENABLE_ERANGE_FILL is either AUTO, ON, or OFF\n",
        "Line" : 1068,
        "CharPositionInLine" : 0
      },
      "118" : {
        "Text" : "# Options to use a more relaxed coordinate argument boundary check\n",
        "Line" : 1070,
        "CharPositionInLine" : 0
      },
      "119" : {
        "Text" : "# enable or auto\n",
        "Line" : 1073,
        "CharPositionInLine" : 35
      },
      "120" : {
        "Text" : "# explicitly enabled\n",
        "Line" : 1076,
        "CharPositionInLine" : 6
      },
      "121" : {
        "Text" : "# Now ENABLE_ZERO_LENGTH_COORD_BOUND is either AUTO, ON, or OFF\n",
        "Line" : 1084,
        "CharPositionInLine" : 0
      },
      "122" : {
        "Text" : "# check and conform with PnetCDF settings on ERANGE_FILL and RELAX_COORD_BOUND\n",
        "Line" : 1086,
        "CharPositionInLine" : 0
      },
      "123" : {
        "Text" : "# not set on command line\n",
        "Line" : 1095,
        "CharPositionInLine" : 41
      },
      "124" : {
        "Text" : "# user explicitly set this option on command line\n",
        "Line" : 1098,
        "CharPositionInLine" : 5
      },
      "125" : {
        "Text" : "# not set on command line\n",
        "Line" : 1115,
        "CharPositionInLine" : 53
      },
      "126" : {
        "Text" : "# user explicitly set this option on command line\n",
        "Line" : 1118,
        "CharPositionInLine" : 5
      },
      "127" : {
        "Text" : "# Enable Parallel Tests.\n",
        "Line" : 1139,
        "CharPositionInLine" : 0
      },
      "128" : {
        "Text" : "# Enable special filter test; experimental when using cmake.\n",
        "Line" : 1152,
        "CharPositionInLine" : 0
      },
      "129" : {
        "Text" : "# Determine whether or not to generate documentation.\n",
        "Line" : 1163,
        "CharPositionInLine" : 0
      },
      "130" : {
        "Text" : "# Offer the option to build internal documentation.\n",
        "Line" : 1167,
        "CharPositionInLine" : 2
      },
      "131" : {
        "Text" : "###\n\n#\n\n# If we are building release documentation, we need to set some\n\n# variables that will be used in the Doxygen.in template.\n\n###\n",
        "Line" : 1175,
        "CharPositionInLine" : 2
      },
      "132" : {
        "Text" : "# If not using release document configuration,\n\n# provide an option for server-based search.\n",
        "Line" : 1191,
        "CharPositionInLine" : 4
      },
      "133" : {
        "Text" : "# Option to turn on the TODO list in the doxygen-generated documentation.\n",
        "Line" : 1202,
        "CharPositionInLine" : 2
      },
      "134" : {
        "Text" : "# Specify whether or not 'dot' was found on the system path.\n",
        "Line" : 1219,
        "CharPositionInLine" : 2
      },
      "135" : {
        "Text" : "# Always enable DISKLESS\n",
        "Line" : 1227,
        "CharPositionInLine" : 0
      },
      "136" : {
        "Text" : "# By default, MSVC has a stack size of 1000000.\n\n# Allow a user to override this.\n",
        "Line" : 1231,
        "CharPositionInLine" : 0
      },
      "137" : {
        "Text" : "# By default, CMake sets the stack to 1000000.\n\n# Remove this limitation.\n\n# See here for more details:\n\n# http://www.cmake.org/pipermail/cmake/2009-April/028710.html\n",
        "Line" : 1235,
        "CharPositionInLine" : 2
      },
      "138" : {
        "Text" : "# Set some of the options as advanced.\n",
        "Line" : 1244,
        "CharPositionInLine" : 0
      },
      "139" : {
        "Text" : "################################\n\n# Option checks\n\n################################\n",
        "Line" : 1250,
        "CharPositionInLine" : 0
      },
      "140" : {
        "Text" : "# Library include checks\n",
        "Line" : 1254,
        "CharPositionInLine" : 0
      },
      "141" : {
        "Text" : "# Solve a compatibility issue in ncgen/, which checks\n\n# for NO_UNISTD_H\n",
        "Line" : 1257,
        "CharPositionInLine" : 0
      },
      "142" : {
        "Text" : "# Symbol Exists\n",
        "Line" : 1294,
        "CharPositionInLine" : 0
      },
      "143" : {
        "Text" : "# Type checks\n\n# Aliases for automake consistency\n",
        "Line" : 1302,
        "CharPositionInLine" : 0
      },
      "144" : {
        "Text" : "# Check whether to turn on or off CDF5 support.\n",
        "Line" : 1340,
        "CharPositionInLine" : 0
      },
      "145" : {
        "Text" : "# enable or auto\n",
        "Line" : 1344,
        "CharPositionInLine" : 19
      },
      "146" : {
        "Text" : "# explicitly enabled\n",
        "Line" : 1346,
        "CharPositionInLine" : 58
      },
      "147" : {
        "Text" : "# cannot support CDF5\n",
        "Line" : 1349,
        "CharPositionInLine" : 27
      },
      "148" : {
        "Text" : "# cannot support CDF5\n",
        "Line" : 1350,
        "CharPositionInLine" : 38
      },
      "149" : {
        "Text" : "# explicitly set by user or not set\n",
        "Line" : 1353,
        "CharPositionInLine" : 19
      },
      "150" : {
        "Text" : "# explicitly disabled by user\n",
        "Line" : 1355,
        "CharPositionInLine" : 21
      },
      "151" : {
        "Text" : "# __int64 is used on Windows for large file support.\n",
        "Line" : 1373,
        "CharPositionInLine" : 0
      },
      "152" : {
        "Text" : "# On windows systems, we redefine off_t as __int64\n\n# to enable LFS. This is true on 32 and 64 bit system.s\n\n# We must redefine SIZEOF_OFF_T to match.\n",
        "Line" : 1383,
        "CharPositionInLine" : 0
      },
      "153" : {
        "Text" : "# Check for various functions.\n",
        "Line" : 1390,
        "CharPositionInLine" : 0
      },
      "154" : {
        "Text" : "#CHECK_FUNCTION_EXISTS(alloca HAVE_ALLOCA)\n\n#####\n\n# End system inspection checks.\n\n#####\n",
        "Line" : 1421,
        "CharPositionInLine" : 0
      },
      "155" : {
        "Text" : "################################\n\n# Define Utility Macros\n\n################################\n",
        "Line" : 1426,
        "CharPositionInLine" : 0
      },
      "156" : {
        "Text" : "# Macro to append files to the EXTRA_DIST files.\n\n# Note: can only be used in subdirectories because of the use of PARENT_SCOPE\n",
        "Line" : 1430,
        "CharPositionInLine" : 0
      },
      "157" : {
        "Text" : "# A basic script used to convert m4 files\n",
        "Line" : 1440,
        "CharPositionInLine" : 0
      },
      "158" : {
        "Text" : "# If m4 is available, remove generated file if it exists.\n",
        "Line" : 1453,
        "CharPositionInLine" : 2
      },
      "159" : {
        "Text" : "# Binary tests, but ones which depend on value of 'TEMP_LARGE' being defined.\n",
        "Line" : 1467,
        "CharPositionInLine" : 0
      },
      "160" : {
        "Text" : "# Tests which are binary, but depend on a particular environmental variable.\n",
        "Line" : 1492,
        "CharPositionInLine" : 0
      },
      "161" : {
        "Text" : "# Build a binary used by a script, but don't make a test out of it.\n",
        "Line" : 1508,
        "CharPositionInLine" : 0
      },
      "162" : {
        "Text" : "# Binary tests which are used by a script looking for a specific name.\n",
        "Line" : 1525,
        "CharPositionInLine" : 0
      },
      "163" : {
        "Text" : "# Binary tests which are used by a script looking for a specific name.\n",
        "Line" : 1540,
        "CharPositionInLine" : 0
      },
      "164" : {
        "Text" : "#SET_PROPERTY(TEST ${F} PROPERTY FOLDER \"tests/\")\n",
        "Line" : 1544,
        "CharPositionInLine" : 4
      },
      "165" : {
        "Text" : "# A cmake script to print out information at the end of the configuration step.\n",
        "Line" : 1579,
        "CharPositionInLine" : 0
      },
      "166" : {
        "Text" : "##\n\n# Shell script Macro\n\n##\n\n# Determine if 'bash' is on the system.\n\n##\n",
        "Line" : 1629,
        "CharPositionInLine" : 0
      },
      "167" : {
        "Text" : "# A function used to create autotools-style 'yes/no' definitions.\n\n# If a variable is set, it 'yes' is returned. Otherwise, 'no' is\n\n# returned.\n\n#\n\n# Also creates a version of the ret_val prepended with 'NC',\n\n# when feature is true, which is used to generate netcdf_meta.h.\n",
        "Line" : 1662,
        "CharPositionInLine" : 0
      },
      "168" : {
        "Text" : "# A function used to create autotools-style 'yes/no' definitions.\n\n# If a variable is set, it 'yes' is returned. Otherwise, 'no' is\n\n# returned.\n\n#\n\n# Also creates a version of the ret_val prepended with 'NC',\n\n# when feature is true, which is used to generate netcdf_meta.h.\n",
        "Line" : 1678,
        "CharPositionInLine" : 0
      },
      "169" : {
        "Text" : "################################\n\n# End Macro Definitions\n\n################################\n",
        "Line" : 1693,
        "CharPositionInLine" : 0
      },
      "170" : {
        "Text" : "# Create config.h file.\n",
        "Line" : 1697,
        "CharPositionInLine" : 0
      },
      "171" : {
        "Text" : "# End autotools-style checs for config.h\n",
        "Line" : 1702,
        "CharPositionInLine" : 0
      },
      "172" : {
        "Text" : "#####\n\n# Set core names of the libraries.\n\n#####\n",
        "Line" : 1704,
        "CharPositionInLine" : 0
      },
      "173" : {
        "Text" : "#####\n\n# Set the true names of all the libraries, if customized by external project\n\n#####\n\n# Recurse into other subdirectories.\n",
        "Line" : 1709,
        "CharPositionInLine" : 0
      },
      "174" : {
        "Text" : "# For tests and utilities, we are no longer\n\n# exporting symbols but rather importing them.\n",
        "Line" : 1746,
        "CharPositionInLine" : 0
      },
      "175" : {
        "Text" : "# Enable Utilities.\n",
        "Line" : 1752,
        "CharPositionInLine" : 0
      },
      "176" : {
        "Text" : "# Enable tests\n",
        "Line" : 1760,
        "CharPositionInLine" : 0
      },
      "177" : {
        "Text" : "# Code to generate an export header\n\n#GENERATE_EXPORT_HEADER(netcdf\n\n# BASE_NAME netcdf\n\n# EXPORT_MACRO_NAME netcdf_EXPORT\n\n# EXPORT_FILE_NAME netcdf_Export.h\n\n# STATIC_DEFINE netcdf_BUILT_AS_STATIC\n\n#)\n",
        "Line" : 1782,
        "CharPositionInLine" : 0
      },
      "178" : {
        "Text" : "#####\n\n# Build doxygen documentation, if need be.\n\n#####\n",
        "Line" : 1790,
        "CharPositionInLine" : 0
      },
      "179" : {
        "Text" : "##\n\n# Brute force, grab all of the dlls from the dependency directory,\n\n# install them in the binary dir. Grab all of the .libs, put them\n\n# in the libdir.\n\n##\n",
        "Line" : 1795,
        "CharPositionInLine" : 0
      },
      "180" : {
        "Text" : "# Subdirectory CMakeLists.txt files should specify their own\n\n# 'install' files.\n\n# Including 'CPack' kicks everything off.\n",
        "Line" : 1814,
        "CharPositionInLine" : 0
      },
      "181" : {
        "Text" : "###\n\n# Create pkgconfig files.\n\n###\n",
        "Line" : 1824,
        "CharPositionInLine" : 0
      },
      "182" : {
        "Text" : "# Set\n",
        "Line" : 1832,
        "CharPositionInLine" : 0
      },
      "183" : {
        "Text" : "# Process all dependency libraries and create a string\n\n# used when parsing netcdf.pc.in\n",
        "Line" : 1839,
        "CharPositionInLine" : 0
      },
      "184" : {
        "Text" : "###\n\n# End pkgconfig, nc-config file creation.\n\n###\n",
        "Line" : 1888,
        "CharPositionInLine" : 0
      },
      "185" : {
        "Text" : "##\n\n# Print the configuration summary\n\n##\n",
        "Line" : 1892,
        "CharPositionInLine" : 0
      },
      "186" : {
        "Text" : "# Enable Makedist files.\n",
        "Line" : 1897,
        "CharPositionInLine" : 0
      },
      "187" : {
        "Text" : "#####\n\n# Configure and print the libnetcdf.settings file.\n\n#####\n",
        "Line" : 1901,
        "CharPositionInLine" : 0
      },
      "188" : {
        "Text" : "# Set variables to mirror those used by autoconf.\n\n# This way we don't need to maintain two separate template\n\n# files.\n",
        "Line" : 1905,
        "CharPositionInLine" : 0
      },
      "189" : {
        "Text" : "# Build *FLAGS for libnetcdf.settings.\n",
        "Line" : 1916,
        "CharPositionInLine" : 0
      },
      "190" : {
        "Text" : "# Remove libnetcdf from NC_LIBS.\n",
        "Line" : 1924,
        "CharPositionInLine" : 0
      },
      "191" : {
        "Text" : "# Generate file from template.\n",
        "Line" : 1946,
        "CharPositionInLine" : 0
      },
      "192" : {
        "Text" : "# Read in settings file, print out.\n\n# Avoid using system-specific calls so that this\n\n# might also work on Windows.\n",
        "Line" : 1951,
        "CharPositionInLine" : 0
      },
      "193" : {
        "Text" : "# Install libnetcdf.settings file into same location\n\n# as the libraries.\n",
        "Line" : 1958,
        "CharPositionInLine" : 0
      },
      "194" : {
        "Text" : "#####\n\n# End libnetcdf.settings section.\n\n#####\n",
        "Line" : 1964,
        "CharPositionInLine" : 0
      },
      "195" : {
        "Text" : "#####\n\n# Create 'netcdf_meta.h' include file.\n\n#####\n",
        "Line" : 1968,
        "CharPositionInLine" : 0
      },
      "196" : {
        "Text" : "#####\n\n# Build test_common.sh\n\n#####\n",
        "Line" : 1978,
        "CharPositionInLine" : 0
      },
      "197" : {
        "Text" : "#####\n\n# Build nc_test4/findplugin.sh\n\n#####\n",
        "Line" : 1986,
        "CharPositionInLine" : 0
      },
      "198" : {
        "Text" : "#####\n\n# Build ncdap_test|dap4_test/findtestserver[4].c\n\n#####\n",
        "Line" : 1996,
        "CharPositionInLine" : 0
      },
      "199" : {
        "Text" : "####\n\n# Export files\n\n####\n",
        "Line" : 2002,
        "CharPositionInLine" : 0
      },
      "200" : {
        "Text" : "# Create CMake package configuration files. With these, other packages using\n\n# cmake should be able to find netcdf using find_package and find_library.\n\n# The EXPORT call is paired with one in liblib.\n",
        "Line" : 2006,
        "CharPositionInLine" : 0
      },
      "201" : {
        "Text" : "# Create export configuration\n",
        "Line" : 2034,
        "CharPositionInLine" : 0
      },
      "202" : {
        "Text" : "####\n\n# End export files\n\n####\n",
        "Line" : 2048,
        "CharPositionInLine" : 0
      },
      "203" : {
        "Text" : "# CPack inclusion must come last.\n\n# INCLUDE(CPack)\n",
        "Line" : 2054,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 204
    },
    "contrib/netcdf/netcdf-c-4.6.2/CTestCustom.cmake" : {
      "ObjectId" : "4909748ecefdb576fe2e944bcc8f94e975549c41",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## This file is used to customize CTest.\n\n## See:\n\n##\n\n##  http://public.kitware.com/Wiki/CTest:Using_CTEST_and_CDASH_without_CMAKE\n\n##\n\n## for more information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/netcdf/netcdf-c-4.6.2/Makefile.am" : {
      "ObjectId" : "190ee19da2cb017051ce692a1615d961e3679b9a",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## This is a automake file, part of Unidata's netCDF package.\n\n# Copyright 2005-2018, see the COPYRIGHT file for more information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is the main automake file for netCDF. It builds the different\n\n# netcdf directories. Not all directories are built, depending on the\n\n# options selected during configure.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Ed Hartnett, Ward Fisher\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This directory stores libtool macros, put there by aclocal.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# These files get added to the distribution.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Does the user want to build the V2 API?\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Does the user want to build ncgen/ncdump?\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Does the user want to build the examples?\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Is the user building netCDF-4?\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Build the dap2 client\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#DAP4\n",
        "Line" : 59,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Build PnetCDF\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Build HDF4 if desired.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Optionally build plugins\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Define Test directories\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# This is the list of subdirs for which Makefiles will be constructed\n\n# and run. ncgen must come before ncdump, because their tests\n\n# depend on it.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Remove these generated files, for a distclean.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# The nc-config script helps the user build programs with netCDF.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# install libnetcdf.settings in lib directory.\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "####\n\n# Provide an entry to rebuild all the m4 generated files\n\n# List of files to create: WARNING leave off the extension\n\n####\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#####\n\n# If ENABLE_FORTRAN was turned on,\n\n# we have new make targets, build-netcdf-fortran and\n\n# install-netcdf-fortran.\n\n#####\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "###\n\n# build-netcdf-fortran\n\n###\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "###\n\n# install-netcdf-fortran\n\n###\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "contrib/netcdf/netcdf-c-4.6.2/cmake/ConfigUser.cmake" : {
      "ObjectId" : "e6b303152fcb3efe8553f58e5cb1235c4cbf887c",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# $Id: ConfigUser.cmake 9785 2012-02-29 09:56:54Z fwobbe $\n\n#\n\n# Copyright (c) 2012, Florian Wobbe\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to\n\n# deal in the Software without restriction, including without limitation the\n\n# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n\n# sell copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n\n# IN THE SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Use this file to override variables\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Where netcdf will be installed:\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# General root path to include and lib dirs:\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Location of HFD4, HDF5 and zlib\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Root directories of libs that are not in CMAKE_FIND_ROOT_PATH:\n\n#set (CURL_ROOT z:/software)\n\n#set (XDR_ROOT z:/software)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set build type can be: empty, Debug, Release, RelWithDebInfo or MinSizeRel\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Automatically adds compiler definitions to all subdirectories too.\n",
        "Line" : 46,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Disable all warnings\n",
        "Line" : 48,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# vim: textwidth=78 noexpandtab tabstop=2 softtabstop=2 shiftwidth=2\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "contrib/netcdf/netcdf-c-4.6.2/cmake/modules/FindHDF4.cmake" : {
      "ObjectId" : "66e23893815714757595e060a02a05f02542aa70",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# To be used by projects that make use of CMakeified hdf-4.2.5\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Find the HDF4 includes and get all installed hdf4 library settings from\n\n# HDF4-config.cmake file : Requires a CMake compatible hdf-4.2.6 or later \n\n# for this feature to work. The following vars are set if hdf4 is found.\n\n#\n\n# HDF4_FOUND               - True if found, otherwise all other vars are undefined\n\n# HDF4_INCLUDE_DIR         - The include dir for main *.h files\n\n# HDF4_FORTRAN_INCLUDE_DIR - The include dir for fortran modules and headers\n\n# HDF4_VERSION_STRING      - full version (e.g. 4.2.5)\n\n# HDF4_VERSION_MAJOR       - major part of version (e.g. 4.2)\n\n# HDF4_VERSION_MINOR       - minor part (e.g. 5)\n\n# \n\n# The following boolean vars will be defined\n\n# HDF4_ENABLE_PARALLEL - 1 if HDF4 parallel supported\n\n# HDF4_BUILD_FORTRAN   - 1 if HDF4 was compiled with fortran on\n\n# HDF4_BUILD_CPP_LIB   - 1 if HDF4 was compiled with cpp on\n\n# HDF4_BUILD_TOOLS     - 1 if HDF4 was compiled with tools on\n\n# \n\n# Target names that are valid (depending on enabled options)\n\n# will be the following\n\n#\n\n# hdf              : HDF4 C library\n\n# hdf_f90cstub     : used by Fortran to C interface\n\n# hdf_fortran      : Fortran HDF4 library\n\n# mfhdf            : HDF4 multi-file C interface library\n\n# xdr              : RPC library\n\n# mfhdf_f90cstub   : used by Fortran to C interface to multi-file library\n\n# mfhdf_fortran    : Fortran multi-file library\n\n# \n\n# To aid in finding HDF4 as part of a subproject set\n\n# HDF4_ROOT_DIR_HINT to the location where hdf4-config.cmake lies\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The HINTS option should only be used for values computed from the system.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Hard-coded guesses should still go in PATHS. This ensures that the user\n\n# environment can always override hard guesses.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# For backwards compatibility we set HDF4_INCLUDE_DIR to the value of\n\n# HDF4_INCLUDE_DIRS\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set HDF4_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "contrib/netcdf/netcdf-c-4.6.2/cmake/modules/FindMakeDist.cmake" : {
      "ObjectId" : "57f51753d1a05377544cf29c9b409f352088ae16",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - adds support for the 'make dist' and 'make distcheck' commands\t-*- cmake -*-\n\n#\n\n# Usage:\n\n#   add_makedist()    ... called exactly once per project in the top-level\n\n#                         CMakeLists.txt; it adds the 'dist' and 'distcheck'\n\n#                         targets\n\n#\n\n#   enable_makedist(...list-of-sources...)\n\n#                     ... called in every CMakeLists.txt which has source\n\n#                         files. Beside the listed sources, the CMakeLists.txt\n\n#                         file itself and all files listed in ${EXTRA_DIST}\n\n#                         will be added to the tarball\n\n#\n\n# This module implements the 'make dist' and 'make distcheck'\n\n# commands. When sources are given to enable_makedist() which are\n\n# having the 'GENERATED' property, they will be ignored unless\n\n# they are in ${EXTRA_DIST} or are having the EXTRADIST property.\n\n#\n\n# It supports the following variables:\n\n#\n\n#   MAKEDIST_TMPDIR   ... directory for temporary files\n\n#   MAKEDIST_PKGBASE  ... basename of the created tarball; defaults to\n\n#                         ${PACKAGE}-${VERSION} (see below)\n\n#   MAKEDIST_TARFLAGS ... flags which are used to create the tarball\n\n#   MAKEDIST_CMAKEFLAGS\n\n#                     ... flags which are given to 'cmake' by 'make distcheck'\n\n#   MAKEDIST_BUILDTARGETS\n\n#                     ... the build-targets tried by 'make distcheck';\n\n#                         defaults to nothing (--> all)\n\n#   MAKEDIST_CHECKTARGETS\n\n#                     ... the check-targets tried by 'make distcheck';\n\n#                         defaults to 'test'\n\n#   MAKEDIST_INSTALLTARGETS\n\n#                     ... the install-targets tried by 'make distcheck';\n\n#                         defaults to 'install'\n\n#\n\n#   EXTRA_DIST        ... set per CMakeLists.txt file to add non-source or\n\n#                         generated source files to the tarball\n\n#\n\n# Unless MAKEDIST_PKGBASE is modified, the following variables are\n\n# required to be set:\n\n#\n\n#   PACKAGE           ... name of the package (e.g. 'foo')\n\n#   VERSION           ... version of the package (e.g. '0.1.2')\n\n#\n\n#\n\n# Example:\n\n#   --- top-level CMakeLists.txt ---\n\n#   set(PACKAGE foo)\n\n#   set(VERSION 1.2.3)\n\n#\n\n#   find_package(MakeDist)\n\n#   add_subdirectory(foo)\n\n#\n\n#   add_makedist()\n\n#\n\n#   set(EXTRA_DIST COPYING)\n\n#   enable_makedist(config.h.in)\n\n#\n\n#       --> adds ./COPYING and ./config.h.in to the tarball\n\n#\n\n#   --- foo/CMakeLists.txt ---\n\n#   set_source_files_properties(\n\n#     ${CMAKE_CURRENT_BINARY_DIR}/generated-file-A.h\n\n#     ${CMAKE_CURRENT_BINARY_DIR}/generated-file-B.h\n\n#     ${CMAKE_CURRENT_BINARY_DIR}/generated-file-C.h\n\n#     PROPERTIES GENERATED TRUE)\n\n#\n\n#   set_source_files_properties(\n\n#     ${CMAKE_CURRENT_BINARY_DIR}/generated-file-A.h\n\n#     PROPERTIES EXTRADIST TRUE)\n\n#   set(EXTRA_DIST ${CMAKE_CURRENT_BINARY_DIR}/generated-file-B.h)\n\n#\n\n#   enable_makedist(\n\n#     foo.c\n\n#     ${CMAKE_CURRENT_BINARY_DIR}/generated-file-A.h\n\n#     ${CMAKE_CURRENT_BINARY_DIR}/generated-file-B.h\n\n#     ${CMAKE_CURRENT_BINARY_DIR}/generated-file-C.h)\n\n#\n\n#       --> adds ./foo/generated-file-{A,B}.h and ./foo/foo.c to the\n\n#           tarball, but not ${CMAKE_CURRENT_BINARY_DIR}/generated-file-C.h\n\n#\n\n# TODO/limitations:\n\n#   * works probably with the 'make' generator only\n\n#   * requires at least a SUSv3/POSIX compliant system; some parts\n\n#     (e.g. bzip2-tarballs) depend on some GNUisms; this should be\n\n#     made configurable perhaps\n\n#   * there could be added some more tests (e.g. gnit-style (check for\n\n#     existence of required files and a proper VERSION format))\n\n#   * it is somehow ugly, to see hundreds of 'Built target .distdir'\n\n#     messages\n\n#   * is is ugly that all sources must be specified for enable_makedist();\n\n#     there should be added support to 'cmake' to enumerate targets and\n\n#     their sources\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (C) 2006 Enrico Scholz <enrico.scholz@informatik.tu-chemnitz.de>\n\n#\n\n# Redistribution and use, with or without modification, are permitted\n\n# provided that the following conditions are met:\n\n# \n\n#    1. Redistributions must retain the above copyright notice, this\n\n#       list of conditions and the following disclaimer.\n\n#    2. The name of the author may not be used to endorse or promote\n\n#       products derived from this software without specific prior\n\n#       written permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n\n# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY\n\n# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\n\n# GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER\n\n# IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n\n# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n\n# IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# cleanup tmpdir\n",
        "Line" : 183,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# execute 'make .distdir'\n",
        "Line" : 187,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# set proper permissions\n",
        "Line" : 189,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# create the tarball\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# cleanup tmpdir\n",
        "Line" : 195,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# cleanup tmpdir and create directory layout\n",
        "Line" : 210,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# extract tarball\n",
        "Line" : 215,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# write-protect sources to detect modifies-sourcetree bugs\n",
        "Line" : 217,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# invoke 'cmake'\n",
        "Line" : 220,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# execute 'make build' and 'make check'\n",
        "Line" : 227,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# execute 'make install' without DESTDIR\n",
        "Line" : 232,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# write protect installation path to detect writing outside of DESTDIR\n",
        "Line" : 234,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# execute 'make install' with DESTDIR and move the files to a better location\n",
        "Line" : 236,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# generate list of files which were installed by the both 'make\n\n# install' commands above and compare them\n",
        "Line" : 240,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# cleanup tmpdir\n",
        "Line" : 246,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 17
    },
    "contrib/netcdf/netcdf-c-4.6.2/cmake/modules/FindSZIP.cmake" : {
      "ObjectId" : "dc972e5bd05d3e658337a8616c36cb70d82be675",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find SZIP library\n\n# - Derived from the FindTiff.cmake that is included with cmake\n\n# Find the native SZIP includes and library\n\n# This module defines\n\n#  SZIP_INCLUDE_DIRS, where to find tiff.h, etc.\n\n#  SZIP_LIBRARIES, libraries to link against to use SZIP.\n\n#  SZIP_FOUND, If false, do not try to use SZIP.\n\n#    also defined, but not for general use are\n\n#  SZIP_LIBRARY, where to find the SZIP library.\n\n#  SZIP_LIBRARY_DEBUG - Debug version of SZIP library\n\n#  SZIP_LIBRARY_RELEASE - Release Version of SZIP library\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MESSAGE (STATUS \"Finding SZIP library and headers...\" )\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "############################################\n\n#\n\n# Check the existence of the libraries.\n\n#\n\n############################################\n\n# This macro was taken directly from the FindQt4.cmake file that is included\n\n# with the CMake distribution. This is NOT my work. All work was done by the\n\n# original authors of the FindQt4.cmake file. Only minor modifications were\n\n# made to remove references to Qt and make this file more generally applicable\n\n#########################################################################\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if only the release version was found, set the debug variable also to the release version\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# if only the debug version was found, set the release variable also to the debug version\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# if the generator supports configuration types then set\n\n# optimized and debug libraries, or if the CMAKE_BUILD_TYPE has a value\n",
        "Line" : 44,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# if there are no configuration types and CMAKE_BUILD_TYPE has no value\n\n# then just use the release libraries\n",
        "Line" : 49,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# Make variables changeble to the advanced user\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Look for the library.\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Report the results.\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#############################################\n\n# Find out if SZIP was build using dll's\n\n#############################################\n\n# Save required variable\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Add SZIP_INCLUDE_DIR to CMAKE_REQUIRED_INCLUDES\n",
        "Line" : 156,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Restore CMAKE_REQUIRED_INCLUDES and CMAKE_REQUIRED_FLAGS variables\n",
        "Line" : 165,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#\n\n#############################################\n",
        "Line" : 168,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 15
    },
    "contrib/netcdf/netcdf-c-4.6.2/cmake/modules/FindXDR.cmake" : {
      "ObjectId" : "994dae159bcba055d25d312dce519970d4099dbd",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Find xdr\n\n# Find the native XDR includes and library\n\n#\n\n#  XDR_INCLUDE_DIRS  - where to find rpc/xdr.h\n\n#  XDR_LIBRARIES     - List of libraries when using xdr.\n\n#  XDR_FOUND         - True if xdr found.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/netcdf/netcdf-c-4.6.2/cmake/modules/FindZLIB.cmake" : {
      "ObjectId" : "4abb1d57787ba51498bea7ce32b242e915e4df2f",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find zlib\n\n# Find the native ZLIB includes and library.\n\n# Once done this will define\n\n#\n\n#  ZLIB_INCLUDE_DIRS   - where to find zlib.h, etc.\n\n#  ZLIB_LIBRARIES      - List of libraries when using zlib.\n\n#  ZLIB_FOUND          - True if zlib found.\n\n#\n\n#  ZLIB_VERSION_STRING - The version of zlib found (x.y.z)\n\n#  ZLIB_VERSION_MAJOR  - The major version of zlib\n\n#  ZLIB_VERSION_MINOR  - The minor version of zlib\n\n#  ZLIB_VERSION_PATCH  - The patch version of zlib\n\n#  ZLIB_VERSION_TWEAK  - The tweak version of zlib\n\n#\n\n# The following variable are provided for backward compatibility\n\n#\n\n#  ZLIB_MAJOR_VERSION  - The major version of zlib\n\n#  ZLIB_MINOR_VERSION  - The minor version of zlib\n\n#  ZLIB_PATCH_VERSION  - The patch version of zlib\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# only append a TWEAK version if it exists:\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set ZLIB_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "contrib/netcdf/netcdf-c-4.6.2/cmake/modules/windows/FindHDF5.cmake" : {
      "ObjectId" : "f01d649f53897f2a63058f3a3dbd213cd640769b",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\r\n\n# To be used by projects that make use of Cmakeified hdf5-1.8\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\r\n\n# Find the HDF5 includes and get all installed hdf5 library settings from\r\n\n# HDF5-config.cmake file : Requires a CMake compatible hdf5-1.8.5 or later \r\n\n# for this feature to work. The following vars are set if hdf5 is found.\r\n\n#\r\n\n# HDF5_FOUND               - True if found, otherwise all other vars are undefined\r\n\n# HDF5_INCLUDE_DIR         - The include dir for main *.h files\r\n\n# HDF5_FORTRAN_INCLUDE_DIR - The include dir for fortran modules and headers\r\n\n# HDF5_VERSION_STRING      - full version (e.g. 1.8.5)\r\n\n# HDF5_VERSION_MAJOR       - major part of version (e.g. 1.8)\r\n\n# HDF5_VERSION_MINOR       - minor part (e.g. 5)\r\n\n# \r\n\n# The following boolean vars will be defined\r\n\n# HDF5_ENABLE_PARALLEL  - 1 if HDF5 parallel supported\r\n\n# HDF5_BUILD_FORTRAN    - 1 if HDF5 was compiled with fortran on\r\n\n# HDF5_BUILD_CPP_LIB    - 1 if HDF5 was compiled with cpp on\r\n\n# HDF5_BUILD_TOOLS      - 1 if HDF5 was compiled with tools on\r\n\n# HDF5_BUILD_HL_LIB     - 1 if HDF5 was compiled with high level on\r\n\n# HDF5_BUILD_HL_CPP_LIB - 1 if HDF5 was compiled with high level and cpp on\r\n\n# \r\n\n# Target names that are valid (depending on enabled options)\r\n\n# will be the following\r\n\n#\r\n\n# hdf5              : HDF5 C library\r\n\n# hdf5_tools        : the tools library\r\n\n# hdf5_f90cstub     : used by Fortran to C interface\r\n\n# hdf5_fortran      : Fortran HDF5 library\r\n\n# hdf5_cpp          : HDF5 cpp interface library\r\n\n# hdf5_hl           : High Level library\r\n\n# hdf5_hl_f90cstub  : used by Fortran to C interface to High Level library\r\n\n# hdf5_hl_fortran   : Fortran High Level library\r\n\n# hdf5_hl_cpp       : High Level cpp interface library\r\n\n# \r\n\n# To aid in finding HDF5 as part of a subproject set\r\n\n# HDF5_ROOT_DIR_HINT to the location where hdf5-config.cmake lies\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The HINTS option should only be used for values computed from the system.\r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Hard-coded guesses should still go in PATHS. This ensures that the user\r\n\n# environment can always override hard guesses.\r\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# For backwards compatibility we set HDF5_INCLUDE_DIR to the value of\r\n\n# HDF5_INCLUDE_DIRS\r\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "contrib/netcdf/netcdf-c-4.6.2/dap4_test/CMakeLists.txt" : {
      "ObjectId" : "e846e9b921bd87ef70599886f6e9bd98f54642d5",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Base tests\n\n# The tests are set up as a combination of shell scripts and executables that\n\n# must be run in a particular order. It is painful but will use macros to help\n\n# keep it from being too bad.\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Change name (add '4') to avoid cmake\n\n# complaint about duplicate targets.\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#FILE(COPY ./baseline DESTINATION ${CMAKE_CURRENT_SOURCE_DIR})\n\n#FILE(COPY ./cdltestfiles DESTINATION ${CMAKE_CURRENT_SOURCE_DIR})\n\n#FILE(COPY ./daptestfiles DESTINATION ${CMAKE_CURRENT_SOURCE_DIR})\n\n#FILE(COPY ./dmrtestfiles DESTINATION ${CMAKE_CURRENT_SOURCE_DIR})\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Specify files to be distributed by 'make dist'\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#${CMAKE_CURRENT_SOURCE_DIR}/daptestfiles\n\n#${CMAKE_CURRENT_SOURCE_DIR}/dmrtestfiles\n\n#${CMAKE_CURRENT_SOURCE_DIR}/cdltestfiles\n\n#${CMAKE_CURRENT_SOURCE_DIR}/baseline\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "contrib/netcdf/netcdf-c-4.6.2/dap4_test/Makefile.am" : {
      "ObjectId" : "402a12318ef7c899eaa894c8f1e7e01b03ecebe2",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## This is a automake file, part of Unidata's netCDF package.\n\n# Copyright 2011, see the COPYRIGHT file for more information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file builds and runs DAP4 tests.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Put together AM_CPPFLAGS and AM_LDFLAGS.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#TEST_EXTENSIONS = .sh\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#SH_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver-verbose\n\n#sh_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver-verbose\n\n#LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver-verbose\n\n#TESTS_ENVIRONMENT = export SETX=1;\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set up the tests; do the .sh first, then .c\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# WARNING: these are unit tests, so they will not\n\n# appear in CMakeLists.txt\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# These rely on ncdump\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Note which tests depend on other tests. Necessary for make -j check.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Note: This program name was changed to findtestserver4\n\n# to avoid cmake complaint about duplicate targets.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# relies on ncdump\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#ENABLE_DAP4\n",
        "Line" : 57,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# This should only be left behind if using parallel io\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# One last thing\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# The shell file maketests.sh is used to build the testdata\n\n# for dap4 testing. It creates and fills the directories\n\n# daptestfiles, dmrtestfiles, and cdltestfiles\n\n# As a rule, this will only be invoked if there was a change\n\n# in the GenerateRaw.java program in the thredds tree.\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "contrib/netcdf/netcdf-c-4.6.2/dap4_test/baseline/CMakeLists.txt" : {
      "ObjectId" : "2332d8f855b5cda0ea09342335886c6f43a15fe7",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/netcdf/netcdf-c-4.6.2/dap4_test/baselineraw/CMakeLists.txt" : {
      "ObjectId" : "2332d8f855b5cda0ea09342335886c6f43a15fe7",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/netcdf/netcdf-c-4.6.2/dap4_test/baselineremote/CMakeLists.txt" : {
      "ObjectId" : "2332d8f855b5cda0ea09342335886c6f43a15fe7",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/netcdf/netcdf-c-4.6.2/dap4_test/cdltestfiles/CMakeLists.txt" : {
      "ObjectId" : "2332d8f855b5cda0ea09342335886c6f43a15fe7",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/netcdf/netcdf-c-4.6.2/dap4_test/daptestfiles/CMakeLists.txt" : {
      "ObjectId" : "2332d8f855b5cda0ea09342335886c6f43a15fe7",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/netcdf/netcdf-c-4.6.2/dap4_test/dmrtestfiles/CMakeLists.txt" : {
      "ObjectId" : "2332d8f855b5cda0ea09342335886c6f43a15fe7",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/netcdf/netcdf-c-4.6.2/dap4_test/misctestfiles/CMakeLists.txt" : {
      "ObjectId" : "2332d8f855b5cda0ea09342335886c6f43a15fe7",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/netcdf/netcdf-c-4.6.2/dap4_test/nctestfiles/CMakeLists.txt" : {
      "ObjectId" : "2332d8f855b5cda0ea09342335886c6f43a15fe7",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/netcdf/netcdf-c-4.6.2/docs/CMakeLists.txt" : {
      "ObjectId" : "70a8bf7add4fefcb0638e42ebe8fa0bb90442ee4",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#####\n\n# Build doxygen documentation, if need be.\n\n#####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The following is redundant but does not hurt anything.\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Set abs_top_srcdir to work with the autotools\n\n# doxyfile template.\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Create general and guide doxyfiles.\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Generate User Documentation\n",
        "Line" : 19,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Create auth.html with some sed commands.\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# If ENABLE_DOXYGEN_LATEX_OUTPUT is true, automatically build\n\n# the PDF files.\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Process 'main' netcdf documentation.\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Copy the image files used by markdown documentation\n\n# manually.\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Should match list in Makefile.am\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "contrib/netcdf/netcdf-c-4.6.2/docs/Makefile.am" : {
      "ObjectId" : "3290059a11889ff3dcd5ca0706ecbef32e9679ff",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## This is a automake file, part of Unidata's netCDF package.\n\n# Copyright 2005-2011, see the COPYRIGHT file for more information.\n\n# This file builds the netcdf documentation.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These files will be included with the dist.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Turn off parallel builds in this directory.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# To build documentation you must have M4 in their path.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Copy man pages.\n\n#directory = $(top_srcdir)/docs/man/man3/\n\n#dist_man_MANS = $(docsdirectory)/man_page_1.3 $(directory)/man_page_2.3\n\n# $(directory)/man_page_1.3: doxyfile.stamp\n\n# $(directory)/man_page_2.3: doxyfile.stamp\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Note: in order to work with distcheck,\n\n# the Doxyfile needs to be preprocessed\n\n# to insert actual location of $(srcdir)\n\n#BUILT_SOURCES = Doxyfile.tmp\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Doxyfile.tmp: Doxyfile\n\n#\tsed -e 's|$$[({]rootdir[})]|$(abs_top_srcdir)|g' <Doxyfile > ./Doxyfile.tmp\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Timestamp to prevent rebuilds.\n\n# We must do this twice. The first time\n\n# builds the tag files. The second time\n\n# includes them in the documentation.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This builds the docs from source, if necessary, and tars up\n\n# everything needed for the website. Run this and copy the resulting\n\n# tarball to the /contents/netcdf/docs directory to update the on-line\n\n# docs.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "contrib/netcdf/netcdf-c-4.6.2/docs/images/Makefile.am" : {
      "ObjectId" : "341f444a03cbb5be06ec00cea9322222ffafa22b",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "contrib/netcdf/netcdf-c-4.6.2/examples/C/CMakeLists.txt" : {
      "ObjectId" : "191bc2d741e40835b37d6f42fcf4130830fe073d",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/netcdf/netcdf-c-4.6.2/examples/C/Makefile.am" : {
      "ObjectId" : "c4996e5e8eae9ca22edf3a2dee667c70cfbea211",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# This is a automake file, part of Unidata's netCDF package.\n\n# Copyright 2006, see the COPYRIGHT file for more information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file builds the C examples.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Ed Hartnett, Ward Fisher, Dennis Heimbigner\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Un comment to use a more verbose test driver\n\n#SH_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver-verbose\n\n#LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver-verbose\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# These are the netCDF-3 examples.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# To build netcdf-4, or not to build netcdf-4, that is the question...\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# These are the extra netCDF-4 examples.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# filter_example.c should be same as nc_test4/test_filter.c\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#USE_NETCDF4\n",
        "Line" : 34,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# These are the extra netCDF-4 examples.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#USE_PNETCDF\n",
        "Line" : 40,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "#USE_NETCDF4\n",
        "Line" : 47,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# These files are created by the tests.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "contrib/netcdf/netcdf-c-4.6.2/examples/CDL/CMakeLists.txt" : {
      "ObjectId" : "6507bb7d5de8c828f55d93d25cb9156769c360fb",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/netcdf/netcdf-c-4.6.2/examples/CDL/Makefile.am" : {
      "ObjectId" : "0af9bd3aa50aba0dfbb8067513e11473cd5e895f",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## This is a automake file, part of Unidata's netCDF package.\n\n# Copyright 2006, see the COPYRIGHT file for more information.\n\n# This file builds CDL examples.\n\n# Ed Hartnett\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note which tests depend on other tests. Necessary for make -j check.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# All we do is run two shell scripts, which create the sample files\n\n# and then compare them with the C versions of the examples.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Ship the scripts needed to create the sample files and compare them.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Clean up files created during the process.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "contrib/netcdf/netcdf-c-4.6.2/examples/CMakeLists.txt" : {
      "ObjectId" : "5a253c245aa005e36bb3a0ec484cd554d53e45d5",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/netcdf/netcdf-c-4.6.2/examples/Makefile.am" : {
      "ObjectId" : "52b9dd177d2f0e6be0775bb19c9380a7d47592e7",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## This is a automake file, part of Unidata's netCDF package.\n\n# Copyright 2005, see the COPYRIGHT file for more information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is the main automake file for netCDF. It builds the different\n\n# netcdf directories. Not all directories are built, depending on the\n\n# options selected during configure.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build ncgen/ncdump.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# These are the subdirectories that will be built. \n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "contrib/netcdf/netcdf-c-4.6.2/h5_test/CMakeLists.txt" : {
      "ObjectId" : "5b51ddfd86926378fd770b78d6f30658fc58d8e4",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/netcdf/netcdf-c-4.6.2/h5_test/Makefile.am" : {
      "ObjectId" : "f114d7cebd8f3fee7f879f7555f917975966abde",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# This is part of the netCDF package.\n\n# Copyright 2011 University Corporation for Atmospheric Research/Unidata\n\n# See COPYRIGHT file for conditions of use.\n\n#\n\n# This entire directory will be skipped, unless the configure script\n\n# is run with --enable-netcdf-4. This directory contains tests that\n\n# only use HDF5; these tests don't use netCDF at all.\n\n#\n\n# If one of these tests fails, then netCDF-4 will not work correctly.\n\n# Ed Hartnett, Ward Fisher\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set AM_CPPFLAGS and AM_LDFLAGS based on user choices.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# These programs test HDF5 to make sure it will do (some of) the stuff\n\n# that netCDF-4 needs.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If benchmarks were turned on, build and run a bunch more tests.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# BUILD_BENCHMARKS\n",
        "Line" : 27,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# List of tests to compile.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# List of tests to run.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The parallel program is run from a script.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# We must include these files in the distribution.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Clean up test results.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "contrib/netcdf/netcdf-c-4.6.2/hdf4_test/CMakeLists.txt" : {
      "ObjectId" : "0b42eb25f7d02564598f1257bee77bf8143f8d9f",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copy some test files from current source dir to out-of-tree build dir.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/netcdf/netcdf-c-4.6.2/hdf4_test/Makefile.am" : {
      "ObjectId" : "b0295db59d1b39584a4004627308f1a5314ecdb4",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# This is part of the netCDF package.\n\n# Copyright 2018 University Corporation for Atmospheric Research/Unidata\n\n# See COPYRIGHT file for conditions of use.\n\n#\n\n# This directory has tests for the HDF4 code. This directory will be\n\n# skipped if HDF4 is not enabled.\n\n#\n\n# Ed Hartnett\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Put together AM_CPPFLAGS and AM_LDFLAGS.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Link to our assembled library.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# These are the C tests for HDF4.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This test script depends on ncdump and tst_interops2.c.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# BUILD_UTILITIES\n",
        "Line" : 24,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# This test script fetches HDF4 files from an FTP server and uses\n\n# program tst_interops3.c to read them.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# USE_HDF4_FILE_TESTS\n",
        "Line" : 31,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# If valgrind is present, add valgrind targets.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "contrib/netcdf/netcdf-c-4.6.2/include/CMakeLists.txt" : {
      "ObjectId" : "bc72203fec1eeb87b0dbe6df49dcb231e7e25486",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#####\n\n# Installation of various netCDF headers.\n\n#####\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/netcdf/netcdf-c-4.6.2/include/Makefile.am" : {
      "ObjectId" : "5aaa9c4dfefc5fb66975ecdd85f340b955931b2f",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## This is a automake file, part of Unidata's netCDF package.\n\n# Copyright 2010, see the COPYRIGHT file for more information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This automake file generates the Makefile to build the include\n\n# directory.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Ed Hartnett, Dennis Heimbigner, Ward Fisher\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "contrib/netcdf/netcdf-c-4.6.2/libdap2/CMakeLists.txt" : {
      "ObjectId" : "a5bfb1023e64f5a76e0e431621af9e9478672857",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###\n\n# Options related to the man page generation.\n\n###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# The C API man page.\n\n###\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "contrib/netcdf/netcdf-c-4.6.2/libdap2/Makefile.am" : {
      "ObjectId" : "01bf244c17987ac524bc23fdedd5c5c77244ddf4",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## This is a automake file, part of Unidata's netCDF package.\n\n# Copyright 2005, see the COPYRIGHT file for more information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This automake file generates the Makefile to libdap2. Whatever that\n\n# is!\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Put together AM_CPPFLAGS and AM_LDFLAGS.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We may have to add to these later.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#SRC += cdf4.c constraints4.c ncd4dispatch.c ncdap4.c getvara4.c\n\n#HDRS +=constraints4.h ncd4dispatch.h ncdap4.h\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build convenience library\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#if USE_NETCDF4\n\n#LDADD += ${top_builddir}/libsrc4/libnetcdf4.la\n\n#endif\n\n#\n\n#LDADD += ${top_builddir}/libsrc/libnetcdf3.la\t\t\\\n#\t ${top_builddir}/oc2/liboc.la\t\t\t\\\n#\t ${top_builddir}/libdispatch/libdispatch.la\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ENABLE_DAP\n",
        "Line" : 52,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# These rule are used if someone wants to rebuild the grammar files.\n\n# Otherwise never invoked, but records how to do it.\n\n# BTW: note that renaming is essential because otherwise\n\n# autoconf will forcibly delete files of the name *.tab.*\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "contrib/netcdf/netcdf-c-4.6.2/libdap4/CMakeLists.txt" : {
      "ObjectId" : "ce586a498f3cd6a496a04c66de9c7dc2ca26c6cc",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###\n\n# Options related to the man page generation.\n\n###\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###\n\n# The C API man page.\n\n###\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "contrib/netcdf/netcdf-c-4.6.2/libdap4/Makefile.am" : {
      "ObjectId" : "3dd113090ebd9135dc4d0d30681bdb9b8a2bbf3c",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## This is a automake file, part of Unidata's netCDF package.\n\n# Copyright 2005, see the COPYRIGHT file for more information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This automake file generates the Makefile to libdap2. Whatever that\n\n# is!\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Put together AM_CPPFLAGS and AM_LDFLAGS.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We may have to add to these later.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#d4curlflags.c\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build convenience library\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ENABLE_DAP4\n",
        "Line" : 69,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Show what is needed to insert a new version of ezxml\n\n# primary fix: The original ezxml.[ch] uses '//' comments;\n\n# unpack and replace with '/*..*/'\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8,
      "Errorlog" : "line 78:22 token recognition error at: '\\1'\nline 79:22 token recognition error at: '\\1'\n"
    },
    "contrib/netcdf/netcdf-c-4.6.2/libdispatch/CMakeLists.txt" : {
      "ObjectId" : "9d274464c3401adcd4105c5d252d1ab37d6ba20c",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/netcdf/netcdf-c-4.6.2/libdispatch/Makefile.am" : {
      "ObjectId" : "9633bda48adbc94fef1b3696deb7b81499642c49",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## This is a automake file, part of Unidata's netCDF package.\n\n# Copyright 2005, see the COPYRIGHT file for more information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This Makefile controls the building of the dispatch layer of the\n\n# netCDF library. The dispatch layer decides whether to call the\n\n# netcdf-classic code, netcdf-4 code, nc3 dap code, or nc4 dap\n\n# code. It also contains code that sit above the dispatch layer, like\n\n# the v2 API.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Put together AM_CPPFLAGS and AM_LDFLAGS.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This is our output, the dispatch convenience library.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The source files.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add the utf8 codebase\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add functions only found in netCDF-4.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# USE_NETCDF4\n",
        "Line" : 32,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# Add V2 API convenience library if needed.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# BUILD_V2\n",
        "Line" : 39,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Build ncsettings.c as follows:\n\n# 1. copy ncsettings.hdr to ncsettings.c\n\n# 2. append libnetcdf.settings to ncsettings.c after\n\n#    processing it as follows:\n\n#    1. convert tabs and cr to blanks\n\n#    2. convert embedded double quote (\") to escaped form (\\\").\n\n#    3. append newline (\\n) to each line\n\n#    4. surround each line with double quotes.\n\n# 3. finally, add a semicolon to the end of ncsettings.c\n\n#    to complete the string constant.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Unit tests\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12,
      "Errorlog" : "line 59:20 token recognition error at: '\\1'\n"
    },
    "contrib/netcdf/netcdf-c-4.6.2/libhdf4/CMakeLists.txt" : {
      "ObjectId" : "533982e56318416b4099bb68443533132ff89964",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## This is a CMake file, part of Unidata's netCDF package.\n\n# Copyright 2018, see the COPYRIGHT file for more information.\n\n#\n\n# This builds the HDF4 dispatch layer.\n\n#\n\n# Ed Hartnett\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The source files for the HDF4 dispatch layer.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build the HDF4 dispatch layer as a library that will be included in\n\n# the netCDF library.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Remember to package this file for CMake builds.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "contrib/netcdf/netcdf-c-4.6.2/libhdf4/Makefile.am" : {
      "ObjectId" : "c1fd5eb21242722652a1eebd5d8752b122756266",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# This is part of Unidata's netCDF package. Copyright 2018, see the\n\n# COPYRIGHT file for more information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build the HDF4 dispatch layer.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Ed Hartnett\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Get AM_CPPFLAGS.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This is our output. The HDF4 convenience library.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The source files.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Package this for cmake build.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "contrib/netcdf/netcdf-c-4.6.2/libhdf5/CMakeLists.txt" : {
      "ObjectId" : "a29db3d9b4bea391216bcd59ad557f4f0cfe67f7",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## This is a CMake file, part of Unidata's netCDF package.\n\n# Copyright 2018, see the COPYRIGHT file for more information.\n\n#\n\n# This builds the HDF5 dispatch layer.\n\n#\n\n# Ed Hartnett\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The source files for the HDF5 dispatch layer.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build the HDF4 dispatch layer as a library that will be included in\n\n# the netCDF library.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Remember to package this file for CMake builds.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "contrib/netcdf/netcdf-c-4.6.2/libhdf5/Makefile.am" : {
      "ObjectId" : "1e98bce2f208c1ded83dc94ac33bae409356af24",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# This is part of Unidata's netCDF package. Copyright 2018, see the\n\n# COPYRIGHT file for more information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build the HDF5 dispatch layer.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Ed Hartnett\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Get AM_CPPFLAGS.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This is our output. The HDF5 convenience library.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The source files.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Package this for cmake build.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "contrib/netcdf/netcdf-c-4.6.2/liblib/CMakeLists.txt" : {
      "ObjectId" : "b8c5f1dbc19b9f0e5601f083cb32a120046844e7",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#####\n\n# Add target objects/modules based on options.\n\n#####\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make sure that netcdf.dll path does not include the build configuration\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#####\n\n# Add dependencies required for linking.\n\n#####\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add extra dependencies specified via NC_EXTRA_DEPS\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Some version of cmake define HDF5_hdf5_LIBRARY instead of\n\n# HDF5_LIBRARY. Same with HDF5_HL_LIBRARIES\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# The order of the libraries is important here for static\n\n# builds:\n\n# Make sure that HDF5_C_LIBRARY appears *after*\n\n# HDF5_HL_LIBRARY.\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Windows CMake defines HDF5_LIBRARIES.\n",
        "Line" : 80,
        "CharPositionInLine" : 9
      },
      "7" : {
        "Text" : "###\n\n# The INCLUDES directive was introduced in 2.8.12.\n\n# However, 2.8.11 is still the default on some\n\n# popular linux distributions. See\n\n# https://github.com/Unidata/netcdf-c/issues/135\n\n# for more information.\n\n###\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "contrib/netcdf/netcdf-c-4.6.2/liblib/Makefile.am" : {
      "ObjectId" : "02c0599fea64391c2655723ef8dbec189cb56ffc",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## This is a automake file, part of Unidata's netCDF package.\n\n# Copyright 2010, see the COPYRIGHT file for more information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This Makefile assembles the correct libnetcdf based on various\n\n# configure flags. It is assumed that all the relevant convenience\n\n# libraries have been built (e.g. libsrc, libsrc4, libncdap3, libcdmr,\n\n# libncdap4, fortran).\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Put together AM_CPPFLAGS and AM_LDFLAGS.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This is our output, the netcdf library the user will install.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##\n\n# These linker flags specify libtool version info.\n\n# See http://www.gnu.org/software/libtool/manual/libtool.html#Libtool-versioning\n\n# for information regarding incrementing `-version-info`.\n\n##\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The v2 API...\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# BUILD_V2\n",
        "Line" : 30,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# The output library will always include netcdf3 and dispatch\n\n# libraries\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# + PnetCDF\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# USE_PNETCDF\n",
        "Line" : 41,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# + hdf5\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# USE_NETCDF4\n",
        "Line" : 47,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# + hdf4\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# USE_HDF4\n",
        "Line" : 53,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# + dap\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ENABLE_DAP\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# ENABLE_DAP4\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# NetCDF-4 ...\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#USE_NETCDF4\n",
        "Line" : 73,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# Force binary mode for file read/write\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# We need at least one source file\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "contrib/netcdf/netcdf-c-4.6.2/libsrc/CMakeLists.txt" : {
      "ObjectId" : "e617b17e97b4b0c59ceba3de93f03c0303d1ed23",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## This is a CMake file, part of Unidata's netCDF package.\n\n# Copyright 2012-2013, see the COPYRIGHT file for more information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Process these files with m4.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The C API man page.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Generate the man page.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "contrib/netcdf/netcdf-c-4.6.2/libsrc/Makefile.am" : {
      "ObjectId" : "498673e40ade53a977848e427f5f85965c8bbb2a",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## This is an automake file, part of Unidata's netCDF package.\n\n# Copyright 2005, see the COPYRIGHT file for more information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This automake file is in charge of building the libsrc directory,\n\n# which contains the classic library code.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# These files comprise the netCDF-3 classic library code.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Does the user want to use ffio, a replacement for posixio for Cray\n\n# computers?\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# These files are cleaned on developer workstations (and then rebuilt\n\n# with m4), but they are included in the distribution so that the user\n\n# does not have to have m4.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This tells make how to turn .m4 files into .c files.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The C API man page.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Decide what goes in the man page, based on user configure options.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This rule generates the C manpage.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "contrib/netcdf/netcdf-c-4.6.2/libsrc4/CMakeLists.txt" : {
      "ObjectId" : "f54d652c3e4afcb13d0ff482c52b48f86480ed67",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Process these files with m4.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Files for make dist\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n\n# Options related to the man page generation.\n\n###\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# The C API man page.\n\n###\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "contrib/netcdf/netcdf-c-4.6.2/libsrc4/Makefile.am" : {
      "ObjectId" : "0c59d6ae8e3cc85d1b07fc91576dade5f5b4729d",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# This is part of Unidata's netCDF package.  Copyright 2005-2011, see\n\n# the COPYRIGHT file for more information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This automake file generates the Makefile to build netCDF-4.\n\n# Ed Hartnett\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is our output. The netCDF-4 convenience library.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "contrib/netcdf/netcdf-c-4.6.2/libsrcp/CMakeLists.txt" : {
      "ObjectId" : "7d8ab9cf375a352ab2ef734bfa681ad817be8a64",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/netcdf/netcdf-c-4.6.2/libsrcp/Makefile.am" : {
      "ObjectId" : "0747f35e9c031f36cc6539614657907a1b23b55d",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## This is an automake file, part of Unidata's netCDF package.\n\n# Copyright 2005, see the COPYRIGHT file for more information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This automake file is in charge of building the libsrc directory,\n\n# which contains the classic library code.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is the code for a dispatch table for PnetCDF\n\n# (which has CDF5 as its magic number)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# These files comprise the PnetCDF dispatch library code.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "contrib/netcdf/netcdf-c-4.6.2/nc_test/CMakeLists.txt" : {
      "ObjectId" : "0e5c94d1c44d15141a77ebae273526bcfdfa556d",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Some extra stand-alone tests\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build executables required for the shell scripts.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Process single-file test files.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Copy some test files from current source dir to out-of-tree build dir.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Specify files to be distributed by 'make dist'\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "contrib/netcdf/netcdf-c-4.6.2/nc_test/Makefile.am" : {
      "ObjectId" : "23e16db048271fcf37a2dae05586a0dae9ea91b4",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## This is a automake file, part of Unidata's netCDF package.\n\n# Copyright 2005, see the COPYRIGHT file for more information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file builds and runs the nc_test program, which tests the\n\n# netCDF-3 API for all formats.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Put together AM_CPPFLAGS and AM_LDFLAGS.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Note which tests depend on other tests. necessary for make -j check\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# These are the tests which are always run.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# These are the source files for the main workhorse test program,\n\n# nc_test. If you pass nc_test, you are doing well.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If the user asked for large file tests, then add them.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# LARGE_FILE_TESTS\n",
        "Line" : 47,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# Set up the tests.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Build Diskless test helpers\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# The .c files that are generated with m4 are already distributed, but\n\n# we also include the original m4 files, plus test scripts data.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# These files are created by the tests.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# bad_cdf5_begin.nc is a corrupted CDF-5 file with bad variable starting\n\n# file offsets. It is to be used by tst_open_cdf5.c to check if it can\n\n# detect and report error code NC_ENOTNC.\n",
        "Line" : 97,
        "CharPositionInLine" : 3
      },
      "13" : {
        "Text" : "# Only clean these on maintainer-clean, because they require m4 to\n\n# regenerate.\n\n#MAINTAINERCLEANFILES = test_get.c test_put.c\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This rule tells make how to turn our .m4 files into .c files.\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# If valgrind is present, add valgrind targets.\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "contrib/netcdf/netcdf-c-4.6.2/nc_test4/CMakeLists.txt" : {
      "ObjectId" : "824e27dd4b30651a7188d03d78e2cbe8f7808c34",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Some extra tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note, renamegroup needs to be compiled before run_grp_rename\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##\n\n# The shell script, run_empty_vlen_test.sh,\n\n# depends on the 'tst_empty_vlen_unlim' binary.\n\n##\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If the v2 API was built, add the test program.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Copy some test files from current source dir to out-of-tree build dir.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "contrib/netcdf/netcdf-c-4.6.2/nc_test4/Makefile.am" : {
      "ObjectId" : "2b26fdff82ef9710837bb80557046d8067eac7ce",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# This is part of the netCDF package. Copyright 2005-2018 University\n\n# Corporation for Atmospheric Research/Unidata See COPYRIGHT file for\n\n# conditions of use.\n\n#\n\n# This directory holds tests for netCDF-4. It is skipped if netCDF-4\n\n# is not enabled.\n\n#\n\n# Ed Hartnett, Ward Fisher\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Put together AM_CPPFLAGS and AM_LDFLAGS.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Un comment to use a more verbose test driver\n\n#SH_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver-verbose\n\n#LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver-verbose\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Note which tests depend on other tests. necessary for make -j check\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Link to our assembled library.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# These are netCDF-4 C test programs which are built and run.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Temporary I hope\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Build test programs plus programs used in test scripts.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add these if large file tests are turned on.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If the v2 API was built, add its test program.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# BUILD_V2\n",
        "Line" : 71,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# If benchmarks were turned on, build and run a bunch more tests.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# tst_create_files creates files for other tests.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# This will run a parallel I/O benchmark for parallel builds.\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This benchmark depends on tst_create_files being run.\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# TEST_PARALLEL4\n\n# BUILD_BENCHMARKS\n",
        "Line" : 104,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# Szip Tests (requires ncdump)\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Filter Tests (requires ncdump and ncgen)\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This are extra tests that will only be run if netcdf-4 is configured\n\n# with --enable-parallel-tests.\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# If valgrind is present, add valgrind targets.\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "contrib/netcdf/netcdf-c-4.6.2/ncdap_test/CMakeLists.txt" : {
      "ObjectId" : "603409269ba8ed092950a20a889299c198312f30",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Base tests\n\n# The tests are set up as a combination of shell scripts and executables that\n\n# must be run in a particular order. It is painful but will use macros to help\n\n# keep it from being too bad.\n\n# Binary Test Macro\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# not yet      add_sh_test(ncdap tst_hyrax)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##obsolete      add_bin_test(ncdap t_auth)\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n\n# This test relates to NCF-330 in\n\n# the Unidata JIRA system.\n\n###\n\n#add_bin_test(ncdap t_ncf330)\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "## Specify files to be distributed by 'make dist'\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "contrib/netcdf/netcdf-c-4.6.2/ncdap_test/Makefile.am" : {
      "ObjectId" : "0c4e5d9d838089afa686d0a8f33a2cf8148e0868",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## This is a automake file, part of Unidata's netCDF package.\n\n# Copyright 2011, see the COPYRIGHT file for more information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file builds and runs DAP tests.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Put together AM_CPPFLAGS and AM_LDFLAGS.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Un comment to use a more verbose test driver\n\n#SH_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver-verbose\n\n#LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver-verbose\n\n#TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver-verbose\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Note which tests depend on other tests. Necessary for make -j check.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set up the tests; do the .sh first, then .c\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# remote tests are optional\n\n# because the server may be down or inaccessible\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#TESTS += t_ncf330\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#ENABLE_DAP_REMOTE_TESTS\n",
        "Line" : 76,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "#ENABLE_DAP\n",
        "Line" : 78,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Need to add subdirs\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This should only be left behind if using parallel io\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# This rule are used if someone wants to rebuild t_dap3a.c\n\n# Otherwise never invoked, but records how to do it.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# One last thing\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# If valgrind is present, add valgrind targets.\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "contrib/netcdf/netcdf-c-4.6.2/ncdap_test/expected3/CMakeLists.txt" : {
      "ObjectId" : "d46021ec0430e0325b6722bbcf7586f1e6861688",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/netcdf/netcdf-c-4.6.2/ncdap_test/expected3/Makefile.am" : {
      "ObjectId" : "8e5c485f15e0d9d3bd38af698b480b2138d82db9",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## This is a automake file, part of Unidata's netCDF package.\n\n# Copyright 2007, see the COPYRIGHT file for more information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is to include the libnc-dap test comparison files\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# $Id: Makefile.am,v 1.9 2009/11/20 03:06:32 dmh Exp $\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "contrib/netcdf/netcdf-c-4.6.2/ncdap_test/expectremote3/CMakeLists.txt" : {
      "ObjectId" : "d46021ec0430e0325b6722bbcf7586f1e6861688",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/netcdf/netcdf-c-4.6.2/ncdap_test/expectremote3/Makefile.am" : {
      "ObjectId" : "4c562e7ff06670eaf6d4e26a2fa795880c19f0bd",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## This is a automake file, part of Unidata's netCDF package.\n\n# Copyright 2007, see the COPYRIGHT file for more information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is to include the libnc-dap test comparison files\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# $Id: Makefile.am,v 1.7 2009/11/22 06:17:54 dmh Exp $\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "contrib/netcdf/netcdf-c-4.6.2/ncdap_test/testdata3/CMakeLists.txt" : {
      "ObjectId" : "ce0734596c5a718ad2355291f8e6c29980b69c78",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/netcdf/netcdf-c-4.6.2/ncdap_test/testdata3/Makefile.am" : {
      "ObjectId" : "6cc497b9512e5b847d3f525ee82b22e5cb1fed33",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## This is a automake file, part of Unidata's netCDF package.\n\n# Copyright 2007, see the COPYRIGHT file for more information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is to include the libnc-dap test comparison files\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# $Id: Makefile.am,v 1.7 2009/05/30 21:28:53 dmh Exp $\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# following are not legally convertible to dap2\n\n#synth8.das synth8.dds synth8.dods\n\n#synth9.das synth9.dds synth9.dods\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "contrib/netcdf/netcdf-c-4.6.2/ncdump/CMakeLists.txt" : {
      "ObjectId" : "4201ef44a1d6fdb26276a8325f4990e33178d15e",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####\n\n# We have to do a little tweaking\n\n# to remove the Release/ and Debug/ directories\n\n# in MSVC builds.  This is required to get\n\n# test scripts to work.\n\n####\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Base tests\n\n# The tests are set up as a combination of shell scripts and executables that\n\n# must be run in a particular order. It is painful but will use macros to help\n\n# keep it from being too bad.\n",
        "Line" : 118,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "## Start adding tests in the appropriate order\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# The following test script invokes\n\n# gcc directly.\n",
        "Line" : 156,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Add this test by hand, as it is also called from a script.\n\n# Editing the script would break autotools compatibility.\n",
        "Line" : 181,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "###\n\n# This test fails on Visual Studio builds with bash.\n\n# It passes, but technically fails because the scientific\n\n# formatting omits a 0.\n\n###\n",
        "Line" : 187,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Known failure on MSVC; the number of 0's padding\n\n# is different, but the result is actually correct.\n",
        "Line" : 199,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "###\n\n# Some test reordering was required to ensure these tests\n\n# only ran after ncdump was built.\n\n###\n",
        "Line" : 216,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Note, the L512.bin file is file containing exactly 512 bytes each of value 0.\n\n# It is used for creating hdf5 files with varying offsets for testing.\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "contrib/netcdf/netcdf-c-4.6.2/ncdump/Makefile.am" : {
      "ObjectId" : "b01d0ea5f6d6df749a711f473b51d23640713416",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## This is a automake file, part of Unidata's netCDF package.\n\n# Copyright 2005, see the COPYRIGHT file for more information.\n\n# This file builds and runs the ncdump program.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ed Hartnett, Dennis Heimbigner, Ward Fisher\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#SH_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver-verbose\n\n#sh_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver-verbose\n\n#LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver-verbose\n\n#TESTS_ENVIRONMENT = export SETX=1;\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Put together AM_CPPFLAGS and AM_LDFLAGS.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Note which tests depend on other tests. Necessary for make -j check.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This is the program we're building, and it's sources.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Another utility program that copies any netCDF file using only the\n\n# netCDF API\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# A simple netcdf-4 metadata -> xml printer. Do not install.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Conditionally build the ocprint program, but do not install\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This is the man page.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C programs needed by shell scritps for classic tests.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Tests for classic and 64-bit offset files.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# The tst_nccopy3.sh test uses output from a bunch of other\n\n# tests. This records the dependency so parallel builds work.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# NetCDF-4 has some extra C programs to build. These will be run by\n\n# the shell script tests.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Tests for netCDF-4 behavior.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Record interscript dependencies so parallel builds work.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#!USE_NETCDF4\n",
        "Line" : 94,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# when BUILD_TESTSETS is false, we still need this rule\n",
        "Line" : 101,
        "CharPositionInLine" : 5
      },
      "18" : {
        "Text" : "# These files all have to be included with the distribution.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# The L512.bin file is file containing exactly 512 bytes each of value 0.\n\n# It is used for creating hdf5 files with varying offsets for testing.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# CDL files and Expected results\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "contrib/netcdf/netcdf-c-4.6.2/ncdump/cdl/CMakeLists.txt" : {
      "ObjectId" : "8c089e215e5eb70fc25b3b3acea573d364a5fc2a",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/netcdf/netcdf-c-4.6.2/ncdump/cdl/Makefile.am" : {
      "ObjectId" : "45a399800ece920ca11d9230b14d158844590129",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## This is a automake file, part of Unidata's netCDF package.\n\n# Copyright 2007, see the COPYRIGHT file for more information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is to include the libnc-dap test comparison files\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# $Id: Makefile.am,v 1.5 2010/04/27 18:50:44 dmh Exp $\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "contrib/netcdf/netcdf-c-4.6.2/ncdump/expected/CMakeLists.txt" : {
      "ObjectId" : "f5e836ea67fa969ad80ff52b1d847e0f286303d8",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/netcdf/netcdf-c-4.6.2/ncdump/expected/Makefile.am" : {
      "ObjectId" : "291f46937ff08b0e744dc5491ffc702c648eb141",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## This is a automake file, part of Unidata's netCDF package.\n\n# Copyright 2007, see the COPYRIGHT file for more information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is to include the test comparison files\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# These do not exist because they are not run as usual tests\n\n# bigf1.dmp bigf2.dmp bigf3.dmp bigr1.dmp bigr2.dmp bigr3.dmp gfs1.dmp\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "contrib/netcdf/netcdf-c-4.6.2/ncgen/CMakeLists.txt" : {
      "ObjectId" : "7314acef50d3f972fa967127fac2a68fe04d87b6",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# don't add the automatically determined parts of the RPATH\n\n# which point to directories outside the build tree to the install RPATH\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "####\n\n# We have to do a little tweaking\n\n# to remove the Release/ and Debug/ directories\n\n# in MSVC builds.  This is required to get\n\n# test scripts to work.\n\n####\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Copy the input for the flex file (ncgen.l)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Stuff to build if tests are enabled.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##\n\n# The following tests were moved to ncdump/, to ensure\n\n# that they are run in the proper order.\n\n##\n\n#add_sh_test(ncgen run_tests)\n\n#IF(USE_NETCDF4)\n\n#  add_sh_test(ncgen run_nc4_tests)\n\n#ENDIF()\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# These rules are used if someone wants to rebuild ncgeny.c or ncgenl.c\n\n# Otherwise never invoked, but records how to do it.\n\n# BTW: note that renaming is essential because otherwise\n\n# autoconf will forcibly delete files of the name *.tab.*\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Specify files to be distributed by 'make dist'\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "contrib/netcdf/netcdf-c-4.6.2/ncgen/Makefile.am" : {
      "ObjectId" : "9faf13c656aeb7c70d6bdd80e882e345f2eb06fe",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## This is a automake file, part of Unidata's netCDF package.\n\n# Copyright 2005, see the COPYRIGHT file for more information.\n\n# This file builds and runs the ncgen program.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Put together AM_CPPFLAGS and AM_LDFLAGS.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build ncgen from the listed sources.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This is the man page.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# These files all need to be distributed.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This shell script causes ncgen to build a classic and a 64-bit\n\n# offset file from a cdl file shipped with the distribution.\n\n#if !BUILD_DLL\n\n##\n\n# Moved to ncdump as these tests rely on ncdump having been built.\n\n##\n\n#TESTS = run_tests.sh\n\n#if USE_NETCDF4\n\n#TESTS += run_nc4_tests.sh\n\n#endif # USE_NETCDF4\n\n#endif # !BUILD_DLL\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# These rules are used if someone wants to rebuild ncgenl.c or ncgeny.c\n\n# Otherwise never invoked, but records how to do it.\n\n# BTW: note that renaming is essential because otherwise\n\n# autoconf will forcibly delete files of the name *.tab.*\n\n# Note also that this should be built under linux or cygwin\n\n# using bison version 3 or later.\n\n# Note also that this code is in a shell script if you do\n\n# not want to other to ./configure.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "contrib/netcdf/netcdf-c-4.6.2/ncgen3/CMakeLists.txt" : {
      "ObjectId" : "62ff36050fce1fc5875efcf77db5b81047808288",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####\n\n# We have to do a little tweaking\n\n# to remove the Release/ and Debug/ directories\n\n# in MSVC builds.  This is required to get\n\n# test scripts to work.\n\n####\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Specify files to be distributed by 'make dist'\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "contrib/netcdf/netcdf-c-4.6.2/ncgen3/Makefile.am" : {
      "ObjectId" : "e20f326ecc8a2c5b36aba8d195c622d744cffebf",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# This is a automake file, part of Unidata's netCDF package.\n\n# Copyright 2005, see the COPYRIGHT file for more information.\n\n# This file builds and runs the ncgen program.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver-verbose\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Put together AM_CPPFLAGS and AM_LDFLAGS.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Link to the netCDF library.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build ncgen from the listed sources.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# These files all need to be distributed.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# There is a netcdf classic and netcdf-4 test script, but don't run\n\n# them for DLL builds.\n\n#if !BUILD_DLL\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# USE_NETCDF4\n",
        "Line" : 30,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "#endif # !BUILD_DLL\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This is used if someone wants to rebuild ncgenyy.c or ncgentab.c\n\n# Otherwise never invoked, but records how to do it. Don't forget to\n\n# manually insert #include \"config.h\" in ncgenyy.c!\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "contrib/netcdf/netcdf-c-4.6.2/nctest/CMakeLists.txt" : {
      "ObjectId" : "230092bb043eee3b9196a2ac029a613644f9a39a",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###\n\n# Can't use macro since\n\n# there are multiple sources.\n\n###\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/netcdf/netcdf-c-4.6.2/nctest/Makefile.am" : {
      "ObjectId" : "0ac922b30b1b49ed06f31701ca08d0e320652249",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## This is a automake file, part of Unidata's netCDF package.\n\n# Copyright 2005, see the COPYRIGHT file for more information.  \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file builds and runs the nctest program, which tests the netCDF\n\n# version 2 interface.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Put together AM_CPPFLAGS and AM_LDFLAGS.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Running nctest results in a file testfile.nc, which is then checked\n\n# to make sure it matches testfile_nc.sav, which was generated under\n\n# precisely controlled conditions at the netCDF Test Facility,\n\n# (located in sub-basement 42 of UCAR Compound 4). testfile_nc.sav was\n\n# generated in a pressurized chamber that exactly simulated the\n\n# atmosphere on the surface of Mars.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Run nctest and the script that compares the output with the\n\n# reference file.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Note which tests depend on other tests. Necessary for make -j check.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# compare_test_files depends on nctest executing first.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# These are the source files for the nctest program.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# If valgrind is present, add valgrind targets.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "contrib/netcdf/netcdf-c-4.6.2/oc2/CMakeLists.txt" : {
      "ObjectId" : "92523aa54bf4020c2b1f7fbdacc1ab4428dacc38",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Apparently fails under cmake\n\n#set(ocprint_FILES ocprint.c )\n\n#ADD_EXECUTABLE(ocprint ${ocprint_FILES})\n\n#TARGET_LINK_LIBRARIES(ocprint oc2 ${ALL_TLL_LIBS})\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Specify files to be distributed by 'make dist'\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "contrib/netcdf/netcdf-c-4.6.2/oc2/Makefile.am" : {
      "ObjectId" : "b22889b6b8a33c59f56a5dd5361d77122b38b407",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## This is a automake file, part of Unidata's netCDF package.\n\n# Copyright 2005, see the COPYRIGHT file for more information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This automake file generates the Makefile to build netCDF-4. The\n\n# generated makefile is not run unless the user selected to build\n\n# netCDF-4.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# $Id: Makefile.am,v 1.1 2010/05/23 21:05:33 dmh Exp $\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Cause C preprocessor to search current and parent directory.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# OC Sources; include the dapy.[ch] to avoid the need for bison by user\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# These rule are used if someone wants to rebuild the grammar files.\n\n# Otherwise never invoked, but records how to do it.\n\n# BTW: note that renaming is essential because otherwise\n\n# autoconf will forcibly delete files of the name *.tab.*\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "contrib/netcdf/netcdf-c-4.6.2/plugins/CMakeLists.txt" : {
      "ObjectId" : "e5ba4e21d7e20ff6232f14498a9de6374aba98b2",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# LDFLAGS = -module -avoid-version -shared -export-dynamic -no-undefined\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note we use name test_bzip2 instead of bzip2 to avoid logical\n\n# target name clash with examples/C/hdf5plugins\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Copy some test files from current source dir to out-of-tree build dir.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "contrib/netcdf/netcdf-c-4.6.2/plugins/Makefile.am" : {
      "ObjectId" : "709a81485b105cde03adfab6b05d709d27923e2b",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#    Copyright 2018, UCAR/Unidata\n\n#    See netcdf/COPYRIGHT file for copying and redistribution conditions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# WARNING: This list must be kept consistent with the corresponding\n\n# AC_CONFIG_LINK commands near the end of configure.ac.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ENABLE_FILTER_TESTING\n",
        "Line" : 27,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "contrib/parmetis/Makefile.am" : {
      "ObjectId" : "d50a06b7e7ccbd9f7253319c00eba037f8969fa9",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# include paths - note that parmetis needs metis!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#for #include \"libmesh/libmesh_config.h\"\n",
        "Line" : 8,
        "CharPositionInLine" : 42
      },
      "2" : {
        "Text" : "# for a PETSc-provided MPI, if required\n",
        "Line" : 9,
        "CharPositionInLine" : 45
      },
      "3" : {
        "Text" : "# import as much commonality as possible\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "contrib/parmetis/include/CMakeLists.txt" : {
      "ObjectId" : "6a27074f47ad1702f89cf4ca9ec4ae12294bd3d3",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/parmetis/libparmetis/CMakeLists.txt" : {
      "ObjectId" : "9cfc8a719f3e904eddd290c9b6690b074fa75b4c",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include directories for library code.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find sources.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create libparmetis\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Link with metis and MPI libraries.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "contrib/qhull/2012.1/CMakeLists.txt" : {
      "ObjectId" : "98dbc705e29c035e6a8f68a8d725deead771d2ff",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt -- CMake configuration file for qhull, qhull6, and related programs\n\n#\n\n# To build with MSYS/mingw\n\n#   cd build && cmake -G \"MSYS Makefiles\" .. && cmake ..\n\n#   make\n\n#   make install\n\n#\n\n# To uninstall on unix or MSYS/mingw\n\n#   xargs rm <build/install_manifest.txt\n\n#\n\n# To build Qhull Visual Studio projects, run cmake twice\n\n#   mkdir -p build-cmake && cd build-cmake && cmake -G \"Visual Studio 8 2005\" .. && cmake ..\n\n#   Double click build-cmake/qhull-all.sln\n\n#   Build INSTALL for C:/Program Files/qhull\n\n#   You may need to copy bin/msvcr80.dll into C:/Program Files/qhull/bin\n\n#   If using library debug targets, please rename with '_d' (e.g., qhullstatic_d.lib)\n\n#\n\n# To uninstall on Windows\n\n#   Delete C:/Program Files/qhull\n\n#\n\n# For qhulltest, use the Qt build (src/qhull-all.pro)\n\n#\n\n# Qhull ships with cmake-derived sln and proj files\n\n#   See eg/make-vcproj.sh -- it created the first versions of these files\n\n#   Change to relative paths\n\n#   Remove ZERO_CHECK, ALL_BUILD, and INSTALL projects\n\n#   Change targets to bin/ and lib/ directories\n\n#   Disable incremental linking and ilk files (LinkIncremental=\"1\")\n\n#   Disable Run-Time Type Info (rtti)\n\n#   Remove src/libqhullcpp from most of the AdditionalIncludeDirectories\n\n#   Remove CMAKE_INTDIR from PreprocessorDefinitions\n\n#   Adjust target names and destinations (e.g., lib/libqhullstatic_d.a)\n\n#  \n\n# $Id: //main/2011/qhull/CMakeLists.txt#23 $$Change: 1494 $\n\n# $DateTime: 2012/02/21 22:41:40 $$Author: bbarber $\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Define qhull_VERSION in CMakeLists.txt, Makefile, qhull-exports.def, qhull_p-exports.def, and qhull-warn.pri\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# qhull_SOVERSION: 2003 = empty, 2009 = 5 , 2010-2012 = 6\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ---------------------------------------\n\n# Define library source files and variables\n\n#\n\n# Files for individual targets are defined with the target\n\n# ---------------------------------------\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Order libqhull object files by frequency of execution.  Small files at end.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Avoid name conflict with qhull executable\n",
        "Line" : 236,
        "CharPositionInLine" : 32
      },
      "6" : {
        "Text" : "# ---------------------------------------\n\n# Define shared library qhull without qh_QHpointer\n\n# ---------------------------------------\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ---------------------------------------\n\n# Define shared library qhull with qh_QHpointer\n\n# ---------------------------------------\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ---------------------------------------\n\n# Define static libraries qhullstatic and qhullstatic_p (qh_QHpointer)\n\n# ---------------------------------------\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ---------------------------------------\n\n# Define C++ static library qhullcpp (qh_QHpointer)\n\n# ---------------------------------------\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ---------------------------------------\n\n# Define qhull executables linked to qhullstatic library\n\n# ---------------------------------------\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ---------------------------------------\n\n# Define testqset linked to qset.o and mem.o\n\n# ---------------------------------------\n",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ---------------------------------------\n\n# Define user_eg linked to qhull shared library with qh_QHpointer\n\n# ---------------------------------------\n",
        "Line" : 380,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# user_eg may be linked to qhull_STATIC if user_eg_DEFINES is removed\n",
        "Line" : 387,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ---------------------------------------\n\n# Define user_eg2 linked to qhull shared library (e.g., Debian)\n\n# ---------------------------------------\n",
        "Line" : 392,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ---------------------------------------\n\n# Define user_eg3 linked to qhullstatic_p and qhullcpp static library\n\n# ---------------------------------------\n",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# libqhullcpp must be before src/libqhull.  The later is not needed.\n\n# Otherwise get error -- user_eg3.cpp:72: error: aggregate 'orgQhull::Qhull qhull' has incomplete type and cannot be defined\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# qhull_STATICP must be last, otherwise qh_fprintf,etc. are not loaded from qhull_CPP\n",
        "Line" : 412,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# ---------------------------------------\n\n# Define install\n\n# ---------------------------------------\n",
        "Line" : 417,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "contrib/qhull/2012.1/Makefile.am" : {
      "ObjectId" : "a4081eaa0b140c5cdb17b5bc8cc8cbf0fb9186ae",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# the -Dqh_QHpointer is required for linking the C++ API\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# libqhull c sources\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# libqhull c++ sources\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# import as much commonality as possible\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############################################################\n\n# What follows are the qhull executables.\n\n# We build them as part of the 'check' targets but do not\n\n# actually install them\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# static C library, *without* -Dqh_QHpointer\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# static C library, *with* -Dqh_QHpointer\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# static C++ library, requires -Dqh_QHpointer\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# empty, append below\n",
        "Line" : 140,
        "CharPositionInLine" : 17
      },
      "9" : {
        "Text" : "# All these targets were pulled straight\n\n# from the upstream Makefile\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "contrib/qhull/2012.1/config/Makefile.am" : {
      "ObjectId" : "f4792ca9be5714e0fb8ff312deb0d01f97d183d5",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "### Makefile.am for the qhull package (config)\n\n### Author: Rafael Laboissiere <rafael@debian.org>\n\n### Created: Mon Dec  3 21:36:21 CET 2001\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### Extra files to be included in the tarball\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "contrib/qhull/2012.1/src/libqhull/libqhull.pro" : {
      "ObjectId" : "a15830e8b1769313000ba869a7bb111892cf552e",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -------------------------------------------------\n\n# libqhull.pro -- Qt project for Qhull shared library\n\n#   Built with qh_QHpointer=1\n\n# -------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Order object files by frequency of execution.  Small files at end.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "contrib/qhull/2012.1/src/libqhullcpp/libqhullcpp.pro" : {
      "ObjectId" : "f91d1cc7c7d2e6af509158175f62191a85253afc",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -------------------------------------------------\n\n# libqhullcpp.pro -- Qt project for Qhull cpp shared library\n\n# -------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# libqhull/user.h\n",
        "Line" : 20,
        "CharPositionInLine" : 24
      },
      "2" : {
        "Text" : "# for MOC_DIR\n",
        "Line" : 23,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 3
    },
    "contrib/qhull/2012.1/src/libqhullp/libqhullp.pro" : {
      "ObjectId" : "d8248b1e168a808c6089faf8d164efccd75b869d",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -------------------------------------------------\n\n# libqhull.pro -- Qt project for Qhull shared library with qh_QHpointer\n\n#   Built with qh_QHpointer=1\n\n# -------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# libqhull/user.h\n",
        "Line" : 25,
        "CharPositionInLine" : 24
      },
      "CommentCount" : 2
    },
    "contrib/qhull/2012.1/src/libqhullstatic/libqhullstatic.pro" : {
      "ObjectId" : "1a516db73ca17b4265aec33ce966bff0b3fde14b",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -------------------------------------------------\n\n# libqhullstatic.pro -- Qt project for Qhull static library\n\n#   Built with qh_QHpointer=0.  See libqhullp.pro\n\n# -------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/qhull/2012.1/src/libqhullstaticp/libqhullstaticp.pro" : {
      "ObjectId" : "fd4e38d48df1765faace6f67445885336a92f271",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -------------------------------------------------\n\n# libqhullstaticp.pro -- Qhull static library with qh_qhPointer\n\n# -------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# libqhull/user.h\n",
        "Line" : 20,
        "CharPositionInLine" : 24
      },
      "CommentCount" : 2
    },
    "contrib/qhull/2012.1/src/qconvex/qconvex.pro" : {
      "ObjectId" : "1bf631bff666d876bed8f59979b03302f26e6eb0",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -------------------------------------------------\n\n# qconvex.pro -- Qt project file for qconvex.exe\n\n# -------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/qhull/2012.1/src/qdelaunay/qdelaunay.pro" : {
      "ObjectId" : "138ac0589d85bb9b1217860a44087f78acca264c",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -------------------------------------------------\n\n# qdelaunay.pro -- Qt project file for qvoronoi.exe\n\n# -------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/qhull/2012.1/src/qhalf/qhalf.pro" : {
      "ObjectId" : "ebad38789358840f6089e191037ad63487fc7049",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -------------------------------------------------\n\n# qhalf.pro -- Qt project file for qconvex.exe\n\n# -------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/qhull/2012.1/src/qhull-all.pro" : {
      "ObjectId" : "5d9b08a62514709ada3fc779dc8b057ec23395fc",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -------------------------------------------------\n\n# qhull-all.pro -- Qt project to build executables and static libraries\n\n#\n\n# To build with Qt on mingw\n\n#   Download Qt SDK, install Perl\n\n#   /c/qt/2010.05/qt> ./configure -static -platform win32-g++ -fast -no-qt3support\n\n#\n\n# To build DevStudio sln and proj files (Qhull ships with cmake derived files)\n\n# qmake is in Qt's bin directory\n\n# ../build> qmake -tp vc -r ../src/qhull-all.pro\n\n# Need to add Build Dependencies, disable rtti, rename targets to qhull.dll, qhull6_p.dll and qhull6_pd.dll\n\n# -------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#shared library\n\n#shared library with qh_QHpointer (libqhull/user.h)\n\n#user program linked to libqhull6_p (libqhullp)\n",
        "Line" : 17,
        "CharPositionInLine" : 27
      },
      "2" : {
        "Text" : "#static library\n\n#static library with qh_QHpointer\n\n#qhull programs linked to libqhullstatic\n",
        "Line" : 21,
        "CharPositionInLine" : 27
      },
      "3" : {
        "Text" : "#user program linked to libqhull\n\n#test program for qset.c with mem.c\n",
        "Line" : 29,
        "CharPositionInLine" : 27
      },
      "4" : {
        "Text" : "#static library for C++ interface with libqhullstaticp\n\n#user program with libqhullcpp and libqhullstaticp\n\n#test program with Qt, libqhullcpp, and libqhullstaticp\n",
        "Line" : 32,
        "CharPositionInLine" : 27
      },
      "CommentCount" : 5
    },
    "contrib/qhull/2012.1/src/qhull-app-c.pri" : {
      "ObjectId" : "20b064f7dee9e736248116a125fb5ba8faa8f2a0",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -------------------------------------------------\n\n# qhull-app-c.pri -- Qt include project for C qhull applications linked to libqhull\n\n# -------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/qhull/2012.1/src/qhull-app-cpp.pri" : {
      "ObjectId" : "953cba400044256389d4af35baf1a2e01ff3f831",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -------------------------------------------------\n\n# qhull-app-cpp.pri -- Qt include project for static CPP qhull applications using Qt\n\n# -------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Must be last, otherwise qh_fprintf,etc. are loaded from here instead of qhullcpp-d.lib\n",
        "Line" : 14,
        "CharPositionInLine" : 29
      },
      "2" : {
        "Text" : "# Must be last, otherwise qh_fprintf,etc. are loaded from here instead of qhullcpp.lib\n",
        "Line" : 18,
        "CharPositionInLine" : 28
      },
      "3" : {
        "Text" : "# libqhull/user.h\n",
        "Line" : 23,
        "CharPositionInLine" : 24
      },
      "4" : {
        "Text" : "# \"libqhull/qhull_a.h\"\n",
        "Line" : 26,
        "CharPositionInLine" : 25
      },
      "CommentCount" : 5
    },
    "contrib/qhull/2012.1/src/qhull-app-shared.pri" : {
      "ObjectId" : "0c8a191b12c7eaa151c672376f1122ff38ca3b74",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -------------------------------------------------\n\n# qhull-app-shared.pri -- Qt include project for C qhull applications linked with libqhull (shared library)\n\n# -------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# libqhull/user.h\n",
        "Line" : 22,
        "CharPositionInLine" : 38
      },
      "CommentCount" : 2
    },
    "contrib/qhull/2012.1/src/qhull-app-sharedp.pri" : {
      "ObjectId" : "3d0bbacaa3871ff567b978966cd1c67ced6fdaae",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -------------------------------------------------\n\n# qhull-app-sharedp.pri -- Qt include project for C qhull applications linked with libqhull6_p \n\n#   Compile code with -Dqh_QHpointer \n\n# -------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# libqhull/user.h\n",
        "Line" : 23,
        "CharPositionInLine" : 24
      },
      "2" : {
        "Text" : "# libqhull/user.h\n",
        "Line" : 24,
        "CharPositionInLine" : 48
      },
      "CommentCount" : 3
    },
    "contrib/qhull/2012.1/src/qhull-libqhull-src.pri" : {
      "ObjectId" : "cfa19cfba56e0c3a9a4e279c0ee83ddc7a9221ad",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -------------------------------------------------\n\n# qhull-libqhull-src.pri -- Qt include project for libqhull sources and headers\n\n#   libqhull.pro, libqhullp.pro, and libqhulldll.pro are the same for SOURCES and HEADERS\n\n# -------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Order object files by frequency of execution.  Small files at end.\n\n# Current directory is caller\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "contrib/qhull/2012.1/src/qhull-warn.pri" : {
      "ObjectId" : "42d6d56d5d9327d002101c22a8fa39fb311d0891",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -------------------------------------------------\n\n# qhull-warn.pri -- Qt project warnings for warn_on\n\n#   CONFIG += qhull_warn_all        # Qhull compiles with all warnings except for qhull_warn_shadow and qhull_warn_conversion\n\n#   CONFIG += qhull_warn_conversion # Warn in Qt and Qhull about conversion errors\n\n#   CONFIG += qhull_warn_error      # Turn warnings into errors\n\n#   CONFIG += qhull_warn_shadow     # Warn in Qt about shadowing of functions and fields\n\n# -------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# [apr'11] VERSION works erratically for msvc builds\n\n# VERSION = 6.3.1\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Uncomment to report warnings as errors\n\n#CONFIG += qhull_warn_error\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Shadowing occurs in Qt, e.g., nested foreach\n",
        "Line" : 28,
        "CharPositionInLine" : 47
      },
      "4" : {
        "Text" : "# libqhullstatic has many size_t vs. int warnings\n\n# libqhullstatic has no workaround for bit-field conversions\n\n# Qt has conversion errors for qbitarray and qpalette\n",
        "Line" : 32,
        "CharPositionInLine" : 55
      },
      "CommentCount" : 5
    },
    "contrib/qhull/2012.1/src/qhull/qhull.pro" : {
      "ObjectId" : "e70d1463f8e170f85ded3e3eb0b8ccd945f93b94",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -------------------------------------------------\n\n# qhull.pro -- Qt project file for qhull.exe\n\n# -------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/qhull/2012.1/src/qhulltest/qhulltest.pro" : {
      "ObjectId" : "dce14046c6ecc58c0d13898f4a69b4e4825a8949",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -------------------------------------------------\n\n# qhulltest.pro -- Qt project for qhulltest.exe (QTestLib)\n\n# -------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for MOC_DIR\n",
        "Line" : 10,
        "CharPositionInLine" : 19
      },
      "CommentCount" : 2
    },
    "contrib/qhull/2012.1/src/qvoronoi/qvoronoi.pro" : {
      "ObjectId" : "4646c84472d812873869b44377721ffde3a76903",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -------------------------------------------------\n\n# qvoronoi.pro -- Qt project file for qvoronoi.exe\n\n# -------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/qhull/2012.1/src/rbox/rbox.pro" : {
      "ObjectId" : "173e5aed05865d83eb7bd569a04db41fbf0e0f3e",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -------------------------------------------------\n\n# rbox.pro -- Qt project for rbox.exe\n\n# -------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/qhull/2012.1/src/testqset/testqset.pro" : {
      "ObjectId" : "b49c3371dbe144a870144f14b60e0583eac554a6",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -------------------------------------------------\n\n# testqset.pro -- Qt project file for testqset.exe\n\n# -------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/qhull/2012.1/src/user_eg/user_eg.pro" : {
      "ObjectId" : "090370b34ae9be1a86646c96a7b0cf2fe1748052",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -------------------------------------------------\n\n# user_eg.pro -- Qt project for Qhull demonstration\n\n# -------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/qhull/2012.1/src/user_eg2/user_eg2.pro" : {
      "ObjectId" : "b42336c5f722521b3902f33bbd6d1ea46ec4541a",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -------------------------------------------------\n\n# user_eg2.pro -- Qt project for Qhull demonstration using shared Qhull dll\n\n# -------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/qhull/2012.1/src/user_eg3/user_eg3.pro" : {
      "ObjectId" : "cb17b1709a0c218a9ded91300868a622023587b5",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -------------------------------------------------\n\n# user_eg3.pro -- Qt project for cpp demonstration user_eg3.exe\n\n# -------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/sfcurves/Makefile.am" : {
      "ObjectId" : "30f30861ede9831c346bf302f3b57bfa47878877",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# import as much commonality as possible\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/tecplot/binary/Makefile.am" : {
      "ObjectId" : "6cafd8afa9e2a96741bf395d81460697db1e69f9",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "contrib/tecplot/tecio/Makefile.am" : {
      "ObjectId" : "408fde2d44c04cdbbc99f54f68d3c7b7140ab4da",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# import as much commonality as possible\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/tecplot/tecio/examples/arrow/Makefile" : {
      "ObjectId" : "cdc36a820a2db157c67cde935851b5436f56ddd5",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set to appropriate C++ compiler\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/tecplot/tecio/examples/comtest/Makefile" : {
      "ObjectId" : "e3e7fa30573517120dcde5689203658025efed29",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set to appropriate C++ compiler\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/tecplot/tecio/examples/faceneighbors/Makefile" : {
      "ObjectId" : "59297c83fa33f0b077ad74e49402a81f3e7cc1c0",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set to appropriate C++ compiler\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/tecplot/tecio/examples/gridsolution/Makefile" : {
      "ObjectId" : "e087954bf347b6ab97ea0a53ae1d55e08aeaf45f",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set to appropriate C++ compiler\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/tecplot/tecio/examples/ij_ordered/Makefile" : {
      "ObjectId" : "0c7c1025772af3e491132a5110a52d452236c990",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set to appropriate C++ compiler\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/tecplot/tecio/examples/multiplefiles/Makefile" : {
      "ObjectId" : "86800bff028fcd7fd843adef2c0dea3dd508ff85",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set to appropriate C++ compiler\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/tecplot/tecio/examples/multiplepolygons/Makefile" : {
      "ObjectId" : "1412933a181cb7f2b359ac2ac6eaa6d8527f9398",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set to appropriate C++ compiler\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/tecplot/tecio/examples/octagon/Makefile" : {
      "ObjectId" : "504e8cd09235ad57eb539a6d263bd07d73059dd5",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set to appropriate C++ compiler\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/tecplot/tecio/examples/pyramid/Makefile" : {
      "ObjectId" : "e4bafdbeac780323fb98ec6f987d3c4157a93689",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set to appropriate C++ compiler\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/tecplot/tecio/examples/simtest/Makefile" : {
      "ObjectId" : "62d0e91cec6cec862b02f034799082a133eb43f9",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set to appropriate C++ compiler\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/tecplot/tecio/examples/squares/Makefile" : {
      "ObjectId" : "cf6c5b4e377cb5c49c74e2adeef0642313e21be7",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set to appropriate C++ compiler\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/tecplot/tecio/examples/text/Makefile" : {
      "ObjectId" : "fddba08e9b0341231fe7ae42e4bf140f0a91d91b",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set to appropriate C++ compiler\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "contrib/tecplot/tecio/tecsrc/CMakeLists.txt" : {
      "ObjectId" : "3b50bbab0ebf1fffaaeeb3e5691fdbe825c8c89b",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "contrib/tetgen/Makefile.am" : {
      "ObjectId" : "fa6252486e526955f22b4023c5c82bd41b2db13e",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# generally we do not install contributed headers, but for tetgen we\n\n# must because it can optionally be included directly by our\n\n# mesh_tetgen_wrapper.h\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# import as much commonality as possible\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "contrib/triangle/Makefile.am" : {
      "ObjectId" : "957d15c09ba2ea97f59142055eb419c435f3acfc",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# generally we do not install contributed headers, but for triangle we\n\n# must because it can optionally be included directly by our\n\n# mesh_triangle_interface.h\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#for #include \"libmesh/libmesh_config.h\"\n",
        "Line" : 9,
        "CharPositionInLine" : 44
      },
      "2" : {
        "Text" : "# import as much commonality as possible\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "doc/Makefile.am" : {
      "ObjectId" : "4b0144d2850a4a334413aadeb02f1421e8563c6c",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "doc/citations/Makefile" : {
      "ObjectId" : "53d0fd6b156ca818bb6118059d2b414692f0b538",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This target depends on all other PDFs existing.  It just combines\n\n# all of them into a single document.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create a single bibliography with all references.  This can be useful\n\n# for getting a total count of all citations.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sorted in reverse-date order.  make with e.g.\n\n# make libmesh_html SOURCE=nine.bib\n\n# Use --nobibsource to suppress the file with raw bibtex.\n\n# The single dash in -nofooter is apparently required?\n\n# -d sort by date\n\n# -r reverse the sort\n\n# --single produce a single page with both bibtex input and output\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO: Generate these tex files automatically from a template?\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "doc/html/Makefile.am" : {
      "ObjectId" : "dadbacfc74ad2f7f0cf3460d4b75ba35978e5e7e",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n# doxygen documentation - be sure to generate symlinks in include/libmesh!\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  need to link files for VPATH builds\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Mark doxygen as a phony target to build the documentation even when the\n\n# doxygen directory already exists.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "examples/Makefile.am" : {
      "ObjectId" : "3eb27a0da505a4378a4adba6acb44ad76314928b",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n# anything defined in 'data_DATA' will be installed in 'datadir'\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include our header checking script when doing 'make dist'\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "######################################################################\n\n#\n\n# What to do for 'make installcheck'\n\n#bindir=@bindir@/@host@_@METHOD@\n\n#libdir=@libdir@/@host@_@METHOD@\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "######################################################################\n\n#\n\n# What to do for 'make doc'\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "######################################################################\n\n#\n\n# Don't leave code coverage outputs lying around\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "examples/adaptivity/adaptivity_ex1/Makefile.am" : {
      "ObjectId" : "37f6f6a52756408d143eca9ed969d18f97dfeb31",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/adaptivity/adaptivity_ex2/Makefile.am" : {
      "ObjectId" : "72aec43ff537529bd1455aeb539eb2617043a10e",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# also need to link mesh.xda for VPATH builds\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/adaptivity/adaptivity_ex3/Makefile.am" : {
      "ObjectId" : "65df1923f0d47132d6b448b131907845a31369a3",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# need to link files for VPATH builds\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/adaptivity/adaptivity_ex4/Makefile.am" : {
      "ObjectId" : "bb84ce0439269d9046c0a576d7bd64889ba4a7a9",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# need to link files for VPATH builds\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/adaptivity/adaptivity_ex5/Makefile.am" : {
      "ObjectId" : "f6e4f7852b349f80728135c687bf28f66c4ea182",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/adjoints/adjoints_ex1/Makefile.am" : {
      "ObjectId" : "05585b7aa19a892cab6b9fbeb91ea52708b4db92",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# also need to link mesh.xda for VPATH builds\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/adjoints/adjoints_ex2/Makefile.am" : {
      "ObjectId" : "93d7e3d36b6cc79d4ddd1ff9316e94393dd98ff5",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# need to link lshaped.xda\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# femparameters.h\n",
        "Line" : 2,
        "CharPositionInLine" : 44
      },
      "2" : {
        "Text" : "#femparameters.h: $(top_srcdir)/examples/adjoints/adjoints_ex1/femparameters.h\n\n#\t$(AM_V_GEN)$(LN_S) -f $< .\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# also need to link input for VPATH builds\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "examples/adjoints/adjoints_ex3/Makefile.am" : {
      "ObjectId" : "12520c1552acd3d18b90afd422acea4f3e6845ec",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# femparameters.h\n",
        "Line" : 1,
        "CharPositionInLine" : 32
      },
      "1" : {
        "Text" : "#femparameters.h: $(top_srcdir)/examples/adjoints/adjoints_ex1/femparameters.h\n\n#\t$(AM_V_GEN)$(LN_S) -f $< .\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# also need links for VPATH builds\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "examples/adjoints/adjoints_ex4/Makefile.am" : {
      "ObjectId" : "36c070cf232f29464ab78c48ad84d9be1449d0bd",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# femparameters.h\n",
        "Line" : 1,
        "CharPositionInLine" : 32
      },
      "1" : {
        "Text" : "#femparameters.h: $(top_srcdir)/examples/adjoints/adjoints_ex1/femparameters.h\n\n#\t$(AM_V_GEN)$(LN_S) -f $< .\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# also need links for VPATH builds\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "examples/adjoints/adjoints_ex5/Makefile.am" : {
      "ObjectId" : "f5d2591ddfaf84b34402fe5a2c1b8600399f1e6b",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# femparameters.h\n",
        "Line" : 1,
        "CharPositionInLine" : 32
      },
      "1" : {
        "Text" : "#femparameters.h: $(top_srcdir)/examples/adjoints/adjoints_ex1/femparameters.h\n\n#\t$(AM_V_GEN)$(LN_S) -f $< .\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# also need links for VPATH builds\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "examples/adjoints/adjoints_ex6/Makefile.am" : {
      "ObjectId" : "b77c1d78ba1f912b9eeb1b9670690be717a6e0f3",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# also need links for VPATH builds\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/eigenproblems/eigenproblems_ex1/Makefile.am" : {
      "ObjectId" : "06398263bb542f4c123cd346f326c292cf93e29d",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# conditionally enable this test\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/eigenproblems/eigenproblems_ex2/Makefile.am" : {
      "ObjectId" : "0ad9d3bd16fd0c69d12003784db95dc40aa98d7f",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# conditionally enable this test\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/eigenproblems/eigenproblems_ex3/Makefile.am" : {
      "ObjectId" : "2a59ef9f3779bd9c9a6a6550f67a8346a6d1bd7d",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# conditionally enable this test\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# also need to link files for VPATH builds\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "examples/fem_system/fem_system_ex1/Makefile.am" : {
      "ObjectId" : "c3f958a1fd069f05a75dbedd1417ec91c4d13712",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# also need to link files for VPATH builds\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/fem_system/fem_system_ex2/Makefile.am" : {
      "ObjectId" : "4a28157fbf55bb5a4d78ba15e7071968a2a45e6e",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# also need to link files for VPATH builds\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/fem_system/fem_system_ex3/Makefile.am" : {
      "ObjectId" : "752e63346e7e873bd2533c2b99822153661bdce0",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# also need to link files for VPATH builds\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/fem_system/fem_system_ex4/Makefile.am" : {
      "ObjectId" : "ec2ecbb5638c1d53ebebc547c6915d86fee899d5",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# also need to link files for VPATH builds\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/introduction/introduction_ex1/Makefile.am" : {
      "ObjectId" : "a97fff1e09f29ecbccf0e919ccd737b429c23e0c",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/introduction/introduction_ex2/Makefile.am" : {
      "ObjectId" : "73e340e58f415acb2f93828232444f020493398d",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/introduction/introduction_ex3/Makefile.am" : {
      "ObjectId" : "ed80bf69a067374349174e8729f2922b3a27b520",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/introduction/introduction_ex4/Makefile.am" : {
      "ObjectId" : "47c3fa706f1a561f75140bfbc389fea30a6f2117",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/introduction/introduction_ex5/Makefile.am" : {
      "ObjectId" : "a8ef34815a411ceacb51e7faa37d9438190ea6dd",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/miscellaneous/miscellaneous_ex1/Makefile.am" : {
      "ObjectId" : "b09fb43ff0c001342c717263a0db1d26c3db2eb0",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# conditionally enable this test\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/miscellaneous/miscellaneous_ex10/Makefile.am" : {
      "ObjectId" : "997d0f2ca9c0164922375b4965dd81b3e15d7aa1",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/miscellaneous/miscellaneous_ex11/Makefile.am" : {
      "ObjectId" : "1d6203c03e380926499838ffa64d89850fce955d",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# also need to link files for VPATH builds\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/miscellaneous/miscellaneous_ex12/Makefile.am" : {
      "ObjectId" : "990addf2b20ccd7aa1905ae7a659b474923a1a79",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# also need to link files for VPATH builds\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/miscellaneous/miscellaneous_ex13/Makefile.am" : {
      "ObjectId" : "b393c5003ccf8c6e3e2bfe47607976ddc3297524",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# also need to link files for VPATH builds\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/miscellaneous/miscellaneous_ex14/Makefile.am" : {
      "ObjectId" : "337dcb479f8f66e317fedf74019fcdc9d520e997",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# conditionally enable this test\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/miscellaneous/miscellaneous_ex2/Makefile.am" : {
      "ObjectId" : "073685d76dadfc3685253578c951f2994b98ed8b",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# start empty, append below\n",
        "Line" : 1,
        "CharPositionInLine" : 15
      },
      "1" : {
        "Text" : "# conditionally enable this test\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# also need links for VPATH builds\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "examples/miscellaneous/miscellaneous_ex3/Makefile.am" : {
      "ObjectId" : "cfff047aed4a21d8117c31d9d42fe91ad291a715",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# need to link lshaped.xda\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/miscellaneous/miscellaneous_ex4/Makefile.am" : {
      "ObjectId" : "fa983350faa1f59a87c043321bbb1728ba0b5065",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/miscellaneous/miscellaneous_ex5/Makefile.am" : {
      "ObjectId" : "639d3c26af85ca6efd91e50cff8fcc887ba4d47d",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# need to link lshaped.xda\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# also need to link files for VPATH builds\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "examples/miscellaneous/miscellaneous_ex6/Makefile.am" : {
      "ObjectId" : "8b31da8ffb978dc584651ae52f97a7c6349cd868",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/miscellaneous/miscellaneous_ex7/Makefile.am" : {
      "ObjectId" : "1859040434107a4a9aa5c962643c12a0f3b3ac38",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/miscellaneous/miscellaneous_ex8/Makefile.am" : {
      "ObjectId" : "a9e496052fc7e48a5cdc1cb89badfb1348652f7f",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# conditionally enable this test\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# also need to link files for VPATH builds\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "examples/miscellaneous/miscellaneous_ex9/Makefile.am" : {
      "ObjectId" : "f7dd6a18cba5ccf2a13dcc8c964e77b6527ef03e",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# also need to link files for VPATH builds\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/optimization/optimization_ex1/Makefile.am" : {
      "ObjectId" : "fa217e788639386370bc68654e2091ccfaebc81c",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# also need to link files for VPATH builds\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/optimization/optimization_ex2/Makefile.am" : {
      "ObjectId" : "3cb13e0d0ca220b19a7e9095d144b0ea581f6c51",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# also need to link files for VPATH builds\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/reduced_basis/reduced_basis_ex1/Makefile.am" : {
      "ObjectId" : "cff09b81b26b552727b2b51d97207b101be211e1",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# also need to link files for VPATH builds\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/reduced_basis/reduced_basis_ex2/Makefile.am" : {
      "ObjectId" : "9cb42cf873fc792fff344af9328eb59e73903050",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# conditionally enable this test\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# also need to link files for VPATH builds\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "examples/reduced_basis/reduced_basis_ex3/Makefile.am" : {
      "ObjectId" : "e908e478e20eb7e91ef866f389679aee0b49905d",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# conditionally enable this test\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# also need to link files for VPATH builds\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "examples/reduced_basis/reduced_basis_ex4/Makefile.am" : {
      "ObjectId" : "891225fb9bb81f47f146351df97f7b355a2f5f2f",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# also need to link files for VPATH builds\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/reduced_basis/reduced_basis_ex5/Makefile.am" : {
      "ObjectId" : "41292bbe192ff2ffdd6c54ee561eb6c92ea1f56a",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# also need to link files for VPATH builds\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/reduced_basis/reduced_basis_ex6/Makefile.am" : {
      "ObjectId" : "0d20ad9201d5a51711d1331ffc0bca5e5349bba9",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# also need to link files for VPATH builds\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/reduced_basis/reduced_basis_ex7/Makefile.am" : {
      "ObjectId" : "8de58fb65c71b5abb1d2a759bf8251f0386ff477",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# also need to link files for VPATH builds\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/solution_transfer/solution_transfer_ex1/Makefile.am" : {
      "ObjectId" : "9bd232f83e48d9dea48730899382cd1588bdacf7",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/subdomains/subdomains_ex1/Makefile.am" : {
      "ObjectId" : "170e0dc74e5ee20575ca0b1388569c69fa6a669a",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/subdomains/subdomains_ex2/Makefile.am" : {
      "ObjectId" : "92107df5db03dd1abaa0c6012442fe5112acf9a3",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/subdomains/subdomains_ex3/Makefile.am" : {
      "ObjectId" : "b2205ec3155bdfa9021962006a0439c998afc8ba",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# also need to link hybrid_3d.xda for VPATH builds\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/systems_of_equations/systems_of_equations_ex1/Makefile.am" : {
      "ObjectId" : "5fe3c6ad78f0ec341083c5c8d0705edf5d035227",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/systems_of_equations/systems_of_equations_ex2/Makefile.am" : {
      "ObjectId" : "ba7f1fa2c3dd888cbad47ff89891d5643dbcd977",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/systems_of_equations/systems_of_equations_ex3/Makefile.am" : {
      "ObjectId" : "3ed359de7fe73c395fd1499e4cf4c5dfb93c8997",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/systems_of_equations/systems_of_equations_ex4/Makefile.am" : {
      "ObjectId" : "41e3794fc655d1116dcfb40e1f7ce3829c9b9fd9",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/systems_of_equations/systems_of_equations_ex5/Makefile.am" : {
      "ObjectId" : "05ddd48b5c529877599fa826a9592d3826a21fa3",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/systems_of_equations/systems_of_equations_ex6/Makefile.am" : {
      "ObjectId" : "a8a09c0dde1d0a17b8ec4272cea56c820dd89e80",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/systems_of_equations/systems_of_equations_ex7/Makefile.am" : {
      "ObjectId" : "cf95c320467e2540a1c4b48961b7b734323344b4",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# also need to link files for VPATH builds\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/systems_of_equations/systems_of_equations_ex8/Makefile.am" : {
      "ObjectId" : "bb7a3159cfb41f602da09c6b3a262d19bc7dc8bf",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# also need to link files for VPATH builds\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/systems_of_equations/systems_of_equations_ex9/Makefile.am" : {
      "ObjectId" : "6206aa8cce6c17b9f605004fb202acd856cf5a54",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/transient/transient_ex1/Makefile.am" : {
      "ObjectId" : "fd69f315e3c56f344ea3c7c8904d60c5d3dabd7a",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/transient/transient_ex2/Makefile.am" : {
      "ObjectId" : "732697116a8585dbbe89b11c840c48a9588cb456",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/vector_fe/vector_fe_ex1/Makefile.am" : {
      "ObjectId" : "912edff213acf31c7c806199745e8df99b18e6e6",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/vector_fe/vector_fe_ex2/Makefile.am" : {
      "ObjectId" : "dc6953a95c114405624f5a29ad0d985ec625d49b",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# also need to link files for VPATH builds\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/vector_fe/vector_fe_ex3/Makefile.am" : {
      "ObjectId" : "6f0dd5167207346415ae905249819eb2c5d06812",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Convergence too poor with default solvers\n",
        "Line" : 2,
        "CharPositionInLine" : 23
      },
      "1" : {
        "Text" : "# also need to link files for VPATH builds\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "examples/vector_fe/vector_fe_ex4/Makefile.am" : {
      "ObjectId" : "9baa1d957485e8f709499ff38dde9d716b6f8077",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Convergence too poor with default solvers\n",
        "Line" : 2,
        "CharPositionInLine" : 23
      },
      "1" : {
        "Text" : "# also need to link files for VPATH builds\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################\n\n# include common example environment\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "include/Makefile.am" : {
      "ObjectId" : "908af74b0fac8516edfc277b43366b972771f60e",
      "LastModified" : "2019-02-21T23:38:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# special handholding for prefix_config.m4 generated files\n\n# so that 'make clean ; make' works as does 'make distcheck'\n\n# libmesh_config.h is made by ./configure, so it should get\n\n# cleaned by 'make distclean'\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# special things to do when running 'make dist'\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# where to install our headers\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# definition of include_HEADERS - get from auto-maintained list\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# include our header checking script when doing 'make dist'\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "######################################################################\n\n#\n\n# What to do for 'make installcheck'\n\n#bindir=@bindir@/@host@_@METHOD@\n\n#libdir=@libdir@/@host@_@METHOD@\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# the actual header files we want to test for self-sufficiency\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# In order for the standalone header tests to be consistent, you must\n\n# pass *both* CPPFLAGS_xxx and CXXFLAGS_xxx to the script, otherwise\n\n# you miss the very important -DDEBUG/-DNDEBUG conditional compilation\n\n# flags!\n\n#\n\n# Note that for \"make test_headers\" this DEFAULT_HEADERS_TO_TEST business allows us\n\n# to selectively choose individual HEADERS_TO_TEST in the test_installed_headers.sh script,\n\n# e.g.\n\n# $ make HEADERS_TO_TEST=\"numerics/parsed_function.h  base/auto_ptr.h\" test_headers\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "include/libmesh/Makefile.am" : {
      "ObjectId" : "62de6c402325e02fa9c0013b7bb94afc78da8d8f",
      "LastModified" : "2019-03-29T13:12:28Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Note - this file is automatically generated by ./rebuild_makefile.sh\n\n# do not edit manually\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# include the magic script!\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# contrib rules\n",
        "Line" : 459,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# libmesh_config.h rule\n",
        "Line" : 531,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# libMesh header rules\n",
        "Line" : 539,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "tests/Makefile.am" : {
      "ObjectId" : "2ba74d99175a000f800ff2d84767e6b569f50750",
      "LastModified" : "2019-04-17T14:47:54Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# We might have turned on -Werror and/or paranoid warnings\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#EXTRA_DIST = base/getpot_test_input.in\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# empty, append below\n",
        "Line" : 106,
        "CharPositionInLine" : 17
      },
      "3" : {
        "Text" : "# empty, append below\n",
        "Line" : 107,
        "CharPositionInLine" : 18
      },
      "4" : {
        "Text" : "# our GLIBC debugging preprocessor flags seem to potentially conflict\n\n# with libcppunit binaries.  Some cppunit versions work fine for us,\n\n# others segfault and/or hang.  By default we will not run\n\n# GLIBCXX-debugging builds with cppunit unless specificallly\n\n# configured to.\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Recursive automake builds subdirectories before parent directories.\n\n# But here we need the subdirectory to be able to link to\n\n# already-built parent directory libraries.\n\n# For most of our modes, this means \"you can't run make check unless\n\n# make already completed\", which is an annoying bug; for the dbg\n\n# noinst case this means \"you can't run make unless make already\n\n# completed\", which is a devastating bug.\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# As a quick fix we'll ensure library dependencies are built manually:\n\n# http://lists.gnu.org/archive/html/automake/2009-03/msg00011.html\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# CLEANFILES only applies to files, handle directories separately\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "######################################################################\n\n#\n\n# Don't leave code coverage outputs lying around\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    }
  },
  "FileTypes" : {
    "CMAKE" : 196,
    "QMAKE" : 23,
    "MAKEFILE" : 13,
    "AUTOMAKE" : 129
  },
  "ElapsedTime" : 13157
}