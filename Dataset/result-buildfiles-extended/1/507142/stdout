{
  "Repository" : "507142",
  "Revision" : "HEAD",
  "ObjectId" : "3bf58ab0a82295740859ebdf459565647ad60b40",
  "CommitTime" : "2019-04-17T14:27:43Z",
  "Files" : {
    "attic/snowberry/apidoc/Makefile" : {
      "ObjectId" : "71e6614d1786d3e07e66977dc09148331562893e",
      "LastModified" : "2017-03-14T20:08:29Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "attic/wolftc/CMakeLists.txt" : {
      "ObjectId" : "fd6da4054846a7f17c3bbd0314c77f50f51c9abb",
      "LastModified" : "2017-03-14T20:08:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## deng build scripts. \n\n## Copyright © 2006 - 2007 Jamie Jones <jamie_jones_au@yahoo.com.au>\n\n## This file is licensed under the GNU GPLv3 or any later versions,\n\n##\n\n## the deng build scripts is free software; you can redistribute it and/or\n\n## modify it under the terms of the GNU General Public License as published by\n\n## the Free Software Foundation; either version 3 of the License, or\n\n## (at your option) any later version.\n\n##\n\n## the deng build scripts is distributed in the hope that it will be useful,\n\n## but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n## GNU General Public License for more details.\n\n##\n\n## You should have received a copy of the GNU General Public License\n\n## along with the deng build scripts; if not, write to the Free Software\n\n## Foundation, Inc., 51 Franklin St, Fifth Floor, \n\n## Boston, MA  02110-1301  USA\n\n##\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n\n######################## WolfTC Game Plugin  ###################################\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\n\n######################## Install Targets  ######################################\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "doomsday/CMakeLists.txt" : {
      "ObjectId" : "9b6f9609d3328cd335bfbe8dba8494e6f18f2299",
      "LastModified" : "2017-06-08T16:26:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Doomsday Engine - Main project file\n\n# This CMakeLists builds everything.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doomsday/apps/CMakeLists.txt" : {
      "ObjectId" : "3a0511080303134b68e6ac7a59dded99753edda4",
      "LastModified" : "2017-06-08T16:26:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Doomsday Engine - Applications\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doomsday/apps/client/CMakeLists.txt" : {
      "ObjectId" : "82e9417636c90e7552c7ac1bf834437e55b72fd2",
      "LastModified" : "2017-06-08T16:26:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The Doomsday Engine Project -- Client\n\n# Copyright (c) 2012-2017 Jaakko Keränen <jaakko.keranen@iki.fi>\n\n# Copyright (c) 2012-2014 Daniel Swanson <danij@dengine.net>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies --------------------------------------------------------------------------\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Sources and includes ------------------------------------------------------------------\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Can't merge due to GL deferred calls mechanism.\n",
        "Line" : 54,
        "CharPositionInLine" : 41
      },
      "4" : {
        "Text" : "# Documentation sources.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# WIX generator requires setting this manually.\n",
        "Line" : 82,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# Manual page.\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# OS X: Packages and other resources to bundle with the application.\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Windows: Use Qt resources.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# There's some old code here so relax the warnings a bit.\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Libraries -----------------------------------------------------------------------------\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Static Qt libraries.\n",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# MusicPlayer\n",
        "Line" : 195,
        "CharPositionInLine" : 45
      },
      "13" : {
        "Text" : "# Deployment ----------------------------------------------------------------------------\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# WIX generator requires setting Start Menu shortcut manually.\n",
        "Line" : 231,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Also include OpenSSL support.\n",
        "Line" : 235,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Plugins are bundled inside the client app. We'll run macdeployqt on the\n\n# installed app before the plugins are there so it won't do unnecessary\n\n# work on them -- plugins are already self-contained.\n",
        "Line" : 268,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Bless the build products folder for running the executables.\n\n# We have to write a batch file that adds the correct Qt to the path,\n\n# or otherwise windeployqt cannot find the correct libraries to deploy.\n",
        "Line" : 304,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 18
    },
    "doomsday/apps/libdoomsday/CMakeLists.txt" : {
      "ObjectId" : "65af6609330b6cda7a69229c1c2cb9f23b526fe9",
      "LastModified" : "2017-03-14T20:08:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Doomsday Engine -- libdoomsday\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Definitions.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set up the API.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Source and header files.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "doomsday/apps/plugins/CMakeLists.txt" : {
      "ObjectId" : "27c8e5a7e495ca6369b6d85b649ed8483a6015c0",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The Doomsday Engine Project\n\n# Copyright (c) 2015-2017 Jaakko Keränen <jaakko.keranen@iki.fi>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Libraries -----------------------------------------------------------------------------\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Importers -----------------------------------------------------------------------------\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Games ---------------------------------------------------------------------------------\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Audio ---------------------------------------------------------------------------------\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Other ---------------------------------------------------------------------------------\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "doomsday/apps/plugins/PluginConfig.cmake" : {
      "ObjectId" : "3371b06da9e0fb4e0f82cef77b05de1669519e35",
      "LastModified" : "2017-06-08T16:26:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The Doomsday Engine Project -- Common build config for plugins\n\n# Copyright (c) 2015-2017 Jaakko Keränen <jaakko.keranen@iki.fi>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Game framework is available in all plugins.\n",
        "Line" : 9,
        "CharPositionInLine" : 28
      },
      "2" : {
        "Text" : "# Find the exports .def and .rc files.\n",
        "Line" : 14,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# The plugins have some messy code.\n",
        "Line" : 53,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# staging prevents CMake's own rpath fixing\n",
        "Line" : 64,
        "CharPositionInLine" : 41
      },
      "5" : {
        "Text" : "# Stage plugins for symlinking/copying into the client app later.\n\n# This is needed because we want access to these even in a build where the\n\n# plugins are not installed yet -- the staging directory symlinks to the\n\n# individual build directories.\n",
        "Line" : 74,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Fix the Qt framework install names manually.\n",
        "Line" : 85,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 7
    },
    "doomsday/apps/plugins/common/Common.cmake" : {
      "ObjectId" : "644ba30df9c02669a75c5dc23d4882f7110d0b5c",
      "LastModified" : "2017-03-14T20:08:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doomsday/apps/plugins/directsound/CMakeLists.txt" : {
      "ObjectId" : "d1a55159a8ce8d25e512818e5714dd17e613a7b4",
      "LastModified" : "2017-03-14T20:08:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doomsday/apps/plugins/doom/CMakeLists.txt" : {
      "ObjectId" : "8f704d355abd1938f84527af426f75835e65b14f",
      "LastModified" : "2017-03-14T20:08:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The Doomsday Engine Project\n\n# Copyright (c) 2015-2017 Jaakko Keränen <jaakko.keranen@iki.fi>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# uses the legacy libdoom.pk3\n",
        "Line" : 6,
        "CharPositionInLine" : 26
      },
      "CommentCount" : 2
    },
    "doomsday/apps/plugins/doom64/CMakeLists.txt" : {
      "ObjectId" : "daf3a63b643755565de3dae00aa008f8b64012d1",
      "LastModified" : "2017-03-14T20:08:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The Doomsday Engine Project\n\n# Copyright (c) 2015-2017 Jaakko Keränen <jaakko.keranen@iki.fi>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# uses the legacy libdoom.pk3\n",
        "Line" : 6,
        "CharPositionInLine" : 26
      },
      "CommentCount" : 2
    },
    "doomsday/apps/plugins/example/CMakeLists.txt" : {
      "ObjectId" : "408e7834e8f7a6512fde2133d91add1ee2ddd86a",
      "LastModified" : "2017-03-14T20:08:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The Doomsday Engine Project\n\n# Copyright (c) 2015-2017 Jaakko Keränen <jaakko.keranen@iki.fi>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doomsday/apps/plugins/fluidsynth/CMakeLists.txt" : {
      "ObjectId" : "c0ed7d51fe8d21116f37175f0ee5d374da7500ce",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The Doomsday Engine Project\n\n# Copyright (c) 2011-2017 Jaakko Keränen <jaakko.keranen@iki.fi>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make an embedded build by default?\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Bundle library dependencies on macOS.\n",
        "Line" : 29,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# We will use the libfluidsynth installed on the system.\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Additional compiler options.\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "doomsday/apps/plugins/fmod/CMakeLists.txt" : {
      "ObjectId" : "f4831147c5039b14a8162616770257dd7391e43f",
      "LastModified" : "2017-03-14T20:08:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The Doomsday Engine Project\n\n# Copyright (c) 2015-2017 Jaakko Keränen <jaakko.keranen@iki.fi>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Deploy the FMOD library.\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "doomsday/apps/plugins/heretic/CMakeLists.txt" : {
      "ObjectId" : "e6b5363274b03902c561ea98797f5c8b24bf7d62",
      "LastModified" : "2017-03-14T20:08:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The Doomsday Engine Project\n\n# Copyright (c) 2015-2017 Jaakko Keränen <jaakko.keranen@iki.fi>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# uses the legacy libdoom.pk3\n",
        "Line" : 6,
        "CharPositionInLine" : 26
      },
      "CommentCount" : 2
    },
    "doomsday/apps/plugins/hexen/CMakeLists.txt" : {
      "ObjectId" : "e8e6a82da2706b8766fae7c737d1c1ff839294af",
      "LastModified" : "2017-03-14T20:08:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The Doomsday Engine Project\n\n# Copyright (c) 2015-2017 Jaakko Keränen <jaakko.keranen@iki.fi>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# uses the legacy libdoom.pk3\n",
        "Line" : 6,
        "CharPositionInLine" : 26
      },
      "CommentCount" : 2
    },
    "doomsday/apps/plugins/importdeh/CMakeLists.txt" : {
      "ObjectId" : "1508ff0e4495e36bc5e4fb0c16d8c8907b7c7310",
      "LastModified" : "2017-03-14T20:08:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doomsday/apps/plugins/importidtech1/CMakeLists.txt" : {
      "ObjectId" : "1291b84e7ac6988273db059bb32703c0e5990bf2",
      "LastModified" : "2017-03-14T20:08:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doomsday/apps/plugins/importsave/CMakeLists.txt" : {
      "ObjectId" : "1521d1d4a61b71c5e701a65d16045ba9c97a18ce",
      "LastModified" : "2017-03-14T20:08:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doomsday/apps/plugins/importudmf/CMakeLists.txt" : {
      "ObjectId" : "87f9b088c6b8433522179b2bd252ee3597d35a28",
      "LastModified" : "2017-03-14T20:08:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doomsday/apps/plugins/libgamefw/CMakeLists.txt" : {
      "ObjectId" : "69ef4e92faaefbf56e4867dd8c6c04683a2f269d",
      "LastModified" : "2017-03-14T20:08:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Doomsday Engine -- libgamefw: Game base framework and common routines\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Definitions.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set up the API.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Source and header files.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "doomsday/apps/plugins/openal/CMakeLists.txt" : {
      "ObjectId" : "b57bf3e3c608c58750d7e5bf5b06d9a6f5d2d458",
      "LastModified" : "2017-03-14T20:08:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The Doomsday Engine Project\n\n# Copyright (c) 2015-2017 Jaakko Keränen <jaakko.keranen@iki.fi>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check if the headers are in a plain folder.\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "doomsday/apps/plugins/winmm/CMakeLists.txt" : {
      "ObjectId" : "8209a1138ff0ec22a4d1dff5b8b9161d1068fbcf",
      "LastModified" : "2017-03-14T20:08:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doomsday/apps/server/CMakeLists.txt" : {
      "ObjectId" : "eb8c0b6bcd50bcacbbc4fac1666248f0edf0979d",
      "LastModified" : "2017-03-14T20:08:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The Doomsday Engine Project -- Server\n\n# Copyright (c) 2012-2017 Jaakko Keränen <jaakko.keranen@iki.fi>\n\n# Copyright (c) 2012-2015 Daniel Swanson <danij@dengine.net>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: Get rid of these, shared code should be in libdoomsday.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# There's some old code here so relax the warnings a bit.\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Server is installed as part of the \"client\" component instead of the\n\n# default \"tools\".\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "doomsday/cmake/Arch.cmake" : {
      "ObjectId" : "3127e0ecef89a762c2f39c1b9120ae15c1e2b35b",
      "LastModified" : "2017-03-14T20:08:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doomsday/cmake/BuildTypes.cmake" : {
      "ObjectId" : "c54d7fe48595000170b61f27425841be8faad2b1",
      "LastModified" : "2017-03-14T20:08:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For single-configuration generators.\n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Debug ----------------------------------------------------------------------\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Release --------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "doomsday/cmake/Config.cmake" : {
      "ObjectId" : "c2def7c4d035d41d21fd1dd844199e288941449b",
      "LastModified" : "2019-03-16T08:51:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Doomsday Engine -- General configuration\n\n#\n\n# All CMakeLists should include this file to gain access to the overall\n\n# project configuration.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# macOS: RPATH affects install_name\n",
        "Line" : 7,
        "CharPositionInLine" : 36
      },
      "2" : {
        "Text" : "# Project Options & Paths ----------------------------------------------------\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Install directories.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# for Visual Studio\n",
        "Line" : 67,
        "CharPositionInLine" : 57
      },
      "5" : {
        "Text" : "# Prefix path is used for finding CMake config packages.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Qt Configuration -----------------------------------------------------------\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Find Qt5 in all projects to ensure automoc is run.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This will ensure automoc works in all projects.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Check for mobile platforms.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Platform-Specific Configuration --------------------------------------------\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Helpers --------------------------------------------------------------------\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "doomsday/cmake/FindAmethyst.cmake" : {
      "ObjectId" : "e419e40bec510f039832e509141f8c5445477352",
      "LastModified" : "2017-03-14T20:08:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doomsday/cmake/FindAssimp.cmake" : {
      "ObjectId" : "b05e44047bbeb66eb088341f834c0d1a0b0c7613",
      "LastModified" : "2017-03-14T20:08:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# It is a bit unorthodox to access the build products of an external project via\n\n# the CMake target object. The current setup exists because the \"libassimp\"\n\n# interface target can either represent an Assimp installation somewhere in the\n\n# file system, or the build products of the Assimp that gets built as part of\n\n# Doomsday.\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Assimp is built as a subdir.\n\n# Use the built target location from the \"assimp\" target.\n",
        "Line" : 15,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# The assimp library will be bundled into Doomsday.app. This will\n\n# inform the installer to include the real library in addition to\n\n# version symlinks (CMake bug?).\n\n# (see: deng_install_bundle_deps() in Macros.cmake)\n",
        "Line" : 20,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# Try to find assimp using pkg-config.\n",
        "Line" : 31,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Try to find assimp manually.\n",
        "Line" : 44,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "# Try to deduce include dir from the library location.\n",
        "Line" : 63,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 6
    },
    "doomsday/cmake/FindCcache.cmake" : {
      "ObjectId" : "d699eefc09e0575564e62030b0f66e957e458f50",
      "LastModified" : "2017-03-14T20:08:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doomsday/cmake/FindDirectX.cmake" : {
      "ObjectId" : "39ce1ea96e2fee8dd50129df134a2163633f2563",
      "LastModified" : "2017-03-14T20:08:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: look in the registry?\n",
        "Line" : 5,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 1
    },
    "doomsday/cmake/FindEAX.cmake" : {
      "ObjectId" : "bf6b395b00d06b1d7d032e3f3ddef774ac91551b",
      "LastModified" : "2017-03-14T20:08:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doomsday/cmake/FindFMOD.cmake" : {
      "ObjectId" : "04b2e7f46ba5eea5819d4eda37686834ec530591",
      "LastModified" : "2019-03-16T08:51:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doomsday/cmake/FindGlib.cmake" : {
      "ObjectId" : "46d4bf1de2775182ed02cb72ab854aee666e3e47",
      "LastModified" : "2019-03-16T08:51:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use the static versions of GLib and its dependencies.\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Find GLib via pkg-config.\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "doomsday/cmake/FindLZSS.cmake" : {
      "ObjectId" : "0090d2ed7728e66c46230d5a6d12c83bbfa0e330",
      "LastModified" : "2017-03-14T20:08:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Already defined.\n",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "doomsday/cmake/FindOculusVR.cmake" : {
      "ObjectId" : "8d9abe1d537a09eed552210b01b69dd24bb890d6",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is the version of LibOVR that is required.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check the version.\n",
        "Line" : 23,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "doomsday/cmake/FindQt.cmake" : {
      "ObjectId" : "9b5803f447949aa8672da648d12d1d1051b81d28",
      "LastModified" : "2019-03-16T08:51:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Qmake is used to find out the Qt install location.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Runs qmake to query one of its configuration variables.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check Qt version.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Path for CMake config modules.\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "doomsday/cmake/FindSDL2.cmake" : {
      "ObjectId" : "408bd51e6ca77e9bec6e078b6b229e2fecd08bbf",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to locate SDL2 from the local system (assuming Windows).\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Define the target.\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Deduce the include directory.\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Also attempt to locate SLD2_mixer.\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Define the target.\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Deduce the include directory.\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# There are multiple DLLs needed for deployment.\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "doomsday/cmake/InstallPrefix.cmake" : {
      "ObjectId" : "ff1abda822b5d002cd02d891fed681d25abfd957",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# On iOS, we'll install files into the app bundle instead of\n\n# any user-specified location.\n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Install destination. PREFIX can be used to set the location manually.\n\n# By default we'll use distrib/products as the prefix.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message (\"The default install prefix can be overridden with PREFIX.\")\n",
        "Line" : 17,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    },
    "doomsday/cmake/LegacyPK3s.cmake" : {
      "ObjectId" : "342c9334c8d3814306896b930e3f19ac090ed1b8",
      "LastModified" : "2017-03-14T20:08:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This ensures that the old-style PK3 packages are compiled when CMake is run\n\n# on any CMake project. All of these should be converted to Doomsday 2 packages.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# In addition to installing, copy the packages to the build products\n\n# directories so that executables can be run in them.\n",
        "Line" : 29,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "doomsday/cmake/Macros.cmake" : {
      "ObjectId" : "e3a14f3caefe639917e2c7da2a77e1caaa25adac",
      "LastModified" : "2019-03-16T08:51:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Appends a string to an existing variable.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Returns a subset of a list. If length is -1, the entire remainder\n\n# of the list is returned.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Remove items prior to the start.\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Adjust the length.\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Removes matching items from the list.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Clang/GCC & CMake 3.2+\n",
        "Line" : 58,
        "CharPositionInLine" : 50
      },
      "6" : {
        "Text" : "# Apply cotire to improve build efficiency.\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Not deployed; include the local Qt library path in @rpath.\n",
        "Line" : 117,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "# These won't be deployed, so we can use the full path.\n",
        "Line" : 124,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# macOS version numbers come from the Info.plist, we don't need version symlinks.\n",
        "Line" : 141,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "#cotire (${target})\n",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Links Qt components to the target.\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Checks all the files in the arguments and removes the ones that\n\n# are not applicable to the current platform.\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# outName\n",
        "Line" : 193,
        "CharPositionInLine" : 28
      },
      "14" : {
        "Text" : "# Windows-specific\n",
        "Line" : 197,
        "CharPositionInLine" : 45
      },
      "15" : {
        "Text" : "# macOS specific\n",
        "Line" : 201,
        "CharPositionInLine" : 48
      },
      "16" : {
        "Text" : "# Unix specific files (Linux / macOS / etc.)\n",
        "Line" : 206,
        "CharPositionInLine" : 46
      },
      "17" : {
        "Text" : "# X11 specific files\n",
        "Line" : 210,
        "CharPositionInLine" : 47
      },
      "18" : {
        "Text" : "# Combines multiple source files into a single large file.\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# The original source files should not be compiled any more.\n\n# They remain part of the project so they are available in the IDE.\n",
        "Line" : 241,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# Simply use the source files as is.\n",
        "Line" : 250,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# Set up resource bundling on macOS.\n\n# The arguments are a list of resource files/directories with the\n\n# destination directory separated by a comma:\n\n#\n\n#   res/macx/shell.icns,Resources\n\n#\n\n# If the destionation is omitted, it defaults to \"Resources\".\n\n#\n\n# If the file path is the name of an existing target, its location\n\n# is used as the path.\n\n#\n\n# DENG_RESOURCES is set to a list of the individual source files\n\n# to be added to add_executable().\n\n#\n\n# deng_bundle_resources() must be called after the target is added\n\n# to specify the locations of the individual files.\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# No comma means the destination defaults to Resources.\n",
        "Line" : 279,
        "CharPositionInLine" : 12
      },
      "23" : {
        "Text" : "# Use the location of the target.\n",
        "Line" : 283,
        "CharPositionInLine" : 12
      },
      "24" : {
        "Text" : "# Just ignore it.\n",
        "Line" : 291,
        "CharPositionInLine" : 12
      },
      "25" : {
        "Text" : "# Just add as a single file.\n",
        "Line" : 295,
        "CharPositionInLine" : 12
      },
      "26" : {
        "Text" : "#list (APPEND src ${origFn})\n\n# Do a glob to find all the files.\n",
        "Line" : 298,
        "CharPositionInLine" : 12
      },
      "27" : {
        "Text" : "# Determine length of the base path since it will be omitted\n\n# from destination.\n",
        "Line" : 301,
        "CharPositionInLine" : 12
      },
      "28" : {
        "Text" : "# Omit the current source directory.\n",
        "Line" : 309,
        "CharPositionInLine" : 16
      },
      "29" : {
        "Text" : "# Called after deng_setup_resources() and add_executable() to cause\n\n# the files to be actually placed into the bundle.\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#message (STATUS \"Bundling: ${fn} -> ${dest}\")\n",
        "Line" : 330,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# Build a Doomsday 2 package using the buildpackage.py script.\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Build the package immediately during the CMake run.\n",
        "Line" : 343,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# Find all the source files for the package.\n",
        "Line" : 351,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Ensure the package gets rebuilt if the source files are edited.\n",
        "Line" : 354,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# The package target is used for dependency tracking and deployment.\n",
        "Line" : 360,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# On the Mac, packages are bundled with the apps, however if the SDK is installed,\n\n# the packages need to be made available separately.\n",
        "Line" : 369,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# In addition to installing, copy the packages to the build products\n\n# directories so that executables can be run in them.\n",
        "Line" : 380,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "# Check the installed packages.\n",
        "Line" : 402,
        "CharPositionInLine" : 12
      },
      "39" : {
        "Text" : "# Adds an SDK library target.\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Form the list of source files.\n",
        "Line" : 416,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# Define the target and namespace alias.\n",
        "Line" : 419,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# Libraries use the \"deng_\" prefix.\n",
        "Line" : 427,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# Compiler settings.\n",
        "Line" : 434,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "#cotire (${target})\n",
        "Line" : 451,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# When the SDK is disabled, only the runtime binary is installed.\n",
        "Line" : 469,
        "CharPositionInLine" : 12
      },
      "46" : {
        "Text" : "# Defines a new GUI application target that includes all the required Doomsday\n\n# 2 packages.)\n",
        "Line" : 527,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Check for additional bundle resources.\n",
        "Line" : 531,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# Required packages are included in the application bundle.\n",
        "Line" : 540,
        "CharPositionInLine" : 8
      },
      "49" : {
        "Text" : "# Packages are installed separately.\n",
        "Line" : 550,
        "CharPositionInLine" : 8
      },
      "50" : {
        "Text" : "# Tests should be runnable from distrib/products.\n",
        "Line" : 559,
        "CharPositionInLine" : 12
      },
      "51" : {
        "Text" : "# Locate full paths of the required shared libraries.\n",
        "Line" : 581,
        "CharPositionInLine" : 8
      },
      "52" : {
        "Text" : "# Check for arguments.\n",
        "Line" : 611,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# Fixes the install names of the listed libraries that have been bundled into\n\n# the target.\n",
        "Line" : 647,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Check for arguments.\n",
        "Line" : 651,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# Correct the install names of the dependent libraries.\n",
        "Line" : 660,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# macOS: Install the libraries of a dependency target into the application bundle.\n",
        "Line" : 677,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Run the Qt deploy utility on the target, resolving any local system\n\n# dependencies.\n",
        "Line" : 702,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# No need to deploy Qt.\n",
        "Line" : 709,
        "CharPositionInLine" : 18
      },
      "59" : {
        "Text" : "# Installs a tool executable into the approprite place(s).\n\n# macOS: Also fix the Qt framework install names that wouldn't be touched by\n\n# the qt deploy utility because they aren't the app bundle binary.\n",
        "Line" : 744,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# macOS: Also install to the client application bundle.\n",
        "Line" : 748,
        "CharPositionInLine" : 4
      },
      "61" : {
        "Text" : "# Install an external library that exists at configuration time.\n\n# Used to deploy third-party libraries of dependencies. `library` is the\n\n# full path to the shared library to install.\n\n# Not applicable to macOS because libraries are not installed but instead\n\n# bundled with the applicatino.\n",
        "Line" : 788,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# In addition to installing, copy the libraries straight to the\n\n# build products directories so we can run executables in them.\n",
        "Line" : 805,
        "CharPositionInLine" : 8
      },
      "63" : {
        "Text" : "# Defines a command for generating a source file from an Amethyst document project.\n\n# `ameSourceDir` is expected to contain a number of .ame files, with `mainSrc`\n\n# being the name of the main one. The contents of `ameSourceDir` are used (only)\n\n# as dependencies to know when the output file needs regenerating. `type` is the\n\n# amestd output generator def (e.g., TXT or RTF).\n",
        "Line" : 814,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# man pages are always for Unix\n",
        "Line" : 825,
        "CharPositionInLine" : 27
      },
      "CommentCount" : 65
    },
    "doomsday/cmake/Options.cmake" : {
      "ObjectId" : "dedb799f798044d623c089c498a68cf8bb9e292d",
      "LastModified" : "2019-03-16T08:51:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Source merging by default is enabled only for debug builds, or never with\n\n# multiconfiguration projects because all configurations must use the\n\n# same set of source files.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# multiconfiguration projects\n",
        "Line" : 5,
        "CharPositionInLine" : 40
      },
      "2" : {
        "Text" : "# debug builds shouldn't use merging\n",
        "Line" : 8,
        "CharPositionInLine" : 44
      },
      "3" : {
        "Text" : "# GCC seems to have trouble with cotire when using C++11.\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# just use the cache\n",
        "Line" : 23,
        "CharPositionInLine" : 41
      },
      "CommentCount" : 5
    },
    "doomsday/cmake/Packaging.cmake" : {
      "ObjectId" : "ed2ed5a2170b6d37b48f2dfdb5aa066647dab8c7",
      "LastModified" : "2019-03-16T08:51:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Basic package metadata.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Whenever the build number is specified, include it in the package version.\n\n# This ensures newer builds of the same version will have a greater number.\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# File formats.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set (CPACK_GENERATOR RPM;DEB)\n\n# Set CPACK_GENERATOR manually.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Source packaging.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Targets and components.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# We have to define the components manually because otherwise Assimp's\n\n# components would get automatically included.\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Don't package tests.\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "doomsday/cmake/PackagingUnix.cmake" : {
      "ObjectId" : "f38e04334c8b3a4fb0ccdf5468aeac8899496be5",
      "LastModified" : "2017-03-14T20:08:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CPack: Generator-specific configuration for Unix\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doomsday/cmake/PlatformGenericUnix.cmake" : {
      "ObjectId" : "5d65e2afce041c6a32ec430fbecb1773a6a2146c",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Convince the compiler to enable C++11.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doomsday/cmake/PlatformMacx.cmake" : {
      "ObjectId" : "37dd53f47393c072d0a3adbbfd626ae848abba6a",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install the documentation in the app bundle.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Code signing.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Detect macOS version.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Fallback basedir for command line apps.\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# QTKit has been deprecated; should use AVFoundation instead.\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Check compiler version.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# too many warnings from Qt\n",
        "Line" : 48,
        "CharPositionInLine" : 73
      },
      "7" : {
        "Text" : "# Underscores are not allowed in bundle identifiers.\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "doomsday/cmake/PlatformUnix.cmake" : {
      "ObjectId" : "f727a48833bf01540dc653cab8099ddc9978f806",
      "LastModified" : "2019-03-30T17:29:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Linux / BSD / other Unix\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The tree FRE optimization causes crashes with GCC 6 (Yakkety).\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "doomsday/cmake/PlatformWindows.cmake" : {
      "ObjectId" : "afacf9df3f46decbadcb1c6e4e2a7578749c4e59",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Code signing.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Disable warnings about unreferenced formal parameters (C4100).\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Enable multi-processor compiling.\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# There are many warnings about possible loss of data due to implicit\n\n# type conversions.\n",
        "Line" : 56,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Locate Visual Studio.\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "doomsday/cmake/PlatformiOS.cmake" : {
      "ObjectId" : "57c37ddbc7c20728410c77893a6625795f2d5008",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set (DENG_AMETHYST_PLATFORM IOS)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install the documentation in the app bundle.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set (DENG_INSTALL_MAN_DIR ${DENG_INSTALL_DOC_DIR})\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Code signing.\n\n#set (DENG_CODESIGN_APP_CERT \"\" CACHE STRING \"ID of the certificate for signing applications.\")\n\n#find_program (CODESIGN_COMMAND codesign)\n\n#mark_as_advanced (CODESIGN_COMMAND)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Detect macOS version.\n\n#execute_process (COMMAND sw_vers -productVersion\n\n#    OUTPUT_VARIABLE MACOS_VERSION\n\n#    OUTPUT_STRIP_TRAILING_WHITESPACE\n\n#)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# option (DENG_IOS_SIMULATOR \"Target the iPhoneSimulator platform\" ON)\n\n#\n\n# if (DENG_IOS_SIMULATOR)\n\n#     set (DENG_IOS_PLATFORM \"iPhoneSimulator\")\n\n# else ()\n\n#     set (DENG_IOS_PLATFORM \"iPhoneOS\")\n\n# endif ()\n\n#\n\n# execute_process (\n\n#     COMMAND xcode-select -p\n\n#     OUTPUT_VARIABLE XCODE_DEVROOT\n\n#     OUTPUT_STRIP_TRAILING_WHITESPACE\n\n# )\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#set (DENG_IOS_SDKVER \"10.3\")\n\n#set (DENG_IOS_DEVROOT \"${XCODE_DEVROOT}/Platforms/${DENG_IOS_PLATFORM}.platform/Developer\")\n\n#set (CMAKE_OSX_DEPLOYMENT_TARGET \"${DENG_IOS_SDKVER}\")\n\n#set (CMAKE_OSX_SYSROOT \"${DENG_IOS_DEVROOT}/SDKs/${DENG_IOS_PLATFORM}${DENG_IOS_SDKVER}.sdk\"\n\n#    CACHE PATH \"Sysroot path\"\n\n#)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# set_target_properties (${target} PROPERTIES\n\n#     XCODE_ATTRIBUTE_GCC_SYMBOLS_PRIVATE_EXTERN NO\n\n#     XCODE_ATTRIBUTE_GCC_INLINES_ARE_PRIVATE_EXTERN NO\n\n# )\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Underscores are not allowed in bundle identifiers.\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "doomsday/cmake/QtInstallNames.cmake" : {
      "ObjectId" : "8bc5be072e9de98923995a8a14061875edccbc72",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Required variables:\n\n# - DENG_SOURCE_DIR\n\n# - CMAKE_INSTALL_NAME_TOOL\n\n# - BINARY_FILE\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doomsday/cmake/Version.cmake" : {
      "ObjectId" : "5be8f345190008edf524e40ea7340d08a5d2e681",
      "LastModified" : "2019-03-16T08:51:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Binary compatibility version for shared libraries / APIs.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Candidate\n\n#Stable\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Build Configuration --------------------------------------------------------\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "doomsday/cmake/WIX.cmake" : {
      "ObjectId" : "cf036063351c066c7b92b3fa6abd6200dc9346dd",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doomsday/cmake/ZLIB.cmake" : {
      "ObjectId" : "eabde22bd46d7085c69f4809f5957349a780640a",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# There is a prebuilt zlib DLL in the external/zlib directory.\n",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "doomsday/cmake/config/DengAppfwConfig.cmake" : {
      "ObjectId" : "1f99408607713c6c3bcdbf153f4e009da1108f37",
      "LastModified" : "2019-03-16T08:51:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Deng::libappfw may exist in the current build, in which case using \n\n# a previously installed version is inappropriate.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doomsday/cmake/config/DengCoreConfig.cmake" : {
      "ObjectId" : "f41b6ceff2ec03bc57c3b4a1510d98ff8e0dbc84",
      "LastModified" : "2019-03-16T08:51:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find_package (Qt5 COMPONENTS Core Network REQUIRED)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Deng::libcore may exist in the current build, in which case using \n\n# a previously installed version is inappropriate.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "doomsday/cmake/config/DengDoomsdayConfig.cmake" : {
      "ObjectId" : "b50fd85e3cceeef5fa42f66a1cfe4860a90fbf4b",
      "LastModified" : "2019-03-16T08:51:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doomsday/cmake/config/DengGamefwConfig.cmake" : {
      "ObjectId" : "2070da7fb967ea44064b39b8953af0f496b3abb3",
      "LastModified" : "2019-03-16T08:51:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Deng::libgamefw may exist in the current build, in which case using \n\n# a previously installed version is inappropriate.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doomsday/cmake/config/DengGuiConfig.cmake" : {
      "ObjectId" : "339be79c50f45a3c3e37153bfabba14607b51479",
      "LastModified" : "2019-03-16T08:51:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Deng::libgui may exist in the current build, in which case using\n\n# a previously installed version is inappropriate.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doomsday/cmake/config/DengLegacyConfig.cmake" : {
      "ObjectId" : "21cf54aad2b91437cb989d23e58bc6f7eecc8f8f",
      "LastModified" : "2019-03-16T08:51:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Deng::liblegacy may exist in the current build, in which case using \n\n# a previously installed version is inappropriate.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doomsday/cmake/config/DengShellConfig.cmake" : {
      "ObjectId" : "b27a9526945e0ca06263ef8b965f62602d60e4f7",
      "LastModified" : "2019-03-16T08:51:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Deng::libshell may exist in the current build, in which case using \n\n# a previously installed version is inappropriate.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doomsday/cmake/cotire.cmake" : {
      "ObjectId" : "741d6901f157bd038741a523ddda099440159d0b",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - cotire (compile time reducer)\n\n#\n\n# See the cotire manual for usage hints.\n\n#\n\n#=============================================================================\n\n# Copyright 2012-2016 Sascha Kratky\n\n#\n\n# Permission is hereby granted, free of charge, to any person\n\n# obtaining a copy of this software and associated documentation\n\n# files (the \"Software\"), to deal in the Software without\n\n# restriction, including without limitation the rights to use,\n\n# copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following\n\n# conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be\n\n# included in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n\n# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n\n# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n\n# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n\n# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\n# OTHER DEALINGS IN THE SOFTWARE.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# call cmake_minimum_required, but prevent modification of the CMake policy stack in include mode\n\n# cmake_minimum_required also sets the policy version as a side effect, which we have to avoid\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# activate select policies\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Compiler id for Apple Clang is now AppleClang\n",
        "Line" : 50,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# disallow use of the LOCATION target property\n",
        "Line" : 55,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# targets may not link directly to themselves\n",
        "Line" : 60,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# utility targets may not have link dependencies\n",
        "Line" : 65,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# target in the TARGET signature of add_custom_command() must exist\n",
        "Line" : 70,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# error on non-existent target in get_target_property\n",
        "Line" : 75,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# error on non-existent dependency in add_dependencies\n",
        "Line" : 80,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# do not expand variables in target source entries\n",
        "Line" : 85,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# disallow add_custom_command SOURCE signatures\n",
        "Line" : 90,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# include TARGET_OBJECTS expressions in a target's SOURCES property\n",
        "Line" : 95,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# simplify variable reference and escape sequence evaluation\n",
        "Line" : 100,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# only interpret if() arguments as variables or keywords when unquoted\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# get_filename_component returns extension from first occurrence of . in file name\n\n# this function computes the extension from last occurrence of . in file name\n",
        "Line" : 129,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "# as of CMake 3.1 target sources may contain generator expressions\n\n# since we cannot obtain required property information about source files added\n\n# through generator expressions at configure time, we filter them out\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# consider source file unless it is excluded explicitly\n",
        "Line" : 204,
        "CharPositionInLine" : 7
      },
      "18" : {
        "Text" : "# add to excluded sources, if file is not ignored and has correct language without having the correct extension\n",
        "Line" : 214,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# separate filtered source files from already cotired ones\n\n# the COTIRE_TARGET property of a source file may be set while a target is being processed by cotire\n",
        "Line" : 223,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# add to excluded sources, if file has custom compile flags\n",
        "Line" : 234,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# remove from head\n",
        "Line" : 327,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# BFS traversal of transitive libraries\n",
        "Line" : 334,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# option with separate argument\n",
        "Line" : 358,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# remember option\n",
        "Line" : 362,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# option with joined argument\n",
        "Line" : 365,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# flush remembered option\n",
        "Line" : 369,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# add to unfiltered options\n",
        "Line" : 374,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# collect options from CMake language variables\n",
        "Line" : 412,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "# add target compile flags\n",
        "Line" : 421,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# target compile options\n",
        "Line" : 434,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "# interface compile options from linked library targets\n",
        "Line" : 441,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "# handle language standard properties\n",
        "Line" : 452,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# handle the POSITION_INDEPENDENT_CODE target property\n",
        "Line" : 473,
        "CharPositionInLine" : 1
      },
      "34" : {
        "Text" : "# handle visibility target properties\n",
        "Line" : 485,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "# platform specific flags\n",
        "Line" : 496,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "# default include dirs\n",
        "Line" : 531,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# parse additional include directories from target compile flags\n",
        "Line" : 538,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "# parse additional system include directories from target compile flags\n",
        "Line" : 550,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "# target include directories\n",
        "Line" : 562,
        "CharPositionInLine" : 1
      },
      "40" : {
        "Text" : "# interface include directories from linked library targets\n",
        "Line" : 574,
        "CharPositionInLine" : 1
      },
      "41" : {
        "Text" : "# CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE refers to CMAKE_CURRENT_BINARY_DIR and CMAKE_CURRENT_SOURCE_DIR\n\n# at the time, when the target was created. These correspond to the target properties BINARY_DIR and SOURCE_DIR\n\n# which are only available with CMake 3.4 or later.\n",
        "Line" : 582,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# CMAKE_INTDIR for multi-configuration build systems\n",
        "Line" : 659,
        "CharPositionInLine" : 1
      },
      "43" : {
        "Text" : "# target export define symbol\n",
        "Line" : 663,
        "CharPositionInLine" : 1
      },
      "44" : {
        "Text" : "# directory compile definitions\n",
        "Line" : 668,
        "CharPositionInLine" : 1
      },
      "45" : {
        "Text" : "# target compile definitions\n",
        "Line" : 677,
        "CharPositionInLine" : 1
      },
      "46" : {
        "Text" : "# interface compile definitions from linked library targets\n",
        "Line" : 686,
        "CharPositionInLine" : 1
      },
      "47" : {
        "Text" : "# parse additional compile definitions from target compile flags\n\n# and don't look at directory compile definitions, which we already handled\n",
        "Line" : 695,
        "CharPositionInLine" : 1
      },
      "48" : {
        "Text" : "# parse target compile flags omitting compile definitions and include directives\n",
        "Line" : 711,
        "CharPositionInLine" : 1
      },
      "49" : {
        "Text" : "# compiler launcher is only supported for Makefile and Ninja\n",
        "Line" : 863,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# IS_NEWER_THAN returns TRUE if both files have the same timestamp\n\n# thus we do the comparison in both directions to exclude ties\n",
        "Line" : 952,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# if path matches exactly, return short non-empty string\n",
        "Line" : 996,
        "CharPositionInLine" : 3
      },
      "52" : {
        "Text" : "# check header path against ignored and honored include directories\n",
        "Line" : 1004,
        "CharPositionInLine" : 1
      },
      "53" : {
        "Text" : "# header is inside, but could be become outside if there is a shorter outside match\n",
        "Line" : 1007,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# header is outside\n",
        "Line" : 1021,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# heuristic: ignore C headers with embedded parent directory references or \"-fixed\" or \"_fixed\" in path\n\n# these often stem from using GCC #include_next tricks, which may break the precompiled header compilation\n\n# with the error message \"error: no include path in which to search for header.h\"\n",
        "Line" : 1032,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# check header file extension\n",
        "Line" : 1042,
        "CharPositionInLine" : 1
      },
      "57" : {
        "Text" : "# cl.exe /showIncludes output looks different depending on the language pack used, e.g.:\n\n# English: \"Note: including file:   C:\\directory\\file\"\n\n# German: \"Hinweis: Einlesen der Datei:   C:\\directory\\file\"\n\n# We use a very general regular expression, relying on the presence of the : characters\n",
        "Line" : 1055,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# Visual Studio compiler output\n",
        "Line" : 1060,
        "CharPositionInLine" : 3
      },
      "59" : {
        "Text" : "# GCC like output\n",
        "Line" : 1069,
        "CharPositionInLine" : 3
      },
      "60" : {
        "Text" : "# prevent CMake macro invocation errors due to backslash characters in Windows paths\n",
        "Line" : 1085,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# canonize slashes\n",
        "Line" : 1088,
        "CharPositionInLine" : 1
      },
      "62" : {
        "Text" : "# prevent semicolon from being interpreted as a line separator\n",
        "Line" : 1090,
        "CharPositionInLine" : 1
      },
      "63" : {
        "Text" : "# then separate lines\n",
        "Line" : 1092,
        "CharPositionInLine" : 1
      },
      "64" : {
        "Text" : "# remove duplicate lines to speed up parsing\n",
        "Line" : 1095,
        "CharPositionInLine" : 1
      },
      "65" : {
        "Text" : "# stack keeps track of inside/outside project status of processed header files\n",
        "Line" : 1113,
        "CharPositionInLine" : 1
      },
      "66" : {
        "Text" : "# update stack\n",
        "Line" : 1123,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "# header is a candidate if it is outside project\n",
        "Line" : 1139,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "# get parent header file's inside/outside status\n",
        "Line" : 1141,
        "CharPositionInLine" : 5
      },
      "69" : {
        "Text" : "# select header file if parent header file is inside project\n\n# (e.g., a project header file that includes a standard header file)\n",
        "Line" : 1148,
        "CharPositionInLine" : 5
      },
      "70" : {
        "Text" : "# fix header's inside status on stack, it is ignored by extension now\n",
        "Line" : 1157,
        "CharPositionInLine" : 8
      },
      "71" : {
        "Text" : "# for cl.exe do not keep unparsed lines which solely consist of a source file name\n",
        "Line" : 1169,
        "CharPositionInLine" : 5
      },
      "72" : {
        "Text" : "# only consider existing source files for scanning\n",
        "Line" : 1207,
        "CharPositionInLine" : 1
      },
      "73" : {
        "Text" : "# cl.exe messes with the output streams unless the environment variable VS_UNICODE_OUTPUT is cleared\n",
        "Line" : 1223,
        "CharPositionInLine" : 2
      },
      "74" : {
        "Text" : "# use absolute path as source file location\n",
        "Line" : 1371,
        "CharPositionInLine" : 2
      },
      "75" : {
        "Text" : "# create empty log file\n",
        "Line" : 1412,
        "CharPositionInLine" : 3
      },
      "76" : {
        "Text" : "# Intel compiler requires hdrstop pragma to stop generating PCH file\n",
        "Line" : 1428,
        "CharPositionInLine" : 2
      },
      "77" : {
        "Text" : "# cl.exe options used\n\n# /nologo suppresses display of sign-on banner\n\n# /TC treat all files named on the command line as C source files\n\n# /TP treat all files named on the command line as C++ source files\n\n# /EP preprocess to stdout without #line directives\n\n# /showIncludes list include files\n",
        "Line" : 1464,
        "CharPositionInLine" : 2
      },
      "78" : {
        "Text" : "# append to list\n",
        "Line" : 1473,
        "CharPositionInLine" : 3
      },
      "79" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1476,
        "CharPositionInLine" : 3
      },
      "80" : {
        "Text" : "# GCC options used\n\n# -H print the name of each header file used\n\n# -E invoke preprocessor\n\n# -fdirectives-only do not expand macros, requires GCC >= 4.3\n",
        "Line" : 1480,
        "CharPositionInLine" : 2
      },
      "81" : {
        "Text" : "# append to list\n",
        "Line" : 1485,
        "CharPositionInLine" : 3
      },
      "82" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1491,
        "CharPositionInLine" : 3
      },
      "83" : {
        "Text" : "# Clang options used\n\n# -H print the name of each header file used\n\n# -E invoke preprocessor\n\n# -fno-color-diagnostics don't prints diagnostics in color\n",
        "Line" : 1498,
        "CharPositionInLine" : 2
      },
      "84" : {
        "Text" : "# append to list\n",
        "Line" : 1503,
        "CharPositionInLine" : 3
      },
      "85" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1506,
        "CharPositionInLine" : 3
      },
      "86" : {
        "Text" : "# Windows Intel options used\n\n# /nologo do not display compiler version information\n\n# /QH display the include file order\n\n# /EP preprocess to stdout, omitting #line directives\n\n# /TC process all source or unrecognized file types as C source files\n\n# /TP process all source or unrecognized file types as C++ source files\n",
        "Line" : 1511,
        "CharPositionInLine" : 3
      },
      "87" : {
        "Text" : "# append to list\n",
        "Line" : 1520,
        "CharPositionInLine" : 4
      },
      "88" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1523,
        "CharPositionInLine" : 4
      },
      "89" : {
        "Text" : "# Linux / Mac OS X Intel options used\n\n# -H print the name of each header file used\n\n# -EP preprocess to stdout, omitting #line directives\n\n# -Kc++ process all source or unrecognized file types as C++ source files\n",
        "Line" : 1527,
        "CharPositionInLine" : 3
      },
      "90" : {
        "Text" : "# append to list\n",
        "Line" : 1532,
        "CharPositionInLine" : 4
      },
      "91" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1538,
        "CharPositionInLine" : 4
      },
      "92" : {
        "Text" : "# cl.exe options used\n\n# /Yc creates a precompiled header file\n\n# /Fp specifies precompiled header binary file name\n\n# /FI forces inclusion of file\n\n# /TC treat all files named on the command line as C source files\n\n# /TP treat all files named on the command line as C++ source files\n\n# /Zs syntax check only\n\n# /Zm precompiled header memory allocation scaling factor\n",
        "Line" : 1557,
        "CharPositionInLine" : 2
      },
      "93" : {
        "Text" : "# append to list\n",
        "Line" : 1568,
        "CharPositionInLine" : 3
      },
      "94" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1575,
        "CharPositionInLine" : 3
      },
      "95" : {
        "Text" : "# GCC / Clang options used\n\n# -x specify the source language\n\n# -c compile but do not link\n\n# -o place output in file\n\n# note that we cannot use -w to suppress all warnings upon pre-compiling, because turning off a warning may\n\n# alter compile flags as a side effect (e.g., -Wwrite-string implies -fconst-strings)\n",
        "Line" : 1582,
        "CharPositionInLine" : 2
      },
      "96" : {
        "Text" : "# append to list\n",
        "Line" : 1591,
        "CharPositionInLine" : 3
      },
      "97" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1594,
        "CharPositionInLine" : 3
      },
      "98" : {
        "Text" : "# Windows Intel options used\n\n# /nologo do not display compiler version information\n\n# /Yc create a precompiled header (PCH) file\n\n# /Fp specify a path or file name for precompiled header files\n\n# /FI tells the preprocessor to include a specified file name as the header file\n\n# /TC process all source or unrecognized file types as C source files\n\n# /TP process all source or unrecognized file types as C++ source files\n\n# /Zs syntax check only\n\n# /Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1602,
        "CharPositionInLine" : 3
      },
      "99" : {
        "Text" : "# append to list\n",
        "Line" : 1614,
        "CharPositionInLine" : 4
      },
      "100" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1621,
        "CharPositionInLine" : 4
      },
      "101" : {
        "Text" : "# Linux / Mac OS X Intel options used\n\n# -pch-dir location for precompiled header files\n\n# -pch-create name of the precompiled header (PCH) to create\n\n# -Kc++ process all source or unrecognized file types as C++ source files\n\n# -fsyntax-only check only for correct syntax\n\n# -Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1628,
        "CharPositionInLine" : 3
      },
      "102" : {
        "Text" : "# append to list\n",
        "Line" : 1639,
        "CharPositionInLine" : 4
      },
      "103" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1648,
        "CharPositionInLine" : 4
      },
      "104" : {
        "Text" : "# cl.exe options used\n\n# /Yu uses a precompiled header file during build\n\n# /Fp specifies precompiled header binary file name\n\n# /FI forces inclusion of file\n\n# /Zm precompiled header memory allocation scaling factor\n",
        "Line" : 1665,
        "CharPositionInLine" : 2
      },
      "105" : {
        "Text" : "# append to list\n",
        "Line" : 1673,
        "CharPositionInLine" : 4
      },
      "106" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1679,
        "CharPositionInLine" : 4
      },
      "107" : {
        "Text" : "# no precompiled header, force inclusion of prefix header\n",
        "Line" : 1686,
        "CharPositionInLine" : 3
      },
      "108" : {
        "Text" : "# append to list\n",
        "Line" : 1688,
        "CharPositionInLine" : 4
      },
      "109" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1691,
        "CharPositionInLine" : 4
      },
      "110" : {
        "Text" : "# GCC options used\n\n# -include process include file as the first line of the primary source file\n\n# -Winvalid-pch warns if precompiled header is found but cannot be used\n\n# note: ccache requires the -include flag to be used in order to process precompiled header correctly\n",
        "Line" : 1696,
        "CharPositionInLine" : 2
      },
      "111" : {
        "Text" : "# append to list\n",
        "Line" : 1701,
        "CharPositionInLine" : 3
      },
      "112" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1704,
        "CharPositionInLine" : 3
      },
      "113" : {
        "Text" : "# Clang options used\n\n# -include process include file as the first line of the primary source file\n\n# -include-pch include precompiled header file\n\n# -Qunused-arguments don't emit warning for unused driver arguments\n\n# note: ccache requires the -include flag to be used in order to process precompiled header correctly\n",
        "Line" : 1708,
        "CharPositionInLine" : 2
      },
      "114" : {
        "Text" : "# append to list\n",
        "Line" : 1714,
        "CharPositionInLine" : 3
      },
      "115" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1717,
        "CharPositionInLine" : 3
      },
      "116" : {
        "Text" : "# Windows Intel options used\n\n# /Yu use a precompiled header (PCH) file\n\n# /Fp specify a path or file name for precompiled header files\n\n# /FI tells the preprocessor to include a specified file name as the header file\n\n# /Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1723,
        "CharPositionInLine" : 3
      },
      "117" : {
        "Text" : "# append to list\n",
        "Line" : 1731,
        "CharPositionInLine" : 5
      },
      "118" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1737,
        "CharPositionInLine" : 5
      },
      "119" : {
        "Text" : "# no precompiled header, force inclusion of prefix header\n",
        "Line" : 1744,
        "CharPositionInLine" : 4
      },
      "120" : {
        "Text" : "# append to list\n",
        "Line" : 1746,
        "CharPositionInLine" : 5
      },
      "121" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1749,
        "CharPositionInLine" : 5
      },
      "122" : {
        "Text" : "# Linux / Mac OS X Intel options used\n\n# -pch-dir location for precompiled header files\n\n# -pch-use name of the precompiled header (PCH) to use\n\n# -include process include file as the first line of the primary source file\n\n# -Wpch-messages enable diagnostics related to pre-compiled headers (requires Intel XE 2013 Update 2)\n",
        "Line" : 1754,
        "CharPositionInLine" : 3
      },
      "123" : {
        "Text" : "# append to list\n",
        "Line" : 1763,
        "CharPositionInLine" : 5
      },
      "124" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1769,
        "CharPositionInLine" : 5
      },
      "125" : {
        "Text" : "# no precompiled header, force inclusion of prefix header\n",
        "Line" : 1776,
        "CharPositionInLine" : 4
      },
      "126" : {
        "Text" : "# append to list\n",
        "Line" : 1778,
        "CharPositionInLine" : 5
      },
      "127" : {
        "Text" : "# return as a flag string\n",
        "Line" : 1781,
        "CharPositionInLine" : 5
      },
      "128" : {
        "Text" : "# cl.exe messes with the output streams unless the environment variable VS_UNICODE_OUTPUT is cleared\n",
        "Line" : 1818,
        "CharPositionInLine" : 2
      },
      "129" : {
        "Text" : "# supported since Visual Studio C++ 6.0\n\n# and CMake does not support an earlier version\n",
        "Line" : 1834,
        "CharPositionInLine" : 2
      },
      "130" : {
        "Text" : "# GCC PCH support requires version >= 3.4\n",
        "Line" : 1838,
        "CharPositionInLine" : 2
      },
      "131" : {
        "Text" : "# all Clang versions have PCH support\n",
        "Line" : 1845,
        "CharPositionInLine" : 2
      },
      "132" : {
        "Text" : "# Intel PCH support requires version >= 8.0.0\n",
        "Line" : 1848,
        "CharPositionInLine" : 2
      },
      "133" : {
        "Text" : "# PCH compilation not supported by GCC / Clang for multi-architecture builds (e.g., i386, x86_64)\n",
        "Line" : 1866,
        "CharPositionInLine" : 2
      },
      "134" : {
        "Text" : "# ${CMAKE_CFG_INTDIR} may reference a build-time variable when using a generator which supports configuration types\n",
        "Line" : 1885,
        "CharPositionInLine" : 1
      },
      "135" : {
        "Text" : "# start new unity file segment\n",
        "Line" : 1928,
        "CharPositionInLine" : 4
      },
      "136" : {
        "Text" : "# there is only a single unity file\n",
        "Line" : 1939,
        "CharPositionInLine" : 2
      },
      "137" : {
        "Text" : "# end with final unity file segment\n",
        "Line" : 1942,
        "CharPositionInLine" : 2
      },
      "138" : {
        "Text" : "# For Xcode, we completely hand off the compilation of the prefix header to the IDE\n",
        "Line" : 2013,
        "CharPositionInLine" : 4
      },
      "139" : {
        "Text" : "# MSVC uses the extension .pch added to the prefix header base name\n",
        "Line" : 2018,
        "CharPositionInLine" : 4
      },
      "140" : {
        "Text" : "# Clang looks for a precompiled header corresponding to the prefix header with the extension .pch appended\n",
        "Line" : 2021,
        "CharPositionInLine" : 4
      },
      "141" : {
        "Text" : "# GCC looks for a precompiled header corresponding to the prefix header with the extension .gch appended\n",
        "Line" : 2024,
        "CharPositionInLine" : 4
      },
      "142" : {
        "Text" : "# Intel uses the extension .pchi added to the prefix header base name\n",
        "Line" : 2027,
        "CharPositionInLine" : 4
      },
      "143" : {
        "Text" : "# depend on target's generated source files\n",
        "Line" : 2059,
        "CharPositionInLine" : 1
      },
      "144" : {
        "Text" : "# but omit all generated source files that have the COTIRE_EXCLUDED property set to true\n",
        "Line" : 2063,
        "CharPositionInLine" : 2
      },
      "145" : {
        "Text" : "# and omit all generated source files that have the COTIRE_DEPENDENCY property set to false explicitly\n",
        "Line" : 2068,
        "CharPositionInLine" : 2
      },
      "146" : {
        "Text" : "# depend on target source files marked with custom COTIRE_DEPENDENCY property\n",
        "Line" : 2085,
        "CharPositionInLine" : 1
      },
      "147" : {
        "Text" : "# set up variables to be configured\n",
        "Line" : 2098,
        "CharPositionInLine" : 1
      },
      "148" : {
        "Text" : "# set up COTIRE_TARGET_SOURCES\n",
        "Line" : 2123,
        "CharPositionInLine" : 1
      },
      "149" : {
        "Text" : "# use absolute paths for generated files only, retrieving the LOCATION property is an expensive operation\n",
        "Line" : 2128,
        "CharPositionInLine" : 3
      },
      "150" : {
        "Text" : "# copy variable definitions to cotire target script\n",
        "Line" : 2135,
        "CharPositionInLine" : 1
      },
      "151" : {
        "Text" : "# omit COTIRE_*_INIT variables\n",
        "Line" : 2138,
        "CharPositionInLine" : 1
      },
      "152" : {
        "Text" : "# omit COTIRE_VERBOSE which is passed as a CMake define on command line\n",
        "Line" : 2143,
        "CharPositionInLine" : 1
      },
      "153" : {
        "Text" : "# generate target script file\n",
        "Line" : 2166,
        "CharPositionInLine" : 1
      },
      "154" : {
        "Text" : "# use file(GENERATE ...) to expand generator expressions in the target script at CMake generate-time\n",
        "Line" : 2171,
        "CharPositionInLine" : 2
      },
      "155" : {
        "Text" : "# for Visual Studio and Intel, we attach the precompiled header compilation to the host file\n\n# the remaining files include the precompiled header, see cotire_setup_pch_file_inclusion\n",
        "Line" : 2185,
        "CharPositionInLine" : 2
      },
      "156" : {
        "Text" : "# make object file generated from host file depend on prefix header\n",
        "Line" : 2194,
        "CharPositionInLine" : 3
      },
      "157" : {
        "Text" : "# mark host file as cotired to prevent it from being used in another cotired target\n",
        "Line" : 2196,
        "CharPositionInLine" : 3
      },
      "158" : {
        "Text" : "# for makefile based generator, we add a custom command to precompile the prefix header\n",
        "Line" : 2200,
        "CharPositionInLine" : 2
      },
      "159" : {
        "Text" : "# for Visual Studio and Intel, we include the precompiled header in all but the host file\n\n# the host file does the precompiled header compilation, see cotire_setup_pch_file_compilation\n",
        "Line" : 2227,
        "CharPositionInLine" : 2
      },
      "160" : {
        "Text" : "# mark sources as cotired to prevent them from being used in another cotired target\n",
        "Line" : 2232,
        "CharPositionInLine" : 3
      },
      "161" : {
        "Text" : "# make object files generated from source files depend on precompiled header\n",
        "Line" : 2239,
        "CharPositionInLine" : 3
      },
      "162" : {
        "Text" : "# for makefile based generator, we force the inclusion of the prefix header for a subset\n\n# of the source files, if this is a multi-language target or has excluded files\n",
        "Line" : 2245,
        "CharPositionInLine" : 3
      },
      "163" : {
        "Text" : "# mark sources as cotired to prevent them from being used in another cotired target\n",
        "Line" : 2252,
        "CharPositionInLine" : 3
      },
      "164" : {
        "Text" : "# make object files generated from source files depend on precompiled header\n",
        "Line" : 2255,
        "CharPositionInLine" : 2
      },
      "165" : {
        "Text" : "# force the inclusion of the prefix header for the given source files\n",
        "Line" : 2262,
        "CharPositionInLine" : 1
      },
      "166" : {
        "Text" : "# mark sources as cotired to prevent them from being used in another cotired target\n",
        "Line" : 2269,
        "CharPositionInLine" : 1
      },
      "167" : {
        "Text" : "# make object files generated from source files depend on prefix header\n",
        "Line" : 2271,
        "CharPositionInLine" : 1
      },
      "168" : {
        "Text" : "# for Xcode, we attach a pre-build action to generate the unity sources and prefix headers\n",
        "Line" : 2335,
        "CharPositionInLine" : 2
      },
      "169" : {
        "Text" : "# we also generate a generic, single prefix header which includes all language specific prefix headers\n",
        "Line" : 2346,
        "CharPositionInLine" : 3
      },
      "170" : {
        "Text" : "# because CMake PRE_BUILD command does not support dependencies,\n\n# we check dependencies explicity in cotire script mode when the pre-build action is run\n",
        "Line" : 2357,
        "CharPositionInLine" : 2
      },
      "171" : {
        "Text" : "# make Xcode precompile the generated prefix header with ProcessPCH and ProcessPCH++\n",
        "Line" : 2365,
        "CharPositionInLine" : 2
      },
      "172" : {
        "Text" : "# for makefile based generator, we force inclusion of the prefix header for all target source files\n\n# if this is a single-language target without any excluded files\n",
        "Line" : 2369,
        "CharPositionInLine" : 2
      },
      "173" : {
        "Text" : "# for Visual Studio and Intel, precompiled header inclusion is always done on the source file level\n\n# see cotire_setup_pch_file_inclusion\n",
        "Line" : 2373,
        "CharPositionInLine" : 3
      },
      "174" : {
        "Text" : "# set up compiled unity source dependencies via OBJECT_DEPENDS\n\n# this ensures that missing source files are generated before the unity file is compiled\n",
        "Line" : 2395,
        "CharPositionInLine" : 2
      },
      "175" : {
        "Text" : "# the OBJECT_DEPENDS property requires a list of full paths\n",
        "Line" : 2401,
        "CharPositionInLine" : 3
      },
      "176" : {
        "Text" : "# unity file compilation results in potentially huge object file, thus use /bigobj by default unter MSVC and Windows Intel\n",
        "Line" : 2410,
        "CharPositionInLine" : 3
      },
      "177" : {
        "Text" : "# CMake 3.1.0 supports generator expressions in arguments to DEPENDS\n",
        "Line" : 2418,
        "CharPositionInLine" : 3
      },
      "178" : {
        "Text" : "# prevent pre-processing errors upon generating the prefix header when a target's generated include file does not yet exist\n\n# we do not add a file-level dependency for the target's generated files though, because we only want to depend on their existence\n\n# thus we make the prefix header generation depend on a custom helper target which triggers the generation of the files\n",
        "Line" : 2462,
        "CharPositionInLine" : 1
      },
      "179" : {
        "Text" : "# custom helper target has already been generated while processing a different language\n",
        "Line" : 2467,
        "CharPositionInLine" : 2
      },
      "180" : {
        "Text" : "# GNU and Clang require indirect compilation of the prefix header to make them honor the system_header pragma\n",
        "Line" : 2492,
        "CharPositionInLine" : 2
      },
      "181" : {
        "Text" : "# set up generation of a prefix source file which includes the prefix header\n",
        "Line" : 2501,
        "CharPositionInLine" : 2
      },
      "182" : {
        "Text" : "# GNU and Clang require indirect compilation of the prefix header to make them honor the system_header pragma\n",
        "Line" : 2510,
        "CharPositionInLine" : 2
      },
      "183" : {
        "Text" : "# set up generation of a prefix source file which includes the prefix header\n",
        "Line" : 2517,
        "CharPositionInLine" : 2
      },
      "184" : {
        "Text" : "# for Xcode, we cannot apply the precompiled header to individual sources, only to the whole target\n",
        "Line" : 2690,
        "CharPositionInLine" : 3
      },
      "185" : {
        "Text" : "# for Xcode, we cannot apply the required PRE_BUILD action to generate the prefix header to an OBJECT_LIBRARY target\n",
        "Line" : 2694,
        "CharPositionInLine" : 3
      },
      "186" : {
        "Text" : "# cache message to avoid redundant messages on re-configure\n",
        "Line" : 2708,
        "CharPositionInLine" : 3
      },
      "187" : {
        "Text" : "# use all available cores\n",
        "Line" : 2728,
        "CharPositionInLine" : 3
      },
      "188" : {
        "Text" : "# check for user provided unity source file list\n",
        "Line" : 2753,
        "CharPositionInLine" : 1
      },
      "189" : {
        "Text" : "# set up unity files for parallel compilation\n",
        "Line" : 2760,
        "CharPositionInLine" : 1
      },
      "190" : {
        "Text" : "# set up single unity file for prefix header generation\n",
        "Line" : 2770,
        "CharPositionInLine" : 1
      },
      "191" : {
        "Text" : "# set up prefix header\n",
        "Line" : 2775,
        "CharPositionInLine" : 1
      },
      "192" : {
        "Text" : "# check for user provided prefix header files\n",
        "Line" : 2777,
        "CharPositionInLine" : 2
      },
      "193" : {
        "Text" : "# check if selected language has enough sources at all\n",
        "Line" : 2786,
        "CharPositionInLine" : 2
      },
      "194" : {
        "Text" : "# first file in _sourceFiles is passed as the host file\n",
        "Line" : 2796,
        "CharPositionInLine" : 4
      },
      "195" : {
        "Text" : "# user provided prefix header must be included unconditionally\n",
        "Line" : 2803,
        "CharPositionInLine" : 3
      },
      "196" : {
        "Text" : "# mark target as cotired for language\n",
        "Line" : 2807,
        "CharPositionInLine" : 1
      },
      "197" : {
        "Text" : "# for makefile based generators, we add a custom target to trigger the generation of the cotire related files\n",
        "Line" : 2835,
        "CharPositionInLine" : 2
      },
      "198" : {
        "Text" : "# Visual Studio and Intel only create precompiled header as a side effect\n",
        "Line" : 2840,
        "CharPositionInLine" : 4
      },
      "199" : {
        "Text" : "# for other generators, we add the \"clean all\" target to clean up the precompiled header\n",
        "Line" : 2855,
        "CharPositionInLine" : 2
      },
      "200" : {
        "Text" : "# remove source files that are included in the unity source\n",
        "Line" : 2866,
        "CharPositionInLine" : 3
      },
      "201" : {
        "Text" : "# add unity source files instead\n",
        "Line" : 2874,
        "CharPositionInLine" : 3
      },
      "202" : {
        "Text" : "# user provided prefix header must be included unconditionally by unity sources\n",
        "Line" : 2888,
        "CharPositionInLine" : 4
      },
      "203" : {
        "Text" : "# determine unity target sub type\n",
        "Line" : 2900,
        "CharPositionInLine" : 1
      },
      "204" : {
        "Text" : "# determine unity target sources\n",
        "Line" : 2910,
        "CharPositionInLine" : 1
      },
      "205" : {
        "Text" : "# handle automatic Qt processing\n",
        "Line" : 2913,
        "CharPositionInLine" : 1
      },
      "206" : {
        "Text" : "# if the original target sources are subject to CMake's automatic Qt processing,\n\n# also include implicitly generated <targetname>_automoc.cpp file\n",
        "Line" : 2918,
        "CharPositionInLine" : 2
      },
      "207" : {
        "Text" : "# prevent AUTOMOC, AUTOUIC and AUTORCC properties from being set when the unity target is created\n",
        "Line" : 2923,
        "CharPositionInLine" : 1
      },
      "208" : {
        "Text" : "# generate unity target\n",
        "Line" : 2930,
        "CharPositionInLine" : 1
      },
      "209" : {
        "Text" : "# depend on the original target's implicity generated <targetname>_automoc target\n",
        "Line" : 2937,
        "CharPositionInLine" : 2
      },
      "210" : {
        "Text" : "# copy output location properties\n",
        "Line" : 2940,
        "CharPositionInLine" : 1
      },
      "211" : {
        "Text" : "# append relative COTIRE_UNITY_OUTPUT_DIRECTORY to target's actual output directory\n",
        "Line" : 2950,
        "CharPositionInLine" : 3
      },
      "212" : {
        "Text" : "# copy output name\n",
        "Line" : 2975,
        "CharPositionInLine" : 1
      },
      "213" : {
        "Text" : "# copy compile stuff\n",
        "Line" : 2983,
        "CharPositionInLine" : 1
      },
      "214" : {
        "Text" : "# copy compile features\n",
        "Line" : 2994,
        "CharPositionInLine" : 1
      },
      "215" : {
        "Text" : "# copy interface stuff\n",
        "Line" : 2999,
        "CharPositionInLine" : 1
      },
      "216" : {
        "Text" : "# copy link stuff\n",
        "Line" : 3007,
        "CharPositionInLine" : 1
      },
      "217" : {
        "Text" : "# copy cmake stuff\n",
        "Line" : 3017,
        "CharPositionInLine" : 1
      },
      "218" : {
        "Text" : "# copy Apple platform specific stuff\n",
        "Line" : 3020,
        "CharPositionInLine" : 1
      },
      "219" : {
        "Text" : "# copy Windows platform specific stuff\n",
        "Line" : 3026,
        "CharPositionInLine" : 1
      },
      "220" : {
        "Text" : "# copy Android platform specific stuff\n",
        "Line" : 3040,
        "CharPositionInLine" : 1
      },
      "221" : {
        "Text" : "# use output name from original target\n",
        "Line" : 3048,
        "CharPositionInLine" : 1
      },
      "222" : {
        "Text" : "# use export symbol from original target\n",
        "Line" : 3053,
        "CharPositionInLine" : 1
      },
      "223" : {
        "Text" : "# check if cotire can be applied to target at all\n",
        "Line" : 3077,
        "CharPositionInLine" : 1
      },
      "224" : {
        "Text" : "# resolve alias\n",
        "Line" : 3089,
        "CharPositionInLine" : 1
      },
      "225" : {
        "Text" : "# check if target needs to be cotired for build type\n\n# when using configuration types, the test is performed at build time\n",
        "Line" : 3097,
        "CharPositionInLine" : 1
      },
      "226" : {
        "Text" : "# when not using configuration types, immediately create cotire intermediate dir\n",
        "Line" : 3113,
        "CharPositionInLine" : 1
      },
      "227" : {
        "Text" : "# choose languages that apply to the target\n",
        "Line" : 3118,
        "CharPositionInLine" : 1
      },
      "228" : {
        "Text" : "# use target's corresponding unity target, if available\n",
        "Line" : 3161,
        "CharPositionInLine" : 4
      },
      "229" : {
        "Text" : "# filter files in intermediate directory\n",
        "Line" : 3221,
        "CharPositionInLine" : 1
      },
      "230" : {
        "Text" : "# cotire is being run in script mode\n\n# locate -P on command args\n",
        "Line" : 3308,
        "CharPositionInLine" : 1
      },
      "231" : {
        "Text" : "# include target script if available\n",
        "Line" : 3320,
        "CharPositionInLine" : 1
      },
      "232" : {
        "Text" : "# the included target scripts sets up additional variables relating to the target (e.g., COTIRE_TARGET_SOURCES)\n",
        "Line" : 3322,
        "CharPositionInLine" : 2
      },
      "233" : {
        "Text" : "# check if target has been cotired for actual build type COTIRE_BUILD_TYPE\n",
        "Line" : 3338,
        "CharPositionInLine" : 1
      },
      "234" : {
        "Text" : "# executing pre-build action under Xcode, check dependency on target script\n",
        "Line" : 3358,
        "CharPositionInLine" : 3
      },
      "235" : {
        "Text" : "# executing custom command, no need to re-check for dependencies\n",
        "Line" : 3361,
        "CharPositionInLine" : 3
      },
      "236" : {
        "Text" : "# executing pre-build action under Xcode, check dependency on unity file and prefix dependencies\n",
        "Line" : 3380,
        "CharPositionInLine" : 3
      },
      "237" : {
        "Text" : "# executing custom command, no need to re-check for dependencies\n",
        "Line" : 3383,
        "CharPositionInLine" : 3
      },
      "238" : {
        "Text" : "# executing pre-build action under Xcode, check dependency on files to be combined\n",
        "Line" : 3451,
        "CharPositionInLine" : 3
      },
      "239" : {
        "Text" : "# executing custom command, no need to re-check for dependencies\n",
        "Line" : 3454,
        "CharPositionInLine" : 3
      },
      "240" : {
        "Text" : "# cotire is being run in include mode\n\n# set up all variable and property definitions\n",
        "Line" : 3477,
        "CharPositionInLine" : 1
      },
      "241" : {
        "Text" : "# enable parallelization for generators that run multiple jobs by default\n",
        "Line" : 3514,
        "CharPositionInLine" : 3
      },
      "242" : {
        "Text" : "# MSVC default PCH memory scaling factor of 100 percent (75 MB) is too small for template heavy C++ code\n\n# use a bigger default factor of 170 percent (128 MB)\n",
        "Line" : 3548,
        "CharPositionInLine" : 2
      },
      "243" : {
        "Text" : "# generated Ninja build files do not work if the unity target produces the same output file as the cotired target\n",
        "Line" : 3562,
        "CharPositionInLine" : 3
      },
      "244" : {
        "Text" : "# define cotire cache variables\n",
        "Line" : 3569,
        "CharPositionInLine" : 1
      },
      "245" : {
        "Text" : "# define cotire directory properties\n",
        "Line" : 3622,
        "CharPositionInLine" : 1
      },
      "246" : {
        "Text" : "# define cotire target properties\n",
        "Line" : 3694,
        "CharPositionInLine" : 1
      },
      "247" : {
        "Text" : "# define cotire source properties\n",
        "Line" : 3858,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 248
    },
    "doomsday/doc/output/Makefile" : {
      "ObjectId" : "e2635160c6dcc689c555e6a5cbaaccfc2072f5f2",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "doomsday/external/fluidsynth/CMakeLists.txt" : {
      "ObjectId" : "31d33d61d5a155d570dd5baa45e0b8dbcc113aff",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FluidSynth - A Software Synthesizer\n\n#\n\n# Copyright (C) 2003-2011 Peter Hanappe and others.\n\n#\n\n# This library is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU Library General Public License\n\n# as published by the Free Software Foundation; either version 2 of\n\n# the License, or (at your option) any later version.\n\n#\n\n# This library is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n\n# Library General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU Library General Public\n\n# License along with this library; if not, write to the Free\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n\n# 02111-1307, USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake based build system. Pedro Lopez-Cabanillas <plcl@users.sf.net>\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# FluidSynth package name\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# FluidSynth package version\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# libfluidsynth - Library version\n\n# *** NOTICE ***\n\n# Update library version upon each release (follow these steps in order)\n\n# if any source code changes: REVISION++\n\n# if any interfaces added/removed/changed: REVISION=0\n\n# if any interfaces removed/changed (compatibility broken): CURRENT++\n\n# if any interfaces have been added: AGE++\n\n# if any interfaces have been removed/changed (compatibility broken): AGE=0\n\n# This is not exactly the same algorithm as the libtool one, but the results are the same.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Options disabled by default\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Options enabled by default\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Platform specific options\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Initialize the library directory name suffix.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Default install directory names\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Basic C library checks\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Options for the GNU C compiler only\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Windows\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# MinGW compiler (a Windows GCC port)\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Check PThreads, but not in Windows\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# IBM OS/2\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Solaris / SunOS\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Apple Mac OSX\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Mandatory tool: pkg-config\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Mandatory libraries: glib and gthread\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Optional features\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# General configuration file\n",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Extra configuration file for MS VisualC compiler\n",
        "Line" : 390,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Process subdirectories\n",
        "Line" : 396,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Extra targets for Unix build environments\n",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# RPM spec\n",
        "Line" : 403,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# pkg-config support\n",
        "Line" : 407,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# uninstall custom target\n",
        "Line" : 417,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# tarball custom target\n",
        "Line" : 423,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "#       COMMAND tar -cj --exclude .svn --exclude Makefile.am -f ${PACKAGE}-${VERSION}.tar.bz2 ${PACKAGE}-${VERSION}\n\n#       COMMAND tar -cz --exclude .svn --exclude Makefile.am -f ${PACKAGE}-${VERSION}.tar.gz ${PACKAGE}-${VERSION}\n\n#       COMMAND zip -qr ${PACKAGE}-${VERSION}.zip ${PACKAGE}-${VERSION} -x '*.svn*' -x '*Makefile.am'\n",
        "Line" : 432,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# tarball custom target\n",
        "Line" : 442,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# Files below are added when running autogen.sh\n\n# COMMAND cp -r autom4te.cache ${PACKAGE}-${VERSION}\n",
        "Line" : 452,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# CPack support\n",
        "Line" : 467,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# source packages\n",
        "Line" : 477,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# binary packages\n",
        "Line" : 483,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 35
    },
    "doomsday/external/fluidsynth/doc/CMakeLists.txt" : {
      "ObjectId" : "d6c90e6ec55f4f107256e2a8488a8258e03b84f7",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FluidSynth - A Software Synthesize\n\n#\n\n# Copyright (C) 2003-2010 Peter Hanappe and others.\n\n#\n\n# This library is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU Library General Public License\n\n# as published by the Free Software Foundation; either version 2 of\n\n# the License, or (at your option) any later version.\n\n#\n\n# This library is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n\n# Library General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU Library General Public\n\n# License along with this library; if not, write to the Free\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n\n# 02111-1307, USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake based build system. Pedro Lopez-Cabanillas <plcl@users.sf.net>\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "doomsday/external/fluidsynth/doc/Doxyfile.cmake" : {
      "ObjectId" : "0ba72a0e036f54bb1a68b41e9795e7870a600391",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Doxyfile 1.6\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# Project related configuration options\n\n#---------------------------------------------------------------------------\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# Build related configuration options\n\n#---------------------------------------------------------------------------\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options related to warning and progress messages\n\n#---------------------------------------------------------------------------\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options related to the input files\n\n#---------------------------------------------------------------------------\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options related to source browsing\n\n#---------------------------------------------------------------------------\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options related to the alphabetical class index\n\n#---------------------------------------------------------------------------\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options related to the HTML output\n\n#---------------------------------------------------------------------------\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options related to the LaTeX output\n\n#---------------------------------------------------------------------------\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options related to the RTF output\n\n#---------------------------------------------------------------------------\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options related to the man page output\n\n#---------------------------------------------------------------------------\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options related to the XML output\n\n#---------------------------------------------------------------------------\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options for the AutoGen Definitions output\n\n#---------------------------------------------------------------------------\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# configuration options related to the Perl module output\n\n#---------------------------------------------------------------------------\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# Configuration options related to the preprocessor   \n\n#---------------------------------------------------------------------------\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# Configuration::additions related to external references   \n\n#---------------------------------------------------------------------------\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# Configuration options related to the dot tool   \n\n#---------------------------------------------------------------------------\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# Configuration::additions related to the search engine   \n\n#---------------------------------------------------------------------------\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "doomsday/external/fluidsynth/include/CMakeLists.txt" : {
      "ObjectId" : "76a8f8734a570fece9541f0f35bafa48a084818b",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FluidSynth - A Software Synthesize\n\n#\n\n# Copyright (C) 2003-2010 Peter Hanappe and others.\n\n#\n\n# This library is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU Library General Public License\n\n# as published by the Free Software Foundation; either version 2 of\n\n# the License, or (at your option) any later version.\n\n#\n\n# This library is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n\n# Library General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU Library General Public\n\n# License along with this library; if not, write to the Free\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n\n# 02111-1307, USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake based build system. Pedro Lopez-Cabanillas <plcl@users.sf.net>\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "doomsday/external/fluidsynth/include/fluidsynth/CMakeLists.txt" : {
      "ObjectId" : "b146d13c137ce6346d3bc4d229f1a4a410c382f4",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FluidSynth - A Software Synthesize\n\n#\n\n# Copyright (C) 2003-2010 Peter Hanappe and others.\n\n#\n\n# This library is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU Library General Public License\n\n# as published by the Free Software Foundation; either version 2 of\n\n# the License, or (at your option) any later version.\n\n#\n\n# This library is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n\n# Library General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU Library General Public\n\n# License along with this library; if not, write to the Free\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n\n# 02111-1307, USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake based build system. Pedro Lopez-Cabanillas <plcl@users.sf.net>\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "doomsday/external/fluidsynth/src/CMakeLists.txt" : {
      "ObjectId" : "94464e4a1fdc6febbe205bacbe7d335ed2c2ac28",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FluidSynth - A Software Synthesizer\n\n#\n\n# Copyright (C) 2003-2010 Peter Hanappe and others.\n\n#\n\n# This library is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU Library General Public License\n\n# as published by the Free Software Foundation; either version 2 of\n\n# the License, or (at your option) any later version.\n\n#\n\n# This library is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n\n# Library General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU Library General Public\n\n# License along with this library; if not, write to the Free\n\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n\n# 02111-1307, USA\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake based build system. Pedro Lopez-Cabanillas <plcl@users.sf.net>\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ************ library ************\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# note: by default this target creates a shared object (or dll). To build a\n\n# static library instead, set the option BUILD_SHARED_LIBS to FALSE.\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ************ CLI program ************\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "doomsday/external/fluidsynth/src/config.cmake" : {
      "ObjectId" : "82e6cdbfc3782f1e0b4d317d186d26ed026f2f62",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ifndef CONFIG_H\n\n#define CONFIG_H\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#cmakedefine ALSA_SUPPORT @ALSA_SUPPORT@\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#cmakedefine AUFILE_SUPPORT @AUFILE_SUPPORT@\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#cmakedefine COREAUDIO_SUPPORT @COREAUDIO_SUPPORT@\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#cmakedefine COREMIDI_SUPPORT @COREMIDI_SUPPORT@\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#cmakedefine DART_SUPPORT @DART_SUPPORT@\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#cmakedefine DARWIN @DARWIN@\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#cmakedefine DBUS_SUPPORT  @DBUS_SUPPORT@\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#cmakedefine FPE_CHECK @FPE_CHECK@\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#cmakedefine HAVE_ARPA_INET_H @HAVE_ARPA_INET_H@\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#cmakedefine HAVE_DLFCN_H @HAVE_DLFCN_H@\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#cmakedefine HAVE_ERRNO_H @HAVE_ERRNO_H@\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#cmakedefine HAVE_FCNTL_H @HAVE_FCNTL_H@\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#cmakedefine HAVE_INTTYPES_H @HAVE_INTTYPES_H@\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#cmakedefine HAVE_LADCCA @HAVE_LADCCA@\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#cmakedefine HAVE_LASH @HAVE_LASH@\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#cmakedefine HAVE_LIBDL @HAVE_LIBDL@\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#cmakedefine HAVE_LIBMIDISHARE @HAVE_LIBMIDISHARE@\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#cmakedefine HAVE_LIBPTHREAD @HAVE_LIBPTHREAD@\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#cmakedefine HAVE_LIMITS_H @HAVE_LIMITS_H@\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#cmakedefine HAVE_MACHINE_SOUNDCARD_H @HAVE_MACHINE_SOUNDCARD_H@\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#cmakedefine HAVE_MATH_H @HAVE_MATH_H@\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#cmakedefine HAVE_MEMORY_H @HAVE_MEMORY_H@\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#cmakedefine HAVE_MIDISHARE_H @HAVE_MIDISHARE_H@\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#cmakedefine HAVE_NETINET_IN_H @HAVE_NETINET_IN_H@\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#cmakedefine HAVE_NETINET_TCP_H @HAVE_NETINET_TCP_H@\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#cmakedefine HAVE_PTHREAD_H @HAVE_PTHREAD_H@\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#cmakedefine HAVE_SIGNAL_H @HAVE_SIGNAL_H@\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#cmakedefine HAVE_STDARG_H @HAVE_STDARG_H@\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#cmakedefine HAVE_STDINT_H @HAVE_STDINT_H@\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#cmakedefine HAVE_STDIO_H @HAVE_STDIO_H@\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#cmakedefine HAVE_STDLIB_H @HAVE_STDLIB_H@\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#cmakedefine HAVE_STRINGS_H @HAVE_STRINGS_H@\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#cmakedefine HAVE_STRING_H @HAVE_STRING_H@\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#cmakedefine HAVE_SYS_IOCTL_H @HAVE_SYS_IOCTL_H@\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#cmakedefine HAVE_SYS_MMAN_H @HAVE_SYS_MMAN_H@\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#cmakedefine HAVE_SYS_SOCKET_H @HAVE_SYS_SOCKET_H@\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#cmakedefine HAVE_SYS_SOUNDCARD_H @HAVE_SYS_SOUNDCARD_H@\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#cmakedefine HAVE_SYS_STAT_H @HAVE_SYS_STAT_H@\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#cmakedefine HAVE_SYS_TIME_H @HAVE_SYS_TIME_H@\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#cmakedefine HAVE_SYS_TYPES_H @HAVE_SYS_TYPES_H@\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#cmakedefine HAVE_UNISTD_H @HAVE_UNISTD_H@\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#cmakedefine HAVE_WINDOWS_H @HAVE_WINDOWS_H@\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#cmakedefine JACK_SUPPORT @JACK_SUPPORT@\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#cmakedefine LADSPA @LADSPA_SUPPORT@\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#cmakedefine LIBSNDFILE_HASVORBIS @LIBSNDFILE_HASVORBIS@\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#cmakedefine LIBSNDFILE_SUPPORT @LIBSNDFILE_SUPPORT@\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#cmakedefine MIDISHARE_SUPPORT @MIDISHARE_SUPPORT@\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#cmakedefine MINGW32 @MINGW32@\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "#cmakedefine NO_MINUS_C_MINUS_O @NO_MINUS_C_MINUS_O@\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "#cmakedefine OSS_SUPPORT @OSS_SUPPORT@\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#cmakedefine PACKAGE \"@PACKAGE@\"\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "#cmakedefine PACKAGE_BUGREPORT @PACKAGE_BUGREPORT@\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "#cmakedefine PACKAGE_NAME @PACKAGE_NAME@\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "#cmakedefine PACKAGE_STRING @PACKAGE_STRING@\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "#cmakedefine PACKAGE_TARNAME @PACKAGE_TARNAME@\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "#cmakedefine PACKAGE_VERSION @PACKAGE_VERSION@\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "#cmakedefine PORTAUDIO_SUPPORT @PORTAUDIO_SUPPORT@\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "#cmakedefine PULSE_SUPPORT @PULSE_SUPPORT@\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "#cmakedefine STDC_HEADERS @STDC_HEADERS@\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "#cmakedefine TRAP_ON_FPE @TRAP_ON_FPE@\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "#cmakedefine VERSION @FLUIDSYNTH_VERSION@\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "#cmakedefine WITH_FLOAT @WITH_FLOAT@\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "#cmakedefine WITH_PROFILING @WITH_PROFILING@\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "#cmakedefine WITH_READLINE @WITH_READLINE@\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "#cmakedefine SUPPORTS_VLA @SUPPORTS_VLA@ \n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "#cmakedefine WORDS_BIGENDIAN @WORDS_BIGENDIAN@\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "#ifndef __cplusplus\n\n#cmakedefine inline @INLINE_KEYWORD@\n\n#endif\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "#endif /* CONFIG_H */\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 69
    },
    "doomsday/external/fluidsynth/src/config_win32.cmake" : {
      "ObjectId" : "6b8708d935b28b70397d6bb0bbe5d178cc972f93",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#pragma once\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#cmakedefine HAVE_IO_H @HAVE_IO_H@\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#define DSOUND_SUPPORT 1\n\n#define WINMIDI_SUPPORT 1\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#define snprintf _snprintf\n\n#define strcasecmp _stricmp\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#if _MSC_VER < 1500\n\n#define vsnprintf _vsnprintf\n\n#endif\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#define STDIN_FILENO 0\n\n#define STDOUT_FILENO 1\n\n#define STDERR_FILENO 2\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#pragma warning(disable : 4244)\n\n#pragma warning(disable : 4101)\n\n#pragma warning(disable : 4305)\n\n#pragma warning(disable : 4996)\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "doomsday/sdk/CMakeLists.txt" : {
      "ObjectId" : "c5b7d46d1e1e4ea0b4b280988083c240f66932d3",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Doomsday SDK \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doomsday/sdk/libappfw/CMakeLists.txt" : {
      "ObjectId" : "d785889de5625d96a6633132bff922922eb57290",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Doomsday Engine -- libappfw\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Definitions.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Source and header files.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Direct2D is used for DPI information.\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "doomsday/sdk/libcore/CMakeLists.txt" : {
      "ObjectId" : "14dc1aa89fa57fb8ee9e381b6c61c27a3d63ff4f",
      "LastModified" : "2019-03-16T08:51:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Doomsday Engine -- libcore\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Definitions.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Source and header files.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Update the resource file.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "doomsday/sdk/libgui/CMakeLists.txt" : {
      "ObjectId" : "dd21313340559038cb2646d1b25cec5bbb13a84a",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Doomsday Engine -- libgui\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------------------------------\n\n# Configure Assimp first as a static library. Doomsday's Config is not\n\n# included yet so that Assimp's build products are not included in\n\n# the client component.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Enable only the relevant Assimp model importers.\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#----------------------------------------------------------------------------------------\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Apply Doomsday's configuration.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# libgui uses Qt 5.4 OpenGL APIs.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Don't change display modes on macOS/iOS. We'll instead resize the\n\n# frame buffer and scale up.\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# OpenGL API selection.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Dependencies.\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Definitions.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Source and header files.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Choose which DisplayMode sources to use.\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Ignore mobile-only sources.\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# The assimp target may be linked to some system libraries that\n\n# must be linked publicly (rather than privately like is the\n\n# done for libassimp).\n",
        "Line" : 140,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# If Assimp is part of the build, ensure that it gets compiled before libgui.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# from assimp project\n",
        "Line" : 182,
        "CharPositionInLine" : 60
      },
      "CommentCount" : 16
    },
    "doomsday/sdk/liblegacy/CMakeLists.txt" : {
      "ObjectId" : "f06c07a5a64a3ca1f38f8bb2256ed81289412c6a",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Doomsday Engine -- liblegacy\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Options.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Definitions.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Source and header files.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#file (GLOB_RECURSE C_SOURCES src/*.c)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "doomsday/sdk/libshell/CMakeLists.txt" : {
      "ObjectId" : "ed4259e3f582f7dbaf9850fabfca82bd3afdb97c",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Doomsday Engine -- libshell\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Definitions.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Source and header files.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "doomsday/tests/CMakeLists.txt" : {
      "ObjectId" : "65df7535d3b7f0f06df3200789fcdd76532f34cf",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The Doomsday Engine Project -- Test Suite\n\n# Copyright (c) 2015-2017 Jaakko Keränen <jaakko.keranen@iki.fi>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doomsday/tests/TestConfig.cmake" : {
      "ObjectId" : "af669c452b102438257a6a2c5be0e669a8461f05",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The Doomsday Engine Project -- Common build configuration for tests\n\n# Copyright (c) 2015-2017 Jaakko Keränen <jaakko.keranen@iki.fi>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doomsday/tests/test_appfw/CMakeLists.txt" : {
      "ObjectId" : "1ff873b6032a720c41375608c03eed45b1200df1",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doomsday/tests/test_archive/CMakeLists.txt" : {
      "ObjectId" : "6f22a58796554c79f27632d19a04a59b358e37b0",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doomsday/tests/test_bitfield/CMakeLists.txt" : {
      "ObjectId" : "2c04092e5927ae8ee5751a24a7e3ff21d1cfec6e",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doomsday/tests/test_commandline/CMakeLists.txt" : {
      "ObjectId" : "9028c319ceb437abe889c417b6ed1e5996bee2c3",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doomsday/tests/test_glsandbox/CMakeLists.txt" : {
      "ObjectId" : "3230ba8db61aa2f08770b04a580003f8f7a9402a",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doomsday/tests/test_info/CMakeLists.txt" : {
      "ObjectId" : "f3d38a08c2bb84cf1a2f0ec868ac259dd21e3e9b",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doomsday/tests/test_log/CMakeLists.txt" : {
      "ObjectId" : "6218adc0419b86dda6cc8b78f2ce58cfada78e60",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doomsday/tests/test_pointerset/CMakeLists.txt" : {
      "ObjectId" : "35bed7cf1c60d40e86af764e0f322ca0ea8b180a",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doomsday/tests/test_record/CMakeLists.txt" : {
      "ObjectId" : "935e91da1986aee0385942c0f342462726fe7b76",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doomsday/tests/test_script/CMakeLists.txt" : {
      "ObjectId" : "6dc6cdfd6ddf5c2eb2fc3e4b804462973068549b",
      "LastModified" : "2019-03-16T08:51:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doomsday/tests/test_string/CMakeLists.txt" : {
      "ObjectId" : "2820d0d4e36cf4ede1b8d4c7449219fe09725b48",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doomsday/tests/test_stringpool/CMakeLists.txt" : {
      "ObjectId" : "bc3ff9cabacdfb3a19d0910a417f1472eedc27e7",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doomsday/tests/test_vectors/CMakeLists.txt" : {
      "ObjectId" : "dc3bb6a29ef3ac7403082523f462401cd7cc42db",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doomsday/tools/CMakeLists.txt" : {
      "ObjectId" : "8ba809ad99b18f6b3987a51962726949bf0902fe",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Doomsday Engine - Tools\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Amethyst is expected to go to (e.g.) /usr/local/bin, while the rest\n\n# goes to distrib/products/. Compile and install it manually beforehand.\n\n#\n\n# add_subdirectory (amethyst)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# requires ncurses\n",
        "Line" : 19,
        "CharPositionInLine" : 34
      },
      "3" : {
        "Text" : "# Tools install files into the Doomsday.app bundle, so it must now be\n\n# signed again.\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "doomsday/tools/amethyst/CMakeLists.txt" : {
      "ObjectId" : "8679ac63a41c05dd27ff2e28e1f7f822aa963679",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Amethyst (c) 2002-2017 Jaakko Keränen <jaakko.keranen@iki.fi>\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, see <http://www.gnu.org/licenses/>.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# In a standalone source package, the cmake modules are in a subdirectory.\n\n# Otherwise, use Doomsday's CMake modules.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# install (FILES\n\n#     ${CMAKE_CURRENT_SOURCE_DIR}/../../cmake/Macros.cmake\n\n#     ${CMAKE_CURRENT_SOURCE_DIR}/../../cmake/FindQt.cmake\n\n# )\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "doomsday/tools/doomsdayscript/CMakeLists.txt" : {
      "ObjectId" : "3e53dad2404b5ba3bbeac1096aa2246fc21f6def",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Doomsday Engine - Doomsday Script Utility\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "doomsday/tools/md2tool/CMakeLists.txt" : {
      "ObjectId" : "a5c1530105f0e283e0ca63814f186b5f0f1d773a",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Doomsday Engine - MD2 Tool\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doomsday/tools/savegametool/CMakeLists.txt" : {
      "ObjectId" : "1c86d6dec44f0c4ca07faab09571c4f4b7ca548e",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Doomsday Engine - Savegame Tool\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The client expects savegametool to be available, so install in the\n\n# \"client\" component.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "doomsday/tools/shell-text/CMakeLists.txt" : {
      "ObjectId" : "c726989b93e6581ac3cfcf7ee7ca2d2d62908ced",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The Doomsday Engine Project: Server Shell -- Text-Mode Interface\n\n# Copyright (c) 2013-2017 Jaakko Keränen <jaakko.keranen@iki.fi>\n\n#\n\n# This program is distributed under the GNU General Public License\n\n# version 2 (or, at your option, any later version). Please visit\n\n# http://www.gnu.org/licenses/gpl.html for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "doomsday/tools/shell/CMakeLists.txt" : {
      "ObjectId" : "3777f4d51ee69e2a6dcc78313c01899127defaf0",
      "LastModified" : "2019-03-16T08:51:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The Doomsday Engine Project: Server Shell -- GUI Interface\n\n# Copyright (c) 2013-2017 Jaakko Keränen <jaakko.keranen@iki.fi>\n\n#\n\n# This program is distributed under the GNU General Public License\n\n# version 2 (or, at your option, any later version). Please visit\n\n# http://www.gnu.org/licenses/gpl.html for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Deployment.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# WIX generator requires setting this manually.\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "doomsday/tools/texc/CMakeLists.txt" : {
      "ObjectId" : "ee145ba7fd6db6c96681cc2b5bd123c329fbf4b2",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Doomsday Engine - Texture Compiler\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Installed to app bundle, so must be re-signed.\n\n# TODO: Build this before client, so it can be bundled cleanly.\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "doomsday/tools/wadtool/CMakeLists.txt" : {
      "ObjectId" : "700f7d8d8d9a4ae410f74c654dc9f2760a141ed4",
      "LastModified" : "2017-09-09T11:29:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# WAD Creation Tool for Doomsday\n\n# (c) 2005-2017 Jaakko Keränen <jaakko.keranen@iki.fi>\n\n# License: GPL 2.0+\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Installed to app bundle, so must be re-signed. \n\n# TODO: Build this before client, so it can be bundled cleanly.\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 99,
    "MAKEFILE" : 2
  },
  "ElapsedTime" : 16074
}