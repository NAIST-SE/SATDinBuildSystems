{
  "Repository" : "4716280",
  "Revision" : "HEAD",
  "ObjectId" : "20fdea6e1b5ae42fb50c9179e332c22242030a38",
  "CommitTime" : "2018-11-29T00:41:26Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "f6cd8d006da2e570a7e1717c36d4d733f8e2d50a",
      "LastModified" : "2018-11-23T20:28:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake 3.1 has built-in CXX standard checks.\n",
        "Line" : 7,
        "CharPositionInLine" : 16
      },
      "1" : {
        "Text" : "########################################## Unit Testing ###################################\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We need C++11\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Standard linking to gtest stuff.\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/FindEASYLOGGINGPP.cmake" : {
      "ObjectId" : "383b99f0993457441eb002ef7f799b4965562c73",
      "LastModified" : "2018-11-23T20:16:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# CMake module for Easylogging++ logging library\n\n#\n\n# Defines ${EASYLOGGINGPP_INCLUDE_DIR}\n\n#\n\n# If ${EASYLOGGINGPP_USE_STATIC_LIBS} is ON then static libs are searched.\n\n# In these cases ${EASYLOGGINGPP_LIBRARY} is also defined\n\n#\n\n# (c) 2017-2018 Zuhd Web Services\n\n#\n\n# https://github.com/zuhd-org/easyloggingpp\n\n# https://zuhd.org\n\n# https://muflihun.com\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Findgtest.cmake" : {
      "ObjectId" : "cd443f469628cb5560f509b762e8efb19ab36a08",
      "LastModified" : "2017-02-04T06:04:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate the Google C++ Testing Framework.\n\n#\n\n# Defines the following variables:\n\n#\n\n#   GTEST_FOUND - Found the Google Testing framework\n\n#   GTEST_INCLUDE_DIRS - Include directories\n\n#\n\n# Also defines the library variables below as normal\n\n# variables.  These contain debug/optimized keywords when\n\n# a debugging library is found.\n\n#\n\n#   GTEST_BOTH_LIBRARIES - Both libgtest & libgtest-main\n\n#   GTEST_LIBRARIES - libgtest\n\n#   GTEST_MAIN_LIBRARIES - libgtest-main\n\n#\n\n# Accepts the following variables as input:\n\n#\n\n#   GTEST_ROOT - (as a CMake or environment variable)\n\n#                The root directory of the gtest install prefix\n\n#\n\n#   GTEST_MSVC_SEARCH - If compiling with MSVC, this variable can be set to\n\n#                       \"MD\" or \"MT\" to enable searching a GTest build tree\n\n#                       (defaults: \"MD\")\n\n#\n\n#-----------------------\n\n# Example Usage:\n\n#\n\n#    enable_testing()\n\n#    find_package(GTest REQUIRED)\n\n#    include_directories(${GTEST_INCLUDE_DIRS})\n\n#\n\n#    add_executable(foo foo.cc)\n\n#    target_link_libraries(foo ${GTEST_BOTH_LIBRARIES})\n\n#\n\n#    add_test(AllTestsInFoo foo)\n\n#\n\n#-----------------------\n\n#\n\n# If you would like each Google test to show up in CTest as\n\n# a test you may use the following macro.\n\n# NOTE: It will slow down your tests by running an executable\n\n# for each test and test fixture.  You will also have to rerun\n\n# CMake after adding or removing tests or test fixtures.\n\n#\n\n# GTEST_ADD_TESTS(executable extra_args ARGN)\n\n#    executable = The path to the test executable\n\n#    extra_args = Pass a list of extra arguments to be passed to\n\n#                 executable enclosed in quotes (or \"\" for none)\n\n#    ARGN =       A list of source files to search for tests & test\n\n#                 fixtures.\n\n#\n\n#  Example:\n\n#     set(FooTestArgs --foo 1 --bar 2)\n\n#     add_executable(FooTest FooUnitTest.cc)\n\n#     GTEST_ADD_TESTS(FooTest \"${FooTestArgs}\" FooUnitTest.cc)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2009 Philip Lowman <philip@yhbt.com>\n\n# Copyright 2009 Daniel Blezek <blezek@gmail.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n\n#\n\n# Thanks to Daniel Blezek <blezek@gmail.com> for the GTEST_ADD_TESTS code\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The provided /MD project files for Google Test add -md suffixes to the\n\n# library names.\n",
        "Line" : 138,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "samples/OpenGL/Cube/Makefile" : {
      "ObjectId" : "32c8cacb0ef2ec64d3500864deec53b4ddabdbec",
      "LastModified" : "2017-02-04T06:04:36Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "samples/Qt/basic/qt-sample.pro" : {
      "ObjectId" : "352259da3b43fce4d143d39d80775e00b5eac2c2",
      "LastModified" : "2017-02-13T03:41:49Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "samples/Qt/fast-dictionary/fast-dictionary.pro" : {
      "ObjectId" : "0fefdf996ce44e2b581bfe950fa1042d848c757a",
      "LastModified" : "2017-02-13T03:41:49Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "samples/Qt/file-splitter-joiner/file-splitter-and-joiner.pro" : {
      "ObjectId" : "e87c9a289ce9c4af73a3ec43756b0a3027859f21",
      "LastModified" : "2017-02-13T03:41:49Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2012-12-12T18:34:35\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "samples/Qt/shared-lib/myapp/myapp.pro" : {
      "ObjectId" : "9572932a1fead5f12bc1adc2659eb30548045a51",
      "LastModified" : "2017-02-04T06:04:36Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2013-08-17T01:02:59\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# try in lib build dir \"sudo cp %{buildDir}/libmylib.so* /usr/lib/\" to make this work\n",
        "Line" : 18,
        "CharPositionInLine" : 33
      },
      "CommentCount" : 2
    },
    "samples/Qt/shared-lib/mylib/mylib.pro" : {
      "ObjectId" : "8b2d2c9b28e50f369ab42baa1b246dcadbf11e40",
      "LastModified" : "2017-02-04T06:04:36Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2013-08-17T00:52:43\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 3,
    "QMAKE" : 5,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1428
}