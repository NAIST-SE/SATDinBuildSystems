{
  "Repository" : "488799",
  "Revision" : "HEAD",
  "ObjectId" : "f4cb9ccd1451d3ef0deb565fafcfd9bf7d218081",
  "CommitTime" : "2019-03-15T17:49:10Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "b9de2d53eed4c7fd72d39d36db28691478d6c9c4",
      "LastModified" : "2018-01-10T18:51:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#taken from http://geant4.cern.ch/support/source/geant4/CMakeLists.txt\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set some policies\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This project name is cyclus.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# check for and enable c++11 support (required for cyclus)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# enable assembly\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# quiets fortify_source warnings when not compiling with optimizations\n\n# in linux distros where compilers were compiled with fortify_source enabled by\n\n# default (e.g. Arch linux).\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# no overflow warnings because of silly coin-ness\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##############################################################################################\n\n################################# begin cmake configuration ##################################\n\n##############################################################################################\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# set project directories\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# set cycpp var\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# set cython post-processor var\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# This makes all the libraries build as SHARED\n",
        "Line" : 66,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Setup build locations.\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# use, i.e. don't skip the full RPATH for the build tree\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# when building, don't use the install RPATH already\n\n# (but later on when installing)\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# add the automatically determined parts of the RPATH\n\n# which point to directories outside the build tree to the install RPATH\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# the RPATH to be used when installing, but only if it's not a system directory\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Tell CMake where the modules are\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Include macros\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# set configuration variables\n",
        "Line" : 119,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# set configuration for all library builds\n",
        "Line" : 123,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# enable testing, must be at top-level cmake file\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "##############################################################################################\n\n################################## end cmake configuration ###################################\n\n##############################################################################################\n",
        "Line" : 144,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "##############################################################################################\n\n################################### begin find libraries #####################################\n\n##############################################################################################\n",
        "Line" : 148,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Debian installs useful LibXML2 files to /usr/include/libxml2/libxml\n\n# libxml2 is required for relaxng schema validation\n",
        "Line" : 166,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Find LibXML++ and dependencies\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# find lapack and link to it\n",
        "Line" : 183,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Find Sqlite3\n",
        "Line" : 190,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Find HDF5\n",
        "Line" : 194,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# Include the boost header files and the program_options library\n\n# Please be sure to use Boost rather than BOOST.\n\n# Capitalization matters on some platforms\n",
        "Line" : 208,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# SET(Boost_USE_MULTITHREADED    OFF)\n",
        "Line" : 213,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# find coin and link to it\n",
        "Line" : 231,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# no COIN, so no MILPs\n",
        "Line" : 236,
        "CharPositionInLine" : 6
      },
      "33" : {
        "Text" : "#\n\n# Some optional libraries to link in, as availble. Required for conda.\n\n#\n\n# pcre\n",
        "Line" : 240,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# gfortran\n",
        "Line" : 250,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# openblas\n",
        "Line" : 257,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# ClpSolver\n",
        "Line" : 264,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# iconv\n",
        "Line" : 271,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# icudata\n",
        "Line" : 278,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# icui18n\n",
        "Line" : 285,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# icuuc\n",
        "Line" : 292,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "#\n\n# Cython & Python Bindings\n\n#\n\n# Use new Python library finder\n",
        "Line" : 299,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# Include the CMake script UseCython.cmake.  This defines add_cython_module().\n\n# Instruction for use can be found at the top of cmake/UseCython.cmake.\n",
        "Line" : 312,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# With CMake, a clean separation can be made between the source tree and the\n\n# build tree.  When all source is compiled, as with pure C/C++, the source is\n\n# no-longer needed in the build tree.  However, with pure *.py source, the\n\n# source is processed directly.  To handle this, we reproduce the availability\n\n# of the source files in the build tree.\n",
        "Line" : 328,
        "CharPositionInLine" : 8
      },
      "44" : {
        "Text" : "# make sure we know about having python\n",
        "Line" : 338,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : "# If we don't have Python bindings, we may try to find tcmalloc.\n\n# Python has to be specially compiled for tcmalloc support, which it\n\n# normally isn't.\n",
        "Line" : 343,
        "CharPositionInLine" : 8
      },
      "46" : {
        "Text" : "##############################################################################################\n\n#################################### end find libraries ######################################\n\n##############################################################################################\n",
        "Line" : 350,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "##############################################################################################\n\n###################################### begin includes ########################################\n\n##############################################################################################\n",
        "Line" : 354,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# include all the directories we just found\n\n# NOTE: for some reason, adding quotes around\n\n# ${Glibmm_INCLUDE_DIRS} breaks Ubuntu 12.04\n",
        "Line" : 358,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# set core version, one way or the other\n",
        "Line" : 380,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "##############################################################################################\n\n####################################### end includes #########################################\n\n##############################################################################################\n",
        "Line" : 405,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "################# custom install files #######################################################\n",
        "Line" : 409,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "##############################################################################################\n\n################################## begin uninstall target ####################################\n\n##############################################################################################\n",
        "Line" : 444,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "##############################################################################################\n\n################################### end uninstall target #####################################\n\n##############################################################################################\n",
        "Line" : 457,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "##############################################################################################\n\n####################################### begin cpack ##########################################\n\n##############################################################################################\n",
        "Line" : 461,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# Here's where we package it with CPack\n",
        "Line" : 466,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# Here we set some components for installation with cpack\n",
        "Line" : 469,
        "CharPositionInLine" : 4
      },
      "57" : {
        "Text" : "# Organisation\n",
        "Line" : 473,
        "CharPositionInLine" : 4
      },
      "58" : {
        "Text" : "#required\n",
        "Line" : 474,
        "CharPositionInLine" : 61
      },
      "59" : {
        "Text" : "# Version\n",
        "Line" : 479,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "# Dependencies\n",
        "Line" : 484,
        "CharPositionInLine" : 4
      },
      "61" : {
        "Text" : "# Names\n",
        "Line" : 494,
        "CharPositionInLine" : 4
      },
      "62" : {
        "Text" : "# Configuration\n",
        "Line" : 507,
        "CharPositionInLine" : 4
      },
      "63" : {
        "Text" : "##############################################################################################\n\n######################################## end cpack ###########################################\n\n##############################################################################################\n",
        "Line" : 519,
        "CharPositionInLine" : 4
      },
      "64" : {
        "Text" : "##############################################################################################\n\n###################################### begin doxygen #########################################\n\n##############################################################################################\n",
        "Line" : 525,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# This is the directory that holds the doxygen doxyfile template (doxy.conf.in)\n",
        "Line" : 529,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# If doxygen exists, use the doc/CMakeLists.txt file for further instructions.\n",
        "Line" : 534,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "##############################################################################################\n\n####################################### end doxygen ##########################################\n\n##############################################################################################\n",
        "Line" : 542,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 68
    },
    "agents/CMakeLists.txt" : {
      "ObjectId" : "2eba65aefa8a9937d9c7efc74085ee7852e9b027",
      "LastModified" : "2014-06-27T01:17:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cli/CMakeLists.txt" : {
      "ObjectId" : "332c2f7e59898124b7ae8d8e31e0e0c7b9ee3740",
      "LastModified" : "2017-12-06T20:48:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################################\n\n##################################### begin cyclus app #######################################\n\n##############################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build the cyclus executable from the CYCLUS_SOURCE source files\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################################################################\n\n###################################### end cyclus app ########################################\n\n##############################################################################################\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################################################################################\n\n################################## begin cyclus unit tests ###################################\n\n##############################################################################################\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############################################################################################\n\n################################### end cyclus unit tests ####################################\n\n##############################################################################################\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/CMakeLists.txt" : {
      "ObjectId" : "db12f77276f25b9fcad822c82c300d797baf56ae",
      "LastModified" : "2017-12-06T20:48:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/CopyWhenDiffMacro.cmake" : {
      "ObjectId" : "f19bc89dd474c77f6b6f21c1ce80c291eb67193f",
      "LastModified" : "2017-12-06T20:48:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# copy_when_diff(src target)\n\n#\n\n# This macro library copies over a file only if the contents of the source\n\n# file from the contents of the target or if the target does not exist.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check if the file is actually different before copying\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake/DownloadAndExtract.cmake" : {
      "ObjectId" : "d6fce2915d0419b765d97ffe49b7cc1883dfa316",
      "LastModified" : "2018-01-09T21:54:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros for downloading a tar file and extracting it if a sample file\n\n# doesn't already exist.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# don't need to do anything\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# download the file if we need to\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# extract the file\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# first download the src file\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# now download the platform specific file\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "cmake/FindCOIN.cmake" : {
      "ObjectId" : "5190103876a49b15707b3542ba35d45359583148",
      "LastModified" : "2017-12-06T20:48:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# agented after FindCOIN.cmake in the lemon project\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Written by: Matthew Gidden\n\n# Last updated: 12/17/12\n\n# Last updated: 16/08/12\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This cmake file is designed to locate coin-related\n\n# dependencies on a filesystem.\n\n#\n\n# If the coin dependencies were installed in a non-standard\n\n# directory, e.g. installed from source perhaps, then\n\n# the user can provide a prefix hint via the COIN_ROOT_DIR\n\n# cmake variable:\n\n#       $> cmake ../src -DCOIN_ROOT_DIR=/path/to/coin/root\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# To date, this install requires the following dev versions\n\n# of the respective coin libraries:\n\n#       * coinor-libCbc-dev\n\n#       * coinor-libClp-dev\n\n#       * coinor-libcoinutils-dev\n\n#       * coinor-libOsi-dev\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Get the root directory hint if provided\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Find the path based on a required header file\n\n#\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Find all coin library dependencies\n\n#\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#libCbc.so.0\n",
        "Line" : 56,
        "CharPositionInLine" : 21
      },
      "8" : {
        "Text" : "#libOsiCbc.so.0\n",
        "Line" : 112,
        "CharPositionInLine" : 27
      },
      "9" : {
        "Text" : "# Not required by cbc v2.5, but required by later versions\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#\n\n# Set all required cmake variables based on our findings\n\n#\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#SET(COIN_CLP_LIBRARIES \"${COIN_CLP_LIBRARY};${COIN_COIN_UTILS_LIBRARY};${COIN_ZLIB_LIBRARY};${COIN_CLP_SOLVER_LIBRARY}\")\n",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Not required by cbc v2.5, but required by later versions in which case,\n\n# the lower line should be commented out and this line used\n\n#SET(COIN_CBC_LIBRARIES \"${COIN_CBC_LIBRARY};${COIN_CBC_SOLVER_LIBRARY};${COIN_CGL_LIBRARY};${COIN_OSI_LIBRARY};${COIN_OSI_CBC_LIBRARY};${COIN_OSI_CLP_LIBRARY};${COIN_CLP_LIBRARIES}\")\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#SET(COIN_CBC_LIBRARIES \"${COIN_CBC_LIBRARY};${COIN_CBC_SOLVER_LIBRARY};${COIN_CGL_LIBRARY};${COIN_OSI_LIBRARY};${COIN_OSI_CLP_LIBRARY};${COIN_CLP_LIBRARIES}\")\n",
        "Line" : 179,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#\n\n# Report a synopsis of our findings\n\n#\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "cmake/FindCyclus.cmake" : {
      "ObjectId" : "873c317d243bfad5beb16e20834a3f613b490b68",
      "LastModified" : "2017-12-06T20:48:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  CYCLUS_CORE_FOUND - system has the Cyclus Core library\n\n#  CYCLUS_CORE_INCLUDE_DIR - the Cyclus include directory\n\n#  CYCLUS_CORE_LIBRARIES - The libraries needed to use the Cyclus Core Library\n\n#  CYCLUS_AGENT_TEST_LIBRARIES - A test library for agents\n\n#  CYCLUS_TEST_LIBRARIES - All testing libraries\n\n#  CYCLUS_DEFAULT_TEST_DRIVER - The default cyclus unit test driver\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check if we have an environment variable to cyclus root\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Yell if both exist\n",
        "Line" : 13,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Let the user know if we're using a hint\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use $DEPS_ROOT_DIR if available\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set the include dir, this will be the future basis for other\n\n# defined dirs\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set the include dir, this will be the future basis for other\n\n# defined dirs\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add the root dir to the hints\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Look for the header files\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Look for the library\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Look for the library\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Look for the library\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Copy the results to the output variables.\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Report the results.\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "cmake/FindCython.cmake" : {
      "ObjectId" : "a09df033bca66afd1029ef62510c4a678c912c3e",
      "LastModified" : "2017-12-06T20:48:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the Cython compiler.\n\n#\n\n# This code sets the following variables:\n\n#\n\n#  CYTHON_EXECUTABLE\n\n#  CYTHON_VERSION\n\n#  CYTHON_VERSION_MAJOR\n\n#  CYTHON_VERSION_MINOR\n\n#  CYTHON_VERSION_MICRO\n\n#\n\n# See also UseCython.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Kitware, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#=============================================================================\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use the Cython executable that lives next to the Python executable\n\n# if it is a local installation.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# get the version strings\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/FindGlib.cmake" : {
      "ObjectId" : "623ccf4d6b362ec0439de5b780f79b40e9edba1c",
      "LastModified" : "2017-12-06T20:48:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#pkg_check_modules(GLIB_PKG glib-2.0)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find Glib even if pkg-config is not working (eg. cross compiling to Windows)\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake/FindGlibmm.cmake" : {
      "ObjectId" : "3790e3016495d3765292afcd7bd91fefefd0bc9e",
      "LastModified" : "2017-12-06T20:48:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Glibmm-2.4\n\n# Once done, this will define\n\n#\n\n#  Glibmm_FOUND - system has Glibmm\n\n#  Glibmm_INCLUDE_DIRS - the Glibmm include directories\n\n#  Glibmm_LIBRARIES - link these to use Glibmm\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Main include dir\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Glib-related libraries also use a separate config header, which is in lib dir\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# find lib\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/FindJinja2.cmake" : {
      "ObjectId" : "f90083ccdba4797d30bcb42b6775796d97b68cdc",
      "LastModified" : "2017-12-06T20:48:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Finds Jinja2 by trying to import it.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindLibXML++.cmake" : {
      "ObjectId" : "51485f6d634c02e476a16fb9b1c4ba09d1b4febc",
      "LastModified" : "2017-12-06T20:48:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LibXML++ 2.6\n\n# Once done, this will define\n\n#\n\n#  LibXML++_FOUND - system has LibXML++\n\n#  LibXML++_INCLUDE_DIRS - the LibXML++ include directories\n\n#  LibXML++_LIBRARIES - link these to use LibXML++\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Dependencies\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Main include dir\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Glib-related libraries also use a separate config header, which is in lib dir\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# find lib\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Finally the library itself\n",
        "Line" : 45,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "#find_library(LibXML++_LIBRARY\n\n#   NAMES xml++-2.6\n\n#   ${DEPS_LIB_DIR}\n\n#   PATHS ${LibXML++_PKGCONF_LIBRARY_DIRS}\n\n# )\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/FindNumpy.cmake" : {
      "ObjectId" : "136fce28cf5ed4774e358ddd5729a9ffb443bd53",
      "LastModified" : "2017-12-06T20:48:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Numpy\n\n# NumPy is the fundamental package needed for scientific computing with Python\n\n# www.numpy.scipy.org\n\n#\n\n# The module defines the following variables:\n\n#  NUMPY_FOUND - the system has numpy\n\n#  NUMPY_INCLUDE_DIR - where to find numpy/arrayobject.h\n\n#  NUMPY_INCLUDE_DIRS - numpy include directories\n\n#  NUMPY_VERSION_STRING - version (ex. 1.2.3)\n\n#  NUMPY_MAJOR_VERSION - major version (ex. 1)\n\n#  NUMPY_MINOR_VERSION - minor version (ex. 2)\n\n#  NUMPY_PATCH_VERSION - patch version (ex. 3)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2012 EDF-EADS-Phimeca\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set NUMPY_INCLUDE_DIR\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set NUMPY_INCLUDE_DIRS\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# version\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# check version\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# handle REQUIRED and QUIET options\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/FindPandas.cmake" : {
      "ObjectId" : "ee7d315fc3c96d0a19646f3173eaebcc28844dae",
      "LastModified" : "2017-12-06T20:48:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Finds Pandas by trying to import it.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindSigC++.cmake" : {
      "ObjectId" : "20133b11aa89101f02381dcc803b42a1ac0c8b30",
      "LastModified" : "2017-12-06T20:48:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find SigC++-2.0\n\n# Once done, this will define\n\n#\n\n#  SigC++_FOUND - system has SigC++\n\n#  SigC++_INCLUDE_DIRS - the SigC++ include directories\n\n#  SigC++_LIBRARIES - link these to use SigC++\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use pkg-config to get hints about paths\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Main include dir\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Glib-related libraries also use a separate config header, which is in lib dir\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# find lib\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set the include dir variables and the libraries and let libfind_process do the rest.\n\n# NOTE: Singular variables for this library, plural for libraries this this lib depends on.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/FindSqlite3.cmake" : {
      "ObjectId" : "65064e7acc25f27549f41be694f25da42ebf68fb",
      "LastModified" : "2017-12-06T20:48:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - find Sqlite 3\n\n# SQLITE3_INCLUDE_DIR - Where to find Sqlite 3 header files (directory)\n\n# SQLITE3_LIBRARIES - Sqlite 3 libraries\n\n# SQLITE3_LIBRARY_RELEASE - Where the release library is\n\n# SQLITE3_LIBRARY_DEBUG - Where the debug library is\n\n# SQLITE3_FOUND - Set to TRUE if we found everything (library, includes and executable)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2010 Pau Garcia i Quiles, <pgquiles@elpauer.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n\n# Generated by CModuler, a CMake Module Generator - http://gitorious.org/cmoduler\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if the generator supports configuration types then set\n\n# optimized and debug libraries, or if the CMAKE_BUILD_TYPE has a value\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# if there are no configuration types and CMAKE_BUILD_TYPE has no value\n\n# then just use the release libraries\n",
        "Line" : 37,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "cmake/FindTcmalloc.cmake" : {
      "ObjectId" : "ec549b5f3a593c990bb7a99cef535c0192970a00",
      "LastModified" : "2017-12-06T20:48:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Tcmalloc\n\n# Find the native Tcmalloc includes and library\n\n#\n\n#  Tcmalloc_LIBRARIES   - List of libraries when using Tcmalloc.\n\n#  Tcmalloc_FOUND       - True if Tcmalloc found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/LibFindMacros.cmake" : {
      "ObjectId" : "27d7cb6e25eaf117d23991970f3dc437b10ae681",
      "LastModified" : "2017-12-06T20:48:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Works the same as find_package, but forwards the \"REQUIRED\" and \"QUIET\" arguments\n\n# used for the current package. For this to work, the first parameter must be the\n\n# prefix of the current package, then the prefix of the new package etc, which are\n\n# passed to find_package.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake developers made the UsePkgConfig system deprecated in the same release (2.6)\n\n# where they added pkg_check_modules. Consequently I need to support both in my scripts\n\n# to avoid those deprecated warnings. Here's a helper that does just that.\n\n# Works identically to pkg_check_modules, except that no checks are needed prior to use.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Do the final processing once the paths have been detected.\n\n# If include dirs are needed, ${PREFIX}_PROCESS_INCLUDES should be set to contain\n\n# all the variables, each of which contain one include directory.\n\n# Ditto for ${PREFIX}_PROCESS_LIBS and library files.\n\n# Will set ${PREFIX}_FOUND, ${PREFIX}_INCLUDE_DIRS and ${PREFIX}_LIBRARIES.\n\n# Also handles errors in case library detection was required, etc.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Skip processing if already processed during this run\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Start with the assumption that the library was found\n",
        "Line" : 42,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Process all includes and set _FOUND to false if any are missing\n",
        "Line" : 45,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Process all libraries and set _FOUND to false if any are missing\n",
        "Line" : 55,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Print message and/or exit on fatal error\n",
        "Line" : 65,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 8
    },
    "cmake/ReplicatePythonSourceTree.cmake" : {
      "ObjectId" : "1dda768a75477afe8c90ebbe140ebc7d424fedac",
      "LastModified" : "2017-12-06T20:48:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Note: when executed in the build dir, then CMAKE_CURRENT_SOURCE_DIR is the\n\n# build dir.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/SelectLibraryConfigurations.cmake" : {
      "ObjectId" : "9fd55186a7a09db9a2b17d365d170a47393e2a2f",
      "LastModified" : "2017-12-06T20:48:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# select_library_configurations(basename)\n\n#\n\n# This macro takes a library base name as an argument, and will choose good\n\n# values for basename_LIBRARY, basename_LIBRARIES, basename_LIBRARY_DEBUG, and\n\n# basename_LIBRARY_RELEASE depending on what has been found and set.  If only\n\n# basename_LIBRARY_RELEASE is defined, basename_LIBRARY, basename_LIBRARY_DEBUG,\n\n# and basename_LIBRARY_RELEASE will be set to the release value.  If only\n\n# basename_LIBRARY_DEBUG is defined, then basename_LIBRARY,\n\n# basename_LIBRARY_DEBUG and basename_LIBRARY_RELEASE will take the debug value.\n\n#\n\n# If the generator supports configuration types, then basename_LIBRARY and\n\n# basename_LIBRARIES will be set with debug and optimized flags specifying the\n\n# library to be used for the given configuration.  If no build type has been set\n\n# or the generator in use does not support configuration types, then\n\n# basename_LIBRARY and basename_LIBRARIES will take only the release values.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2009 Will Dicharry <wdicharry@stellarscience.com>\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This macro was adapted from the FindQt4 CMake module and is maintained by Will\n\n# Dicharry <wdicharry@stellarscience.com>.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Utility macro to check if one variable exists while another doesn't, and set\n\n# one that doesn't exist to the one that exists.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# if only the release version was found, set the debug to be the release\n\n# version.\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# if only the debug version was found, set the release value to be the\n\n# debug value.\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# if the generator supports configuration types or CMAKE_BUILD_TYPE\n\n# is set, then set optimized and debug options.\n",
        "Line" : 53,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# If there are no configuration types or build type, just use\n\n# the release version\n",
        "Line" : 63,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 8
    },
    "cmake/UseCyclus.cmake" : {
      "ObjectId" : "c99c7f8d0c4871ca28b5cd241398135463733eca",
      "LastModified" : "2019-02-22T20:40:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# The USE_CYCLUS, INSTALL_CYCLUS_STANDALONE, INSTALL_CYCLUS_MODULE macros builds\n\n# agent libraries for Cyclus given some source files.\n\n#\n\n# INSTALL_CYCLUS_STANDALONE is meant to build a single agent into its own\n\n# module.  It implicitly calls USE_CYCLUS.  For example,\n\n#\n\n#   install_cyclus_standalone(\"TestFacility\" \"test_facility\" \"tests\")\n\n#\n\n# INSTALL_CYCLUS_MODULE meanwhile is meant to be able to build many agents into\n\n# the same module.  To do this the environment must first be prepared with\n\n# USE_CYCLUS on all of the agents that will go into this module.  Then this\n\n# macro need only be called once.  For example,\n\n#\n\n#   use_cyclus(\"agents\" \"sink\")\n\n#   use_cyclus(\"agents\" \"source\")\n\n#   use_cyclus(\"agents\" \"k_facility\")\n\n#   use_cyclus(\"agents\" \"prey\")\n\n#   use_cyclus(\"agents\" \"predator\")\n\n#   install_cyclus_module(\"agents\" \"\")\n\n#\n\n# If test files (named *_tests.[h|cc]) are present, a unit test executable will\n\n# be automatically generated. A custom test driver (i.e., a source file that\n\n# contains a main() function for gtest to run) can optionally be provided to the\n\n# INSTALL_CYCLUS_STANDALONE or INSTALL_CYCLUS_MODULE macros. If the driver\n\n# supplied is NONE, then a test executable will *NOT* be created.\n\n#\n\n# Signtaures:\n\n#   use_cyclus(lib_root src_root)\n\n#   install_cyclus_standalone(lib_root src_root lib_dir [test_driver])\n\n#   install_cyclus_module(lib_root lib_dir [test_driver])\n\n#\n\n# Arguments:\n\n#   lib_root : the root library name, e.g., MyAgent\n\n#   src_root : the root name of source files, e.g., my_agent for my_agent.h\n\n#              and my_agent.cc\n\n#   lib_dir : the directory to install the module or agent into.\n\n#   test_driver : (optional) the custom test driver to use with unit tests,\n\n#                 or NONE\n\n#\n\n# The CYCLUS_CUSTOM_HEADERS variable can optionally be set to contain one or\n\n# more (space separated) header files before calling the USE_CYCLUS\n\n# macro to add shared headers used by the archetype library being built.\n\n#\n\n# The following vars are updated.\n\n#\n\n# CYCLUS_LIBRARIES   : updated to include <lib_root>_LIB\n\n#\n\n# The following vars are set.\n\n#\n\n# <lib_root>_H       : the headers used for the agent\n\n# <lib_root>_CC      : the srcs used for the agent\n\n# <lib_root>_TEST_H  : the headers used for the agent tests, if it exists\n\n# <lib_root>_TEST_CC : the srcs used for the agent tests, if it exists\n\n#\n\n# Target names that are valid:\n\n#\n\n# <lib_root>_LIB        : the name of the library target\n\n# <lib_root>_unit_tests : the name of the unit test executable, if test source\n\n#                         exists\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# output directory\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# get preprocessor script\n",
        "Line" : 74,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# make a build directory\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# collect include directories argument\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# set cpp path\n\n# Now check first if the $CPP enrironment variable is defined, if not\n\n# fallback on the previous behavior, so in order:\n\n#   1- if defined, uses ${CPP}\n\n#   2- if clang++ is present, uses it\n\n#   3- otherwise, uses cpp\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# copy custom headers\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# process header\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# not sure if needed..\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# not sure if we still need this...\n",
        "Line" : 145,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# add tests\n",
        "Line" : 184,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# install test headers\n",
        "Line" : 192,
        "CharPositionInLine" : 12
      },
      "12" : {
        "Text" : "# install test impl\n",
        "Line" : 212,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# clear variables before starting\n",
        "Line" : 230,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# check if a test driver was provided, otherwise use the default\n",
        "Line" : 238,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# check if a test driver was provided, otherwise use the default\n",
        "Line" : 257,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# add lib\n",
        "Line" : 269,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# install library\n",
        "Line" : 285,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# build & install test impl\n",
        "Line" : 297,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# sets a unique platform string\n",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# first set OS\n",
        "Line" : 339,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# next set compiler\n",
        "Line" : 347,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# fast compile with assembly, if available.\n",
        "Line" : 368,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# get the assembly file name\n",
        "Line" : 370,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# get the base name, without the extension\n",
        "Line" : 371,
        "CharPositionInLine" : 55
      },
      "25" : {
        "Text" : "# pick the filename to compile, either source or assembly\n",
        "Line" : 378,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# set some compile flags for the selected file\n",
        "Line" : 391,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 27
    },
    "cmake/UseCython.cmake" : {
      "ObjectId" : "46ec804e7133226cc59955380370b5e10eb5e3e2",
      "LastModified" : "2017-12-06T20:48:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define a function to create Cython modules.\n\n#\n\n# For more information on the Cython project, see http://cython.org/.\n\n# \"Cython is a language that makes writing C extensions for the Python language\n\n# as easy as Python itself.\"\n\n#\n\n# This file defines a CMake function to build a Cython Python module.\n\n# To use it, first include this file.\n\n#\n\n#   include( UseCython )\n\n#\n\n# Then call cython_add_module to create a module.\n\n#\n\n#   cython_add_module( <module_name> <src1> <src2> ... <srcN> )\n\n#\n\n# To create a standalone executable, the function\n\n#\n\n#   cython_add_standalone_executable( <executable_name> [MAIN_MODULE src1] <src1> <src2> ... <srcN> )\n\n#\n\n# To avoid dependence on Python, set the PYTHON_LIBRARY cache variable to point\n\n# to a static library.  If a MAIN_MODULE source is specified,\n\n# the \"if __name__ == '__main__':\" from that module is used as the C main() method\n\n# for the executable.  If MAIN_MODULE, the source with the same basename as\n\n# <executable_name> is assumed to be the MAIN_MODULE.\n\n#\n\n# Where <module_name> is the name of the resulting Python module and\n\n# <src1> <src2> ... are source files to be compiled into the module, e.g. *.pyx,\n\n# *.py, *.c, *.cxx, etc.  A CMake target is created with name <module_name>.  This can\n\n# be used for target_link_libraries(), etc.\n\n#\n\n# The sample paths set with the CMake include_directories() command will be used\n\n# for include directories to search for *.pxd when running the Cython complire.\n\n#\n\n# Cache variables that effect the behavior include:\n\n#\n\n#  CYTHON_ANNOTATE\n\n#  CYTHON_NO_DOCSTRINGS\n\n#  CYTHON_FLAGS\n\n#\n\n# Source file properties that effect the build process are\n\n#\n\n#  CYTHON_IS_CXX\n\n#\n\n# If this is set of a *.pyx file with CMake set_source_files_properties()\n\n# command, the file will be compiled as a C++ file.\n\n#\n\n# See also FindCython.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Kitware, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#=============================================================================\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Configuration options.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create a *.c or *.cxx file from a *.pyx file.\n\n# Input the generated file basename.  The generate file will put into the variable\n\n# placed in the \"generated_file\" argument. Finally all the *.py and *.pyx files.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default to assuming all files are C.\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Determine if it is a C or C++ file.\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Get the include directories.\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Determine dependencies.\n\n# Add the pxd file will the same name as the given pyx file.\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# pxd files to check for additional dependencies.\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# check for C header dependencies\n",
        "Line" : 134,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Had trouble getting the quote in the regex\n",
        "Line" : 138,
        "CharPositionInLine" : 10
      },
      "11" : {
        "Text" : "# check for pxd dependencies\n",
        "Line" : 150,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Look for cimport statements.\n",
        "Line" : 152,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Add the module to the files to check, if appropriate.\n",
        "Line" : 164,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# if it is not already going to be checked\n",
        "Line" : 176,
        "CharPositionInLine" : 22
      },
      "15" : {
        "Text" : "# if it has not already been checked\n",
        "Line" : 177,
        "CharPositionInLine" : 20
      },
      "16" : {
        "Text" : "# if pxd file can be found\n",
        "Line" : 178,
        "CharPositionInLine" : 18
      },
      "17" : {
        "Text" : "# for each module dependency discovered\n",
        "Line" : 179,
        "CharPositionInLine" : 21
      },
      "18" : {
        "Text" : "# for each pxd file to check\n",
        "Line" : 180,
        "CharPositionInLine" : 19
      },
      "19" : {
        "Text" : "# Look for included pxi files\n",
        "Line" : 184,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# for each include statement found\n",
        "Line" : 194,
        "CharPositionInLine" : 17
      },
      "21" : {
        "Text" : "# pyx_file\n",
        "Line" : 196,
        "CharPositionInLine" : 15
      },
      "22" : {
        "Text" : "# Set additional flags.\n",
        "Line" : 198,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Include directory arguments.\n",
        "Line" : 220,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Determining generated file name.\n",
        "Line" : 227,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Add the command to run the post-processor.\n",
        "Line" : 235,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Add the command to run the compiler.\n",
        "Line" : 242,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Remove their visibility to the user.\n",
        "Line" : 253,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# cython_add_module( <name> src1 src2 ... srcN )\n\n# Build the Cython Python module.\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# cython_add_standalone_executable( _name [MAIN_MODULE src3.py] src1 src2 ... srcN )\n\n# Creates a standalone executable the given sources.\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "cyclus/CMakeLists.txt" : {
      "ObjectId" : "0ab976d365f9f9dd9a0b2b4176568530d4de3608",
      "LastModified" : "2017-12-06T20:48:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Python extension modules\n\n#include_directories(${CYMETRIC_INCLUDE_DIRS} ${INCLUDE_DIRECTORIES})\n\n#include_directories(${CYCLUS_INCLUDE_DIRECTORIES})\n\n#SET(INCLUDE_DIRECTORIES ${INCLUDE_DIRECTORIES} ${CYCLUS_CORE_INCLUDE_DIR})\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# First things first, code-generation\n\n#\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Build cython files\n\n#\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Print include dir\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the following install is needed so that CMake sets the correct RPATH for the\n\n# python extension modules, even though they are installed (with the wrong RPATH)\n\n# by setup.py, along with the pure python files.\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "fceca453a1fc7b79badb9b6aa522499d196e89b2",
      "LastModified" : "2017-12-06T20:48:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build file for CMake in order to generate the documentation.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ---------------------------------\n\n# Check for Doxygen\n\n# ---------------------------------\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# Some doxyfile settings to be configured into the template doxy.conf.in\n\n# ----------------------------------------------------------------------\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "share/CMakeLists.txt" : {
      "ObjectId" : "689deab302cab39cfbe6663a75d3e327203cb229",
      "LastModified" : "2017-12-06T20:48:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "8077d1cabaf6e7a8f4fff28afe5f76153a937470",
      "LastModified" : "2018-01-10T01:49:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#################################################################\n\n############# special file configuration ########################\n\n#################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############################################################\n\n############# end special configuration ####################\n\n############################################################\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###########################################################\n\n############# cython configuration ########################\n\n###########################################################\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# some setup\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# OK compile everything\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "###########################################################\n\n########### end cython configuration ######################\n\n###########################################################\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#################################################################\n\n######### build libcyclus #######################################\n\n#################################################################\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add Cyclus source files that use COIN, if we have COIN\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add bateman solver from PyNE\n\n#add_definitions(-DPYNE_IS_AMALGAMATED)\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add CRAM solver from PyNE\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# write the include directories to a file for later use\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#################################################################\n\n######### end build libcyclus ###################################\n\n#################################################################\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "src/toolkit/CMakeLists.txt" : {
      "ObjectId" : "a9325ea1b17a87d42d90dd62181c05b8ae834402",
      "LastModified" : "2017-12-06T20:48:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Remove toolkit source files that rely on COIN if we don't have it\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "stubs/CMakeLists.txt" : {
      "ObjectId" : "ea8588fb50a7a7b6370a7fcd850391a6d41d2e02",
      "LastModified" : "2018-03-21T22:01:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# DO NOT DELETE THIS LINE:: @archetype_spec@\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# taken from http://geant4.cern.ch/support/source/geant4/CMakeLists.txt\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# check for and enable c++11 support\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# quiets fortify_source warnings when not compiling with optimizations\n\n# in linux distros where compilers were compiled with fortify_source enabled by\n\n# default (e.g. Arch linux).\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# no overflow warnings because of silly coin-ness\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Direct any out-of-source builds to this directory\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Direct any binary installation paths to this directory\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This makes all the libraries build as SHARED\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Setup build locations.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# use, i.e. don't skip the full RPATH for the build tree\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# when building, don't use the install RPATH already\n\n# (but later on when installing)\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# add the automatically determined parts of the RPATH\n\n# which point to directories outside the build tree to the install RPATH\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# the RPATH to be used when installing, but only if it's not a system directory\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Tell CMake where the modules are\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Find cyclus\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Include macros\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Include the boost header files, system, and filesystem libraries\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Find HDF5\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# find Coin\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# include all the directories we just found\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# add the agents\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# uninstall target\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "stubs/src/CMakeLists.txt" : {
      "ObjectId" : "2a3679ed1df4bfae13b7a9af281ab97fffd689de",
      "LastModified" : "2018-03-21T22:01:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### DO NOT DELETE THIS COMMENT: INSERT_ARCHETYPES_HERE ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# install header files\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "5e71bcfbff82e8fea40cf77cd725ff5cb3c307bb",
      "LastModified" : "2017-12-06T20:48:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n#################################### begin google test ########################\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Be sure to clear these each time\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The gtest include file directories.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The gtest library directories.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Alerts CMake to any tests we need to worry about\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The pthreads library is available.\n",
        "Line" : 22,
        "CharPositionInLine" : 29
      },
      "6" : {
        "Text" : "# Build libgtest\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###############################################################################\n\n##################################### end google test #########################\n\n###############################################################################\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###############################################################################\n\n################################### begin cyclus testing ######################\n\n###############################################################################\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Remove test source files that rely on COIN if we don't have it\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# for stubs/agents\n",
        "Line" : 103,
        "CharPositionInLine" : 51
      },
      "11" : {
        "Text" : "# read tests after building the driver, and add them to ctest\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "###############################################################################\n\n#################################### end cyclus testing #######################\n\n###############################################################################\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "tests/GoogleTest/CMakeLists.txt" : {
      "ObjectId" : "cc11ec17682db5f5f5d2df0b2764075bf27f2020",
      "LastModified" : "2017-12-06T20:48:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################################################################\n\n# Experimental CMake build script for Google Test.\n\n#\n\n# Consider this a prototype.  It will change drastically.  For now,\n\n# this is only for people on the cutting edge.\n\n#\n\n# To run the tests for Google Test itself on Linux, use 'make test' or\n\n# ctest.  You can select which tests to run using 'ctest -R regex'.\n\n# For more options, run 'ctest --help'.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For hermetic builds, we may need to tell CMake to use compiler in a\n\n# specific location.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "########################################################################\n\n#\n\n# Project-wide settings\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Name of the project.\n\n#\n\n# CMake files in this project can refer to the root source directory\n\n# as ${gtest_SOURCE_DIR} and to the root binary directory as\n\n# ${gtest_BINARY_DIR}.\n\n# Language \"C\" is required for find_package(Threads).\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# For MSVC, CMake sets certain flags to defaults we want to override.\n\n# This replacement code is taken from sample in the CMake Wiki at\n\n# http://www.cmake.org/Wiki/CMake_FAQ#Dynamic_Replace.\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# In hermetic build environments, tests may not have access to MS runtime\n\n# DLLs, so this replaces /MD (CRT libraries in DLLs) with /MT (static CRT\n\n# libraries).\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# We prefer more strict warning checking for building Google Test.\n\n# Replaces /W3 with /W4 in defaults.\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Where gtest's .h files can be found.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Where the gtest libraries can be found.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Defines CMAKE_USE_PTHREADS_INIT and CMAKE_THREAD_LIBS_INIT.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Defines the compiler/linker flags used to build gtest.  You can\n\n# tweak these definitions to suit your need.  A variable's value is\n\n# empty before it's explicitly assigned to.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Newlines inside flags variables break CMake's NMake generator.\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Until version 4.3.2, GCC doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Sun Pro doesn't provide macros to indicate whether exceptions and\n\n# RTTI are enabled, so we define GTEST_HAS_* explicitly.\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# CMake 2.8 changes Visual Age's compiler ID to \"XL\".\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Until version 9.0, Visual Age doesn't define a macro to indicate\n\n# whether RTTI is enabled.  Therefore we define GTEST_HAS_RTTI\n\n# explicitly.\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# The pthreads library is available.\n",
        "Line" : 99,
        "CharPositionInLine" : 30
      },
      "17" : {
        "Text" : "# For building gtest's own tests and samples.\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# For building the gtest libraries.\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "########################################################################\n\n#\n\n# Defines the gtest & gtest_main libraries.  User tests should link\n\n# with one of them.\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# type can be either STATIC or SHARED to denote a static or shared library.\n\n# ARGN refers to additional arguments after 'cxx_flags'.\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# TODO(vladl@google.com): Make static/shared a user option.\n",
        "Line" : 139,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Static versions of Google Test libraries.  We build them using more\n\n# strict warnings than what are used for other targets, to ensure that\n\n# gtest can be compiled by a user aggressive about warnings.\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "########################################################################\n\n#\n\n# Samples on how to link user tests with gtest or gtest_main.\n\n#\n\n# They are not built by default.  To build them, set the\n\n# build_gtest_samples option to ON.  You can do it by running ccmake\n\n# or specifying the -Dbuild_gtest_samples=ON flag when running cmake.\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# cxx_executable_with_flags(name cxx_flags lib srcs...)\n\n#\n\n# creates a named C++ executable that depends on the given library and\n\n# is built from the given source files with the given compiler flags.\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# cxx_executable(name dir lib srcs...)\n\n#\n\n# creates a named target that depends on the given lib and is built\n\n# from the given source files.  dir/name.cc is implicitly included in\n\n# the source file list.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "########################################################################\n\n#\n\n# Google Test's own tests.\n\n#\n\n# You can skip this section if you aren't interested in testing\n\n# Google Test itself.\n\n#\n\n# Most of the tests are not built by default.  To build them, set the\n\n# build_all_gtest_tests option to ON.  You can do it by running ccmake\n\n# or specifying the -Dbuild_all_gtest_tests=ON flag when running cmake.\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# This must be set in the root directory for the tests to be run by\n\n# 'make test' or ctest.\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Sets PYTHONINTERP_FOUND and PYTHON_EXECUTABLE.\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "############################################################\n\n# C++ tests built with standard compiler flags.\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# cxx_test_with_flags(name cxx_flags libs srcs...)\n\n#\n\n# creates a named C++ test that depends on the given libs and is built\n\n# from the given source files with the given compiler flags.\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# To support mixing linking in static and dynamic libraries, link each\n\n# library in with an extra call to target_link_libraries.\n",
        "Line" : 229,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# cxx_test(name libs srcs...)\n\n#\n\n# creates a named test target that depends on the given libs and is\n\n# built from the given source files.  Unlike cxx_test_with_flags,\n\n# test/name.cc is already implicitly included in the source file list.\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "############################################################\n\n# C++ tests built with non-standard compiler flags.\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Disables the \"class 'X' needs to have dll-interface to be used\n\n# by clients of class 'Y'\" warning. This particularly concerns generic\n\n# classes like vector that MS doesn't mark as exported.\n",
        "Line" : 290,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# TODO(vladl): This and the next tests may not run in the hermetic\n\n# environment on Windows. Re-evaluate and possibly make them\n\n# platform-conditional after implementing hermetic builds.\n",
        "Line" : 300,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# The C++ Standard specifies tuple_element<int, class>.\n\n# Yet MSVC 10's <utility> declares tuple_element<size_t, class>.\n\n# That declaration conflicts with our own standard-conforming\n\n# tuple implementation.  Therefore using our own tuple with\n\n# MSVC 10 doesn't compile.\n",
        "Line" : 307,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "############################################################\n\n# Python tests.\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# py_test(name)\n\n#\n\n# creates a Python test with the given name whose main module is in\n\n# test/name.py.  It does nothing if Python is not installed.\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# ${gtest_BINARY_DIR} is known at configuration time, so we can\n\n# directly bind it from cmake. ${CTEST_CONFIGURATION_TYPE} is known\n\n# only at ctest runtime (by calling ctest -c <Configuration>), so\n\n# we have to escape $ to delay variable substitution here.\n",
        "Line" : 334,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 40
    },
    "tests/agent_tests/CMakeLists.txt" : {
      "ObjectId" : "03dca24bac0242dc7d81e461d79a50abdf1a5ff2",
      "LastModified" : "2017-12-06T20:48:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/input/CMakeLists.txt" : {
      "ObjectId" : "af84e6298199fe4cb5cc2b2c90d8b579bda5c9e6",
      "LastModified" : "2017-12-06T20:48:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/test_agents/CMakeLists.txt" : {
      "ObjectId" : "eae9948e368c54420f35546ce64a9839193d257c",
      "LastModified" : "2017-12-06T20:48:41Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/toolkit/CMakeLists.txt" : {
      "ObjectId" : "6ca973b30eb186ad446615eeffe099a961942136",
      "LastModified" : "2017-12-06T20:48:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Remove toolkit test source files that rely on COIN if we don't have it\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 36
  },
  "ElapsedTime" : 4782
}