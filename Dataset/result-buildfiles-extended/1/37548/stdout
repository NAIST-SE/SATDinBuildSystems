{
  "Repository" : "37548",
  "Revision" : "HEAD",
  "ObjectId" : "55179f12c677f3da1f5b96f645dc5ad4deafcaf5",
  "CommitTime" : "2019-04-17T22:33:16Z",
  "Files" : {
    "Accelerators/Vtkm/CMakeLists.txt" : {
      "ObjectId" : "8a9a7fcfcb0ebbd6f8499f9d6569cfbda5dfca8e",
      "LastModified" : "2019-02-14T21:42:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##=============================================================================\n\n##\n\n##  Copyright (c) Kitware, Inc.\n\n##  All rights reserved.\n\n##  See LICENSE.txt for details.\n\n##\n\n##  This software is distributed WITHOUT ANY WARRANTY; without even\n\n##  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n##  PURPOSE.  See the above copyright notice for more information.\n\n##\n\n##  Copyright 2012 Sandia Corporation.\n\n##  Under the terms of Contract DE-AC04-94AL85000 with Sandia Corporation,\n\n##  the U.S. Government retains certain rights in this software.\n\n##\n\n##=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#The vtkmlib/CellSetConverters need to be built always as CXX\n\n#as the worklets used by them require access to vtk classes\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# The VTK-m project uses large amounts of memory to compile as it does lots\n\n# of template expansion. To reduce the amount of tension on the machine when\n\n# using generators such as ninja we restrict the number of VTK-m enabled\n\n# compilation units to be built at the same time.\n\n# The logic we use is that no more than half the system memory should be used\n\n# on VTK-m compilation units, where we expect each compilation unit to use\n\n# 2GB of memory.\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# XXX(cmake#7519): Workaround for CMake which causes the c++11 flag set for\n\n# VTK-m using target_compile_features to not work.\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Temporarily suppress \"has address taken but no possible call to it\" warnings,\n\n# until we figure out its implications.\n\n# We are disabling all warnings as nvlink has no known way to suppress\n\n# individual warning types.\n",
        "Line" : 123,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# We need to install the private headers so that consumers of VTK can write\n\n# new VTK-m filters and do data conversions correctly.\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Generates numerous false positives with template code about unreachable\n\n# code\n",
        "Line" : 157,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Generates numerous warning that implicit assignment operators can't be\n\n# constructed. This is understood and we don't care.\n",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Generates numerous warning that implicit constructors can't be\n\n# constructed. This is understood and we don't care.\n",
        "Line" : 163,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 9
    },
    "Accelerators/Vtkm/Testing/CMakeLists.txt" : {
      "ObjectId" : "eebad841bbb5a8c79ff9c8e54413a01851ca4074",
      "LastModified" : "2019-01-08T13:20:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Accelerators/Vtkm/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "0a6d40271a7f5321f00453e292846d0dfe42982d",
      "LastModified" : "2019-01-22T20:16:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#the enable_language call is scoped! so we have to re-enable\n\n#cuda in the test directory\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Accelerators/Vtkm/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "f8092f2366aedde9874efe1bac9b79379f09749e",
      "LastModified" : "2017-03-29T13:04:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/CheckCXXSourceRuns.cmake" : {
      "ObjectId" : "7ffc40d400bddda39d7cecd831606cf636353248",
      "LastModified" : "2019-02-12T17:30:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if the source code provided in the SOURCE argument compiles.\n\n# CHECK_CXX_SOURCE_COMPILES(SOURCE VAR)\n\n# - macro which checks if the source code compiles\\\n\n#  SOURCE - source code to try to compile\n\n#  VAR    - variable to store size if the type exists.\n\n#\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n#  CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#  CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#  CMAKE_REQUIRED_INCLUDES = list of include directories\n\n#  CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindADIOS1.cmake" : {
      "ObjectId" : "adc7e77d7a35e4a89594c0fc5e7c3f206582377a",
      "LastModified" : "2019-02-12T17:30:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find ADIOS 1.x library, routines for scientific, parallel IO\n\n#   https://www.olcf.ornl.gov/center-projects/adios/\n\n#\n\n# Use this module by invoking find_package with the form:\n\n#   find_package(ADIOS1\n\n#     [version] [EXACT]     # Minimum or EXACT version, e.g. 1.6.0\n\n#     [REQUIRED]            # Fail with an error if ADIOS or a required\n\n#                           #   component is not found\n\n#     [QUIET]               # ...\n\n#     [COMPONENTS <...>]    # Compiled in components: fortran, readonly,\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# sequential (all are case insentative)\n",
        "Line" : 11,
        "CharPositionInLine" : 28
      },
      "2" : {
        "Text" : "#   )\n\n#\n\n# Module that finds the includes and libraries for a working ADIOS 1.x install.\n\n# This module invokes the `adios_config` script that should be installed with\n\n# the other ADIOS tools.\n\n#\n\n# To provide a hint to the module where to find the ADIOS installation,\n\n# set the ADIOS1_ROOT environment variable.\n\n#\n\n# If this variable is not set, make sure that at least the according `bin/`\n\n# directory of ADIOS 1.x is in your PATH environment variable.\n\n#\n\n# Set the following CMake variables BEFORE calling find_packages to\n\n# influence this module:\n\n#   ADIOS1_USE_STATIC_LIBS - Set to ON to force the use of static\n\n#                           libraries.  Default: OFF\n\n#\n\n# This module will define the following variables:\n\n#   ADIOS1_INCLUDE_DIRS    - Include directories for the ADIOS 1.x headers.\n\n#   ADIOS1_LIBRARY_PATH    - Full path of the libadios library (.a or .so file)\n\n#   ADIOS1_DEPENDENCY_LIBRARIES       - ADIOS 1.x dependency libraries.\n\n#   ADIOS1_FOUND           - TRUE if FindADIOS1 found a working install\n\n#   ADIOS1_VERSION         - Version in format Major.Minor.Patch\n\n#\n\n# Not used for now:\n\n#   ADIOS1_DEFINITIONS     - Compiler definitions you should add with\n\n#                           add_definitions(${ADIOS1_DEFINITIONS})\n\n#\n\n# Example to find ADIOS 1.x (default)\n\n# find_package(ADIOS1)\n\n# if(ADIOS1_FOUND)\n\n#   include_directories(${ADIOS1_INCLUDE_DIRS})\n\n#   add_executable(foo foo.c)\n\n#   target_link_libraries(foo ${ADIOS1_LIBRARY_PATH} ADIOS1_DEPENDENCY_LIBRARIES)\n\n# endif()\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Example to find ADIOS 1.x using component\n\n# find_package(ADIOS1 COMPONENTS fortran)\n\n# if(ADIOS1_FOUND)\n\n#   include_directories(${ADIOS1_INCLUDE_DIRS})\n\n#   add_executable(foo foo.c)\n\n#   target_link_libraries(foo ${ADIOS1_LIBRARY_PATH} ${ADIOS1_DEPENDENCY_LIBRARIES})\n\n# endif()\n\n###############################################################################\n\n#Copyright (c) 2014, Axel Huebl and Felix Schmitt from http://picongpu.hzdr.de\n\n#All rights reserved.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Redistribution and use in source and binary forms, with or without\n\n#modification, are permitted provided that the following conditions are met:\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#1. Redistributions of source code must retain the above copyright notice, this\n\n#list of conditions and the following disclaimer.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#2. Redistributions in binary form must reproduce the above copyright notice,\n\n#this list of conditions and the following disclaimer in the documentation\n\n#and/or other materials provided with the distribution.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#3. Neither the name of the copyright holder nor the names of its contributors\n\n#may be used to endorse or promote products derived from this software without\n\n#specific prior written permission.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n#AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n#IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n#DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n\n#FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n#DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n#SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n#CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n#OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n#OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n###############################################################################\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###############################################################################\n\n# ADIOS\n\n###############################################################################\n\n# get flags for adios_config, -l is the default\n\n#-f for fortran, -r for readonly, -s for sequential (nompi)\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# find `adios_config` program #################################################\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# check `adios_config` program ################################################\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# add the version string\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# make suree at the very least we find libadios\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Search for the actual libs and headers to ue based on hints from the config\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "###############################################################################\n\n# FindPackage Options\n\n###############################################################################\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# handles the REQUIRED, QUIET and version-related arguments for find_package\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "##########################################################################\n\n# Add target and dependencies to ADIOS2\n\n##########################################################################\n",
        "Line" : 207,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 18
    },
    "CMake/FindEXPAT.cmake" : {
      "ObjectId" : "bf262b996f5076c5bb61335ecf74dd812578c1f8",
      "LastModified" : "2019-02-12T17:30:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# XXX: Copied from CMake, but includes vtkDetectLibraryType.\n\n# See https://gitlab.kitware.com/cmake/cmake/issues/18564\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#[=======================================================================[.rst:\nFindEXPAT\n---------\n\nFind the native Expat headers and library.\n\nImported Targets\n^^^^^^^^^^^^^^^^\n\nThis module defines the following :prop_tgt:`IMPORTED` targets:\n\n``EXPAT::EXPAT``\n  The Expat ``expat`` library, if found.\n\nResult Variables\n^^^^^^^^^^^^^^^^\n\nThis module will set the following variables in your project:\n\n``EXPAT_INCLUDE_DIRS``\n  where to find expat.h, etc.\n``EXPAT_LIBRARIES``\n  the libraries to link against to use Expat.\n``EXPAT_FOUND``\n  true if the Expat headers and libraries were found.\n\n#]=======================================================================]",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Look for the library.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Copy the results to the output variables and target.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "CMake/FindEigen3.cmake" : {
      "ObjectId" : "103690ed5ab08844c4742731da5586609ae134fe",
      "LastModified" : "2019-02-12T17:30:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/FindFFMPEG.cmake" : {
      "ObjectId" : "458784541c9cc1cfff3ca938006bddb027729460",
      "LastModified" : "2019-02-12T17:30:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#[==[\nProvides the following variables:\n\n  * `FFMPEG_INCLUDE_DIRS`: Include directories necessary to use FFMPEG.\n  * `FFMPEG_LIBRARIES`: Libraries necessary to use FFMPEG. Note that this only\n    includes libraries for the components requested.\n  * `FFMPEG_VERSION`: The version of FFMPEG found.\n\nThe following components are supported:\n\n  * `avcodec`\n  * `avdevice`\n  * `avfilter`\n  * `avformat`\n  * `avresample`\n  * `avutil`\n  * `swresample`\n  * `swscale`\n\nFor each component, the following are provided:\n\n  * `FFMPEG_<component>_FOUND`: Libraries for the component.\n  * `FFMPEG_<component>_INCLUDE_DIRS`: Include directories for\n    the component.\n  * `FFMPEG_<component>_LIBRARIES`: Libraries for the component.\n  * `FFMPEG::<component>`: A target to use with `target_link_libraries`.\n\nNote that only components requested with `COMPONENTS` or `OPTIONAL_COMPONENTS`\nare guaranteed to set these variables or provide targets.\n#]==]",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fink\n",
        "Line" : 42,
        "CharPositionInLine" : 18
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 43,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# Blastwave\n",
        "Line" : 44,
        "CharPositionInLine" : 23
      },
      "4" : {
        "Text" : "# On Windows, static FFMPEG is sometimes built as `lib<name>.a`.\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "CMake/FindFontConfig.cmake" : {
      "ObjectId" : "ea49c0efc8211c74f145ae906408e9b8a6479b9e",
      "LastModified" : "2019-02-12T17:30:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find FontConfig library\n\n# Find the FontConfig includes and library\n\n# This module defines\n\n#  FONTCONFIG_INCLUDE_DIR, where to find fontconfig.h\n\n#  FONTCONFIG_LIBRARIES, libraries to link against to use the FontConfig API.\n\n#  FONTCONFIG_FOUND, If false, do not try to use FontConfig.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2012 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of VTK, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set FONTCONFIG_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMake/FindFreetype.cmake" : {
      "ObjectId" : "e9841ccb2d3e43bf9b903f7127deb9b2157617f9",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# XXX: Copied from CMake, but includes vtkDetectLibraryType.\n\n# See https://gitlab.kitware.com/cmake/cmake/issues/18564\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#[=======================================================================[.rst:\nFindFreetype\n------------\n\nFind the FreeType font renderer includes and library.\n\nImported Targets\n^^^^^^^^^^^^^^^^\n\nThis module defines the following :prop_tgt:`IMPORTED` target:\n\n``Freetype::Freetype``\n  The Freetype ``freetype`` library, if found\n\nResult Variables\n^^^^^^^^^^^^^^^^\n\nThis module will set the following variables in your project:\n\n``FREETYPE_FOUND``\n  true if the Freetype headers and libraries were found\n``FREETYPE_INCLUDE_DIRS``\n  directories containing the Freetype headers. This is the\n  concatenation of the variables:\n\n  ``FREETYPE_INCLUDE_DIR_ft2build``\n    directory holding the main Freetype API configuration header\n  ``FREETYPE_INCLUDE_DIR_freetype2``\n    directory holding Freetype public headers\n``FREETYPE_LIBRARIES``\n  the library to link against\n``FREETYPE_VERSION_STRING``\n  the version of freetype found (since CMake 2.8.8)\n\nHints\n^^^^^\n\nThe user may set the environment variable ``FREETYPE_DIR`` to the root\ndirectory of a Freetype installation.\n#]=======================================================================]",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Created by Eric Wing.\n\n# Modifications by Alexander Neundorf.\n\n# This file has been renamed to \"FindFreetype.cmake\" instead of the correct\n\n# \"FindFreeType.cmake\" in order to be compatible with the one from KDE4, Alex.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Ugh, FreeType seems to use some #include trickery which\n\n# makes this harder than it should be. It looks like they\n\n# put ft2build.h in a common/easier-to-find location which\n\n# then contains a #include to a more specific header in a\n\n# more specific location (#include <freetype/config/ftheader.h>).\n\n# Then from there, they need to set a bunch of #define's\n\n# so you can do something like:\n\n# #include FT_FREETYPE_H\n\n# Unfortunately, using CMake's mechanisms like include_directories()\n\n# wants explicit full paths and this trickery doesn't work too well.\n\n# I'm going to attempt to cut out the middleman and hope\n\n# everything still works.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# on Windows, ensure paths are in canonical format (forward slahes):\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# set the user variables\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "CMake/FindGL2PS.cmake" : {
      "ObjectId" : "198d2b71a6b15ba800b42f3be99a5e044e6fcd5d",
      "LastModified" : "2019-02-12T17:30:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/FindGLEW.cmake" : {
      "ObjectId" : "1cb490d3a823111449a37d215a211f745fe6c5ac",
      "LastModified" : "2019-02-12T17:30:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/FindJsonCpp.cmake" : {
      "ObjectId" : "339c5f2559307432f97e30aff2fdf1273e39c180",
      "LastModified" : "2019-02-12T17:30:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/FindLZ4.cmake" : {
      "ObjectId" : "594c4290c6eee7819602da99e0d507a39414e270",
      "LastModified" : "2019-02-12T17:30:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/FindLZMA.cmake" : {
      "ObjectId" : "0e5c453cf2cd76af51b9a09a48aec2c6f30e8b2e",
      "LastModified" : "2019-02-12T17:30:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/FindLibHaru.cmake" : {
      "ObjectId" : "ffe71574016944d754b4f1d5fde542ec023d6ea3",
      "LastModified" : "2019-02-12T17:30:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/FindLibPROJ.cmake" : {
      "ObjectId" : "14fa9ea156649335ae2c05a93f737bcb127d6ec1",
      "LastModified" : "2019-02-12T17:30:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Before 4.10, version is XYZ. Afterwards is zero-padded XXXYYYZZ.\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "CMake/FindLibXml2.cmake" : {
      "ObjectId" : "b2dd175293c65415284b422d49f2dd3e596e1b9c",
      "LastModified" : "2019-02-12T17:30:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# XXX: Copied from CMake, but includes vtkDetectLibraryType and the ICU dependency.\n\n# See https://gitlab.kitware.com/cmake/cmake/issues/18564\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#[=======================================================================[.rst:\nFindLibXml2\n-----------\n\nFind the XML processing library (libxml2).\n\nIMPORTED Targets\n^^^^^^^^^^^^^^^^\n\nThis module defines :prop_tgt:`IMPORTED` target ``LibXml2::LibXml2``, if\nlibxml2 has been found.\n\nResult variables\n^^^^^^^^^^^^^^^^\n\nThis module will set the following variables in your project:\n\n``LIBXML2_FOUND``\n  true if libxml2 headers and libraries were found\n``LIBXML2_INCLUDE_DIR``\n  the directory containing LibXml2 headers\n``LIBXML2_INCLUDE_DIRS``\n  list of the include directories needed to use LibXml2\n``LIBXML2_LIBRARIES``\n  LibXml2 libraries to be linked\n``LIBXML2_DEFINITIONS``\n  the compiler switches required for using LibXml2\n``LIBXML2_XMLLINT_EXECUTABLE``\n  path to the XML checking tool xmllint coming with LibXml2\n``LIBXML2_VERSION_STRING``\n  the version of LibXml2 found (since CMake 2.8.8)\n\nCache variables\n^^^^^^^^^^^^^^^\n\nThe following cache variables may also be set:\n\n``LIBXML2_INCLUDE_DIR``\n  the directory containing LibXml2 headers\n``LIBXML2_LIBRARY``\n  path to the LibXml2 library\n#]=======================================================================]",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the find_path() and find_library() calls\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# CMake 3.9 and below used 'LIBXML2_LIBRARIES' as the name of\n\n# the cache entry storing the find_library result.  Use the\n\n# value if it was set by the project or user.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# for backwards compat. with KDE 4.0.x:\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "CMake/FindMySQL.cmake" : {
      "ObjectId" : "39745efce6c2bc210ae14579093dfafed171281d",
      "LastModified" : "2019-02-12T17:30:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#[==[\nProvides the following variables:\n\n  * `MySQL_INCLUDE_DIRS`: Include directories necessary to use MySQL.\n  * `MySQL_LIBRARIES`: Libraries necessary to use MySQL.\n  * A `MySQL::MySQL` imported target.\n#]==]",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# No .pc files are shipped with MySQL on Windows.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Remove \"${prefix}/mariadb/..\" from the interface since it breaks other\n\n# projects.\n",
        "Line" : 32,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "CMake/FindNetCDF.cmake" : {
      "ObjectId" : "b1a728ca8d723edfe7a8b1055be231df8dbb6c17",
      "LastModified" : "2019-02-12T17:30:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/FindODBC.cmake" : {
      "ObjectId" : "caef15908943500210e1eada4ea956f105901eb1",
      "LastModified" : "2019-02-12T17:30:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#[==[\nProvides the following variables:\n\n  * `ODBC_INCLUDE_DIRS`: Include directories necessary to use ODBC.\n  * `ODBC_LIBRARIES`: Libraries necessary to use ODBC.\n  * A `ODBC::ODBC` imported target.\n#]==]",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# No .pc files are shipped with ODBC on Windows.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/FindOGG.cmake" : {
      "ObjectId" : "327d674ed9771e93a0b3576d7704b99e09abd14c",
      "LastModified" : "2019-02-12T17:30:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/FindOSMesa.cmake" : {
      "ObjectId" : "3d0d35c87f548594253213c6caf155d9ab86b78d",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find Mesa off-screen library and include dir.\n\n# Once done this will define\n\n#\n\n# OSMesa_FOUND        - true if OSMesa has been found\n\n# OSMesa_INCLUDE_DIRS - where the GL/osmesa.h can be found\n\n# OSMesa_LIBRARIES    - Link this to use OSMesa\n\n# OSMesa_VERSION      - Version of OSMesa found\n\n# OSMesa::OSMesa      - Imported target\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindOpenMP.cmake" : {
      "ObjectId" : "c54eda5a8cfee54fd6e096c600152833d456cdb2",
      "LastModified" : "2019-02-12T17:30:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##=============================================================================\n\n##\n\n##  Copyright (c) Kitware, Inc.\n\n##  All rights reserved.\n\n##  See LICENSE.txt for details.\n\n##\n\n##  This software is distributed WITHOUT ANY WARRANTY; without even\n\n##  the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n##  PURPOSE.  See the above copyright notice for more information.\n\n##\n\n##  Copyright 2018 National Technology & Engineering Solutions of Sandia, LLC (NTESS).\n\n##  Copyright 2018 UT-Battelle, LLC.\n\n##  Copyright 2018 Los Alamos National Security.\n\n##\n\n##  Under the terms of Contract DE-NA0003525 with NTESS,\n\n##  the U.S. Government retains certain rights in this software.\n\n##  Under the terms of Contract DE-AC52-06NA25396 with Los Alamos National\n\n##  Laboratory (LANL), the U.S. Government retains certain rights in\n\n##  this software.\n\n##\n\n##=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindOpenMP\n\n# ----------\n\n#\n\n# Finds OpenMP support\n\n#\n\n# This module can be used to detect OpenMP support in a compiler.  If\n\n# the compiler supports OpenMP, the flags required to compile with\n\n# OpenMP support are returned in variables for the different languages.\n\n# The variables may be empty if the compiler does not need a special\n\n# flag to support OpenMP.\n\n#\n\n# Variables\n\n# ^^^^^^^^^\n\n#\n\n# The module exposes the components ``C``, ``CXX``, and ``Fortran``.\n\n# Each of these controls the various languages to search OpenMP support for.\n\n#\n\n# Depending on the enabled components the following variables will be set:\n\n#\n\n# ``OpenMP_FOUND``\n\n#   Variable indicating that OpenMP flags for all requested languages have been found.\n\n#   If no components are specified, this is true if OpenMP settings for all enabled languages\n\n#   were detected.\n\n# ``OpenMP_VERSION``\n\n#   Minimal version of the OpenMP standard detected among the requested languages,\n\n#   or all enabled languages if no components were specified.\n\n#\n\n# This module will set the following variables per language in your\n\n# project, where ``<lang>`` is one of C, CXX, or Fortran:\n\n#\n\n# ``OpenMP_<lang>_FOUND``\n\n#   Variable indicating if OpenMP support for ``<lang>`` was detected.\n\n# ``OpenMP_<lang>_FLAGS``\n\n#   OpenMP compiler flags for ``<lang>``, separated by spaces.\n\n#\n\n# For linking with OpenMP code written in ``<lang>``, the following\n\n# variables are provided:\n\n#\n\n# ``OpenMP_<lang>_LIB_NAMES``\n\n#   :ref:`;-list <CMake Language Lists>` of libraries for OpenMP programs for ``<lang>``.\n\n# ``OpenMP_<libname>_LIBRARY``\n\n#   Location of the individual libraries needed for OpenMP support in ``<lang>``.\n\n# ``OpenMP_<lang>_LIBRARIES``\n\n#   A list of libraries needed to link with OpenMP code written in ``<lang>``.\n\n#\n\n# Additionally, the module provides :prop_tgt:`IMPORTED` targets:\n\n#\n\n# ``OpenMP::OpenMP_<lang>``\n\n#   Target for using OpenMP from ``<lang>``.\n\n#\n\n# Specifically for Fortran, the module sets the following variables:\n\n#\n\n# ``OpenMP_Fortran_HAVE_OMPLIB_HEADER``\n\n#   Boolean indicating if OpenMP is accessible through ``omp_lib.h``.\n\n# ``OpenMP_Fortran_HAVE_OMPLIB_MODULE``\n\n#   Boolean indicating if OpenMP is accessible through the ``omp_lib`` Fortran module.\n\n#\n\n# The module will also try to provide the OpenMP version variables:\n\n#\n\n# ``OpenMP_<lang>_SPEC_DATE``\n\n#   Date of the OpenMP specification implemented by the ``<lang>`` compiler.\n\n# ``OpenMP_<lang>_VERSION_MAJOR``\n\n#   Major version of OpenMP implemented by the ``<lang>`` compiler.\n\n# ``OpenMP_<lang>_VERSION_MINOR``\n\n#   Minor version of OpenMP implemented by the ``<lang>`` compiler.\n\n# ``OpenMP_<lang>_VERSION``\n\n#   OpenMP version implemented by the ``<lang>`` compiler.\n\n#\n\n# The specification date is formatted as given in the OpenMP standard:\n\n# ``yyyymm`` where ``yyyy`` and ``mm`` represents the year and month of\n\n# the OpenMP specification implemented by the ``<lang>`` compiler.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if() recognizes numbers and booleans\n\n# if() quoted variables not dereferenced\n\n# if IN_LIST\n",
        "Line" : 99,
        "CharPositionInLine" : 30
      },
      "3" : {
        "Text" : "# Cray compiler activate OpenMP with -h omp, which is enabled by default.\n",
        "Line" : 128,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# If we know the correct flags, use those\n",
        "Line" : 131,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Fall back to reasonable default tries otherwise\n",
        "Line" : 134,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# sample openmp source code to test\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# in Fortran, an implementation may provide an omp_lib.h header\n\n# or omp_lib module, or both (OpenMP standard, section 3.1)\n\n# Furthmore !$ is the Fortran equivalent of #ifdef _OPENMP (OpenMP standard, 2.2.2)\n\n# Without the conditional compilation, some compilers (e.g. PGI) might compile OpenMP code\n\n# while not actually enabling OpenMP, building code sequentially\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# We do not know how to extract implicit OpenMP libraries for this compiler.\n\n# Assume that it handles them automatically, e.g. the Intel Compiler on\n\n# Windows should put the dependency in its object files.\n",
        "Line" : 266,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Check for separate OpenMP library on AppleClang 7+\n",
        "Line" : 275,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Preview versions\n",
        "Line" : 361,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# OpenMP 5.0 preview 1\n",
        "Line" : 362,
        "CharPositionInLine" : 17
      },
      "12" : {
        "Text" : "# Combined versions, 2.5 onwards\n",
        "Line" : 363,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# C/C++ version 2.0\n",
        "Line" : 369,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Fortran version 2.0\n",
        "Line" : 371,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Fortran version 1.1\n",
        "Line" : 373,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# C/C++ version 1.0 (there's no 1.1 for C/C++)\n",
        "Line" : 375,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Fortran version 1.0\n",
        "Line" : 377,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 18
    },
    "CMake/FindOpenSlide.cmake" : {
      "ObjectId" : "85b0c67d1c29904f8ca1848ab0b06b4477ffb8f1",
      "LastModified" : "2019-02-12T17:30:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A CMake find module for the OpenSlide microscopy file reader library.\n\n#\n\n# http://openslide.org\n\n#\n\n# Once done, this module will define\n\n#   OPENSLIDE_FOUND         - system has OpenSlide\n\n#   OPENSLIDE_INCLUDE_DIRS  - the OpenSlide include directory\n\n#   OPENSLIDE_LIBRARIES     - link to these to use OpenSlide\n\n#   OpenSlide::OpenSlide    - imported target\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the library.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set OPENSLIDE_FOUND true if all\n\n# the listed variables are TRUE.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "CMake/FindOpenVR.cmake" : {
      "ObjectId" : "7ff4ce62421543d82668359369a03ec637ce89e0",
      "LastModified" : "2019-02-12T17:30:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Note that OpenVR lacks a useful install tree. This should work if\n\n# `OpenVR_ROOT` is set to the source directory of OpenVR.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: fails for universal builds\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# SteamVR only supports 32-bit on OS X\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "CMake/FindPostgreSQL.cmake" : {
      "ObjectId" : "6ca8ae0cb3c9335178c0ff77578f4db373ecded4",
      "LastModified" : "2019-02-12T17:30:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nFindPostgreSQL\n--------------\n\nFind the PostgreSQL installation.\n\nIMPORTED Targets\n^^^^^^^^^^^^^^^^\n\nThis module defines :prop_tgt:`IMPORTED` target ``PostgreSQL::PostgreSQL``\nif PostgreSQL has been found.\n\nResult Variables\n^^^^^^^^^^^^^^^^\n\nThis module will set the following variables in your project:\n\n``PostgreSQL_FOUND``\n  True if PostgreSQL is found.\n``PostgreSQL_LIBRARIES``\n  the PostgreSQL libraries needed for linking\n``PostgreSQL_INCLUDE_DIRS``\n  the directories of the PostgreSQL headers\n``PostgreSQL_LIBRARY_DIRS``\n  the link directories for PostgreSQL libraries\n``PostgreSQL_VERSION_STRING``\n  the version of PostgreSQL found\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ----------------------------------------------------------------------------\n\n# History:\n\n# This module is derived from the module originally found in the VTK source tree.\n\n#\n\n# ----------------------------------------------------------------------------\n\n# Note:\n\n# PostgreSQL_ADDITIONAL_VERSIONS is a variable that can be used to set the\n\n# version number of the implementation of PostgreSQL.\n\n# In Windows the default installation of PostgreSQL uses that as part of the path.\n\n# E.g C:\\Program Files\\PostgreSQL\\8.4.\n\n# Currently, the following version numbers are known to this module:\n\n# \"11\" \"10\" \"9.6\" \"9.5\" \"9.4\" \"9.3\" \"9.2\" \"9.1\" \"9.0\" \"8.4\" \"8.3\" \"8.2\" \"8.1\" \"8.0\"\n\n#\n\n# To use this variable just do something like this:\n\n# set(PostgreSQL_ADDITIONAL_VERSIONS \"9.2\" \"8.4.4\")\n\n# before calling find_package(PostgreSQL) in your CMakeLists.txt file.\n\n# This will mean that the versions you set here will be found first in the order\n\n# specified before the default ones are searched.\n\n#\n\n# ----------------------------------------------------------------------------\n\n# You may need to manually set:\n\n#  PostgreSQL_INCLUDE_DIR  - the path to where the PostgreSQL include files are.\n\n#  PostgreSQL_LIBRARY_DIR  - The path to where the PostgreSQL library files are.\n\n# If FindPostgreSQL.cmake cannot find the include files or the library files.\n\n#\n\n# ----------------------------------------------------------------------------\n\n# The following variables are set if PostgreSQL is found:\n\n#  PostgreSQL_FOUND         - Set to true when PostgreSQL is found.\n\n#  PostgreSQL_INCLUDE_DIRS  - Include directories for PostgreSQL\n\n#  PostgreSQL_LIBRARY_DIRS  - Link directories for PostgreSQL libraries\n\n#  PostgreSQL_LIBRARIES     - The PostgreSQL libraries.\n\n#\n\n# The ``PostgreSQL::PostgreSQL`` imported target is also created.\n\n#\n\n# ----------------------------------------------------------------------------\n\n# If you have installed PostgreSQL in a non-standard location.\n\n# (Please note that in the following comments, it is assumed that <Your Path>\n\n# points to the root directory of the include directory of PostgreSQL.)\n\n# Then you have three options.\n\n# 1) After CMake runs, set PostgreSQL_INCLUDE_DIR to <Your Path>/include and\n\n#    PostgreSQL_LIBRARY_DIR to wherever the library pq (or libpq in windows) is\n\n# 2) Use CMAKE_INCLUDE_PATH to set a path to <Your Path>/PostgreSQL<-version>. This will allow find_path()\n\n#    to locate PostgreSQL_INCLUDE_DIR by utilizing the PATH_SUFFIXES option. e.g. In your CMakeLists.txt file\n\n#    set(CMAKE_INCLUDE_PATH ${CMAKE_INCLUDE_PATH} \"<Your Path>/include\")\n\n# 3) Set an environment variable called ${PostgreSQL_ROOT} that points to the root of where you have\n\n#    installed PostgreSQL, e.g. <Your Path>.\n\n#\n\n# ----------------------------------------------------------------------------\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define additional search paths for root directories.\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Look for an installation.\n\n#\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Look in other places.\n",
        "Line" : 123,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# Help the user find it if we cannot.\n",
        "Line" : 130,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Look in other places.\n",
        "Line" : 137,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "# Help the user find it if we cannot.\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# The PostgreSQL library.\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Setting some more prefixes for the library\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Help the user find it if we cannot.\n",
        "Line" : 165,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Some platforms include multiple pg_config.hs for multi-lib configurations\n\n# This is a temporary workaround.  A better solution would be to compile\n\n# a dummy c file and extract the value of the symbol.\n",
        "Line" : 171,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Did we find anything?\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Now try to get the include and library path.\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "CMake/FindPythonModules.cmake" : {
      "ObjectId" : "f2d3c15247f9f63e55ab48f19432c24a8de3960d",
      "LastModified" : "2019-02-12T17:30:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check whether a Python module is available by name, and if it is,\n\n# define a variable in the internal cache.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check for presence of the module.  Even though we don't use all the\n\n# variable names set here, assigning them suppresses their output in CMake.\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Function to simplify checking if a Python module is available\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMake/FindSWT.cmake" : {
      "ObjectId" : "a64177174f69a8aa4541e9a567d111aa07bafa92",
      "LastModified" : "2019-02-12T17:30:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Try to find SWT jar library path.\n\n# Once done this will define\n\n#\n\n# ECLIPSE_PLUGINS_DIR = directory where Eclipse plugins reside\n\n# ECLIPSE_SWT_LIBRARIES = full path to the SWT jar libraries\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/FindTBB.cmake" : {
      "ObjectId" : "b1a3d884c65943b6bbfab885c3cac08b4f536276",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find ThreadingBuildingBlocks include dirs and libraries\n\n# Use this module by invoking find_package with the form:\n\n#  find_package(TBB\n\n#    [REQUIRED]             # Fail with error if TBB is not found\n\n#    )                      #\n\n# Once done, this will define\n\n#\n\n#  TBB_FOUND - system has TBB\n\n#  TBB_INCLUDE_DIRS - the TBB include directories\n\n#  TBB_LIBRARIES - TBB libraries to be lined, doesn't include malloc or\n\n#                  malloc proxy\n\n#  TBB::tbb - imported target for the TBB library\n\n#\n\n#  TBB_VERSION_MAJOR - Major Product Version Number\n\n#  TBB_VERSION_MINOR - Minor Product Version Number\n\n#  TBB_INTERFACE_VERSION - Engineering Focused Version Number\n\n#  TBB_COMPATIBLE_INTERFACE_VERSION - The oldest major interface version\n\n#                                     still supported. This uses the engineering\n\n#                                     focused interface version numbers.\n\n#\n\n#  TBB_MALLOC_FOUND - system has TBB malloc library\n\n#  TBB_MALLOC_INCLUDE_DIRS - the TBB malloc include directories\n\n#  TBB_MALLOC_LIBRARIES - The TBB malloc libraries to be lined\n\n#  TBB::malloc - imported target for the TBB malloc library\n\n#\n\n#  TBB_MALLOC_PROXY_FOUND - system has TBB malloc proxy library\n\n#  TBB_MALLOC_PROXY_INCLUDE_DIRS = the TBB malloc proxy include directories\n\n#  TBB_MALLOC_PROXY_LIBRARIES - The TBB malloc proxy libraries to be lined\n\n#  TBB::malloc_proxy - imported target for the TBB malloc proxy library\n\n#\n\n#\n\n# This module reads hints about search locations from variables:\n\n#  ENV TBB_ARCH_PLATFORM - for eg. set it to \"mic\" for Xeon Phi builds\n\n#  ENV TBB_ROOT or just TBB_ROOT - root directory of tbb installation\n\n#  ENV TBB_BUILD_PREFIX - specifies the build prefix for user built tbb\n\n#                         libraries. Should be specified with ENV TBB_ROOT\n\n#                         and optionally...\n\n#  ENV TBB_BUILD_DIR - if build directory is different than ${TBB_ROOT}/build\n\n#\n\n#\n\n# Modified by Robert Maynard from the original OGRE source\n\n#\n\n#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n\n#\n\n#=============================================================================\n\n# Copyright 2010-2012 Kitware, Inc.\n\n# Copyright 2012      Rolf Eike Beer <eike@sf-mail.de>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n#  FindTBB helper functions and macros\n\n#\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#====================================================\n\n# Fix the library path in case it is a linker script\n\n#====================================================\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Read in the first 4 bytes and see if they are the ELF magic number\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#we have opened a elf binary so this is what\n\n#we should link to\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#extract out the .so name from REGEX MATCH command\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#construct path to the real .so which is presumed to be in the same directory\n\n#as the input file\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#unable to determine what this library is so just hope everything works\n\n#and pass it unmodified.\n",
        "Line" : 100,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#===============================================\n\n# Do the final processing for the package find.\n\n#===============================================\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# skip if already processed during this run\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#mark the following variables as internal variables\n",
        "Line" : 146,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "#===============================================\n\n# Generate debug names from given release names\n\n#===============================================\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#===============================================\n\n# See if we have env vars to help us find tbb\n\n#===============================================\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# replace won't work if var is blank\n",
        "Line" : 168,
        "CharPositionInLine" : 3
      },
      "14" : {
        "Text" : "#===============================================\n\n# Couple a set of release AND debug libraries\n\n#===============================================\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#=============================================================================\n\n#  Now to actually find TBB\n\n#\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Get path, convert backslashes as ${ENV_${var}}\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# initialize search paths\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# If user built from sources\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# include directory under ${ENV_TBB_ROOT}/include\n",
        "Line" : 209,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# For Windows, let's assume that the user might be using the precompiled\n\n# TBB packages from the main website. These use a rather awkward directory\n\n# structure (at least for automatically finding the right files) depending\n\n# on platform and compiler, but we'll do our best to accommodate it.\n\n# Not adding the same effort for the precompiled linux builds, though. Those\n\n# have different versions for CC compiler versions and linux kernels which\n\n# will never adequately match the user's setup, so there is no feasible way\n\n# to detect the \"best\" version to use. The user will have to manually\n\n# select the right files. (Chances are the distributions are shipping their\n\n# custom version of tbb, anyway, so the problem is probably nonexistent.)\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# for each prefix path, add ia32/64\\${COMPILER_PREFIX}\\lib to the lib search path\n",
        "Line" : 242,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# For OS X binary distribution, choose libc++ based libraries for Mavericks (10.9)\n\n# and above and AppleClang\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# check compiler ABI\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Assume compatibility with 4.4 for other compilers\n",
        "Line" : 296,
        "CharPositionInLine" : 7
      },
      "25" : {
        "Text" : "# if platform architecture is explicitly specified\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# add general search paths\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#if we haven't found TBB no point on going any further\n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#=============================================================================\n\n# Look for TBB's malloc package\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#=============================================================================\n\n# Look for TBB's malloc proxy package\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#=============================================================================\n\n#parse all the version numbers from tbb\n",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#only read the start of the file\n",
        "Line" : 399,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 32
    },
    "CMake/FindTCL.cmake" : {
      "ObjectId" : "551fd70015ca549b1c1ccaf7d53147e5653526f7",
      "LastModified" : "2019-02-12T17:30:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Tcl includes and libraries.\n\n# This module finds if Tcl is installed and determines where the\n\n# include files and libraries are. It also determines what the name of\n\n# the library is. This code sets the following variables:\n\n#  TCL_FOUND              = Tcl was found\n\n#  TK_FOUND               = Tk was found\n\n#  TCLTK_FOUND            = Tcl and Tk were found\n\n#  TCL_LIBRARY            = path to Tcl library (tcl tcl80)\n\n#  TCL_INCLUDE_PATH       = path to where tcl.h can be found\n\n#  TCL_TCLSH              = path to tclsh binary (tcl tcl80)\n\n#  TK_LIBRARY             = path to Tk library (tk tk80 etc)\n\n#  TK_INCLUDE_PATH        = path to where tk.h can be found\n\n#  TK_WISH                = full path to the wish executable\n\n#\n\n# In an effort to remove some clutter and clear up some issues for people\n\n# who are not necessarily Tcl/Tk gurus/developers, some variables were\n\n# moved or removed. Changes compared to CMake 2.4 are:\n\n# - The stub libraries are now found in FindTclStub.cmake\n\n#   => they were only useful for people writing Tcl/Tk extensions.\n\n# - TCL_LIBRARY_DEBUG and TK_LIBRARY_DEBUG were removed.\n\n#   => these libs are not packaged by default with Tcl/Tk distributions.\n\n#      Even when Tcl/Tk is built from source, several flavors of debug libs\n\n#      are created and there is no real reason to pick a single one\n\n#      specifically (say, amongst tcl84g, tcl84gs, or tcl84sgx).\n\n#      Let's leave that choice to the user by allowing him to assign\n\n#      TCL_LIBRARY to any Tcl library, debug or not.\n\n# - TK_INTERNAL_PATH was removed.\n\n#   => this ended up being only a Win32 variable, and there is a lot of\n\n#      confusion regarding the location of this file in an installed Tcl/Tk\n\n#      tree anyway (see 8.5 for example). If you need the internal path at\n\n#      this point it is safer you ask directly where the *source* tree is\n\n#      and dig from there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set TCL_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/FindTHEORA.cmake" : {
      "ObjectId" : "1b1c4c0c65f12f15d7734e09074da53adabce187",
      "LastModified" : "2019-02-12T17:30:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/Finddouble-conversion.cmake" : {
      "ObjectId" : "b98f414104a574427644debe7120596e8e6737ef",
      "LastModified" : "2019-02-12T17:30:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/Findmpi4py.cmake" : {
      "ObjectId" : "7283e0cbd8dcd2e49ffdf68d227217d227a3e437",
      "LastModified" : "2019-02-12T17:30:14Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/Findutf8cpp.cmake" : {
      "ObjectId" : "e63bd4748b82d4191a2284be07a57eb47b65497a",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/NewCMake/CMakeParseArguments.cmake" : {
      "ObjectId" : "fc64ab9a2482695eb7800e23bb56d3ac3999aac7",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# CMakeParseArguments\n\n# -------------------\n\n#\n\n# This module once implemented the :command:`cmake_parse_arguments` command\n\n# that is now implemented natively by CMake.  It is now an empty placeholder\n\n# for compatibility with projects that include it to get the command from\n\n# CMake 3.4 and lower.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/NewCMake/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "f39a605c1322c5f888c0e1ee60b5ec0a3ed8a33b",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindPackageHandleStandardArgs\n\n# -----------------------------\n\n#\n\n# This module provides a function intended to be used in :ref:`Find Modules`\n\n# implementing :command:`find_package(<PackageName>)` calls.  It handles the\n\n# ``REQUIRED``, ``QUIET`` and version-related arguments of ``find_package``.\n\n# It also sets the ``<PackageName>_FOUND`` variable.  The package is\n\n# considered found if all variables listed contain valid results, e.g.\n\n# valid filepaths.\n\n#\n\n# .. command:: find_package_handle_standard_args\n\n#\n\n#   There are two signatures::\n\n#\n\n#     find_package_handle_standard_args(<PackageName>\n\n#       (DEFAULT_MSG|<custom-failure-message>)\n\n#       <required-var>...\n\n#       )\n\n#\n\n#     find_package_handle_standard_args(<PackageName>\n\n#       [FOUND_VAR <result-var>]\n\n#       [REQUIRED_VARS <required-var>...]\n\n#       [VERSION_VAR <version-var>]\n\n#       [HANDLE_COMPONENTS]\n\n#       [CONFIG_MODE]\n\n#       [FAIL_MESSAGE <custom-failure-message>]\n\n#       )\n\n#\n\n#   The ``<PackageName>_FOUND`` variable will be set to ``TRUE`` if all\n\n#   the variables ``<required-var>...`` are valid and any optional\n\n#   constraints are satisfied, and ``FALSE`` otherwise.  A success or\n\n#   failure message may be displayed based on the results and on\n\n#   whether the ``REQUIRED`` and/or ``QUIET`` option was given to\n\n#   the :command:`find_package` call.\n\n#\n\n#   The options are:\n\n#\n\n#   ``(DEFAULT_MSG|<custom-failure-message>)``\n\n#     In the simple signature this specifies the failure message.\n\n#     Use ``DEFAULT_MSG`` to ask for a default message to be computed\n\n#     (recommended).  Not valid in the full signature.\n\n#\n\n#   ``FOUND_VAR <result-var>``\n\n#     Obsolete.  Specifies either ``<PackageName>_FOUND`` or\n\n#     ``<PACKAGENAME>_FOUND`` as the result variable.  This exists only\n\n#     for compatibility with older versions of CMake and is now ignored.\n\n#     Result variables of both names are always set for compatibility.\n\n#\n\n#   ``REQUIRED_VARS <required-var>...``\n\n#     Specify the variables which are required for this package.\n\n#     These may be named in the generated failure message asking the\n\n#     user to set the missing variable values.  Therefore these should\n\n#     typically be cache entries such as ``FOO_LIBRARY`` and not output\n\n#     variables like ``FOO_LIBRARIES``.\n\n#\n\n#   ``VERSION_VAR <version-var>``\n\n#     Specify the name of a variable that holds the version of the package\n\n#     that has been found.  This version will be checked against the\n\n#     (potentially) specified required version given to the\n\n#     :command:`find_package` call, including its ``EXACT`` option.\n\n#     The default messages include information about the required\n\n#     version and the version which has been actually found, both\n\n#     if the version is ok or not.\n\n#\n\n#   ``HANDLE_COMPONENTS``\n\n#     Enable handling of package components.  In this case, the command\n\n#     will report which components have been found and which are missing,\n\n#     and the ``<PackageName>_FOUND`` variable will be set to ``FALSE``\n\n#     if any of the required components (i.e. not the ones listed after\n\n#     the ``OPTIONAL_COMPONENTS`` option of :command:`find_package`) are\n\n#     missing.\n\n#\n\n#   ``CONFIG_MODE``\n\n#     Specify that the calling find module is a wrapper around a\n\n#     call to ``find_package(<PackageName> NO_MODULE)``.  This implies\n\n#     a ``VERSION_VAR`` value of ``<PackageName>_VERSION``.  The command\n\n#     will automatically check whether the package configuration file\n\n#     was found.\n\n#\n\n#   ``FAIL_MESSAGE <custom-failure-message>``\n\n#     Specify a custom failure message instead of using the default\n\n#     generated message.  Not recommended.\n\n#\n\n# Example for the simple signature:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#   find_package_handle_standard_args(LibXml2 DEFAULT_MSG\n\n#     LIBXML2_LIBRARY LIBXML2_INCLUDE_DIR)\n\n#\n\n# The ``LibXml2`` package is considered to be found if both\n\n# ``LIBXML2_LIBRARY`` and ``LIBXML2_INCLUDE_DIR`` are valid.\n\n# Then also ``LibXml2_FOUND`` is set to ``TRUE``.  If it is not found\n\n# and ``REQUIRED`` was used, it fails with a\n\n# :command:`message(FATAL_ERROR)`, independent whether ``QUIET`` was\n\n# used or not.  If it is found, success will be reported, including\n\n# the content of the first ``<required-var>``.  On repeated CMake runs,\n\n# the same message will not be printed again.\n\n#\n\n# Example for the full signature:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#   find_package_handle_standard_args(LibArchive\n\n#     REQUIRED_VARS LibArchive_LIBRARY LibArchive_INCLUDE_DIR\n\n#     VERSION_VAR LibArchive_VERSION)\n\n#\n\n# In this case, the ``LibArchive`` package is considered to be found if\n\n# both ``LibArchive_LIBRARY`` and ``LibArchive_INCLUDE_DIR`` are valid.\n\n# Also the version of ``LibArchive`` will be checked by using the version\n\n# contained in ``LibArchive_VERSION``.  Since no ``FAIL_MESSAGE`` is given,\n\n# the default messages will be printed.\n\n#\n\n# Another example for the full signature:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#   find_package(Automoc4 QUIET NO_MODULE HINTS /opt/automoc4)\n\n#   find_package_handle_standard_args(Automoc4  CONFIG_MODE)\n\n#\n\n# In this case, a ``FindAutmoc4.cmake`` module wraps a call to\n\n# ``find_package(Automoc4 NO_MODULE)`` and adds an additional search\n\n# directory for ``automoc4``.  Then the call to\n\n# ``find_package_handle_standard_args`` produces a proper success/failure\n\n# message.\n\n#\n\n#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# internal helper macro\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# internal helper macro to generate the failure message when used in CONFIG_MODE:\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# <name>_CONFIG is set, but FOUND is false, this means that some other of the REQUIRED_VARS was not found:\n",
        "Line" : 158,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# If _CONSIDERED_CONFIGS is set, the config-file has been found, but no suitable version.\n\n# List them all in the error message:\n",
        "Line" : 162,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Simple case: No Config-file was found at all:\n",
        "Line" : 179,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# set up the arguments for CMAKE_PARSE_ARGUMENTS and check whether we are in\n\n# new extended or in the \"old\" mode:\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# now that we collected all arguments, process them\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# In config-mode, we rely on the variable <package>_CONFIG, which is set by find_package()\n\n# when it successfully found the config-file, including version checking:\n",
        "Line" : 219,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# collect all variables which were not found, so they can be printed, so the\n\n# user knows better what went wrong (#6375)\n",
        "Line" : 246,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# check if all passed variables are valid\n",
        "Line" : 250,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# component handling\n",
        "Line" : 268,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# version handling:\n",
        "Line" : 299,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# check with DEFINED here as the requested or found version may be \"0\"\n",
        "Line" : 304,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# exact version required\n",
        "Line" : 308,
        "CharPositionInLine" : 44
      },
      "15" : {
        "Text" : "# count the dots in the version string\n",
        "Line" : 309,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# add one dot because there is one dot more than there are components\n",
        "Line" : 311,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Because of the C++ implementation of find_package() ${_NAME}_FIND_VERSION_COUNT\n\n# is at most 4 here. Therefore a simple lookup table is used.\n",
        "Line" : 314,
        "CharPositionInLine" : 10
      },
      "18" : {
        "Text" : "# minimum version specified:\n",
        "Line" : 344,
        "CharPositionInLine" : 17
      },
      "19" : {
        "Text" : "# if the package was not found, but a version was given, add that to the output:\n",
        "Line" : 355,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# print the result:\n",
        "Line" : 376,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 21
    },
    "CMake/NewCMake/FindPackageMessage.cmake" : {
      "ObjectId" : "a0349d3db99a3b446c421d9bdc14142ab278e72f",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindPackageMessage\n\n# ------------------\n\n#\n\n#\n\n#\n\n# FIND_PACKAGE_MESSAGE(<name> \"message for user\" \"find result details\")\n\n#\n\n# This macro is intended to be used in FindXXX.cmake modules files.  It\n\n# will print a message once for each unique find result.  This is useful\n\n# for telling the user where a package was found.  The first argument\n\n# specifies the name (XXX) of the package.  The second argument\n\n# specifies the message to display.  The third argument lists details\n\n# about the find result so that if they change the message will be\n\n# displayed again.  The macro also obeys the QUIET argument to the\n\n# find_package command.\n\n#\n\n# Example:\n\n#\n\n# ::\n\n#\n\n#   if(X11_FOUND)\n\n#     FIND_PACKAGE_MESSAGE(X11 \"Found X11: ${X11_X11_LIB}\"\n\n#       \"[${X11_X11_LIB}][${X11_INCLUDE_DIR}]\")\n\n#   else()\n\n#    ...\n\n#   endif()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2008-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Avoid printing a message repeatedly for the same find result.\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# The message has not yet been printed.\n",
        "Line" : 48,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Save the find details in the cache to avoid printing the same\n\n# message again.\n",
        "Line" : 51,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "CMake/NewCMake/SelectLibraryConfigurations.cmake" : {
      "ObjectId" : "d7108562b1bdee824723f15ade932d4564495371",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# SelectLibraryConfigurations\n\n# ---------------------------\n\n#\n\n#\n\n#\n\n# select_library_configurations( basename )\n\n#\n\n# This macro takes a library base name as an argument, and will choose\n\n# good values for basename_LIBRARY, basename_LIBRARIES,\n\n# basename_LIBRARY_DEBUG, and basename_LIBRARY_RELEASE depending on what\n\n# has been found and set.  If only basename_LIBRARY_RELEASE is defined,\n\n# basename_LIBRARY will be set to the release value, and\n\n# basename_LIBRARY_DEBUG will be set to basename_LIBRARY_DEBUG-NOTFOUND.\n\n# If only basename_LIBRARY_DEBUG is defined, then basename_LIBRARY will\n\n# take the debug value, and basename_LIBRARY_RELEASE will be set to\n\n# basename_LIBRARY_RELEASE-NOTFOUND.\n\n#\n\n# If the generator supports configuration types, then basename_LIBRARY\n\n# and basename_LIBRARIES will be set with debug and optimized flags\n\n# specifying the library to be used for the given configuration.  If no\n\n# build type has been set or the generator in use does not support\n\n# configuration types, then basename_LIBRARY and basename_LIBRARIES will\n\n# take only the release value, or the debug value if the release one is\n\n# not set.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Will Dicharry <wdicharry@stellarscience.com>\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This macro was adapted from the FindQt4 CMake module and is maintained by Will\n\n# Dicharry <wdicharry@stellarscience.com>.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# if the generator supports configuration types or CMAKE_BUILD_TYPE\n\n# is set, then set optimized and debug options.\n",
        "Line" : 55,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "CMake/RasterizePostScript.cmake" : {
      "ObjectId" : "5f70ace2683a3af69155e3fa51b3bd1746d20d9a",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Simple CMake -P script to rasterize a postscript file and optionally\n\n# a PDF file to a png image.\n\n#\n\n# Usage:\n\n#\n\n# cmake -DPSFILE=<postscript file>\n\n#     [ -DPNGFILE=<png file> ]\n\n#       -DGS_EXECUTABLE=<ghostscript executable>\n\n#       -DREMOVEPS=<bool>\n\n#     [ -DRASTERIZE_PDF=<bool> ]\n\n#     [ -DPDFFILE=<pdf file> ]\n\n#     [ -DPDFPNGFILE=<png_pdf_file> ]\n\n#     [ -DREMOVEPDF=<bool> ]\n\n#       -P RasterizePostScript.cmake\n\n#\n\n# PSFILE is the input postscript file, PNGFILE is the output png file path. If\n\n# PNGFILE is not specified, it will have the same basename as PSFILE, but with\n\n# a .png extension.\n\n#\n\n# if RASTERIZE_PDF is not specified is assumed false.  If the PDFFILE\n\n# is not specified, it will have the same basename as PSFILE, but with\n\n# a .pdf extension. The same, PDFPNGFILE, if not specified, is created\n\n# from basename of PNGFILE like this: <pngbasename>-pdf.png. If\n\n# REMOVEPDF is not specified is the same as REMOVEPS.\n\n#\n\n# If PDFFILE is specified but PSFILE is not, only the PDF file will be tested.\n\n# RASTERIZE_PDF is implied in this situation.\n\n#\n\n# The script simple calls ghostscript with the relevant parameters to produce a\n\n# png with the same dimensions as the input file's bounding box. The path to\n\n# the ghostscript executable for your system must be specified in\n\n# GS_EXECUTABLE.\n\n#\n\n# If REMOVEPS is true, the postscript file will be removed upon successful\n\n# conversion.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# First just try scanning the file for postscript bbox metadata:\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# If the metadata isn't provided, ask ghostscript to find out.\n\n# Beware, GhostScript computes a tight bbox and treats white pixels as\n\n# transparent, so the gs bbox is dependent on the contents of the image.\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Remove any old output (in case conversion fails)\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Rasterize PSFILE --> png\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "CMake/RasterizeSVG.cmake" : {
      "ObjectId" : "b92503ec7c20f2f8692e516c40d57f00c7a3e4be",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Simple CMake -P script to rasterize an SVG file to a png image.\n\n#\n\n# Usage:\n\n#\n\n# cmake -DSVGFILE=<SVG file>\n\n#     [ -DPNGFILE=<PNG file> ]\n\n#       -DCONVERTER=<wkhtmltoimage executable>\n\n#       -DREMOVESVG=<bool>\n\n#       -P RasterizeSVG.cmake\n\n#\n\n# SVGFILE is the input SVG file, PNGFILE is the output png file path. If\n\n# PNGFILE is not specified, it will have the same basename as SVGFILE, but with\n\n# a .png extension.\n\n#\n\n# The script calls wkhtmltoimage with the relevant parameters to produce\n\n# a png with the same dimensions as the input file's bounding box. The path to\n\n# the wkhtmltoimage executable for your system must be specified in CONVERTER.\n\n#\n\n# If REMOVESVG is true, the input SVG file will be removed upon successful\n\n# conversion.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# wkhtmltoimage doesn't do a great job of restricting the output image to the\n\n# input dimensions, so scan the header of the file for the dimensions, which\n\n# appear as '<svg ... width=\"XXX\" ... height=\"XXX\" ... >' in the root <svg>\n\n# element. This should appear in the first 1KB, so don't read the whole file:\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Remove any old output (in case conversion fails)\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Rasterize SVGFILE --> png\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "CMake/TestNO_ICC_IDYNAMIC_NEEDED.cmake" : {
      "ObjectId" : "d5d6562a83b6333ba2619275cbdfd427decb5165",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests whether the compiler is Intel icc and needs -i_dynamic\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Test compiled, either working intel w/o -i_dynamic, or another compiler\n",
        "Line" : 10,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "#Intel icc compiler, -i_dynamic not needed\n",
        "Line" : 11,
        "CharPositionInLine" : 24
      },
      "3" : {
        "Text" : "#The compiler is not Intel icc\n",
        "Line" : 15,
        "CharPositionInLine" : 13
      },
      "4" : {
        "Text" : "#Test did not compile, either badly broken compiler, or intel -i_dynamic needed\n",
        "Line" : 20,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 5
    },
    "CMake/patches/3.10/FindMPI.cmake" : {
      "ObjectId" : "e3677887f6ae7312bbd8dbf01892ba7b69872869",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindMPI\n\n# -------\n\n#\n\n# Find a Message Passing Interface (MPI) implementation.\n\n#\n\n# The Message Passing Interface (MPI) is a library used to write\n\n# high-performance distributed-memory parallel applications, and is\n\n# typically deployed on a cluster.  MPI is a standard interface (defined\n\n# by the MPI forum) for which many implementations are available.\n\n#\n\n# Variables for using MPI\n\n# ^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# The module exposes the components ``C``, ``CXX``, ``MPICXX`` and ``Fortran``.\n\n# Each of these controls the various MPI languages to search for.\n\n# The difference between ``CXX`` and ``MPICXX`` is that ``CXX`` refers to the\n\n# MPI C API being usable from C++, whereas ``MPICXX`` refers to the MPI-2 C++ API\n\n# that was removed again in MPI-3.\n\n#\n\n# Depending on the enabled components the following variables will be set:\n\n#\n\n# ``MPI_FOUND``\n\n#   Variable indicating that MPI settings for all requested languages have been found.\n\n#   If no components are specified, this is true if MPI settings for all enabled languages\n\n#   were detected. Note that the ``MPICXX`` component does not affect this variable.\n\n# ``MPI_VERSION``\n\n#   Minimal version of MPI detected among the requested languages, or all enabled languages\n\n#   if no components were specified.\n\n#\n\n# This module will set the following variables per language in your\n\n# project, where ``<lang>`` is one of C, CXX, or Fortran:\n\n#\n\n# ``MPI_<lang>_FOUND``\n\n#   Variable indicating the MPI settings for ``<lang>`` were found and that\n\n#   simple MPI test programs compile with the provided settings.\n\n# ``MPI_<lang>_COMPILER``\n\n#   MPI compiler for ``<lang>`` if such a program exists.\n\n# ``MPI_<lang>_COMPILE_OPTIONS``\n\n#   Compilation options for MPI programs in ``<lang>``, given as a :ref:`;-list <CMake Language Lists>`.\n\n# ``MPI_<lang>_COMPILE_DEFINITIONS``\n\n#   Compilation definitions for MPI programs in ``<lang>``, given as a :ref:`;-list <CMake Language Lists>`.\n\n# ``MPI_<lang>_INCLUDE_DIRS``\n\n#   Include path(s) for MPI header.\n\n# ``MPI_<lang>_LINK_FLAGS``\n\n#   Linker flags for MPI programs.\n\n# ``MPI_<lang>_LIBRARIES``\n\n#   All libraries to link MPI programs against.\n\n#\n\n# Additionally, the following :prop_tgt:`IMPORTED` targets are defined:\n\n#\n\n# ``MPI::MPI_<lang>``\n\n#   Target for using MPI from ``<lang>``.\n\n#\n\n# The following variables indicating which bindings are present will be defined:\n\n#\n\n# ``MPI_MPICXX_FOUND``\n\n#   Variable indicating whether the MPI-2 C++ bindings are present (introduced in MPI-2, removed with MPI-3).\n\n# ``MPI_Fortran_HAVE_F77_HEADER``\n\n#   True if the Fortran 77 header ``mpif.h`` is available.\n\n# ``MPI_Fortran_HAVE_F90_MODULE``\n\n#   True if the Fortran 90 module ``mpi`` can be used for accessing MPI (MPI-2 and higher only).\n\n# ``MPI_Fortran_HAVE_F08_MODULE``\n\n#   True if the Fortran 2008 ``mpi_f08`` is available to MPI programs (MPI-3 and higher only).\n\n#\n\n# If possible, the MPI version will be determined by this module. The facilities to detect the MPI version\n\n# were introduced with MPI-1.2, and therefore cannot be found for older MPI versions.\n\n#\n\n# ``MPI_<lang>_VERSION_MAJOR``\n\n#   Major version of MPI implemented for ``<lang>`` by the MPI distribution.\n\n# ``MPI_<lang>_VERSION_MINOR``\n\n#   Minor version of MPI implemented for ``<lang>`` by the MPI distribution.\n\n# ``MPI_<lang>_VERSION``\n\n#   MPI version implemented for ``<lang>`` by the MPI distribution.\n\n#\n\n# Note that there's no variable for the C bindings being accessible through ``mpi.h``, since the MPI standards\n\n# always have required this binding to work in both C and C++ code.\n\n#\n\n# For running MPI programs, the module sets the following variables\n\n#\n\n# ``MPIEXEC_EXECUTABLE``\n\n#   Executable for running MPI programs, if such exists.\n\n# ``MPIEXEC_NUMPROC_FLAG``\n\n#   Flag to pass to ``mpiexec`` before giving it the number of processors to run on.\n\n# ``MPIEXEC_MAX_NUMPROCS``\n\n#   Number of MPI processors to utilize. Defaults to the number\n\n#   of processors detected on the host system.\n\n# ``MPIEXEC_PREFLAGS``\n\n#   Flags to pass to ``mpiexec`` directly before the executable to run.\n\n# ``MPIEXEC_POSTFLAGS``\n\n#   Flags to pass to ``mpiexec`` after other flags.\n\n#\n\n# Variables for locating MPI\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# This module performs a three step search for an MPI implementation:\n\n#\n\n# 1. Check if the compiler has MPI support built-in. This is the case if the user passed a\n\n#    compiler wrapper as ``CMAKE_<LANG>_COMPILER`` or if they're on a Cray system.\n\n# 2. Attempt to find an MPI compiler wrapper and determine the compiler information from it.\n\n# 3. Try to find an MPI implementation that does not ship such a wrapper by guessing settings.\n\n#    Currently, only Microsoft MPI and MPICH2 on Windows are supported.\n\n#\n\n# For controlling the second step, the following variables may be set:\n\n#\n\n# ``MPI_<lang>_COMPILER``\n\n#   Search for the specified compiler wrapper and use it.\n\n# ``MPI_<lang>_COMPILER_FLAGS``\n\n#   Flags to pass to the MPI compiler wrapper during interrogation. Some compiler wrappers\n\n#   support linking debug or tracing libraries if a specific flag is passed and this variable\n\n#   may be used to obtain them.\n\n# ``MPI_COMPILER_FLAGS``\n\n#   Used to initialize ``MPI_<lang>_COMPILER_FLAGS`` if no language specific flag has been given.\n\n#   Empty by default.\n\n# ``MPI_EXECUTABLE_SUFFIX``\n\n#   A suffix which is appended to all names that are being looked for. For instance you may set this\n\n#   to ``.mpich`` or ``.openmpi`` to prefer the one or the other on Debian and its derivatives.\n\n#\n\n# In order to control the guessing step, the following variable may be set:\n\n#\n\n# ``MPI_GUESS_LIBRARY_NAME``\n\n#   Valid values are ``MSMPI`` and ``MPICH2``. If set, only the given library will be searched for.\n\n#   By default, ``MSMPI`` will be preferred over ``MPICH2`` if both are available.\n\n#   This also sets ``MPI_SKIP_COMPILER_WRAPPER`` to ``true``, which may be overridden.\n\n#\n\n# Each of the search steps may be skipped with the following control variables:\n\n#\n\n# ``MPI_ASSUME_NO_BUILTIN_MPI``\n\n#   If true, the module assumes that the compiler itself does not provide an MPI implementation and\n\n#   skips to step 2.\n\n# ``MPI_SKIP_COMPILER_WRAPPER``\n\n#   If true, no compiler wrapper will be searched for.\n\n# ``MPI_SKIP_GUESSING``\n\n#   If true, the guessing step will be skipped.\n\n#\n\n# Additionally, the following control variable is available to change search behavior:\n\n#\n\n# ``MPI_CXX_SKIP_MPICXX``\n\n#   Add some definitions that will disable the MPI-2 C++ bindings.\n\n#   Currently supported are MPICH, Open MPI, Platform MPI and derivatives thereof,\n\n#   for example MVAPICH or Intel MPI.\n\n#\n\n# If the find procedure fails for a variable ``MPI_<lang>_WORKS``, then the settings detected by or passed to\n\n# the module did not work and even a simple MPI test program failed to compile.\n\n#\n\n# If all of these parameters were not sufficient to find the right MPI implementation, a user may\n\n# disable the entire autodetection process by specifying both a list of libraries in ``MPI_<lang>_LIBRARIES``\n\n# and a list of include directories in ``MPI_<lang>_ADDITIONAL_INCLUDE_DIRS``.\n\n# Any other variable may be set in addition to these two. The module will then validate the MPI settings and store the\n\n# settings in the cache.\n\n#\n\n# Cache variables for MPI\n\n# ^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# The variable ``MPI_<lang>_INCLUDE_DIRS`` will be assembled from the following variables.\n\n# For C and CXX:\n\n#\n\n# ``MPI_<lang>_HEADER_DIR``\n\n#   Location of the ``mpi.h`` header on disk.\n\n#\n\n# For Fortran:\n\n#\n\n# ``MPI_Fortran_F77_HEADER_DIR``\n\n#   Location of the Fortran 77 header ``mpif.h``, if it exists.\n\n# ``MPI_Fortran_MODULE_DIR``\n\n#   Location of the ``mpi`` or ``mpi_f08`` modules, if available.\n\n#\n\n# For all languages the following variables are additionally considered:\n\n#\n\n# ``MPI_<lang>_ADDITIONAL_INCLUDE_DIRS``\n\n#   A :ref:`;-list <CMake Language Lists>` of paths needed in addition to the normal include directories.\n\n# ``MPI_<include_name>_INCLUDE_DIR``\n\n#   Path variables for include folders referred to by ``<include_name>``.\n\n# ``MPI_<lang>_ADDITIONAL_INCLUDE_VARS``\n\n#   A :ref:`;-list <CMake Language Lists>` of ``<include_name>`` that will be added to the include locations of ``<lang>``.\n\n#\n\n# The variable ``MPI_<lang>_LIBRARIES`` will be assembled from the following variables:\n\n#\n\n# ``MPI_<lib_name>_LIBRARY``\n\n#   The location of a library called ``<lib_name>`` for use with MPI.\n\n# ``MPI_<lang>_LIB_NAMES``\n\n#   A :ref:`;-list <CMake Language Lists>` of ``<lib_name>`` that will be added to the include locations of ``<lang>``.\n\n#\n\n# Usage of mpiexec\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# When using ``MPIEXEC_EXECUTABLE`` to execute MPI applications, you should typically\n\n# use all of the ``MPIEXEC_EXECUTABLE`` flags as follows:\n\n#\n\n# ::\n\n#\n\n#    ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} ${MPIEXEC_MAX_NUMPROCS}\n\n#      ${MPIEXEC_PREFLAGS} EXECUTABLE ${MPIEXEC_POSTFLAGS} ARGS\n\n#\n\n# where ``EXECUTABLE`` is the MPI program, and ``ARGS`` are the arguments to\n\n# pass to the MPI program.\n\n#\n\n# Advanced variables for using MPI\n\n# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# The module can perform some advanced feature detections upon explicit request.\n\n#\n\n# **Important notice:** The following checks cannot be performed without *executing* an MPI test program.\n\n# Consider the special considerations for the behavior of :command:`try_run` during cross compilation.\n\n# Moreover, running an MPI program can cause additional issues, like a firewall notification on some systems.\n\n# You should only enable these detections if you absolutely need the information.\n\n#\n\n# If the following variables are set to true, the respective search will be performed:\n\n#\n\n# ``MPI_DETERMINE_Fortran_CAPABILITIES``\n\n#   Determine for all available Fortran bindings what the values of ``MPI_SUBARRAYS_SUPPORTED`` and\n\n#   ``MPI_ASYNC_PROTECTS_NONBLOCKING`` are and make their values available as ``MPI_Fortran_<binding>_SUBARRAYS``\n\n#   and ``MPI_Fortran_<binding>_ASYNCPROT``, where ``<binding>`` is one of ``F77_HEADER``, ``F90_MODULE`` and\n\n#   ``F08_MODULE``.\n\n# ``MPI_DETERMINE_LIBRARY_VERSION``\n\n#   For each language, find the output of ``MPI_Get_library_version`` and make it available as ``MPI_<lang>_LIBRARY_VERSION``.\n\n#   This information is usually tied to the runtime component of an MPI implementation and might differ depending on ``<lang>``.\n\n#   Note that the return value is entirely implementation defined. This information might be used to identify\n\n#   the MPI vendor and for example pick the correct one of multiple third party binaries that matches the MPI vendor.\n\n#\n\n# Backward Compatibility\n\n# ^^^^^^^^^^^^^^^^^^^^^^\n\n#\n\n# For backward compatibility with older versions of FindMPI, these\n\n# variables are set, but deprecated:\n\n#\n\n# ::\n\n#\n\n#    MPI_COMPILER        MPI_LIBRARY        MPI_EXTRA_LIBRARY\n\n#    MPI_COMPILE_FLAGS   MPI_INCLUDE_PATH   MPI_LINK_FLAGS\n\n#    MPI_LIBRARIES\n\n#\n\n# In new projects, please use the ``MPI_<lang>_XXX`` equivalents.\n\n# Additionally, the following variables are deprecated:\n\n#\n\n# ``MPI_<lang>_COMPILE_FLAGS``\n\n#   Use ``MPI_<lang>_COMPILE_OPTIONS`` and ``MPI_<lang>_COMPILE_DEFINITIONS`` instead.\n\n# ``MPI_<lang>_INCLUDE_PATH``\n\n#   For consumption use ``MPI_<lang>_INCLUDE_DIRS`` and for specifying folders use ``MPI_<lang>_ADDITIONAL_INCLUDE_DIRS`` instead.\n\n# ``MPIEXEC``\n\n#   Use ``MPIEXEC_EXECUTABLE`` instead.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if IN_LIST\n",
        "Line" : 247,
        "CharPositionInLine" : 30
      },
      "3" : {
        "Text" : "# Generic compiler names\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# GNU compiler names\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Intel MPI compiler names on Windows\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Intel MPI compiler names\n",
        "Line" : 272,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Intel MPI compiler names for MSMPI\n",
        "Line" : 277,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Intel compiler names\n",
        "Line" : 281,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# PGI compiler names\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# XLC MPI Compiler names\n",
        "Line" : 292,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# XXX(cmake-3.9.0): Support CMake 3.8.0 `separate_arguments` signature.\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Prepend vendor-specific compiler wrappers to the list. If we don't know the compiler,\n\n# attempt all of them.\n\n# By attempting vendor-specific compiler names first, we should avoid situations where the compiler wrapper\n\n# stems from a proprietary MPI and won't know which compiler it's being used for. For instance, Intel MPI\n\n# controls its settings via the I_MPI_CC environment variables if the generic name is being used.\n\n# If we know which compiler we're working with, we can use the most specialized wrapper there is in order to\n\n# pick up the right settings for it.\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Names to try for mpiexec\n\n# Only mpiexec commands are guaranteed to behave as described in the standard,\n\n# mpirun commands are not covered by the standard in any way whatsoever.\n\n# lamexec is the executable for LAM/MPI, srun is for SLURM or Open MPI with SLURM support.\n\n# srun -n X <executable> is however a valid command, so it behaves 'like' mpiexec.\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Some compiler wrappers will yield spurious zero return values, for example\n\n# Intel MPI tolerates unknown arguments and if the MPI wrappers loads a shared\n\n# library that has invalid or missing version information there would be warning\n\n# messages emitted by ld.so in the compiler output. In either case, we'll treat\n\n# the output as invalid.\n",
        "Line" : 355,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Ensure that no error output might be passed upwards.\n",
        "Line" : 363,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Check whether the -showme:compile option works. This indicates that we have either Open MPI\n\n# or a newer version of LAM/MPI, and implies that -showme:link will also work.\n\n# Open MPI also supports -show, but separates linker and compiler information\n",
        "Line" : 382,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# MPICH and MVAPICH offer -compile-info and -link-info.\n\n# For modern versions, both do the same as -show. However, for old versions, they do differ\n\n# when called for mpicxx and mpif90 and it's necessary to use them over -show in order to find the\n\n# removed MPI C++ bindings.\n",
        "Line" : 394,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# MPICH, MVAPICH2 and Intel MPI just use \"-show\". Open MPI also offers this, but the\n\n# -showme commands are more specialized.\n",
        "Line" : 410,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Older versions of LAM/MPI have \"-showme\". Open MPI also supports this.\n\n# Unknown to MPICH, MVAPICH and Intel MPI.\n",
        "Line" : 416,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Cannot interrogate this compiler, so exit.\n",
        "Line" : 423,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# We have our command lines, but we might need to copy MPI_COMPILE_CMDLINE\n\n# into MPI_LINK_CMDLINE, if we didn't find the link line.\n",
        "Line" : 429,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# At this point, we obtained some output from a compiler wrapper that works.\n\n# We'll now try to parse it into variables with meaning to us.\n",
        "Line" : 435,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Some MPICH-1 and MVAPICH-1 versions return a three command answer for Fortran, consisting\n\n# out of a symlink command for mpif.h, the actual compiler command and a deletion of the\n\n# created symlink. We need to detect that case, remember the include path and drop the\n\n# symlink/deletion operation to obtain the link/compile lines we'd usually expect.\n",
        "Line" : 438,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# The Intel MPI wrapper on Linux will emit some objcopy commands after its compile command\n\n# if -static_mpi was passed to the wrapper. To avoid spurious matches, we need to drop these lines.\n",
        "Line" : 451,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Extract compile options from the compile command line.\n",
        "Line" : 458,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Ignore -fstack-protector directives: These occur on MPICH and MVAPICH when the libraries\n\n# themselves were built with this flag. However, this flag is unrelated to using MPI, and\n\n# we won't match the accompanying --param-ssp-size and -Wp,-D_FORTIFY_SOURCE flags and therefore\n\n# produce inconsistent results with the regularly flags.\n\n# Similarly, aliasing flags do not belong into our flag array.\n",
        "Line" : 463,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Same deal, with the definitions. We also treat arguments passed to the preprocessor directly.\n",
        "Line" : 473,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Extract include paths from compile command line\n",
        "Line" : 484,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# If extracting failed to work, we'll try using -showme:incdirs.\n",
        "Line" : 487,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Extract linker paths from the link command line\n",
        "Line" : 502,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# If extracting failed to work, we'll try using -showme:libdirs.\n",
        "Line" : 505,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Extract linker flags from the link command line\n",
        "Line" : 520,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# MPI might be marked to build with non-executable stacks but this should not propagate.\n",
        "Line" : 525,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Extract the set of libraries to link against from the link command\n\n# line\n",
        "Line" : 535,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# A compiler wrapper on Windows will just have the name of the\n\n# library to link on its link line, potentially with a full path\n",
        "Line" : 551,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# On UNIX platforms, archive libraries can be given with full path.\n",
        "Line" : 565,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# An MPI compiler wrapper could have its MPI libraries in the implictly\n\n# linked directories of the compiler itself.\n",
        "Line" : 579,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# Determine full path names for all of the libraries that one needs\n\n# to link against in an MPI program\n",
        "Line" : 585,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# Deal with the libraries given with full path next\n",
        "Line" : 599,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# MPI might require pthread to work. The above mechanism wouldn't detect it, but we need to\n\n# link it in that case. -lpthread is covered by the normal library treatment on the other hand.\n",
        "Line" : 617,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# If we found MPI, set up all of the appropriate cache entries\n",
        "Line" : 638,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# Currently only MSMPI and MPICH2 on Windows are supported, so we can skip this search if we're not targeting that.\n",
        "Line" : 659,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# MSMPI\n",
        "Line" : 661,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# The environment variables MSMPI_INC and MSMPILIB32/64 are the only ways of locating the MSMPI_SDK,\n\n# which is installed separately from the runtime. Thus it's possible to have mpiexec but not MPI headers\n\n# or import libraries and vice versa.\n",
        "Line" : 663,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# We first attempt to locate the msmpi.lib. Should be find it, we'll assume that the MPI present is indeed\n\n# Microsoft MPI.\n",
        "Line" : 667,
        "CharPositionInLine" : 6
      },
      "46" : {
        "Text" : "# Next, we attempt to locate the MPI header. Note that for Fortran we know that mpif.h is a way\n\n# MSMPI can be used and therefore that header has to be present.\n",
        "Line" : 684,
        "CharPositionInLine" : 8
      },
      "47" : {
        "Text" : "# For MSMPI, one can compile the MPI module by building the mpi.f90 shipped with the MSMPI SDK,\n\n# thus it might be present or provided by the user. Figuring out which is supported is done later on.\n\n# The PGI Fortran compiler for instance ships a prebuilt set of modules in its own include folder.\n\n# Should a user be employing PGI or have built its own set and provided it via cache variables, the\n\n# splitting routine would have located the module files.\n",
        "Line" : 692,
        "CharPositionInLine" : 8
      },
      "48" : {
        "Text" : "# For C and C++, we're done here (MSMPI does not ship the MPI-2 C++ bindings) - however, for Fortran\n\n# we need some extra library to glue Fortran support together:\n\n# MSMPI ships 2-4 Fortran libraries, each for different Fortran compiler behaviors. The library names\n\n# ending with a c are using the cdecl calling convention, whereas those ending with an s are for Fortran\n\n# implementations using stdcall. Therefore, the 64-bit MSMPI only ships those ending in 'c', whereas the 32-bit\n\n# has both variants available.\n\n# The second difference is the last but one letter, if it's an e(nd), the length of a string argument is\n\n# passed by the Fortran compiler after all other arguments on the parameter list, if it's an m(ixed),\n\n# it's passed immediately after the string address.\n",
        "Line" : 698,
        "CharPositionInLine" : 8
      },
      "49" : {
        "Text" : "# To summarize:\n\n#   - msmpifec: CHARACTER length passed after the parameter list and using cdecl calling convention\n\n#   - msmpifmc: CHARACTER length passed directly after string address and using cdecl calling convention\n\n#   - msmpifes: CHARACTER length passed after the parameter list and using stdcall calling convention\n\n#   - msmpifms: CHARACTER length passed directly after string address and using stdcall calling convention\n\n# 32-bit MSMPI ships all four libraries, 64-bit MSMPI ships only the first two.\n",
        "Line" : 708,
        "CharPositionInLine" : 8
      },
      "50" : {
        "Text" : "# As is, Intel Fortran and PGI Fortran both use the 'ec' variant of the calling convention, whereas\n\n# the old Compaq Visual Fortran compiler defaulted to the 'ms' version. It's possible to make Intel Fortran\n\n# use the CVF calling convention using /iface:cvf, but we assume - and this is also assumed in FortranCInterface -\n\n# this isn't the case. It's also possible to make CVF use the 'ec' variant, using /iface=(cref,nomixed_str_len_arg).\n",
        "Line" : 715,
        "CharPositionInLine" : 8
      },
      "51" : {
        "Text" : "# Our strategy is now to locate all libraries, but enter msmpifec into the LIB_NAMES array.\n\n# Should this not be adequate it's a straightforward way for a user to change the LIB_NAMES array and\n\n# have his library found. Still, this should not be necessary outside of exceptional cases, as reasoned.\n",
        "Line" : 720,
        "CharPositionInLine" : 8
      },
      "52" : {
        "Text" : "# At this point we're *not* done. MSMPI requires an additional include file for Fortran giving the value\n\n# of MPI_AINT. This file is called mpifptr.h located in the x64 and x86 subfolders, respectively.\n",
        "Line" : 741,
        "CharPositionInLine" : 10
      },
      "53" : {
        "Text" : "# At this point there's not many MPIs that we could still consider.\n\n# OpenMPI 1.6.x and below supported Windows, but these ship compiler wrappers that still work.\n\n# The only other relevant MPI implementation without a wrapper is MPICH2, which had Windows support in 1.4.1p1 and older.\n",
        "Line" : 761,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# All of C, C++ and Fortran will need mpi.lib, so we'll look for this first\n",
        "Line" : 771,
        "CharPositionInLine" : 6
      },
      "55" : {
        "Text" : "# If we found mpi.lib, we detect the rest of MPICH2\n",
        "Line" : 776,
        "CharPositionInLine" : 6
      },
      "56" : {
        "Text" : "# If MPI-2 C++ bindings are requested, we need to locate cxx.lib as well.\n\n# Otherwise, MPICH_SKIP_MPICXX will be defined and these bindings aren't needed.\n",
        "Line" : 779,
        "CharPositionInLine" : 8
      },
      "57" : {
        "Text" : "# For Fortran, MPICH2 provides three different libraries:\n\n#   fmpich2.lib which uses uppercase symbols and cdecl,\n\n#   fmpich2s.lib which uses uppercase symbols and stdcall (32-bit only),\n\n#   fmpich2g.lib which uses lowercase symbols with double underscores and cdecl.\n\n# fmpich2s.lib would be useful for Compaq Visual Fortran, fmpich2g.lib has to be used with GNU g77 and is also\n\n# provided in the form of an .a archive for MinGW and Cygwin. From our perspective, fmpich2.lib is the only one\n\n# we need to try, and if it doesn't work with the given Fortran compiler we'd find out later on during validation\n",
        "Line" : 787,
        "CharPositionInLine" : 8
      },
      "58" : {
        "Text" : "# For MPICH2, the include folder would be in ../include relative to the library folder.\n",
        "Line" : 814,
        "CharPositionInLine" : 10
      },
      "59" : {
        "Text" : "# To disable the C++ bindings, we need to pass some definitions since the mpi.h header has to deal with both C and C++\n\n# bindings in MPI-2.\n",
        "Line" : 832,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "# MPICH_SKIP_MPICXX is being used in MPICH and derivatives like MVAPICH or Intel MPI\n\n# OMPI_SKIP_MPICXX is being used in Open MPI\n\n# _MPICC_H is being used for IBM Platform MPI\n",
        "Line" : 835,
        "CharPositionInLine" : 6
      },
      "61" : {
        "Text" : "# Only for libraries do we need to check whether the compiler's linking stage is separate.\n",
        "Line" : 846,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# Fortran\n",
        "Line" : 863,
        "CharPositionInLine" : 11
      },
      "63" : {
        "Text" : "# Backwards compatibility: Search INCLUDE_PATH if given.\n",
        "Line" : 883,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "# We try to find the headers/modules among those paths (and system paths)\n\n# For C/C++, we just need to have a look for mpi.h.\n",
        "Line" : 888,
        "CharPositionInLine" : 2
      },
      "65" : {
        "Text" : "# Fortran is more complicated here: An implementation could provide\n\n# any of the Fortran 77/90/2008 APIs for MPI. For example, MSMPI\n\n# only provides Fortran 77 and - if mpi.f90 is built - potentially\n\n# a Fortran 90 module.\n",
        "Line" : 898,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# Remove duplicates and default system directories from the list.\n",
        "Line" : 918,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "# If the compiler links MPI implicitly, no libraries will be found as they're contained within\n\n# CMAKE_<LANG>_IMPLICIT_LINK_LIBRARIES already.\n",
        "Line" : 940,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "# Given the new design of FindMPI, INCLUDE_DIRS will always be located, even under implicit linking.\n",
        "Line" : 945,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# F77 header\n",
        "Line" : 962,
        "CharPositionInLine" : 11
      },
      "70" : {
        "Text" : "# C\n",
        "Line" : 973,
        "CharPositionInLine" : 9
      },
      "71" : {
        "Text" : "# For Fortran we may have by the MPI-3 standard an implementation that provides:\n\n#   - the mpi_f08 module\n\n#   - *both*, the mpi module and 'mpif.h'\n\n# Since older MPI standards (MPI-1) did not define anything but 'mpif.h', we need to check all three individually.\n",
        "Line" : 993,
        "CharPositionInLine" : 2
      },
      "72" : {
        "Text" : "# MPI-1 versions had no MPI_INTGER_KIND defined, so we need to try without it.\n\n# However, MPI-1 also did not define the Fortran 90 and 08 modules, so we only try the F77 header.\n",
        "Line" : 1014,
        "CharPositionInLine" : 6
      },
      "73" : {
        "Text" : "# If 'test_mpi' built correctly, we've found valid MPI settings. There might not be MPI-2 C++ support, but there can't\n\n# be MPI-2 C++ support without the C bindings being present, so checking for them is sufficient.\n",
        "Line" : 1026,
        "CharPositionInLine" : 6
      },
      "74" : {
        "Text" : "# Some systems install various MPI implementations in separate folders in some MPI prefix\n\n# This macro enumerates all such subfolders and adds them to the list of hints that will be searched.\n",
        "Line" : 1033,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# SUSE Linux Enterprise Server stores its MPI implementations under /usr/lib64/mpi/gcc/<name>\n\n# We enumerate the subfolders and append each as a prefix\n",
        "Line" : 1048,
        "CharPositionInLine" : 2
      },
      "76" : {
        "Text" : "# MSMPI stores its runtime in a special folder, this adds the possible locations to the hints.\n",
        "Line" : 1052,
        "CharPositionInLine" : 2
      },
      "77" : {
        "Text" : "# FreeBSD ships mpich under the normal system paths - but available openmpi implementations\n\n# will be found in /usr/local/mpi/<name>\n",
        "Line" : 1055,
        "CharPositionInLine" : 2
      },
      "78" : {
        "Text" : "# Most MPI distributions have some form of mpiexec or mpirun which gives us something we can look for.\n\n# The MPI standard does not mandate the existence of either, but instead only makes requirements if a distribution\n\n# ships an mpiexec program (mpirun executables are not regulated by the standard).\n",
        "Line" : 1060,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# call get_filename_component twice to remove mpiexec and the directory it exists in (typically bin).\n\n# This gives us a fairly reliable base directory to search for /bin /lib and /include from.\n",
        "Line" : 1069,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# According to the MPI standard, section 8.8 -n is a guaranteed, and the only guaranteed way to\n\n# launch an MPI process using mpiexec if such a program exists.\n",
        "Line" : 1074,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Set the number of processes to the physical processor count\n",
        "Line" : 1080,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "#=============================================================================\n\n# Backward compatibility input hacks.  Propagate the FindMPI hints to C and\n\n# CXX if the respective new versions are not defined.  Translate the old\n\n# MPI_LIBRARY and MPI_EXTRA_LIBRARY to respective MPI_${LANG}_LIBRARIES.\n\n#\n\n# Once we find the new variables, we translate them back into their old\n\n# equivalents below.\n",
        "Line" : 1086,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Old input variables.\n",
        "Line" : 1095,
        "CharPositionInLine" : 4
      },
      "84" : {
        "Text" : "# Set new vars based on their old equivalents, if the new versions are not already set.\n",
        "Line" : 1098,
        "CharPositionInLine" : 4
      },
      "85" : {
        "Text" : "# Chop the old compile flags into options and definitions\n",
        "Line" : 1105,
        "CharPositionInLine" : 4
      },
      "86" : {
        "Text" : "# If a list of libraries was given, we'll split it into new-style cache variables\n",
        "Line" : 1121,
        "CharPositionInLine" : 4
      },
      "87" : {
        "Text" : "#=============================================================================\n",
        "Line" : 1141,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# If the user specified a library name we assume they prefer that library over a wrapper. If not, they can disable skipping manually.\n",
        "Line" : 1149,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# This loop finds the compilers and sends them off for interrogation.\n",
        "Line" : 1154,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# Should the imported targets be empty, we effectively try whether the compiler supports MPI on its own, which is the case on e.g.\n\n# Cray PrgEnv.\n",
        "Line" : 1178,
        "CharPositionInLine" : 8
      },
      "91" : {
        "Text" : "# If the compiler can build MPI code on its own, it functions as an MPI compiler and we'll set the variable to point to it.\n",
        "Line" : 1183,
        "CharPositionInLine" : 8
      },
      "92" : {
        "Text" : "# If the user supplies a compiler *name* instead of an absolute path, assume that we need to find THAT compiler.\n",
        "Line" : 1197,
        "CharPositionInLine" : 12
      },
      "93" : {
        "Text" : "# Get rid of our default list of names and just search for the name the user wants.\n",
        "Line" : 1199,
        "CharPositionInLine" : 14
      },
      "94" : {
        "Text" : "# If the user specifies a compiler, we don't want to try to search libraries either.\n",
        "Line" : 1203,
        "CharPositionInLine" : 12
      },
      "95" : {
        "Text" : "# If we have an MPI base directory, we'll try all compiler names in that one first.\n\n# This should prevent mixing different MPI environments\n",
        "Line" : 1207,
        "CharPositionInLine" : 10
      },
      "96" : {
        "Text" : "# If the base directory did not help (for example because the mpiexec isn't in the same directory as the compilers),\n\n# we shall try searching in the default paths.\n",
        "Line" : 1219,
        "CharPositionInLine" : 10
      },
      "97" : {
        "Text" : "# If we haven't made the implicit compiler test yet, perform it now.\n",
        "Line" : 1230,
        "CharPositionInLine" : 12
      },
      "98" : {
        "Text" : "# Should the MPI compiler not work implicitly for MPI, still interrogate it.\n\n# Otherwise, MPI compilers for which CMake has separate linking stages, e.g. Intel MPI on Windows where link.exe is being used\n\n# directly during linkage instead of CMAKE_<LANG>_COMPILER will not work.\n",
        "Line" : 1236,
        "CharPositionInLine" : 12
      },
      "99" : {
        "Text" : "# For C++, we may use the settings for C. Should a given compiler wrapper for C++ not exist, but one for C does, we copy over the\n\n# settings for C. An MPI distribution that is in this situation would be IBM Platform MPI.\n",
        "Line" : 1251,
        "CharPositionInLine" : 10
      },
      "100" : {
        "Text" : "# We always create imported targets even if they're empty\n",
        "Line" : 1271,
        "CharPositionInLine" : 4
      },
      "101" : {
        "Text" : "# Next, we'll initialize the MPI variables that have not been previously set.\n",
        "Line" : 1278,
        "CharPositionInLine" : 4
      },
      "102" : {
        "Text" : "# If we've found MPI, then we'll perform additional analysis: Determine the MPI version, MPI library version, supported\n\n# MPI APIs (i.e. MPI-2 C++ bindings). For Fortran we also need to find specific parameters if we're under MPI-3.\n",
        "Line" : 1289,
        "CharPositionInLine" : 4
      },
      "103" : {
        "Text" : "# At this point, we know the bindings present but not the MPI version or anything else.\n",
        "Line" : 1305,
        "CharPositionInLine" : 6
      },
      "104" : {
        "Text" : "# For Fortran, we'll want to use the most modern MPI binding to test capabilities other than the\n\n# Fortran parameters, since those depend on the method of consumption.\n\n# For C++, we can always use the C bindings, and should do so, since the C++ bindings do not exist in MPI-3\n\n# whereas the C bindings do, and the C++ bindings never offered any feature advantage over their C counterparts.\n",
        "Line" : 1312,
        "CharPositionInLine" : 6
      },
      "105" : {
        "Text" : "# Another difference between C and Fortran is that we can't use the preprocessor to determine whether MPI_VERSION\n\n# and MPI_SUBVERSION are provided. These defines did not exist in MPI 1.0 and 1.1 and therefore might not\n\n# exist. For C/C++, test_mpi.c will handle the MPI_VERSION extraction, but for Fortran, we need mpiver.f90.\n",
        "Line" : 1325,
        "CharPositionInLine" : 8
      },
      "106" : {
        "Text" : "# Finally, we want to find out which capabilities a given interface supports, compare the MPI-3 standard.\n\n# This is determined by interface specific parameters MPI_SUBARRAYS_SUPPORTED and MPI_ASYNC_PROTECTS_NONBLOCKING\n\n# and might vary between the different methods of consumption.\n",
        "Line" : 1340,
        "CharPositionInLine" : 8
      },
      "107" : {
        "Text" : "# By the MPI-2 standard, MPI_VERSION and MPI_SUBVERSION are valid for both C and C++ bindings.\n",
        "Line" : 1368,
        "CharPositionInLine" : 8
      },
      "108" : {
        "Text" : "# At this point, we have dealt with determining the MPI version and parameters for each Fortran method available.\n\n# The one remaining issue is to determine which MPI library is installed.\n\n# Determining the version and vendor of the MPI library is only possible via MPI_Get_library_version() at runtime,\n\n# and therefore we cannot do this while cross-compiling (a user may still define MPI_<lang>_LIBRARY_VERSION_STRING\n\n# themselves and we'll attempt splitting it, which is equivalent to provide the try_run output).\n\n# It's also worth noting that the installed version string can depend on the language, or on the system the binary\n\n# runs on if MPI is not statically linked.\n",
        "Line" : 1381,
        "CharPositionInLine" : 6
      },
      "109" : {
        "Text" : "# For Fortran we only need one of the module or header directories to have *some* support for MPI.\n",
        "Line" : 1411,
        "CharPositionInLine" : 8
      },
      "110" : {
        "Text" : "# Append the works variable now. If the settings did not work, this will show up properly.\n",
        "Line" : 1426,
        "CharPositionInLine" : 6
      },
      "111" : {
        "Text" : "# If the compiler worked implicitly, use its path as output.\n\n# Should the compiler variable be set, we also require it to work.\n",
        "Line" : 1429,
        "CharPositionInLine" : 6
      },
      "112" : {
        "Text" : "#=============================================================================\n\n# More backward compatibility stuff\n",
        "Line" : 1463,
        "CharPositionInLine" : 0
      },
      "113" : {
        "Text" : "# For compatibility reasons, we also define MPIEXEC\n",
        "Line" : 1466,
        "CharPositionInLine" : 0
      },
      "114" : {
        "Text" : "# Copy over MPI_<LANG>_INCLUDE_PATH from the assembled INCLUDE_DIRS.\n",
        "Line" : 1469,
        "CharPositionInLine" : 0
      },
      "115" : {
        "Text" : "# Bare MPI sans ${LANG} vars are set to CXX then C, depending on what was found.\n\n# This mimics the behavior of the old language-oblivious FindMPI.\n",
        "Line" : 1485,
        "CharPositionInLine" : 0
      },
      "116" : {
        "Text" : "# Chop MPI_LIBRARIES into the old-style MPI_LIBRARY and MPI_EXTRA_LIBRARY, and set them in cache.\n",
        "Line" : 1498,
        "CharPositionInLine" : 0
      },
      "117" : {
        "Text" : "#=============================================================================\n",
        "Line" : 1517,
        "CharPositionInLine" : 0
      },
      "118" : {
        "Text" : "# unset these vars to cleanup namespace\n",
        "Line" : 1519,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 119
    },
    "CMake/patches/3.11/CMakePackageConfigHelpers.cmake" : {
      "ObjectId" : "22fc95366b3fa48816e4a7e35bcfe3fbd269ff74",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nCMakePackageConfigHelpers\n-------------------------\n\nHelpers functions for creating config files that can be included by other\nprojects to find and use a package.\n\nAdds the :command:`configure_package_config_file()` and\n:command:`write_basic_package_version_file()` commands.\n\nGenerating a Package Configuration File\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. command:: configure_package_config_file\n\n Create a config file for a project::\n\n   configure_package_config_file(<input> <output>\n     INSTALL_DESTINATION <path>\n     [PATH_VARS <var1> <var2> ... <varN>]\n     [NO_SET_AND_CHECK_MACRO]\n     [NO_CHECK_REQUIRED_COMPONENTS_MACRO]\n     [INSTALL_PREFIX <path>]\n     )\n\n``configure_package_config_file()`` should be used instead of the plain\n:command:`configure_file()` command when creating the ``<PackageName>Config.cmake``\nor ``<PackageName>-config.cmake`` file for installing a project or library.\nIt helps making the resulting package relocatable by avoiding hardcoded paths\nin the installed ``Config.cmake`` file.\n\nIn a ``FooConfig.cmake`` file there may be code like this to make the install\ndestinations know to the using project:\n\n.. code-block:: cmake\n\n   set(FOO_INCLUDE_DIR   \"@CMAKE_INSTALL_FULL_INCLUDEDIR@\" )\n   set(FOO_DATA_DIR   \"@CMAKE_INSTALL_PREFIX@/@RELATIVE_DATA_INSTALL_DIR@\" )\n   set(FOO_ICONS_DIR   \"@CMAKE_INSTALL_PREFIX@/share/icons\" )\n   #...logic to determine installedPrefix from the own location...\n   set(FOO_CONFIG_DIR  \"${installedPrefix}/@CONFIG_INSTALL_DIR@\" )\n\nAll 4 options shown above are not sufficient, since the first 3 hardcode the\nabsolute directory locations, and the 4th case works only if the logic to\ndetermine the ``installedPrefix`` is correct, and if ``CONFIG_INSTALL_DIR``\ncontains a relative path, which in general cannot be guaranteed.  This has the\neffect that the resulting ``FooConfig.cmake`` file would work poorly under\nWindows and OSX, where users are used to choose the install location of a\nbinary package at install time, independent from how\n:variable:`CMAKE_INSTALL_PREFIX` was set at build/cmake time.\n\nUsing ``configure_package_config_file`` helps.  If used correctly, it makes\nthe resulting ``FooConfig.cmake`` file relocatable.  Usage:\n\n1. write a ``FooConfig.cmake.in`` file as you are used to\n2. insert a line containing only the string ``@PACKAGE_INIT@``\n3. instead of ``set(FOO_DIR \"@SOME_INSTALL_DIR@\")``, use\n   ``set(FOO_DIR \"@PACKAGE_SOME_INSTALL_DIR@\")`` (this must be after the\n   ``@PACKAGE_INIT@`` line)\n4. instead of using the normal :command:`configure_file()`, use\n   ``configure_package_config_file()``\n\n\n\nThe ``<input>`` and ``<output>`` arguments are the input and output file, the\nsame way as in :command:`configure_file()`.\n\nThe ``<path>`` given to ``INSTALL_DESTINATION`` must be the destination where\nthe ``FooConfig.cmake`` file will be installed to.  This path can either be\nabsolute, or relative to the ``INSTALL_PREFIX`` path.\n\nThe variables ``<var1>`` to ``<varN>`` given as ``PATH_VARS`` are the\nvariables which contain install destinations.  For each of them the macro will\ncreate a helper variable ``PACKAGE_<var...>``.  These helper variables must be\nused in the ``FooConfig.cmake.in`` file for setting the installed location.\nThey are calculated by ``configure_package_config_file`` so that they are\nalways relative to the installed location of the package.  This works both for\nrelative and also for absolute locations.  For absolute locations it works\nonly if the absolute location is a subdirectory of ``INSTALL_PREFIX``.\n\nIf the ``INSTALL_PREFIX`` argument is passed, this is used as base path to\ncalculate all the relative paths.  The ``<path>`` argument must be an absolute\npath.  If this argument is not passed, the :variable:`CMAKE_INSTALL_PREFIX`\nvariable will be used instead.  The default value is good when generating a\nFooConfig.cmake file to use your package from the install tree.  When\ngenerating a FooConfig.cmake file to use your package from the build tree this\noption should be used.\n\nBy default ``configure_package_config_file`` also generates two helper macros,\n``set_and_check()`` and ``check_required_components()`` into the\n``FooConfig.cmake`` file.\n\n``set_and_check()`` should be used instead of the normal ``set()`` command for\nsetting directories and file locations.  Additionally to setting the variable\nit also checks that the referenced file or directory actually exists and fails\nwith a ``FATAL_ERROR`` otherwise.  This makes sure that the created\n``FooConfig.cmake`` file does not contain wrong references.\nWhen using the ``NO_SET_AND_CHECK_MACRO``, this macro is not generated\ninto the ``FooConfig.cmake`` file.\n\n``check_required_components(<PackageName>)`` should be called at the end of\nthe ``FooConfig.cmake`` file. This macro checks whether all requested,\nnon-optional components have been found, and if this is not the case, sets\nthe ``Foo_FOUND`` variable to ``FALSE``, so that the package is considered to\nbe not found.  It does that by testing the ``Foo_<Component>_FOUND``\nvariables for all requested required components.  This macro should be\ncalled even if the package doesn't provide any components to make sure\nusers are not specifying components erroneously.  When using the\n``NO_CHECK_REQUIRED_COMPONENTS_MACRO`` option, this macro is not generated\ninto the ``FooConfig.cmake`` file.\n\nFor an example see below the documentation for\n:command:`write_basic_package_version_file()`.\n\nGenerating a Package Version File\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. command:: write_basic_package_version_file\n\n Create a version file for a project::\n\n   write_basic_package_version_file(<filename>\n     [VERSION <major.minor.patch>]\n     COMPATIBILITY <AnyNewerVersion|SameMajorVersion|SameMinorVersion|ExactVersion>\n     [ARCH_INDEPENDENT] )\n\n\nWrites a file for use as ``<PackageName>ConfigVersion.cmake`` file to\n``<filename>``.  See the documentation of :command:`find_package()` for\ndetails on this.\n\n``<filename>`` is the output filename, it should be in the build tree.\n``<major.minor.patch>`` is the version number of the project to be installed.\n\nIf no ``VERSION`` is given, the :variable:`PROJECT_VERSION` variable is used.\nIf this hasn't been set, it errors out.\n\nThe ``COMPATIBILITY`` mode ``AnyNewerVersion`` means that the installed\npackage version will be considered compatible if it is newer or exactly the\nsame as the requested version.  This mode should be used for packages which\nare fully backward compatible, also across major versions.\nIf ``SameMajorVersion`` is used instead, then the behaviour differs from\n``AnyNewerVersion`` in that the major version number must be the same as\nrequested, e.g.  version 2.0 will not be considered compatible if 1.0 is\nrequested.  This mode should be used for packages which guarantee backward\ncompatibility within the same major version.\nIf ``SameMinorVersion`` is used, the behaviour is the same as\n``SameMajorVersion``, but both major and minor version must be the same as\nrequested, e.g version 0.2 will not be compatible if 0.1 is requested.\nIf ``ExactVersion`` is used, then the package is only considered compatible if\nthe requested version matches exactly its own version number (not considering\nthe tweak version).  For example, version 1.2.3 of a package is only\nconsidered compatible to requested version 1.2.3.  This mode is for packages\nwithout compatibility guarantees.\nIf your project has more elaborated version matching rules, you will need to\nwrite your own custom ``ConfigVersion.cmake`` file instead of using this\nmacro.\n\nIf ``ARCH_INDEPENDENT`` is given, the installed package version will be\nconsidered compatible even if it was built for a different architecture than\nthe requested architecture.  Otherwise, an architecture check will be performed,\nand the package will be considered compatible only if the architecture matches\nexactly.  For example, if the package is built for a 32-bit architecture, the\npackage is only considered compatible if it is used on a 32-bit architecture,\nunless ``ARCH_INDEPENDENT`` is given, in which case the package is considered\ncompatible on any architecture.\n\n.. note:: ``ARCH_INDEPENDENT`` is intended for header-only libraries or similar\n   packages with no binaries.\n\nInternally, this macro executes :command:`configure_file()` to create the\nresulting version file.  Depending on the ``COMPATIBILITY``, the corresponding\n``BasicConfigVersion-<COMPATIBILITY>.cmake.in`` file is used.\nPlease note that these files are internal to CMake and you should not call\n:command:`configure_file()` on them yourself, but they can be used as starting\npoint to create more sophisticted custom ``ConfigVersion.cmake`` files.\n\nExample Generating Package Files\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nExample using both :command:`configure_package_config_file` and\n``write_basic_package_version_file()``:\n\n``CMakeLists.txt``:\n\n.. code-block:: cmake\n\n   set(INCLUDE_INSTALL_DIR include/ ... CACHE )\n   set(LIB_INSTALL_DIR lib/ ... CACHE )\n   set(SYSCONFIG_INSTALL_DIR etc/foo/ ... CACHE )\n   #...\n   include(CMakePackageConfigHelpers)\n   configure_package_config_file(FooConfig.cmake.in\n     ${CMAKE_CURRENT_BINARY_DIR}/FooConfig.cmake\n     INSTALL_DESTINATION ${LIB_INSTALL_DIR}/Foo/cmake\n     PATH_VARS INCLUDE_INSTALL_DIR SYSCONFIG_INSTALL_DIR)\n   write_basic_package_version_file(\n     ${CMAKE_CURRENT_BINARY_DIR}/FooConfigVersion.cmake\n     VERSION 1.2.3\n     COMPATIBILITY SameMajorVersion )\n   install(FILES ${CMAKE_CURRENT_BINARY_DIR}/FooConfig.cmake\n                 ${CMAKE_CURRENT_BINARY_DIR}/FooConfigVersion.cmake\n           DESTINATION ${LIB_INSTALL_DIR}/Foo/cmake )\n\n``FooConfig.cmake.in``:\n\n::\n\n   set(FOO_VERSION x.y.z)\n   ...\n   @PACKAGE_INIT@\n   ...\n   set_and_check(FOO_INCLUDE_DIR \"@PACKAGE_INCLUDE_INSTALL_DIR@\")\n   set_and_check(FOO_SYSCONFIG_DIR \"@PACKAGE_SYSCONFIG_INSTALL_DIR@\")\n\n   check_required_components(Foo)\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Handle \"/usr move\" symlinks created by some Linux distros.\n",
        "Line" : 287,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "CMake/patches/3.11/WriteBasicConfigVersionFile.cmake" : {
      "ObjectId" : "4d7ff3d25738da67851f67412387d3cb80155447",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nWriteBasicConfigVersionFile\n---------------------------\n\n.. deprecated:: 3.0\n\n  Use the identical command :command:`write_basic_package_version_file()`\n  from module :module:`CMakePackageConfigHelpers`.\n\n::\n\n  WRITE_BASIC_CONFIG_VERSION_FILE( filename\n    [VERSION major.minor.patch]\n    COMPATIBILITY (AnyNewerVersion|SameMajorVersion|SameMinorVersion|ExactVersion)\n    [ARCH_INDEPENDENT]\n    )\n\n\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/patches/3.13/FindPython/Support.cmake" : {
      "ObjectId" : "f1ee341a9512dc7150763afdcd9d1b4596f7e718",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# This file is a \"template\" file used by various FindPython modules.\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Initial configuration\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# helper commands\n\n#\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# executable found must have a specific version\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# interpreter not usable or has wrong major version\n",
        "Line" : 98,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# executable found do not have version in name\n\n# ensure major version is OK\n",
        "Line" : 104,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# interpreter not usable or has wrong major version\n",
        "Line" : 113,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# In this case, interpreter must have same architecture as environment\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# interpreter not usable or has wrong architecture\n",
        "Line" : 130,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# retrieve python environment version from compiler\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Compiler not usable or has wrong major version\n",
        "Line" : 159,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# look at runtime part on systems supporting it\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# MSYS has a special syntax for runtime libraries\n",
        "Line" : 172,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# If major version is specified, it must be the same as internal major version\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# handle components\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Set versions to search\n\n## default: search any version\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# add all compatible versions\n",
        "Line" : 224,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Python and Anaconda distributions: define which architectures can be used\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# In this case, search only for 64bit or 32bit\n",
        "Line" : 235,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# architecture unknown, search for both 64bit and 32bit\n",
        "Line" : 239,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# IronPython support\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# In this case, search only for 64bit or 32bit\n",
        "Line" : 246,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# architecture unknown, search for natural interpreter\n",
        "Line" : 250,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Apple frameworks handling\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Save CMAKE_FIND_APPBUNDLE\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# To avoid app bundle lookup\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Save CMAKE_FIND_FRAMEWORK\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# To avoid framework lookup\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Windows Registry handling\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# first step, search for the interpreter\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# look-up for various versions and locations\n",
        "Line" : 309,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Apple frameworks handling\n",
        "Line" : 315,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# Windows registry\n",
        "Line" : 329,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# try using HINTS\n",
        "Line" : 354,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# try using standard paths.\n",
        "Line" : 365,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# Apple frameworks handling\n",
        "Line" : 380,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# Windows registry\n",
        "Line" : 391,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# No specific version found. Retry with generic names\n\n# try using HINTS\n",
        "Line" : 421,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# try using standard paths.\n\n# NAMES_PER_DIR is not defined on purpose to have a chance to find\n\n# expected version.\n\n# For example, typical systems have 'python' for version 2.* and 'python3'\n\n# for version 3.*. So looking for names per dir will find, potentially,\n\n# systematically 'python' (i.e. version 2) even if version 3 is searched.\n",
        "Line" : 432,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# retrieve exact version of executable found\n",
        "Line" : 446,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Interpreter is not usable\n",
        "Line" : 460,
        "CharPositionInLine" : 6
      },
      "42" : {
        "Text" : "# Use interpreter version for future searches to ensure consistency\n",
        "Line" : 469,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# determine interpreter architecture\n",
        "Line" : 475,
        "CharPositionInLine" : 6
      },
      "44" : {
        "Text" : "# retrieve interpreter identity\n",
        "Line" : 491,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# try to get a more precise ID\n",
        "Line" : 504,
        "CharPositionInLine" : 10
      },
      "46" : {
        "Text" : "# retrieve various package installation directories\n",
        "Line" : 521,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# second step, search for compiler (IronPython)\n",
        "Line" : 543,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# IronPython specific artifacts\n\n# If IronPython interpreter is found, use its path\n",
        "Line" : 550,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# try using root dir and registry\n",
        "Line" : 557,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# no specific version found, re-try in standard paths\n",
        "Line" : 590,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# retrieve python environment version from compiler\n",
        "Line" : 597,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# set public version information\n",
        "Line" : 616,
        "CharPositionInLine" : 8
      },
      "53" : {
        "Text" : "# compiler not usable\n",
        "Line" : 623,
        "CharPositionInLine" : 6
      },
      "54" : {
        "Text" : "# Compiler must be compatible with interpreter\n",
        "Line" : 631,
        "CharPositionInLine" : 6
      },
      "55" : {
        "Text" : "# Use compiler version for future searches to ensure consistency\n",
        "Line" : 637,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# third step, search for the development artifacts\n\n## Development environment is not compatible with IronPython interpreter\n",
        "Line" : 652,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Support preference of static libs by adjusting CMAKE_FIND_LIBRARY_SUFFIXES\n",
        "Line" : 667,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# if python interpreter is found, use its location and version to ensure consistency\n\n# between interpreter and development environment\n",
        "Line" : 679,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# try to use pythonX.Y-config tool\n",
        "Line" : 698,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "# check that config tool match library architecture\n",
        "Line" : 715,
        "CharPositionInLine" : 6
      },
      "61" : {
        "Text" : "# retrieve root install directory\n",
        "Line" : 732,
        "CharPositionInLine" : 4
      },
      "62" : {
        "Text" : "# python-config is not usable\n",
        "Line" : 739,
        "CharPositionInLine" : 6
      },
      "63" : {
        "Text" : "# retrieve library\n",
        "Line" : 745,
        "CharPositionInLine" : 4
      },
      "64" : {
        "Text" : "# retrieve library directory\n",
        "Line" : 752,
        "CharPositionInLine" : 6
      },
      "65" : {
        "Text" : "# retrieve library name\n",
        "Line" : 756,
        "CharPositionInLine" : 6
      },
      "66" : {
        "Text" : "# retrieve runtime library\n",
        "Line" : 768,
        "CharPositionInLine" : 6
      },
      "67" : {
        "Text" : "# retrieve include directory\n",
        "Line" : 781,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "# retrieve include directory\n",
        "Line" : 788,
        "CharPositionInLine" : 6
      },
      "69" : {
        "Text" : "# Rely on HINTS and standard paths if config tool failed to locate artifacts\n",
        "Line" : 805,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "# search in HINTS locations\n",
        "Line" : 865,
        "CharPositionInLine" : 6
      },
      "71" : {
        "Text" : "# search in all default paths\n",
        "Line" : 895,
        "CharPositionInLine" : 6
      },
      "72" : {
        "Text" : "# retrieve runtime library\n",
        "Line" : 911,
        "CharPositionInLine" : 6
      },
      "73" : {
        "Text" : "# search for debug library\n",
        "Line" : 926,
        "CharPositionInLine" : 8
      },
      "74" : {
        "Text" : "# use library location as a hint\n",
        "Line" : 928,
        "CharPositionInLine" : 10
      },
      "75" : {
        "Text" : "# search first in known locations\n",
        "Line" : 936,
        "CharPositionInLine" : 10
      },
      "76" : {
        "Text" : "# search in all default paths\n",
        "Line" : 947,
        "CharPositionInLine" : 10
      },
      "77" : {
        "Text" : "# Don't search for include dir until library location is known\n",
        "Line" : 965,
        "CharPositionInLine" : 6
      },
      "78" : {
        "Text" : "# pick up include directory from configuration\n",
        "Line" : 970,
        "CharPositionInLine" : 10
      },
      "79" : {
        "Text" : "# Use the library's install prefix as a hint\n",
        "Line" : 985,
        "CharPositionInLine" : 12
      },
      "80" : {
        "Text" : "# assume library is in a directory under root\n",
        "Line" : 993,
        "CharPositionInLine" : 14
      },
      "81" : {
        "Text" : "# search header file in standard locations\n",
        "Line" : 1051,
        "CharPositionInLine" : 4
      },
      "82" : {
        "Text" : "# retrieve version from header file\n",
        "Line" : 1057,
        "CharPositionInLine" : 4
      },
      "83" : {
        "Text" : "# set public version information\n",
        "Line" : 1068,
        "CharPositionInLine" : 6
      },
      "84" : {
        "Text" : "# define public variables\n",
        "Line" : 1076,
        "CharPositionInLine" : 2
      },
      "85" : {
        "Text" : "# development environment must be compatible with interpreter/compiler\n",
        "Line" : 1108,
        "CharPositionInLine" : 6
      },
      "86" : {
        "Text" : "# Restore the original find library ordering\n",
        "Line" : 1117,
        "CharPositionInLine" : 2
      },
      "87" : {
        "Text" : "# final validation\n",
        "Line" : 1123,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# Create imported targets and helper functions\n",
        "Line" : 1135,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# System manage shared libraries in two parts: import and runtime\n",
        "Line" : 1170,
        "CharPositionInLine" : 4
      },
      "90" : {
        "Text" : "# extend link information with dependent libraries\n",
        "Line" : 1204,
        "CharPositionInLine" : 4
      },
      "91" : {
        "Text" : "# remove elements relative to python library itself\n",
        "Line" : 1212,
        "CharPositionInLine" : 6
      },
      "92" : {
        "Text" : "#\n\n# PYTHON_ADD_LIBRARY (<name> [STATIC|SHARED|MODULE] src1 src2 ... srcN)\n\n# It is used to build modules for python.\n\n#\n",
        "Line" : 1222,
        "CharPositionInLine" : 2
      },
      "93" : {
        "Text" : "# customize library name to follow module name rules\n",
        "Line" : 1239,
        "CharPositionInLine" : 4
      },
      "94" : {
        "Text" : "# final clean-up\n",
        "Line" : 1250,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# Restore CMAKE_FIND_APPBUNDLE\n",
        "Line" : 1252,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# Restore CMAKE_FIND_FRAMEWORK\n",
        "Line" : 1259,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 97
    },
    "CMake/patches/3.13/FindPython2.cmake" : {
      "ObjectId" : "998e99223ca7c07a381da8bfd5f4601467c750fe",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nFindPython2\n-----------\n\nFind Python 2 interpreter, compiler and development environment (include\ndirectories and libraries).\n\nThree components are supported:\n\n* ``Interpreter``: search for Python 2 interpreter\n* ``Compiler``: search for Python 2 compiler. Only offered by IronPython.\n* ``Development``: search for development artifacts (include directories and\n  libraries)\n\nIf no ``COMPONENTS`` is specified, ``Interpreter`` is assumed.\n\nTo ensure consistent versions between components ``Interpreter``, ``Compiler``\nand ``Development``, specify all components at the same time::\n\n  find_package (Python2 COMPONENTS Interpreter Development)\n\nThis module looks only for version 2 of Python. This module can be used\nconcurrently with :module:`FindPython3` module to use both Python versions.\n\nThe :module:`FindPython` module can be used if Python version does not matter\nfor you.\n\nImported Targets\n^^^^^^^^^^^^^^^^\n\nThis module defines the following :ref:`Imported Targets <Imported Targets>`:\n\n``Python2::Interpreter``\n  Python 2 interpreter. Target defined if component ``Interpreter`` is found.\n``Python2::Compiler``\n  Python 2 compiler. Target defined if component ``Compiler`` is found.\n``Python2::Python``\n  Python 2 library. Target defined if component ``Development`` is found.\n\nResult Variables\n^^^^^^^^^^^^^^^^\n\nThis module will set the following variables in your project\n(see :ref:`Standard Variable Names <CMake Developer Standard Variable Names>`):\n\n``Python2_FOUND``\n  System has the Python 2 requested components.\n``Python2_Interpreter_FOUND``\n  System has the Python 2 interpreter.\n``Python2_EXECUTABLE``\n  Path to the Python 2 interpreter.\n``Python2_INTERPRETER_ID``\n  A short string unique to the interpreter. Possible values include:\n    * Python\n    * ActivePython\n    * Anaconda\n    * Canopy\n    * IronPython\n``Python2_STDLIB``\n  Standard platform independent installation directory.\n\n  Information returned by\n  ``distutils.sysconfig.get_python_lib(plat_specific=False,standard_lib=True)``.\n``Python2_STDARCH``\n  Standard platform dependent installation directory.\n\n  Information returned by\n  ``distutils.sysconfig.get_python_lib(plat_specific=True,standard_lib=True)``.\n``Python2_SITELIB``\n  Third-party platform independent installation directory.\n\n  Information returned by\n  ``distutils.sysconfig.get_python_lib(plat_specific=False,standard_lib=False)``.\n``Python2_SITEARCH``\n  Third-party platform dependent installation directory.\n\n  Information returned by\n  ``distutils.sysconfig.get_python_lib(plat_specific=True,standard_lib=False)``.\n``Python2_Compiler_FOUND``\n  System has the Python 2 compiler.\n``Python2_COMPILER``\n  Path to the Python 2 compiler. Only offered by IronPython.\n``Python2_COMPILER_ID``\n  A short string unique to the compiler. Possible values include:\n    * IronPython\n``Python2_Development_FOUND``\n  System has the Python 2 development artifacts.\n``Python2_INCLUDE_DIRS``\n  The Python 2 include directories.\n``Python2_LIBRARIES``\n  The Python 2 libraries.\n``Python2_LIBRARY_DIRS``\n  The Python 2 library directories.\n``Python2_RUNTIME_LIBRARY_DIRS``\n  The Python 2 runtime library directories.\n``Python2_VERSION``\n  Python 2 version.\n``Python2_VERSION_MAJOR``\n  Python 2 major version.\n``Python2_VERSION_MINOR``\n  Python 2 minor version.\n``Python2_VERSION_PATCH``\n  Python 2 patch version.\n\nHints\n^^^^^\n\n``Python2_ROOT_DIR``\n  Define the root directory of a Python 2 installation.\n\n``Python2_USE_STATIC_LIBS``\n  * If not defined, search for shared libraries and static libraries in that\n    order.\n  * If set to TRUE, search **only** for static libraries.\n  * If set to FALSE, search **only** for shared libraries.\n\n``Python2_FIND_REGISTRY``\n  On Windows the ``Python2_FIND_REGISTRY`` variable determine the order\n  of preference between registry and environment variables.\n  the ``Python2_FIND_REGISTRY`` variable can be set to empty or one of the\n  following:\n\n  * ``FIRST``: Try to use registry before environment variables.\n    This is the default.\n  * ``LAST``: Try to use registry after environment variables.\n  * ``NEVER``: Never try to use registry.\n\n``CMAKE_FIND_FRAMEWORK``\n  On macOS the :variable:`CMAKE_FIND_FRAMEWORK` variable determine the order of\n  preference between Apple-style and unix-style package components.\n\n  .. note::\n\n    Value ``ONLY`` is not supported so ``FIRST`` will be used instead.\n\n.. note::\n\n  If a Python virtual environment is configured, set variable\n  ``Python_FIND_REGISTRY`` (Windows) or ``CMAKE_FIND_FRAMEWORK`` (macOS) with\n  value ``LAST`` or ``NEVER`` to select it preferably.\n\nCommands\n^^^^^^^^\n\nThis module defines the command ``Python2_add_library`` which have the same\nsemantic as :command:`add_library` but take care of Python module naming rules\n(only applied if library is of type ``MODULE``) and add dependency to target\n``Python2::Python``::\n\n  Python2_add_library (my_module MODULE src1.cpp)\n\nIf library type is not specified, ``MODULE`` is assumed.\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/patches/3.13/FindPython3.cmake" : {
      "ObjectId" : "2176f3f4f402c333d5f0bc63beb061006519cd7c",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nFindPython3\n-----------\n\nFind Python 3 interpreter, compiler and development environment (include\ndirectories and libraries).\n\nThree components are supported:\n\n* ``Interpreter``: search for Python 3 interpreter\n* ``Compiler``: search for Python 3 compiler. Only offered by IronPython.\n* ``Development``: search for development artifacts (include directories and\n  libraries)\n\nIf no ``COMPONENTS`` is specified, ``Interpreter`` is assumed.\n\nTo ensure consistent versions between components ``Interpreter``, ``Compiler``\nand ``Development``, specify all components at the same time::\n\n  find_package (Python3 COMPONENTS Interpreter Development)\n\nThis module looks only for version 3 of Python. This module can be used\nconcurrently with :module:`FindPython2` module to use both Python versions.\n\nThe :module:`FindPython` module can be used if Python version does not matter\nfor you.\n\nImported Targets\n^^^^^^^^^^^^^^^^\n\nThis module defines the following :ref:`Imported Targets <Imported Targets>`:\n\n``Python3::Interpreter``\n  Python 3 interpreter. Target defined if component ``Interpreter`` is found.\n``Python3::Compiler``\n  Python 3 compiler. Target defined if component ``Compiler`` is found.\n``Python3::Python``\n  Python 3 library. Target defined if component ``Development`` is found.\n\nResult Variables\n^^^^^^^^^^^^^^^^\n\nThis module will set the following variables in your project\n(see :ref:`Standard Variable Names <CMake Developer Standard Variable Names>`):\n\n``Python3_FOUND``\n  System has the Python 3 requested components.\n``Python3_Interpreter_FOUND``\n  System has the Python 3 interpreter.\n``Python3_EXECUTABLE``\n  Path to the Python 3 interpreter.\n``Python3_INTERPRETER_ID``\n  A short string unique to the interpreter. Possible values include:\n    * Python\n    * ActivePython\n    * Anaconda\n    * Canopy\n    * IronPython\n``Python3_STDLIB``\n  Standard platform independent installation directory.\n\n  Information returned by\n  ``distutils.sysconfig.get_python_lib(plat_specific=False,standard_lib=True)``.\n``Python3_STDARCH``\n  Standard platform dependent installation directory.\n\n  Information returned by\n  ``distutils.sysconfig.get_python_lib(plat_specific=True,standard_lib=True)``.\n``Python3_SITELIB``\n  Third-party platform independent installation directory.\n\n  Information returned by\n  ``distutils.sysconfig.get_python_lib(plat_specific=False,standard_lib=False)``.\n``Python3_SITEARCH``\n  Third-party platform dependent installation directory.\n\n  Information returned by\n  ``distutils.sysconfig.get_python_lib(plat_specific=True,standard_lib=False)``.\n``Python3_Compiler_FOUND``\n  System has the Python 3 compiler.\n``Python3_COMPILER``\n  Path to the Python 3 compiler. Only offered by IronPython.\n``Python3_COMPILER_ID``\n  A short string unique to the compiler. Possible values include:\n    * IronPython\n``Python3_Development_FOUND``\n  System has the Python 3 development artifacts.\n``Python3_INCLUDE_DIRS``\n  The Python 3 include directories.\n``Python3_LIBRARIES``\n  The Python 3 libraries.\n``Python3_LIBRARY_DIRS``\n  The Python 3 library directories.\n``Python3_RUNTIME_LIBRARY_DIRS``\n  The Python 3 runtime library directories.\n``Python3_VERSION``\n  Python 3 version.\n``Python3_VERSION_MAJOR``\n  Python 3 major version.\n``Python3_VERSION_MINOR``\n  Python 3 minor version.\n``Python3_VERSION_PATCH``\n  Python 3 patch version.\n\nHints\n^^^^^\n\n``Python3_ROOT_DIR``\n  Define the root directory of a Python 3 installation.\n\n``Python3_USE_STATIC_LIBS``\n  * If not defined, search for shared libraries and static libraries in that\n    order.\n  * If set to TRUE, search **only** for static libraries.\n  * If set to FALSE, search **only** for shared libraries.\n\n``Python3_FIND_REGISTRY``\n  On Windows the ``Python3_FIND_REGISTRY`` variable determine the order\n  of preference between registry and environment variables.\n  the ``Python3_FIND_REGISTRY`` variable can be set to empty or one of the\n  following:\n\n  * ``FIRST``: Try to use registry before environment variables.\n    This is the default.\n  * ``LAST``: Try to use registry after environment variables.\n  * ``NEVER``: Never try to use registry.\n\n``CMAKE_FIND_FRAMEWORK``\n  On OS X the :variable:`CMAKE_FIND_FRAMEWORK` variable determine the order of\n  preference between Apple-style and unix-style package components.\n\n  .. note::\n\n    Value ``ONLY`` is not supported so ``FIRST`` will be used instead.\n\n.. note::\n\n  If a Python virtual environment is configured, set variable\n  ``Python_FIND_REGISTRY`` (Windows) or ``CMAKE_FIND_FRAMEWORK`` (macOS) with\n  value ``LAST`` or ``NEVER`` to select it preferably.\n\nCommands\n^^^^^^^^\n\nThis module defines the command ``Python3_add_library`` which have the same\nsemantic as :command:`add_library` but take care of Python module naming rules\n(only applied if library is of type ``MODULE``) and add dependency to target\n``Python3::Python``::\n\n  Python3_add_library (my_module MODULE src1.cpp)\n\nIf library type is not specified, ``MODULE`` is assumed.\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/patches/3.13/FindZLIB.cmake" : {
      "ObjectId" : "7cc482e9793d80f8061d4d63cc258ad96f7a0233",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nFindZLIB\n--------\n\nFind the native ZLIB includes and library.\n\nIMPORTED Targets\n^^^^^^^^^^^^^^^^\n\nThis module defines :prop_tgt:`IMPORTED` target ``ZLIB::ZLIB``, if\nZLIB has been found.\n\nResult Variables\n^^^^^^^^^^^^^^^^\n\nThis module defines the following variables:\n\n::\n\n  ZLIB_INCLUDE_DIRS   - where to find zlib.h, etc.\n  ZLIB_LIBRARIES      - List of libraries when using zlib.\n  ZLIB_FOUND          - True if zlib found.\n\n::\n\n  ZLIB_VERSION_STRING - The version of zlib found (x.y.z)\n  ZLIB_VERSION_MAJOR  - The major version of zlib\n  ZLIB_VERSION_MINOR  - The minor version of zlib\n  ZLIB_VERSION_PATCH  - The patch version of zlib\n  ZLIB_VERSION_TWEAK  - The tweak version of zlib\n\nBackward Compatibility\n^^^^^^^^^^^^^^^^^^^^^^\n\nThe following variable are provided for backward compatibility\n\n::\n\n  ZLIB_MAJOR_VERSION  - The major version of zlib\n  ZLIB_MINOR_VERSION  - The minor version of zlib\n  ZLIB_PATCH_VERSION  - The patch version of zlib\n\nHints\n^^^^^\n\nA user may set ``ZLIB_ROOT`` to a zlib installation root to tell this\nmodule where to look.\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search ZLIB_ROOT first if it is set.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Normal search.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Try each search configuration.\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Allow ZLIB_LIBRARY to be set manually, as the location of the zlib library\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# only append a TWEAK version if it exists:\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "CMake/patches/3.7/FindPNG.cmake" : {
      "ObjectId" : "690915c8be82264ab33a17ac577d70bf4fdadf14",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nFindPNG\n-------\n\nFind libpng, the official reference library for the PNG image format.\n\nImported targets\n^^^^^^^^^^^^^^^^\n\nThis module defines the following :prop_tgt:`IMPORTED` target:\n\n``PNG::PNG``\n  The libpng library, if found.\n\nResult variables\n^^^^^^^^^^^^^^^^\n\nThis module will set the following variables in your project:\n\n``PNG_INCLUDE_DIRS``\n  where to find png.h, etc.\n``PNG_LIBRARIES``\n  the libraries to link against to use PNG.\n``PNG_DEFINITIONS``\n  You should add_definitions(${PNG_DEFINITIONS}) before compiling code\n  that includes png library files.\n``PNG_FOUND``\n  If false, do not try to use PNG.\n``PNG_VERSION_STRING``\n  the version of the PNG library found (since CMake 2.8.8)\n\nObsolete variables\n^^^^^^^^^^^^^^^^^^\n\nThe following variables may also be set, for backwards compatibility:\n\n``PNG_LIBRARY``\n  where to find the PNG library.\n``PNG_INCLUDE_DIR``\n  where to find the PNG headers (same as PNG_INCLUDE_DIRS)\n\nSince PNG depends on the ZLib compression library, none of the above\nwill be defined unless ZLib can be found.\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For compatibility with versions prior to this multi-config search, honor\n\n# any PNG_LIBRARY that is already specified and skip the search.\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Set by select_library_configurations(), but we want the one from\n\n# find_package_handle_standard_args() below.\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# png.h includes zlib.h. Sigh.\n",
        "Line" : 93,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# for backward compatibility\n",
        "Line" : 95,
        "CharPositionInLine" : 48
      },
      "6" : {
        "Text" : "# No need to define PNG_USE_DLL here, because it's default for Cygwin.\n",
        "Line" : 100,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 7
    },
    "CMake/patches/3.7/FindTIFF.cmake" : {
      "ObjectId" : "e8a8c29ca460c5aa3c13674b72618d5e4ff8deee",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nFindTIFF\n--------\n\nFind the TIFF library (libtiff).\n\nImported targets\n^^^^^^^^^^^^^^^^\n\nThis module defines the following :prop_tgt:`IMPORTED` targets:\n\n``TIFF::TIFF``\n  The TIFF library, if found.\n\nResult variables\n^^^^^^^^^^^^^^^^\n\nThis module will set the following variables in your project:\n\n``TIFF_FOUND``\n  true if the TIFF headers and libraries were found\n``TIFF_INCLUDE_DIR``\n  the directory containing the TIFF headers\n``TIFF_INCLUDE_DIRS``\n  the directory containing the TIFF headers\n``TIFF_LIBRARIES``\n  TIFF libraries to be linked\n\nCache variables\n^^^^^^^^^^^^^^^\n\nThe following cache variables may also be set:\n\n``TIFF_INCLUDE_DIR``\n  the directory containing the TIFF headers\n``TIFF_LIBRARY``\n  the path to the TIFF library\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/patches/3.7/GenerateExportHeader.cmake" : {
      "ObjectId" : "add26c5a618263dced3504733ef84ff3b77ba0b6",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# GenerateExportHeader\n\n# --------------------\n\n#\n\n# Function for generation of export macros for libraries\n\n#\n\n# This module provides the function GENERATE_EXPORT_HEADER().\n\n#\n\n# The ``GENERATE_EXPORT_HEADER`` function can be used to generate a file\n\n# suitable for preprocessor inclusion which contains EXPORT macros to be\n\n# used in library classes::\n\n#\n\n#    GENERATE_EXPORT_HEADER( LIBRARY_TARGET\n\n#              [BASE_NAME <base_name>]\n\n#              [EXPORT_MACRO_NAME <export_macro_name>]\n\n#              [EXPORT_FILE_NAME <export_file_name>]\n\n#              [DEPRECATED_MACRO_NAME <deprecated_macro_name>]\n\n#              [NO_EXPORT_MACRO_NAME <no_export_macro_name>]\n\n#              [STATIC_DEFINE <static_define>]\n\n#              [NO_DEPRECATED_MACRO_NAME <no_deprecated_macro_name>]\n\n#              [DEFINE_NO_DEPRECATED]\n\n#              [PREFIX_NAME <prefix_name>]\n\n#              [CUSTOM_CONTENT_FROM_VARIABLE <variable>]\n\n#    )\n\n#\n\n#\n\n# The target properties :prop_tgt:`CXX_VISIBILITY_PRESET <<LANG>_VISIBILITY_PRESET>`\n\n# and :prop_tgt:`VISIBILITY_INLINES_HIDDEN` can be used to add the appropriate\n\n# compile flags for targets.  See the documentation of those target properties,\n\n# and the convenience variables\n\n# :variable:`CMAKE_CXX_VISIBILITY_PRESET <CMAKE_<LANG>_VISIBILITY_PRESET>` and\n\n# :variable:`CMAKE_VISIBILITY_INLINES_HIDDEN`.\n\n#\n\n# By default ``GENERATE_EXPORT_HEADER()`` generates macro names in a file\n\n# name determined by the name of the library.  This means that in the\n\n# simplest case, users of ``GenerateExportHeader`` will be equivalent to:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    set(CMAKE_CXX_VISIBILITY_PRESET hidden)\n\n#    set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)\n\n#    add_library(somelib someclass.cpp)\n\n#    generate_export_header(somelib)\n\n#    install(TARGETS somelib DESTINATION ${LIBRARY_INSTALL_DIR})\n\n#    install(FILES\n\n#     someclass.h\n\n#     ${PROJECT_BINARY_DIR}/somelib_export.h DESTINATION ${INCLUDE_INSTALL_DIR}\n\n#    )\n\n#\n\n#\n\n# And in the ABI header files:\n\n#\n\n# .. code-block:: c++\n\n#\n\n#    #include \"somelib_export.h\"\n\n#    class SOMELIB_EXPORT SomeClass {\n\n#      ...\n\n#    };\n\n#\n\n#\n\n# The CMake fragment will generate a file in the\n\n# ``${CMAKE_CURRENT_BINARY_DIR}`` called ``somelib_export.h`` containing the\n\n# macros ``SOMELIB_EXPORT``, ``SOMELIB_NO_EXPORT``, ``SOMELIB_DEPRECATED``,\n\n# ``SOMELIB_DEPRECATED_EXPORT`` and ``SOMELIB_DEPRECATED_NO_EXPORT``.\n\n# They will be followed by content taken from the variable specified by\n\n# the ``CUSTOM_CONTENT_FROM_VARIABLE`` option, if any.\n\n# The resulting file should be installed with other headers in the library.\n\n#\n\n# The ``BASE_NAME`` argument can be used to override the file name and the\n\n# names used for the macros:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    add_library(somelib someclass.cpp)\n\n#    generate_export_header(somelib\n\n#      BASE_NAME other_name\n\n#    )\n\n#\n\n#\n\n# Generates a file called ``other_name_export.h`` containing the macros\n\n# ``OTHER_NAME_EXPORT``, ``OTHER_NAME_NO_EXPORT`` and ``OTHER_NAME_DEPRECATED``\n\n# etc.\n\n#\n\n# The ``BASE_NAME`` may be overridden by specifying other options in the\n\n# function.  For example:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    add_library(somelib someclass.cpp)\n\n#    generate_export_header(somelib\n\n#      EXPORT_MACRO_NAME OTHER_NAME_EXPORT\n\n#    )\n\n#\n\n#\n\n# creates the macro ``OTHER_NAME_EXPORT`` instead of ``SOMELIB_EXPORT``, but\n\n# other macros and the generated file name is as default:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    add_library(somelib someclass.cpp)\n\n#    generate_export_header(somelib\n\n#      DEPRECATED_MACRO_NAME KDE_DEPRECATED\n\n#    )\n\n#\n\n#\n\n# creates the macro ``KDE_DEPRECATED`` instead of ``SOMELIB_DEPRECATED``.\n\n#\n\n# If ``LIBRARY_TARGET`` is a static library, macros are defined without\n\n# values.\n\n#\n\n# If the same sources are used to create both a shared and a static\n\n# library, the uppercased symbol ``${BASE_NAME}_STATIC_DEFINE`` should be\n\n# used when building the static library:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    add_library(shared_variant SHARED ${lib_SRCS})\n\n#    add_library(static_variant ${lib_SRCS})\n\n#    generate_export_header(shared_variant BASE_NAME libshared_and_static)\n\n#    set_target_properties(static_variant PROPERTIES\n\n#      COMPILE_FLAGS -DLIBSHARED_AND_STATIC_STATIC_DEFINE)\n\n#\n\n# This will cause the export macros to expand to nothing when building\n\n# the static library.\n\n#\n\n# If ``DEFINE_NO_DEPRECATED`` is specified, then a macro\n\n# ``${BASE_NAME}_NO_DEPRECATED`` will be defined This macro can be used to\n\n# remove deprecated code from preprocessor output:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    option(EXCLUDE_DEPRECATED \"Exclude deprecated parts of the library\" FALSE)\n\n#    if (EXCLUDE_DEPRECATED)\n\n#      set(NO_BUILD_DEPRECATED DEFINE_NO_DEPRECATED)\n\n#    endif()\n\n#    generate_export_header(somelib ${NO_BUILD_DEPRECATED})\n\n#\n\n#\n\n# And then in somelib:\n\n#\n\n# .. code-block:: c++\n\n#\n\n#    class SOMELIB_EXPORT SomeClass\n\n#    {\n\n#    public:\n\n#    #ifndef SOMELIB_NO_DEPRECATED\n\n#      SOMELIB_DEPRECATED void oldMethod();\n\n#    #endif\n\n#    };\n\n#\n\n# .. code-block:: c++\n\n#\n\n#    #ifndef SOMELIB_NO_DEPRECATED\n\n#    void SomeClass::oldMethod() {  }\n\n#    #endif\n\n#\n\n#\n\n# If ``PREFIX_NAME`` is specified, the argument will be used as a prefix to\n\n# all generated macros.\n\n#\n\n# For example:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#    generate_export_header(somelib PREFIX_NAME VTK_)\n\n#\n\n# Generates the macros ``VTK_SOMELIB_EXPORT`` etc.\n\n#\n\n# ::\n\n#\n\n#    ADD_COMPILER_EXPORT_FLAGS( [<output_variable>] )\n\n#\n\n# The ``ADD_COMPILER_EXPORT_FLAGS`` function adds ``-fvisibility=hidden`` to\n\n# :variable:`CMAKE_CXX_FLAGS <CMAKE_<LANG>_FLAGS>` if supported, and is a no-op\n\n# on Windows which does not need extra compiler flags for exporting support.\n\n# You may optionally pass a single argument to ``ADD_COMPILER_EXPORT_FLAGS``\n\n# that will be populated with the ``CXX_FLAGS`` required to enable visibility\n\n# support for the compiler/architecture in use.\n\n#\n\n# This function is deprecated.  Set the target properties\n\n# :prop_tgt:`CXX_VISIBILITY_PRESET <<LANG>_VISIBILITY_PRESET>` and\n\n# :prop_tgt:`VISIBILITY_INLINES_HIDDEN` instead.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: Install this macro separately?\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Exclude XL here because it misinterprets -fvisibility=hidden even though\n\n# the check_cxx_compiler_flag passes\n",
        "Line" : 207,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# NOTE:  Some Embarcadero compilers silently compile __declspec(deprecated)\n\n# without error, but this is not a documented feature and the attribute does\n\n# not actually generate any warnings.\n",
        "Line" : 226,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Option overrides\n",
        "Line" : 280,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Default options\n",
        "Line" : 299,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Just return if there are no flags to add.\n",
        "Line" : 393,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Either return the extra flags needed in the supplied argument, or to the\n\n# CMAKE_CXX_FLAGS if no argument is supplied.\n",
        "Line" : 403,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# XXX(dep-cmake-3.4): This bit is grabbed from back to 3.6 since we want to\n\n# use the new version with CMake 3.3 (3.4 added `string(APPEND)`).\n\n#string(APPEND CMAKE_CXX_FLAGS \" ${EXTRA_FLAGS}\")\n\n#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS}\" PARENT_SCOPE)\n",
        "Line" : 408,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "CMake/patches/99/FindGDAL.cmake" : {
      "ObjectId" : "7cedca1855c9bf06f03e209e368798b4bcfa7e6a",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nFindGDAL\n--------\n\nFind GDAL.\n\nIMPORTED Targets\n^^^^^^^^^^^^^^^^\n\nThis module defines :prop_tgt:`IMPORTED` target ``GDAL::GDAL``\nif GDAL has been found.\n\nResult Variables\n^^^^^^^^^^^^^^^^\n\nThis module will set the following variables in your project:\n\n``GDAL_FOUND``\n  True if GDAL is found.\n``GDAL_INCLUDE_DIRS``\n  Include directories for GDAL headers.\n``GDAL_LIBRARIES``\n  Libraries to link to GDAL.\n``GDAL_VERSION``\n  The version of GDAL found.\n\nCache variables\n^^^^^^^^^^^^^^^\n\nThe following cache variables may also be set:\n\n``GDAL_LIBRARY``\n  The libgdal library file.\n``GDAL_INCLUDE_DIR``\n  The directory containing ``gdal.h``.\n\nHints\n^^^^^\n\nSet ``GDAL_DIR`` or ``GDAL_ROOT`` in the environment to specify the\nGDAL installation prefix.\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# $GDALDIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$GDAL_DIR\n\n# used in building gdal.\n\n#\n\n# Created by Eric Wing. I'm not a gdal user, but OpenSceneGraph uses it\n\n# for osgTerrain so I whipped this module together for completeness.\n\n# I actually don't know the conventions or where files are typically\n\n# placed in distros.\n\n# Any real gdal users are encouraged to correct this (but please don't\n\n# break the OS X framework stuff when doing so which is what usually seems\n\n# to happen).\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This makes the presumption that you are include gdal.h like\n\n#\n\n#include \"gdal.h\"\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use gdal-config to obtain the library version (this should hopefully\n\n# allow us to -lgdal1.x.y where x.y are correct version)\n\n# For some reason, libgdal development packages do not contain\n\n# libgdal.so...\n",
        "Line" : 74,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# treat the output as a command line and split it up\n",
        "Line" : 89,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "# only consider libraries whose name matches this pattern\n",
        "Line" : 92,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "# consider each entry as a possible library path, name, or parent directory\n",
        "Line" : 95,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "# library name\n",
        "Line" : 97,
        "CharPositionInLine" : 16
      },
      "9" : {
        "Text" : "# only consider libraries whose name matches the expected pattern\n",
        "Line" : 101,
        "CharPositionInLine" : 20
      },
      "10" : {
        "Text" : "# library search path\n",
        "Line" : 105,
        "CharPositionInLine" : 16
      },
      "11" : {
        "Text" : "# assume this is a full path to a library\n",
        "Line" : 108,
        "CharPositionInLine" : 16
      },
      "12" : {
        "Text" : "# extract the file name\n",
        "Line" : 110,
        "CharPositionInLine" : 20
      },
      "13" : {
        "Text" : "# only consider libraries whose name matches the expected pattern\n",
        "Line" : 113,
        "CharPositionInLine" : 20
      },
      "14" : {
        "Text" : "# extract the file directory\n",
        "Line" : 118,
        "CharPositionInLine" : 20
      },
      "15" : {
        "Text" : "# remove library prefixes/suffixes\n",
        "Line" : 121,
        "CharPositionInLine" : 20
      },
      "16" : {
        "Text" : "# use the file name and directory as hints\n",
        "Line" : 125,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 17
    },
    "CMake/patches/99/FindHDF5.cmake" : {
      "ObjectId" : "2622f8b0be7834e3c15412519120def83b6c175e",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# See https://gitlab.kitware.com/cmake/cmake/merge_requests/2575\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#[=======================================================================[.rst:\nFindHDF5\n--------\n\nFind HDF5, a library for reading and writing self describing array data.\n\n\n\nThis module invokes the HDF5 wrapper compiler that should be installed\nalongside HDF5.  Depending upon the HDF5 Configuration, the wrapper\ncompiler is called either h5cc or h5pcc.  If this succeeds, the module\nwill then call the compiler with the -show argument to see what flags\nare used when compiling an HDF5 client application.\n\nThe module will optionally accept the COMPONENTS argument.  If no\nCOMPONENTS are specified, then the find module will default to finding\nonly the HDF5 C library.  If one or more COMPONENTS are specified, the\nmodule will attempt to find the language bindings for the specified\ncomponents.  The only valid components are C, CXX, Fortran, HL, and\nFortran_HL.  If the COMPONENTS argument is not given, the module will\nattempt to find only the C bindings.\n\nThis module will read the variable\nHDF5_USE_STATIC_LIBRARIES to determine whether or not to prefer a\nstatic link to a dynamic link for HDF5 and all of it's dependencies.\nTo use this feature, make sure that the HDF5_USE_STATIC_LIBRARIES\nvariable is set before the call to find_package.\n\nTo provide the module with a hint about where to find your HDF5\ninstallation, you can set the environment variable HDF5_ROOT.  The\nFind module will then look in this path when searching for HDF5\nexecutables, paths, and libraries.\n\nBoth the serial and parallel HDF5 wrappers are considered and the first\ndirectory to contain either one will be used.  In the event that both appear\nin the same directory the serial version is preferentially selected. This\nbehavior can be reversed by setting the variable HDF5_PREFER_PARALLEL to\ntrue.\n\nIn addition to finding the includes and libraries required to compile\nan HDF5 client application, this module also makes an effort to find\ntools that come with the HDF5 distribution that may be useful for\nregression testing.\n\nThis module will define the following variables:\n\n::\n\n  HDF5_FOUND - true if HDF5 was found on the system\n  HDF5_VERSION - HDF5 version in format Major.Minor.Release\n  HDF5_INCLUDE_DIRS - Location of the hdf5 includes\n  HDF5_INCLUDE_DIR - Location of the hdf5 includes (deprecated)\n  HDF5_DEFINITIONS - Required compiler definitions for HDF5\n  HDF5_LIBRARIES - Required libraries for all requested bindings\n  HDF5_HL_LIBRARIES - Required libraries for the HDF5 high level API for all\n                      bindings, if the HL component is enabled\n\nAvailable components are: C CXX Fortran and HL.  For each enabled language\nbinding, a corresponding HDF5_${LANG}_LIBRARIES variable, and potentially\nHDF5_${LANG}_DEFINITIONS, will be defined.\nIf the HL component is enabled, then an HDF5_${LANG}_HL_LIBRARIES will\nalso be defined.  With all components enabled, the following variables will be defined:\n\n::\n\n  HDF5_C_DEFINITIONS -- Required compiler definitions for HDF5 C bindings\n  HDF5_CXX_DEFINITIONS -- Required compiler definitions for HDF5 C++ bindings\n  HDF5_Fortran_DEFINITIONS -- Required compiler definitions for HDF5 Fortran bindings\n  HDF5_C_INCLUDE_DIRS -- Required include directories for HDF5 C bindings\n  HDF5_CXX_INCLUDE_DIRS -- Required include directories for HDF5 C++ bindings\n  HDF5_Fortran_INCLUDE_DIRS -- Required include directories for HDF5 Fortran bindings\n  HDF5_C_LIBRARIES - Required libraries for the HDF5 C bindings\n  HDF5_CXX_LIBRARIES - Required libraries for the HDF5 C++ bindings\n  HDF5_Fortran_LIBRARIES - Required libraries for the HDF5 Fortran bindings\n  HDF5_C_HL_LIBRARIES - Required libraries for the high level C bindings\n  HDF5_CXX_HL_LIBRARIES - Required libraries for the high level C++ bindings\n  HDF5_Fortran_HL_LIBRARIES - Required libraries for the high level Fortran\n                              bindings.\n\n  HDF5_IS_PARALLEL - Whether or not HDF5 was found with parallel IO support\n  HDF5_C_COMPILER_EXECUTABLE - the path to the HDF5 C wrapper compiler\n  HDF5_CXX_COMPILER_EXECUTABLE - the path to the HDF5 C++ wrapper compiler\n  HDF5_Fortran_COMPILER_EXECUTABLE - the path to the HDF5 Fortran wrapper compiler\n  HDF5_C_COMPILER_EXECUTABLE_NO_INTERROGATE - path to the primary C compiler\n                                              which is also the HDF5 wrapper\n  HDF5_CXX_COMPILER_EXECUTABLE_NO_INTERROGATE - path to the primary C++\n                                                compiler which is also\n                                                the HDF5 wrapper\n  HDF5_Fortran_COMPILER_EXECUTABLE_NO_INTERROGATE - path to the primary\n                                                    Fortran compiler which\n                                                    is also the HDF5 wrapper\n  HDF5_DIFF_EXECUTABLE - the path to the HDF5 dataset comparison tool\n\nWith all components enabled, the following targets will be defined:\n\n::\n\n  ``hdf5::hdf5``\n  ``hdf5::hdf5_hl_cpp``\n  ``hdf5::hdf5_fortran``\n  ``hdf5::hdf5_hl``\n  ``hdf5::hdf5_hl_cpp``\n  ``hdf5::hdf5_hl_fortran``\n  ``hdf5::h5diff``\n\nThe following variable can be set to guide the search for HDF5 libraries and includes:\n\n``HDF5_ROOT``\n  Specify the path to the HDF5 installation to use.\n\n``HDF5_FIND_DEBUG``\n  Set to a true value to get some extra debugging output.\n\n``HDF5_NO_FIND_PACKAGE_CONFIG_FILE``\n  Set to a true value to skip trying to find ``hdf5-config.cmake``.\n#]=======================================================================]",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This module is maintained by Will Dicharry <wdicharry@stellarscience.com>.\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# List of the valid HDF5 components\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Validate the list of find components.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# add the extra specified components, ensuring that they are valid.\n",
        "Line" : 136,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# only for compatibility\n",
        "Line" : 144,
        "CharPositionInLine" : 44
      },
      "8" : {
        "Text" : "# replaced by Fortran and HL\n",
        "Line" : 162,
        "CharPositionInLine" : 52
      },
      "9" : {
        "Text" : "# Determine whether to search for serial or parallel executable first\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# We may have picked up some duplicates in various lists during the above\n\n# process for the language bindings (both the C and C++ bindings depend on\n\n# libz for example).  Remove the duplicates. It appears that the default\n\n# CMake behavior is to remove duplicates from the end of a list. However,\n\n# for link lines, this is incorrect since unresolved symbols are searched\n\n# for down the link line. Therefore, we reverse the list, remove the\n\n# duplicates, and then reverse it again to get the duplicates removed from\n\n# the beginning.\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Test first if the current compilers automatically wrap HDF5\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Invoke the HDF5 wrapper compiler.  The compiler return value is stored to the\n\n# return_value argument, the text output is stored to the output variable.\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Parse a compile line for definitions, includes, library paths, and libraries.\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# include directory\n",
        "Line" : 382,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# compile definition\n",
        "Line" : 385,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# library search path\n",
        "Line" : 388,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# library name (hl)\n",
        "Line" : 391,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# library name\n",
        "Line" : 394,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# library file\n",
        "Line" : 397,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# Select a preferred imported configuration from a target\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# We will first assign the value to a local variable _imported_conf, then assign\n\n# it to the function argument at the end.\n",
        "Line" : 416,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Get available imported configurations by examining target properties\n",
        "Line" : 420,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# Find the imported configuration that we prefer.\n\n# We do this by making list of configurations in order of preference,\n\n# starting with ${CMAKE_BUILD_TYPE} and ending with the first imported_conf\n",
        "Line" : 425,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# Now find the first of these that is present in imported_conf\n",
        "Line" : 434,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# support IN_LISTS\n",
        "Line" : 436,
        "CharPositionInLine" : 38
      },
      "26" : {
        "Text" : "# assign value to function argument\n",
        "Line" : 448,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Try to find HDF5 using an installed hdf5-config.cmake\n",
        "Line" : 462,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Some HDF5 versions (e.g. 1.8.18) used hdf5::hdf5 etc\n",
        "Line" : 476,
        "CharPositionInLine" : 12
      },
      "29" : {
        "Text" : "#Older versions of hdf5 don't have a static/shared suffix so\n\n#if we detect that occurrence clear the suffix\n",
        "Line" : 493,
        "CharPositionInLine" : 12
      },
      "30" : {
        "Text" : "#can't find this component with or without the suffix\n\n#so bail out, and let the following locate HDF5\n",
        "Line" : 497,
        "CharPositionInLine" : 16
      },
      "31" : {
        "Text" : "# Find library for this target. Complicated as on Windows with a DLL, we need to search for the import-lib.\n",
        "Line" : 508,
        "CharPositionInLine" : 12
      },
      "32" : {
        "Text" : "# no import lib, just try LOCATION\n",
        "Line" : 512,
        "CharPositionInLine" : 16
      },
      "33" : {
        "Text" : "# Only search for languages we've enabled\n",
        "Line" : 549,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# First check to see if our regular compiler is one of wrappers\n",
        "Line" : 551,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# If this language isn't using the wrapper, then try to seed the\n\n# search options with the wrapper\n",
        "Line" : 586,
        "CharPositionInLine" : 6
      },
      "36" : {
        "Text" : "# hdf5 library\n",
        "Line" : 615,
        "CharPositionInLine" : 14
      },
      "37" : {
        "Text" : "# external library\n",
        "Line" : 625,
        "CharPositionInLine" : 14
      },
      "38" : {
        "Text" : "# hdf5 library\n",
        "Line" : 647,
        "CharPositionInLine" : 16
      },
      "39" : {
        "Text" : "# external library\n",
        "Line" : 657,
        "CharPositionInLine" : 16
      },
      "40" : {
        "Text" : "# No arguments necessary, all languages can use the compiler wrappers\n",
        "Line" : 711,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# Compiler wrappers aren't being used by the build but were found and used\n\n# to determine necessary include and library flags\n",
        "Line" : 716,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# seed the initial lists of libraries to find with items we know we need\n",
        "Line" : 753,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# find the HDF5 include directories\n",
        "Line" : 764,
        "CharPositionInLine" : 8
      },
      "44" : {
        "Text" : "# set the _DIRS variable as this is what the user will normally use\n",
        "Line" : 780,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : "# find the HDF5 libraries\n",
        "Line" : 784,
        "CharPositionInLine" : 8
      },
      "46" : {
        "Text" : "# According to bug 1643 on the CMake bug tracker, this is the\n\n# preferred method for searching for a static library.\n\n# See https://gitlab.kitware.com/cmake/cmake/issues/1643.  We search\n\n# first for the full static library name, but fall back to a\n\n# generic search on the name if the static search fails.\n",
        "Line" : 787,
        "CharPositionInLine" : 16
      },
      "47" : {
        "Text" : "# Append the libraries for this language binding to the list of all\n\n# required libraries.\n",
        "Line" : 820,
        "CharPositionInLine" : 8
      },
      "48" : {
        "Text" : "# According to bug 1643 on the CMake bug tracker, this is the\n\n# preferred method for searching for a static library.\n\n# See https://gitlab.kitware.com/cmake/cmake/issues/1643.  We search\n\n# first for the full static library name, but fall back to a\n\n# generic search on the name if the static search fails.\n",
        "Line" : 827,
        "CharPositionInLine" : 20
      },
      "49" : {
        "Text" : "# Append the libraries for this language binding to the list of all\n\n# required libraries.\n",
        "Line" : 854,
        "CharPositionInLine" : 12
      },
      "50" : {
        "Text" : "# If the HDF5 include directory was found, open H5pubconf.h to determine if\n\n# HDF5 was compiled with parallel IO support\n",
        "Line" : 868,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# For backwards compatibility we set HDF5_INCLUDE_DIR to the value of\n\n# HDF5_INCLUDE_DIRS\n",
        "Line" : 907,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# If HDF5_REQUIRED_VARS is empty at this point, then it's likely that\n\n# something external is trying to explicitly pass already found\n\n# locations\n",
        "Line" : 913,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# hide HDF5_DIR for the non-advanced user to avoid confusion with\n\n# HDF5_DIR-NOT_FOUND while HDF5 was found.\n",
        "Line" : 929,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# Error if we still don't have the location.\n",
        "Line" : 968,
        "CharPositionInLine" : 8
      },
      "55" : {
        "Text" : "# Error if we still don't have the location.\n",
        "Line" : 1016,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 56
    },
    "CMake/patches/99/FindJPEG.cmake" : {
      "ObjectId" : "d4d5daf2940401142ae26f7ed7b670f8f5da3e82",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nFindJPEG\n--------\n\nFind the JPEG library (libjpeg)\n\nImported targets\n^^^^^^^^^^^^^^^^\n\nThis module defines the following :prop_tgt:`IMPORTED` targets:\n\n``JPEG::JPEG``\n  The JPEG library, if found.\n\nResult variables\n^^^^^^^^^^^^^^^^\n\nThis module will set the following variables in your project:\n\n``JPEG_FOUND``\n  If false, do not try to use JPEG.\n``JPEG_INCLUDE_DIRS``\n  where to find jpeglib.h, etc.\n``JPEG_LIBRARIES``\n  the libraries needed to use JPEG.\n``JPEG_VERSION``\n  the version of the JPEG library found\n\nCache variables\n^^^^^^^^^^^^^^^\n\nThe following cache variables may also be set:\n\n``JPEG_INCLUDE_DIRS``\n  where to find jpeglib.h, etc.\n``JPEG_LIBRARY_RELEASE``\n  where to find the JPEG library (optimized).\n``JPEG_LIBRARY_DEBUG``\n  where to find the JPEG library (debug).\n\nObsolete variables\n^^^^^^^^^^^^^^^^^^\n\n``JPEG_INCLUDE_DIR``\n  where to find jpeglib.h, etc. (same as JPEG_INCLUDE_DIRS)\n``JPEG_LIBRARY``\n  where to find the JPEG library.\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/patches/99/FindOpenGL.cmake" : {
      "ObjectId" : "b4444858ee54faf95046c91536884bfa2d555a56",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# See https://gitlab.kitware.com/cmake/cmake/merge_requests/2445\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#.rst:\n\n# FindOpenGL\n\n# ----------\n\n#\n\n# FindModule for OpenGL and GLU.\n\n#\n\n# Optional COMPONENTS\n\n# ^^^^^^^^^^^^^^^^^^^\n\n#\n\n# This module respects several optional COMPONENTS: ``EGL``, ``GLX``,\n\n# ``OpenGL``, ``GLES2``, and ``GLES3``.  There are corresponding import targets\n\n# for each of these flags.\n\n#\n\n# IMPORTED Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the :prop_tgt:`IMPORTED` targets:\n\n#\n\n# ``OpenGL::GL``\n\n#  Defined to the platform-specific OpenGL libraries if the system has OpenGL.\n\n# ``OpenGL::OpenGL``\n\n#  Defined to libOpenGL if the system is GLVND-based.\n\n# ``OpenGL::GLU``\n\n#  Defined if the system has GLU.\n\n# ``OpenGL::GLX``\n\n#  Defined if the system has GLX.\n\n# ``OpenGL::EGL``\n\n#  Defined if the system has EGL.\n\n# ``OpenGL::GLES2``\n\n#  Defined if the system has GLES2.\n\n# ``OpenGL::GLES3``\n\n#  Defined if the system has GLES3.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module sets the following variables:\n\n#\n\n# ``OPENGL_FOUND``\n\n#  True, if the system has OpenGL and all components are found.\n\n# ``OPENGL_XMESA_FOUND``\n\n#  True, if the system has XMESA.\n\n# ``OPENGL_GLU_FOUND``\n\n#  True, if the system has GLU.\n\n# ``OpenGL_OpenGL_FOUND``\n\n#  True, if the system has an OpenGL library.\n\n# ``OpenGL_GLX_FOUND``\n\n#  True, if the system has GLX.\n\n# ``OpenGL_EGL_FOUND``\n\n#  True, if the system has EGL.\n\n# ``OpenGL_GLES2_FOUND``\n\n#  True, if the system has GLES2.\n\n# ``OpenGL_GLES3_FOUND``\n\n#  True, if the system has GLES3.\n\n# ``OPENGL_INCLUDE_DIR``\n\n#  Path to the OpenGL include directory.\n\n# ``OPENGL_EGL_INCLUDE_DIRS``\n\n#  Path to the EGL include directory.\n\n# ``OPENGL_LIBRARIES``\n\n#  Paths to the OpenGL library, windowing system libraries, and GLU libraries.\n\n#  On Linux, this assumes GLX and is never correct for EGL-based targets.\n\n#  Clients are encouraged to use the ``OpenGL::*`` import targets instead.\n\n#\n\n# Cache variables\n\n# ^^^^^^^^^^^^^^^\n\n#\n\n# The following cache variables may also be set:\n\n#\n\n# ``OPENGL_egl_LIBRARY``\n\n#  Path to the EGL library.\n\n# ``OPENGL_glu_LIBRARY``\n\n#  Path to the GLU library.\n\n# ``OPENGL_glx_LIBRARY``\n\n#  Path to the GLVND 'GLX' library.\n\n# ``OPENGL_opengl_LIBRARY``\n\n#  Path to the GLVND 'OpenGL' library\n\n# ``OPENGL_gl_LIBRARY``\n\n#  Path to the OpenGL library.  New code should prefer the ``OpenGL::*`` import\n\n#  targets.\n\n#\n\n# Linux-specific\n\n# ^^^^^^^^^^^^^^\n\n#\n\n# Some Linux systems utilize GLVND as a new ABI for OpenGL.  GLVND separates\n\n# context libraries from OpenGL itself; OpenGL lives in \"libOpenGL\", and\n\n# contexts are defined in \"libGLX\" or \"libEGL\".  GLVND is currently the only way\n\n# to get OpenGL 3+ functionality via EGL in a manner portable across vendors.\n\n# Projects may use GLVND explicitly with target ``OpenGL::OpenGL`` and either\n\n# ``OpenGL::GLX`` or ``OpenGL::EGL``.\n\n#\n\n# Projects may use the ``OpenGL::GL`` target (or ``OPENGL_LIBRARIES`` variable)\n\n# to use legacy GL interfaces.  These will use the legacy GL library located\n\n# by ``OPENGL_gl_LIBRARY``, if available.  If ``OPENGL_gl_LIBRARY`` is empty or\n\n# not found and GLVND is available, the ``OpenGL::GL`` target will use GLVND\n\n# ``OpenGL::OpenGL`` and ``OpenGL::GLX`` (and the ``OPENGL_LIBRARIES``\n\n# variable will use the corresponding libraries).  Thus, for non-EGL-based\n\n# Linux targets, the ``OpenGL::GL`` target is most portable.\n\n#\n\n# A ``OpenGL_GL_PREFERENCE`` variable may be set to specify the preferred way\n\n# to provide legacy GL interfaces in case multiple choices are available.\n\n# The value may be one of:\n\n#\n\n# ``GLVND``\n\n#  If the GLVND OpenGL and GLX libraries are available, prefer them.\n\n#  This forces ``OPENGL_gl_LIBRARY`` to be empty.\n\n#  This is the default if components were requested (since components\n\n#  correspond to GLVND libraries) or if policy :policy:`CMP0072` is\n\n#  set to ``NEW``.\n\n#\n\n# ``LEGACY``\n\n#  Prefer to use the legacy libGL library, if available.\n\n#  This is the default if no components were requested and\n\n#  policy :policy:`CMP0072` is not set to ``NEW``.\n\n#\n\n# For EGL targets the client must rely on GLVND support on the user's system.\n\n# Linking should use the ``OpenGL::OpenGL OpenGL::EGL`` targets.  Using GLES*\n\n# libraries is theoretically possible in place of ``OpenGL::OpenGL``.\n\n#\n\n# ``OPENGL_egl_LIBRARY`` and ``OPENGL_EGL_INCLUDE_DIRS`` are defined in the case of\n\n# GLVND.  For non-GLVND Linux and other systems these are left undefined.\n\n#\n\n# macOS-Specific\n\n# ^^^^^^^^^^^^^^\n\n#\n\n# On OSX FindOpenGL defaults to using the framework version of OpenGL. People\n\n# will have to change the cache values of OPENGL_glu_LIBRARY and\n\n# OPENGL_gl_LIBRARY to use OpenGL with X11 on OSX.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Provide OPENGL_USE_<C> variables for each component.\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The OpenGL.framework provides both gl and glu\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Handle HP-UX cases where we only want to find OpenGL in either hpux64\n\n# or hpux32 depending on if we're doing a 64 bit build.\n",
        "Line" : 169,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# CMake doesn't support arbitrary globs in search paths.\n",
        "Line" : 185,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# The NVidia driver installation tool on Linux installs libraries to a\n\n# `nvidia-<version>` subdirectory.\n",
        "Line" : 187,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# The first line below is to make sure that the proper headers\n\n# are used on a Linux machine with the NVidia drivers installed.\n\n# They replace Mesa with NVidia's own library but normally do not\n\n# install headers and that causes the linking to\n\n# fail since the compiler finds the Mesa headers but NVidia's library.\n\n# Make sure the NVIDIA directory comes BEFORE the others.\n\n#  - Atanas Georgiev <atanas@cs.columbia.edu>\n",
        "Line" : 193,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Search for the GLVND libraries.  We do this regardless of COMPONENTS; we'll\n\n# take into account the COMPONENTS logic later.\n",
        "Line" : 216,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# mesa provides only libGLESv2\n",
        "Line" : 240,
        "CharPositionInLine" : 17
      },
      "11" : {
        "Text" : "# A preference has been explicitly specified.\n",
        "Line" : 257,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# No preference was explicitly specified, but the caller did request\n\n# at least one GLVND component.  Prefer GLVND for legacy GL.\n",
        "Line" : 265,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# No preference was explicitly specified and no GLVND components were\n\n# requested.  Use a policy to choose the default.\n",
        "Line" : 269,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# We can provide legacy GL using GLVND libraries.\n\n# Do not use any legacy GL library.\n",
        "Line" : 284,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# We cannot provide legacy GL using GLVND libraries.\n\n# Search for the legacy GL library.\n",
        "Line" : 288,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# FPHSA cannot handle \"this OR that is required\", so we conditionally set what\n\n# it must look for.  First clear any previous config we might have done:\n",
        "Line" : 316,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# now we append the libraries as appropriate.  The complicated logic\n\n# basically comes down to \"use libOpenGL when we can, and add in specific\n\n# context mechanisms when requested, or we need them to preserve the previous\n\n# default where glx is always available.\"\n",
        "Line" : 320,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# GLVND GLX library.  Preferred when available.\n",
        "Line" : 340,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# GLVND EGL library.\n",
        "Line" : 357,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# GLVND GLES2 library.\n",
        "Line" : 362,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# GLVND GLES3 library.\n",
        "Line" : 367,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Old-style \"libGL\" library: used as a fallback when GLVND isn't available.\n",
        "Line" : 372,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# We always need the 'gl.h' include dir.\n",
        "Line" : 383,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# OpenGL_OpenGL_FOUND is a bit unique in that it is okay if /either/ libOpenGL\n\n# or libGL is found.\n\n# Using libGL with libEGL is never okay, though; we handle that case later.\n",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# User-visible names should be plural.\n",
        "Line" : 443,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# OpenGL:: targets\n",
        "Line" : 453,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ::OpenGL is a GLVND library, and thus Linux-only: we don't bother checking\n\n# for a framework version of this library.\n",
        "Line" : 455,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# ::GLX is a GLVND library, and thus Linux-only: we don't bother checking\n\n# for a framework version of this library.\n",
        "Line" : 472,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# ::GLES2 is a GLVND library, and thus Linux-only: we don't bother checking\n\n# for a framework version of this library.\n",
        "Line" : 490,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# ::GLES3 is a GLVND library, and thus Linux-only: we don't bother checking\n\n# for a framework version of this library.\n",
        "Line" : 511,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# A legacy GL library is available, so use it for the legacy GL target.\n",
        "Line" : 533,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# A legacy GL library is not available, but we can provide the legacy GL\n\n# target using GLVND OpenGL+GLX.\n",
        "Line" : 555,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# ::EGL is a GLVND library, and thus Linux-only: we don't bother checking\n\n# for a framework version of this library.\n",
        "Line" : 566,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# Note that EGL's include directory is different from OpenGL/GLX's!\n",
        "Line" : 580,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# OPENGL_LIBRARIES mirrors OpenGL::GL's logic ...\n",
        "Line" : 608,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# ... and also includes GLU, if available.\n",
        "Line" : 616,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# This deprecated setting is for backward compatibility with CMake1.4\n",
        "Line" : 622,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# This deprecated setting is for backward compatibility with CMake1.4\n",
        "Line" : 624,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 39
    },
    "CMake/patches/99/FindSQLite3.cmake" : {
      "ObjectId" : "c144ca1d8fbde336fdc74634ec9d068399df0db8",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nFindSQLite3\n-----------\n\nFind the SQLite libraries, v3\n\nIMPORTED targets\n^^^^^^^^^^^^^^^^\n\nThis module defines the following :prop_tgt:`IMPORTED` target:\n\n``SQLite::SQLite3``\n\nResult variables\n^^^^^^^^^^^^^^^^\n\nThis module will set the following variables if found:\n\n``SQLite3_INCLUDE_DIRS``\n  where to find sqlite3.h, etc.\n``SQLite3_LIBRARIES``\n  the libraries to link against to use SQLite3.\n``SQLite3_VERSION``\n  version of the SQLite3 library found\n``SQLite3_FOUND``\n  TRUE if found\n\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the necessary header\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look for the necessary library\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Extract version information from the header file\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create the imported target\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "CMake/patches/99/FindX11.cmake" : {
      "ObjectId" : "d24436235711c1806561f82a4f0fec48c76ac978",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nFindX11\n-------\n\nFind X11 installation\n\nTry to find X11 on UNIX systems. The following values are defined\n\n::\n\n  X11_FOUND        - True if X11 is available\n  X11_INCLUDE_DIR  - include directories to use X11\n  X11_LIBRARIES    - link against these to use X11\n\nand also the following more fine grained variables and targets:\n\n::\n\n  X11_ICE_INCLUDE_PATH,          X11_ICE_LIB,        X11_ICE_FOUND,        X11::ICE\n  X11_SM_INCLUDE_PATH,           X11_SM_LIB,         X11_SM_FOUND,         X11::SM\n  X11_X11_INCLUDE_PATH,          X11_X11_LIB,                              X11::X11\n  X11_Xaccessrules_INCLUDE_PATH,\n  X11_Xaccessstr_INCLUDE_PATH,                       X11_Xaccess_FOUND\n  X11_Xau_INCLUDE_PATH,          X11_Xau_LIB,        X11_Xau_FOUND,        X11::Xau\n  X11_Xcomposite_INCLUDE_PATH,   X11_Xcomposite_LIB, X11_Xcomposite_FOUND, X11::Xcomposite\n  X11_Xcursor_INCLUDE_PATH,      X11_Xcursor_LIB,    X11_Xcursor_FOUND,    X11::Xcursor\n  X11_Xdamage_INCLUDE_PATH,      X11_Xdamage_LIB,    X11_Xdamage_FOUND,    X11::Xdamage\n  X11_Xdmcp_INCLUDE_PATH,        X11_Xdmcp_LIB,      X11_Xdmcp_FOUND,      X11::Xdmcp\n  X11_Xext_INCLUDE_PATH,         X11_Xext_LIB,       X11_Xext_FOUND,       X11::Xext\n  X11_Xxf86misc_INCLUDE_PATH,    X11_Xxf86misc_LIB,  X11_Xxf86misc_FOUND,  X11::Xxf86misc\n  X11_Xxf86vm_INCLUDE_PATH,      X11_Xxf86vm_LIB     X11_Xxf86vm_FOUND,    X11::Xxf86vm\n  X11_Xfixes_INCLUDE_PATH,       X11_Xfixes_LIB,     X11_Xfixes_FOUND,     X11::Xfixes\n  X11_Xft_INCLUDE_PATH,          X11_Xft_LIB,        X11_Xft_FOUND,        X11::Xft\n  X11_Xi_INCLUDE_PATH,           X11_Xi_LIB,         X11_Xi_FOUND,         X11::Xi\n  X11_Xinerama_INCLUDE_PATH,     X11_Xinerama_LIB,   X11_Xinerama_FOUND,   X11::Xinerama\n  X11_Xkb_INCLUDE_PATH,\n  X11_Xkblib_INCLUDE_PATH,                           X11_Xkb_FOUND,        X11::Xkb\n  X11_xkbfile_INCLUDE_PATH,      X11_xkbfile_LIB,    X11_xkbfile_FOUND,    X11::xkbfile\n  X11_Xmu_INCLUDE_PATH,          X11_Xmu_LIB,        X11_Xmu_FOUND,        X11::Xmu\n  X11_Xpm_INCLUDE_PATH,          X11_Xpm_LIB,        X11_Xpm_FOUND,        X11::Xpm\n  X11_Xtst_INCLUDE_PATH,         X11_Xtst_LIB,       X11_Xtst_FOUND,       X11::Xtst\n  X11_Xrandr_INCLUDE_PATH,       X11_Xrandr_LIB,     X11_Xrandr_FOUND,     X11::Xrandr\n  X11_Xrender_INCLUDE_PATH,      X11_Xrender_LIB,    X11_Xrender_FOUND,    X11::Xrender\n  X11_XRes_INCLUDE_PATH,         X11_XRes_LIB,       X11_XRes_FOUND,       X11::XRes\n  X11_Xss_INCLUDE_PATH,          X11_Xss_LIB,        X11_Xss_FOUND,        X11::Xss\n  X11_Xt_INCLUDE_PATH,           X11_Xt_LIB,         X11_Xt_FOUND,         X11::Xt\n  X11_Xutil_INCLUDE_PATH,                            X11_Xutil_FOUND,      X11::Xutil\n  X11_Xv_INCLUDE_PATH,           X11_Xv_LIB,         X11_Xv_FOUND,         X11::Xv\n  X11_dpms_INCLUDE_PATH,         (in X11_Xext_LIB),  X11_dpms_FOUND\n  X11_XShm_INCLUDE_PATH,         (in X11_Xext_LIB),  X11_XShm_FOUND\n  X11_Xshape_INCLUDE_PATH,       (in X11_Xext_LIB),  X11_Xshape_FOUND\n  X11_XSync_INCLUDE_PATH,        (in X11_Xext_LIB),  X11_XSync_FOUND\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# X11 is never a framework and some header files may be\n\n# found in tcl on the mac\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Look for includes; keep the list sorted by name of the cmake *_INCLUDE_PATH\n\n# variable (which doesn't need to match the include file name).\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Solaris lacks XKBrules.h, so we should skip kxkbd there.\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Backwards compatibility.\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Find additional X libraries. Keep list sorted by library name.\n",
        "Line" : 136,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Backwards compatibility.\n",
        "Line" : 162,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# start with empty list\n",
        "Line" : 173,
        "CharPositionInLine" : 23
      },
      "9" : {
        "Text" : "# start with empty list\n",
        "Line" : 192,
        "CharPositionInLine" : 21
      },
      "10" : {
        "Text" : "# Backwards compatibility.\n",
        "Line" : 257,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# Backwards compatibility.\n",
        "Line" : 264,
        "CharPositionInLine" : 5
      },
      "12" : {
        "Text" : "# Backwards compatibility.\n",
        "Line" : 296,
        "CharPositionInLine" : 5
      },
      "13" : {
        "Text" : "# Backwards compatibility.\n",
        "Line" : 303,
        "CharPositionInLine" : 5
      },
      "14" : {
        "Text" : "# Backwards compatibility.\n",
        "Line" : 331,
        "CharPositionInLine" : 5
      },
      "15" : {
        "Text" : "# Most of the X11 headers will be in the same directories, avoid\n\n# creating a huge list of duplicates.\n",
        "Line" : 354,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Deprecated variable for backwards compatibility with CMake 1.4\n",
        "Line" : 360,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Translated from an autoconf-generated configure script.\n\n# See libs.m4 in autoconf's m4 directory.\n",
        "Line" : 374,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# See if XOpenDisplay in X11 works by itself.\n",
        "Line" : 381,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# Find library needed for dnet_ntoa.\n",
        "Line" : 384,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# Find library needed for gethostbyname.\n",
        "Line" : 396,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# Find library needed for connect.\n",
        "Line" : 410,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "# Find library needed for remove.\n",
        "Line" : 419,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "# Find library needed for shmat.\n",
        "Line" : 428,
        "CharPositionInLine" : 6
      },
      "24" : {
        "Text" : "# Build the final list of libraries.\n",
        "Line" : 449,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# libX11 contains the implementations for functions in the Xutil.h\n\n# header.\n",
        "Line" : 651,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 26
    },
    "CMake/vtkAndroid.cmake" : {
      "ObjectId" : "008515fd4f28d9226c9e87e2077d3f5f0cbbf427",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Instructions:\n\n# 1. Download and install the Android NDK.\n\n# 2. Run ccmake -DVTK_ANDROID_BUILD=ON /path/to/vtk/source\n\n# 3. Set ANDROID_NDK to be the path to the NDK. (/opt/android-ndk by default)\n\n# 4. Set API level and architecture.\n\n# 5. Generate and make\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Convenience variables\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Android options\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# find android\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#find ant\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Fail if the install path is invalid\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# make sure we have a CTestCustom.cmake file\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Compile a minimal VTK for its compile tools\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Hide some CMake configs from the user\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Now cross-compile VTK with the android toolchain\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Having issues getting the test to run after some\n\n# changes on the device we use for testing\n\n#\n\n# add_test(NAME AndroidNative\n\n#     WORKING_DIRECTORY ${vtk_android_build_dir}/Examples/Android/NativeVTK/bin\n\n#     COMMAND ${CMAKE_COMMAND}\n\n#     -DWORKINGDIR=${vtk_android_build_dir}/Examples/Android/NativeVTK/bin\n\n#     -P ${CMAKE_CURRENT_SOURCE_DIR}/Examples/Android/NativeVTK/runtest.cmake\n\n#   )\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "CMake/vtkApple.cmake" : {
      "ObjectId" : "afcda0a7e374101a0dbcf8a429f844f65611ac35",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Objective-C++ compile flags.\n\n# CMake has no equivalent of CMAKE_CXX_FLAGS for Objective-C++ (bug #4756)\n\n# so we provide this in case the user needs to specify flags specifically\n\n# for Objective-C++ source files.  For example, to build with garbage\n\n# collection support, the -fobjc-gc flag would be used.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/vtkBuildPath.cmake" : {
      "ObjectId" : "84fbbb1bd2b97fb22ec213daf90a4dd4563bbdd9",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Attempt to build up the path/ld_library_path/python path needed to run VTK.\n\n# On Windows simply executing the .bat file should be enough, on Linux/Mac the\n\n# file can be sourced in the shell. You can also copy and paste the relevant\n\n# parts into other files if preferred.\n\n#\n\n# Note: Now only setting the path to the latest configuration used (for MSVC/Xcode)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the script file name\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# FOR THE PATH VARIABLE\n\n# replace the path to the executables\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# replace the name of the platform-specific path environment variable\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# FOR THE PYTHONPATH VARIABLE, if PYTHON is wrapped\n\n# replace the path to the python-specific files\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# replace pathvar by PYTHONPATH\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# apped the line to the file\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# write to file\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "CMake/vtkCMakeBackports.cmake" : {
      "ObjectId" : "e857e20d98fc9156b3c32e989d80ed5805333299",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/vtkCompilerChecks.cmake" : {
      "ObjectId" : "ff93cf715fbe70000cec155ecc1daf98ec94c9a6",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Minimum compiler version check: GCC >= 4.8\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Minimum compiler version check: LLVM Clang >= 3.3\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Minimum compiler version check: Apple Clang >= 5.0 (Xcode 5.0)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Minimum compiler version check: Microsoft C/C++ >= 19.0 (aka VS 2015)\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Minimum compiler version check: Intel C++ (ICC) >= 14\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Make sure we have C++11 enabled.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Needed to make sure libraries and executables not built by the\n\n# vtkModuleMacros still have the C++11 compiler flags enabled\n\n# Wrap this in an escape hatch for unknown compilers\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "CMake/vtkCompilerDynamicAnalysisFlags.cmake" : {
      "ObjectId" : "377ffbed16ac7c5d456f672db35c27d243e4c11c",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Determine if this is a sanitizer build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a sanitizer build.\n\n# Configure the sanitizer blacklist file\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Add the compiler flags for blacklist\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "CMake/vtkCompilerExtraFlags.cmake" : {
      "ObjectId" : "67ea36fcdb81f60e14d5d55f7c60f6110f3e9df7",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Additional warnings for GCC\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# This flag is useful as not returning from a non-void function is an error\n\n# with MSVC, but it is not supported on all GCC compiler versions\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# If we are compiling on Linux then set some extra linker flags too\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Set up the debug CXX_FLAGS for extra warnings\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "CMake/vtkCompilerPlatformFlags.cmake" : {
      "ObjectId" : "c505ecfa9f9cd1a451bbfd6aa676e9ce50000f94",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# make sure Crun is linked in with the native compiler, it is\n\n# not used by default for shared libraries and is required for\n\n# things like java to work.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# A GCC compiler.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The platform is gcc on cygwin.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Disable warnings that occur in X11 headers.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# allow t-ypeid and d-ynamic_cast usage (normally off by default on xlC)\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# silence duplicate symbol warnings on AIX\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# figure out whether the compiler might be the Intel compiler\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#if so, test whether -i_dynamic is needed\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# --diag_suppress=236 is for constant value asserts used for error handling\n\n# This can be restricted to the implementation and doesn't need to propagate\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# --diag_suppress=381 is for redundant semi-colons used in macros\n\n# This needs to propagate to anything that includes VTK headers\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Use the highest warning level for visual c++ compiler.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Disable deprecation warnings for standard C and STL functions in VS2015+\n\n# and later\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Enable /MP flag for Visual Studio\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add compiler flags VTK needs to work on this platform.  This must be\n\n# done after the call to CMAKE_EXPORT_BUILD_SETTINGS, but before any\n\n# try-compiles are done.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "CMake/vtkCrossCompiling.cmake" : {
      "ObjectId" : "00ce16fff984aa74b7b7bc103dbf25c6f5ff0f29",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# if CMAKE_CROSSCOMPILING is true and crosscompiling emulator is not available, we need\n\n# to import build-tools targets.\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "CMake/vtkDetectLibraryType.cmake" : {
      "ObjectId" : "ce69cd81f93c30fb30686f9d3cd5f5237e343b54",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Windows libraries all end with `.lib`. We need to detect the type based on\n\n# the contents of the library. However, MinGW does use different extensions.\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "CMake/vtkDirectories.cmake" : {
      "ObjectId" : "f12fb0f0e16115c7b638ca5e3aea167dc1d01133",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# VTK installation structure\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMAKE_INSTALL_DOCDIR already includes PROJECT_NAME, which is not what we want\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set up our directory structure for output libraries and binaries\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMake/vtkDownload.cmake" : {
      "ObjectId" : "9bc9d2291699bff5d1945f0d8a0a3469058ad7ad",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Forbid downloading resources from the network during a build. This helps\n\n# when building on systems without network connectivity to determine which\n\n# resources much be obtained manually and made available to the build.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/vtkEncodeString.cmake" : {
      "ObjectId" : "ea012ca679e2f3acef4a43980a41b45916297f51",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#[==[.md\n# vtkEncodeString\n\nThis module contains the `vtk_encode_string` function which may be used to turn\na file into a C string. This is primarily used within a program so that the\ncontent does not need to be retrieved from the filesystem at runtime, but can\nstill be developed as a standalone file.\n#]==]",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[==[.md\n# `vtk_encode_string`\n\nAdds a rule to turn a file into a C string. Note that any Unicode characters\nwill not be replaced with escaping, so it is recommended to avoid their usage\nin the input.\n\n```\nvtk_encode_string\n  INPUT           <input>\n  [NAME           <name>]\n  [EXPORT_SYMBOL  <symbol>]\n  [EXPORT_HEADER  <header>]\n  [HEADER_OUTPUT  <variable>]\n  [SOURCE_OUTPUT  <variable>]\n  [BINARY] [NUL_TERMINATE])\n```\n\nThe only required variable is `INPUT`, however, it is likely that at least one\nof `HEADER_OUTPUT` or `SOURCE_OUTPUT` will be required to add them to a\nlibrary.\n\n  * `INPUT`: (Required) The path to the file to be embedded. If a relative path\n    is given, it will be interpreted as being relative to\n    `CMAKE_CURRENT_SOURCE_DIR`.\n  * `NAME`: This is the base name of the files that will be generated as well\n    as the variable name for the C string. It defaults to the basename of the\n    input without extensions.\n  * `EXPORT_SYMBOL`: The symbol to use for exporting the variable. By default,\n    it will not be exported. If set, `EXPORT_HEADER` must also be set.\n  * `EXPORT_HEADER`: The header to include for providing the given export\n    symbol. If set, `EXPORT_SYMBOL` should also be set.\n  * `HEADER_OUTPUT`: The variable to store the generated header path.\n  * `SOURCE_OUTPUT`: The variable to store the generated source path.\n  * `BINARY`: If given, the data will be written as an array of `unsigned char`\n    bytes.\n  * `NUL_TERMINATE`: If given, the binary data will be `NUL`-terminated. Only\n    makes sense with the `BINARY` flag. This is intended to be used if\n    embedding a file as a C string exceeds compiler limits on string literals\n    in various compilers.\n#]==]",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Hard line wrap the file.\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Remove the leading comma.\n",
        "Line" : 177,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Escape literal backslashes.\n",
        "Line" : 187,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Escape literal double quotes.\n",
        "Line" : 189,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Turn newlines into newlines in the C string.\n",
        "Line" : 191,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "CMake/vtkExternalData.cmake" : {
      "ObjectId" : "ecf9ba925061bcdb2c337679cddc23d0973a5630",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Select a default from the following.\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Configuration left by developer setup script.\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Adjacent directory created by user.\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Generic adjacent directory created by user.\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# The VTKExternalData environment variable.\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Generic ExternalData environment variable.\n",
        "Line" : 22,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Provide users with an option to select a local object store,\n\n# starting with the above-selected default.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Use a store in the build tree if none is otherwise configured.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Tell ExternalData module about selected object stores.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Store selected by VTK-specific configuration above.\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Local data store populated by the VTK pre-commit hook\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Data published by Girder\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Data published by developers using git-gitlab-push.\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Tell ExternalData commands to transform raw files to content links.\n\n# TODO: Condition this feature on presence of our pre-commit hook.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Match series of the form <base>.<ext>, <base>_<n>.<ext> such that <base> may\n\n# end in a (test) number that is not part of any series numbering.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Dashboard builds always need data.\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Configuration left by developer setup script.\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 17
    },
    "CMake/vtkGhostscript.cmake" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/vtkHashSource.cmake" : {
      "ObjectId" : "b16a35e6e9d3b6e81ab6ec7f0072cbd7047d9524",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#[==[.md\n# vtkHashSource\n\nThis module contains the `vtk_hash_source` function which may be used to\ngenerate a hash from a file and place that in a generated header.\n#]==]",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[==[.md\n# `vtk_hash_source`\n\nAdd a rule to turn a file into a MD5 hash and place that in a C string.\n\n```\nvtk_hash_source(\n  INPUT          <input>\n  [NAME          <name>]\n  [ALGORITHM     <algorithm>]\n  [HEADER_OUTPUT <header>])\n```\n\nThe only required variable is `INPUT`.\n\n  * `INPUT`: (Required) The path to the file to process. If a relative path\n    is given, it will be interpreted as being relative to\n    `CMAKE_CURRENT_SOURCE_DIR`.\n  * `NAME`: This is the base name of the header file that will be generated as\n    well as the variable name for the C string. It defaults to basename of the\n    input suffixed with `Hash`.\n  * `ALGORITHM`: This is the hashing algorithm to use. Supported values are\n    MD5, SHA1, SHA224, SHA256, SHA384, and SHA512. If not specified, MD5 is assumed.\n  * `HEADER_OUTPUT`: the variable to store the generated header path.\n#]==]",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/vtkInitializeBuildType.cmake" : {
      "ObjectId" : "0c720a2f85540dc80434db6ebe44793f64403070",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set a default build type if none was specified\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the possible values of build type for cmake-gui\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "CMake/vtkInstallCMakePackage.cmake" : {
      "ObjectId" : "632013d82b82ae9b67d1131d6386bea0f42ba8ee",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: Build up a list of prefix paths to add.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For convenience, a package is written to the top of the build tree. At some\n\n# point, this should probably be deprecated and warn when it is used.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/vtkInstallCMakePackageCompileTools.cmake" : {
      "ObjectId" : "c8ae0ae649d2b9f4354d3caf6b50896b51f04c7e",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For convenience, a package is written to the top of the build tree. At some\n\n# point, this should probably be deprecated and warn when it is used.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/vtkMobileDevices.cmake" : {
      "ObjectId" : "fdb57c6edff47e38b2d08622a1c6f5c9a91f828e",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# some specific defaults for Android to give folks\n\n# a reasonable starting point\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Choose static or shared libraries.\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "CMake/vtkModule.cmake" : {
      "ObjectId" : "efa07df67a0d876a22c8ec0963472e9bfbf03fe3",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#[==[.md\n# `vtkModule`\n\nThis module includes functions to find and build VTK modules. A module is a set\nof related functionality. These are then compiled together into libraries at\nthe \"kit\" level. Each module may be enabled or disabled individually and its\ndependencies will be built as needed.\n#]==]",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[==[.md INTERNAL\n# `vtkModule` internals\n\nThe VTK module system provides some API functions for use by other code which\nconsumes VTK modules (primarily language wrappers). This file documents these\nAPIs. They may start with `_vtk_module`, but they are intended for use in cases\nof language wrappers or dealing with trickier third party packages.\n#]==]",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO: Support finding `vtk.module` and `vtk.kit` contents in the\n\n# `CMakeLists.txt` files for the module via a comment header.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#[==[.md\n## Finding modules and kits\n\nThe first step to building modules involves finding their metadata files. These\nare files named `vtk.kit` and `vtk.module` within the source tree next to the\nassociated `CMakeLists.txt` file for the module (for modules). `vtk.kit` files\nare standalone.\n\nIn order to find these files, two functions are available:\n\n```\nvtk_module_find_kits(<output> [<directory>...])\nvtk_module_find_modules(<output> [<directory>...])\n```\n\nThese scan the given directories for the files of the associated name and put\nthe paths into the output variable.\n#]==]",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#[==[.md INTERNAL\n## Splitting a module name\n\nModule names may include a namespace. This function splits the name into a\nnamespace and target name part.\n\n```\n_vtk_module_split_module_name(<NAME> <PREFIX>)\n```\n\nThe `<PREFIX>_NAMESPACE` and `<PREFIX>_TARGET_NAME` variables will be set in\nthe calling scope.\n#]==]",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#[==[.md\n## Module files\n\nThe `vtk.module` file is parsed and used as arguments to a CMake function which\nstores information about the module for use when building it. Note that no\nvariable expansion is allowed and it is not CMake code, so no control flow is\nallowed. Comments are supported and any content after a `#` on a line is\ntreated as a comment. Due to the breakdown of the content, quotes are not\nmeaningful within the files.\n\nExample:\n\n```\nNAME\n  VTK::CommonCore\nLIBRARY_NAME\n  vtkCommonCore\nDESCRIPTION\n  The base VTK library.\nGROUPS\n  StandAlone\nDEPENDS\n  vtkkwiml\nPRIVATE_DEPENDS\n  vtksys\n  vtkutf8\n```\n\nAll values are optional unless otherwise noted. The following arguments are\nsupported:\n\n  * `NAME`: (Required) The name of the module.\n  * `LIBRARY_NAME`: The base name of the library file. It defaults to the\n    module name, but any namespaces are removed. For example, a `NS::Foo`\n    module will have a default `LIBRARY_NAME` of `Foo`.\n  * `DESCRIPTION`: (Recommended) Short text describing what the module is for.\n  * `KIT`: The name of the kit the module belongs to (see `Kits files` for more\n    information).\n  * `IMPLEMENTABLE`: If present, the module contains logic which supports the\n    autoinit functionality.\n  * `GROUPS`: Modules may belong to \"groups\" which is exposed as a build\n    option. This allows for enabling a set of modules with a single build\n    option.\n  * `CONDITION`: Arguments to CMake's `if` command which may be used to hide\n    the module for certain platforms or other reasons. If the expression is\n    false, the module is completely ignored.\n  * `DEPENDS`: A list of modules which are required by this module and modules\n    using this module.\n  * `PRIVATE_DEPENDS`: A list of modules which are required by this module, but\n    not by those using this module.\n  * `OPTIONAL_DEPENDS`: A list of modules which are used by this module if\n    enabled; these are treated as `PRIVATE_DEPENDS` if they exist.\n  * `IMPLEMENTS`: A list of modules for which this module needs to register\n    with.\n  * `TEST_DEPENDS`: Modules required by the test suite for this module.\n  * `TEST_OPTIONAL_DEPENDS`: Modules used by the test suite for this module if\n    available.\n  * `TEST_LABELS`: Labels to apply to the tests of this module. By default, the\n    module name is applied as a label.\n  * `EXCLUDE_WRAP`: If present, this module should not be wrapped in any\n    language.\n  * `THIRD_PARTY`: If present, this module is a third party module.\n#]==]",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#[==[.md\n## Kit files\n\nThe `vtk.kit` file is parsed similarly to `vtk.module` files. Kits are intended\nto bring together related modules into a single library in order to reduce the\nnumber of objects that linkers need to deal with.\n\nExample:\n\n```\nNAME\n  vtkCommonKit\nDESCRIPTION\n  Core utilities for VTK.\n```\n\nAll values are optional unless otherwise noted. The following arguments are\nsupported:\n\n  * `NAME`: (Required) The name of the kit.\n  * `LIBRARY_NAME`: The base name of the library file. It defaults to the\n    module name, but any namespaces are removed. For example, a `NS::Foo`\n    module will have a default `LIBRARY_NAME` of `Foo`.\n  * `DESCRIPTION`: (Recommended) Short text describing what the kit contains.\n#]==]",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#[==[.md\n## Enable values\n\nModules and groups are enable and disable preferences are specified using a\n5-way flag setting:\n\n  - `YES`: The module or group must be built.\n  - `NO`: The module or group must not be built.\n  - `WANT`: The module or group should be built if possible.\n  - `DONT_WANT`: The module or group should only be built if required (e.g.,\n    via a dependency).\n  - `DEFAULT`: Acts as either `WANT` or `DONT_WANT` based on the group settings\n    for the module or `WANT_BY_DEFAULT` option to `vtk_module_scan` if no other\n    preference is specified. This is usually handled via another setting in the\n    main project.\n\nIf a `YES` module preference requires a module with a `NO` preference, an error\nis raised.\n\nA module with a setting of `DEFAULT` will look for its first non-`DEFAULT`\ngroup setting and only if all of those are set to `DEFAULT` is the\n`WANT_BY_DEFAULT` setting used.\n#]==]",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#[==[.md\n## Scanning modules and kits\n\nOnce all of the modules and kits have been found, they are scanned to determine\nwhat modules are enabled or required.\n\n```\nvtk_module_scan(\n  MODULE_FILES              <file>...\n  [KIT_FILES                <file>...]\n  PROVIDES_MODULES          <variable>\n  [PROVIDES_KITS            <variable>]\n  [REQUIRES_MODULES         <variable>]\n  [REQUEST_MODULES          <module>...]\n  [REJECT_MODULES           <module>...]\n  [UNRECOGNIZED_MODULES     <variable>]\n  [WANT_BY_DEFAULT          <ON|OFF>]\n  [HIDE_MODULES_FROM_CACHE  <ON|OFF>]\n  [ENABLE_TESTS             <ON|OFF|WANT|DEFAULT>])\n```\n\nThe `MODULE_FILES` and `PROVIDES_MODULES` arguments are required. Modules which\nrefer to kits must be scanned at the same time as their kits. This is so that\nmodules may not add themselves to kits declared prior. The arguments are as follows:\n\n  * `MODULE_FILES`: (Required) The list of module files to scan.\n  * `KIT_FILES`: The list of kit files to scan.\n  * `PROVIDES_MODULES`: (Required) This variable will contain the list of\n    modules which are enabled due to this scan.\n  * `PROVIDES_KITS`: (Required if `KIT_FILES` are provided) This variable will\n    contain the list of kits which are enabled due to this scan.\n  * `REQUIRES_MODULES`: This variable will contain the list of modules required\n    by the enabled modules that were not scanned.\n  * `REQUEST_MODULES`: The list of modules required by previous scans.\n  * `REJECT_MODULES`: The list of modules to exclude from the scan. If any of\n    these modules are required, an error will be raised.\n  * `UNRECOGNIZED_MODULES`: This variable will contain the list of requested\n    modules that were not scanned.\n  * `WANT_BY_DEFAULT`: (Defaults to `OFF`) Whether modules should default to\n    being built or not.\n  * `HIDE_MODULES_FROM_CACHE`: (Defaults to `OFF`) Whether or not to hide the\n    control variables from the cache or not. If enabled, modules will not be\n    built unless they are required elsewhere.\n  * `ENABLE_TESTS`: (Defaults to `WANT`) Whether or not modules required by\n    the tests for the scanned modules should be enabled or not.\n    - `ON`: Modules listed as `TEST_DEPENDS` will be required.\n    - `OFF`: Test modules will not be considered.\n    - `WANT`: Test dependencies will enable modules if possible.\n    - `DEFAULT`: Test modules will be enabled if their required dependencies\n      are satisfied and skipped otherwise.\n\n### Scanning multiple groups of modules\n\nWhen scanning complicated projects, multiple scans may be required to get\ndefaults set properly. The `REQUIRES_MODULES`, `REQUEST_MODULES`, and\n`UNRECOGNIZED_MODULES` arguments are meant to deal with this case. As an\nexample, imagine a project with its source code, third party dependencies, as\nwell as some utility modules which should only be built as necessary. Here, the\nproject would perform three scans, one for each \"grouping\" of modules:\n\n```cmake\n# Scan our modules first because we need to know what of the other groups we\n# need.\nvtk_module_find_modules(our_modules \"${CMAKE_CURRENT_SOURCE_DIR}/src\")\nvtk_module_scan(\n  MODULE_FILES      ${our_modules}\n  PROVIDES_MODULES  our_enabled_modules\n  REQUIRES_MODULES  required_modules)\n\n# Scan the third party modules, requesting only those that are necessary, but\n# allowing them to be toggled during the build.\nvtk_module_find_modules(third_party_modules \"${CMAKE_CURRENT_SOURCE_DIR}/third-party\")\nvtk_module_scan(\n  MODULE_FILES            ${third_party_modules}\n  PROVIDES_MODULES        third_party_enabled_modules\n  # These modules were requested by an earlier scan.\n  REQUEST_MODULES         ${required_modules}\n  REQUIRES_MODULES        required_modules\n  UNRECOGNIZED_MODULES    unrecognized_modules)\n\n# These modules are internal and should only be built if necessary. There's no\n# need to support them being enabled independently, so hide them from the\n# cache.\nvtk_module_find_modules(utility_modules \"${CMAKE_CURRENT_SOURCE_DIR}/utilities\")\nvtk_module_scan(\n  MODULE_FILES            ${utility_modules}\n  PROVIDES_MODULES        utility_enabled_modules\n  # These modules were either requested or unrecognized by an earlier scan.\n  REQUEST_MODULES         ${required_modules}\n                          ${unrecognized_modules}\n  REQUIRES_MODULES        required_modules\n  UNRECOGNIZED_MODULES    unrecognized_modules\n  HIDE_MODULES_FROM_CACHE ON)\n\nif (required_modules OR unrecognized_modules)\n  # Not all of the modules we required were found. This should probably error out.\nendif ()\n```\n#]==]",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Replace comments.\n",
        "Line" : 471,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Use argument splitting.\n",
        "Line" : 473,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Set properties for building.\n",
        "Line" : 480,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Read all of the module files passed in.\n",
        "Line" : 496,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Replace comments.\n",
        "Line" : 503,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Use argument splitting.\n",
        "Line" : 505,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Determine whether we should provide a user-visible option for this\n\n# module.\n",
        "Line" : 509,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Rejected modules should not have a build option.\n",
        "Line" : 529,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Handle cache entries and determine the enabled state of the module from\n\n# the relevant cache variables.\n",
        "Line" : 536,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Check the state of any groups the module belongs to.\n",
        "Line" : 552,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# Determine the state of the group.\n",
        "Line" : 574,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# Check if the module is visible. Modules which have a failing condition\n\n# are basically invisible.\n",
        "Line" : 595,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Set properties for building.\n",
        "Line" : 644,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Seed the `_vtk_scan_provide_` variables with modules requested and rejected\n\n# as arguments.\n",
        "Line" : 699,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Traverse the graph classifying the quad-state for enabling modules into a\n\n# boolean stored in the `_vtk_scan_provide_` variables.\n",
        "Line" : 708,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Already done.\n",
        "Line" : 717,
        "CharPositionInLine" : 6
      },
      "25" : {
        "Text" : "# Mark enabled modules as to-be-provided. Any errors with requiring a\n\n# disabled module will be dealt with later.\n",
        "Line" : 719,
        "CharPositionInLine" : 6
      },
      "26" : {
        "Text" : "# Check to see if we can provide this module by checking of any of its\n\n# dependencies have been disabled.\n",
        "Line" : 723,
        "CharPositionInLine" : 6
      },
      "27" : {
        "Text" : "# If the tests have to be on, we also need the test dependencies.\n",
        "Line" : 727,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# Check for disabled dependencies and disable if so.\n",
        "Line" : 739,
        "CharPositionInLine" : 6
      },
      "29" : {
        "Text" : "# Disable the module.\n",
        "Line" : 747,
        "CharPositionInLine" : 6
      },
      "30" : {
        "Text" : "# Collect disabled modules into a list.\n",
        "Line" : 751,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# Scan all modules from the top of tree to the bottom.\n",
        "Line" : 758,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# If we're providing this module...\n",
        "Line" : 766,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# Grab any test dependencies that are required.\n",
        "Line" : 771,
        "CharPositionInLine" : 6
      },
      "34" : {
        "Text" : "# Nothing to do.\n",
        "Line" : 790,
        "CharPositionInLine" : 10
      },
      "35" : {
        "Text" : "# Add all dependent modules to the list of required or provided modules.\n",
        "Line" : 797,
        "CharPositionInLine" : 6
      },
      "36" : {
        "Text" : "# Though we need to error if this would cause a disabled module to be\n\n# provided.\n",
        "Line" : 804,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# Build a list of kits which contain the provided modules.\n",
        "Line" : 836,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "#[==[.md\n## Module-as-target functions\n\nDue to the nature of VTK modules supporting being built as kits, the module\nname might not be usable as a target to CMake's `target_` family of commands.\nInstead, there are various wrappers around them which take the module name as\nan argument. These handle the forwarding of relevant information to the kit\nlibrary as well where necessary.\n#]==]",
        "Line" : 888,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#[==[.md INTERNAL\n## Module target internals\n\nWhen manipulating modules as targets, there are a few functions provided for\nuse in wrapping code to more easily access them.\n#]==]",
        "Line" : 898,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#[==[.md INTERNAL\n### The real target for a module\n\nSometimes the actual, core target for a module is required (e.g., setting\nCMake-level target properties or install rules). The `_vtk_module_real_target`\nfunction finds the real target for a module. This only works for modules which\nare built in the current tree.\n#]==]",
        "Line" : 905,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Querying during the build.\n",
        "Line" : 922,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# A query for after the module is built.\n",
        "Line" : 929,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "#[==[.md\n### Properties\n\nProperties may be set or queried using the `vtk_module_set_property` and\n`vtk_module_get_property` functions.\n\n```\nvtk_module_set_properties(<module>\n  [<property> <value>]...)\n```\n\n```\nvtk_module_set_property(<module>\n  [APPEND] [APPEND_STRING]\n  PROPERTY  <property>\n  VALUE     <value>)\n```\n\n```\nvtk_module_get_property(<module>\n  PROPERTY  <property>\n  VARIABLE  <variable>)\n```\n\nThe variable name passed to the `VARIABLE` argument will be unset if the\nproperty is not set (rather than the empty string).\n#]==]",
        "Line" : 944,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#[==[.md\n### Adding dependencies\n\nAdds dependencies to a module target. Use instead of CMake's\n`add_dependencies`.\n\n```\nvtk_module_depend(<module> <depend>...)\n```\n#]==]",
        "Line" : 1080,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#[==[.md\n### Include directories\n\nAdds include directories to a module target. Use instead of CMake's\n`target_include_directories`.\n\n```\nvtk_module_include(<module>\n  [SYSTEM]\n  [PUBLIC     <directory>...]\n  [PRIVATE    <directory>...]\n  [INTERFACE  <directory>...])\n```\n#]==]",
        "Line" : 1097,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#[==[.md\n### Compile definitions\n\nAdds compile definitions to a module target. Use instead of CMake's\n`target_compile_definitions`.\n\n```\nvtk_module_definitions(<module>\n  [PUBLIC     <directory>...]\n  [PRIVATE    <directory>...]\n  [INTERFACE  <directory>...])\n```\n#]==]",
        "Line" : 1139,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#[==[.md\n### Compile options\n\nAdds compile options to a module target. Use instead of CMake's\n`target_compile_options`.\n\n```\nvtk_module_compile_options(<module>\n  [PUBLIC     <directory>...]\n  [PRIVATE    <directory>...]\n  [INTERFACE  <directory>...])\n```\n#]==]",
        "Line" : 1174,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#[==[.md\n### Compile features\n\nAdds compile features to a module target. Use instead of CMake's\n`target_compile_features`.\n\n```\nvtk_module_compile_features(<module>\n  [PUBLIC     <directory>...]\n  [PRIVATE    <directory>...]\n  [INTERFACE  <directory>...])\n```\n#]==]",
        "Line" : 1209,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "#[==[.md\n### Linking libraries\n\nAdds link libraries to a module target. Use instead of CMake's\n`target_link_libraries`.\n\n```\nvtk_module_link(<module>\n  [PUBLIC     <directory>...]\n  [PRIVATE    <directory>...]\n  [INTERFACE  <directory>...])\n```\n#]==]",
        "Line" : 1244,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# TODO: Issue a warning.\n",
        "Line" : 1278,
        "CharPositionInLine" : 8
      },
      "51" : {
        "Text" : "#[==[.md\n### Linking options\n\nAdds link options to a module target. Use instead of CMake's\n`target_link_options`.\n\n```\nvtk_module_link_options(<module>\n  [PUBLIC     <directory>...]\n  [PRIVATE    <directory>...]\n  [INTERFACE  <directory>...])\n```\n#]==]",
        "Line" : 1307,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "#[==[.md INTERNAL\n## VTK module properties\n\nThe VTK module system leverages CMake's target propagation and storage. As\nsuch, there are a number of properties added to the targets representing\nmodules. These properties are intended for use by the module system and\nassociated functionality. In particular, more properties may be available by\nlanguage wrappers.\n\n### Naming properties\n\nWhen creating properties for use with the module system, they should be\nprefixed with `INTERFACE_vtk_module_`. The `INTERFACE_` portion is required in\norder to work with interface libraries. The `vtk_module_` portion is to avoid\ncolliding with any other properties. This function assumes this naming scheme\nfor some of its convenience features as well.\n\nProperties should be the same in the local build as well as when imported to\nease use.\n\n### VTK module system properties\n\nThere are a number of properties that are used and expected by the core of the\nmodule system. These are generally module metadata (module dependencies,\nwrappability, etc.). The properties all have the `INTERFACE_vtk_module_` prefix\nmentioned in the previous section.\n\n  * `third_party`: If set, the module represents a third party\n    dependency and should be treated specially. Third party modules are very\n    restricted and generally do not have any other properties set on them.\n  * `exclude_wrap`: If set, the module should not be wrapped by an external\n    language.\n  * `depends`: The list of dependent modules. Language wrappers will generally\n    require this to satisfy references to parent classes of the classes in the\n    module.\n  * `implements`: The list of modules for which this module registers to. This\n    is used by the autoinit subsystem and generally is not required.\n  * `implementable`: If set, this module provides registries which may be\n    populated by dependent modules. It is used to check the `implements`\n    property to help minimize unnecessary work from the autoinit subsystem.\n  * `needs_autoinit`: If set, linking to this module requires the autoinit\n    subsystem to ensure that registries in modules are fully populated.\n  * `headers`: Paths to the public headers from the module. These are the\n    headers which should be handled by language wrappers.\n  * `hierarchy`: The path to the hierarchy file describing inheritance of the\n    classes for use in language wrappers.\n  * `forward_link`: Usage requirements that must be forwarded even though the\n    module is linked to privately.\n\nIn order to add new module properties to a module, the\n`_vtk_module_set_module_property` function should be used. This works for\nmodules built as part of the current project or imported module targets. The\n`INTERFACE_vtk_module_` prefix will automatically be added.\n\n```\n_vtk_module_set_module_property(<module>\n  [APPEND] [APPEND_STRING]\n  PROPERTY  <property>\n  VALUE     <value>)\n```\n\nThe `_vtk_module_get_module_property` function should be used to query these.\nThis works for modules built as part of the current project or imported module\ntargets.\n\n```\n_vtk_module_get_module_property(<module>\n  PROPERTY  <property>\n  VARIABLE  <variable>)\n```\n\nAs with `vtk_module_get_property`, the output variable will be unset if the\nproperty is not set. The property name is automatically prepended with\n`INTERFACE_vtk_module_`.\n\n### Exporting properties\n\nThe `_vtk_module_export_properties` function is intended for use in support\nfunctions which leverage the module system, not by general system users. This\nfunction supports exporting properties from the build into dependencies via\ntarget properties which are loaded from a project's config file which is loaded\nvial CMake's `find_package` function.\n\n```\n_vtk_module_export_properties(\n  MODULE        <module>\n  BUILD_FILE    <path>\n  INSTALL_FILE  <path>\n  [PROPERTIES               <property>...]\n  [FROM_GLOBAL_PROPERTIES   <property fragment>...]\n  [SPLIT_INSTALL_PROPERTIES <property fragment>...])\n```\n\nThe `MODULE`, `BUILD_FILE`, and `INSTALL_FILE` arguments are required. The\n`MODULE` argument holds the name of the module that will have properties\nexported. The `BUILD_FILE` and `INSTALL_FILE` paths are *appended to*. As such,\nwhen setting up these files, it should be preceded with:\n\n```cmake\nfile(WRITE \"${build_file}\")\nfile(WRITE \"${install_file}\")\n```\n\nTo avoid accidental usage of the install file from the build tree, it is\nrecommended to store it under a `CMakeFiles/` directory in the build tree.\n\nThe set of properties exported is computed as follows:\n\n  * `PROPERTIES` queries the module target for the given property and exports\n    its value as-is to both the build and install files. In addition, these\n    properties are set on the target directly as the same name.\n  * `FROM_GLOBAL_PROPERTIES` queries the global\n    `_vtk_module_<MODULE>_<fragment>` property and exports it to both the build\n    and install files as `INTERFACE_vtk_module_<fragment>`.\n  * `SPLIT_INSTALL_PROPERTIES` queries the target for\n    `INTERFACE_vtk_module_<fragment>` and exports its value to the build file\n    and `INTERFACE_vtk_module_<fragment>_install` to the install file as the\n    non-install property name. This is generally useful for properties which\n    change between the build and installation.\n\nThe usage of this function is usually predicated by setting up paths for\nwriting the properties to.\n\nThere is the associated function `_vtk_module_write_import_prefix` as well.\nThis function is intended for prepending an import prefix computation to the\ninstall file so that the install root can be discovered from the installed\nfile's location. This function is called as:\n\n```\n_vtk_module_write_import_prefix(<file> <destination>)\n```\n\nThe prefix is available as the `_vtk_module_import_prefix` variable and may be\nused in property values which require it.\n#]==]",
        "Line" : 1342,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# XXX(namespaces): Use the target name of the module.\n",
        "Line" : 1634,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# XXX(namespaces): Use the target name of the module.\n",
        "Line" : 1659,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# XXX(namespaces): Use the target name of the module.\n",
        "Line" : 1681,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# XXX(namespaces): Use the target name of the module.\n",
        "Line" : 1690,
        "CharPositionInLine" : 4
      },
      "57" : {
        "Text" : "#[==[.md\n## Building modules\n\nOnce all of the modules have been scanned, they need to be built. Generally,\nthere will be just one build necessary for a set of scans, though they may be\nbuilt distinctly as well, but generally in reverse order of their scans.\n\n```\nvtk_module_build(\n  MODULES       <module>...\n  [KITS          <kit>...]\n\n  [LIBRARY_NAME_SUFFIX  <suffix>]\n  [VERSION              <version>]\n  [SOVERSION            <soversion>]\n\n  [PACKAGE              <package>]\n\n  [BUILD_WITH_KITS  <ON|OFF>]\n\n  [USE_EXTERNAL <ON|OFF>]\n\n  [INSTALL_HEADERS    <ON|OFF>]\n  [HEADERS_COMPONENT  <component>]\n\n  [TARGETS_COMPONENT  <component>]\n  [INSTALL_EXPORT     <export>]\n\n  [TEST_DATA_TARGET           <target>]\n  [TEST_INPUT_DATA_DIRECTORY  <directory>]\n  [TEST_OUTPUT_DATA_DIRECTORY <directory>]\n  [TEST_OUTPUT_DIRECTORY      <directory>]\n\n  [ARCHIVE_DESTINATION    <destination>]\n  [HEADERS_DESTINATION    <destination>]\n  [LIBRARY_DESTINATION    <destination>]\n  [RUNTIME_DESTINATION    <destination>]\n  [CMAKE_DESTINATION      <destination>]\n  [LICENSE_DESTINATION    <destination>]\n  [HIERARCHY_DESTINATION  <destination>])\n```\n\nThe only requirement of the function is the list of modules to build, the rest\nhave reasonable defaults if not specified.\n\n  * `MODULES`: (Required) The list of modules to build.\n  * `KITS`: (Required if `BUILD_WITH_KITS` is `ON`) The list of kits to build.\n  * `LIBRARY_NAME_SUFFIX`: (Defaults to `\"\"`) A suffix to add to library names.\n    If it is not empty, it is prefixed with `-` to separate it from the kit\n    name.\n  * `VERSION`: If specified, the `VERSION` property on built libraries will be\n    set to this value.\n  * `SOVERSION`: If specified, the `SOVERSION` property on built libraries will\n    be set to this value.\n  * `PACKAGE`: (Defaults to `${CMAKE_PROJECT_NAME}`) The name the build is\n    meant to be found as when using `find_package`. Note that separate builds\n    will require distinct `PACKAGE` values.\n  * `USE_EXTERNAL`: (Defaults to `OFF`) Whether third party modules should find\n    external copies rather than building their own copy.\n  * `INSTALL_HEADERS`: (Defaults to `ON`) Whether or not to install public headers.\n  * `HEADERS_COMPONENT`: (Defaults to `development`) The install component to\n    use for header installation. Note that other SDK-related bits use the same\n    component (e.g., CMake module files).\n  * `TARGETS_COMPONENT`: `Defaults to `runtime`) The install component to use\n    for the libraries built.\n  * `TARGET_NAMESPACE`: `Defaults to `<AUTO>`) The namespace for installed\n    targets. All targets must have the same namespace. If set to `<AUTO>`, the\n    namespace will be detected automatically.\n  * `INSTALL_EXPORT`: (Defaults to `\"\"`) If non-empty, targets will be added to\n    the given export. The export will also be installed as part of this build\n    command.\n  * `TEST_DATA_TARGET`: (Defaults to `<PACKAGE>-data`) The target to add\n    testing data download commands to.\n  * `TEST_INPUT_DATA_DIRECTORY`: (Defaults to\n    `${CMAKE_CURRENT_SOURCE_DIR}/Data`) The directory which will contain data\n    for use by tests.\n  * `TEST_OUTPUTPUT_DATA_DIRECTORY`: (Defaults to\n    `${CMAKE_CURRENT_BINARY_DIR}/Data`) The directory which will contain data\n    for use by tests.\n  * `TEST_OUTPUT_DIRECTORY`: (Defaults to\n    `${CMAKE_BINARY_DIR}/Testing/Temporary`) The directory which tests may\n    write any output files to.\n\nThe remaining arguments control where to install files related to the build.\nSee CMake documentation for the difference between `ARCHIVE`, `LIBRARY`, and\n`RUNTIME`.\n\n  * `ARCHIVE_DESTINATION`: (Defaults to `${CMAKE_INSTALL_LIBDIR}`) The install\n    destination for archive files.\n  * `HEADERS_DESTINATION`: (Defaults to `${CMAKE_INSTALL_INCLUDEDIR}`) The\n    install destination for header files.\n  * `LIBRARY_DESTINATION`: (Defaults to `${CMAKE_INSTALL_LIBDIR}`) The install\n    destination for library files.\n  * `RUNTIME_DESTINATION`: (Defaults to `${CMAKE_INSTALL_BINDIR}`) The install\n    destination for runtime files.\n  * `CMAKE_DESTINATION`: (Defaults to `<library destination>/cmake/<package>`)\n    The install destination for CMake files.\n  * `LICENSE_DESTINATION`: (Defaults to `${CMAKE_INSTALL_DATAROOTDIR}/licenses/${CMAKE_PROJECT_NAME}`)\n    The install destination for license files (relevant for third party\n    packages).\n  * `HIERARCHY_DESTINATION`: (Defaults to `<library\n    destination>/vtk/hierarchy/<PACKAGE>`) The install destination\n    for hierarchy files (used for language wrapping).\n#]==]",
        "Line" : 1700,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Headers\n",
        "Line" : 1807,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "# Targets\n",
        "Line" : 1811,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "# Destinations\n",
        "Line" : 1816,
        "CharPositionInLine" : 4
      },
      "61" : {
        "Text" : "# Testing\n",
        "Line" : 1825,
        "CharPositionInLine" : 4
      },
      "62" : {
        "Text" : "# TODO: Add an option to build statically? Currently, `BUILD_SHARED_LIBS` is\n\n# used.\n",
        "Line" : 1831,
        "CharPositionInLine" : 2
      },
      "63" : {
        "Text" : "# XXX(namespaces): Use the target name of the module.\n",
        "Line" : 1968,
        "CharPositionInLine" : 4
      },
      "64" : {
        "Text" : "# TODO: Is this right?\n",
        "Line" : 1974,
        "CharPositionInLine" : 6
      },
      "65" : {
        "Text" : "# Since there is no link step for modules, we need to copy the private\n\n# dependencies of the constituent modules into the kit so that their\n\n# private dependencies are actually linked.\n",
        "Line" : 2045,
        "CharPositionInLine" : 8
      },
      "66" : {
        "Text" : "# Also grab optional dependencies since they end up being private\n\n# links.\n",
        "Line" : 2050,
        "CharPositionInLine" : 8
      },
      "67" : {
        "Text" : "# But we don't need to link to modules that are part of the kit we are\n\n# building.\n",
        "Line" : 2059,
        "CharPositionInLine" : 10
      },
      "68" : {
        "Text" : "# Export the public dependencies of a module.\n",
        "Line" : 2129,
        "CharPositionInLine" : 12
      },
      "69" : {
        "Text" : "# The library name of the module.\n",
        "Line" : 2131,
        "CharPositionInLine" : 12
      },
      "70" : {
        "Text" : "# Export whether a module is third party or not.\n",
        "Line" : 2134,
        "CharPositionInLine" : 12
      },
      "71" : {
        "Text" : "# Export whether the module should be excluded from wrapping or not.\n",
        "Line" : 2155,
        "CharPositionInLine" : 10
      },
      "72" : {
        "Text" : "# Export the public dependencies of a module.\n",
        "Line" : 2157,
        "CharPositionInLine" : 10
      },
      "73" : {
        "Text" : "# Export what modules are implemented by the module.\n",
        "Line" : 2159,
        "CharPositionInLine" : 10
      },
      "74" : {
        "Text" : "# Export whether the module contains autoinit logic.\n",
        "Line" : 2161,
        "CharPositionInLine" : 10
      },
      "75" : {
        "Text" : "# The library name of the module.\n",
        "Line" : 2163,
        "CharPositionInLine" : 10
      },
      "76" : {
        "Text" : "# Export whether the module needs autoinit logic handled.\n",
        "Line" : 2166,
        "CharPositionInLine" : 10
      },
      "77" : {
        "Text" : "# Forward private usage requirements with global effects.\n",
        "Line" : 2168,
        "CharPositionInLine" : 10
      },
      "78" : {
        "Text" : "# Set the properties which differ between build and install trees.\n",
        "Line" : 2171,
        "CharPositionInLine" : 10
      },
      "79" : {
        "Text" : "# Add the standard includes for a module to its interface.\n",
        "Line" : 2249,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# Determine the default export macro for a module.\n",
        "Line" : 2296,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# TODO: It would be nice to support `USE_LINK_PROPERTIES` instead of listing\n\n# the modules again here. However, the format of the `LINK_LIBRARIES` property\n\n# value may not be easy to handle.\n",
        "Line" : 2306,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "#[==[.md\n## Autoinit\n\nWhen a module contains a registry which may be populated by other modules,\nthese registries need to be populated when the modules are loaded by the\ndynamic linker (for shared builds) or program load time (for static builds). To\nprovide for this, the module system contains an autoinit \"subsystem\".\n\n### Linking to autoinit-using modules\n\nWhen linking to VTK modules, in order for the autoinit system to work, modules\nneed to declare their registration. In order to do this, defines may need to be\nprovided to targets in order to trigger registration. These defines may be\nadded to targets by using the `vtk_module_autoinit` function.\n\n```\nvtk_module_autoinit(\n  TARGETS <target>...\n  MODULES <module>...)\n```\n\nAfter this call, the targets given to the `TARGETS` argument will gain the\npreprocessor definitions to trigger registrations properly.\n\n### Leveraging the autoinit subsystem\n\nThe subsystem provides the following hooks for use by projects:\n\n  * In modules which `IMPLEMENTS` other modules, in the generated\n    `<module>Module.h` header (which provides export symbols as well) will\n    include the modules which are implemented.\n  * In modules which are `IMPLEMENTABLE` or `IMPLEMENTS` another module, the\n    generated `<module>Module.h` file will include the following block:\n\n```c\n#ifdef <module>_AUTOINIT_INCLUDE\n#include <module>_AUTOINIT_INCLUDE\n#endif\n#ifdef <module>_AUTOINIT\n#include <header>\nVTK_MODULE_AUTOINIT(<module>)\n#endif\n```\n\n    The `vtk_module_autoinit` function will generate an include file and\n    provide its path via the `<module>_AUTOINIT_INCLUDE` define. once it has\n    been included, if the `<module>_AUTOINIT` symbol is defined, a header is\n    included which is intended to provide the `VTK_MODULE_AUTOINIT` macro. This\n    macro is given the module name and should use `<module>_AUTOINIT` to fill\n    in the registries in the module with those from the `IMPLEMENTS` modules\n    listed in that symbol.\n\nThe `<module>_AUTOINIT` symbol's value is:\n\n    <count>(<module1>,<module2>,<module3>)\n\nwhere `<count>` is the number of modules in the parentheses and each module\nlisted need to register something to `<module>`.\n\nThe `header` value is fetched from the `_vtk_module_autoinit_include` global\nvariable. This should be provided by projects using the module system at its\nlowest level. Projects not implementing the `VTK_MODULE_AUTOINIT` macro should\nhave its value provided by `find_package` dependencies.\n#]==]",
        "Line" : 2310,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# XXX(namespaces): Use the target name of the module.\n",
        "Line" : 2407,
        "CharPositionInLine" : 4
      },
      "84" : {
        "Text" : "# XXX(namespaces): Use the target name of the module.\n",
        "Line" : 2421,
        "CharPositionInLine" : 6
      },
      "85" : {
        "Text" : "# Write wrap hierarchy files for a module. This also installs the hierarchy\n\n# file for use by dependent projects.\n",
        "Line" : 2522,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Find the hierarchy target of the module.\n",
        "Line" : 2583,
        "CharPositionInLine" : 4
      },
      "87" : {
        "Text" : "# Non-alias target modules are external and should already have their file\n\n# generated.\n",
        "Line" : 2588,
        "CharPositionInLine" : 4
      },
      "88" : {
        "Text" : "#[==[.md\n## Building a module\n\nCreate a module library.\n\n```\nvtk_module_add_module(<name>\n  [FORCE_STATIC] [HEADER_ONLY]\n  [EXPORT_MACRO_PREFIX      <prefix>]\n  [HEADERS_SUBDIR           <subdir>]\n  [LIBRARY_NAME_SUFFIX      <suffix>]\n  [CLASSES                  <class>...]\n  [TEMPLATE_CLASSES         <template class>...]\n  [SOURCES                  <source>...]\n  [HEADERS                  <header>...]\n  [TEMPLATES                <template>...]\n  [PRIVATE_CLASSES          <class>...]\n  [PRIVATE_TEMPLATE_CLASSES <template class>...]\n  [PRIVATE_SOURCES          <source>...]\n  [PRIVATE_HEADERS          <header>...]\n  [PRIVATE_TEMPLATES        <template>...])\n```\n\nThe `PRIVATE_` arguments are analogous to their non-`PRIVATE_` arguments, but\nthe associated files are not installed or available for wrapping.\n\n  * `FORCE_STATIC`: For a static library to be created. If not provided,\n    `BUILD_SHARED_LIBS` will control the library type.\n  * `HEADER_ONLY`: The module only contains headers (or templates) and contains\n    no compilation steps. Mutually exclusive with `FORCE_STATIC`.\n  * `EXPORT_MACRO_PREFIX`: The prefix for the export macro definitions.\n    Defaults to the library name of the module in all uppercase.\n  * `HEADERS_SUBDIR`: The subdirectory to install headers into in the install\n    tree.\n  * `LIBRARY_NAME_SUFFIX`: The suffix to the module's library name if\n    additional information is required.\n  * `CLASSES`: A list of classes in the module. This is a shortcut for adding\n    `<class>.cxx` to `SOURCES` and `<class>.h` to `HEADERS`.\n  * `TEMPLATE_CLASSES`: A list of template classes in the module. This is a\n    shortcut for adding `<class>.cxx` to `TEMPLATES` and `<class>.h` to\n    `HEADERS`.\n  * `SOURCES`: A list of source files which require compilation.\n  * `HEADERS`: A list of header files which will be available for wrapping and\n    installed.\n  * `TEMPLATES`: A list of template files which will be installed.\n#]==]",
        "Line" : 2680,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# XXX(cmake-3.12.0): This unset is no longer necessary when 3.12.0 is required.\n",
        "Line" : 2837,
        "CharPositionInLine" : 4
      },
      "90" : {
        "Text" : "# For usage requirements.\n",
        "Line" : 2850,
        "CharPositionInLine" : 10
      },
      "91" : {
        "Text" : "# For the implementation.\n",
        "Line" : 2852,
        "CharPositionInLine" : 10
      },
      "92" : {
        "Text" : "# Set up properties necessary for other infrastructure.\n",
        "Line" : 2860,
        "CharPositionInLine" : 6
      },
      "93" : {
        "Text" : "# XXX(cmake-3.12.0): This unset is no longer necessary when 3.12.0 is required.\n",
        "Line" : 2865,
        "CharPositionInLine" : 6
      },
      "94" : {
        "Text" : "# Emulate the regular library as much as possible.\n",
        "Line" : 2875,
        "CharPositionInLine" : 10
      },
      "95" : {
        "Text" : "# XXX(cmake#18484): Linking dependencies directly currently creates\n\n# circular dependencies. This logic should be removed once the minimum for\n\n# kits contains a fix for the mentioned issue.\n\n#\n\n# When two modules are part of the same kit, we can get this problem:\n\n#\n\n#   A - iface -> A-objects <- tll - K\n\n#   ^                               |\n\n#   |                               |\n\n#   B - iface -> B-objects <- tll -/\n\n#\n\n# If B depends on A, it ends up with a circular dependency since A has a\n\n# `$<LINK_ONLY:K>` link. instead, munge up dependencies of intra-kit\n\n# dependencies to link to the `-objects` target instead.\n",
        "Line" : 2919,
        "CharPositionInLine" : 4
      },
      "96" : {
        "Text" : "# We're in the same kit; depend on the `-objects` library of the\n\n# module.\n",
        "Line" : 2940,
        "CharPositionInLine" : 10
      },
      "97" : {
        "Text" : "# Different kit, just use as normal.\n",
        "Line" : 2947,
        "CharPositionInLine" : 10
      },
      "98" : {
        "Text" : "# We're in the same kit; depend on the `-objects` library of the\n\n# module.\n",
        "Line" : 2956,
        "CharPositionInLine" : 10
      },
      "99" : {
        "Text" : "# Different kit, just use as normal.\n",
        "Line" : 2963,
        "CharPositionInLine" : 10
      },
      "100" : {
        "Text" : "# Add the `DEFINE_SYMBOL` for all other modules within the same kit which\n\n# have already been processed because the direct dependencies are not\n\n# sufficient: export symbols from any included header needs to be\n\n# correct. Since modules are built in topological order, a module can\n\n# only possibly include modules in the kit which have already been built.\n",
        "Line" : 2969,
        "CharPositionInLine" : 6
      },
      "101" : {
        "Text" : "# XXX(namespaces): Use the target name of the module.\n",
        "Line" : 3011,
        "CharPositionInLine" : 6
      },
      "102" : {
        "Text" : "# Add header tests for a module.\n",
        "Line" : 3182,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "# TODO: Add test compiles which include each header file to ensure that\n\n# public headers have their includes satisfied by a public dependency.\n",
        "Line" : 3194,
        "CharPositionInLine" : 2
      },
      "104" : {
        "Text" : "# TODO: What to do when using this from a VTK install?\n",
        "Line" : 3208,
        "CharPositionInLine" : 12
      },
      "105" : {
        "Text" : "#[==[.md\n## Installing headers\n\nInstalling headers is done for normal modules by the `vtk_module_add_module`\nfunction already. However, sometimes header structures are more complicated and\nneed to be installed manually. This is common for third party modules or\nprojects which use more than a single directory of headers for a module.\n\nTo facilitate the installation of headers in various ways, the\n`vtk_module_install_headers` function is available. This function honors the\n`INSTALL_HEADERS`, `HEADERS_DESTINATION`, and `HEADERS_COMPONENT` arguments to\n`vtk_module_build`.\n\n```\nvtk_module_install_headers(\n  [DIRECTORIES  <directory>...]\n  [FILES        <file>...]\n  [SUBDIR       <subdir>])\n```\n\nInstallation of header directories follows CMake's `install` function semantics\nwith respect to trailing slashes.\n#]==]",
        "Line" : 3214,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "#[==[.md INTERNAL\n## Applying properties to a module\n\nFor some third party modules, multiple libraries may be built. In order to\napply the standard properties to these targets, this function may be used.\n\nAs of right now, it only applies the `LIBRARY_NAME_SUFFIX` option to the\nlibrary, but other properties may be set in the future as use cases arise.\n#]==]",
        "Line" : 3274,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "#[==[.md INTERNAL\n## Installing a module target\n\nFor some third party modules, multiple libraries may be built. In order to\ninstall these libraries along with the rest of the module system, the\n`vtk_module_install` function may be used.\n\nThis function uses the various installation options to `vtk_module_build`\nfunction to keep the install uniform.\n#]==]",
        "Line" : 3343,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "#[==[.md\n## Building executables\n\nSome modules may have associated executables with them. By using\n`vtk_module_add_executable`, the target will be installed following the options\ngiven to the associated `vtk_module_build` command. Its name will also be\nchanged according to the `LIBRARY_NAME_SUFFIX` option.\n\n```\nvtk_module_add_executable(<name>\n  [NO_INSTALL]\n  [BASENAME <basename>])\n```\n\nIf `NO_INSTALL` is specified, the executable will not be installed. If\n`BASENAME` is given, it will be used as the name of the executable rather than\nthe target name.\n#]==]",
        "Line" : 3370,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "#[==[.md\n## Finding dependencies\n\nVTK modules may need to find external dependencies. CMake often provides\nmodules to find these dependencies, but when imported targets are involved,\nthese.need to also be found from dependencies of the current project. Since the\nbenefits of imported targets greatly outweighs not using them, it is preferred\nto use them.\n\nThe module system provides the `vtk_module_find_package` function in order to\nextend `find_package` support to include finding the dependencies from an\ninstall of the project.\n\n```\nvtk_module_find_package(\n  PACKAGE               <name>\n  [VERSION              <version>]\n  [COMPONENTS           <component>...]\n  [OPTIONAL_COMPONENTS  <component>...]\n  [FORWARD_VERSION_REQ  <MAJOR|MINOR|PATCH|EXACT>]\n  [VERSION_VAR          <varname>]\n  [CONFIG_MODE]\n  [PRIVATE])\n```\n\nThe `PACKAGE` argument is the only required argument. The rest are optional.\n\n  * `PACKAGE`: The name of the package to find.\n  * `VERSION`: The minimum version of the package that is required.\n  * `COMPONENTS`: Components of the package which are required.\n  * `OPTIONAL_COMPONENTS`: Components of the package which may be missing.\n  * `FORWARD_VERSION_REQ`: If provided, the found version will be promoted to\n    the minimum version required matching the given version scheme.\n  * `VERSION_VAR`: The variable to use as the provided version (defaults to\n    `<PACKAGE>_VERSION`). It may contain `@` in which case it will be\n    configured. This is useful for modules which only provide components of the\n    actual version number.\n  * `CONFIG_MODE`: If present, pass `CONFIG` to the underlying `find_package`\n    call.\n  * `PRIVATE`: The dependency should not be exported to the install.\n\nNote that `PRIVATE` is *only* applicable for private dependencies on interface\ntargets (basically, header libraries) because some platforms require private\nshared libraries dependencies to be present when linking dependent libraries\nand executables as well.\n#]==]",
        "Line" : 3440,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "# This needs to be a macro because find modules typically set variables which\n\n# may need to be available in the calling scope. If we declare that it only\n\n# works with imported targets (which is the primary motivating factor behind\n\n# this function), we can instead make it a function at the cost of any\n\n# non-target variables a module might want to set being available. It is\n\n# unlikely that this will be the case for all callers.\n",
        "Line" : 3487,
        "CharPositionInLine" : 0
      },
      "111" : {
        "Text" : "# Note: when adding arguments here, add them to the `unset` block at the end\n\n# of the function.\n",
        "Line" : 3500,
        "CharPositionInLine" : 2
      },
      "112" : {
        "Text" : "#[==[.md\n## Exporting dependency searches\n\nWhen installing a project that is meant to be found via `find_package` from\nCMake, using imported targets in the build means that imported targets need to\nbe created during the `find_package` as well. The\n`vtk_module_export_find_packages` function writes a file suitable for inclusion\nfrom a `<package>-config.cmake` file to satisfy dependencies. It assumes that\nthe exported targets are named `${CMAKE_FIND_PACKAGE_NAME}::${component}`.\nDependent packages will only be found if a requested component requires the\npackage to be found either directly or transitively.\n\n```\nvtk_module_export_find_packages(\n  CMAKE_DESTINATION <directory>\n  FILE_NAME         <filename>\n  [COMPONENT        <component>]\n  MODULES           <module>...)\n```\n\nThe file will be installed into `CMAKE_DESTINATION` in the build and install\ntrees with the given filename. If not provided, the `development` component\nwill be used.\n#]==]",
        "Line" : 3633,
        "CharPositionInLine" : 0
      },
      "113" : {
        "Text" : "#[==[.md\n## Third party modules\n\nWhen a project has modules which represent third party packages, there are some\nconvenience functions to help deal with them. First, there is the meta-wrapper:\n\n```\nvtk_module_third_party(\n  [INTERNAL <internal arguments>...]\n  [EXTERNAL <external arguments>...])\n```\n\nThis offers a cache variable named `VTK_MODULE_USE_EXTERNAL_<module name>` that\nmay be set to trigger between the internal copy and an externally provided\ncopy. This is available as a local variable named\n`VTK_MODULE_USE_EXTERNAL_<library name>`. See the\n`vtk_module_third_party_external` and `vtk_module_third_party_internal`\nfunctions for more.\n#]==]",
        "Line" : 3845,
        "CharPositionInLine" : 0
      },
      "114" : {
        "Text" : "# XXX(cmake): https://gitlab.kitware.com/cmake/cmake/issues/16364.\n\n# Unset a variable which CMake doesn't like when switching between real\n\n# libraries (internal) and interface libraries (external).\n",
        "Line" : 3890,
        "CharPositionInLine" : 4
      },
      "115" : {
        "Text" : "# Mark a module as a third party module.\n",
        "Line" : 3901,
        "CharPositionInLine" : 0
      },
      "116" : {
        "Text" : "#[==[.md\n### External third party modules\n\nA third party dependency may be expressed as a module using this function.\nThird party packages are found using CMake's `find_package` function. It is\nhighly recommended that imported targets are used to make usage easier. The\nmodule itself will be created as an `INTERFACE` library which exposes the\npackage.\n\n```\nvtk_module_third_party_external(\n  PACKAGE               <package>\n  [VERSION              <version>]\n  [COMPONENTS           <component>...]\n  [OPTIONAL_COMPONENTS  <component>...]\n  [INCLUDE_DIRS <path-or-variable>...]\n  [LIBRARIES    <target-or-variable>...]\n  [FORWARD_VERSION_REQ  <MAJOR|MINOR|PATCH|EXACT>]\n  [VERSION              <version>]\n  [CONFIG_MODE]\n  [STANDARD_INCLUDE_DIRS])\n```\n\nOnly the `PACKAGE` argument is required. The arguments are as follows:\n\n  * `PACKAGE`: (Required) The name of the package to find.\n  * `VERSION`: If specified, the minimum version of the dependency that must be\n    found.\n  * `COMPONENTS`: The list of components to request from the package.\n  * `OPTIONAL_COMPONENTS`: The list of optional components to request from the\n    package.\n  * `STANDARD_INCLUDE_DIRS`: If present, standard include directories will be\n    added to the module target. This is usually only required if both internal\n    and external are supported for a given dependency.\n  * `INCLUDE_DIRS`: If specified, this is added as a `SYSTEM INTERFACE` include\n    directory for the target. If a variable name is given, it will be\n    dereferenced.\n  * `LIBRARIES`: The libraries to link from the package. If a variable name is\n    given, it will be dereferenced, however a warning that imported targets are\n    not being used will be emitted.\n  * `CONFIG_MODE`: Force `CONFIG` mode.\n  * `FORWARD_VERSION_REQ` and `VERSION_VAR`: See documentation for\n    `vtk_module_find_package`.\n#]==]",
        "Line" : 3909,
        "CharPositionInLine" : 0
      },
      "117" : {
        "Text" : "# If we have targets, they must be exported to the install as well.\n",
        "Line" : 3995,
        "CharPositionInLine" : 4
      },
      "118" : {
        "Text" : "# If there are no targets, the install uses strings and therefore does not\n\n# need to find the dependency again.\n",
        "Line" : 4009,
        "CharPositionInLine" : 4
      },
      "119" : {
        "Text" : "# Try to use targets if they're specified and available.\n",
        "Line" : 4031,
        "CharPositionInLine" : 2
      },
      "120" : {
        "Text" : "#[==[.md\n### Internal third party modules\n\nThird party modules may also be bundled with the project itself. In this case,\nit is an internal third party dependency. The dependency is assumed to be in a\nsubdirectory that will be used via `add_subdirectory`. Unless it is marked as\n`HEADERS_ONLY`, it is assumed that it will create a target with the name of the\nmodule.\n\n```\nvtk_module_third_party_internal(\n  [SUBDIRECTORY   <path>]\n  [HEADERS_SUBDIR <subdir>]\n  [LICENSE_FILES  <file>...]\n  [VERSION        <version>]\n  [HEADER_ONLY]\n  [INTERFACE]\n  [STANDARD_INCLUDE_DIRS])\n```\n\nAll arguments are optional, however warnings are emitted if `LICENSE_FILES` or\n`VERSION` is not specified. They are as follows:\n\n  * `SUBDIRECTORY`: (Defaults to the library name of the module) The\n    subdirectory containing the `CMakeLists.txt` for the dependency.\n  * `HEADERS_SUBDIR`: If non-empty, the subdirectory to use for installing\n    headers.\n  * `LICENSE_FILES`: A list of license files to install for the dependency. If\n    not given, a warning will be emitted.\n  * `VERSION`: The version of the library that is included.\n  * `HEADER_ONLY`: The dependency is header only and will not create a target.\n  * `INTERFACE`: The dependency is an `INTERFACE` library.\n  * `STANDARD_INCLUDE_DIRS`: If present, module-standard include directories\n    will be added to the module target.\n#]==]",
        "Line" : 4110,
        "CharPositionInLine" : 0
      },
      "121" : {
        "Text" : "# TODO: Support scanning for third-party modules which don't support an\n\n# external copy.\n",
        "Line" : 4146,
        "CharPositionInLine" : 2
      },
      "122" : {
        "Text" : "# Nothing.\n",
        "Line" : 4219,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 123
    },
    "CMake/vtkModuleGraphviz.cmake" : {
      "ObjectId" : "6b8484275b68d38679fffcb979f007754f64e5f7",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#[==[.md\n## Graphviz output\n\nInformation about the modules built and/or available may be dumped to a\nGraphviz `.dot` file.\n\n```\nvtk_module_graphviz(\n  MODULES   <module>...\n  OUTPUT    <path>\n\n  [PRIVATE_DEPENDENCIES <ON|OFF>]\n  [KIT_CLUSTERS <ON|OFF>])\n```\n\n  * `MODULES`: (Required) The modules to output information for.\n  * `OUTPUT`: (Required) A Graphviz file describing the modules built will\n    be output to this path. Relative paths are rooted to `CMAKE_BINARY_DIR`.\n  * `PRIVATE_DEPENDENCIES`: (Default `ON`) Whether to draw private dependency\n    edges or not..\n  * `KIT_CLUSTERS`: (Default `OFF`) Whether to draw modules as part of a kit as\n    a cluster or not.\n#]==]",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get a list of all kits.\n",
        "Line" : 162,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Shapes\n",
        "Line" : 181,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Border style\n",
        "Line" : 187,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Dependencies\n",
        "Line" : 193,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Output modules not part of a kit.\n",
        "Line" : 203,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Output kits as clusters.\n",
        "Line" : 214,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Write the key cluster.\n",
        "Line" : 237,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#file(GENERATE\n\n#  OUTPUT  \"${_vtk_graphviz_OUTPUT}\"\n\n#  CONTENT \"${_vtk_graphviz_contents}\")\n",
        "Line" : 363,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 9
    },
    "CMake/vtkModuleJson.cmake" : {
      "ObjectId" : "6e0f27bc02492e79cc47374d36b2d136d2265be6",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#[==[.md\n## JSON output\n\nInformation about the modules built and/or available may be dumped to a JSON\nfile.\n\n```\nvtk_module_json(\n  MODULES   <module>...\n  OUTPUT    <path>)\n```\n\n  * `MODULES`: (Required) The modules to output information for.\n  * `OUTPUT`: (Required) A JSON file describing the modules built will\n    be output to this path. Relative paths are rooted to `CMAKE_BINARY_DIR`.\n\nExample output:\n\n```json\n{\n  \"modules\": [\n    {\n      \"name\": \"...\",\n      \"library_name\": \"...\",\n      \"enabled\": <bool>,\n      \"implementable\": <bool>,\n      \"third_party\": <bool>,\n      \"wrap_exclude\": <bool>,\n      \"kit\": \"...\",\n      \"depends\": [\n        \"...\"\n      ],\n      \"optional_depends\": [\n        \"...\"\n      ],\n      \"private_depends\": [\n        \"...\"\n      ],\n      \"implements\": [\n        \"...\"\n      ],\n      \"headers\": [\n        \"...\"\n      ]\n    }\n  ],\n  \"kits\": [\n    {\n      \"name\": \"...\",\n      \"enabled\": <bool>,\n      \"modules\": [\n      ]\n    }\n  ]\n}\n```\n#]==]",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/vtkModuleRemote.cmake" : {
      "ObjectId" : "dfffd32f18863ca3a3a537909f73888968b13e56",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Function to fetch remote modules.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Helper to perform the initial git clone and checkout.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Helper to perform a git update.  Checks the current Git revision against the\n\n# desired revision and only performs a fetch and checkout if needed.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Is the hash checkout out that we want?\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Helper function to fetch a module stored in a Git repository.\n\n# Git fetches are only performed when required.\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If we don't have a clone yet.\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# We already have a clone, but we need to check that it has the right revision.\n",
        "Line" : 109,
        "CharPositionInLine" : 9
      },
      "7" : {
        "Text" : "# Download and turn on a remote module.\n\n#\n\n# The CMake variable VTK_MODULE_ENABLE_VTK_${module_name} is created\n\n# if it does not exist. The variable is set to DEFAULT.\n\n# Once set to WANT or YES, the module is downloaded into the Remote module\n\n# group.\n\n#\n\n# A module name and description are required.  The description will\n\n# show up in the CMake user interface.\n\n#\n\n# The following options are currently supported:\n\n#    [GIT_REPOSITORY url]        # URL of git repo\n\n#    [GIT_TAG tag]               # Git branch name, commit id or tag\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# If the variable does not exist, create it and set its value to\n\n# DEFAULT.\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# If the variable is WANT or YES, download the module.\n",
        "Line" : 138,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "CMake/vtkModuleTesting.cmake" : {
      "ObjectId" : "a4494cdd8613485833d4c2adb2bd0d3229f6bc8b",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#[==[.md\n# `vtkModuleTesting`\n\nVTK uses the [ExternalData][] CMake module to handle the data management for\nits test suite. Test data is only downloaded when a test which requires it is\nenabled and it is cached so that every build does not need to redownload the\nsame data.\n\nTo facilitate this workflow, there are a number of CMake functions available in\norder to indicate that test data is required.\n\n[ExternalData]: TODO\n#]==]",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[==[.md\n## Loading data\n\nData may be downloaded manually using this function:\n\n```\nvtk_module_test_data(<PATHSPEC>...)\n```\n\nThis will download data inside of the input data directory for the modules\nbeing built at that time (see the `TEST_INPUT_DATA_DIRECTORY` argument of\n`vtk_module_build`).\n\nFor supported `PATHSPEC` syntax, see the\n[associated documentation][ExternalData pathspecs] in `ExternalData`. These\narguments are already wrapped in the `DATA{}` syntax and are assumed to be\nrelative paths from the input data directory.\n\n[ExternalData pathspecs]: TODO\n#]==]",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#[==[.md\n## Creating test executables\n\nThis function creates an executable from the list of sources passed to it. It\nis automatically linked to the module the tests are intended for as well as any\ndeclared test dependencies of the module.\n\n```\nvtk_module_test_executable(<NAME> <SOURCE>...)\n```\n\nThis function is not usually used directly, but instead through the other\nconvenience functions.\n#]==]",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#[==[.md\n## Test name parsing\n\nTest names default to using the basename of the filename which contains the\ntest. Two tests may share the same file by prefixing with a custom name for the\ntest and a comma.\n\nThe two parsed syntaxes are:\n\n  - `CustomTestName,TestFile`\n  - `TestFile`\n\nNote that `TestFile` should already have had its extension stripped (usually\ndone by `_vtk_test_parse_args`).\n\nIn general, the name of a test will be `<EXENAME>-<TESTNAME>`, however, by\nsetting `vtk_test_prefix`, the test name will instead be\n`<EXENAME>-<PREFIX><TESTNAME>`.\n#]==]",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#[==[.md INTERNAL\nThis function parses the name from a testspec. The calling scope has\n`test_name` and `test_file` variables set in it.\n\n```\n_vtk_test_parse_name(<TESTSPEC>)\n```\n#]==]",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#[==[.md\n## Test function arguments\n\nEach test is specified  using one of the two following syntaxes\n\n  - `<NAME>.<SOURCE_EXT>`\n  - `<NAME>.<SOURCE_EXT>,<OPTIONS>`\n\nWhere `NAME` is a valid test name. If present, the specified `OPTIONS` are only\nfor the associated test. The expected extension is specified by the associated\ntest function.\n#]==]",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#[==[.md INTERNAL\nGiven a list of valid \"options\", this function will parse out a the following\nvariables:\n\n  - `args`: Unrecognized arguments. These should be interpreted as arguments\n    that should be passed on the command line to all tests in this parse group.\n  - `options`: Options specified globally (for all tests in this group).\n  - `names`: A list containing all named tests. These should be parsed by\n    `_vtk_test_parse_name`.\n  - `_<NAME>_options`: Options specific to a certain test.\n\n```\n_vtk_test_parse_args(<OPTIONS> <SOURCE_EXT> <ARG>...)\n```\n\nIn order to be recognized as a source file, the `SOURCE_EXT` must be used.\nWithout it, all non-option arguments are placed into `args`. Each test is\nparsed out matching these:\n#]==]",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Do nothing.\n",
        "Line" : 186,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "#[==[.md INTERNAL\nFor handling global option settings, this function sets variables in the\ncalling scoped named `<PREFIX><OPTION>` to either `0` or `1` if the option is\npresent in the remaining argument list.\n\n```\n_vtk_test_set_options(<OPTIONS> <PREFIX> <ARG>...)\n```\n\nAdditionally, a non-`0` default for a given option may be specified by a\nvariable with the same name as the option and specifying a prefix for the\noutput variables.\n#]==]",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If set, use the maximum number of processors for tests. Otherwise, just use 1\n\n# processor by default.\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Hide the variable if we don't have `MPIEXEC_EXECUTABLE` anyways.\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#[==[.md\n## C++ tests\n\nThis function declares C++ tests. Source files are required to use the `cxx`\nextension.\n\n```\nvtk_add_test_cxx(<EXENAME> <VARNAME> <ARG>...)\n```\n\nEach argument should be either an option, a test specification, or it is passed\nas flags to all tests declared in the group. The list of tests is set in the\n`<VARNAME>` variable in the calling scope.\n\nOptions:\n\n  - `NO_DATA`: The test does not need to know the test input data directory. If\n    it does, it is passed on the command line via the `-D` flag.\n  - `NO_VALID`: The test does not have a valid baseline image. If it does, the\n    baseline is assumed to be in `../Data/Baseline/<NAME>.png` relative to the\n    current source directory. If alternate baseline images are required,\n    `<NAME>` may be suffixed by `_1`, `_2`, etc. The valid image is passed via\n    the `-V` flag.\n  - `NO_OUTPUT`: The test does not need to write out any data to the\n    filesystem. If it does, a directory which may be written to is passed via\n    the `-T` flag.\n\nAdditional flags may be passed to tests using the `${_vtk_build_test}_ARGS`\nvariable or the `<NAME>_ARGS` variable.\n#]==]",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# This must match VTK_SKIP_RETURN_CODE in vtkTestingObjectFactory.h\n",
        "Line" : 321,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "#[==[.md\n### MPI tests\n\nThis function declares C++ tests which should be run under an MPI environment.\nSource files are required to use the `cxx` extension.\n\n```\nvtk_add_test_mpi(<EXENAME> <VARNAME> <ARG>...)\n```\n\nEach argument should be either an option, a test specification, or it is passed\nas flags to all tests declared in the group. The list of tests is set in the\n`<VARNAME>` variable in the calling scope.\n\nOptions:\n\n  - `TESTING_DATA`\n  - `NO_VALID`: The test does not have a valid baseline image. If it does, the\n    baseline is assumed to be in `../Data/Baseline/<NAME>.png` relative to the\n    current source directory. If alternate baseline images are required,\n    `<NAME>` may be suffixed by `_1`, `_2`, etc. The valid image is passed via\n    the `-V` flag.\n\nEach test is run using the number of processors specified by the following\nvariables (using the first one which is set):\n\n  - `<NAME>_NUMPROCS`\n  - `<EXENAME>_NUMPROCS`\n  - `VTK_MPI_NUMPROCS` (defaults to `2`)\n\nAdditional flags may be passed to tests using the `${_vtk_build_test}_ARGS`\nvariable or the `<NAME>_ARGS` variable.\n#]==]",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This must match VTK_SKIP_RETURN_CODE in vtkTestingObjectFactory.h\"\n",
        "Line" : 417,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "#[==[.md\n### C++ test executable\n\n```\nvtk_test_cxx_executable(<EXENAME> <VARNAME> [RENDERING_FACTORY] [<SRC>...])\n```\n\nCreates an executable named `EXENAME` which contains the tests listed in the\nvariable named in the `VARNAME` argument. The `EXENAME` must match the\n`EXENAME` passed to the test declarations when building the list of tests.\n\nIf `RENDERING_FACTORY` is provided, VTK's rendering factories are initialized\nduring the test.\n\nAny additional arguments are added as additional sources for the executable.\n#]==]",
        "Line" : 429,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# No tests -> no need for an executable.\n",
        "Line" : 452,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "#[==[.md INTERNAL\nMPI executables used to have their own test executable function. This is no\nlonger necessary and is deprecated. Instead, `vtk_test_cxx_executable` should\nbe used instead.\n#]==]",
        "Line" : 476,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#[==[.md\n## Python tests\n\nThis function declares Python tests. Test files are required to use the `py`\nextension.\n\n```\nvtk_add_test_python(<EXENAME> <VARNAME> <ARG>...)\n```\n#]==]",
        "Line" : 488,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#[==[.md INTERNAL\nIf the `_vtk_testing_python_exe` variable is not set, the `vtkpython` binary is\nused by default. Additional arguments may be passed in this variable as well.\n#]==]",
        "Line" : 499,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#[==[.md\nOptions:\n\n  - `NO_DATA`\n  - `NO_VALID`\n  - `NO_OUTPUT`\n  - `NO_RT`\n  - `JUST_VALID`\n\nEach argument should be either an option, a test specification, or it is passed\nas flags to all tests declared in the group. The list of tests is set in the\n`<VARNAME>` variable in the calling scope.\n\nOptions:\n\n  - `NO_DATA`: The test does not need to know the test input data directory. If\n    it does, it is passed on the command line via the `-D` flag.\n  - `NO_OUTPUT`: The test does not need to write out any data to the\n    filesystem. If it does, a directory which may be written to is passed via\n    the `-T` flag.\n  - `NO_VALID`: The test does not have a valid baseline image. If it does, the\n    baseline is assumed to be in `../Data/Baseline/<NAME>.png` relative to the\n    current source directory. If alternate baseline images are required,\n    `<NAME>` may be suffixed by `_1`, `_2`, etc. The valid image is passed via\n    the `-V` flag.\n  - `NO_RT`: If `NO_RT` is specified, `-B` is passed instead of `-V` assuming\n    `NO_VALID` is not specified.\n  - `JUST_VALID`: Only applies when both `NO_VALID` and `NO_RT` are not\n    present. If it is not specified, `-A` is passed with path to the directory\n    of the `vtkTclTest2Py` Python package and the test is run via the\n    `rtImageTest.py` script. Note that this currently only works when building\n    against a VTK build tree; the VTK install tree does not include this script\n    or its associated Python package.\n\nAdditional flags may be passed to tests using the `${_vtk_build_test}_ARGS`\nvariable or the `<NAME>_ARGS` variable.\n\nNote that the `vtkTclTest2Py` support will eventually be removed. It is a\nlegacy of the conversion of many tests from Tcl to Python.\n#]==]",
        "Line" : 504,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# TODO: This should be fixed to also work from an installed VTK.\n",
        "Line" : 579,
        "CharPositionInLine" : 10
      },
      "22" : {
        "Text" : "# This must match the skip() function in vtk/test/Testing.py\"\n",
        "Line" : 605,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "#[==[.md\n### MPI tests\n\nA small wrapper around `vtk_add_test_python` which adds support for running\nMPI-aware tests written in Python.\n\nThe `${_vtk_build_test}_NUMPROCS` variable may be used to use a non-default\nnumber of processors for a test.\n\nThis forces running with the `pvtkpython` executable.\n#]==]",
        "Line" : 611,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "CMake/vtkModuleWrapJava.cmake" : {
      "ObjectId" : "2e6339be840e236a796a9246e2cec8b159d4bbad",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#[==[.md\n# `vtkModuleWrapJava`\n\nThis module includes logic necessary in order to wrap VTK modules using VTK's\nJava wrapping logic.\n#]==]",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[==[.md INTERNAL\n## Wrapping a single module\n\nThis function generates the wrapped sources for a module. It places the list of\ngenerated source files and Java source files in variables named in the second\nand third arguments, respectively.\n\n```\n_vtk_module_wrap_java_sources(<module> <sources> <classes>)\n```\n#]==]",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The vtkWrapJava tool has special logic for the `vtkRenderWindow` class.\n\n# This extra logic requires its wrappers to be compiled as ObjC++ code\n\n# instead.\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#[==[.md INTERNAL\n## Generating a Java JNI library\n\nA single JNI library may consist of the Java wrappings of multiple VTK modules.\nThis is useful for kit-based builds where the modules part of the same kit\nbelong to the same JNI library as well.\n\n```\n_vtk_module_wrap_java_library(<name> <module>...)\n```\n\nThe first argument is the name of the JNI library. The remaining arguments are\nVTK modules to include in the JNI library.\n\nThe remaining information it uses is assumed to be provided by the\n`vtk_module_wrap_java` function.\n#]==]",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# XXX(kits): This doesn't work for kits.\n",
        "Line" : 205,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "#[==[.md\n## Wrapping a set of VTK modules in Java\n\n```\nvtk_module_wrap_java(\n  MODULES <module>...\n  [WRAPPED_MODULES <varname>]\n\n  [JAVA_OUTPUT <destination>])\n```\n\n  * `MODULES`: (Required) The list of modules to wrap.\n  * `WRAPPED_MODULES`: (Recommended) Not all modules are wrappable. This\n    variable will be set to contain the list of modules which were wrapped.\n  * `JAVA_OUTPUT`: Defaults to `${CMAKE_CURRENT_BINARY_DIR}/CMakeFiles`. Java\n    source files are written to this directory. After generation, the files may\n    be compiled as needed.\n\nFor each wrapped module, a `<module>Java` target will be created. These targets\nwill have a `_vtk_module_java_files` property which is the list of generated\nJava source files for that target.\n\nFor dependency purposes, the `<module>Java-java-sources` target may also be\nused.\n#]==]",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "CMake/vtkModuleWrapPython.cmake" : {
      "ObjectId" : "838a56e23066a24cf0217b6dc2d3f32a88291836",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#[==[.md\n# `vtkModuleWrapPython`\n\nThis module includes logic necessary in order to wrap VTK modules using VTK's\nPython wrapping logic.\n\n## Limitations\n\nKnown limitations include:\n\n  - Shared Python modules only really support shared builds of modules. VTK\n    does not provide mangling facilities for itself, so statically linking VTK\n    into its Python modules precludes using VTK's C++ interface anywhere else\n    within the Python environment.\n  - Only supports CPython. Other implementations are not supported by the\n    `VTK::WrapPython` executable.\n  - Links directly to a Python library. See the `VTK::Python` module for more\n    details.\n#]==]",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[==[.md\n## Python module destination\n\nSome projects may need to know where VTK is going to place its Python modules\nin the installation directory. This function will provide it in a variable\nnamed as its first argument.\n\n```\nvtk_module_python_default_destination(<var>)\n```\n\nBy default, the destination is `${CMAKE_INSTALL_BINDIR}/Lib/site-packages` on\nWindows and `${CMAKE_INSTALL_LIBDIR}/python<VERSION>/site-packages` otherwise.\n#]==]",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#[==[.md INTERNAL\n## Wrapping a single module\n\nThis function generates the wrapped sources for a module. It places the list of\ngenerated source files and classes in variables named in the second and third\narguments, respectively.\n\n```\n_vtk_module_wrap_python_sources(<module> <sources> <classes>)\n```\n#]==]",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Get the list of public headers from the module.\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Assume the class name matches the basename of the header. This is VTK\n\n# convention.\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#[==[.md INTERNAL\n## Generating a Python module library\n\nA Python module library may consist of the Python wrappings of multiple VTK\nmodules. This is useful for kit-based builds where the modules part of the same\nkit belong to the same Python module as well.\n\n```\n_vtk_module_wrap_python_library(<name> <module>...)\n```\n\nThe first argument is the name of the Python module. The remaining arguments\nare VTK modules to include in the Python module.\n\nThe remaining information it uses is assumed to be provided by the\n`vtk_module_wrap_python` function.\n#]==]",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Wrap the module independently of the other VTK modules in the Python\n\n# module.\n",
        "Line" : 193,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# TODO: Make sure the module doesn't already have an associated Python\n\n# package.\n",
        "Line" : 202,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# Export the wrapping hints file.\n",
        "Line" : 221,
        "CharPositionInLine" : 10
      },
      "9" : {
        "Text" : "# The foreach needs to be split so that dependencies are guaranteed to have\n\n# the INTERFACE_vtk_module_python_package property set.\n",
        "Line" : 226,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# XXX(kits): This doesn't work for kits.\n",
        "Line" : 271,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# TODO: Strip the `$<CONFIGURATION>` from the module destination for\n\n# installs.\n",
        "Line" : 283,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# XXX(cmake): Why is this necessary? One would expect that `file(GENERATE)`\n\n# would do this automatically.\n",
        "Line" : 352,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# XXX(MultiNinja): This isn't going to work in general since MultiNinja\n\n# will error about overlapping output paths.\n",
        "Line" : 384,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "#[==[.md\n## Wrapping a set of VTK modules in Python\n\n```\nvtk_module_wrap_python(\n  MODULES <module>...\n  [TARGET <target>]\n  [WRAPPED_MODULES <varname>]\n\n  [BUILD_STATIC <ON|OFF>]\n\n  [MODULE_DESTINATION <destination>]\n  [STATIC_MODULE_DESTINATION <destination>]\n  [CMAKE_DESTINATION <destination>]\n\n  [PYTHON_PACKAGE <package>]\n\n  [INSTALL_EXPORT <export>]\n  [COMPONENT <component>])\n```\n\n  * `MODULES`: (Required) The list of modules to wrap.\n  * `TARGET`: (Recommended) The target to create which represents all wrapped\n    Python modules. This is mostly useful when supporting static Python modules\n    in order to add the generated modules to the built-in table.\n  * `WRAPPED_MODULES`: (Recommended) Not all modules are wrappable. This\n    variable will be set to contain the list of modules which were wrapped.\n    These modules will have a `INTERFACE_vtk_module_python_package` property\n    set on them which is the name that should be given to `import` statements\n    in Python code.\n  * `BUILD_STATIC`: Defaults to `${BUILD_SHARED_LIBS}`. Note that shared\n    modules with a static build is not completely supported. For static Python\n    module builds, a header named `<TARGET>.h` will be available with a\n    function `void <TARGET>_load()` which will add all Python modules created\n    by this call to the imported module table. For shared Python module builds,\n    the same function is provided, but it is a no-op.\n  * `MODULE_DESTINATION`: Modules will be placed in this location in the\n    build tree. The install tree should remove `$<CONFIGURATION>` bits, but it\n    currently does not. See `vtk_module_python_default_destination` for the\n    default value.\n  * `STATIC_MODULE_DESTINATION`: Defaults to `${CMAKE_INSTALL_LIBDIR}`. This\n    default may change in the future since the best location for these files is\n    not yet known. Static libraries containing Python code will be installed to\n    the install tree under this path.\n  * `CMAKE_DESTINATION`: (Recommended) If not provided, Python-related module\n    properties will not be exported onto the VTK module targets.\n  * `PYTHON_PACKAGE`: (Recommended) All generated modules will be added to this\n    Python package. The format is in Python syntax (e.g.,\n    `package.subpackage`).\n  * `INSTALL_EXPORT`: If provided, static installs will add the installed\n    libraries to the provided export set.\n  * `COMPONENT`: Defaults to `python`. All install rules created by this\n    function will use this installation component.\n#]==]",
        "Line" : 423,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# TODO: Is this correct?\n",
        "Line" : 523,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# TODO: Install this header.\n",
        "Line" : 640,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# TODO: Install these targets.\n",
        "Line" : 646,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "#[==[.md\n## Python packages\n\nSome modules may have associated Python code. This function should be used to\ninstall them.\n\n```\nvtk_module_add_python_package(<module>\n  PACKAGE <package>\n  FILES <files>...\n  [MODULE_DESTINATION <destination>]\n  [COMPONENT <component>])\n```\n\nThe `<module>` argument must match the associated VTK module that the package\nis with. Each package is independent and should be installed separately. That\nis, `package` and `package.subpackage` should each get their own call to this\nfunction.\n\n  * `PACKAGE`: (Required) The package installed by this call. Currently,\n    subpackages must have their own call to this function.\n  * `FILES`: (Required) File paths should be relative to the source directory\n    of the calling `CMakeLists.txt`. Upward paths are not supported (nor are\n    checked for). Absolute paths are assumed to be in the build tree and their\n    relative path is computed relative to the current binary directory.\n  * `MODULE_DESTINATION`: Modules will be placed in this location in the\n    build tree. The install tree should remove `$<CONFIGURATION>` bits, but it\n    currently does not. See `vtk_module_python_default_destination` for the\n    default value.\n  * `COMPONENT`: Defaults to `python`. All install rules created by this\n    function will use this installation component.\n\nA `<module>-<package>` target is created which ensures that all Python modules\nhave been copied to the correct location in the build tree.\n\n### TODO items\n\n  - [ ] Support a tree of modules with a single call.\n  - [ ] Support freezing the Python package. This should create a header and\n    the associated target should provide an interface for including this\n    header. The target should then be exported and the header installed\n    properly.\n#]==]",
        "Line" : 654,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#[==[.md\n## Pure Python modules\n\nIf a VTK module is a Python package, this function should be used instead of\n`vtk_module_add_module`.\n\n```\nvtk_module_add_python_module(<name>\n  PACKAGES <packages>...)\n```\n\n  * `PACKAGES`: (Required) The list of packages installed by this VTK module.\n    These must have been created by the `vtk_module_add_python_package`\n    function.\n#]==]",
        "Line" : 772,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "CMake/vtkObjectFactory.cmake" : {
      "ObjectId" : "81ca2491209e7b2dda09fba0962ca3b94b6d68e8",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#[==[.md\n# Object Factories\n\nIn VTK, certain classes can have what are called \"implementations\". When the\nbase class is requested, it instead looks into a list of available\nimplementations. One of the implementations is then constructed and returned\ninstead.\n\nFor instance, there is a `vtkRenderWindow` class in VTK. When this is\nconstructed, it instead actually returns a window for the X window system,\nCocoa, or Win32 depending on what is available.\n\nVTK's implementation utilizes the \"autoinit\" logic of the module system. A\nmodule which contains an object factory must declare itself as `IMPLEMENTABLE`\nand modules which contain an implementation of an object factory must claim\nthat they `IMPLEMENTS` modules containing those base object factories (a module\nmay contain the object factory and an implementation; it then says that it\n`IMPLEMENTS` itself).\n#]==]",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[==[.md\n## Declaring a factory override\n\nIn order to declare an override, the `vtk_object_factory_declare` function must\nbe used.\n\n```\nvtk_object_factory_declare(\n  BASE      <base>\n  OVERRIDE  <implementation>)\n```\n#]==]",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#[==[.md\n## Generating the source for a module\n\nA module may only have a single declaration of all its object factory\nimplementations. This is done using the `vtk_object_factory_configure`\nfunction.\n\n```\nvtk_object_factory_configure(\n  [SOURCE_FILE <variable>]\n  [HEADER_FILE <variable>]\n  [EXPORT_MACRO <macro>]\n  [INITIAL_CODE <code>]\n  [EXTRA_INCLUDES <include>...])\n```\n\n  - `SOURCE_FILE`: (Recommended) A variable to set to the path to generated\n    source file.\n  - `HEADER_FILE`: (Recommended) A variable to set to the path to generated\n    header file. This should not be treated as a public header.\n  - `EXPORT_MACRO`: (Recommended) The export macro to add to the generated\n    class.\n  - `INITIAL_CODE`: C++ code to run when the object factory is initialized.\n  - `EXTRA_INCLUDES`: A list of headers to include. The header names need to\n    include the `<>` or `\"\"` quoting.\n#]==]",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMake/vtkOpenGLOptions.cmake" : {
      "ObjectId" : "a64f11e9e0206c910bc6c2da9b25ae54aaa2f634",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#[==[.md\n# vtkOpenGLOptions\n\nThis module provides options that control which OpenGL and Windowing system\nlibraries are used.\n\n#]==]",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For each platform specific API, we define VTK_USE_<API> options.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For optional APIs that could be available for the OpenGL implementation\n\n# being used, we define VTK_OPENGL_HAS_<feature> options. These are not to be\n\n# treated as mutually exclusive.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# OSMesa variables\n\n#-----------------------------------------------------------------------------\n\n# OpenGL implementation supports OSMesa for creating offscreen context.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# GLES variables\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# OpenGLES implementation.\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# EGL variables\n\n#-----------------------------------------------------------------------------\n\n# OpenGL implementation supports EGL for creating offscreen context.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Irrespective of support for offscreen API, VTK_DEFAULT_RENDER_WINDOW_OFFSCREEN\n\n# lets the user select the default state for the  `Offscreen` flag on the\n\n# vtkRenderWindow when it is instantiated (formerly VTK_USE_OFFSCREEN).\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# For builds where we can support both on-screen and headless rendering, the default\n\n# is to create an on-screen render window. Setting this option to ON will change the default\n\n# to create an headless render window by default instead.\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "CMake/vtkSupportMacros.cmake" : {
      "ObjectId" : "96eb5f09a293d6e14922a2400bf9a73b637cee3d",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Bridge an old, deprecated, setting to a new replacement setting.\n\n#\n\n# Use this function when a user-visible flag is being renamed or otherwise\n\n# replaced. If the old value is set, it will be given as the default value,\n\n# otherwise the given default value will be used. This returned value should\n\n# then be used in the ``set(CACHE)`` or ``option()`` call for the new value.\n\n#\n\n# If the old value is set, it will warn that it is deprecated for the new name.\n\n#\n\n# If replacing the setting ``OLD_SETTING`` with ``NEW_SETTING``, its usage\n\n# would look like:\n\n#\n\n#   vtk_deprecated_setting(default_setting NEW_SETTING OLD_SETTING \"default value\")\n\n#   set(NEW_SETTING \"${default_setting}\"\n\n#     CACHE STRING \"Documentation for the setting.\")\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/vtkTestVideoForWindows.cmake" : {
      "ObjectId" : "90ea01335fa02ead7bcdfdae10056fb0d9ff5ac7",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check for vfw32 support\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check if vfw32 supports the video capture functions\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMake/vtkTesting.cmake" : {
      "ObjectId" : "0359cd34780a55ca549cd3ff72906bdc8c71697a",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test input data staging directory.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Test input data directory.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Test output directory.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This file is always present in version-controlled source trees\n\n# so we must have been extracted from a source tarball with no\n\n# data objects needed for testing.  Turn off tests by default\n\n# since enabling them requires network access or manual data\n\n# store configuration.\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Provide an option for tests requiring \"large\" input data\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "CMake/vtkTestingDriver.cmake" : {
      "ObjectId" : "ec05aa58a19562659df1300a96286cf52aacfecc",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/vtkTestingGL2PS.cmake" : {
      "ObjectId" : "e1fd21b1e42fd719386a6f73ef96aa7b61759a5d",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the GhostScript executable for GL2PS tests.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# vtk_add_gl2ps_test_cxx([pdf] <test> [<another test> <yet another test> ...])\n\n#\n\n# Takes a list of test source files as arguments and adds additional tests\n\n# to convert a postscript output into png (RasterizePNG) and validates against a\n\n# baseline (VerifyRasterizedPNG).\n\n#\n\n# If the first parameter is pdf, besides validating postscript files it validates pdf\n\n# files using the same procedure. RasterizePNG will generate two pngs, one for the\n\n# postscript file and one for the PDF file. We'll have two validation tests: VerifyRasterizedPNG\n\n# and VerifyRasterizedPDFPNG\n\n#\n\n# This function does not replace vtk_add_test_cxx, but supplements it -- this\n\n# only creates the rasterize/verify tests, vtk_add_test_cxx is needed to create\n\n# the test that generates the original postscript.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Convert ps to png\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Image diff rasterized png produced from a PS with baseline\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "CMake/vtkTestingPDF.cmake" : {
      "ObjectId" : "ec50034b007acf0cb2df5ac939bdf9f289348d99",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the GhostScript executable for GL2PS tests.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Like the above, but only tests PDF (instead of always PS and maybe PDF).\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Convert pdf to png\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Image diff rasterized png produced from a PS with baseline\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "CMake/vtkTestingRenderingDriver.cmake" : {
      "ObjectId" : "ff4c256a696668b2d31907cecf75dbe5b79e5d02",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMake/vtkTopologicalSort.cmake" : {
      "ObjectId" : "d5b1109b550995afed5822b783512ef11d4081b2",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Perform a reverse topological sort on the given LIST.\n\n#\n\n#   vtk_topological_sort(my_list \"MY_\" \"_EDGES\")\n\n#\n\n# LIST is the name of a variable containing a list of elements to be\n\n# sorted in reverse topological order. Each element in the list has a\n\n# set of outgoing edges (for example, those other list elements that\n\n# it depends on). In the resulting reverse topological ordering\n\n# (written back into the variable named LIST), an element will come\n\n# later in the list than any of the elements that can be reached by\n\n# following its outgoing edges and the outgoing edges of any vertices\n\n# they target, recursively. Thus, if the edges represent dependencies\n\n# on build targets, for example, the reverse topological ordering is\n\n# the order in which one would build those targets.\n\n#\n\n# For each element E in this list, the edges for E are contained in\n\n# the variable named ${PREFIX}${E}${SUFFIX}. If no such variable\n\n# exists, then it is assumed that there are no edges. For example, if\n\n# my_list contains a, b, and c, one could provide a dependency graph\n\n# using the following variables:\n\n#\n\n#     MY_a_EDGES     b\n\n#     MY_b_EDGES\n\n#     MY_c_EDGES     a b\n\n#\n\n#  With the invocation of vtk_topological_sort shown above and these\n\n#  variables, the resulting reverse topological ordering will be b, a,\n\n#  c.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n# Modified from Boost Utilities\n\n#\n\n# Copyright 2010 Kitware, Inc.\n\n##############################################################################\n\n# Copyright 2007 Douglas Gregor <doug.gregor@gmail.com>\n\n# Copyright 2007 Troy Straszheim\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n##############################################################################\n\n# Boost Software License - Version 1.0 - August 17th, 2003\n\n#\n\n# Permission is hereby granted, free of charge, to any person or organization\n\n# obtaining a copy of the software and accompanying documentation covered by\n\n# this license (the \"Software\") to use, reproduce, display, distribute,\n\n# execute, and transmit the Software, and to prepare derivative works of the\n\n# Software, and to permit third-parties to whom the Software is furnished to\n\n# do so, all subject to the following:\n\n#\n\n# The copyright notices in the Software and this entire statement, including\n\n# the above license grant, this restriction and the following disclaimer,\n\n# must be included in all copies of the Software, in whole or in part, and\n\n# all derivative works of the Software, unless such copies or derivative\n\n# works are solely in the form of machine-executable object code generated by\n\n# a source language processor.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT\n\n# SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE\n\n# FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,\n\n# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\n# DEALINGS IN THE SOFTWARE.\n\n##############################################################################\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Clear the stack and output variable\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Loop over all of the vertices, starting the topological sort from\n\n# each one.\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# If we haven't already processed this vertex, start a depth-first\n\n# search from where.\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Push this vertex onto the stack with all of its outgoing edges\n",
        "Line" : 78,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# We've now seen this vertex\n",
        "Line" : 83,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# While the depth-first search stack is not empty\n",
        "Line" : 86,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# Remove the vertex and its remaining out-edges from the top\n\n# of the stack\n",
        "Line" : 89,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Get the source vertex and the list of out-edges\n",
        "Line" : 94,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# While there are still out-edges remaining\n",
        "Line" : 99,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Pull off the first outgoing edge\n",
        "Line" : 102,
        "CharPositionInLine" : 10
      },
      "12" : {
        "Text" : "# We have not seen the target before, so we will traverse\n\n# its outgoing edges before coming back to our\n\n# source. This is the key to the depth-first traversal.\n",
        "Line" : 107,
        "CharPositionInLine" : 12
      },
      "13" : {
        "Text" : "# We've now seen this vertex\n",
        "Line" : 111,
        "CharPositionInLine" : 12
      },
      "14" : {
        "Text" : "# Push the remaining edges for the current vertex onto the\n\n# stack\n",
        "Line" : 114,
        "CharPositionInLine" : 12
      },
      "15" : {
        "Text" : "# Setup the new source and outgoing edges\n",
        "Line" : 120,
        "CharPositionInLine" : 12
      },
      "16" : {
        "Text" : "# We have finished all of the outgoing edges for\n\n# SOURCE; add it to the resulting list.\n",
        "Line" : 129,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Check the length of the stack\n",
        "Line" : 133,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 18
    },
    "CMake/vtkVersion.cmake" : {
      "ObjectId" : "e831b52bbe3c2a6d0068bd899e374734aef32710",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# VTK version number components.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMake/vtkWrapSettings.cmake" : {
      "ObjectId" : "c2cad50fcdb5113b6695611e1aac5b9112f61ce3",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure files with settings for use by the build.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add the option for build the Python wrapping to VTK.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Force reset of hints file location in cache if it was moved\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Need PYTHON_EXECUTABLE for HeaderTesting or python wrapping\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Wrapping executables.\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Java package location.\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "CMake/vtkiOS.cmake" : {
      "ObjectId" : "91b9233031bcd1f895100038b216cfcdca57f438",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Convenience variables\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Remove previous configurations\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define default architectures to compile for\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check that at least one architure is defined\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# iOS Deployment Target\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Fail if the install path is invalid\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Try to make the framework install directory if it doesn't exist\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# make sure we have a CTestCustom.cmake file\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Compile a minimal VTK for its compile tools\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Hide some CMake configs from the user\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# expose some module options\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#DICOM\n",
        "Line" : 101,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# XXX(FIXME): DICOM has not been added back into the main build yet.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Now cross-compile VTK with custom toolchains\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# libvtkzlib does not contain bitcode\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "#\n\n# add an INSTALL_ALWAYS since we want it and cmake lacks it\n\n#\n",
        "Line" : 206,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# for simulator architectures\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# for each device architecture\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Pile it all into a framework\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "CMakeLists.txt" : {
      "ObjectId" : "82fca531b2e57b6fd3305ca26ddc38e0b5278050",
      "LastModified" : "2019-04-17T15:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake 3.14\n\n# CMake 3.10\n",
        "Line" : 3,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "# must be before the following iOS / Android\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Setup compiler flags for dynamic analysis\n\n# Should be included after vtkTesting\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Do we want examples built?\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add the Remote Subdirectory\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Does VTK require support for 64 bit file systems\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Provide compatibility options.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Tell VTK source files they are being built inside VTK.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add an option to enable/disable components that have CUDA.\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This needs to be a top level flag as enable_language needs\n\n# to be called from CMake entry point for variables to have\n\n# the correct scope.\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add an option to enable/disable logging support.\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# For vtkTkRenderWidget (only useful with Python, since WRAP_TCL is gone)\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Reject `VTK::mpi`, but allow those which happen to be part of the group to\n\n# be built.\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Required for just about all VTK tests.\n",
        "Line" : 172,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Required for just about everything.\n",
        "Line" : 177,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Required for wrapping with hierarchy files.\n",
        "Line" : 180,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Turn on these groups by default.\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# If we're building only the compile tools, limit what is done.\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Create target to download data from the VTKData group.  This must come after\n\n# all tests have been added that reference the group, so we put it last.\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# The doxygen documentation needs to be aware of all modules.\n",
        "Line" : 383,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# If python wrapping and testing is enabled then add driver scripts to run\n\n# tests.  Note: Many pythong tests used to be automatically converted from TCL\n\n# scripts. Hence the name vtkTclTest2Py\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# TODO: The VTKCompileTools package.\n\n# TODO: HeaderTest exclusions for memcheck.\n",
        "Line" : 396,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Do this at the end so the all variables it uses are setup.\n",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "36c05c2bc938e991e19011ce4321f5e0cc22f906",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## This file should be placed in the root directory of your project.\n\n## Then modify the CMakeLists.txt file in the root directory of your\n\n## project to incorporate the testing dashboard.\n\n## # The following are required to uses Dart and the Cdash dashboard\n\n##   ENABLE_TESTING()\n\n##   INCLUDE(CTest)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Charts/Core/CMakeLists.txt" : {
      "ObjectId" : "3d60304d397c4f91b363ed8280e0b94a872e6110",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This adds a vtkInfovisCore dep for one class...\n",
        "Line" : 38,
        "CharPositionInLine" : 29
      },
      "CommentCount" : 1
    },
    "Charts/Core/Testing/CMakeLists.txt" : {
      "ObjectId" : "584a1e0543273486972d43c76b0d71524acbeae9",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Charts/Core/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "d1f9a578a7d4855af3af2eff2cfe63f95d9c582d",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Charts/Core/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "d9a88d8441cd4fd5a72140bcafdd9907538537db",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# These tests should use vtk.test.Testing.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Common/Color/CMakeLists.txt" : {
      "ObjectId" : "d3e1f7e888ae1c9210070d07a8138b54b633671f",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Common/Color/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Common/Color/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "fee06b459b8e04b18e6bc48fb1f948eb809179f5",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Common/ComputationalGeometry/CMakeLists.txt" : {
      "ObjectId" : "854799332bfc20d9bf31bcbca10fbfbc388583aa",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Common/ComputationalGeometry/Testing/CMakeLists.txt" : {
      "ObjectId" : "a9e3faa8f5312de4f10edf8faf375cfd459dc8f4",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Common/ComputationalGeometry/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "fb900360cd2c9254a83726f69db2f5152766d193",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Common/ComputationalGeometry/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "cb83f13a42abddebf41a4da7ee396b23c9e75db8",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Common/Core/CMakeLists.txt" : {
      "ObjectId" : "eb83baf187c1dfcfda386d7bb6f5026b3edcc049",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Core configuration options.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# See vtkDataArrayRange.h docs for more info on these:\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This option determines the behavior of the New methods of vtkObject derived\n\n# classes. If this option is off then only classes specifically using the\n\n# vtkObjectFactoryNewMacro and vtkAbstractObjectFactoryNewMacro will allow for\n\n# overrides. If the method is on then vtkStandardNewMacro will use the\n\n# vtkObjectFactoryNewMacro's implementation body.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Generate the vtkTypeList_Create macros:\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# And the ArrayDispatch array list header:\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We can't check for the target since we're before VTK::CommonDataModel in the\n\n# dependency graph.\n",
        "Line" : 346,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Platform configuration tests.\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Provide version macros through vtkConfigure.h for compatibility.\n",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Check C++ <cmath> first, where the C++11 standard says these must be.\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Check C99 <math.h> next, where the C99 standard says these must be.\n\n# (they will be found even if they are defined as macros)\n",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Check for finite() which is widespread, though non-standard.\n",
        "Line" : 432,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Check float.h last, where Windows keeps its underscore versions.\n",
        "Line" : 435,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Figure out if feenableexcept and fedisableexcept functions are present\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Need nsl to resolve gethostbyname on SunOS-5.8 and socket also\n",
        "Line" : 487,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 14
    },
    "Common/Core/Testing/CMakeLists.txt" : {
      "ObjectId" : "aabac3feeebccac16370d1198c62a60ceab26bad",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Common/Core/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "b8c32ab12f3d4f9b3474486cccea0cae728bd28d",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the vtkDataArrayAPI tests. These are split up to separately test each\n\n# array class, as testing all in a single translation unit led to heavy\n\n# memory consumption and excessively long compile times.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#specify a custom test name as these files exist in the build directory\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Legacy -- test that the vtkDataArrayTemplate interface still works:\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Non-templated classes:\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Templated data array subclasses can be done in a loop:\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Tell TestSystemInformation where to find the build trees.\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Tell TestXMLFileOutputWindow where to write test file\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# TestArrayCasting.cxx # Uses Boost in its own separate test.\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# TestCxxFeatures.cxx # This is in its own exe too.\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# These two need vtkLookupTableWithEnabling/vtkLogLookupTable - move\n\n# them to RenderingCore or somewhere out there.\n\n#otherLookupTable.cxx\n\n#otherLookupTableWithEnabling.cxx\n",
        "Line" : 141,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "Common/Core/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "1185f2b4071c85fd83c2587079f367b8704ed3bf",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Common/Core/vtkCreateArrayDispatchArrayList.cmake" : {
      "ObjectId" : "def437cf4b4a4b8428f9e158bd6ad5587aa0eb6b",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file contains macros that are used by VTK to generate the list of\n\n# default arrays used by the vtkArrayDispatch system.\n\n#\n\n# There are a number of CMake variables that control the final array list. At\n\n# the high level, the following options enable/disable predefined categories of\n\n# arrays:\n\n#\n\n# - VTK_DISPATCH_AOS_ARRAYS (default: ON)\n\n#   Include vtkAOSDataArrayTemplate<ValueType> for the basic types supported\n\n#   by VTK. This should probably not be turned off.\n\n# - VTK_DISPATCH_SOA_ARRAYS (default: OFF)\n\n#   Include vtkSOADataArrayTemplate<ValueType> for the basic types supported\n\n#   by VTK.\n\n# - VTK_DISPATCH_TYPED_ARRAYS (default: OFF)\n\n#   Include vtkTypedDataArray<ValueType> for the basic types supported\n\n#   by VTK. This enables the old-style in-situ vtkMappedDataArray subclasses\n\n#   to be used.\n\n#\n\n# At a lower level, specific arrays can be added to the list individually in\n\n# two ways:\n\n#\n\n# For templated classes, set the following variables:\n\n# - vtkArrayDispatch_containers:\n\n#   List of template class names.\n\n# - vtkArrayDispatch_[template class name]_types:\n\n#   For the specified template class, add an entry to the array list that\n\n#   instantiates the container for each type listed here.\n\n# - vtkArrayDispatch_[template class name]_header\n\n#   Specifies the header file to include for the specified template class.\n\n#\n\n# Both templated and non-templated arrays can be added using these variables:\n\n# - vtkArrayDispatch_extra_arrays:\n\n#   List of arrays to add to the list.\n\n# - vtkArrayDispatch_extra_headers:\n\n#   List of headers to include.\n\n#\n\n################################ Example #######################################\n\n#\n\n# The cmake call below instantiates the array list that follows:\n\n#\n\n# cmake [path to VTK source]\n\n#   -DvtkArrayDispatch_containers=\"MyCustomArray1;MyCustomArray2\"\n\n#   -DvtkArrayDispatch_MyCustomArray1_header=\"MyCustomArray1.h\"\n\n#   -DvtkArrayDispatch_MyCustomArray1_types=\"float;double\"\n\n#   -DvtkArrayDispatch_MyCustomArray2_header=\"MyCustomArray2.h\"\n\n#   -DvtkArrayDispatch_MyCustomArray2_types=\"int;unsigned char\"\n\n#   -DvtkArrayDispatch_extra_headers=\"ExtraHeader1.h;ExtraHeader2.h\"\n\n#   -DvtkArrayDispatch_extra_arrays=\"ExtraArray1;ExtraArray2<float>;ExtraArray2<char>\"\n\n#\n\n# Generated header:\n\n#\n\n# #ifndef vtkArrayDispatchArrayList_h\n\n# #define vtkArrayDispatchArrayList_h\n\n#\n\n# #include \"vtkTypeList.h\"\n\n# #include \"MyCustomArray1.h\"\n\n# #include \"MyCustomArray2.h\"\n\n# #include \"vtkAOSDataArrayTemplate.h\"\n\n# #include \"ExtraHeader1.h\"\n\n# #include \"ExtraHeader2.h\"\n\n#\n\n# namespace vtkArrayDispatch {\n\n#\n\n# typedef vtkTypeList::Unique<\n\n#   vtkTypeList_Create_21(\n\n#     MyCustomArray1<float>,\n\n#     MyCustomArray1<double>,\n\n#     MyCustomArray2<int>,\n\n#     MyCustomArray2<unsigned char>,\n\n#     vtkAOSDataArrayTemplate<char>,\n\n#     vtkAOSDataArrayTemplate<double>,\n\n#     vtkAOSDataArrayTemplate<float>,\n\n#     vtkAOSDataArrayTemplate<int>,\n\n#     vtkAOSDataArrayTemplate<long>,\n\n#     vtkAOSDataArrayTemplate<short>,\n\n#     vtkAOSDataArrayTemplate<signed char>,\n\n#     vtkAOSDataArrayTemplate<unsigned char>,\n\n#     vtkAOSDataArrayTemplate<unsigned int>,\n\n#     vtkAOSDataArrayTemplate<unsigned long>,\n\n#     vtkAOSDataArrayTemplate<unsigned short>,\n\n#     vtkAOSDataArrayTemplate<vtkIdType>,\n\n#     vtkAOSDataArrayTemplate<long long>,\n\n#     vtkAOSDataArrayTemplate<unsigned long long>,\n\n#     ExtraArray1,\n\n#     ExtraArray2<float>,\n\n#     ExtraArray2<char>\n\n#   )\n\n# >::Result Arrays;\n\n#\n\n# } // end namespace vtkArrayDispatch\n\n#\n\n# #endif // vtkArrayDispatchArrayList_h\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Populate the environment so that vtk_array_dispatch_generate_array_header will\n\n# create the array TypeList with all known array types.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The default set of scalar types:\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# For each container, define a header and a list of types:\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Concatenates a list of strings into a single string, since string(CONCAT ...)\n\n# is not currently available for VTK's cmake version.\n\n# Internal method.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create a header that declares the vtkArrayDispatch::Arrays TypeList.\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Include externally specified headers/arrays:\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove the final comma from the array list:\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "Common/Core/vtkCreateTypeListMacros.cmake" : {
      "ObjectId" : "78a78edde626cd81f7519dfddd091659abe24bf4",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file contains functions used to generate a list of macros that are used\n\n# to create fixed-size typelists. See vtkTypeList for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Concatenates a list of strings into a single string, since string(CONCAT ...)\n\n# is not currently available for VTK's cmake version.\n\n# Internal method.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create list of numbers, start to end _inclusive_, storing the list in result.\n\n# Internal method\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Creates a macro for case n = 1\n\n# Internal method\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Creates a macro for case ${num}, where ${num} > 1\n\n# Internal method\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This function generates a header file that generates TypeList creator macros.\n\n#\n\n# Usage:\n\n# HEADER = output string variable that will contain the complete header.\n\n# MAX_SIZE = largest typelist macro to create.\n\n# MACRO_PREFIX = prefix to use for macro names\n\n# TYPELIST_T = type for TypeList implementation\n\n# NULLTYPE_T = type for NullType implementation\n\n#\n\n# The output is generated to look like:\n\n#\n\n# #define ${MACRO_PREFIX}_1(t1) \\\n\n#   ${TYPELIST_T}<t1, ${NULLTYPE_T} >\n\n# #define ${MACRO_PREFIX}_2(t1, t2) \\\n\n#   ${TYPELIST_T}<t1, \\\n\n#     ${MACRO_PREFIX}_1(t2)\n\n# #define ${MACRO_PREFIX}_3(t1, t2, t3) \\\n\n#   ${TYPELIST_T}<t1, \\\n\n#     ${MACRO_PREFIX}_2(t2, t3)\n\n# And so on, up to ${MACRO_PREFIX}_${MAX_SIZE}.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Common/Core/vtkSMPSelection.cmake" : {
      "ObjectId" : "e5e3311eb886cdbaf141856ca0e26749990b2537",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check for atomic functions\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Common/Core/vtkTestBuiltins.cmake" : {
      "ObjectId" : "df48d46cbb136ac765846f9b2723a20ad600a494",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# check for gcc/clang atomic builtins like __sync_add_and_fetch\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Common/Core/vtkTypeArrays.cmake" : {
      "ObjectId" : "bb3a1cd00a3bfc7cdf4f3d3e8e11b66064c84da2",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure data arrays for platform-independent fixed-size types.\n\n# Match the type selection here to that in vtkType.h.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Common/Core/vtkUnicodeString.cmake" : {
      "ObjectId" : "922fe843626c3e683e3ea2ea8818a5b1806fa572",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generate data for folding Unicode strings\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The following line relies on CMake 2.6, so for now we'll do it the old way\n\n#file(STRINGS \"${source_dir}/CaseFolding.txt\" FOLDING)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The following 3 lines work in CMake 2.6, but not in 2.4,\n\n# so again we do it the old way.\n\n#SET(CODE ${CMAKE_MATCH_1})\n\n#SET(MAPPING ${CMAKE_MATCH_3})\n\n#SET(COMMENT ${CMAKE_MATCH_4})\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "Common/DataModel/CMakeLists.txt" : {
      "ObjectId" : "93b3906911e9b9dc5225f8c5b27dd7dee13f4582",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# New classes for AMR\n",
        "Line" : 217,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Common/DataModel/Testing/CMakeLists.txt" : {
      "ObjectId" : "8d5f2c6f5dfc56742f90ae370a5b6c04fb1933de",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Common/DataModel/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "b0a87c534110d8bad9a5d258975cf05110376ede",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add to the list but don't define a test\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Common/DataModel/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "3d6ea053aac7a498f6760910d7a2ef0c3e389aec",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  LineIntersectQuadraticCells.py\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Common/ExecutionModel/CMakeLists.txt" : {
      "ObjectId" : "fdc211548cfe704b85213e688fda20c8e7a00458",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# New AMR classes\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Common/ExecutionModel/Testing/CMakeLists.txt" : {
      "ObjectId" : "d380f1ed9abc3d59724ace6c58eca39a3d97a836",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Common/ExecutionModel/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "267b12eddee4e88f7bc193b99321ec7c8bfeccba",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Common/ExecutionModel/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "9da6c20deecaef6e446456d43b78c538e1c8a4ec",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Common/Math/CMakeLists.txt" : {
      "ObjectId" : "0f605ac9d88a493ebc0ec11dd1e877e49e5ea58c",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Common/Math/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Common/Math/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "d2f9b4814612fa6eeb98be5fd9a85d0a872f4b66",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Common/Misc/CMakeLists.txt" : {
      "ObjectId" : "6ea5f8975cca33d2e1335356ef160ea6542352de",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Common/Misc/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Common/Misc/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "936de1718060de9fcde8a16f7545c0abb9055dfe",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Common/System/CMakeLists.txt" : {
      "ObjectId" : "575475377b7af96a5d712271071dae8d31de74c7",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Common/System/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Common/System/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "0ff58c1cba2d93e9476a8a24e8506597db4e3040",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Common/System/vtkTestSocketFeatures.cmake" : {
      "ObjectId" : "070e27297ebe148987657341eaa5be2a629f6dee",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See if we need to link the socket library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# e.g. IBM BlueGene/L doesn't have SO_REUSEADDR, because \"setsockopt is not needed for\n\n# BlueGene/L applications\" according to the BlueGene/L Application Development handbook\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Common/Transforms/CMakeLists.txt" : {
      "ObjectId" : "a1f09e455259ef3636c630223d9eb2f60e4fd89a",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Common/Transforms/Testing/CMakeLists.txt" : {
      "ObjectId" : "5686d2236f5740307768ec99ad12fed193d263bd",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Common/Transforms/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "7e33dad7dfde6320d493a212033500d1477788bc",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Common/Transforms/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "feff4b825d687a8ab5e4466a01cb61cc3bb7b855",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Domains/Chemistry/CMakeLists.txt" : {
      "ObjectId" : "d67aed2cb78ed1055da44d637822d667f2191c82",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generate configured header file\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Domains/Chemistry/Testing/CMakeLists.txt" : {
      "ObjectId" : "fd9c899777a6ff44f8b5511eb9cce2e061871526",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Domains/Chemistry/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "920caf58c0820728d0be896d9c655920c790ab60",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# On some machines this test takes 260ish seconds to complete, this allows for\n\n# some extra time\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Domains/Chemistry/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "20043a508f269d5f16d05e5d22c6a9997cee5998",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Domains/ChemistryOpenGL2/CMakeLists.txt" : {
      "ObjectId" : "3c7a32a7dbcb65769b5ebd294eb91c17a2354b9e",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Now for the object factory.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Domains/ChemistryOpenGL2/Testing/CMakeLists.txt" : {
      "ObjectId" : "7f4303d00051359bd79074de012938955f4780c6",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Domains/ChemistryOpenGL2/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "802dab05dcead0c884b0ad3f1e0be8e08135d6bf",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# On some machines this test takes 260ish seconds to complete, this allows for\n\n# some extra time\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Domains/Microscopy/CMakeLists.txt" : {
      "ObjectId" : "1365e87572fce1cf6b3d282eff3aa8d1562973e5",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Domains/Microscopy/Testing/CMakeLists.txt" : {
      "ObjectId" : "eff7e11d460c50a8688fc3cec4460214e011f2cb",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Domains/Microscopy/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "8f6140f479cfc7dbfbe7689814e72486fb67f15e",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# OpenSlideReader Tests\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Domains/Microscopy/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "c0180a587ef55c8bdf88695d98bc909fee92beec",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Domains/ParallelChemistry/CMakeLists.txt" : {
      "ObjectId" : "a176d226dc1913b438cff0cb102f4765dbc4629f",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Domains/ParallelChemistry/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Domains/ParallelChemistry/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "b4712ccbae5cc8bbe94644221b0e8e2b2b52c676",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/AMR/Cxx/CMakeLists.txt" : {
      "ObjectId" : "15fa7bbe914249a42f63d9a9115ef7ac9d2ea0bb",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Add HierarchicalBoxPipeline executable\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Add AMR examples\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Examples/Android/CMakeLists.txt" : {
      "ObjectId" : "922e6aaf4ff5623cd1b1f471b8b8ec4b5ff224ce",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Android/JavaVTK/CMakeLists.txt" : {
      "ObjectId" : "60f7fc86efe35bc97a3f17af6c852f9ff2d0f862",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find android\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#find ant\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Examples/Android/JavaVTK/jni/CMakeLists.txt" : {
      "ObjectId" : "b4a27c5a6e94a069333df9f00e7de3e93bdf337b",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Android/NativeVTK/CMakeLists.txt" : {
      "ObjectId" : "d876f3f544df6a818dd2043a320d7ddc085067d7",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find android\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#find ant\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Examples/Android/NativeVTK/jni/CMakeLists.txt" : {
      "ObjectId" : "0e474d80e51e6ab5200c52df0a452fc096cdb67d",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Android/NativeVTK/runtest.cmake" : {
      "ObjectId" : "a4af7218b6fb9818d64b02bab5dce17b76914ef9",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# test script for running an android test and collecting the output\n\n# this script is probably brittle as well peanut brittle. ots of\n\n# hardcoded paths etc.  Feel free to make it more generic as more devices\n\n# platforms are tested.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# adb and sleep must be in the path\n\n# the valid image must be on the device\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#load the app\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# run the app\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#sleep for a few sec\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# get the valid image\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# get the output text\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "Examples/Android/VolumeRender/CMakeLists.txt" : {
      "ObjectId" : "d3c11c57e5c3f27d5b769d6890cd6b5305875aad",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find android\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#find ant\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Examples/Android/VolumeRender/jni/CMakeLists.txt" : {
      "ObjectId" : "75b07f67d6f3f0d7c987f230131d0c6739ea1371",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Annotation/Cxx/LabeledMesh/CMakeLists.txt" : {
      "ObjectId" : "f4ef8506b3b79aff5c1f0a9c4bca8ebf6bb200a6",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Array/Cxx/CMakeLists.txt" : {
      "ObjectId" : "4b4d957652bc55d697e1ac8adb018b662b292b9e",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Build/vtkLocal/CMakeLists.txt" : {
      "ObjectId" : "8d83a79e6e83672c154d7c9089c0d1e110e523c5",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find and load VTK settings.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source files.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build and link library.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Examples/Build/vtkMy/CMakeLists.txt" : {
      "ObjectId" : "19cdcf0057ef1002454146b01e6189ffc9676e30",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Set the project name.\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Load CMake commands that you probably should not modify.\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# You can put your include path(s) here\n\n#\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Build examples too ?\n\n#\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Common configuration settings\n\n#\n\n# Do not worry about this one.\n\n#\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Here is where you can list the sub-directories holding your local\n\n# classes. Sorting classes by 'package' type like VTK does (Common,\n\n# Rendering, Filtering, Imaging, IO, etc.) is a good thing and prevents\n\n# numerous dependencies problems.\n\n#\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Examples/Build/vtkMy/CMakeOptions.cmake" : {
      "ObjectId" : "7e1a4ff2c63f291c65ee141c4b995b51b681d831",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Configure output paths for libraries and executables.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Try to find VTK and include its settings (otherwise complain)\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Build shared libs ?\n\n#\n\n# Defaults to the same VTK setting.\n\n#\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Standard CMake option for building libraries shared or static by default.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Copy the CMake option to a setting with VTKMY_ prefix for use in\n\n# our project.  This name is used in vtkmyConfigure.h.in.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If this is a build tree, provide an option for putting\n\n# this project's executables and libraries in with VTK's.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Wrap Java, Python\n\n#\n\n# Rational: even if your VTK was wrapped, it does not mean that you want to\n\n# wrap your own local classes.\n\n# Default value is OFF as the VTK cache might have set them to ON but\n\n# the wrappers might not be present (or yet not found).\n\n#\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Python\n\n#\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Java\n\n#\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Tell the java wrappers where to go.\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "Examples/Build/vtkMy/Common/CMakeLists.txt" : {
      "ObjectId" : "68a66c7d1491f8bb8fd312f291da61f1a0d96c07",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Source files\n\n#\n\n# Here is where you can add the name of your local common classes.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# You probably do not need to modify anything below this line\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create the vtkmyCommon C++ library.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Examples/Build/vtkMy/Examples/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Build/vtkMy/Examples/Cxx/CMakeLists.txt" : {
      "ObjectId" : "4fb69e17ed3ab2f0ca142b16e95d60c0ee01e2fd",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Build/vtkMy/Examples/Cxx/Ex1/CMakeLists.txt" : {
      "ObjectId" : "903740c09f8211a9ad606dd487a664dcf2e8ddbd",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Add the executable\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Examples/Build/vtkMy/Examples/Cxx/Ex2/CMakeLists.txt" : {
      "ObjectId" : "c3fa000ecfa421630cd384be9c78e6516b0de6c9",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Add the executable\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Examples/Build/vtkMy/Imaging/CMakeLists.txt" : {
      "ObjectId" : "5b725e30adddbfff0ea527c12b80ac56d08fbd33",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Source files\n\n#\n\n# Here is where you can add the name of your local imaging classes.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# You probably do not need to modify anything below this line\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create the vtkmyImaging C++ library\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Examples/Build/vtkMy/Unsorted/CMakeLists.txt" : {
      "ObjectId" : "e6d3373409dc914f7309909cfd7b059a220eee3f",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Source files\n\n#\n\n# Here is where you can add the name of your local unsorted classes.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# --------------------------------------------------------------------------\n\n# You probably do not need to modify anything below this line\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create the vtkmyUnsorted C++ library.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Examples/Build/vtkMy/Utilities/CMakeLists.txt" : {
      "ObjectId" : "b6468b3621d98cbd84c9c77e979c2c996d6725be",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Build/vtkMy/Utilities/Doxygen/CMakeLists.txt" : {
      "ObjectId" : "db4db96b5120baf99be4e9dc749daf28d07f4263",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Build the documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Configure the script and the doxyfile, then add target\n\n#\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Examples/CMakeLists.txt" : {
      "ObjectId" : "7e692cb963b4c597250fc11a0c77a0b6d93ccfc4",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_example(Android)\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#add_example(iOS)\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#add_example(Array/Cxx)\n\n#add_example(Build/vtkLocal)\n\n#add_example(Build/vtkMy)\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# TODO: These 2 do testing and need more work.\n\n#add_example(Medical/Cxx)\n\n#add_example(Modelling/Cxx)\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#add_example(Rendering/Cxx)\n\n#add_example(Tutorial/Step1/Cxx)\n\n#add_example(Tutorial/Step2/Cxx)\n\n#add_example(Tutorial/Step3/Cxx)\n\n#add_example(Tutorial/Step4/Cxx)\n\n#add_example(Tutorial/Step5/Cxx)\n\n#add_example(Tutorial/Step6/Cxx)\n\n#add_example(VisualizationAlgorithms/Cxx)\n\n#add_example(VolumeRendering/Cxx)\n\n#add_example(Widgets/Cxx)\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#add_example(GUI/Win32/SimpleCxx)\n\n#add_example(GUI/Win32/SampleMFC)\n\n#add_example(GUI/Win32/vtkMFC)\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "Examples/Charts/Cxx/CMakeLists.txt" : {
      "ObjectId" : "298ca5c91bf0abc25a8b1b1fc4e954a185db758f",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/DataManipulation/Cxx/CMakeLists.txt" : {
      "ObjectId" : "acc5cdf5fd5fa75ca50390c72e43fd03b8d93a33",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/GUI/Cocoa/CMakeLists.txt" : {
      "ObjectId" : "3fed827c723cacb0c488b7335637ecdada8a0bcd",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#--////////////////////////////////////////////////////////////////////////////\n\n#--  Copyright (c) 2010, Michael A. Jackson. BlueQuartz Software\n\n#--  All rights reserved.\n\n#--  BSD License: http://www.opensource.org/licenses/bsd-license.html\n\n#--////////////////////////////////////////////////////////////////////////////\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is needed in case we are building this project separate from the VTK build\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The source files - Note because the files have both C++ and Objective-C in them\n\n# the file extension is .mm\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Build all Objective-C as ARC.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The Headers\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# these are the OS X Interface Builder Files\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set the OS X Bundle specific CMake variables which will be used to populate the plist for\n\n# the application bundle\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# These variables are specific to our plist and are NOT standard CMake variables\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add our Executable\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Probably a better way to set the framework link libraries.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Set a custom plist file for the app bundle\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Make sure we can find the 'ibtool' program. If we can NOT find it we\n\n# skip generation of this project\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Make sure the 'Resources' Directory is correctly created before we build\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Compile the .xib files using the 'ibtool' program with the destination being the app package\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "Examples/GUI/Qt/Events/CMakeLists.txt" : {
      "ObjectId" : "5c322d563b3c9d3bc8c65210ef2797509a88e350",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# 3.10: Let AUTOMOC and AUTOUIC process GENERATED files\n",
        "Line" : 3,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : "# Use the include path and library for Qt that is used by VTK.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Instruct CMake to run moc automatically when needed.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Examples/GUI/Qt/FourPaneViewer/CMakeLists.txt" : {
      "ObjectId" : "e8285ec87331d546ed5c7444ab7da1c4c30f3879",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set your files and resources here\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Instruct CMake to run moc automatically when needed.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CMAKE_AUTOMOC in ON so the MocHdrs will be automatically wrapped.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Examples/GUI/Qt/GraphicsView/CMakeLists.txt" : {
      "ObjectId" : "d82fab9c7f6368e9137a792e4929acd5ffac6fe4",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Instruct CMake to run moc automatically when needed.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Examples/GUI/Qt/ImageViewer/CMakeLists.txt" : {
      "ObjectId" : "080f9c1d1763896a22ea7c206f8e8d175c901280",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/GUI/Qt/SimpleView/CMakeLists.txt" : {
      "ObjectId" : "7e052aaf26cf9209d5cd7c4ab44087437602aa24",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set your files and resources here\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Instruct CMake to run moc automatically when needed.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Examples/GUI/Win32/SimpleCxx/CMakeLists.txt" : {
      "ObjectId" : "997fd692abaa3b7b50a61ab4be219b18d85a2060",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/IO/Cxx/CMakeLists.txt" : {
      "ObjectId" : "875e693f2b5aff0bc8470e93c343f00292d51635",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######## Regression Testing ########\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "Examples/ImageProcessing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "881580c89507e6eb16abee8640bb60320f10bf8d",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######## Regression Testing ########\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# FIXME: This test doesn't exit.\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "Examples/Infovis/Cxx/CMakeLists.txt" : {
      "ObjectId" : "1df75294f2d131228c9a273d2a255d09babd4b6e",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If Qt is enabled include the Qt based examples\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Examples/Infovis/Cxx/CustomLinkView/CMakeLists.txt" : {
      "ObjectId" : "df17a4f104cd42e9dddcf6c6af719a6f22191025",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Instruct CMake to run moc automatically when needed.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set your files and resources here\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Examples/Infovis/Cxx/EasyView/CMakeLists.txt" : {
      "ObjectId" : "744f53ebff0f1237b800739630bc99d4d680439d",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Instruct CMake to run moc automatically when needed.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set your files and resources here\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We have ui files, this will bring in the macro: qt5_wrap_ui\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Examples/Infovis/Cxx/StatsView/CMakeLists.txt" : {
      "ObjectId" : "bfc4d7cfab01d86a2d5774453a833f011cbc2fa6",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Instruct CMake to run moc automatically when needed.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set your files and resources here\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Examples/Medical/Cxx/CMakeLists.txt" : {
      "ObjectId" : "f67a450a2e52aedb2088d700b5a4aad90da3cafd",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Medical/Cxx/Testing/CMakeLists.txt" : {
      "ObjectId" : "fecdeaf53d7590a3776ac2620b2bdd55fc866f14",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Medical/Cxx/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "5a964bfde2fd634dfcb7171047e043f2aec48bc0",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######## Regression Testing ########\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Examples/Modelling/Cxx/CMakeLists.txt" : {
      "ObjectId" : "119371dc5af8addbb5444248f3e5a934f999e2dd",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/MultiBlock/Cxx/CMakeLists.txt" : {
      "ObjectId" : "dbc9592b70e406cdb925813a07ba5072bc0194b4",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/ParallelProcessing/Generic/Cxx/CMakeLists.txt" : {
      "ObjectId" : "ebbb8d75ad9c3fe56504d2ee368ed65829b89122",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Rendering/Cxx/CMakeLists.txt" : {
      "ObjectId" : "f777bce4fc1f192b6f1fb44b1ffebd081f01d961",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Statistics/CMakeLists.txt" : {
      "ObjectId" : "0f03794b13b95e2deec681a2b79bf805c3493fac",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add example use of vtkDescriptiveStatistics\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add example use of vtkKMeansStatistics\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Examples/Tutorial/Step1/Cxx/CMakeLists.txt" : {
      "ObjectId" : "322151c4c787d35a1ea93c516589951b38e501ef",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Tutorial/Step2/Cxx/CMakeLists.txt" : {
      "ObjectId" : "0c29dac22d68866f72bfb29567aef40d9b9bb582",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Tutorial/Step3/Cxx/CMakeLists.txt" : {
      "ObjectId" : "c98d75e71fbf7d21e9141f2277b1453086862733",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Tutorial/Step4/Cxx/CMakeLists.txt" : {
      "ObjectId" : "11b375208c5e2eb8c00a7f686d40606bbece3721",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Tutorial/Step5/Cxx/CMakeLists.txt" : {
      "ObjectId" : "9922cfa2db5388548393959aa148f05f1e5cd77a",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Tutorial/Step6/Cxx/CMakeLists.txt" : {
      "ObjectId" : "0332762e6d4c860c83ad26394b80210305b0fca0",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/VisualizationAlgorithms/Cxx/CMakeLists.txt" : {
      "ObjectId" : "88ad59b99ef3e50cc293d1a05efb5ff48dc74a5c",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######## Regression Testing ########\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "Examples/VolumeRendering/Cxx/CMakeLists.txt" : {
      "ObjectId" : "816ad9fd7925b5d45d312faba5c9ae901a730164",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/Widgets/Cxx/CMakeLists.txt" : {
      "ObjectId" : "0009862563c3e7127a39ab3810e4bd7c25927392",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######## Regression Testing ########\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "Examples/iOS/CMakeLists.txt" : {
      "ObjectId" : "3a87ee1fdb58d9d3c1eccfe658e5c38d67d16cc0",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# copy the example to the binary tree where they can be built manually using xcode\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Examples/iOS/CleanExamples.cmake" : {
      "ObjectId" : "245436bb1bcc4ab6bd4b1c65a4640e585e64c2f7",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/AMR/CMakeLists.txt" : {
      "ObjectId" : "4572d2d74a6cd1fe89cbfe256a6d7695a3749e22",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/AMR/Testing/CMakeLists.txt" : {
      "ObjectId" : "456089fff809366b29459dc75f149ed05a296300",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/AMR/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "0d361cd0334da90f954a1d287438dbb973a17a90",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/AMR/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "b4f1781e7bdcecea7f72c341d23a21d60aee6db7",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Core/CMakeLists.txt" : {
      "ObjectId" : "c3abcd687075ff94e8133ec271cd2c9febec5d04",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Core/Testing/CMakeLists.txt" : {
      "ObjectId" : "26b4289c2a2d1d82f44e62683bc4fd6db54162c1",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Core/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "525dcc3c084d9431cf40d09a2f147aca5c3bab00",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Core/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "0af19955b756c2f357002dbbdeb088abedd85281",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Data files:\n\n#  deciPlane,NO_RT\n\n#  financialField,NO_RT\n\n#  skinOrder,NO_RT\n\n#  MassProperties,NO_RT\n\n#  financialField2,NO_RT\n\n#  financialField3,NO_RT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Filters/Extraction/CMakeLists.txt" : {
      "ObjectId" : "1b31fce49f2d179e18ff97c79fa19e7c7c6151c4",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Extraction/Testing/CMakeLists.txt" : {
      "ObjectId" : "1823773508372ece37f0fc3d78bd5450960f8998",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Extraction/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "50d58ac8cd161af3cab6ca539c3f85fed1dc8548",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Extraction/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "bec1a93bb3b5b065034bda5eac5acbe446434a7b",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/FlowPaths/CMakeLists.txt" : {
      "ObjectId" : "7e4369da1ead65bb0580d00ed21659f4865cc506",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/FlowPaths/Testing/CMakeLists.txt" : {
      "ObjectId" : "40eda2bcf40d95be7d1ef62152e547cd808f4f34",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/FlowPaths/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "c0a5dca6a5b93a7447e793f659e307fa9f9771f1",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/General/CMakeLists.txt" : {
      "ObjectId" : "32c7c6dc67dd24ac334e5f5b035466e1c193eee0",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/General/Testing/CMakeLists.txt" : {
      "ObjectId" : "38bf592b229f591936f635a78132375de5a403f7",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/General/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "720be4f54d9ff503bc3e2a5bd84da5c68ce4d482",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests with data\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# On some machines this test takes some extra time\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Filters/General/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "682705b7e4702fd079e7331486be02b6536684ea",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Generic/CMakeLists.txt" : {
      "ObjectId" : "907b24f603e8260914a69615809f167ff8226d87",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Generic/Testing/CMakeLists.txt" : {
      "ObjectId" : "5ceb53a1b7cf34e0ed4bc28aad4f859a37fa1014",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Generic/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "5889b3a7a92bfe5d2f07beb7552c5f8481e98d86",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Geometry/CMakeLists.txt" : {
      "ObjectId" : "89c34171d594b48160158072e310e5d9618eaeda",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Geometry/Testing/CMakeLists.txt" : {
      "ObjectId" : "ac44e34ac0d88e13ef7d56cc98f0c43eb37f8895",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Geometry/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "0574ca262d909e6ff27ff36f4152d526e3444bfd",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Geometry/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "251a74561f7a0c189325521e8649b3c896d8fd80",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Hybrid/CMakeLists.txt" : {
      "ObjectId" : "83ceb42527d254fc1d65f56533d2d4a9809b1380",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Hybrid/Testing/CMakeLists.txt" : {
      "ObjectId" : "6dbe487bf7805c37e5e60e135e6c01322cae079c",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Hybrid/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "ecb62f87b1908d36de16ff862929d99daa2c8352",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Hybrid/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "6643c09d8f5eda53c63756849cfeff054831989c",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/HyperTree/CMakeLists.txt" : {
      "ObjectId" : "34dcb789958b345a81e64d66c509018c4f4d976e",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/HyperTree/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/HyperTree/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "48c87325db67aa6cf78c6a20eee9855f1d118280",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---------------------------------------------\n\n# outline of dualfilter is wrong sometime\n\n# ---------------------------------------------\n\n#   TestHyperTreeGridTernary3DDualContour.cxx\n\n#   TestHyperTreeGridTernary3DDualContourMaterial.cxx\n\n#   TestHyperTreeGridTernary3DAxisCut.cxx\n\n#   TestHyperTreeGridTernary3DAxisCutMaterial.cxx\n\n#   TestHyperTreeGridTernary3DPlaneCutterMaterial.cxx\n\n#   TestHyperTreeGridTernary3DPlaneCutterDualMaterial.cxx\n\n#   TestHyperTreeGridToDualGrid.cxx\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Filters/HyperTree/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "bce0b4c964548cf6a8df8c40b6c50856512c7a75",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# These tests should use vtk.test.Testing.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Filters/Imaging/CMakeLists.txt" : {
      "ObjectId" : "6527ff0a9c054bc8c07cb6bf8ceb33f3a630c6d8",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Modeling/CMakeLists.txt" : {
      "ObjectId" : "15ff8cd7dc1f2e8368a8322d6e88b9cd489bb089",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Modeling/Testing/CMakeLists.txt" : {
      "ObjectId" : "582094783a54c4957ed6936fc468f000377883f4",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Modeling/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "f9df97859b0c0100c85d14d1fd19e81ded94e7eb",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Modeling/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "9559669a8daf7bba5d903475b5909f08b02d2b43",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/OpenTurns/CMakeLists.txt" : {
      "ObjectId" : "c89c08a9b873d533c7b7dc6acc166b995b1249f9",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# XXX(fixme)\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Filters/OpenTurns/Testing/CMakeLists.txt" : {
      "ObjectId" : "bde69c137bd155330c232616d33aca137fba0c97",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/OpenTurns/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "dfc3b624631a80f8279efee9cbdd4f5775f1a23b",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Parallel/CMakeLists.txt" : {
      "ObjectId" : "f5e52c7920e7b11fcea5fda4834cc0eef76ad00c",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Parallel/Testing/CMakeLists.txt" : {
      "ObjectId" : "3a3ec3498e3f87092e726539e8dc5b2191c848d9",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Parallel/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "d54adaf3ca3974854429c8a8cb0083636b7682d5",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We want 4 processes to test the vtkAggregateDataSetFilter\n\n# properly\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Filters/Parallel/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "2d42f845f780dd1415a6c3084a9f3fdf85d201c2",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/ParallelDIY2/CMakeLists.txt" : {
      "ObjectId" : "4905251d6e0110f82f3d2445061a91a4c225fb2e",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/ParallelDIY2/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/ParallelDIY2/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "1d4d1b8bc44c2683f87589db163302141cfa1b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We want 4 processes to test the vtkAggregateDataSetFilter\n\n# properly.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Filters/ParallelFlowPaths/CMakeLists.txt" : {
      "ObjectId" : "739806a2398fb79833ecc4027f1dba2b040d2d78",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Overrides for object factory.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Filters/ParallelFlowPaths/Testing/CMakeLists.txt" : {
      "ObjectId" : "be9f7b7353e05ecfd23f137ce20458423a12c38e",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/ParallelFlowPaths/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "3b312363f481b533c2063c10dab0fd9e1e08a282",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/ParallelGeometry/CMakeLists.txt" : {
      "ObjectId" : "db952747c5878713fa5d586840e043f79697a624",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/ParallelGeometry/Testing/CMakeLists.txt" : {
      "ObjectId" : "8ac687be74c3844e00ed1f2e38beb57ac0d860ec",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/ParallelGeometry/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "a4a4fe06dec81f359cba4ab642f5cdecbc4b7ede",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/ParallelImaging/CMakeLists.txt" : {
      "ObjectId" : "3cc72b5040ffe8459f8be8186b3f5ce6c6cdc7cb",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/ParallelMPI/CMakeLists.txt" : {
      "ObjectId" : "d7bf83e6b32b8d344541c37be15e8690b6e741c3",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/ParallelMPI/Testing/CMakeLists.txt" : {
      "ObjectId" : "82a4e29daa60408297649a5be0924da2b578d6c4",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/ParallelMPI/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "a1fc2efc58080aaf2943b062d851f11cb4671718",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/ParallelStatistics/CMakeLists.txt" : {
      "ObjectId" : "482e6240d8d00c10444467f5a67e96ec93f19119",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/ParallelStatistics/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/ParallelStatistics/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "80a70f48428703ff5a5b2becd41fcced19fc1db9",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# # The following file was being compiled but never added as a testin older\n\n# # vtk. Why is that so?\n\n# TestRealDataPDescriptiveStatisticsMPI.cxx\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Filters/ParallelVerdict/CMakeLists.txt" : {
      "ObjectId" : "c66eee0abce98d97278eeffb29d17fc5acd9d14e",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/ParallelVerdict/Testing/CMakeLists.txt" : {
      "ObjectId" : "7996528ef1b65a4495807c267ff289545984ce45",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/ParallelVerdict/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "e134c241567c0d2274d1a1b586b3fa6186addf17",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Points/CMakeLists.txt" : {
      "ObjectId" : "906450a6235da8853d7de5621deef931095ba203",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Points/Testing/CMakeLists.txt" : {
      "ObjectId" : "910d5158474a915cc95b18e64c1597ee51bb7210",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Points/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "44950756708b575e0b410b95dec3e7c2254686e1",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Points/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "832c57e97da3c9f5577814ff5f3875e2b4412f08",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Programmable/CMakeLists.txt" : {
      "ObjectId" : "00532c028e95aa0036e3fd588a796f04dd0e284a",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Programmable/Testing/CMakeLists.txt" : {
      "ObjectId" : "7f33abe90a496638ca8ac7b815ab2ebee297635d",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Programmable/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "3d1f34a08d71639526fcb3910c78cfba74e0a9cb",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Programmable/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "5f1236892ebf1fd5d57ff801d1776682b4f0695a",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Python/CMakeLists.txt" : {
      "ObjectId" : "0fb00d0076ce22bf6c85303349e230a31d878efc",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Python/Testing/CMakeLists.txt" : {
      "ObjectId" : "e33473e93ee3d273ee88756b444dcffb560ec072",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Python/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "59e70adbed1f5320a220aacdcc3b862ea6777b62",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/ReebGraph/CMakeLists.txt" : {
      "ObjectId" : "164fd40e81109d7e47bc975c9fb8d4f9e8896a43",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/ReebGraph/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/ReebGraph/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "f6f10814ed61c93d1f450f135d4b5abc24484180",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/SMP/CMakeLists.txt" : {
      "ObjectId" : "3e5fb1ee8297275f8eb20205579d54536f5821f4",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/SMP/Testing/CMakeLists.txt" : {
      "ObjectId" : "b98f5d77c2bcf018763ef9db8e93549cf01087c8",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/SMP/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "92fcb8dfc83a3d733b6354c50bb70b8338a0ebcb",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/SMP/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "c6967d0d29b8e7860ff631f33f6d28784a4bfee1",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Selection/CMakeLists.txt" : {
      "ObjectId" : "0323645e2b3f3da087ab2ad89b10a87b75d21c46",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Selection/Testing/CMakeLists.txt" : {
      "ObjectId" : "42f73e05256cd3fe580d78678a26f7698526d5d7",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Selection/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "97a3808ef012a9167adc8e2f49aba7f51ab1915d",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Sources/CMakeLists.txt" : {
      "ObjectId" : "c234d5d5feaffae6292f8787b50241e238ea63dc",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Sources/Testing/CMakeLists.txt" : {
      "ObjectId" : "8a253812a3b36cd1d7a5a8c847a5efbbec7f6d98",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Sources/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "321e03c03d70c4958b91c439ac9f56457634914f",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Sources/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "275f43dbc8f113d721af7156f88110b3baa0ef5f",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Statistics/CMakeLists.txt" : {
      "ObjectId" : "cdcd4cc4603225d46869b23479d69499d7e36d89",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Statistics/Testing/CMakeLists.txt" : {
      "ObjectId" : "aabac3feeebccac16370d1198c62a60ceab26bad",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Statistics/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "f3f09e2561329f12101993b90022add9eb1e6b2b",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Statistics/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "4e0d6304901fd1c04645e36300eb40869c8ce2be",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Texture/CMakeLists.txt" : {
      "ObjectId" : "e789ba20a827735cf2933bb5d03bf50a3dbe4777",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Texture/Testing/CMakeLists.txt" : {
      "ObjectId" : "259c45999b76fd6a178cf246bf59d438ea0ffc8e",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Texture/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "5eb4a6140091f46c3165dc5ac9a4123c232ef0ac",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Texture/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "a3489783b40ff462b19739510d592a8f8457d910",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Topology/CMakeLists.txt" : {
      "ObjectId" : "5c98f272c1402dc16f60a63ea765c671abd41d31",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Topology/Testing/CMakeLists.txt" : {
      "ObjectId" : "0920832e33e2832c0ffc4489dd212bc56dd9c070",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Topology/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "ebd6be3ec508d576974dd77a468bd725a884a5f9",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Verdict/CMakeLists.txt" : {
      "ObjectId" : "e9903a06dbc7f1014e7ca05d2f17c3b510572214",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Verdict/Testing/CMakeLists.txt" : {
      "ObjectId" : "c01798b2de736faa1c8cbdaa60df9af89f1207af",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Verdict/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "0f24368b2ed787ae02db86e4dd0c0db513427241",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Filters/Verdict/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "ffbf392d19d8594b65efbbba839343cf669fa196",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "GUISupport/MFC/CMakeLists.txt" : {
      "ObjectId" : "dbefd95a557ac755f1fd923bdb98cc4df40a1c80",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "GUISupport/MFC/VTKMFCSettings.cmake" : {
      "ObjectId" : "2dfaa162fd427164d5c1d2486b3ef9df9e36cb94",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include this file from a CMakeLists.txt that contains an\n\n# VTK_ADD_EXECUTABLE or VTK_ADD_LIBRARY call when the build product\n\n# links against MFC.\n\n#\n\n# This file provides definitions for the following CMake vars:\n\n#   VTK_MFC_STATIC\n\n#   VTK_MFC_LIB_TYPE\n\n#   VTK_MFC_DELAYLOAD_VTK_DLLS\n\n#   VTK_MFC_EXTRA_LIBS\n\n#\n\n# It also automatically sets CMAKE_MFC_FLAG based on VTK_MFC_STATIC\n\n# and adds the _AFXDLL definition when linking to MFC dll.\n\n#\n\n# After including this file, use something like this chunk:\n\n#   IF(VTK_MFC_DELAYLOAD_VTK_DLLS)\n\n#     VTK_MFC_ADD_DELAYLOAD_FLAGS(CMAKE_EXE_LINKER_FLAGS\n\n#       vtkRendering.dll vtkFiltering.dll vtkCommon.dll\n\n#     )\n\n#   ENDIF()\n\n# And then after your ADD_EXECUTABLE or ADD_LIBRARY:\n\n#   IF(VTK_MFC_EXTRA_LIBS)\n\n#     TARGET_LINK_LIBRARIES(yourLibOrExe ${VTK_MFC_EXTRA_LIBS})\n\n#   ENDIF()\n\n#\n\n# If you're building an exe, use CMAKE_EXE_LINKER_FLAGS...\n\n# If building a dll, use CMAKE_SHARED_LINKER_FLAGS instead...\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# C runtime lib linkage and MFC lib linkage *MUST* match.\n\n# If linking to C runtime static lib, link to MFC static lib.\n\n# If linking to C runtime dll, link to MFC dll.\n\n#\n\n# If \"/MT\" or \"/MTd\" is in the compiler flags, then our build\n\n# products will be linked to the C runtime static lib. Otherwise,\n\n# to the C runtime dll.\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Tell CMake to link to MFC static lib\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Tell CMake to link to MFC dll\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Using the linker /DELAYLOAD flag is necessary when VTK is built\n\n# as dlls to avoid false mem leak reporting by MFC shutdown code.\n\n# Without it, the VTK dlls load before the MFC dll at startup and\n\n# unload after the MFC dll unloads at shutdown. Hence, any VTK objects\n\n# left at MFC dll unload time get reported as leaks.\n\n#\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "GUISupport/Qt/CMakeLists.txt" : {
      "ObjectId" : "90f2a0d738ef7edbeeb73d4fdcc9bd1b9f116404",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# QVTKWidget and related classes can only be added on Linux when\n\n# X11 support is enabled since it depends on X11.\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# X11Extras is only needed for QVTKWidget, which is a deprecated class.\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# X11Extras is only needed for QVTKWidget, which is a deprecated class.\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# This build plugin logic should just get migrated into a module I think.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The VTK_INSTALL_QT_PLUGIN_DIR variable sets the location\n\n# in which the Qt plugin will be installed.\n",
        "Line" : 82,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# add QVTK plugin from sources\n\n# stand-alone as it doesn't depend on QVTK library\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# install rules\n",
        "Line" : 113,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# If no runtime is to be installed then do not install the qt plugin.\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "GUISupport/Qt/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "GUISupport/Qt/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "08685f07cae18f235096b349946001799f07b9fd",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# tests use legacy QVTKWidget.\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# since these tests grab from on-screen buffer, they must be run serially.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "GUISupport/QtOpenGL/CMakeLists.txt" : {
      "ObjectId" : "8c53b2d134dcf73200f12bdb3640a6428b647992",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "GUISupport/QtOpenGL/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "GUISupport/QtOpenGL/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "c808d2d16d94fb909c522602249a37f48307b145",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "GUISupport/QtSQL/CMakeLists.txt" : {
      "ObjectId" : "560edc026479dd126e5c03fb2db334dbe13b4dab",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set up sources to build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "GUISupport/QtSQL/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "GUISupport/QtSQL/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "3dad69a7422c1dfa75f181cbec556f8e8dc6fb8d",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Geovis/Core/CMakeLists.txt" : {
      "ObjectId" : "cb786c4bc77b99b00285bdb0b06dd8510727e928",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Geovis/Core/Testing/CMakeLists.txt" : {
      "ObjectId" : "c73608b2e8e348dcc1718f3799b870ee2707abd0",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Geovis/Core/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "47794df6386e016e545cdcc9b6fe86d0f23e0653",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Geovis/GDAL/CMakeLists.txt" : {
      "ObjectId" : "dfd58f07bc5011804cd292dbe5bca0dc27a2af25",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Geovis/GDAL/Testing/CMakeLists.txt" : {
      "ObjectId" : "af976d16333d1b924b4f7932fbe61cf0975bc4b0",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Geovis/GDAL/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "748a3a8e3f24c0c1375ed4cc03b42d5f4796e638",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/ADIOS/CMakeLists.txt" : {
      "ObjectId" : "f75490b1b7bedd0af5679cd171272f81e07fa5fc",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/ADIOS/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/ADIOS/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "56ec10753e0ea1a69c7a814c6d268b3ad1db14cc",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Basic Create-write-read test\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "IO/AMR/CMakeLists.txt" : {
      "ObjectId" : "a1e1e722e8a39403a17cd742187724f095c8576e",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/AMR/Testing/CMakeLists.txt" : {
      "ObjectId" : "1cc80fc24fe87dbc4b2b5d859f234eb64e9fd489",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/AMR/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "64057f4155dd3c6d42b6627738adeefc1a888524",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests with data\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "IO/Asynchronous/CMakeLists.txt" : {
      "ObjectId" : "86c92612962b280a4ffc891c88828eb13f17b181",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Asynchronous/Testing/CMakeLists.txt" : {
      "ObjectId" : "e33473e93ee3d273ee88756b444dcffb560ec072",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Asynchronous/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "3821e909544abcd75c5b09355f476b0778665dc7",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/CityGML/CMakeLists.txt" : {
      "ObjectId" : "44c4eac8ade1166c0d5ef027abb21ba5fa2f4011",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/CityGML/Testing/CMakeLists.txt" : {
      "ObjectId" : "7ff37f5b9e8467fa5df75cce3b992cadd5df4fc9",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/CityGML/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "5355bb3d413b6b96c26bc9034ff767c359d1a042",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Core/CMakeLists.txt" : {
      "ObjectId" : "c31e188ea26b70f3a52abb382d0642911ab3ce26",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Core/Testing/CMakeLists.txt" : {
      "ObjectId" : "a53a4b38a03826d069e4e7161142816ed2c5647a",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Core/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "7c2c5deed0a97fadaf1e0647f52fa36bf61045e8",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# skip this test on MSVC 2013 or older.\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "IO/Core/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "eece75b2d38a7d46dea4120fc157e4e750503ffa",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/EnSight/CMakeLists.txt" : {
      "ObjectId" : "dce509b715c5d93f7eaf9ed2ebcc7e48311fb627",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/EnSight/Testing/CMakeLists.txt" : {
      "ObjectId" : "1819515c371e586a736a4d314b3f20524eecea5f",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/EnSight/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "9f2d778248f316b13b13afe1d3615264e4422110",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Exodus/CMakeLists.txt" : {
      "ObjectId" : "2ad2b45352bbc5ce400efc50a17b91c727a30c8f",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Exodus/Testing/CMakeLists.txt" : {
      "ObjectId" : "78ccf310d4d364b395f84735238aeb98546c032a",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Exodus/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "2fc2bf7f76946f5af1a36c930011f5e92ccce114",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We need typed arrays to be supported by the dispatcher to run the insitu test:\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "IO/Exodus/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "5f014bc65c26d347364f509fea7a72fb2e22f0f3",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Export/CMakeLists.txt" : {
      "ObjectId" : "8faabf4167b5c25241ccb5dcabbee4451f4e32e4",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Export/Testing/CMakeLists.txt" : {
      "ObjectId" : "0534e723172d051d214b0f8af23fac796d455048",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Export/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "e72f8b879d86bdf26d4f5c38ad06a74db7efe70a",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See if Pixar's Renderman is available\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Tests to run if Renderman is present\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# write a Renderman ini file to specify the shaderpath\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Image diff rman generated tif with baseline\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "IO/Export/Testing/Cxx/vtkTestingSVG.cmake" : {
      "ObjectId" : "1edbf10dbb9a7e6e460f8baca6292a0268d31a34",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# vtk_add_svg_test(<test> [<another test> <yet another test> ...])\n\n#\n\n# Takes a list of test source files as arguments and adds additional tests\n\n# to convert an SVG output into png (RasterizePNG) and validates against a\n\n# baseline (VerifyRasterizedPNG).\n\n#\n\n# This function does not replace vtk_add_test_cxx, but supplements it -- this\n\n# only creates the rasterize/verify tests, vtk_add_test_cxx is needed to create\n\n# the test that generates the original SVG output.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Convert svg to png\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Image diff rasterized png produced from SVG with baseline\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "IO/Export/Testing/Cxx/vtkWkHtmlToImage.cmake" : {
      "ObjectId" : "3e0353945fd6657dd8e0f266d7f66b9dee265eb5",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the wkhtmltoimage executable for testing SVG outputs:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "IO/ExportGL2PS/CMakeLists.txt" : {
      "ObjectId" : "c9c5135f41a50152429abb105ae195f9f20aab0d",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/ExportGL2PS/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/ExportGL2PS/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "9f2c61267445c7a20091f4b11fabfdfe9950b0df",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Only run GL2PS tests if GhostScript is available\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# No image export supported in OGL\n",
        "Line" : 7,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# text alignment and rotation with TextAsPath off is not\n\n# yet implemented for the OpenGL2 backend.\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# test postscript and pdf\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "IO/ExportPDF/CMakeLists.txt" : {
      "ObjectId" : "bdc5e7c30dc46564e242c4354dc7f087f3a8dd66",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/ExportPDF/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/ExportPDF/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "f4e0fa16516b8d1fe00177099361be2e8d896d77",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/FFMPEG/CMakeLists.txt" : {
      "ObjectId" : "f6900843ac05e17156757add4fd36d12d6515d85",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# vtkFFMPEGVideoSource requires ffmpeg 3.1 or later.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "IO/FFMPEG/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/FFMPEG/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "57868cb29e5ef6ea84b1bb5fcda553562e35d26a",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/GDAL/CMakeLists.txt" : {
      "ObjectId" : "0a1248ab6daf361366384171a5592bb6fe7f9f41",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/GDAL/Testing/CMakeLists.txt" : {
      "ObjectId" : "4b59473e3dbae9a9e02dc4353a4150700303f2a0",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/GDAL/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "0530e24762cc49081364a684b68547121f7f25b9",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/GeoJSON/CMakeLists.txt" : {
      "ObjectId" : "80ec76e0fdfa6ff8830ffcd532cc6a66916f9f45",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/GeoJSON/Testing/CMakeLists.txt" : {
      "ObjectId" : "e33473e93ee3d273ee88756b444dcffb560ec072",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/GeoJSON/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "8ae4d5e1befc7958c41d2b406c82a49e3b333d22",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Geometry/CMakeLists.txt" : {
      "ObjectId" : "6bd41c163252b064f7162d8ade64d564e4b48bd9",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#vtkCGMWriter # Needs vtkViewport.\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "IO/Geometry/Testing/CMakeLists.txt" : {
      "ObjectId" : "b53e964e8467a942b5e439912bb4ae25b9f2d482",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Geometry/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "a5776d1f7ba96fa8509a1daf2698ca00d53adea5",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Geometry/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "a89c29388651652a11beb9bcce9c7cc340f22768",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TestPolygonWriters.py # needs vtkCGMWriter (not built)\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "IO/Image/CMakeLists.txt" : {
      "ObjectId" : "9cbd22f3e0b51865b914d0b8c702e4c4251b444a",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Image/Testing/CMakeLists.txt" : {
      "ObjectId" : "53e9b905859e187e597c0b5b615590e8cbbb0b07",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Image/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "4e9ee964892f2af3331365d1aca757fb30a2b3d3",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Each of these must be added in a separate vtk_add_test_cxx\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "IO/Image/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "a056cdf6520d52551a02a202994d29f142143ddc",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Import/CMakeLists.txt" : {
      "ObjectId" : "d70a02da7cacd9400796d90c28a139de32e01b41",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Import/Testing/CMakeLists.txt" : {
      "ObjectId" : "fb474b4e82b56b95c3297baed563604a58bacc6e",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Import/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "ec20b495cbf3e44c959f9bd446dcbe31202317c3",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This is an alternative  way to add a named test that uses a common executable\n\n# Use this if it does not require MPI\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "IO/Import/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "ee59c06a0a276e2c53737e2456a5c9381398ae74",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Infovis/CMakeLists.txt" : {
      "ObjectId" : "85838313074fea138b78e1049d2b366d3ce60fd8",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Infovis/Testing/CMakeLists.txt" : {
      "ObjectId" : "ed25476543dbd6cc8ffc94b99cded264e5a32ad6",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Infovis/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "3b83dd210e8bdfc888a38a13717e9404ff8ede7f",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Infovis/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "ca4af5d7757dcaff259fe1da5e78c87706ec3ff9",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/LAS/CMakeLists.txt" : {
      "ObjectId" : "bf4e2233fbe77a6d244454be0f2249ba3526c244",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# XXX(liblas-1.8.2): Use these when the minimum version is 1.8.2+.\n\n# Currently, the imported target names vary based on the platform. In\n\n# addition, the include interface is not set up properly. See\n\n# https://github.com/libLAS/libLAS/pull/153.\n\n# las las_c\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "IO/LAS/Testing/CMakeLists.txt" : {
      "ObjectId" : "ca8bd6311db452be4e9801145eab7aa688c5862d",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/LAS/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "e3126475757bff645cf3d3e0ed8084952d782137",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: Simplify this with some argument passing.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "IO/LSDyna/CMakeLists.txt" : {
      "ObjectId" : "a77229f826a5a254ba3328e5a7dfd351248041e4",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/LSDyna/Testing/CMakeLists.txt" : {
      "ObjectId" : "f446cc4e3f73769f33be64a162a55e71e4fe5763",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/LSDyna/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "5da48659ba29b517d41133bbebd12b7c73956f41",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#TestLSDynaReaderNoDefl.cxx\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "IO/Legacy/CMakeLists.txt" : {
      "ObjectId" : "a0704f29ebf1c3931be793cce4f6135606e9161f",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Legacy/Testing/CMakeLists.txt" : {
      "ObjectId" : "b3f099f05bd5da393b9c853fd5b484dd44ab39b1",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Legacy/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "8a3a6ca1095756f7d6e0bc177c4f3e3aedb5c3a3",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Legacy/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "460accf3357dd79e00597c0901f5596b64b11276",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/MINC/CMakeLists.txt" : {
      "ObjectId" : "e50dc7c7e661d7f1fcc74c59b733e95029cdf146",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/MINC/Testing/CMakeLists.txt" : {
      "ObjectId" : "953a006e87f2bbb42bc1ed1f19bdaca84b91a168",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/MINC/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "9592f8d1c3153977e224d46f5eccd567f4fcf6f8",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/MPIImage/CMakeLists.txt" : {
      "ObjectId" : "5898e04caf7693c5402630f2956a805cf9f36478",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Now to generate our object factory.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "IO/MPIImage/Testing/CMakeLists.txt" : {
      "ObjectId" : "5b63de5df340d79c9e86afabe48435981501ce11",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/MPIImage/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "025c04e43441d72e8fad595652624e3c26fa4da7",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/MPIParallel/CMakeLists.txt" : {
      "ObjectId" : "8451df0e01cfe1bdbd1c72cff24f571185a60bce",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/MPIParallel/Testing/CMakeLists.txt" : {
      "ObjectId" : "e1b2ab2431e2d63afb01323a1fc89b1c5b94fdfe",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/MPIParallel/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "e848d4267687267579c7e5c23459ac4665881134",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/MPIParallel/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "128ba0bfaad800fe1523a95259406f28ca326a64",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/MotionFX/CMakeLists.txt" : {
      "ObjectId" : "ba6bae499eff41315214c8734df115e3f0a94238",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/MotionFX/Testing/CMakeLists.txt" : {
      "ObjectId" : "088ca2ff1dde7334a6215c073cc16e173e86a3fb",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/MotionFX/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "bac5a373e26e355f07c3f6743d797767e0436dad",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Movie/CMakeLists.txt" : {
      "ObjectId" : "8337da510582d29c30bd837843d0c38ddcc831fd",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check if VideoForWindows is supported. This also adds an option\n\n# VTK_USE_VIDEO_FOR_WINDOWS that is set to ON/OFF by default based on\n\n# whether VideoForWindows was found.\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "IO/Movie/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Movie/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "b29a1369257b4ea0864314f5a03c56d0f1a1d9c3",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/MySQL/CMakeLists.txt" : {
      "ObjectId" : "b1bed9bf5a1954cc82f0aeba4a25bbeb29dd7efa",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/MySQL/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/MySQL/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "73f535632e0e8768c7399f9ce7fdfc314d574386",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/NetCDF/CMakeLists.txt" : {
      "ObjectId" : "9187a282aaa3255e5ff77352cb56bd3f81956754",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/NetCDF/Testing/CMakeLists.txt" : {
      "ObjectId" : "c3b13a9854ed0d103c4b1ba8d0031a17c09fbdaf",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/NetCDF/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "09d593ec3613cc01c7322669ab05be78659c3ed8",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/NetCDF/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "5ae7ac51bc79ce34bb3bc021907ddc414068b5ae",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/ODBC/CMakeLists.txt" : {
      "ObjectId" : "0961a581bd6098d7da962dd7033c7c3290560e7a",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/ODBC/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/ODBC/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "b33f12050a34470e8586ab0b6edaedd1762ef625",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/OggTheora/CMakeLists.txt" : {
      "ObjectId" : "ef571c20aa64bcf8b41308dad22721605cf2c45a",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this is for legacy codes, should be dropped.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "IO/PDAL/CMakeLists.txt" : {
      "ObjectId" : "d6cd57cdc7ff9fe982bd6d14639abe1e989786a6",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# XXX(pdal): PDAL should add include interfaces to its exported targets. See\n\n# https://github.com/PDAL/PDAL/issues/2262.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "IO/PDAL/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/PDAL/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "a902fd187c44dbdb28c6894ea093cf1234a769f4",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: Simplify this with some argument passing.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "IO/PLY/CMakeLists.txt" : {
      "ObjectId" : "39b0eef8dbc77686343841fd09b715aea8af19a6",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/PLY/Testing/CMakeLists.txt" : {
      "ObjectId" : "86591e5fa0f05c3991b6169735898fc79daa35c3",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/PLY/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "7e8386d8aa530ed9d74b90b07e52f1ffc1ce2a0e",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/PLY/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "7f0e14f042a2b15700bea4c9c548331f2f12e0e7",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Parallel/CMakeLists.txt" : {
      "ObjectId" : "56b07e6c606fa0e23243b565e8e15b6b48c73d76",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Parallel/Testing/CMakeLists.txt" : {
      "ObjectId" : "487d0a8dd8c6b9a096e3c569b0a3ba5eb5c18a7f",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Parallel/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "ede47801738fe8c3d76fd866eb6f6b9eba3594ed",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Parallel/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "a7eb4ad03617254cec55404e8b2f4cf64339de57",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/ParallelExodus/CMakeLists.txt" : {
      "ObjectId" : "89fd17277a4187a2f8d0a370848ad12a0e7e0cdc",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/ParallelExodus/Testing/CMakeLists.txt" : {
      "ObjectId" : "3a3faaef41ec1f0c318fb5b9c837d5d20a1394f6",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/ParallelExodus/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "4580045bee2b640c28dba605eaa3a5fb3f354d76",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/ParallelLSDyna/CMakeLists.txt" : {
      "ObjectId" : "39c001bbab8022417c8a045825ad4f83a21d6d63",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/ParallelLSDyna/Testing/CMakeLists.txt" : {
      "ObjectId" : "af9eb00f8d081d696caabc41a33f8c05c1717088",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/ParallelLSDyna/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "23b5814a85b0385efe25d484bb3f073020d8d119",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/ParallelNetCDF/CMakeLists.txt" : {
      "ObjectId" : "90af6f64d68ce4c96f77a15bdb8d1ca7d5b809dc",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/ParallelNetCDF/Testing/CMakeLists.txt" : {
      "ObjectId" : "a7fd7b1662a9e71dfa6f91f866c58170d37b34b2",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/ParallelNetCDF/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "189f185dc7371a648f1abffba6863f2220b410d4",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/ParallelXML/CMakeLists.txt" : {
      "ObjectId" : "ccf9b7a281246493e0891ae7ac3f3b6855e08cfd",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/ParallelXML/Testing/CMakeLists.txt" : {
      "ObjectId" : "aabac3feeebccac16370d1198c62a60ceab26bad",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/ParallelXML/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "b9f7e5d46b9b993723db56570bac7e93dff9369a",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# note, to enable testing the vtkParallelMPI module should be enabled\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "IO/ParallelXML/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "70f401ae7aa58236a2c96478f6da6fe52bdab994",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/ParallelXdmf3/CMakeLists.txt" : {
      "ObjectId" : "758174a5608847154d79509e972d98120a40c87d",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/ParallelXdmf3/Testing/CMakeLists.txt" : {
      "ObjectId" : "180bdeee5f3e2d96259d3371cbea56d973090e05",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/ParallelXdmf3/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "d4fb0e25f701a23a4054a7cd853fd479cbecd023",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/PostgreSQL/CMakeLists.txt" : {
      "ObjectId" : "75a4eef497edd316678f00ae09d07a3f338ed1bd",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/PostgreSQL/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/PostgreSQL/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "adcf3b1a4feb3c71abde0b5a469bf7b58dbce432",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/SQL/CMakeLists.txt" : {
      "ObjectId" : "7a3eb275aff978dd780927b4261aeb98b7e895ad",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#vtkSQLDatabaseGraphSource\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#vtkSQLGraphReader\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "IO/SQL/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/SQL/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "b335cf13035ad44f1aac1fd697a2c69318f75c5e",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Run these serial to avoid intermittent test failures on machines\n\n# that do parallel testing\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "IO/SegY/CMakeLists.txt" : {
      "ObjectId" : "59f66b2bec99b58722987e1956ff27643d437fb7",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/SegY/Testing/CMakeLists.txt" : {
      "ObjectId" : "3f52a27790b46a92c6de494806b9e1ae6ff5e5e5",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/SegY/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "347aa0a2ecd606a98dd572c460478bf55c307830",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/TRUCHAS/CMakeLists.txt" : {
      "ObjectId" : "1686bcce691e5487ebdd4b40b1c3e9aeadac2878",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/TRUCHAS/Testing/CMakeLists.txt" : {
      "ObjectId" : "759915cac471f84070dc3678e1970a5e016bf28d",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/TRUCHAS/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "30c68253099bdf870c09274a879044a439c32ccc",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/TecplotTable/CMakeLists.txt" : {
      "ObjectId" : "dc9c04ee6ed63be6b3f9935204e707f9a72dd99e",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/TecplotTable/Testing/CMakeLists.txt" : {
      "ObjectId" : "81de309d402f98df1b9d7e9fddfd13f3eba5441a",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/TecplotTable/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "101b91067ca8d65bf0e4ad11688863efd7eb543e",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/VPIC/CMakeLists.txt" : {
      "ObjectId" : "cf33fe3f5b4615562298a1c176582dd55b9b6a36",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/VPIC/Testing/CMakeLists.txt" : {
      "ObjectId" : "8a9865b5a742184f788db0ad7807fe9ced6bc946",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/VPIC/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "4ffc3a8cc2a8b11e5800003dca61d47f8db0fee8",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/VeraOut/CMakeLists.txt" : {
      "ObjectId" : "42a787583c4468a8dd2776386a7b7fc0ba5273ec",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/VeraOut/Testing/CMakeLists.txt" : {
      "ObjectId" : "393b3eaed41d8706da0b25fc0e2b3337f3435706",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Sorry but we don't have a public dataset to test out that reader yet.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "IO/Video/CMakeLists.txt" : {
      "ObjectId" : "87ce1027237775b5b31f117808f62d6289d7b935",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include directory needed for vtkMILVideoSource.cxx.\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "IO/XML/CMakeLists.txt" : {
      "ObjectId" : "00dc157c52fabd2539799c505e5e413c8d76a6e0",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/XML/Testing/CMakeLists.txt" : {
      "ObjectId" : "3f31b79c7bf52d3cf045e4bd62c2bbb343aef8c4",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/XML/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "716765883e00d8720e8793feca7c080043ee2aa6",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# skip TestXMLWriteRead test on MSVC 2013 and older.\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Each of these most be added in a separate vtk_add_test_cxx\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "IO/XML/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "5bff9c75001b4b90447887a8b422e3b1e10ec64c",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/XMLParser/CMakeLists.txt" : {
      "ObjectId" : "3d1202bdd30ff6f760c778605714d633dd12c046",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Xdmf2/CMakeLists.txt" : {
      "ObjectId" : "6ae29f7c1a100be09c8cc662dcc763ac31272db6",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Xdmf2/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Xdmf2/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "44d948c01a41e4a9a330b58a30987246d092a9cc",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Xdmf3/CMakeLists.txt" : {
      "ObjectId" : "f3759741d8fffd6d830b794a0de6018606bbed84",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Xdmf3/Testing/CMakeLists.txt" : {
      "ObjectId" : "e33473e93ee3d273ee88756b444dcffb560ec072",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "IO/Xdmf3/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "6ba92400cec97ffc05eca8d4f83dce127a27d52b",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Imaging/Color/CMakeLists.txt" : {
      "ObjectId" : "4a24d172d0f8a70258e3fa5d5bbbc0a564ccefd7",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Imaging/Color/Testing/CMakeLists.txt" : {
      "ObjectId" : "8493c3590c06eed75bf33a730ac889508e045eca",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Imaging/Color/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "784fa1b2f9621563bc28d261d83c67e24123e2b4",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Imaging/Core/CMakeLists.txt" : {
      "ObjectId" : "e182442b9a47785aae52c787b926d91fd6514566",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Needed by vtkImageStencilData\n",
        "Line" : 39,
        "CharPositionInLine" : 24
      },
      "CommentCount" : 1
    },
    "Imaging/Core/Testing/CMakeLists.txt" : {
      "ObjectId" : "f13ff8fda6626310e9f8e3be474963c2d9aa8668",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Imaging/Core/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "12c4b8a701f36683bed48ad01c15319e66f91e6a",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The stencil test is special\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Imaging/Core/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "81105d8f6a07088891c1c41995d1f53738eb7ba6",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# WindowLevelInterface.py  # TCL test not being made as well !!!\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Imaging/Fourier/CMakeLists.txt" : {
      "ObjectId" : "3c6a9f1b56406fea6756ddc7f7403a421b585b87",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Imaging/General/CMakeLists.txt" : {
      "ObjectId" : "20d4b8709a58c5d2559af4118485c966dd0f929b",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Imaging/Hybrid/CMakeLists.txt" : {
      "ObjectId" : "ed14944774ca72136ec836b5272fb9508fa98997",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Imaging/Hybrid/Testing/CMakeLists.txt" : {
      "ObjectId" : "3b920c6d55eecb522455b7aae679f5ff714dbdf5",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Imaging/Hybrid/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "9cef7d6edf34352ecbc32da9f7639be8c97f4afa",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Imaging/Hybrid/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "f1619394ceff2e9152294e8814fb74ffa3a33f35",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Imaging/Math/CMakeLists.txt" : {
      "ObjectId" : "5761a0dfead207ac7bbc0906082023409c855aba",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Imaging/Morphological/CMakeLists.txt" : {
      "ObjectId" : "b12fd94d93e055d2aa24c211125c2c2d759e34cb",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Imaging/Morphological/Testing/CMakeLists.txt" : {
      "ObjectId" : "5b63de5df340d79c9e86afabe48435981501ce11",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Imaging/Morphological/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "5a68f4424e17d26f484250de461c3ecbc2d4e0be",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Imaging/OpenGL2/CMakeLists.txt" : {
      "ObjectId" : "368bbf3e4d07611337409feb2e16d4f85c5aec9c",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Imaging/OpenGL2/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Imaging/OpenGL2/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "95ceda135048d9d64e25e5595626d1d6a84b4ce2",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Imaging/Sources/CMakeLists.txt" : {
      "ObjectId" : "855d0010d2d290459cbf495c5028009e4c022455",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Imaging/Statistics/CMakeLists.txt" : {
      "ObjectId" : "62557cad77a89abcb5e7462d8a6c26403e977ea9",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Imaging/Stencil/CMakeLists.txt" : {
      "ObjectId" : "dfef2c393c2901865252c86073da177fb868365c",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Infovis/Boost/CMakeLists.txt" : {
      "ObjectId" : "2873f8f446f0b7351c873d0b1ce6646b1ebb46f8",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Infovis/Boost/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Infovis/Boost/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "e08f72c5d23b1deaa12c9425111cd3f746287070",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Infovis/BoostGraphAlgorithms/CMakeLists.txt" : {
      "ObjectId" : "df03ec3da20483399c305911043f861ff5473c54",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Infovis/BoostGraphAlgorithms/Testing/CMakeLists.txt" : {
      "ObjectId" : "e1b4d72a620a37f7092dcaa6aa51edab6976d133",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Infovis/BoostGraphAlgorithms/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "681c6c5cefad3ec516dad3853e19a969ec5f7020",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# BoostArrayLogWeighting.cxx    # todo (unsatisfied deps)\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# TestBoostBrandesCentrality.cxx # todo (unsatisfied deps)\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Infovis/Core/CMakeLists.txt" : {
      "ObjectId" : "834958a474f6f051fcbfccd3933c5a4f143b82e1",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Infovis/Core/Testing/CMakeLists.txt" : {
      "ObjectId" : "432ff36f091e3d1487bbcd80bf5db82de4660646",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Infovis/Core/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "f7b651c3d24898751d7745122047e3b68f97b11f",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Infovis/Layout/CMakeLists.txt" : {
      "ObjectId" : "49689ea20def85b1343cc36259d56cad66dc0182",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Infovis/Layout/Testing/CMakeLists.txt" : {
      "ObjectId" : "57f5f1a797227822b7f56116e5d6b2bf731f99e7",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Infovis/Layout/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "e00f47e068d29ee16f6dfecca08ef876e9c6282b",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TestAssignCoordinates.cxx # todo (unsatisfied deps)\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# TestCosmicTreeLayoutStrategy.cxx # todo (unsatisfied deps)\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Interaction/Image/CMakeLists.txt" : {
      "ObjectId" : "6ddfe02337dafb17c0c31614d7a208d7814bf860",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Interaction/Style/CMakeLists.txt" : {
      "ObjectId" : "735f3971b7c9efc8fe3d1bfa998a35ea489819da",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Interaction/Style/Testing/CMakeLists.txt" : {
      "ObjectId" : "0892c97662fd2c89bd5f9459b34e1603037d5b83",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Interaction/Style/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "86df891f399adcb8049cf25e16138db5117a7530",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Interaction/Widgets/CMakeLists.txt" : {
      "ObjectId" : "c5135a02daf40ac63c99e4d42e69b0f77c77c2d3",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Interaction/Widgets/Testing/CMakeLists.txt" : {
      "ObjectId" : "080e9e7af3e6816e4c06268e0e8aef4b84f4c95c",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Interaction/Widgets/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "09c1302a62e7c6f6cacee6a18ae26e45a2feec76",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests with data\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Allow local customization of timeout for this test.\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Allow local customization of timeout for this test.\n",
        "Line" : 141,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# On some machines this test takes ~220 seconds to complete, allow for some\n\n# extra time\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Interaction/Widgets/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "87be309e71b028056fa7fbd464ab2de52d4eba81",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Parallel/Core/CMakeLists.txt" : {
      "ObjectId" : "34f65ea58b4296e038673c32662df751c84a24a4",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generate \"vtkSocketCommunicatorHash.h\".\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Parallel/Core/Testing/CMakeLists.txt" : {
      "ObjectId" : "6a2d1e5fb384088818b4836085a7e046b37dbc5d",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Parallel/Core/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "c93f23230f098c879a417844171694d999fae547",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# indicate that the processes are not run sequentially,\n",
        "Line" : 14,
        "CharPositionInLine" : 19
      },
      "CommentCount" : 1
    },
    "Parallel/Core/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "d83311ba47a2b91179209bb9943af26765dac790",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Parallel/MPI/CMakeLists.txt" : {
      "ObjectId" : "6361d965350003516d23a85058ecea0b05b44f4d",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Parallel/MPI/Testing/CMakeLists.txt" : {
      "ObjectId" : "8ac687be74c3844e00ed1f2e38beb57ac0d860ec",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Parallel/MPI/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "ede9eaeb688cd8411a513a2465460b86d1d8b140",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#GenericCommunicator.cxx\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Parallel/MPI4Py/CMakeLists.txt" : {
      "ObjectId" : "1e16f6a2969d6a3086799652cdf18444619a54f4",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Parallel/MPI4Py/Testing/CMakeLists.txt" : {
      "ObjectId" : "e33473e93ee3d273ee88756b444dcffb560ec072",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Parallel/MPI4Py/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "fa645f87c60073704cab9627664663f1d2f88c85",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Remote/CMakeLists.txt" : {
      "ObjectId" : "8ab47c24da70b73c2464bd6dc78ba6cc91768117",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Functions to fetch remote modules.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Remote/PoissonReconstruction.remote.cmake" : {
      "ObjectId" : "804d14dc0d5e303796853027b2716f3ba2ad28e7",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Poisson Reconstruction\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 2019 Feb 13\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Remote/Powercrust.remote.cmake" : {
      "ObjectId" : "487c17cdc6b8dbec94e4000c290fb77305c3c40c",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Powercrust Reconstruction\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 2019 Feb 14\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Remote/SignedTensor.remote.cmake" : {
      "ObjectId" : "79f17a26a15e45e2d6eee794017feb9fc01385e9",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Signed Tensor Glyphs\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# May 5, 2017 master\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Remote/SplineDrivenImageSlicer.remote.cmake" : {
      "ObjectId" : "94aab014a4e859f9e7562c39f23c4e2cd434e883",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Midas Journal 838\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 2019 Feb 11\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Remote/vtkDICOM.remote.cmake" : {
      "ObjectId" : "ddf5366c376eb15c61249665810a7c7e052d8f3b",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Dicom Classes\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# vtk-dicom with second batch of VTK 8.90 fixes\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Remote/vtkFiltersMomentInvariants.remote.cmake" : {
      "ObjectId" : "d8e238869ab59154e0382b2fbed59bd7319f22e8",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# vtkFiltersMomentInvariants\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Rendering/Annotation/CMakeLists.txt" : {
      "ObjectId" : "3a701dbf8541f893ea7844c9201270597eb6312a",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/Annotation/Testing/CMakeLists.txt" : {
      "ObjectId" : "025a0398a0bf68654b3bffd72bbc633fcd0a7b01",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/Annotation/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "5adb84f9a71baf5b2971312c462e54ede60b6753",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/Annotation/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "48a7083ffb3536446c6d7e157b8bdc86a16dbf26",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/Context2D/CMakeLists.txt" : {
      "ObjectId" : "1bbcc7dc11dd066fb17515e27b010ce4c9fc5874",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/Context2D/Testing/CMakeLists.txt" : {
      "ObjectId" : "f993f0972e071ce363fa140668680c225059ae09",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/Context2D/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "28fa5c4570f8b640ec373fbd341b52d979704909",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generic tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Rendering/Context2D/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "a90add41e33e98a0f688bf7281544bfae10b6b2f",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/ContextOpenGL2/CMakeLists.txt" : {
      "ObjectId" : "2324a0fb9dc22b80ec777847cb613539cb1414bf",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/Core/CMakeLists.txt" : {
      "ObjectId" : "2041d21060d3975106880d2f32e3394a2bf8de59",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Needed by vtkAssembly\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Needed by vtkRenderer\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Needed by vtkAreaPicker\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Needed by vtkRenderWindowInteractor\n",
        "Line" : 118,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Needed by vtkPropPicker\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Needed for the InteractorStyleSwitch...\n",
        "Line" : 125,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Needed by vtkRenderWindowInteractor, for the default interactor.\n",
        "Line" : 131,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# vtkTDx stuff dragged in by vtkInteractorStyle\n",
        "Line" : 136,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Some of the new rendering code - may move around in the future.\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# needed as we do not have vtkRenderingOpenGLConfigure.h here\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# dummy out painterdevice adapter\n",
        "Line" : 154,
        "CharPositionInLine" : 23
      },
      "11" : {
        "Text" : "# dummy out painter device adapter\n",
        "Line" : 155,
        "CharPositionInLine" : 26
      },
      "CommentCount" : 12
    },
    "Rendering/Core/Testing/CMakeLists.txt" : {
      "ObjectId" : "1dfabf03067720ce612e253c5f61c3c7ab8f4b55",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/Core/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "ba86eb207f2e5e7c05829c519eb231b424cb52ea",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# composite glyphs are only supported on OpenGL2.\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# the following produce incorrect results in OpenGL\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# TestViewDependentErrorMetric.cxx # Loads of extra deps - move?\n\n# TestHierarchicalBoxPipeline.cxx  # legacy code\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# fails on OpenGL Mesa\n",
        "Line" : 109,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 4
    },
    "Rendering/Core/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "fd4a77cd0c2fa94ab5329fb49dd48d71a0fe313e",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# XML shader code removed, test needs rewriting for new API\n\n#TestGenericVertexAttributesGLSL.py\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#  TestScalarMaterialMode.py\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Tests that do not use a baseline image\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Rendering/External/CMakeLists.txt" : {
      "ObjectId" : "0df3447df820b81750bfdb5a694d5c83d11179c3",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/External/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/External/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "1f72a011e8a2904c10be1dc2f489c0d76b10c21d",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# GLUT tests don't work on Apple.\n\n# see discussion on vtk/vtk!5169\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# TODO: Make FindGLUT use imported targets.\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Rendering/FreeType/CMakeLists.txt" : {
      "ObjectId" : "1a755d5556964f8628fa5de0bc6728cec36cb65a",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/FreeType/Testing/CMakeLists.txt" : {
      "ObjectId" : "aabac3feeebccac16370d1198c62a60ceab26bad",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/FreeType/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "e8c7bd7806e6516ac3f65cb8e8d53fde3e576604",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add tests that do not require data or produce vector output\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check for vtkErrorMacro calls in these tests (mainly for empty inputs):\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Rendering/FreeType/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "e148920d0cb260358c035bc1b072825f3ae21ea5",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/FreeTypeFontConfig/CMakeLists.txt" : {
      "ObjectId" : "92d85c81954667ac08a8efec1988ae5cea26c75d",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/FreeTypeFontConfig/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/FreeTypeFontConfig/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "0268285809537380f1726c65d02824e99c5ead74",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/GL2PSOpenGL2/CMakeLists.txt" : {
      "ObjectId" : "b38280b9cfaf2b0efec1dd91247f7acb686377cc",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/GL2PSOpenGL2/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/GL2PSOpenGL2/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "3d26deed52aea4de4a038b31c9e8198d3a0aae0e",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create rasterize/verify tests to check generated postscript:\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compile the PNGCompare test, which is used to validate PNG images (read from\n\n# disk, not generated in VTK).\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Rendering/Image/CMakeLists.txt" : {
      "ObjectId" : "6837ca66be72f3775f213ed9f24530e6f667db7c",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/Image/Testing/CMakeLists.txt" : {
      "ObjectId" : "e264eb7869c0e81b5967f038f0f8b433dba67d2a",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/Image/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "06bd2616178f69a165030ce5f0486101eb210abd",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/Image/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "c82c5feb3b69def2ab30d84b9c6abbbd9f31e638",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/LICOpenGL2/CMakeLists.txt" : {
      "ObjectId" : "89b697afeb6f33239381d3184e274d9a73f8f33a",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/LICOpenGL2/Testing/CMakeLists.txt" : {
      "ObjectId" : "d57b89c09a632ed378ce8ec555de50357340ebeb",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/LICOpenGL2/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "b36c2d2518dc04345d7d28dfb82e6c6b748fa8fc",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# basic tests on the legacy filters\n\n# exercises line integral convolution 2d\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# surface lic painter tests\n\n# get decent coverage by calling\n\n# varying arguments to the following\n\n# test exec. to get unique test names\n\n# avoid vtk_add_test_cxx and add exec\n\n# and it's test cases manually\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# surface lic on a curved surface\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# surface lic on a slice\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Rendering/LOD/CMakeLists.txt" : {
      "ObjectId" : "44e6910f8bf095dbfdc668ff78b842f8c48c5240",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/LOD/Testing/CMakeLists.txt" : {
      "ObjectId" : "aabac3feeebccac16370d1198c62a60ceab26bad",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/LOD/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "c1288e233e0e1008171829b497b85be1921abfce",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/LOD/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "62110e2362e9d390cc6281662eca24e5414cf597",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/Label/CMakeLists.txt" : {
      "ObjectId" : "69ac858060154cc78526e95c90785219db8da327",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/Label/Testing/CMakeLists.txt" : {
      "ObjectId" : "af3d9ae2df3c2c9b37f3090a29d4328d762e9225",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/Label/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "95c84f8b1b2f073a59ed4886112b5a8e97336e2c",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/Label/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "996fe66d62a8c69f091409939951a11fd3830906",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/Matplotlib/CMakeLists.txt" : {
      "ObjectId" : "b407f20ba272e638f878e2009eb19730064bea68",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/Matplotlib/Testing/CMakeLists.txt" : {
      "ObjectId" : "ecae2a9ddaf64e197cfcafe3f53a75788eeeee08",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/Matplotlib/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "9858bd35ad4855a6931575006fa2ca326ace8b54",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check that matplotlib is available\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add tests that require data\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "Rendering/OpenGL2/CMakeLists.txt" : {
      "ObjectId" : "3fe9635160f0514e797e57f09fb1117c95963bff",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The TDx support has not been moved, this header is here to define nothing,\n\n# and so allow classes in other modules to safely include it and keep going.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add opengl support test execulatble on windows\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# setup factory overrides\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Now to see about the GPU info list.\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Update sources to include render window specializations for\n\n# offscreen-only modes, if enabled.\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Setup factory overrides and add window system specific render windows.\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add some custom overrides\n",
        "Line" : 210,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Add some custom overrides\n",
        "Line" : 224,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Add some custom overrides\n",
        "Line" : 238,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Set specified Objective-C++ flags, if any.\n",
        "Line" : 257,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Add some custom overrides\n",
        "Line" : 267,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Add some custom overrides\n",
        "Line" : 279,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Set specified Objective-C++ flags, if any.\n",
        "Line" : 293,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Detect and clear OpenGL errors. If not then other classes/user code\n\n# may detect VTK's OpenGL errors and vice-versa.\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Add OpenGL command stream annotations via\n\n# vtkOpenGLRenderUtilities::MarkDebugEvent when enabled:\n",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Configure the module specific settings into a module configured header.\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "Rendering/OpenGL2/Testing/CMakeLists.txt" : {
      "ObjectId" : "faec75c8b41d11bcb2d117bf452c4a63fce41fec",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/OpenGL2/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "2d544b362fcca08caa9d16e429acb5369336abb6",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/OpenGL2/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "0034899bd4ae3942806defc95d0913b6abdfe574",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/OpenVR/CMakeLists.txt" : {
      "ObjectId" : "dd8480a18469ea52b14033edeb6f1ad6346e1982",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generates headers with char arrays that contain the model file contents.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Rendering/OpenVR/Testing/CMakeLists.txt" : {
      "ObjectId" : "1b53c415a2b5fe905e2f884b9bdc310f987ba593",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/OpenVR/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "64570f5501ed4c8e8628e4fb7757e57ad8f21ff6",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  Medical.cxx,NO_VALID\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Rendering/Parallel/CMakeLists.txt" : {
      "ObjectId" : "827f5ed0d48b896fdaaf7745c0c57e8b98a9e54e",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/Parallel/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/Parallel/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "a6f4ad3ef7cc406523e46c1cdbb7d5b2489e787b",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/ParallelLIC/CMakeLists.txt" : {
      "ObjectId" : "af7b8453c439a1451f87957ffffea154461d84be",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/PythonContext2D/CMakeLists.txt" : {
      "ObjectId" : "9d8f6566441c96272dfbd3cb146dc7a673f2911e",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/PythonContext2D/Testing/CMakeLists.txt" : {
      "ObjectId" : "e33473e93ee3d273ee88756b444dcffb560ec072",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/PythonContext2D/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "dfe0423236c379081ec2857aaebb36b1cadec350",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/Qt/CMakeLists.txt" : {
      "ObjectId" : "818e79df6e57c271a88bda1104e150824159f442",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/Qt/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/Qt/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "018c074c228a9cbec5b500d64163a55402d5aeb0",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/RayTracing/CMakeLists.txt" : {
      "ObjectId" : "a2f685d429913faadbb5d29421c8b3b84b166660",
      "LastModified" : "2019-04-17T15:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: Send patches upstream to export targets from ospray.\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# TODO: FindOSPRay should do this.\n\n# OSPRay_Core uses MMTime which is in it's own special library.\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# VisRTX\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Rendering/RayTracing/Testing/CMakeLists.txt" : {
      "ObjectId" : "5e16f938bf81d8340dc417c60757b1de55ea57fb",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/RayTracing/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "a4f075ee72d8c7d017c2ddeada0c34303057726e",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Surface rendering tests\n",
        "Line" : 3,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Volume rendering tests\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#TestGPURayCastPositionalLights.cxx\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Path tracer tests\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Miscelaneous tests\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# OSPRay tests that are rerun with the OptiX backend\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Tests combining both OSPRay and OptiX backends\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Do we have MPI and parallel support\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "Rendering/SceneGraph/CMakeLists.txt" : {
      "ObjectId" : "6f868a9adc7776ddff867d1d32674c85e877b2c7",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/SceneGraph/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/SceneGraph/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "5502573ec402d394c6841816d65cac5bb7cddb04",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/Tk/CMakeLists.txt" : {
      "ObjectId" : "6a7b84ab114ec2e64f0c4f200bee96d8b8dae7c5",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: Make FindTCL.cmake use imported targets\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Need Tk internal headers on Windows and OS X\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Rendering/Tk/Testing/CMakeLists.txt" : {
      "ObjectId" : "f382fcdebe2c54e061a728f352fa81afcd1d5d47",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/Tk/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "3584a93d7758e809d4ba1f7b9e69bad9bf795696",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/Volume/CMakeLists.txt" : {
      "ObjectId" : "90d654f7edd6bec01bd430a064b0e26f00f77b1e",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/Volume/Testing/CMakeLists.txt" : {
      "ObjectId" : "9cbd6fb8dd50b86014ab75496c637b3ee35c3ec3",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/Volume/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "76cdcfc359b634a314ddb6cd7c759651d7ca95ee",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# everyone gets these tests\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Rendering/Volume/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "a4dcd8dc374901485199911242e55b5e2f57330a",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/VolumeAMR/CMakeLists.txt" : {
      "ObjectId" : "a4c5a6ead085a0765758f457ed06a5a482ff5c88",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/VolumeOpenGL2/CMakeLists.txt" : {
      "ObjectId" : "3e365214656aa6c7e474c06de740e81346913cac",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Now for the object factory.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Rendering/VolumeOpenGL2/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Rendering/VolumeOpenGL2/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "5f3bce088e440cb9b57197f955a50352c2dd9d23",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# everyone gets these tests\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Testing/Core/CMakeLists.txt" : {
      "ObjectId" : "04759eb28cfa5e1cf6c91eca5a8e2227d9d23105",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Write out a summary of the configuration for use in the\n\n# `TestSystemInformation` test.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Testing/External/CMakeLists.txt" : {
      "ObjectId" : "508ed5c2245b1754983a0255f34ea9aacc722ae7",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This project builds the test directories from all VTK modules as a separate\n\n# project outside the main VTK build tree as if they were an application.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find the top of the main VTK source tree.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find the VTK build or install tree.  Assume the version matches exactly.\n\n# One should provide VTK_DIR explicitly in our intended use cases.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Tests use some macros only stored in VTK's source tree.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This is a cross-platform project so we cannot use the MS _s API.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Find the set of modules in the source tree.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Input information for test build files.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Create target to download data from the VTKData group.  This must come after\n\n# all tests have been added that reference the group, so we put it last.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "Testing/External/CTestConfig.cmake" : {
      "ObjectId" : "cb5795d6795e26d76026dd12c327658447e2b41a",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Testing/GenericBridge/CMakeLists.txt" : {
      "ObjectId" : "906ad2cc7dc0aa0126d5ed140a92629bc0c2738f",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Testing/IOSQL/CMakeLists.txt" : {
      "ObjectId" : "9b86d0c2b1a5c0e823850fcf9cb398cde10ca9f2",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Testing/Install/CMakeLists.txt" : {
      "ObjectId" : "f0ee3e39673fd8ba7df6f04d339abc645530c0ba",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Test \"make install\"\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Testing/Install/InstallTest.cmake" : {
      "ObjectId" : "96bc2b39488e3c3586d4a8a595011ea97861c6c5",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Testing/Rendering/CMakeLists.txt" : {
      "ObjectId" : "bbee60eef9bdc248aa577353cceddf62b7476ee0",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/diy2/CMakeLists.txt" : {
      "ObjectId" : "c89fff87d623ab0a04e98973af2ac9eaaedbfea7",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/diy2/vtkdiy2/CMakeLists.txt" : {
      "ObjectId" : "33c489631955aeef684605d673196649a7ae00ab",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/doubleconversion/CMakeLists.txt" : {
      "ObjectId" : "840016cbc7a4f8ced49e6101a78fee314c02c9b4",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/doubleconversion/vtkdoubleconversion/CMakeLists.txt" : {
      "ObjectId" : "1fe06e7c22d76afd6fcd8911b8b15d2be4f4f5f7",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/eigen/CMakeLists.txt" : {
      "ObjectId" : "1ba6474a92c8f0d756e3a317ef3b1660e2e7bd19",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/eigen/vtkeigen/CMakeLists.txt" : {
      "ObjectId" : "7be21b7222d51570bcd2a72013f94e288e21d9b0",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# XXX(kitware): VTK handles the minimum CMake version.\n",
        "Line" : 3,
        "CharPositionInLine" : 11
      },
      "1" : {
        "Text" : "# guard against in-source builds\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Alias Eigen_*_DIR to Eigen3_*_DIR:\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# guard against bad build-type strings\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#############################################################################\n\n# retrieve version infomation                                               #\n\n#############################################################################\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# automatically parse the version number\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# XXX(kitware): VTK doesn't have a mercurial import.\n",
        "Line" : 46,
        "CharPositionInLine" : 11
      },
      "7" : {
        "Text" : "# if we are not in a mercurial clone\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# if the mercurial program is absent or this will leave the EIGEN_HG_CHANGESET string empty,\n\n# but won't stop CMake.\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# if this is the default (aka development) branch, extract the mercurial changeset number from the hg tip output...\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#...and show it next to the version number\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# XXX(kitware): VTK handles installation.\n",
        "Line" : 70,
        "CharPositionInLine" : 11
      },
      "12" : {
        "Text" : "#############################################################################\n\n# find how to link to the standard libraries                                #\n\n#############################################################################\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# XXX(kitware): hiding third party cache variables.\n",
        "Line" : 83,
        "CharPositionInLine" : 11
      },
      "14" : {
        "Text" : "# XXX(kitware): silencing third party messages.\n",
        "Line" : 105,
        "CharPositionInLine" : 11
      },
      "15" : {
        "Text" : "# XXX(kitware): hardcoding settings.\n",
        "Line" : 113,
        "CharPositionInLine" : 11
      },
      "16" : {
        "Text" : "# XXX(kitware): hardcoding settings.\n",
        "Line" : 119,
        "CharPositionInLine" : 11
      },
      "17" : {
        "Text" : "# Disable pkgconfig only for native Windows builds\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# XXX(kitware): hardcoding settings.\n",
        "Line" : 130,
        "CharPositionInLine" : 11
      },
      "19" : {
        "Text" : "# We assume that other compilers are partly compatible with GNUCC\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# clang outputs some warnings for unknown flags that are not caught by check_cxx_compiler_flag\n\n# adding -Werror turns such warnings into errors\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "#ei_add_cxx_compiler_flag(\"-Weverything\")              # clang\n",
        "Line" : 166,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "#  ei_add_cxx_compiler_flag(\"-Wconversion\")\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# -Wshadow is insanely too strict with gcc, hopefully it will become usable with gcc 6\n\n# if(NOT CMAKE_COMPILER_IS_GNUCXX OR (CMAKE_CXX_COMPILER_VERSION VERSION_GREATER \"5.0.0\"))\n",
        "Line" : 183,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# disable ICC's \"operands are evaluated in unspecified order\" remark\n\n# disable ICC's \"warning #2304: non-explicit constructor with single argument may cause implicit type conversion\" produced by -Wnon-virtual-dtor\n",
        "Line" : 196,
        "CharPositionInLine" : 56
      },
      "25" : {
        "Text" : "# The -ansi flag must be added last, otherwise it is also used as a linker flag by check_cxx_compiler_flag making it fails\n\n# Moreover we should not set both -strict-ansi and -ansi\n",
        "Line" : 200,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# disable clang warning: argument unused during compilation: '-ansi'\n",
        "Line" : 203,
        "CharPositionInLine" : 56
      },
      "27" : {
        "Text" : "# XXX(kitware): hardcoding settings.\n",
        "Line" : 218,
        "CharPositionInLine" : 13
      },
      "28" : {
        "Text" : "# XXX(kitware): hardcoding settings.\n",
        "Line" : 326,
        "CharPositionInLine" : 15
      },
      "29" : {
        "Text" : "# C4127 - conditional expression is constant\n\n# C4714 - marked as __forceinline not inlined (I failed to deactivate it selectively)\n\n#         We can disable this warning in the unit tests since it is clear that it occurs\n\n#         because we are oftentimes returning objects that have a destructor or may\n\n#         throw exceptions - in particular in the unit tests we are throwing extra many\n\n#         exceptions to cover indexing errors.\n\n# C4505 - unreferenced local function has been removed (impossible to deactive selectively)\n",
        "Line" : 339,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# replace all /Wx by /W4\n",
        "Line" : 348,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# XXX(kitware): hardcoding settings.\n",
        "Line" : 353,
        "CharPositionInLine" : 15
      },
      "32" : {
        "Text" : "# XXX(kitware): hardcoding settings.\n",
        "Line" : 364,
        "CharPositionInLine" : 13
      },
      "33" : {
        "Text" : "# arch is not supported on 64 bit systems, SSE is enabled automatically.\n",
        "Line" : 371,
        "CharPositionInLine" : 6
      },
      "34" : {
        "Text" : "# XXX(kitware): hardcoding settings.\n",
        "Line" : 378,
        "CharPositionInLine" : 11
      },
      "35" : {
        "Text" : "# XXX(kitware): hardcoding settings.\n",
        "Line" : 412,
        "CharPositionInLine" : 11
      },
      "36" : {
        "Text" : "# XXX(kitware): hardcoding settings.\n",
        "Line" : 422,
        "CharPositionInLine" : 11
      },
      "37" : {
        "Text" : "# XXX(kitware): hardcoding settings.\n",
        "Line" : 432,
        "CharPositionInLine" : 11
      },
      "38" : {
        "Text" : "# XXX(kitware): hardcoding settings.\n",
        "Line" : 438,
        "CharPositionInLine" : 11
      },
      "39" : {
        "Text" : "# XXX(kitware): VTK handles installation.\n",
        "Line" : 446,
        "CharPositionInLine" : 11
      },
      "40" : {
        "Text" : "# Backward compatibility support for EIGEN_INCLUDE_INSTALL_DIR\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# similar to set_target_properties but append the property instead of overwriting it\n",
        "Line" : 472,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# if the property wasn't previously set, ${previous} is now \"previous-NOTFOUND\" which cmake allows catching with plain if()\n",
        "Line" : 476,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# XXX(kitware): VTK handles installation.\n",
        "Line" : 483,
        "CharPositionInLine" : 11
      },
      "44" : {
        "Text" : "# can't do EXCLUDE_FROM_ALL here, breaks CTest\n",
        "Line" : 505,
        "CharPositionInLine" : 27
      },
      "45" : {
        "Text" : "# add SYCL\n",
        "Line" : 519,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# must be after test and unsupported, for configuring buildtests.in\n",
        "Line" : 530,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# TODO: consider also replacing EIGEN_BUILD_BTL by a custom target \"make btl\"?\n",
        "Line" : 533,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Interface libraries require at least CMake 3.0\n",
        "Line" : 594,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Imported target support\n",
        "Line" : 598,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# Export as title case Eigen\n",
        "Line" : 607,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# Eigen does not provide components\n",
        "Line" : 617,
        "CharPositionInLine" : 39
      },
      "52" : {
        "Text" : "# Remove CMAKE_SIZEOF_VOID_P from Eigen3ConfigVersion.cmake since Eigen does\n\n# not depend on architecture specific settings or libraries. More\n\n# specifically, an Eigen3Config.cmake generated from a 64 bit target can be\n\n# used for 32 bit targets as well (and vice versa).\n",
        "Line" : 619,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# The Eigen target will be located in the Eigen3 namespace. Other CMake\n\n# targets can refer to it using Eigen3::Eigen.\n",
        "Line" : 630,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# Export Eigen3 package to CMake registry such that it can be easily found by\n\n# CMake even if it has not been installed to a standard directory.\n",
        "Line" : 633,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# Fallback to legacy Eigen3Config.cmake without the imported target\n",
        "Line" : 640,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# If CMakePackageConfigHelpers module is available (CMake >= 2.8.8)\n\n# create a relocatable Config file, otherwise leave the hardcoded paths       \n",
        "Line" : 642,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# Eigen does not provide components\n",
        "Line" : 652,
        "CharPositionInLine" : 41
      },
      "58" : {
        "Text" : "# The PACKAGE_* variables are defined by the configure_package_config_file\n\n# but without it we define them manually to the hardcoded paths\n",
        "Line" : 655,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "# Add uninstall target\n",
        "Line" : 676,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 60
    },
    "ThirdParty/eigen/vtkeigen/cmake/FindStandardMathLibrary.cmake" : {
      "ObjectId" : "711b0e4b4f1d82323123088b4ef04cd0836b5f9f",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find how to link to the standard math library, if anything at all is needed to do.\n\n# On most platforms this is automatic, but for example it's not automatic on QNX.\n\n#\n\n# Once done this will define\n\n#\n\n#  STANDARD_MATH_LIBRARY_FOUND - we found how to successfully link to the standard math library\n\n#  STANDARD_MATH_LIBRARY - the name of the standard library that one has to link to.\n\n#                            -- this will be left empty if it's automatic (most platforms).\n\n#                            -- this will be set to \"m\" on platforms where one must explicitly\n\n#                               pass the \"-lm\" linker flag.\n\n#\n\n# Copyright (c) 2010 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# a little test program for c++ math functions.\n\n# notice the std:: is required on some platforms such as QNX\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# first try compiling/linking the test program without any linker flags\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the test program linked successfully without any linker flag.\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# the test program did not link successfully without any linker flag.\n\n# This is a very uncommon case that so far we only saw on QNX. The next try is the\n\n# standard name 'm' for the standard math library.\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# the test program linked successfully when linking to the 'm' library\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# the test program still doesn't link successfully\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "ThirdParty/eigen/vtkeigen/eigen/CMakeLists.txt" : {
      "ObjectId" : "9eb502b792d4a9607e2d323f2d8114939b43c209",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/exodusII/CMakeLists.txt" : {
      "ObjectId" : "9b0cf4b26fe10e08901deedab20c1a7f307f1ea2",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#configure_file(\n\n#  \"${CMAKE_CURRENT_SOURCE_DIR}/vtk_exodusII.h.in\"\n\n#  \"${CMAKE_CURRENT_BINARY_DIR}/vtk_exodusII.h\")\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  FILES \"${CMAKE_CURRENT_BINARY_DIR}/vtk_exodusII.h\")\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ThirdParty/exodusII/vtkexodusII/CMakeLists.txt" : {
      "ObjectId" : "025abc43e0a8f9a94abdafdb7dfc95713d8f9216",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/expat/CMakeLists.txt" : {
      "ObjectId" : "09db663f9cc0ebe607dcb07867094e272b956392",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/expat/vtkexpat/CMakeLists.txt" : {
      "ObjectId" : "3a65e721f9e41d9d3a967152f762797e253cc302",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is copyrighted under the BSD-license for buildsystem files of KDE\r\n\n# copyright 2010, Patrick Spendrin <ps_ml@gmx.de>\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# XXX(kitware): Force build settings.\r\n",
        "Line" : 4,
        "CharPositionInLine" : 11
      },
      "2" : {
        "Text" : "# configuration options\r\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# XXX(kitware): Force configuration values.\r\n",
        "Line" : 59,
        "CharPositionInLine" : 11
      },
      "4" : {
        "Text" : "# XXX(kitware): Force configuration values.\r\n",
        "Line" : 71,
        "CharPositionInLine" : 15
      },
      "5" : {
        "Text" : "# XXX(kitware): Force configuration values.\r\n",
        "Line" : 82,
        "CharPositionInLine" : 11
      },
      "6" : {
        "Text" : "# XXX(kitware): This flag only works on GCC alikes. Upstream should address this.\r\n",
        "Line" : 126,
        "CharPositionInLine" : 11
      },
      "7" : {
        "Text" : "# XXX(kitware): Force build settings.\r\n",
        "Line" : 142,
        "CharPositionInLine" : 11
      },
      "8" : {
        "Text" : "# XXX(kitware): Settings handled by VTK.\r\n",
        "Line" : 167,
        "CharPositionInLine" : 11
      },
      "9" : {
        "Text" : "# XXX(kitware): Exporting is handled via generate_export_header\r\n",
        "Line" : 188,
        "CharPositionInLine" : 19
      },
      "10" : {
        "Text" : "# XXX(kitware): Use VTK's build macros.\r\n",
        "Line" : 199,
        "CharPositionInLine" : 11
      },
      "11" : {
        "Text" : "# sync\r\n\n# with\r\n\n# configure.ac!\r\n",
        "Line" : 205,
        "CharPositionInLine" : 20
      },
      "12" : {
        "Text" : "# Support XML files >2GB.\r\n",
        "Line" : 241,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# XXX(kitware): Do not install a .pc file.\r\n",
        "Line" : 245,
        "CharPositionInLine" : 11
      },
      "14" : {
        "Text" : "## these are unittests that can be run on any platform\r\n",
        "Line" : 285,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 15
    },
    "ThirdParty/expat/vtkexpat/ConfigureChecks.cmake" : {
      "ObjectId" : "dbb49210202fbc9b5b564ebf728a6e4038b1846d",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#/* Define to 1 if you have the ANSI C header files. */\r\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#/* 1234 = LIL_ENDIAN, 4321 = BIGENDIAN */\r\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ThirdParty/expat/vtkexpat/expat_config.h.cmake" : {
      "ObjectId" : "0b630c97446d03be39a845b476c54f6147d01099",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* expat_config.h.cmake.  Based upon generated expat_config.h.in.  */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* 1234 = LIL_ENDIAN, 4321 = BIGENDIAN */",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Define to 1 if you have the `arc4random' function. */",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* Define to 1 if you have the `arc4random_buf' function. */",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Define to 1 if you have the `bcopy' function. */",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Define to 1 if you have the <dlfcn.h> header file. */",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Define to 1 if you have the <fcntl.h> header file. */",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* Define to 1 if you have the `getpagesize' function. */",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* Define to 1 if you have the `getrandom' function. */",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* Define to 1 if you have the <inttypes.h> header file. */",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Define to 1 if you have the `bsd' library (-lbsd). */",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Define to 1 if you have the `memmove' function. */",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* XXX(kitware): VTK is fine with low entropy. */",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* Define to 1 if you have the <memory.h> header file. */",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Define to 1 if you have a working `mmap' system call. */",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Define to 1 if you have the <stdint.h> header file. */",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Define to 1 if you have the <stdlib.h> header file. */",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* Define to 1 if you have the <strings.h> header file. */",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* Define to 1 if you have the <string.h> header file. */",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* Define to 1 if you have `syscall' and `SYS_getrandom'. */",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* Define to 1 if you have the <sys/stat.h> header file. */",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* Define to 1 if you have the <sys/types.h> header file. */",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* Define to 1 if you have the <unistd.h> header file. */",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/* Define to the address where bug reports for this package should be sent. */",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/* Define to the full name of this package. */",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "/* Define to the full name and version of this package. */",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "/* Define to the one symbol short name of this package. */",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "/* Define to the version of this package. */",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "/* Define to 1 if you have the ANSI C header files. */",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "/* whether byteorder is bigendian */",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "/* Define to specify how much context to retain around the current parse\r\n   point. */",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "/* Define to make parameter entity parsing functionality available. */",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "/* Define to make XML Namespaces functionality available. */",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "/* Define to extract entropy from /dev/urandom. */",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "/* Define to use UTF-16 chars (two bytes). */",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "/* Define to use wchar_t as UTF-16 char type instead of unsigned short. */",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "/* Define to __FUNCTION__ or \"\" if `__func__' does not conform to ANSI C. */",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "/* Define to `long' if <sys/types.h> does not define. */",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "/* Define to `unsigned' if <sys/types.h> does not define. */",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 39
    },
    "ThirdParty/freetype/CMakeLists.txt" : {
      "ObjectId" : "760f325dacdb3c001b5180147704b5a617847587",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/freetype/vtkfreetype/CMakeLists.txt" : {
      "ObjectId" : "fc4395e863e6451f777df2a43f29224090859493",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# If we want freetype's Mac font support we need to link against\n\n# a couple of Mac OS X frameworks.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ThirdParty/gl2ps/CMakeLists.txt" : {
      "ObjectId" : "b9accd26f868b0057329d215f6b2fa2ab47e3df4",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Unreleased. Requires these commits:\n\n# https://gitlab.onelab.info/gl2ps/gl2ps/commit/2b7018cce99dfdf3a338e796530551d89d5730ff\n\n# https://gitlab.onelab.info/gl2ps/gl2ps/commit/f3417eb98cff4bad0dbfbb7b5d3a0d69f8a10106\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "ThirdParty/gl2ps/vtkgl2ps/CMakeLists.txt" : {
      "ObjectId" : "c4cb6f71bd9630f7aaf06727f6d0bb3841a6d5bb",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/glew/CMakeLists.txt" : {
      "ObjectId" : "005a12c824e80222fade3a0f458b4decda5d55c8",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/glew/vtkglew/CMakeLists.txt" : {
      "ObjectId" : "2d8da2034c7f7e151eae4f3a668a10573d2ec943",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# GLEW with OSMesa only works on Linux systems right now.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# https://github.com/nigels-com/glew/issues/157\n",
        "Line" : 40,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 2
    },
    "ThirdParty/hdf5/CMakeLists.txt" : {
      "ObjectId" : "d933874f1128f956078b75eca72dc6eaf95458e0",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/hdf5/vtkhdf5/CMakeFilters.cmake" : {
      "ObjectId" : "4f966cfa0c8b55964596d267252051bc5c6c3304",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright by The HDF Group.\n\n# All rights reserved.\n\n#\n\n# This file is part of HDF5.  The full HDF5 copyright notice, including\n\n# terms governing use, modification, and redistribution, is contained in\n\n# the COPYING file, which can be found at the root of the source code\n\n# distribution tree, or in https://support.hdfgroup.org/ftp/HDF5/releases.\n\n# If you do not have access to either file, you may request a copy from\n\n# help@hdfgroup.org.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#option (HDF5_ALLOW_EXTERNAL_SUPPORT \"Allow External Library Building (NO GIT TGZ)\" \"NO\")\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 15,
        "CharPositionInLine" : 11
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option for ZLib support\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 44,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# XXX(kitware): Use vtkzlib.\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Legacy find\n",
        "Line" : 56,
        "CharPositionInLine" : 28
      },
      "7" : {
        "Text" : "# This project is being called from within another and ZLib is already configured\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#message (STATUS \"Filter ZLIB is ON\")\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option for SzLib support\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# XXX(kitware): no need for szip support.\n",
        "Line" : 101,
        "CharPositionInLine" : 11
      },
      "11" : {
        "Text" : "# Legacy find\n",
        "Line" : 108,
        "CharPositionInLine" : 26
      },
      "CommentCount" : 12
    },
    "ThirdParty/hdf5/vtkhdf5/CMakeInstallation.cmake" : {
      "ObjectId" : "573576f5bca84dbb9eca2bbdf5a2d7ae8ac0c039",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright by The HDF Group.\n\n# All rights reserved.\n\n#\n\n# This file is part of HDF5.  The full HDF5 copyright notice, including\n\n# terms governing use, modification, and redistribution, is contained in\n\n# the COPYING file, which can be found at the root of the source code\n\n# distribution tree, or in https://support.hdfgroup.org/ftp/HDF5/releases.\n\n# If you do not have access to either file, you may request a copy from\n\n# help@hdfgroup.org.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check for Installation Utilities\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add Target(s) to CMake Install for import into other projects\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Export all exported targets to the build tree for use by parent project\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set includes needed for build\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set variables needed for installation\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# XXX(kitware): Don't install artifacts.\n",
        "Line" : 68,
        "CharPositionInLine" : 11
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure the hdf5-config.cmake file for the build directory\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure the hdf5-config.cmake file for the install directory\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure the hdf5-config-version .cmake file for the install directory\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure the libhdf5.settings file for the lib info\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure the HDF518_Examples.cmake file and the examples\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 143,
        "CharPositionInLine" : 11
      },
      "13" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure the README.txt file for the binary package\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# XXX(kitware): skip unnecessary installation rules.\n",
        "Line" : 192,
        "CharPositionInLine" : 11
      },
      "15" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure the COPYING.txt file for the windows binary package\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# XXX(kitware): skip unnecessary installation rules.\n",
        "Line" : 199,
        "CharPositionInLine" : 21
      },
      "17" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add Document File(s) to CMake Install\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set the cpack variables\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Installers for 32- vs. 64-bit CMake:\n\n#  - Root install directory (displayed to end user at installer-run time)\n\n#  - \"NSIS package/display name\" (text used in the installer GUI)\n\n#  - Registry key used to store info about the installation\n",
        "Line" : 308,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# set the install/unistall icon used for the installer itself\n\n# There is a bug in NSI that does not handle full unix paths properly.\n",
        "Line" : 320,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# set the package header icon for MUI\n",
        "Line" : 324,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "#WiX variables\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# .. variable:: CPACK_WIX_LICENSE_RTF\n\n#  RTF License File\n\n#\n\n#  If CPACK_RESOURCE_FILE_LICENSE has an .rtf extension it is used as-is.\n\n#\n\n#  If CPACK_RESOURCE_FILE_LICENSE has an .txt extension it is implicitly\n\n#  converted to RTF by the WiX Generator.\n\n#  The expected encoding of the .txt file is UTF-8.\n\n#\n\n#  With CPACK_WIX_LICENSE_RTF you can override the license file used by the\n\n#  WiX Generator in case CPACK_RESOURCE_FILE_LICENSE is in an unsupported\n\n#  format or the .txt -> .rtf conversion does not work as expected.\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# .. variable:: CPACK_WIX_PRODUCT_ICON\n\n#  The Icon shown next to the program name in Add/Remove programs.\n",
        "Line" : 353,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#\n\n# .. variable:: CPACK_WIX_UI_BANNER\n\n#\n\n#  The bitmap will appear at the top of all installer pages other than the\n\n#  welcome and completion dialogs.\n\n#\n\n#  If set, this image will replace the default banner image.\n\n#\n\n#  This image must be 493 by 58 pixels.\n\n#\n\n# .. variable:: CPACK_WIX_UI_DIALOG\n\n#\n\n#  Background bitmap used on the welcome and completion dialogs.\n\n#\n\n#  If this variable is set, the installer will replace the default dialog\n\n#  image.\n\n#\n\n#  This image must be 493 by 312 pixels.\n\n#\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# make sure CMAKE_INSTALL_PREFIX ends in /\n",
        "Line" : 391,
        "CharPositionInLine" : 41
      },
      "27" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure the Info.plist file for the install bundle\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 396,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "#    list (APPEND CPACK_GENERATOR \"RPM\")\n",
        "Line" : 424,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure the spec file for the install RPM\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 449,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "#    configure_file (\"${HDF5_RESOURCES_DIR}/hdf5.spec.in\" \"${CMAKE_CURRENT_BINARY_DIR}/${HDF5_PACKAGE_NAME}.spec\" @ONLY IMMEDIATE)\n\n#    set (CPACK_RPM_USER_BINARY_SPECFILE \"${CMAKE_CURRENT_BINARY_DIR}/${HDF5_PACKAGE_NAME}.spec\")\n",
        "Line" : 452,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# By default, do not warn when built on machines using only VS Express:\n",
        "Line" : 456,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "#---------------------------------------------------------------------------\n\n# Now list the cpack commands\n\n#---------------------------------------------------------------------------\n",
        "Line" : 509,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 33
    },
    "ThirdParty/hdf5/vtkhdf5/CMakeLists.txt" : {
      "ObjectId" : "288c5532f965641484d568377ffbdc97f32b0726",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# XXX(kitware): cmake versions are handled by VTK.\n",
        "Line" : 1,
        "CharPositionInLine" : 11
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Instructions for use : Normal Build\n\n#\n\n# For standard build of HDF5 libraries,tests and tools.\n\n# Run cmake using the HDF5 source tree to generate a build tree.\n\n# Enable/Disable options according to requirements and\n\n# set CMAKE_INSTALL_PREFIX to the required install path.\n\n# Make install can be used to install all components for system-wide use.\n\n#\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Instructions for use : Sub-Project Build\n\n#\n\n# To include HDF5 as a sub-project within another project.\n\n# Set HDF5_EXTERNALLY_CONFIGURED to 1 in the parent project and\n\n# supply values for the following variables...\n\n#\n\n# HDF5_EXPORTED_TARGETS :\n\n#   Set this to the name of the targets variable which controls exports\n\n#   If unset (because parent project does not support/use the\n\n#   install (EXPORT target...) syntax), then targets are not configured\n\n#   for export during install.\n\n#\n\n# HDF5_LIB_DEPENDENCIES :\n\n#   If the build of HDF5 libs is being customized, then rules for the\n\n#   dependencies of the HDF5 libs may be 'incomplete', add additional\n\n#   dependencies to this variable so that external projects pick them up\n\n#\n\n# HDF5_EXTERNAL_LIB_PREFIX :\n\n#   If the parent project needs to install hdf libraries, but avoid\n\n#   name conflicts with system versions, then a prefix may be added\n\n#   to ensure that the correct versions configured are used.\n\n#\n\n# HDF5_INSTALL_BIN_DIR, HDF5_INSTALL_LIB_DIR, HDF5_INSTALL_INCLUDE_DIR, HDF5_INSTALL_DATA_DIR :\n\n#   Customize the 'bin', 'lib', 'include', and 'share' installation directories.\n\n#\n\n# HDF5_INSTALL_NO_DEVELOPMENT :\n\n#   Set to true to skip installation of headers and CMake package files.\n\n#\n\n# Consider this example from the ParaView project, it builds its own zlib\n\n# library and tells HDF5 to add it as a dependency - this ensures that\n\n# any project making use of this build of HDF5 will use the correct zlib\n\n#\n\n#   # Tell hdf5 that we are manually overriding certain settings\n\n#   set (HDF5_EXTERNALLY_CONFIGURED 1)\n\n#   # Avoid duplicating names of installed libraries\n\n#   set (HDF5_EXTERNAL_LIB_PREFIX \"vtk\")\n\n#   # Export configuration to this export variable\n\n#   set (HDF5_EXPORTED_TARGETS \"paraview-targets\")\n\n#\n\n#   # Setup all necessary overrides for zlib so that HDF5 uses our\n\n#   # internally compiled zlib rather than any other version\n\n#   if (HDF5_ENABLE_Z_LIB_SUPPORT)\n\n#     # We must tell the main HDF5 library that it depends on our zlib\n\n#     set (HDF5_LIB_DEPENDENCIES vtkzlib)\n\n#     # Override the zlib header file\n\n#     if (VTK_USE_SYSTEM_ZLIB)\n\n#       set (H5_ZLIB_HEADER \"zlib.h\")\n\n#     else ()\n\n#       set (H5_ZLIB_HEADER \"vtk_zlib.h\")\n\n#       # Set vars that FindZlib would have set if used in sub project\n\n#       set (ZLIB_INCLUDE_DIRS \"${VTK_ZLIB_INCLUDE_DIRS}\")\n\n#       set (ZLIB_LIBRARIES vtkzlib)\n\n#     endif ()\n\n#   endif ()\n\n#\n\n#   # Add the sub project\n\n#   add_subdirectory (Utilities/hdf5-1.8)\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 94,
        "CharPositionInLine" : 11
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Allow Visual Studio solution directories\n\n#-----------------------------------------------------------------------------\n\n# Provide a way for Visual Studio Express users to turn OFF the new FOLDER\n\n# organization feature. Default to ON for non-Express users. Express users must\n\n# explicitly turn off this option to build HDF5 in the Express IDE...\n\n#\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set the core names of all the libraries\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set the true names of all the libraries if customized by external project\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Set the target names of all the libraries\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# XXX(kitware): Don't use `-static` or `-shared` target suffixes.\n",
        "Line" : 158,
        "CharPositionInLine" : 11
      },
      "9" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Define some CMake variables for use later in the project\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# parse the full version number from H5public.h and include in H5_VERS_INFO\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#message (STATUS \"VERSION: ${H5_VERS_MAJOR}.${H5_VERS_MINOR}.${H5_VERS_RELEASE}-${H5_VERS_SUBRELEASE}\")\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# parse the full soversion number from config/lt_vers.am and include in H5_SOVERS_INFO\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#message (STATUS \"SOVERSION: ${H5_LIB_SOVERS_MAJOR}.${H5_LIB_SOVERS_RELEASE}.${H5_LIB_SOVERS_MINOR}\")\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#message (STATUS \"SOVERSION_TOOLS: ${H5_TOOLS_SOVERS_MAJOR}.${H5_TOOLS_SOVERS_RELEASE}.${H5_TOOLS_SOVERS_MINOR}\")\n",
        "Line" : 258,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "#message (STATUS \"SOVERSION_CXX: ${H5_CXX_SOVERS_MAJOR}.${H5_CXX_SOVERS_RELEASE}.${H5_CXX_SOVERS_MINOR}\")\n",
        "Line" : 269,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# XXX(kitware): VTK doesn't need Fortran support.\n",
        "Line" : 272,
        "CharPositionInLine" : 34
      },
      "17" : {
        "Text" : "#message (STATUS \"SOVERSION_F: ${H5_F_SOVERS_MAJOR}.${H5_F_SOVERS_RELEASE}.${H5_F_SOVERS_MINOR}\")\n",
        "Line" : 280,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "#message (STATUS \"SOVERSION_HL: ${H5_HL_SOVERS_MAJOR}.${H5_HL_SOVERS_RELEASE}.${H5_HL_SOVERS_MINOR}\")\n",
        "Line" : 291,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "#message (STATUS \"SOVERSION_HL_CXX: ${H5_HL_CXX_SOVERS_MAJOR}.${H5_HL_CXX_SOVERS_RELEASE}.${H5_HL_CXX_SOVERS_MINOR}\")\n",
        "Line" : 302,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# XXX(kitware): VTK doesn't need Fortran support.\n",
        "Line" : 305,
        "CharPositionInLine" : 37
      },
      "21" : {
        "Text" : "# XXX(kitware): VTK doesn't need Java support.\n",
        "Line" : 316,
        "CharPositionInLine" : 36
      },
      "22" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Basic HDF5 stuff here\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Include some macros for reusable code\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 396,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Targets built within this project are exported at Install time for use\n\n# by other projects.\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 406,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# To include a library in the list exported by the project AT BUILD TIME,\n\n# add it to this variable. This is NOT used by Make Install, but for projects\n\n# which include hdf5 as a sub-project within their build tree\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 415,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Run all the CMake configuration tests for our build environment\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 427,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Mac OS X Options\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 434,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to Build Shared and Static libs, default is both\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 441,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# XXX(kitware): `BUILD_SHARED_LIBS` is handled by VTK.\n",
        "Line" : 444,
        "CharPositionInLine" : 11
      },
      "30" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to Build Static executables\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 454,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 457,
        "CharPositionInLine" : 11
      },
      "32" : {
        "Text" : "# XXX(kitware): Hide settings VTK doesn't need.\n",
        "Line" : 475,
        "CharPositionInLine" : 11
      },
      "33" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to use code coverage\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 476,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to indicate using dmalloc\n\n#-----------------------------------------------------------------------------\n\n# option (HDF5_ENABLE_USING_DMALLOC \"Indicate that dmalloc is used\" OFF)\n\n# if (HDF5_ENABLE_USING_DMALLOC)\n\n#   find_package (DMALLOC)\n\n#   set (H5_HAVE_DMALLOC DMALLOC_FOUND)\n\n# endif ()\n",
        "Line" : 491,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to indicate using a memory checker\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 500,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to indicate internal memory allocation sanity checks are enabled\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 508,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to use deprecated public API symbols\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 516,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# When building utility executables that generate other (source) files :\n\n# we make use of the following variables defined in the root CMakeLists.\n\n# Certain systems may add /Debug or /Release to output paths\n\n# and we need to call the executable from inside the CMake configuration\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 533,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# XXX(kitware): this is not what we want for VTK.\n",
        "Line" : 542,
        "CharPositionInLine" : 13
      },
      "40" : {
        "Text" : "# XXX(kitware): Hide settings VTK doesn't need.\n",
        "Line" : 565,
        "CharPositionInLine" : 11
      },
      "41" : {
        "Text" : "# Do not generate test programs by default\n",
        "Line" : 566,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add some definitions for Debug Builds\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 569,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Enable instrumenting of the library's internal operations\n",
        "Line" : 575,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to embed library info into executables\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 587,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 593,
        "CharPositionInLine" : 13
      },
      "46" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to Enable MPI Parallel\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 605,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 609,
        "CharPositionInLine" : 11
      },
      "48" : {
        "Text" : "# XXX(kitware): VTK doesn't need Fortran support.\n",
        "Line" : 615,
        "CharPositionInLine" : 15
      },
      "49" : {
        "Text" : "# MPI checks, only do these if MPI_C_FOUND is true, otherwise they always fail\n\n# and once set, they are cached as false and not regenerated\n",
        "Line" : 616,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# Used by Fortran + MPI\n",
        "Line" : 620,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# Used by Parallel Compression feature\n",
        "Line" : 625,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# Used by big I/O feature\n",
        "Line" : 635,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# Parallel IO usage requires MPI to be Linked and Included\n",
        "Line" : 649,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 660,
        "CharPositionInLine" : 11
      },
      "55" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to use 1.6.x API\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 661,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to use 1.8.x API\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 671,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to use 1.10.x API\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 681,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Include user macros\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 697,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Include filter (zlib, szip, etc.) macros\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 702,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# XXX(kitware): Disable packaging.\n",
        "Line" : 707,
        "CharPositionInLine" : 11
      },
      "61" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option for external libraries on windows\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 708,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to use threadsafe\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 724,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# check for unsupported options\n",
        "Line" : 729,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add the HDF5 Library Target to the build\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 778,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 783,
        "CharPositionInLine" : 11
      },
      "66" : {
        "Text" : "# XXX(kitware): Disable testing of HDF5.\n",
        "Line" : 800,
        "CharPositionInLine" : 11
      },
      "67" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Dashboard and Testing Settings\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 801,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to build HDF5 Tools\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 840,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 844,
        "CharPositionInLine" : 13
      },
      "70" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to build examples\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 854,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 858,
        "CharPositionInLine" : 13
      },
      "72" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to build High Level API's\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 868,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 872,
        "CharPositionInLine" : 13
      },
      "74" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to build Fortran bindings/tests/examples\n\n# Make sure this appears before the CONFIGURE_FILE step\n\n# so that fortran name mangling is detected before writing H5pubconf.h\n\n#-----------------------------------------------------------------------------\n\n# Set default name mangling : overridden by Fortran detection in fortran dir\n",
        "Line" : 883,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# XXX(kitware): VTK doesn't need Fortran support.\n",
        "Line" : 891,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Building with PGI requires CMake 3.3 or greater  because previous versions\n\n# of CMake add the wrong compiler flag for the PGI Fortran compiler.\n",
        "Line" : 901,
        "CharPositionInLine" : 4
      },
      "77" : {
        "Text" : "# Parallel IO usage requires MPI to be Linked and Included\n",
        "Line" : 916,
        "CharPositionInLine" : 4
      },
      "78" : {
        "Text" : "#-- Build the High Level Fortran source codes\n",
        "Line" : 927,
        "CharPositionInLine" : 8
      },
      "79" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to build HDF5 C++ Library\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 934,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 938,
        "CharPositionInLine" : 13
      },
      "81" : {
        "Text" : "# check for unsupported options\n",
        "Line" : 944,
        "CharPositionInLine" : 4
      },
      "82" : {
        "Text" : "#-- Build the High Level Fortran source codes\n",
        "Line" : 961,
        "CharPositionInLine" : 8
      },
      "83" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check if Fortran's default real is double precision. If it is and HL is\n\n# being built then configure should fail due to bug HDFFV-889.\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 968,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to build HDF5 Java Library\n\n#-----------------------------------------------------------------------------\n\n# XXX(kitware): VTK doesn't need Java support.\n",
        "Line" : 978,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# XXX(kitware): needed for various headers.\n",
        "Line" : 989,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Generate the H5pubconf.h file containing user settings needed by compilation\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 995,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 87
    },
    "ThirdParty/hdf5/vtkhdf5/UserMacros.cmake" : {
      "ObjectId" : "01c73e4dfa07fef09c50ed4364927ce272963440",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright by The HDF Group.\n\n# All rights reserved.\n\n#\n\n# This file is part of HDF5.  The full HDF5 copyright notice, including\n\n# terms governing use, modification, and redistribution, is contained in\n\n# the COPYING file, which can be found at the root of the source code\n\n# distribution tree, or in https://support.hdfgroup.org/ftp/HDF5/releases.\n\n# If you do not have access to either file, you may request a copy from\n\n# help@hdfgroup.org.\n\n#\n\n########################################################\n\n#  Include file for user options\n\n########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#------------------- E X A M P L E   B E G I N--------------------------------\n\n#-----------------------------------------------------------------------------\n\n# Option to Build with User Defined Values\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# XXX(kitware): hardcode settings\n",
        "Line" : 26,
        "CharPositionInLine" : 11
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#------------------- E X A M P L E   E N D -----------------------------------\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ThirdParty/hdf5/vtkhdf5/config/cmake/ConfigureChecks.cmake" : {
      "ObjectId" : "6a4ca59e7202fa68fdfa936b27ddc65b47db0fe8",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright by The HDF Group.\n\n# All rights reserved.\n\n#\n\n# This file is part of HDF5.  The full HDF5 copyright notice, including\n\n# terms governing use, modification, and redistribution, is contained in\n\n# the COPYING file, which can be found at the root of the source code\n\n# distribution tree, or in https://support.hdfgroup.org/ftp/HDF5/releases.\n\n# If you do not have access to either file, you may request a copy from\n\n# help@hdfgroup.org.\n\n#\n\n#-----------------------------------------------------------------------------\n\n# Include all the necessary files for macros\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option for --enable-strict-format-checks\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 25,
        "CharPositionInLine" : 11
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option for --enable-metadata-trace-file\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 38,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# Decide whether the data accuracy has higher priority during data\n\n# conversions.  If not, some hard conversions will still be prefered even\n\n# though the data may be wrong (for example, some compilers don't\n\n# support denormalized floating values) to maximize speed.\n\n#\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 54,
        "CharPositionInLine" : 11
      },
      "7" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# Decide whether the presence of user's exception handling functions is\n\n# checked and data conversion exceptions are returned.  This is mainly\n\n# for the speed optimization of hard conversions.  Soft conversions can\n\n# actually benefit little.\n\n#\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 70,
        "CharPositionInLine" : 11
      },
      "9" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# Check if they would like the function stack support compiled in\n\n#\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 83,
        "CharPositionInLine" : 11
      },
      "11" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#  Are we going to use HSIZE_T\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 96,
        "CharPositionInLine" : 11
      },
      "13" : {
        "Text" : "# so far we have no check for this\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# TODO --------------------------------------------------------------------------\n\n# Should the Default Virtual File Driver be compiled?\n\n# This is hard-coded now but option should added to match configure\n\n#\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# Set the flag to indicate that the machine has window style pathname,\n\n# that is, \"drive-letter:\\\" (e.g. \"C:\") or \"drive-letter:/\" (e.g. \"C:/\").\n\n# (This flag should be _unset_ for all machines, except for Windows)\n",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# END of WINDOWS Hard code Values\n\n# ----------------------------------------------------------------------\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#  Check if Direct I/O driver works\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 141,
        "CharPositionInLine" : 13
      },
      "19" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check if C has __float128 extension\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Macro to determine the various conversion capabilities\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# message (STATUS \"===> ${TEST}\")\n",
        "Line" : 199,
        "CharPositionInLine" : 3
      },
      "22" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check various conversion capabilities\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# Set the flag to indicate that the machine is using a special algorithm to convert\n\n# 'long double' to '(unsigned) long' values.  (This flag should only be set for\n\n# the IBM Power6 Linux.  When the bit sequence of long double is\n\n# 0x4351ccf385ebc8a0bfcc2a3c3d855620, the converted value of (unsigned)long\n\n# is 0x004733ce17af227f, not the same as the library's conversion to 0x004733ce17af2282.\n\n# The machine's conversion gets the correct value.  We define the macro and disable\n\n# this kind of test until we figure out what algorithm they use.\n\n#\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# Set the flag to indicate that the machine is using a special algorithm\n\n# to convert some values of '(unsigned) long' to 'long double' values.\n\n# (This flag should be off for all machines, except for IBM Power6 Linux,\n\n# when the bit sequences are 003fff..., 007fff..., 00ffff..., 01ffff...,\n\n# ..., 7fffff..., the compiler uses a unknown algorithm.  We define a\n\n# macro and skip the test for now until we know about the algorithm.\n\n#\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# Set the flag to indicate that the machine can accurately convert\n\n# 'long double' to '(unsigned) long long' values.  (This flag should be set for\n\n# all machines, except for Mac OS 10.4 and SGI IRIX64 6.5.  When the bit sequence\n\n# of long double is 0x4351ccf385ebc8a0bfcc2a3c..., the values of (unsigned)long long\n\n# start to go wrong on these two machines.  Adjusting it higher to\n\n# 0x4351ccf385ebc8a0dfcc... or 0x4351ccf385ebc8a0ffcc... will make the converted\n\n# values wildly wrong.  This test detects this wrong behavior and disable the test.\n\n#\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# Set the flag to indicate that the machine can accurately convert\n\n# '(unsigned) long long' to 'long double' values.  (This flag should be set for\n\n# all machines, except for Mac OS 10.4, when the bit sequences are 003fff...,\n\n# 007fff..., 00ffff..., 01ffff..., ..., 7fffff..., the converted values are twice\n\n# as big as they should be.\n\n#\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# Check if pointer alignments are enforced\n\n#\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 28
    },
    "ThirdParty/hdf5/vtkhdf5/config/cmake/HDF5Macros.cmake" : {
      "ObjectId" : "6c203e26975586036b0e60843762877784ed3285",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright by The HDF Group.\n\n# All rights reserved.\n\n#\n\n# This file is part of HDF5.  The full HDF5 copyright notice, including\n\n# terms governing use, modification, and redistribution, is contained in\n\n# the COPYING file, which can be found at the root of the source code\n\n# distribution tree, or in https://support.hdfgroup.org/ftp/HDF5/releases.\n\n# If you do not have access to either file, you may request a copy from\n\n# help@hdfgroup.org.\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# SOVERSION passed in ARGN when shared\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#-- Apple Specific install_name for libraries\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# adapt target to build frameworks instead of dylibs\n",
        "Line" : 46,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 4
    },
    "ThirdParty/hdf5/vtkhdf5/config/cmake/HDFCompilerFlags.cmake" : {
      "ObjectId" : "0fa83a06e0bd7036045013036b410ef36af67ce0",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright by The HDF Group.\n\n# All rights reserved.\n\n#\n\n# This file is part of HDF5.  The full HDF5 copyright notice, including\n\n# terms governing use, modification, and redistribution, is contained in\n\n# the COPYING file, which can be found at the root of the source code\n\n# distribution tree, or in https://support.hdfgroup.org/ftp/HDF5/releases.\n\n# If you do not have access to either file, you may request a copy from\n\n# help@hdfgroup.org.\n\n#\n\n#-----------------------------------------------------------------------------\n\n# Compiler specific flags : Shouldn't there be compiler tests for these\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to allow the user to disable compiler warnings\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 45,
        "CharPositionInLine" : 11
      },
      "3" : {
        "Text" : "# MSVC uses /w to suppress warnings.  It also complains if another\n\n# warning level is given, so remove it.\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Borland uses -w- to suppress warnings.\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Most compilers use -w to suppress warnings.\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# CDash is configured to only allow 3000 warnings, so\n\n# break into groups (from the config/gnu-flags file)\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to allow the user to enable developer warnings\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 95,
        "CharPositionInLine" : 15
      },
      "9" : {
        "Text" : "# Append warning flags\n\n# Don't use the '-Wtraditional' flag, we're way past having K&R C code\n\n# set (H5_CFLAGS \"${H5_CFLAGS} -Wtraditional\")\n\n# Don't use the '-Wtraditional-conversion' flag, there's too many warnings\n\n#  from GCC's assert macro\n\n# set (H5_CFLAGS \"${H5_CFLAGS} -Wtraditional-conversion\")\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Append warning flags from gcc-3* case\n\n# (don't use -Wpadded flag for normal builds, many of the warnings its\n\n#   issuing can't be fixed and they are making it hard to detect other,\n\n#   more important warnings)\n\n#set (H5_CFLAGS \"${H5_CFLAGS} -Wfloat-equal -Wmissing-format-attribute -Wpadded\")\n",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Append warning flags from gcc-3.2* case\n",
        "Line" : 120,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Enable more format checking flags, beyond the basic -Wformat included\n\n# in -Wall\n",
        "Line" : 128,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Append warning flags from gcc-3.3* case\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Append warning flags from gcc-3.4* case\n",
        "Line" : 135,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Append more extra warning flags that only gcc4.0+ know about\n",
        "Line" : 138,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Append more extra warning flags that only gcc 4.1+ know about\n",
        "Line" : 141,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Append more extra warning flags that only gcc 4.2+ know about\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Append more extra warning flags that only gcc 4.3+ know about\n\n#\n\n# Technically, variable-length arrays are part of the C99 standard, but\n\n#   we should approach them a bit cautiously... -QAK\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# Append more extra warning flags that only gcc 4.4+ know about\n",
        "Line" : 155,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Append more extra warning flags that only gcc 4.5+ know about\n",
        "Line" : 158,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Append more extra warning flags that only gcc 4.6+ know about\n",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# The \"unreachable code\" warning appears to be reliable now...\n\n# (this warning was removed in gcc 4.5+)\n",
        "Line" : 174,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Append more extra warning flags that only gcc 4.7+ know about\n",
        "Line" : 180,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Append more extra warning flags that only gcc 4.8+ know about\n",
        "Line" : 190,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Append more extra warning flags that only gcc 4.9+ know about\n",
        "Line" : 199,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# (There was no release of gcc 5.0)\n",
        "Line" : 204,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Append more extra warning flags that only gcc 5.1+ know about\n",
        "Line" : 206,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Append more extra warning flags that only gcc 6.x+ know about\n",
        "Line" : 211,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to allow the user to enable all warnings\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 221,
        "CharPositionInLine" : 11
      },
      "31" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to allow the user to enable warnings by groups\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 253,
        "CharPositionInLine" : 11
      },
      "33" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to allow the user to enable warnings by groups\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 276,
        "CharPositionInLine" : 11
      },
      "35" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to allow the user to enable warnings by groups\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 297,
        "CharPositionInLine" : 11
      },
      "37" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to allow the user to enable warnings by groups\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 318,
        "CharPositionInLine" : 11
      },
      "39" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Option to allow the user to enable warnings by groups\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 339,
        "CharPositionInLine" : 11
      },
      "41" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# This is in here to help some of the GCC based IDES like Eclipse\n\n# and code blocks parse the compiler errors and warnings better.\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 42
    },
    "ThirdParty/hdf5/vtkhdf5/config/cmake_ext_mod/ConfigureChecks.cmake" : {
      "ObjectId" : "098b03c2788a13abdfc072d5b74db0aa0798c02b",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright by The HDF Group.\n\n# All rights reserved.\n\n#\n\n# This file is part of HDF5.  The full HDF5 copyright notice, including\n\n# terms governing use, modification, and redistribution, is contained in\n\n# the COPYING file, which can be found at the root of the source code\n\n# distribution tree, or in https://support.hdfgroup.org/ftp/HDF5/releases.\n\n# If you do not have access to either file, you may request a copy from\n\n# help@hdfgroup.org.\n\n#\n\n#-----------------------------------------------------------------------------\n\n# Include all the necessary files for macros\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# APPLE/Darwin setup\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check for Darwin (not just Apple - we also want to catch OpenDarwin)\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check for Solaris\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# This MACRO checks IF the symbol exists in the library and IF it\n\n# does, it appends library to the list.\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# WINDOWS Hard code Values\n\n# ----------------------------------------------------------------------\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# MinGW tries to imitate Windows\n",
        "Line" : 69,
        "CharPositionInLine" : 20
      },
      "7" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# END of WINDOWS Hard code Values\n\n# ----------------------------------------------------------------------\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# For other tests to use the same libraries\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# For other specific tests, use this MACRO.\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#message (STATUS \"Performing ${OTHER_TEST}\")\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check for these functions before the time headers are checked\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check IF header file exists and add it to the list.\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#  Check for the existence of certain header files\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Darwin\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Windows\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#  Check for large file support\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# The linux-lfs option is deprecated.\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Might want to check explicitly for Linux and possibly Cygwin\n\n# instead of checking for not Solaris or Darwin.\n",
        "Line" : 227,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Linux Specific flags\n\n# This was originally defined as _POSIX_SOURCE which was updated to\n\n# _POSIX_C_SOURCE=199506L to expose a greater amount of POSIX\n\n# functionality so clock_gettime and CLOCK_MONOTONIC are defined\n\n# correctly. This was later updated to 200112L so that\n\n# posix_memalign() is visible for the direct VFD code on Linux\n\n# systems.\n\n# POSIX feature information can be found in the gcc manual at:\n\n# http://www.gnu.org/s/libc/manual/html_node/Feature-Test-Macros.html\n",
        "Line" : 230,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Need to add this so that O_DIRECT is visible for the direct\n\n# VFD on Linux systems.\n",
        "Line" : 241,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 245,
        "CharPositionInLine" : 13
      },
      "22" : {
        "Text" : "# The LARGEFILE definitions were from the transition period\n\n# and are probably no longer needed. The FILE_OFFSET_BITS\n\n# check should be generalized for all POSIX systems as it\n\n# is in the Autotools.\n",
        "Line" : 259,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check for HAVE_OFF64_T functionality\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#  Check the size in bytes of all the int and float types\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#  message (STATUS \"Checking size of ${aType} and storing into ${aVar}\")\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#    message (STATUS \"Size of ${aType} was NOT Found\")\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Extra C99 types\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# _Bool type support\n",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check if the dev_t type is a scalar type\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 395,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check a bunch of time functions\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 400,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "#      HAVE_TIMEZONE\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#      HDF_FUNCTION_TEST (HAVE_STAT_ST_BLOCKS)\n",
        "Line" : 418,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# Does the struct stat have the st_blocks field?  This field is not Posix.\n\n#\n",
        "Line" : 421,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# How do we figure out the width of a tty in characters?\n\n#\n",
        "Line" : 426,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# cygwin user credentials are different then on linux\n\n#\n",
        "Line" : 441,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check for some functions that are used\n\n#\n",
        "Line" : 449,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# sigsetjmp is special; may actually be a macro\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 484,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check a bunch of other functions\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 496,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#      STDC_HEADERS\n",
        "Line" : 503,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check if InitOnceExecuteOnce is available\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 513,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#message (STATUS \"Checking for InitOnceExecuteOnce:\")\n",
        "Line" : 518,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# if it did not compile make the return value fail code of 1\n",
        "Line" : 549,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# if the return value was 0 then it worked\n",
        "Line" : 553,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Determine how 'inline' is used\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 578,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Check how to print a Long Long integer\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 586,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# ----------------------------------------------------------------------\n\n# Set the flag to indicate that the machine can handle converting\n\n# denormalized floating-point values.\n\n# (This flag should be set for all machines, except for the Crays, where\n\n# the cache value is set in it's config file)\n\n#\n",
        "Line" : 626,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "ThirdParty/hdf5/vtkhdf5/config/cmake_ext_mod/HDFLibMacros.cmake" : {
      "ObjectId" : "54e408bba32575dfa249d5f5f8ccec1b13b19f1e",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright by The HDF Group.\n\n# All rights reserved.\n\n#\n\n# This file is part of HDF5.  The full HDF5 copyright notice, including\n\n# terms governing use, modification, and redistribution, is contained in\n\n# the COPYING file, which can be found at the root of the source code\n\n# distribution tree, or in https://support.hdfgroup.org/ftp/HDF5/releases.\n\n# If you do not have access to either file, you may request a copy from\n\n# help@hdfgroup.org.\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# May need to build JPEG with PIC on x64 machines with gcc\n\n# Need to use CMAKE_ANSI_CFLAGS define so that compiler test works\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# [SVN_REVISION rev]\n",
        "Line" : 20,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "##include (${BINARY_DIR}/${JPEG_PACKAGE_NAME}${HDF_PACKAGE_EXT}-targets.cmake)\n\n# Create imported target jpeg-static\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Create imported target jpeg-shared\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# [SVN_REVISION rev]\n",
        "Line" : 110,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "##include (${BINARY_DIR}/${SZIP_PACKAGE_NAME}${HDF_PACKAGE_EXT}-targets.cmake)\n\n# Create imported target szip-static\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Create imported target szip-shared\n",
        "Line" : 172,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# [SVN_REVISION rev]\n",
        "Line" : 203,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "##include (${BINARY_DIR}/${ZLIB_PACKAGE_NAME}${HDF_PACKAGE_EXT}-targets.cmake)\n\n# Create imported target zlib-static\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Create imported target zlib-shared\n",
        "Line" : 267,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "ThirdParty/hdf5/vtkhdf5/config/cmake_ext_mod/HDFMacros.cmake" : {
      "ObjectId" : "2d4577aa6f930cd8ced35232e169a1e4356f1467",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright by The HDF Group.\n\n# All rights reserved.\n\n#\n\n# This file is part of HDF5.  The full HDF5 copyright notice, including\n\n# terms governing use, modification, and redistribution, is contained in\n\n# the COPYING file, which can be found at the root of the source code\n\n# distribution tree, or in https://support.hdfgroup.org/ftp/HDF5/releases.\n\n# If you do not have access to either file, you may request a copy from\n\n# help@hdfgroup.org.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the possible values of build type for cmake-gui\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#set(source_group_path \"Source/AIM/${NAME}\")\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#-- The following is needed if we ever start to use OS X Frameworks but only\n\n#--  works on CMake 2.6 and greater\n\n#set_property (SOURCE ${HEADERS}\n\n#       PROPERTY MACOSX_PACKAGE_LOCATION Headers/${NAME}\n\n#)\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#  install (FILES ${HEADERS}\n\n#       DESTINATION include/R3D/${NAME}\n\n#       COMPONENT Headers\n\n#  )\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#-- The following is needed if we ever start to use OS X Frameworks but only\n\n#--  works on CMake 2.6 and greater\n\n#set_property (SOURCE ${HEADERS}\n\n#       PROPERTY MACOSX_PACKAGE_LOCATION Headers/${NAME}\n\n#)\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# XXX(kitware): Disable PDB installation.\n",
        "Line" : 76,
        "CharPositionInLine" : 32
      },
      "12" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# XXX(kitware): VTK handles library naming.\n",
        "Line" : 111,
        "CharPositionInLine" : 13
      },
      "15" : {
        "Text" : "#----- Use MSVC Naming conventions for Shared Libraries\n",
        "Line" : 156,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#-------------------------------------------------------------------------------\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure the README.txt file for the binary package\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Setup output Directories\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# if we are externally configured, but the project uses old cmake scripts\n\n# this may not be set and utilities like H5detect will fail\n",
        "Line" : 394,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 21
    },
    "ThirdParty/hdf5/vtkhdf5/hl/CMakeLists.txt" : {
      "ObjectId" : "a0a7986432a344ef393983a6264d85a6dfd4d832",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# XXX(kitware): cmake versions are handled by VTK.\n",
        "Line" : 1,
        "CharPositionInLine" : 11
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# List Source files\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-- Build the High level Tools\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-- Add High Level Examples\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-- Build the Unit testing if requested\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ThirdParty/hdf5/vtkhdf5/hl/src/CMakeLists.txt" : {
      "ObjectId" : "09276e7f5c9a4b2b8f9eff64d3dda54d7cfcca70",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# XXX(kitware): cmake versions are handled by VTK.\n",
        "Line" : 1,
        "CharPositionInLine" : 11
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# List Source files\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# XXX(kitware): Use VTK's module system.\n",
        "Line" : 35,
        "CharPositionInLine" : 11
      },
      "3" : {
        "Text" : "# XXX(kitware): VTK handles shared/static flags.\n",
        "Line" : 80,
        "CharPositionInLine" : 33
      },
      "4" : {
        "Text" : "# XXX(kitware): VTK handles installation.\n",
        "Line" : 97,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add file(s) to CMake Install\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add Target(s) to CMake Install for import into other projects\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Create pkgconfig files\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "ThirdParty/hdf5/vtkhdf5/src/CMakeLists.txt" : {
      "ObjectId" : "a4f3ef36d0509249e3cf799dfe35b773996355f5",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# XXX(kitware): cmake versions are handled by VTK.\n",
        "Line" : 1,
        "CharPositionInLine" : 11
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# List Source Files\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#${HDF5_SRC_DIR}/H5version.h\n\n#${HDF5_SRC_DIR}/H5overflow.h\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#${HDF5_SRC_DIR}/H5Edefin.h\n\n#${HDF5_SRC_DIR}/H5Einit.h\n",
        "Line" : 161,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#${HDF5_SRC_DIR}/H5Epubgen.h\n",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#${HDF5_SRC_DIR}/H5Eterm.h\n",
        "Line" : 166,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 834,
        "CharPositionInLine" : 11
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Setup the H5detect utility which generates H5Tinit with platform\n\n# specific type checks inside\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 860,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## all_packages=\"AC,B,B2,D,F,FA,FL,FS,HL,I,O,S,ST,T,Z\"\n\n#all_packages=\"AC,B2,CX,D,F,HL,I,O,S,ST,T,Z\"\n",
        "Line" : 903,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 905,
        "CharPositionInLine" : 11
      },
      "10" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add H5Tinit source to build - generated by H5detect/CMake at configure time\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 911,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# XXX(kitware): Use VTK's module system.\n",
        "Line" : 916,
        "CharPositionInLine" : 11
      },
      "12" : {
        "Text" : "# Enable tracing of the API\n",
        "Line" : 928,
        "CharPositionInLine" : 54
      },
      "13" : {
        "Text" : "# XXX(kitware): VTK handles shared/static flags.\n",
        "Line" : 974,
        "CharPositionInLine" : 33
      },
      "14" : {
        "Text" : "# Enable tracing of the API\n",
        "Line" : 1004,
        "CharPositionInLine" : 56
      },
      "15" : {
        "Text" : "# XXX(kitware): VTK handles installation.\n",
        "Line" : 1019,
        "CharPositionInLine" : 11
      },
      "16" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add file(s) to CMake Install\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1020,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add Target(s) to CMake Install for import into other projects\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1036,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Create pkgconfig files\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1058,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "ThirdParty/jpeg/CMakeLists.txt" : {
      "ObjectId" : "87c92740fffe11d04f5de7ad5ce5c1ab1f21fa58",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/jpeg/vtkjpeg/CMakeLists.txt" : {
      "ObjectId" : "4614cf991838e10973da1830570f72173091d0b7",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# VTK already assumes these exist.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: See `configure.ac` for `ljt_cv_inline` for this part.\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ThirdParty/jsoncpp/CMakeLists.txt" : {
      "ObjectId" : "fce31eefc61a6ed57736f313a1b7e6b95849ac02",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: jsoncpp only exports symbols properly on Windows.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ThirdParty/jsoncpp/vtkjsoncpp/CMakeLists.txt" : {
      "ObjectId" : "64cc1d9875da89d1e1db05f2f7687d2cc415e679",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/kissfft/CMakeLists.txt" : {
      "ObjectId" : "7d070cd95f38a843b862ba6fa53f01a0f7199d69",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/kissfft/vtkkissfft/CMakeLists.txt" : {
      "ObjectId" : "7aa1ca940f3bc531e161fa3654f26df2e38b8ead",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/kissfft/vtkkissfft/tools/Makefile" : {
      "ObjectId" : "ae7646b8804bca9b5ebe9da5ea4df08d6c1c2ff1",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# \t$(PSDPNG) \n\n#\t$(DUMPHDR)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#CFLAGS=-Wall -O3 -pedantic -march=pentiumpro -ffast-math -fomit-frame-pointer $(WARNINGS)\n\n# If the above flags do not work, try the following\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# tip: try -openmp or -fopenmp to use multiple cores\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ThirdParty/libharu/CMakeLists.txt" : {
      "ObjectId" : "bac8dce188f907f96f8c72768c18e72d37df7942",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Unreleased. Requires these PRs:\n\n# https://github.com/libharu/libharu/pull/157\n\n# https://github.com/libharu/libharu/pull/187\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "ThirdParty/libharu/vtklibharu/CMakeLists.txt" : {
      "ObjectId" : "dac043853ccd66b06d409fcd15c28a1bf8bea9c2",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Copyright (C) 2008  Werner Smekal\n\n#\n\n# Process this file with cmake to produce Makefiles or project files\n\n# for your specific compiler tool set\n\n#\n\n# TODO:\n\n# - shared and static library\n\n# - packaging\n\n# - devpackage\n\n# =======================================================================\n\n# libharu project\n\n# =======================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# determine compiler name\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# information about libharu\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# we want cmake version 2.4.8 at least\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# XXX(kitware): VTK handles minimum versions\n",
        "Line" : 35,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# Location where the haru cmake build system first looks for cmake modules\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# set library name, msvc does not append 'lib' automatically\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# XXX(kitware): Not needed for VTK:\n",
        "Line" : 43,
        "CharPositionInLine" : 11
      },
      "8" : {
        "Text" : "# =======================================================================\n\n# command line options\n\n# =======================================================================\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# XXX(kitware): hardcode settings\n",
        "Line" : 55,
        "CharPositionInLine" : 11
      },
      "10" : {
        "Text" : "# Enable exceptions on linux if required\n\n# (eg if you are using libharu in a C++ environment,\n\n# and you want your error-callback to throw an exception,\n\n# you will need to enable this for the exception to be\n\n# able to throw through the libharu callstack).\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# XXX(kitware): hardcode settings\n",
        "Line" : 77,
        "CharPositionInLine" : 14
      },
      "12" : {
        "Text" : "# XXX(kitware): hardcode settings\n",
        "Line" : 97,
        "CharPositionInLine" : 11
      },
      "13" : {
        "Text" : "# =======================================================================\n\n# look for headers and libraries\n\n# =======================================================================\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# XXX(kitware): use VTK's libraries\n",
        "Line" : 111,
        "CharPositionInLine" : 11
      },
      "15" : {
        "Text" : "# check zlib availibility\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# check png availibility\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# =======================================================================\n\n# configure header files, add compiler flags\n\n# =======================================================================\n\n# add definitions and directories to include\n\n#if(CMAKE_COMPILER_IS_GNUCC)\n\n#  add_definitions(\"-Wall\")\n\n#endif(CMAKE_COMPILER_IS_GNUCC)\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# XXX(kitware): replaced with target_include_directories\n",
        "Line" : 138,
        "CharPositionInLine" : 11
      },
      "19" : {
        "Text" : "# these are options\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# XXX(kitware): hardcode settings\n",
        "Line" : 143,
        "CharPositionInLine" : 11
      },
      "21" : {
        "Text" : "# I'll guess what these were supposed to be\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# I have no idea\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Just set to 1, we'll assume they are always available.\n\n# If not, then someone will have to add some tests in here to correctly determine\n\n# the headers existance.\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Don't do anything with this, it doesn't seem to be used anywhere anyhow\n\n# set (LIBHPDF_size_t ???)\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# XXX(kitware): hardcode settings\n",
        "Line" : 167,
        "CharPositionInLine" : 11
      },
      "26" : {
        "Text" : "# support all of the different variations of LIBPNG defines in HARU\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# support different zlib defines\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# create hpdf_config.h\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# XXX(kitware): replaced with target_include_directories\n",
        "Line" : 190,
        "CharPositionInLine" : 11
      },
      "30" : {
        "Text" : "# create DevPackage file\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# =======================================================================\n\n# create library and demos\n\n# =======================================================================\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# XXX(kitware): disable demos.\n",
        "Line" : 205,
        "CharPositionInLine" : 11
      },
      "33" : {
        "Text" : "# =======================================================================\n\n# installation configuration\n\n# =======================================================================\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# install header files\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# XXX(kitware): VTK handles installation\n",
        "Line" : 254,
        "CharPositionInLine" : 11
      },
      "36" : {
        "Text" : "# install various files\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# =======================================================================\n\n# print out some information\n\n# =======================================================================\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# XXX(kitware): suppress extra messages.\n",
        "Line" : 270,
        "CharPositionInLine" : 11
      },
      "39" : {
        "Text" : "# =======================================================================\n\n# packing stuff\n\n# =======================================================================\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# XXX(kitware): hide cpack\n",
        "Line" : 277,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 41
    },
    "ThirdParty/libharu/vtklibharu/include/hpdf_config.h.cmake" : {
      "ObjectId" : "64c13e301f7766751548068fa959e31a5999623e",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* include/hpdf_config.h.in.  Generated from configure.in by autoheader.  */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* KITWARE_LIBHARU_CHANGE Include the symbol name mangler: */",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Define to 1 if you have the <dlfcn.h> header file. */",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* Define to 1 if you have the <inttypes.h> header file. */",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Define to 1 if you have the `png' library (-lpng). */",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Define to 1 if you have the `z' library (-lz). */",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Define to 1 if you have the <memory.h> header file. */",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* Define to 1 if you have the <stdint.h> header file. */",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* Define to 1 if you have the <stdlib.h> header file. */",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* Define to 1 if you have the <strings.h> header file. */",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Define to 1 if you have the <string.h> header file. */",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Define to 1 if you have the <sys/stat.h> header file. */",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Define to 1 if you have the <sys/types.h> header file. */",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* Define to 1 if you have the <unistd.h> header file. */",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* debug build */",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* debug trace enabled */",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* libpng is not available */",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* zlib is not available */",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* Define to the address where bug reports for this package should be sent. */",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* Define to the full name of this package. */",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* Define to the full name and version of this package. */",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* Define to the one symbol short name of this package. */",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* Define to the version of this package. */",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/* Define to 1 if you have the ANSI C header files. */",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/* Define to `unsigned int' if <sys/types.h> does not define. */",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "ThirdParty/libharu/vtklibharu/src/CMakeLists.txt" : {
      "ObjectId" : "cd80bbc2160c6787c8d41f518780c58bca0390b8",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# src/CMakeLists.txt\n\n#\n\n# Copyright (C) 2008  Werner Smekal\n\n#\n\n# create library\n\n# =======================================================================\n\n# libharu source files\n\n# =======================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# =======================================================================\n\n# create static and shared haru library\n\n# =======================================================================\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# XXX(kitware): Use VTK's module system\n",
        "Line" : 74,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 3
    },
    "ThirdParty/libproj/CMakeLists.txt" : {
      "ObjectId" : "5e34bb9bb81fbd48b99b503d9ab2404375068309",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/libproj/vtklibproj/CMakeLists.txt" : {
      "ObjectId" : "1b02e9c33815e83cc69ba64cddbf87090f0a4b12",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#################################################################################\n\n#\n\n# This file is part of CMake configuration for PROJ4 library (inspired from SOCI\n\n# CMake,  Copyright (C) 2009-2010 Mateusz Loskot <mateusz@loskot.net> )\n\n#\n\n# Copyright (C) 2011 Nicolas David <nicolas.david@ign.fr>\n\n# Distributed under the MIT license\n\n#\n\n#################################################################################\n\n# General settings\n\n#################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# XXX(kitware): VTK handles CMake versions.\n",
        "Line" : 12,
        "CharPositionInLine" : 11
      },
      "2" : {
        "Text" : "# proj4 is an ANSI C project\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#################################################################################\n\n# PROJ4 CMake modules\n\n#################################################################################\n\n# Path to additional CMake modules\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# XXX(kitware): Hide configure noise.\n",
        "Line" : 29,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "#################################################################################\n\n#PROJ version information\n\n#################################################################################\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#################################################################################\n\n# Build features and variants\n\n#################################################################################\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# XXX(kitware): VTK handles CMake versions.\n",
        "Line" : 47,
        "CharPositionInLine" : 11
      },
      "8" : {
        "Text" : "#################################################################################\n\n# Self-test build config\n\n#################################################################################\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# XXX(kitware): Hardcode settings\n",
        "Line" : 56,
        "CharPositionInLine" : 11
      },
      "10" : {
        "Text" : "#################################################################################\n\n# threading configuration\n\n#################################################################################\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Set a default build type for single-configuration cmake generators if\n\n# no build type is set.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# XXX(kitware): VTK handles this.\n",
        "Line" : 86,
        "CharPositionInLine" : 11
      },
      "13" : {
        "Text" : "# For multi-config systems and for Visual Studio, the debug version of\n\n# the library has _d appended.\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# XXX(kitware): Hardcode settings\n",
        "Line" : 94,
        "CharPositionInLine" : 11
      },
      "15" : {
        "Text" : "# Put the libaries and binaries that get built into directories at the\n\n# top of the build tree rather than in hard-to-find leaf\n\n# directories. This simplifies manual testing and the use of the build\n\n# tree rather than installed Boost libraries.\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# XXX(kitware): VTK handles this.\n",
        "Line" : 110,
        "CharPositionInLine" : 11
      },
      "17" : {
        "Text" : "#################################################################################\n\n# Installation\n\n#################################################################################\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# XXX(kitware): VTK handles installation.\n",
        "Line" : 119,
        "CharPositionInLine" : 11
      },
      "19" : {
        "Text" : "#################################################################################\n\n# Build configured components\n\n#################################################################################\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# XXX(kitware): Hide configure noise.\n",
        "Line" : 133,
        "CharPositionInLine" : 11
      },
      "21" : {
        "Text" : "# XXX(kitware): Hide unnecessary directories.\n",
        "Line" : 136,
        "CharPositionInLine" : 11
      },
      "22" : {
        "Text" : "# XXX(kitware): Hide unnecessary directories.\n",
        "Line" : 140,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 23
    },
    "ThirdParty/libproj/vtklibproj/cmake/Proj4Config.cmake" : {
      "ObjectId" : "15477decb1412a3deee2dac58527d5536cfbe0e1",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# SociConfig.cmake - CMake build configuration of SOCI library\n\n################################################################################\n\n# Copyright (C) 2010 Mateusz Loskot <mateusz@loskot.net>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ThirdParty/libproj/vtklibproj/cmake/Proj4SystemInfo.cmake" : {
      "ObjectId" : "294a50b28ebeb3a6e6fc1e69e60bf83067b42f1f",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# SociSystemInfo.cmake - part of CMake configuration of Proj.4 library\n\n#\n\n# Based on idea taken from http://code.google.com/p/softart/ project\n\n################################################################################\n\n# Copyright (C) 2010 Mateusz Loskot <mateusz@loskot.net>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n\n################################################################################\n\n# The following variables are defined:\n\n#   PROJ_COMPILER_NAME - name of compiler toolset, follows Boost toolset naming.\n\n#   PROJ_PLATFORM_NAME - target platform name: x64, x86 or win32\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compilers, taken from http://predef.sourceforge.net/precomp.html#sec34\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#Visual Studio 2003\n",
        "Line" : 36,
        "CharPositionInLine" : 41
      },
      "3" : {
        "Text" : "#Visual Studio 2005\n",
        "Line" : 39,
        "CharPositionInLine" : 41
      },
      "4" : {
        "Text" : "#Visual Studio 2008\n",
        "Line" : 42,
        "CharPositionInLine" : 41
      },
      "5" : {
        "Text" : "#Visual Studio 2010\n",
        "Line" : 45,
        "CharPositionInLine" : 42
      },
      "6" : {
        "Text" : "#Visual Studio 2012\n",
        "Line" : 48,
        "CharPositionInLine" : 42
      },
      "7" : {
        "Text" : "#Visual Studio 2013\n",
        "Line" : 51,
        "CharPositionInLine" : 42
      },
      "CommentCount" : 8
    },
    "ThirdParty/libproj/vtklibproj/cmake/Proj4Test.cmake" : {
      "ObjectId" : "a289f0c5a7b84b71fe50e87bd5c3b527442d8916",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# add test with sh script\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ThirdParty/libproj/vtklibproj/cmake/Proj4Utilities.cmake" : {
      "ObjectId" : "c1713861e3039d678615c5dc1a080385c2e70ca6",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# SociUtilities.cmake - part of CMake configuration of Proj4 library\n\n#\n\n# Based on BoostUtilities.cmake from CMake configuration for Boost\n\n################################################################################\n\n# Copyright (C) 2007 Douglas Gregor <doug.gregor@gmail.com>\n\n# Copyright (C) 2007 Troy Straszheim\n\n# Copyright (C) 2010 Mateusz Loskot <mateusz@loskot.net> \n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# See accompanying file LICENSE_1_0.txt or copy at\n\n#   http://www.boost.org/LICENSE_1_0.txt\n\n################################################################################\n\n# Macros in this module:\n\n#\n\n#   list_contains: Determine whether a string value is in a list.\n\n#\n\n#   car: Return the first element in a list\n\n#\n\n#   cdr: Return all but the first element in a list\n\n#\n\n#   parse_arguments: Parse keyword arguments for use in other macros.\n\n#\n\n#   proj_report_directory_property\n\n#\n\n#   proj_target_output_name: \n\n#\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This utility macro determines whether a particular string value\n\n# occurs within a list of strings:\n\n#\n\n#  list_contains(result string_to_find arg1 arg2 arg3 ... argn)\n\n# \n\n# This macro sets the variable named by result equal to TRUE if\n\n# string_to_find is found anywhere in the following arguments.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This utility macro extracts the first argument from the list of\n\n# arguments given, and places it into the variable named var.\n\n#\n\n#   car(var arg1 arg2 ...)\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This utility macro extracts all of the arguments given except the\n\n# first, and places them into the variable named var.\n\n#\n\n#   car(var arg1 arg2 ...)\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The parse_arguments macro will take the arguments of another macro and\n\n# define several variables. The first argument to parse_arguments is a\n\n# prefix to put on all variables it creates. The second argument is a\n\n# list of names, and the third argument is a list of options. Both of\n\n# these lists should be quoted. The rest of parse_arguments are\n\n# arguments from another macro to be parsed.\n\n# \n\n#     parse_arguments(prefix arg_names options arg1 arg2...) \n\n# \n\n# For each item in options, parse_arguments will create a variable with\n\n# that name, prefixed with prefix_. So, for example, if prefix is\n\n# MY_MACRO and options is OPTION1;OPTION2, then parse_arguments will\n\n# create the variables MY_MACRO_OPTION1 and MY_MACRO_OPTION2. These\n\n# variables will be set to true if the option exists in the command line\n\n# or false otherwise.\n\n# \n\n# For each item in arg_names, parse_arguments will create a variable\n\n# with that name, prefixed with prefix_. Each variable will be filled\n\n# with the arguments that occur after the given arg_name is encountered\n\n# up to the next arg_name or the end of the arguments. All options are\n\n# removed from these lists. parse_arguments also creates a\n\n# prefix_DEFAULT_ARGS variable containing the list of all arguments up\n\n# to the first arg_name encountered.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Perform a reverse topological sort on the given LIST. \n\n#   \n\n#   topological_sort(my_list \"MY_\" \"_EDGES\")\n\n#\n\n# LIST is the name of a variable containing a list of elements to be\n\n# sorted in reverse topological order. Each element in the list has a\n\n# set of outgoing edges (for example, those other list elements that\n\n# it depends on). In the resulting reverse topological ordering\n\n# (written back into the variable named LIST), an element will come\n\n# later in the list than any of the elements that can be reached by\n\n# following its outgoing edges and the outgoing edges of any vertices\n\n# they target, recursively. Thus, if the edges represent dependencies\n\n# on build targets, for example, the reverse topological ordering is\n\n# the order in which one would build those targets.\n\n#\n\n# For each element E in this list, the edges for E are contained in\n\n# the variable named ${PREFIX}${E}${SUFFIX}, where E is the\n\n# upper-cased version of the element in the list. If no such variable\n\n# exists, then it is assumed that there are no edges. For example, if\n\n# my_list contains a, b, and c, one could provide a dependency graph\n\n# using the following variables:\n\n#\n\n#     MY_A_EDGES     b\n\n#     MY_B_EDGES     \n\n#     MY_C_EDGES     a b\n\n#\n\n#  With the involcation of topological_sort shown above and these\n\n#  variables, the resulting reverse topological ordering will be b, a,\n\n#  c.\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Clear the stack and output variable\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Loop over all of the vertices, starting the topological sort from\n\n# each one.\n",
        "Line" : 149,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# If we haven't already processed this vertex, start a depth-first\n\n# search from where.\n",
        "Line" : 154,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Push this vertex onto the stack with all of its outgoing edges\n",
        "Line" : 157,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# We've now seen this vertex\n",
        "Line" : 162,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# While the depth-first search stack is not empty\n",
        "Line" : 165,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# Remove the vertex and its remaining out-edges from the top\n\n# of the stack\n",
        "Line" : 168,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Get the source vertex and the list of out-edges\n",
        "Line" : 173,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# While there are still out-edges remaining\n",
        "Line" : 178,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Pull off the first outgoing edge\n",
        "Line" : 181,
        "CharPositionInLine" : 10
      },
      "16" : {
        "Text" : "# We have not seen the target before, so we will traverse\n\n# its outgoing edges before coming back to our\n\n# source. This is the key to the depth-first traversal.\n",
        "Line" : 187,
        "CharPositionInLine" : 12
      },
      "17" : {
        "Text" : "# We've now seen this vertex\n",
        "Line" : 191,
        "CharPositionInLine" : 12
      },
      "18" : {
        "Text" : "# Push the remaining edges for the current vertex onto the\n\n# stack\n",
        "Line" : 194,
        "CharPositionInLine" : 12
      },
      "19" : {
        "Text" : "# Setup the new source and outgoing edges\n",
        "Line" : 200,
        "CharPositionInLine" : 12
      },
      "20" : {
        "Text" : "# We have finished all of the outgoing edges for\n\n# SOURCE; add it to the resulting list.\n",
        "Line" : 210,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# Check the length of the stack\n",
        "Line" : 214,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# Small little hack that tweaks a component name (as used for CPack)\n\n# to make sure to avoid certain names that cause problems. Sets the\n\n# variable named varname to the \"sanitized\" name.\n\n#\n\n# FIXME: This is a complete hack. We probably need to fix the CPack\n\n# generators (NSIS in particular) to get rid of the need for this.\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\n\n# A big shout out to the cmake gurus @ compiz\n\n#\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# XXX(kitware): Hide configure noise.\n",
        "Line" : 243,
        "CharPositionInLine" : 12
      },
      "25" : {
        "Text" : "# colormsg(\"Colors:\"  \n\n#   WHITE \"white\" GRAY \"gray\" GREEN \"green\" \n\n#   RED \"red\" YELLOW \"yellow\" BLUE \"blue\" MAG \"mag\" CYAN \"cyan\" \n\n#   _WHITE_ \"white\" _GRAY_ \"gray\" _GREEN_ \"green\" \n\n#   _RED_ \"red\" _YELLOW_ \"yellow\" _BLUE_ \"blue\" _MAG_ \"mag\" _CYAN_ \"cyan\" \n\n#   _HIWHITE_ \"white\" _HIGRAY_ \"gray\" _HIGREEN_ \"green\" \n\n#   _HIRED_ \"red\" _HIYELLOW_ \"yellow\" _HIBLUE_ \"blue\" _HIMAG_ \"mag\" _HICYAN_ \"cyan\" \n\n#   HIWHITE \"white\" HIGRAY \"gray\" HIGREEN \"green\" \n\n#   HIRED \"red\" HIYELLOW \"yellow\" HIBLUE \"blue\" HIMAG \"mag\" HICYAN \"cyan\" \n\n#   \"right?\")\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#\n\n#  pretty-prints the value of a variable so that the \n\n#  equals signs align\n\n#\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# XXX(kitware): Hide configure noise.\n",
        "Line" : 299,
        "CharPositionInLine" : 12
      },
      "28" : {
        "Text" : "# LOG\n\n#message(STATUS \"boost_report_value: NAME=${NAME} (${varlen})\")\n\n#message(STATUS \"boost_report_value: \\${NAME}=${${NAME}}\")\n",
        "Line" : 301,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "#\n\n#  pretty-prints the value of a variable so that the \n\n#  equals signs align\n\n#\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#\n\n#  assert that ARG is actually a library target\n\n#\n",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\n\n# Pretty-print of given property of current directory.\n\n#\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\n\n# Scans the current directory and returns a list of subdirectories.\n\n# Author: Robert Fleming\n\n# Source: http://www.cmake.org/pipermail/cmake/2008-February/020114.html\n\n#\n\n# Third parameter is 1 if you want relative paths returned.\n\n# Usage: list_subdirectories(the_list_is_returned_here /path/to/project TRUE)\n\n#\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#\n\n# Generates output name for given target depending on platform and version.\n\n# For instance, on Windows, libraries get ABI version suffix soci_coreXY.{dll|lib}.\n\n#\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# On Windows, ABI version is specified using binary file name suffix.\n\n# On Unix, suffix is empty and SOVERSION is used instead.\n",
        "Line" : 395,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "#\n\n# conversion from lla name to lla convert name ( without lla extension)\n\n#\n",
        "Line" : 408,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#\n\n# in place conversion of lla file to gsb \n\n#\n",
        "Line" : 424,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#\n\n# add lla output list to an existing file list\n\n#\n",
        "Line" : 445,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 38
    },
    "ThirdParty/libproj/vtklibproj/cmake/Proj4Version.cmake" : {
      "ObjectId" : "ea0fc52d86b48ee0eb98894e47677b17c35f27b5",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# Proj4Version.cmake - part of CMake configuration of Proj4 library\n\n################################################################################\n\n# Copyright (C) 2010 Mateusz Loskot <mateusz@loskot.net>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0\n\n################################################################################\n\n# Macros in this module:\n\n#   \n\n#   proj_version - defines version information for PROJ library\n\n#   (best known as PROJ4 because MAJOR version is 4 since a very long time) \n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Defines version information for PROJ library\n\n#\n\n# proj_version(MAJOR major_version MINOR minor_version PATCH patch_level)\n\n#\n\n#    MAJOR.MINOR version is used to set SOVERSION\n\n#\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set version components\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Set VERSION string\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Set ABI version string used to name binary output \n\n# On Windows, ABI version is specified using binary file name suffix.\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# XXX(kitware): Hide configure noise.\n",
        "Line" : 42,
        "CharPositionInLine" : 13
      },
      "CommentCount" : 6
    },
    "ThirdParty/libproj/vtklibproj/src/CMakeLists.txt" : {
      "ObjectId" : "f31d09896afa5d0ccb440b552f38883c1e66077e",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# first include proj library\n\n# always need\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# configure executable build\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use relative path so that package is relocatable\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# TO DO: cmake 2.8.12 introduces a way to make the install tree\n\n# relocatable with OSX via\n\n# (1) set(CMAKE_MACOSX_RPATH ON) and\n\n# (2) setting the INSTALL_RPATH property on the executables to\n\n# \"@loader_path/../${LIBDIR}\"\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# XXX(kitware): VTK handles this.\n",
        "Line" : 49,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# Add _d suffix for your debug versions of the tools\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "ThirdParty/libproj/vtklibproj/src/lib_proj.cmake" : {
      "ObjectId" : "cfcccde6a7c4c80be461405b9bed15a1d18a7da8",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################\n\n### SWITCH BETWEEN STATIC OR SHARED LIBRARY###\n\n##############################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# XXX(kitware): Hide configure noise.\n",
        "Line" : 5,
        "CharPositionInLine" : 11
      },
      "2" : {
        "Text" : "# default config, shared on unix and static on Windows\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# XXX(kitware): Hardcode settings\n",
        "Line" : 16,
        "CharPositionInLine" : 11
      },
      "4" : {
        "Text" : "# XXX(kitware): Hardcode settings\n",
        "Line" : 28,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "##############################################\n\n### librairie source list and include_list ###\n\n##############################################\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Group source files for IDE source explorers (e.g. Visual Studio)\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Embed PROJ_LIB data files location\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#################################################\n\n## java wrapping with jni\n\n#################################################\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#################################################\n\n## targets: libproj and proj_config.h\n\n#################################################\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# XXX(kitware): Can't use a def file for mangled symbols.\n",
        "Line" : 276,
        "CharPositionInLine" : 11
      },
      "11" : {
        "Text" : "# Core targets configuration\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# XXX(kitware): VTK handles output names.\n",
        "Line" : 285,
        "CharPositionInLine" : 11
      },
      "13" : {
        "Text" : "# XXX(kitware): use VTK's module system.\n",
        "Line" : 289,
        "CharPositionInLine" : 11
      },
      "14" : {
        "Text" : "# XXX(kitware): Not necessary for VTK.\n",
        "Line" : 309,
        "CharPositionInLine" : 11
      },
      "15" : {
        "Text" : "##############################################\n\n# Link properties\n\n##############################################\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "##############################################\n\n# install\n\n##############################################\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# XXX(kitware): VTK handles installation.\n",
        "Line" : 350,
        "CharPositionInLine" : 11
      },
      "18" : {
        "Text" : "##############################################\n\n# Core configuration summary\n\n##############################################\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "ThirdParty/libxml2/CMakeLists.txt" : {
      "ObjectId" : "e4fe5c392e0613bf62e896902c2da4832a1c3940",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/libxml2/vtklibxml2/CMakeLists.txt" : {
      "ObjectId" : "1cfb10dfbd64af8667735ed8c67e397abb12e800",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use new behavior of linking against libraries in the CMAKE_REQUIRED_LIBRARIES\n\n# variable in the CHECK_INCLUDE_FILE macro\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This macro checks if the symbol exists in the library and if it\n\n# does, it appends library to the list.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use needed system libraries.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check for symbol dlopen separately from the dl library.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# For other tests to use the same libraries\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use VTK's zlib if we are building in the tree.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Check if header file exists and add it to the list.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# some kind of 3rd party library\n",
        "Line" : 97,
        "CharPositionInLine" : 17
      },
      "8" : {
        "Text" : "# not building VTK with pthreads\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Create the platform configuration header.\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Create the build configuration header.\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# threads.c looks for this\n",
        "Line" : 244,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "ThirdParty/libxml2/vtklibxml2/libxml2PlatformTests.cmake" : {
      "ObjectId" : "187c5f9b73dfd23a4ec4027529b4ba7099d5ded0",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Note that ${var} will be a 0 return value on success.\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "ThirdParty/loguru/CMakeLists.txt" : {
      "ObjectId" : "a2abfea9ad19698f87765b0fd3250ec04f408420",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/loguru/vtkloguru/CMakeLists.txt" : {
      "ObjectId" : "3af4768d5f9a32a04fd046d27e352d3154cb48db",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/lz4/CMakeLists.txt" : {
      "ObjectId" : "f716ab3007b74feb7aa9bc89d31685e7946ab831",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/lz4/vtklz4/CMakeLists.txt" : {
      "ObjectId" : "92246c565ecc1d8267e140a37e71c250a3e5a66c",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/lzma/CMakeLists.txt" : {
      "ObjectId" : "4b47b5e9b2c57c9f55cd1dcedbad2a68c7bf8d0f",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/lzma/vtklzma/CMakeLists.txt" : {
      "ObjectId" : "c16b24e3156c2d5ffa329d712b56af750631c45c",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# liblzma wrapped for VTK by Quincy Wofford and John Patchett,\n\n# Los Alamos National Laboratory (2017).\n\n# Thanks to Lasse Collin for integration help\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# XXX(kitware): hide subprojects.\n",
        "Line" : 5,
        "CharPositionInLine" : 11
      },
      "2" : {
        "Text" : "# XXX(kitware): avoid quoted variable policy warning from CMake.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We will need to add some encoder/decoder checking here\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define some checks\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Performance optimization\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Additional required mangling (var used by liblzma during build)\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "ThirdParty/mpi4py/CMakeLists.txt" : {
      "ObjectId" : "6e44f9d7bd8aa5c6f0c8ec5afcccb52f65186755",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#==========================================================================\n\n#\n\n#     Program: ParaView\n\n#\n\n# Copyright (c) Sandia Corporation, Kitware Inc.\n\n# All rights reserved.\n\n# See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\n\n#\n\n#    This software is distributed WITHOUT ANY WARRANTY; without even\n\n#    the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#    PURPOSE.  See the above copyright notice for more information.\n\n#\n\n#\n\n#==========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ThirdParty/mpi4py/vtkmpi4py/CMakeLists.txt" : {
      "ObjectId" : "c858d4d1f3d63cbde463324e1f94d5291d35c3a4",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/mpi4py/vtkmpi4py/src/CMakeLists.txt" : {
      "ObjectId" : "7410cc83ae9c2a8afbaf9db07ce0a33086f8f06d",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Assume that fortran bindings are not available.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ThirdParty/netcdf/CMakeLists.txt" : {
      "ObjectId" : "7ad6a56e3ac59f48a72ec2b8d483618118a70360",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/netcdf/vtknetcdf/CMakeLists.txt" : {
      "ObjectId" : "12b998e474a0750f776aa6027a046c411ca10b04",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# link against the math library.\n",
        "Line" : 245,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "ThirdParty/ogg/CMakeLists.txt" : {
      "ObjectId" : "2ab8a05b8d5850a3c7d6541377c44ed0229b6878",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/ogg/vtkogg/CMakeLists.txt" : {
      "ObjectId" : "0900011b3d269f17f3a5cf03dfa2c28545579fdb",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Required modules\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build options\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Extract project version from configure.ac\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Helper function to get version-info\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Helper function to configure pkg-config files\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#message(STATUS \"Configuring ${PROJECT_NAME} ${PROJECT_VERSION}\")\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Configure config_type.h\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "ThirdParty/pegtl/CMakeLists.txt" : {
      "ObjectId" : "d3ce31be4ecd9b3bf74c57e972cf922f1b61693e",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/pegtl/vtkpegtl/CMakeLists.txt" : {
      "ObjectId" : "a69d07f8f32b6c0776f0a780951bb44d2050927f",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# features used by the PEGTL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Not installing headers explicitly. This is not meant to be part of the VTK API.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ThirdParty/png/CMakeLists.txt" : {
      "ObjectId" : "34d61a938db8d6f02724a7f40605673dcdc32f2d",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/png/vtkpng/CMakeLists.txt" : {
      "ObjectId" : "01ddb763711ce38d2bc8169d0daebb9e3a14908a",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Link against the math library\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ThirdParty/pugixml/CMakeLists.txt" : {
      "ObjectId" : "a7ab1dc237617d3426802d56689a723fe32e7471",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/pugixml/vtkpugixml/CMakeLists.txt" : {
      "ObjectId" : "fd5f96883fe757f9d27bdae587d93e7d779040cf",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# XXX(kitware): VTK handles minimum CMake versions.\n",
        "Line" : 1,
        "CharPositionInLine" : 11
      },
      "1" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 9,
        "CharPositionInLine" : 11
      },
      "2" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 21,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# Rewrite command line flags to use /MT if necessary\n",
        "Line" : 27,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# XXX(kitware): VTK handles installation.\n",
        "Line" : 39,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# Pre-defines standard install locations on *nix systems.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# XXX(kitware): Use the VTK module system.\n",
        "Line" : 59,
        "CharPositionInLine" : 11
      },
      "7" : {
        "Text" : "# Export symbols for shared library builds\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Enable C++11 long long for compilers that are capable of it\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# XXX(kitware): VTK handles installation.\n",
        "Line" : 86,
        "CharPositionInLine" : 11
      },
      "10" : {
        "Text" : "# Install library into its own directory under LIBDIR\n",
        "Line" : 91,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 11
    },
    "ThirdParty/sqlite/CMakeLists.txt" : {
      "ObjectId" : "1b7bc534350d49ab9a3d5e67e8fafa9ab70c58b3",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/sqlite/vtksqlite/CMakeLists.txt" : {
      "ObjectId" : "beea5ecfa9d3b5aed86d334b4f665d90fd3d627b",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/theora/CMakeLists.txt" : {
      "ObjectId" : "4820607e54da592ade622897125a722fda0730d8",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/theora/vtktheora/CMakeLists.txt" : {
      "ObjectId" : "5f8f628b4ae43eecc996bc3b699545c1890a7e1d",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# encoder\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# decoder\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# shared\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Suppress these warnings. libtheora has an odd style and the library is tested\n\n# well enough that we can ignore them.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "ThirdParty/tiff/CMakeLists.txt" : {
      "ObjectId" : "fe0e8e538c9f6f9a0b4144a55cfb5edcca5955c7",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/tiff/vtktiff/CMakeLists.txt" : {
      "ObjectId" : "d0ae2fc7336e1ec07cf42c4e2063236eef1d2353",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake build for libtiff\n\n# Run \"cmake\" to generate the build files for your platform\n\n#\n\n# Copyright © 2015 Open Microscopy Environment / University of Dundee\n\n# Written by Roger Leigh <rleigh@codelibre.net>\n\n#\n\n# Permission to use, copy, modify, distribute, and sell this software and\n\n# its documentation for any purpose is hereby granted without fee, provided\n\n# that (i) the above copyright notices and this permission notice appear in\n\n# all copies of the software and related documentation, and (ii) the names of\n\n# Sam Leffler and Silicon Graphics may not be used in any advertising or\n\n# publicity relating to the software without the specific, prior written\n\n# permission of Sam Leffler and Silicon Graphics.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n\n# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n\n# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n\n#\n\n# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR\n\n# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,\n\n# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n\n# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF\n\n# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE\n\n# OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# XXX(kitware): VTK handles CMake versions.\n",
        "Line" : 26,
        "CharPositionInLine" : 11
      },
      "2" : {
        "Text" : "# b/c of use of BUILD_INTERFACE generator expression\n",
        "Line" : 27,
        "CharPositionInLine" : 39
      },
      "3" : {
        "Text" : "# Default policy is from 2.8.9\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set MacOSX @rpath usage globally.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use new variable expansion policy.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# XXX(kitware): just hard-code the version number.\n",
        "Line" : 47,
        "CharPositionInLine" : 11
      },
      "7" : {
        "Text" : "# Read version information from configure.ac.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Just copy from configure.ac rather than extracting it.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# XXX(kitware): build tiff using as how vtk is being built\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Project version\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# the other tiff_VERSION_* variables are set automatically\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Library version (unlike libtool's baroque scheme, WYSIWYG here)\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# For autotools header compatibility\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# XXX(kitware): Hardcode settings.\n",
        "Line" : 140,
        "CharPositionInLine" : 9
      },
      "15" : {
        "Text" : "# These are annoyingly verbose, produce false positives or don't work\n\n# nicely with all supported compiler versions, so are disabled unless\n\n# explicitly enabled.\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# This will cause the compiler to fail when an error occurs.\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Check if the compiler supports each of the following additional\n\n# flags, and enable them if supported.  This greatly improves the\n\n# quality of the build by checking for a number of common problems,\n\n# some of which are quite serious.\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# XXX(kitware): don't add to VTK's MSVC warning level\n",
        "Line" : 179,
        "CharPositionInLine" : 54
      },
      "19" : {
        "Text" : "# XXX(kitware): vtk does postfixes elsewhere.\n",
        "Line" : 203,
        "CharPositionInLine" : 11
      },
      "20" : {
        "Text" : "# XXX(kitware): hardcode settings\n",
        "Line" : 209,
        "CharPositionInLine" : 11
      },
      "21" : {
        "Text" : "# Check if LD supports linker scripts.\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Find libm, if available\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# XXX(kitware): unnecessary.\n",
        "Line" : 235,
        "CharPositionInLine" : 11
      },
      "24" : {
        "Text" : "#check_include_file(stdint.h    HAVE_STDINT_H)\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#check_include_file(strings.h   HAVE_STRINGS_H)\n\n#check_include_file(sys/time.h  HAVE_SYS_TIME_H)\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Inspired from /usr/share/autoconf/autoconf/c.m4\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# off_t and size_t checks omitted; not clear they are used at all\n\n# Are off_t and size_t checks strictly necessary?\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Check if sys/time.h and time.h allow use together\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Check if struct tm is in sys/time.h\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Check type sizes\n\n# NOTE: Could be replaced with C99 <stdint.h>\n",
        "Line" : 297,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#report_values(TIFF_INT8_T TIFF_INT8_FORMAT\n\n#              TIFF_UINT8_T TIFF_UINT8_FORMAT\n\n#              TIFF_INT16_T TIFF_INT16_FORMAT\n\n#              TIFF_UINT16_T TIFF_UINT16_FORMAT\n\n#              TIFF_INT32_T TIFF_INT32_FORMAT\n\n#              TIFF_UINT32_T TIFF_UINT32_FORMAT\n\n#              TIFF_INT64_T TIFF_INT64_FORMAT\n\n#              TIFF_UINT64_T TIFF_UINT64_FORMAT\n\n#              TIFF_SSIZE_T TIFF_SSIZE_FORMAT\n\n#              TIFF_PTRDIFF_T TIFF_PTRDIFF_FORMAT)\n",
        "Line" : 403,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#check_symbol_exists(setmode \"unistd.h\" HAVE_SETMODE)\n",
        "Line" : 415,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#check_symbol_exists(strtol \"stdlib.h\" HAVE_STRTOL)\n\n#check_symbol_exists(strtoll \"stdlib.h\" HAVE_STRTOLL)\n\n#check_symbol_exists(strtoul \"stdlib.h\" HAVE_STRTOUL)\n\n#check_symbol_exists(strtoull \"stdlib.h\" HAVE_STRTOULL)\n\n#check_symbol_exists(getopt \"unistd.h\" HAVE_GETOPT)\n\n#check_symbol_exists(lfind \"search.h\" HAVE_LFIND)\n",
        "Line" : 418,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# CPU bit order\n",
        "Line" : 429,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# CPU endianness\n",
        "Line" : 437,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# IEEE floating point\n",
        "Line" : 441,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#report_values(CMAKE_HOST_SYSTEM_PROCESSOR HOST_FILLORDER\n\n#              HOST_BIG_ENDIAN HAVE_IEEEFP)\n",
        "Line" : 444,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Large file support\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# This might not catch every possibility catered for by\n\n# AC_SYS_LARGEFILE.\n",
        "Line" : 449,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# Documentation install directory (default to cmake project docdir)\n",
        "Line" : 455,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Options to enable and disable internal codecs\n",
        "Line" : 458,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# XXX(kitware): hardcode settings\n",
        "Line" : 460,
        "CharPositionInLine" : 11
      },
      "43" : {
        "Text" : "# Option for Microsoft Document Imaging\n",
        "Line" : 479,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# ZLIB\n",
        "Line" : 492,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# XXX(kitware): hardcode settings\n",
        "Line" : 493,
        "CharPositionInLine" : 11
      },
      "46" : {
        "Text" : "# Option for Pixar log-format algorithm\n",
        "Line" : 506,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Pixar log format\n",
        "Line" : 508,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# XXX(kitware): hardcode settings\n",
        "Line" : 509,
        "CharPositionInLine" : 11
      },
      "49" : {
        "Text" : "# JPEG\n",
        "Line" : 521,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# XXX(kitware): hardcode settings\n",
        "Line" : 522,
        "CharPositionInLine" : 11
      },
      "51" : {
        "Text" : "# XXX(kitware): hardcode settings\n",
        "Line" : 535,
        "CharPositionInLine" : 11
      },
      "52" : {
        "Text" : "# JBIG-KIT\n",
        "Line" : 547,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# XXX(kitware): hardcode settings\n",
        "Line" : 548,
        "CharPositionInLine" : 11
      },
      "54" : {
        "Text" : "# liblzma2\n",
        "Line" : 576,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# XXX(kitware): hardcode settings\n",
        "Line" : 577,
        "CharPositionInLine" : 11
      },
      "56" : {
        "Text" : "# libzstd\n",
        "Line" : 590,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# XXX(kitware): hardcode settings\n",
        "Line" : 591,
        "CharPositionInLine" : 11
      },
      "58" : {
        "Text" : "# libwebp\n",
        "Line" : 615,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# XXX(kitware): hardcode settings\n",
        "Line" : 616,
        "CharPositionInLine" : 11
      },
      "60" : {
        "Text" : "# 8/12-bit jpeg mode\n",
        "Line" : 634,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# XXX(kitware): hardcode settings\n",
        "Line" : 635,
        "CharPositionInLine" : 11
      },
      "62" : {
        "Text" : "# C++ support\n",
        "Line" : 653,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# XXX(kitware): hardcode settings\n",
        "Line" : 654,
        "CharPositionInLine" : 11
      },
      "64" : {
        "Text" : "# XXX(kitware): hide unused options.\n",
        "Line" : 666,
        "CharPositionInLine" : 11
      },
      "65" : {
        "Text" : "# OpenGL and GLUT\n",
        "Line" : 667,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Purely to satisfy the generated headers:\n",
        "Line" : 674,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Win32 IO\n",
        "Line" : 683,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Orthogonal features\n",
        "Line" : 691,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Strip chopping\n",
        "Line" : 693,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# XXX(kitware): hardcode settings\n",
        "Line" : 694,
        "CharPositionInLine" : 11
      },
      "71" : {
        "Text" : "# Defer loading of strip/tile offsets\n",
        "Line" : 706,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# CHUNKY_STRIP_READ_SUPPORT\n",
        "Line" : 710,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# SUBIFD support\n",
        "Line" : 714,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Default handling of ASSOCALPHA support.\n",
        "Line" : 717,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Default handling of YCbCr subsampling support.\n\n# See Bug 168 in Bugzilla, and JPEGFixupTestSubsampling() for details.\n",
        "Line" : 723,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# SUBIFD support\n",
        "Line" : 737,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# XXX(kitware): no need for a pkg-config file\n",
        "Line" : 745,
        "CharPositionInLine" : 11
      },
      "78" : {
        "Text" : "# Generate pkg-config file\n",
        "Line" : 746,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# XXX(kitware): dependencies handled by VTK.\n",
        "Line" : 757,
        "CharPositionInLine" : 11
      },
      "80" : {
        "Text" : "# Includes used by libtiff (and tests)\n",
        "Line" : 758,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Libraries required by libtiff\n",
        "Line" : 781,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "#report_values(TIFF_INCLUDES TIFF_LIBRARY_DEPS)\n",
        "Line" : 809,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Process subdirectories\n",
        "Line" : 811,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# XXX(kitware): ignore non-source directories\n",
        "Line" : 814,
        "CharPositionInLine" : 11
      },
      "85" : {
        "Text" : "#message(STATUS \"EXTRA_DIST: ${EXTRA_DIST}\")\n",
        "Line" : 823,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# XXX(kitware): hide messages.\n",
        "Line" : 825,
        "CharPositionInLine" : 11
      },
      "87" : {
        "Text" : "# message(STATUS \"  X Athena Widgets support:           ${HAVE_XAW}\")\n",
        "Line" : 859,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 88
    },
    "ThirdParty/tiff/vtktiff/libtiff/CMakeLists.txt" : {
      "ObjectId" : "921417f5dadd7656ac02d8ea0c53ce221ab07189",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake build for libtiff\n\n#\n\n# Copyright © 2015 Open Microscopy Environment / University of Dundee\n\n# Written by Roger Leigh <rleigh@codelibre.net>\n\n#\n\n# Permission to use, copy, modify, distribute, and sell this software and\n\n# its documentation for any purpose is hereby granted without fee, provided\n\n# that (i) the above copyright notices and this permission notice appear in\n\n# all copies of the software and related documentation, and (ii) the names of\n\n# Sam Leffler and Silicon Graphics may not be used in any advertising or\n\n# publicity relating to the software without the specific, prior written\n\n# permission of Sam Leffler and Silicon Graphics.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n\n# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n\n# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n\n#\n\n# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR\n\n# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,\n\n# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n\n# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF\n\n# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE\n\n# OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generate headers\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# XXX(kitware): Use VTK's module system.\n",
        "Line" : 123,
        "CharPositionInLine" : 11
      },
      "3" : {
        "Text" : "# This property causes shared libraries on Linux to have the full version\n\n# encoded into their final filename.  We disable this on Cygwin because\n\n# it causes cygz-${TIFF_FULL_VERSION}.dll to be created when cygz.dll\n\n# seems to be the default.\n",
        "Line" : 135,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# XXX(kitware): VTK handles installation.\n",
        "Line" : 155,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# This property causes shared libraries on Linux to have the full version\n\n# encoded into their final filename.  We disable this on Cygwin because\n\n# it causes cygz-${TIFF_FULL_VERSION}.dll to be created when cygz.dll\n\n# seems to be the default.\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "ThirdParty/tiff/vtktiff/port/CMakeLists.txt" : {
      "ObjectId" : "98a111761a99630177cc55f3405d16b7d4ceb507",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake build for libtiff\n\n#\n\n# Copyright © 2015 Open Microscopy Environment / University of Dundee\n\n# Written by Roger Leigh <rleigh@codelibre.net>\n\n#\n\n# Permission to use, copy, modify, distribute, and sell this software and\n\n# its documentation for any purpose is hereby granted without fee, provided\n\n# that (i) the above copyright notices and this permission notice appear in\n\n# all copies of the software and related documentation, and (ii) the names of\n\n# Sam Leffler and Silicon Graphics may not be used in any advertising or\n\n# publicity relating to the software without the specific, prior written\n\n# permission of Sam Leffler and Silicon Graphics.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n\n# EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n\n# WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n\n#\n\n# IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR\n\n# ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,\n\n# OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n\n# WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF\n\n# LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE\n\n# OF THIS SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# XXX(kitware): Some are only required for tools, so skip them.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# XXX(kitware): Not building tools for VTK; skip the library.\n",
        "Line" : 64,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 3
    },
    "ThirdParty/utf8/CMakeLists.txt" : {
      "ObjectId" : "508d17f6fb27771ac2def469b441f4fc70b3d7ef",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/utf8/vtkutf8/CMakeLists.txt" : {
      "ObjectId" : "74df792aed2c9a0de5a475473c9bab6b3ef191bc",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/verdict/CMakeLists.txt" : {
      "ObjectId" : "1ce4cf4a7939c7ab7cd90db855cadbaa4ddd5659",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/verdict/vtkverdict/CMakeLists.txt" : {
      "ObjectId" : "8e226c8d872e8f4a3de7e110ec42bb5f5aa8f0aa",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2003,2006 Sandia National Laboratories <cubit@sandia.gov>\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake 3.0, Define link interface - required by android_mk export\n\n# CMake 3.0\n\n# CMake 3.0, MACOSX_RPATH is enabled by default.\n\n# CMake 3.1\n",
        "Line" : 6,
        "CharPositionInLine" : 12
      },
      "2" : {
        "Text" : "# Setting the VERSION and SOVERSION of a library will include\n\n# version information either in the library, or in the library\n\n# name (depending on the platform). You may choose to exclude\n\n# this information.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Apply user-defined properties to the library targets.\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Installation stuff\n\n#\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# .exe, .dll\n\n# .so, mod.dll\n\n# .a, .lib\n",
        "Line" : 182,
        "CharPositionInLine" : 84
      },
      "6" : {
        "Text" : "#\n\n# Packing stuff\n\n#\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#      include (InstallRequiredSystemLibraries)\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# There is a bug in NSI that does not handle full unix paths properly.\n\n# Make sure there is at least one set of four (4) backslashes.\n",
        "Line" : 214,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#set (CPACK_PACKAGE_EXECUTABLES \"CMakeSetup\" \"CMake\")\n\n#set (CPACK_NSIS_INSTALLED_ICON_NAME \"bin\\\\\\\\CMakeSetup.exe\")\n",
        "Line" : 217,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#set (CPACK_STRIP_FILES \"bin/ccmake;bin/cmake;bin/cpack;bin/ctest\")\n\n#set (CPACK_PACKAGE_EXECUTABLES \"\")\n",
        "Line" : 225,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    },
    "ThirdParty/vpic/CMakeLists.txt" : {
      "ObjectId" : "35f47fd489002239eba1b442b059ed49235dba25",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/vpic/vtkvpic/CMakeLists.txt" : {
      "ObjectId" : "0ba9f66475aa4f042eeb6ddb5e5173f63e2b28ba",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/vtkm/CMakeLists.txt" : {
      "ObjectId" : "613a457529aa49e6e66e6c698e8b5385bfd5e201",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/vtkm/vtkvtkm/CMakeLists.txt" : {
      "ObjectId" : "f93abca9c8d9b34da668cee0f43de2c58383cce4",
      "LastModified" : "2019-04-17T15:54:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# VTK-m uses stricter warning checks resulting in more warnings when VTK-m\n\n# is enabled.\n\n# Disable VTK-m warning flags and just rely on VTK's warning flags.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Workaround cmake issue #7519 which causes the c++11 flag set for VTK-m using\n\n# target_compile_features to not work.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ThirdParty/xdmf2/CMakeLists.txt" : {
      "ObjectId" : "8c7eea5fc2d422cfc682805e3a446dec77c734c6",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: xdmf2 only exports symbols properly on Windows.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ThirdParty/xdmf2/vtkxdmf2/CMake/CheckFor64BitStreams.cmake" : {
      "ObjectId" : "f0b103320cc27ab9aba5dbac46443bf23f59f64c",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check if the system supports 64 bit streams\n\n#\n\n# CHECK_FOR_64BIT_STREAMS - macro which checks the existence of 64 bit streams\n\n# VARIABLE - variable to return result\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ThirdParty/xdmf2/vtkxdmf2/CMakeLists.txt" : {
      "ObjectId" : "2dbf821104e6a6045a0979dbcedf4534ea8d462f",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# XXX(kitware): VTK handles the CMake minimum version.\n",
        "Line" : 1,
        "CharPositionInLine" : 11
      },
      "1" : {
        "Text" : "# CMake 3.1\n",
        "Line" : 4,
        "CharPositionInLine" : 32
      },
      "2" : {
        "Text" : "#options\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# XXX(kitware): VTK handles linking.\n",
        "Line" : 14,
        "CharPositionInLine" : 11
      },
      "4" : {
        "Text" : "#hard dependencies\n\n#XML\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#?\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# XXX(kitware): VTK handles linking.\n",
        "Line" : 34,
        "CharPositionInLine" : 11
      },
      "7" : {
        "Text" : "#HDF5\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#optional dependencies\n\n#MPI\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# XXX(kitware): hardcode settings\n",
        "Line" : 52,
        "CharPositionInLine" : 11
      },
      "10" : {
        "Text" : "#NDGM\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# XXX(kitware): hardcode settings\n",
        "Line" : 71,
        "CharPositionInLine" : 11
      },
      "12" : {
        "Text" : "#subdirs(NDGM)\n",
        "Line" : 84,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "##########################\n\n#packaging\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# XXX(kitware): VTK handles installation.\n",
        "Line" : 101,
        "CharPositionInLine" : 11
      },
      "15" : {
        "Text" : "#setup build\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "ThirdParty/xdmf2/vtkxdmf2/libsrc/CMakeLists.txt" : {
      "ObjectId" : "3e031bb6a32333ae29644085e55980af695a4778",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Does Xdmf require support for 64 bit file systems\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## system introspection - isn't this what Ice is for???\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# System to Build\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# XXX(kitware): hide cache variables\n",
        "Line" : 128,
        "CharPositionInLine" : 11
      },
      "4" : {
        "Text" : "# Allow the user to customize their build with some local options\n\n#\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#TODO: why aren't we getting these from Ice?\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Don't Really Need to check these ...\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# These should be Valid\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# These are sometimes different\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Save out config to let other projects use xdmf\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#???\n",
        "Line" : 197,
        "CharPositionInLine" : 34
      },
      "11" : {
        "Text" : "#optional portions of xdmf\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#mySQL\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# XXX(kitware): hardcode settings\n",
        "Line" : 206,
        "CharPositionInLine" : 11
      },
      "14" : {
        "Text" : "# gzip compression\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# XXX(kitware): hardcode settings\n",
        "Line" : 232,
        "CharPositionInLine" : 11
      },
      "16" : {
        "Text" : "# bz2lib compression\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# XXX(kitware): hardcode settings\n",
        "Line" : 244,
        "CharPositionInLine" : 11
      },
      "18" : {
        "Text" : "## MPI ###\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#finally make the target that builds the xdmf library itself\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#setup dependencies for the optional parts of library\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# XXX(kitware): VTK handles linking and installation.\n",
        "Line" : 294,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 22
    },
    "ThirdParty/xdmf2/vtkxdmf2/libsrc/CheckCXXSourceRuns.cmake" : {
      "ObjectId" : "32ce7b3a5c526f0418b6f465e75ee9b73391b474",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if the source code provided in the SOURCE argument compiles.\n\n# CHECK_CXX_SOURCE_COMPILES(SOURCE VAR)\n\n# - macro which checks if the source code compiles\\\n\n#  SOURCE - source code to try to compile\n\n#  VAR    - variable to store size if the type exists.\n\n#\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n#  CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#  CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#  CMAKE_REQUIRED_INCLUDES = list of include directories\n\n#  CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ThirdParty/xdmf3/CMakeLists.txt" : {
      "ObjectId" : "e54de215540a641b4fbc69a2d0415038f55cf7c9",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: xdmf3 only exports symbols properly on Windows.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ThirdParty/xdmf3/vtkxdmf3/CMake/VersionSuite/SetUpVersion.cmake" : {
      "ObjectId" : "f1253872b98291fc10e211cff33c1dc8833ac88b",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Version Suite\n\n# Author: Brian Panneton\n\n# Descrition:   This small suite allows you to add support\n\n#               for versioning in your projects\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This allows you to turn on and off the auto\n\n# update of the (project name)Version.hpp file\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# XXX(kitware): force settings\n",
        "Line" : 8,
        "CharPositionInLine" : 11
      },
      "3" : {
        "Text" : "# We need to make sure we have the header file\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default incase CalculateVerison is not called\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# This Macro allows you to set up the Version in a one liner\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Manually generating minor version\n\n#   VersionCalculate()\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This Macro allows you to set the rewrite number\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This Macro calculates the number of tags from your git repo\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This Macro writes your hpp/cpp files\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "ThirdParty/xdmf3/vtkxdmf3/CMake/XdmfFunctions.cmake" : {
      "ObjectId" : "a22ffd02ff3294f6bea270320d75b8a9cdd94cb8",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/xdmf3/vtkxdmf3/CMakeLists.txt" : {
      "ObjectId" : "4f50a4f491e5b8d342ad56377ee191a522077450",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# XXX(kitware): use VTK's CMake policies\n",
        "Line" : 1,
        "CharPositionInLine" : 11
      },
      "1" : {
        "Text" : "# XXX(kitware): force settings\n",
        "Line" : 13,
        "CharPositionInLine" : 11
      },
      "2" : {
        "Text" : "# XXX(kitware): VTK's module system handles output directories\n",
        "Line" : 22,
        "CharPositionInLine" : 11
      },
      "3" : {
        "Text" : "# XXX(kitware): force settings\n",
        "Line" : 34,
        "CharPositionInLine" : 11
      },
      "4" : {
        "Text" : "# Enable CMake testing\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Should we build with documentation\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# XXX(kitware): force settings\n",
        "Line" : 58,
        "CharPositionInLine" : 11
      },
      "7" : {
        "Text" : "# XXX(kitware): force settings\n",
        "Line" : 67,
        "CharPositionInLine" : 11
      },
      "8" : {
        "Text" : "# Wrapper Setup\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# XXX(kitware): VTK's module system handles dependencies\n",
        "Line" : 76,
        "CharPositionInLine" : 11
      },
      "10" : {
        "Text" : "#check for TIFF\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# XXX(kitware): force settings\n",
        "Line" : 85,
        "CharPositionInLine" : 11
      },
      "12" : {
        "Text" : "# Test for DSM\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# The Intel compiler requires an extra tag for CXX_FLAGS in order to properly build.\n",
        "Line" : 96,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# If we are wrapping either, we need swig\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# If we are wrapping python, let's include it in the top level\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# A macro to swig and create the python files\n\n# Since we essentually do the same thing inside and outside core, it\n\n# would be easier as a macro\n\n# Parameters:\n\n#     python_name = the name of the intended target to be wrapped\n\n#     ${ARGN} = any dependencies needed by the target\n\n# Output:\n\n#     Target Name = the output target name will have ${python_name} as its name\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# optimize swig generation --- these are all flags corresponding to -O\n\n# except -fvirtual which breaks visitor operation\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#Enables DSM\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# If we are wrapping java, let's include it in the top level\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# A macro to swig and create the jar files\n\n# Since we essentually do the same thing inside and outside core, it\n\n# would be easier as a macro\n\n# Parameters:\n\n#     java_name = the name of the intended target to be wrapped\n\n#     ${ARGN} = any dependencies needed by the target\n\n# Output:\n\n#     Target Name     = the output target name will have ${java_name}Java as its name\n\n#     Target Jar      = the output target jar will have ${java_name}Java.jar as its name\n",
        "Line" : 213,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# XXX(kitware): force settings\n",
        "Line" : 288,
        "CharPositionInLine" : 11
      },
      "22" : {
        "Text" : "# XXX(kitware) using correct target name\n",
        "Line" : 356,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "# XXX(kitware): force settings\n",
        "Line" : 386,
        "CharPositionInLine" : 13
      },
      "24" : {
        "Text" : "# XXX(kitware): VTK's module system handles installation\n",
        "Line" : 395,
        "CharPositionInLine" : 13
      },
      "25" : {
        "Text" : "# XXX(kitware): VTK's module system handles installation\n",
        "Line" : 416,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 26
    },
    "ThirdParty/xdmf3/vtkxdmf3/core/CMakeLists.txt" : {
      "ObjectId" : "76f723869ed1d308a38413d0e2bfbcb6fa314f25",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# XXX(kitware): use target-based include directories\n",
        "Line" : 20,
        "CharPositionInLine" : 11
      },
      "1" : {
        "Text" : "# XXX(kitware): VTK's module system handles dependencies\n",
        "Line" : 25,
        "CharPositionInLine" : 11
      },
      "2" : {
        "Text" : "# FIXME: Would like to get this info from HDF5 so we don't have conflicting\n\n# MPI versions\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Perform compile-time checks and generate XdmfCoreConfig.hpp\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# XXX(kitware): VTK's module system handles dependencies\n",
        "Line" : 115,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# XXX(kitware): use VTK's module system.\n",
        "Line" : 144,
        "CharPositionInLine" : 11
      },
      "6" : {
        "Text" : "#add_definitions(-D_HDF5USEDLL_ -D_HDF5USEHLDLL_)\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# XXX(kitware): mangle the library name.\n",
        "Line" : 188,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "ThirdParty/zfp/CMakeLists.txt" : {
      "ObjectId" : "f10068f59b3b9616b1a84f5222c0eced10188777",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/zfp/vtkzfp/CMakeLists.txt" : {
      "ObjectId" : "3423c692f34950940f6a8bd2ef406047d17137e5",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/zlib/CMakeLists.txt" : {
      "ObjectId" : "2c078c87731d93590b0ec3f60c7b35bf32188ae7",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ThirdParty/zlib/vtkzlib/CMakeLists.txt" : {
      "ObjectId" : "d42f67d7ffc0d468ee205f6eb0990726db4fc40c",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# XXX(kitware): VTK handles CMake minimum versions.\n",
        "Line" : 1,
        "CharPositionInLine" : 11
      },
      "1" : {
        "Text" : "# XXX(kitware): remove these options from the cache.\n",
        "Line" : 10,
        "CharPositionInLine" : 11
      },
      "2" : {
        "Text" : "# XXX(kitware): VTK handles installation.\n",
        "Line" : 15,
        "CharPositionInLine" : 11
      },
      "3" : {
        "Text" : "# XXX(kitware): VTK handles testing.\n",
        "Line" : 27,
        "CharPositionInLine" : 11
      },
      "4" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# clear variable\n",
        "Line" : 42,
        "CharPositionInLine" : 32
      },
      "7" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# XXX(kitware): VTK handles debug suffixes.\n",
        "Line" : 50,
        "CharPositionInLine" : 15
      },
      "9" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\n\n# in their source tree...\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# XXX(kitware): always mangle\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# XXX(kitware): the pkgconfig file isn't necessary.\n",
        "Line" : 73,
        "CharPositionInLine" : 11
      },
      "12" : {
        "Text" : "# XXX(kitware): the pkgconfig file isn't necessary.\n",
        "Line" : 80,
        "CharPositionInLine" : 11
      },
      "13" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# XXX(kitware): create the third-party library for VTK\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# XXX(kitware): skip all the original build/install commands\n",
        "Line" : 130,
        "CharPositionInLine" : 11
      },
      "16" : {
        "Text" : "# If present will override custom build rule below.\n",
        "Line" : 134,
        "CharPositionInLine" : 23
      },
      "17" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# This gets us DLL resource information when compiling on MinGW.\n",
        "Line" : 177,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# This property causes shared libraries on Linux to have the full version\n\n# encoded into their final filename.  We disable this on Cygwin because\n\n# it causes cygz-${ZLIB_FULL_VERSION}.dll to be created when cygz.dll\n\n# seems to be the default.\n\n#\n\n# This has no effect with MSVC, on that platform the version info for\n\n# the DLL comes from the resource file win32/zlib1.rc\n",
        "Line" : 198,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# On unix-like platforms the library is almost always called libz\n",
        "Line" : 209,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Creates zlib1.dll when building shared library version\n",
        "Line" : 215,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "#============================================================================\n\n# Example binaries\n\n#============================================================================\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "Utilities/Benchmarks/CMakeLists.txt" : {
      "ObjectId" : "f2a1e1a9afad97b184f47cbdbf1b06a42c0836a9",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add our test executables.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Utilities/DICOMParser/CMakeLists.txt" : {
      "ObjectId" : "7f980329fc3afc212bb268bd3a67197744c8a8cb",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: DICOMParser only exports symbols properly on Windows.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Utilities/Doxygen/CMakeLists.txt" : {
      "ObjectId" : "3f285f601e53444d653ea21a71c058b0f02bddf7",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Build the documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Configure the script and the doxyfile, then add target\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build up a list of all module source directories. Note that this should be\n\n# all source directories and so does not use the normal variables.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Skip the utilities and third parties directories.\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Use both the source and binary directories, this ensures that\n\n# generated files will be included, but they may then be architecture,\n\n# build configuration and/or compiler specific. All source directories\n\n# are included whether the module is enabled or not.\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "Utilities/Java/CMakeLists.txt" : {
      "ObjectId" : "6486dbc3f124d9439dca58d95d3c38c7186ea06d",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: Update FindJNI to use imported targets.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Utilities/KWIML/CMakeLists.txt" : {
      "ObjectId" : "31f3bf6469a1ba79ab13cab9ecad797f978649f5",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Utilities/KWIML/vtkkwiml/CMakeLists.txt" : {
      "ObjectId" : "1d158843de2dfafb267e1fdc6e59ded52961c023",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright Kitware, Inc.\n\n# Distributed under the OSI-approved BSD 3-Clause License.\n\n# See accompanying file Copyright.txt for details.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------------------\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "Utilities/KWIML/vtkkwiml/test/CMakeLists.txt" : {
      "ObjectId" : "40fe62f200d131cfd80ebc84ac96135696e7741d",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright Kitware, Inc.\n\n# Distributed under the OSI-approved BSD 3-Clause License.\n\n# See accompanying file Copyright.txt for details.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Suppress printf/scanf format warnings; we test if the sizes match.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Xcode 2.x forgets to create the output directory before linking\n\n# the individual architectures.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "Utilities/KWSys/CMakeLists.txt" : {
      "ObjectId" : "72607885e1f47d9a7e096d418171a2323f3fd499",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure KWSys to be named \"vtksys\".\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Utilities/KWSys/vtksys/CMakeLists.txt" : {
      "ObjectId" : "db4ef90d32fe5d7fee8a23f65ff41c708608882e",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing#kwsys for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The Kitware System Library is intended to be included in other\n\n# projects.  It is completely configurable in that the library's\n\n# namespace can be configured and the components that are included can\n\n# be selected invididually.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Typical usage is to import the kwsys directory tree into a\n\n# subdirectory under a parent project and enable the classes that will\n\n# be used.  All classes are disabled by default.  The CMake listfile\n\n# above this one configures the library as follows:\n\n#\n\n#  SET(KWSYS_NAMESPACE foosys)\n\n#  SET(KWSYS_USE_Directory 1)    # Enable Directory class.\n\n#  SUBDIRS(kwsys)\n\n#\n\n# Optional settings are as follows:\n\n#\n\n#  KWSYS_HEADER_ROOT = The directory into which to generate the kwsys headers.\n\n#                      A directory called \"${KWSYS_NAMESPACE}\" will be\n\n#                      created under this root directory to hold the files.\n\n#  KWSYS_SPLIT_OBJECTS_FROM_INTERFACE\n\n#                    = Instead of creating a single ${KWSYS_NAMESPACE} library\n\n#                      target, create three separate targets:\n\n#                        ${KWSYS_NAMESPACE}\n\n#                          - An INTERFACE library only containing usage\n\n#                            requirements.\n\n#                        ${KWSYS_NAMESPACE}_objects\n\n#                          - An OBJECT library for the built kwsys objects.\n\n#                            Note: This is omitted from the install rules\n\n#                        ${KWSYS_NAMESPACE}_private\n\n#                          - An INTERFACE library combining both that is\n\n#                            appropriate for use with PRIVATE linking in\n\n#                            target_link_libraries. Because of how interface\n\n#                            properties propagate, this target is not suitable\n\n#                            for use with PUBLIC or INTERFACE linking.\n\n#  KWSYS_ALIAS_TARGET = The name of an alias target to create to the actual target.\n\n#\n\n#    Example:\n\n#\n\n#      SET(KWSYS_HEADER_ROOT ${PROJECT_BINARY_DIR})\n\n#      INCLUDE_DIRECTORIES(${PROJECT_BINARY_DIR})\n\n#\n\n#  KWSYS_CXX_STANDARD         = A value for CMAKE_CXX_STANDARD within KWSys.\n\n#                               Set to empty string to use no default value.\n\n#  KWSYS_CXX_COMPILE_FEATURES = target_compile_features arguments for KWSys.\n\n#\n\n# Optional settings to setup install rules are as follows:\n\n#\n\n#  KWSYS_INSTALL_BIN_DIR     = The installation target directories into\n\n#  KWSYS_INSTALL_LIB_DIR       which the libraries and headers from\n\n#  KWSYS_INSTALL_INCLUDE_DIR   kwsys should be installed by a \"make install\".\n\n#                              The values should be specified relative to\n\n#                              the installation prefix and NOT start with '/'.\n\n#  KWSYS_INSTALL_DOC_DIR     = The installation target directory for documentation\n\n#                              such as copyright information.\n\n#\n\n#  KWSYS_INSTALL_COMPONENT_NAME_RUNTIME     = Name of runtime and development\n\n#  KWSYS_INSTALL_COMPONENT_NAME_DEVELOPMENT   installation components.\n\n#                                             If not given the install rules\n\n#                                             will not be in any component.\n\n#\n\n#  KWSYS_INSTALL_EXPORT_NAME = The EXPORT option value for install(TARGETS) calls.\n\n#\n\n#    Example:\n\n#\n\n#      SET(KWSYS_INSTALL_BIN_DIR bin)\n\n#      SET(KWSYS_INSTALL_LIB_DIR lib)\n\n#      SET(KWSYS_INSTALL_INCLUDE_DIR include)\n\n#      SET(KWSYS_INSTALL_COMPONENT_NAME_RUNTIME Runtime)\n\n#      SET(KWSYS_INSTALL_COMPONENT_NAME_DEVELOPMENT Development)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Once configured, kwsys should be used as follows from C or C++ code:\n\n#\n\n#  #include <foosys/Directory.hxx>\n\n#   ...\n\n#  foosys::Directory directory;\n\n#\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# NOTE: This library is intended for internal use by Kitware-driven\n\n# projects.  In order to keep it simple no attempt will be made to\n\n# maintain backward compatibility when changes are made to KWSys.\n\n# When an incompatible change is made Kitware's projects that use\n\n# KWSys will be fixed, but no notification will necessarily be sent to\n\n# any outside mailing list and no documentation of the change will be\n\n# written.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# CMake 3.2, Honor link flags in try_compile() source-file signature.\n\n# CMake 3.3, Honor visibility properties for all target types.\n\n# CMake 3.8, Honor language standard in try_compile source-file signature.\n\n# CMake 3.9, INTERPROCEDURAL_OPTIMIZATION is enforced when enabled.\n",
        "Line" : 91,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# If a namespace is not specified, use \"kwsys\" and enable testing.\n\n# This should be the case only when kwsys is not included inside\n\n# another project and is being tested.\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# The project name is that of the specified namespace.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Tell CMake how to follow dependencies of sources in this directory.\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Select library components.\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable all components.\n",
        "Line" : 129,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Enforce component dependencies.\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Specify default 8 bit encoding for Windows\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Enable testing if building standalone.\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Choose default shared/static build if not specified.\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Include helper macros.\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Do full dependency headers.\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Use new KWSYS_INSTALL_*_DIR variable names to control installation.\n\n# Take defaults from the old names.  Note that there was no old name\n\n# for the bin dir, so we take the old lib dir name so DLLs will be\n\n# installed in a compatible way for old code.\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Setup header install rules.\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Setup library install rules.\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Install the shared library to the lib directory.\n",
        "Line" : 243,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Assign the shared library to the runtime component.\n",
        "Line" : 247,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Assign the namelink to the development component.\n",
        "Line" : 257,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Install the archive to the lib directory.\n",
        "Line" : 265,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Assign the archive to the development component.\n",
        "Line" : 269,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Install the runtime library to the bin directory.\n",
        "Line" : 277,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Assign the runtime library to the runtime component.\n",
        "Line" : 281,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Do not support old KWSYS_*a_INSTALL_DIR variable names.\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Generated source files will need this header.\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Select plugin module file name convention.\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# We require ANSI support from the C compiler.  Add any needed flags.\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Adjust compiler flags for some platforms.\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# it is known that version 3.85 fails and 6.25 works without these flags\n",
        "Line" : 333,
        "CharPositionInLine" : 6
      },
      "33" : {
        "Text" : "# use new C++ library and improved template support\n",
        "Line" : 335,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure the standard library header wrappers based on compiler's\n\n# capabilities and parent project's request.  Enforce 0/1 as only\n\n# possible values for configuration into Configure.hxx.\n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Check existence and uniqueness of long long and __int64.\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Enable the \"long long\" type if it is available.  It is standard in\n\n# C99 and C++03 but not in earlier standards.\n",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Enable the \"__int64\" type if it is available and unique.  It is not\n\n# standard.\n",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Look for type size helper macros.\n",
        "Line" : 390,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# Determine whether iostreams support long long.\n",
        "Line" : 396,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Configure some implementation details.\n",
        "Line" : 435,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Disable getpwnam for static linux builds since it depends on shared glibc\n",
        "Line" : 502,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# Suppress LNK4089: all references to 'PSAPI.DLL' discarded by /OPT:REF\n",
        "Line" : 531,
        "CharPositionInLine" : 8
      },
      "43" : {
        "Text" : "# check for simple stack trace\n\n# usually it's in libc but on FreeBSD\n\n# it's in libexecinfo\n",
        "Line" : 577,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# we have the backtrace header check if it\n\n# can be used with this compiler\n",
        "Line" : 587,
        "CharPositionInLine" : 6
      },
      "45" : {
        "Text" : "# backtrace is supported by this system and compiler.\n\n# now check for the more advanced capabilities.\n",
        "Line" : 594,
        "CharPositionInLine" : 8
      },
      "46" : {
        "Text" : "# check for symbol lookup using dladdr\n",
        "Line" : 598,
        "CharPositionInLine" : 8
      },
      "47" : {
        "Text" : "# we have symbol lookup libraries and headers\n\n# check if they can be used with this compiler\n",
        "Line" : 601,
        "CharPositionInLine" : 10
      },
      "48" : {
        "Text" : "# symbol lookup is supported by this system\n\n# and compiler.\n",
        "Line" : 608,
        "CharPositionInLine" : 12
      },
      "49" : {
        "Text" : "# c++ demangling support\n\n# check for cxxabi headers\n",
        "Line" : 614,
        "CharPositionInLine" : 8
      },
      "50" : {
        "Text" : "# check if cxxabi can be used with this\n\n# system and compiler.\n",
        "Line" : 618,
        "CharPositionInLine" : 10
      },
      "51" : {
        "Text" : "# c++ demangle using cxxabi is supported with\n\n# this system and compiler\n",
        "Line" : 623,
        "CharPositionInLine" : 12
      },
      "52" : {
        "Text" : "# basic backtrace works better with release build\n\n# don't bother with advanced features for release\n",
        "Line" : 629,
        "CharPositionInLine" : 8
      },
      "53" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Choose a directory for the generated headers.\n",
        "Line" : 688,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 696,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Assign the license to the runtime component since it must be\n\n# distributed with binary forms of this software.\n",
        "Line" : 698,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# Install the license under the documentation directory.\n",
        "Line" : 706,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Build a list of classes and headers we need to implement the\n\n# selected components.  Initialize with required components.\n",
        "Line" : 712,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Add selected C++ classes.\n",
        "Line" : 725,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Use the corresponding class.\n",
        "Line" : 732,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "# Load component-specific CMake code.\n",
        "Line" : 735,
        "CharPositionInLine" : 4
      },
      "61" : {
        "Text" : "# Add selected C components.\n",
        "Line" : 742,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Use the corresponding header file.\n",
        "Line" : 747,
        "CharPositionInLine" : 4
      },
      "63" : {
        "Text" : "# Load component-specific CMake code.\n",
        "Line" : 750,
        "CharPositionInLine" : 4
      },
      "64" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Build a list of sources for the library based on components that are\n\n# included.\n",
        "Line" : 757,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Add the proper sources for this platform's Process implementation.\n",
        "Line" : 763,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Use the Windows implementation.\n",
        "Line" : 766,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "# Use the UNIX implementation.\n",
        "Line" : 769,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "# Add selected C sources.\n",
        "Line" : 774,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Configure headers of C++ classes and construct the list of sources.\n",
        "Line" : 785,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Add this source to the list of source files for the library.\n",
        "Line" : 787,
        "CharPositionInLine" : 2
      },
      "71" : {
        "Text" : "# Configure the header for this class.\n",
        "Line" : 794,
        "CharPositionInLine" : 2
      },
      "72" : {
        "Text" : "# Create an install target for the header.\n",
        "Line" : 799,
        "CharPositionInLine" : 2
      },
      "73" : {
        "Text" : "# Configure C headers.\n",
        "Line" : 807,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Configure the header into the given directory.\n",
        "Line" : 809,
        "CharPositionInLine" : 2
      },
      "75" : {
        "Text" : "# Create an install target for the header.\n",
        "Line" : 814,
        "CharPositionInLine" : 2
      },
      "76" : {
        "Text" : "# Configure other C++ headers.\n",
        "Line" : 822,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Configure the header into the given directory.\n",
        "Line" : 824,
        "CharPositionInLine" : 2
      },
      "78" : {
        "Text" : "# Create an install target for the header.\n",
        "Line" : 829,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Add the library with the configured name and list of sources.\n",
        "Line" : 837,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# backtrace on FreeBSD is not in libc\n",
        "Line" : 895,
        "CharPositionInLine" : 8
      },
      "81" : {
        "Text" : "# for symbol lookup using dladdr\n",
        "Line" : 900,
        "CharPositionInLine" : 8
      },
      "82" : {
        "Text" : "# Apply user-defined target properties to the library.\n",
        "Line" : 911,
        "CharPositionInLine" : 2
      },
      "83" : {
        "Text" : "# Set up include usage requirement\n",
        "Line" : 917,
        "CharPositionInLine" : 2
      },
      "84" : {
        "Text" : "# Create an install target for the library.\n",
        "Line" : 927,
        "CharPositionInLine" : 2
      },
      "85" : {
        "Text" : "# Add a C-only library if requested.\n",
        "Line" : 936,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Apply user-defined target properties to the library.\n",
        "Line" : 968,
        "CharPositionInLine" : 2
      },
      "87" : {
        "Text" : "# Set up include usage requirement\n",
        "Line" : 974,
        "CharPositionInLine" : 2
      },
      "88" : {
        "Text" : "# Create an install target for the library.\n",
        "Line" : 984,
        "CharPositionInLine" : 2
      },
      "89" : {
        "Text" : "# For building kwsys itself, we use a macro defined on the command\n\n# line to configure the namespace in the C and C++ source files.\n",
        "Line" : 990,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# Disable deprecation warnings for standard C functions.\n",
        "Line" : 994,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# Help enforce the use of wide Windows apis.\n",
        "Line" : 1005,
        "CharPositionInLine" : 2
      },
      "92" : {
        "Text" : "# Activate code in \"String.c\".  See the comment in the source.\n",
        "Line" : 1010,
        "CharPositionInLine" : 2
      },
      "93" : {
        "Text" : "# Set default 8 bit encoding in \"EndcodingC.c\".\n",
        "Line" : 1016,
        "CharPositionInLine" : 2
      },
      "94" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Setup testing if not being built as part of another project.\n",
        "Line" : 1021,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# Compute the location of executables.\n",
        "Line" : 1025,
        "CharPositionInLine" : 4
      },
      "96" : {
        "Text" : "# C tests\n",
        "Line" : 1031,
        "CharPositionInLine" : 4
      },
      "97" : {
        "Text" : "# C++ tests\n",
        "Line" : 1052,
        "CharPositionInLine" : 4
      },
      "98" : {
        "Text" : "# If kwsys contains the DynamicLoader, need extra library\n",
        "Line" : 1098,
        "CharPositionInLine" : 6
      },
      "99" : {
        "Text" : "# Windows tests supported flags.\n",
        "Line" : 1104,
        "CharPositionInLine" : 8
      },
      "100" : {
        "Text" : "# Process tests.\n",
        "Line" : 1176,
        "CharPositionInLine" : 4
      },
      "101" : {
        "Text" : "# Some Apple compilers produce bad optimizations in this source.\n",
        "Line" : 1190,
        "CharPositionInLine" : 4
      },
      "102" : {
        "Text" : "# Tell IBM XL not to warn about our test infinite loop\n",
        "Line" : 1194,
        "CharPositionInLine" : 6
      },
      "103" : {
        "Text" : "# v13.1.[1-6] on Linux ppc64le is clang based and does not accept\n\n# the -qsuppress option, so just suppress all warnings.\n",
        "Line" : 1198,
        "CharPositionInLine" : 8
      },
      "104" : {
        "Text" : "# Test SharedForward\n",
        "Line" : 1210,
        "CharPositionInLine" : 4
      },
      "105" : {
        "Text" : "# Configure some test properties.\n",
        "Line" : 1220,
        "CharPositionInLine" : 4
      },
      "106" : {
        "Text" : "# We expect test to fail\n",
        "Line" : 1222,
        "CharPositionInLine" : 6
      },
      "107" : {
        "Text" : "# Set up ctest custom configuration file.\n",
        "Line" : 1229,
        "CharPositionInLine" : 4
      },
      "108" : {
        "Text" : "# Suppress known consistent failures on buggy systems.\n",
        "Line" : 1233,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 109
    },
    "Utilities/KWSys/vtksys/CTestConfig.cmake" : {
      "ObjectId" : "1339ffc2ddc03af269ea0ba373fcf4e532dec254",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing#kwsys for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Utilities/KWSys/vtksys/kwsysPlatformTests.cmake" : {
      "ObjectId" : "28d3f68e2525428e42ecf9b046a1f612dbdd233b",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing#kwsys for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note that ${var} will be a 0 return value on success.\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# KWSYS_PLATFORM_INFO_TEST(lang var description)\n\n#\n\n# Compile test named by ${var} and store INFO strings extracted from binary.\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We can implement this macro on CMake 2.6 and above.\n",
        "Line" : 171,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Choose a location for the result binary.\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Compile the test binary.\n",
        "Line" : 179,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Parse info strings out of the compiled binary.\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "Utilities/MPI/CMakeLists.txt" : {
      "ObjectId" : "3d20ab8ff68f91db94fdfdfe5c974b64b3bfa8e6",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# On macOS, MPI might have the `-Wl,-flat_namespace` option in it (mpich has\n\n# been observed). This is incompatible with `@rpath` usage, so if we see it,\n\n# just remove it from the link flags of the target.\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "Utilities/MetaIO/CMakeLists.txt" : {
      "ObjectId" : "be0373c566d4776a1cb88184a3e4799bda53580e",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: MetaIO only exports symbols properly on Windows.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Utilities/MetaIO/vtkmetaio/CMakeLists.txt" : {
      "ObjectId" : "ee4486214474772c386b8547a95954ac9302af8b",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# MetaIO\n\n# Copyright 2000-2011 Insight Software Consortium\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Need nsl to resolve gethostbyname on SunOS-5.8\n\n# and socket also\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ADD_SUBDIRECTORY(tests)\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO: Install Copyright.txt\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Utilities/OpenGL/CMakeLists.txt" : {
      "ObjectId" : "faab96465609562a3e7fcc538cb32660764e45aa",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# XXX(nvidia): It seems that on some Ubuntu installations with manually\n\n# installed nVidia drivers, GLX is not found. Investigation is necessary.\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# prefer GLVND\n",
        "Line" : 33,
        "CharPositionInLine" : 34
      },
      "CommentCount" : 2
    },
    "Utilities/OutputWindowProcess/CMakeLists.txt" : {
      "ObjectId" : "5f008aef67a5f07503e45eafe66b838b9edf7a0b",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This project is designed to be used as a custom command or be built\n\n# manually.  See README.txt for build instructions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Utilities/Python/CMakeLists.txt" : {
      "ObjectId" : "632069bc0d0dcdb5416a8078d5e9873547bdad9f",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#[==[.md\n# Python support\n\nThis module provides a single target for using Python within VTK modules.\n\n## Flexible Python libraries\n\nIdeally, the libraries linked against the `vtkPython` module would be flexible\nin the library actually used and it would be provided by the executable loading\nthe Python instead. This can be made to work with hacks currently, but the\nfollowing should be fixed first:\n\n  - A better solution than `-undefined dynamic_lookup` for macOS. VTK has\n    [an issue][VTK dynamic Python lookup issue] filed for this already.\n\n[VTK dynamic Python lookup issue]: https://gitlab.kitware.com/vtk/vtk/issues/17214\n#]==]",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check deprecated versions of Python\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Export location of python module dirs in install and build tree for every vtkpython module to use\n\n# As long as those modules depend on vtkpython, they can retrieve and use these\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# For build systems with configuration types e.g. Xcode/Visual Studio,\n\n# we rely on generator expressions.\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# For static builds, since vtkPythonInterpreter cannot work off the library\n\n# location, but instead has to use the executable location, it needs to know the\n\n# library dir explicitly.\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Default to `ON` if it is possible.\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# We shouldn't do it for static builds and we can't do it without\n\n# `target_link_options`.\n\n# XXX(Linux): Currently, this causes missing symbols on Linux in ParaView.\n\n# More investigation is necessary.\n",
        "Line" : 146,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Apple flags.\n",
        "Line" : 162,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "Utilities/Python/vtkUndefinedSymbolsAllowed.cmake" : {
      "ObjectId" : "dc8f990b99c206f25e9578164c11d5f7f0bee5f9",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Detect if we've run with these flags before or not.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# New (or untested) flags; clear the old result.\n",
        "Line" : 4,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Store that we've tested this hash.\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# If we don't have a result, run its test.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "Utilities/PythonInterpreter/CMakeLists.txt" : {
      "ObjectId" : "4f2da2cf0a022e6ae004cf08fb1577605f791e28",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Utilities/Upgrading/FindWindowsMangledMethods.cmake" : {
      "ObjectId" : "55274ffe0cc88de8f366d3af07c89a16b589202f",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#===========================================================================\n\n#\n\n#  Program:   Visualization Toolkit\n\n#  Module:    FindWindowsMangledMethods.cmake\n\n#\n\n#  Copyright (c) Ken Martin, Will Schroeder, Bill Lorensen\n\n#  All rights reserved.\n\n#  See Copyright.txt or http://www.kitware.com/Copyright.htm for details.\n\n#\n\n#     This software is distributed WITHOUT ANY WARRANTY; without even\n\n#     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR\n\n#     PURPOSE.  See the above copyright notice for more information.\n\n#\n\n#===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# See README.WindowsMangling.txt for the purpose of this script.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Instructions to use this script:\n\n#\n\n# CMake version 2.0.x is required, but 2.0.5 or better is preferred.\n\n#\n\n# Set the current working directory to the top of a source tree and\n\n# run this script with this command:\n\n#\n\n#  cmake -P /path/to/FindWindowsMangledMethods.cmake\n\n#\n\n# A list of potentially mangled methods will be displayed as output.\n\n# Each line will consist of a file name and a partial method\n\n# signature.  Note that Set/Get macros are capable of producing\n\n# methods that might be mangled.  These are also listed.\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# List of symbols that might be mangled.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Construct regular expressions to look for methods or Set/Get macros\n\n# that define names that might be mangled.\n",
        "Line" : 860,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Find all VTK class header files in the current directory and below.\n",
        "Line" : 880,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Look for potentially mangled names.\n",
        "Line" : 883,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Read this class header.\n",
        "Line" : 885,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Look for Set/Get macros defining methods with potentially mangled names.\n",
        "Line" : 888,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Look for methods with potentially mangled names.\n",
        "Line" : 894,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "Utilities/Upgrading/NewPipeConvert.cmake" : {
      "ObjectId" : "d50e3eefcaf1c5a09e47b140521aca9119538fd8",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file  attempts to  convert an  old pipeline filter  to a  new pipeline\n\n# filter. Run it with a  -DCLASS=classname it will use that class name\n\n# for processing\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# read in both files\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#================================================================\n\n# First do the H file\n\n#================================================================\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# convert vtkImageToImageFilter subclasses to subclass off of\n\n# vtkImageAlgorithm, if it is threaded use threaded one\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# polyDataAlgorithm\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#================================================================\n\n# Now do the CXX files\n\n#================================================================\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# add outInfo only once\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# add outInfo only once\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# add some useful include files if needed\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# do not do these replacements multiple times\n",
        "Line" : 181,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "Utilities/Upgrading/NewPipeConvertDataSet.cmake" : {
      "ObjectId" : "f73cee4382af08dc74b7d633239da989647a0e2f",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file  attempts to  convert an  old pipeline filter  to a  new pipeline\n\n# filter. Run it with a  -DCLASS=classname it will use that class name\n\n# for processing\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# read in both files\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#================================================================\n\n# First do the H file\n\n#================================================================\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#================================================================\n\n# Now do the CXX files\n\n#================================================================\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add some useful include files if needed\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# do not do these replacements multiple times\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "Utilities/Upgrading/NewPipeConvertPointSet.cmake" : {
      "ObjectId" : "d345c3cd35f39f091d6fea92d96b59d680ebac0e",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file  attempts to  convert an  old pipeline filter  to a  new pipeline\n\n# filter. Run it with a  -DCLASS=classname it will use that class name\n\n# for processing\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# read in both files\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#================================================================\n\n# First do the H file\n\n#================================================================\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#================================================================\n\n# Now do the CXX files\n\n#================================================================\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add some useful include files if needed\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# do not do these replacements multiple times\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "Utilities/Upgrading/NewPipeConvertPolyData.cmake" : {
      "ObjectId" : "9176cda4b073649100d9c7f6761a5a0d94ae4d9a",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file attempts to convert an old pipeline filter to a new pipeline\n\n# filter. Run it with a  -DCLASS=classname it will use that class name\n\n# for processing\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# read in both files\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#================================================================\n\n# First do the H file\n\n#================================================================\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#================================================================\n\n# Now do the CXX files\n\n#================================================================\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add some useful include files if needed\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# do not do these replacements multiple times\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "Utilities/Upgrading/NewPipeConvertStructuredGrid.cmake" : {
      "ObjectId" : "a53ab81315132affd93b310900f12ebdd71d1805",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file  attempts to  convert an  old pipeline filter  to a  new pipeline\n\n# filter. Run it with a  -DCLASS=classname it will use that class name\n\n# for processing\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# read in both files\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#================================================================\n\n# First do the H file\n\n#================================================================\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#================================================================\n\n# Now do the CXX files\n\n#================================================================\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add some useful include files if needed\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# do not do these replacements multiple times\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "Utilities/Upgrading/NewPipeConvertUnstructuredGrid.cmake" : {
      "ObjectId" : "d458756053e530cc97a48458d66f8903780d20e4",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file attempts to convert an old pipeline filter to a new pipeline\n\n# filter. Run it with a  -DCLASS=classname it will use that class name\n\n# for processing\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# read in both files\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#================================================================\n\n# First do the H file\n\n#================================================================\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#================================================================\n\n# Now do the CXX files\n\n#================================================================\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add some useful include files if needed\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# do not do these replacements multiple times\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "Utilities/octree/CMakeLists.txt" : {
      "ObjectId" : "99f77e698ef261f3118f03085acd609238468a66",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Utilities/vtkTclTest2Py/CMakeLists.txt" : {
      "ObjectId" : "ad1a684f1a2223ae4ea16451a70752d6aa091529",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Views/Context2D/CMakeLists.txt" : {
      "ObjectId" : "546c53b618dabb207ad466eef7d95398f7ddee69",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Views/Core/CMakeLists.txt" : {
      "ObjectId" : "8456ec4b186c0cabc3e0acca1f7e05b5dadb8d61",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Views/Infovis/CMakeLists.txt" : {
      "ObjectId" : "67f8201a486a769e641f97c82ff2c0f357033168",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Views/Infovis/Testing/CMakeLists.txt" : {
      "ObjectId" : "4f00038ec38820859b2451d5dbe10fc0df62d554",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Views/Infovis/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "42ef2513601545c0400efd88c988ab5740455def",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Views/Qt/CMakeLists.txt" : {
      "ObjectId" : "568d4c9b4047cf000eb7e1291f79da4107aefedc",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Views/Qt/Testing/CMakeLists.txt" : {
      "ObjectId" : "35f9732a938a3b073bdf94e86007916ffcd31b49",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Views/Qt/Testing/Cxx/CMakeLists.txt" : {
      "ObjectId" : "c5055853c638802841dd67d280bb031504c854d3",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Web/Core/CMakeLists.txt" : {
      "ObjectId" : "e34ea43aa8c64493bb7132f866764db31f66766a",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Web/Core/Testing/CMakeLists.txt" : {
      "ObjectId" : "e33473e93ee3d273ee88756b444dcffb560ec072",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Web/Core/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "17e827d3439c2217c098069fb559f91a008ca778",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Web/Python/CMakeLists.txt" : {
      "ObjectId" : "970c9b2ee16a2a2da1596d05703a9943dd854998",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Web/Python/Testing/CMakeLists.txt" : {
      "ObjectId" : "e33473e93ee3d273ee88756b444dcffb560ec072",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Web/Python/Testing/Python/CMakeLists.txt" : {
      "ObjectId" : "44d6482b51d20a1f57ed117db15626e83e085d7c",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Web/WebGLExporter/CMakeLists.txt" : {
      "ObjectId" : "d913c1ac024a6083adb08ac0801b2a8343e95492",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The exporter will behave as any other ParaView exporter (VRML, X3D, POV...)\n\n# but will generate several types of files. The main one is the scene graph\n\n# description define as a JSON object with all the corresponding binary+base64\n\n# pieces that come along with it. But also with it come a single standalone HTML\n\n# file that can directly be used to see the data in a browser without any plugin.\n\n#\n\n# This code base should be cleaned up to follow VTK standard and even be\n\n# integrated into VTK itself. But for now it is provided as is.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Wrapping/Java/CMakeLists.txt" : {
      "ObjectId" : "c922f565f645fa519e77c7e9c3a8324964cf8d80",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add the option for build the JOGL component to VTK.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: Make FindJava.cmake use imported targets.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#list(APPEND java_class_files\n\n#  \"${vtk_java_class_output}/${java_file}.class\")\n",
        "Line" : 127,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Replace the last comma with a semicolon.\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set the javac source version\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#install(\n\n#  FILES       \"${vtk_jar_file}\"\n\n#  DESTINATION \"${VTK_INSTALL_JAVA_DIR}\"\n\n#  COMPONENT   \"runtime\")\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add the option to package VTK for custom Java packaging\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Make sure we embed the runtime libraries when packaging the Java binaries\n",
        "Line" : 235,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# install system runtimes.\n",
        "Line" : 237,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# javac runs out memory on Mac so increase heapsize\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Post-Install script for Custom Java Packaging\n\n# This install rule MUST stay at the bottom of that CMakeLists file as\n\n# it has to be the last install rule that get executed\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "Wrapping/Java/Testing/CMakeLists.txt" : {
      "ObjectId" : "3d97919837e55c8141a7a61bb2364855c05915bd",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Wrapping/Java/Testing/Java/CMakeLists.txt" : {
      "ObjectId" : "ac5625758a7b41e1945db1c1f376b620531af72f",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Compile Java Tests\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "Wrapping/Python/CMakeLists.txt" : {
      "ObjectId" : "dd38f68eb88c8e7ddf1a148ae3c2f6f35e98724b",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Wrapping/PythonCore/CMakeLists.txt" : {
      "ObjectId" : "77339e3d67b9115237d69d21523301c969132e33",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Wrapping/Tools/CMakeLists.txt" : {
      "ObjectId" : "424a8c8eb697e913393f6eeae37921242084654f",
      "LastModified" : "2019-04-17T17:50:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Allow the user to customize their build with some local options\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a hard-coded path because `vtkType.h` from `VTK::CommonCore` is\n\n# used for VTK's integer types. However, it is not a public dependency. In\n\n# order for the compile tools project to be as minimal as possible, the\n\n# `VTK::CommonCore` target should also not be created.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 791,
    "CMAKESOURCE" : 2,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 7441
}