{
  "Repository" : "3500581",
  "Revision" : "HEAD",
  "ObjectId" : "25fbab65c2353b787246f79eacdb9c9ed6fcccab",
  "CommitTime" : "2019-04-12T15:58:39Z",
  "Files" : {
    "build.xml" : {
      "ObjectId" : "6c7d7f1564aa39879398b5a2aefc2756b4033121",
      "LastModified" : "2018-04-11T21:13:02Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n  Requires maven-ant-tasks to maintain this project's dependencies in Maven's\n  pom.xml only and have the latter fetch them when necessary so that we don't\n  have to commit dependent binaries in this project's repository.\n\n  To install maven-ant-tasks locally, run the following once:\n  mvn dependency:get -DartifactId=maven-ant-tasks -DgroupId=org.apache.maven -Dversion=2.1.3\n\n  Then invoke Ant with the -lib command line argument pointing to the\n  directory which contains maven-ant-tasks as follows:\n  ant -lib ~/.m2/repository/org/apache/maven/maven-ant-tasks/2.1.3 [target]\n  ",
        "Line" : 14,
        "CharPositionInLine" : 6
      },
      "1" : {
        "Text" : " Import JNI build xml ",
        "Line" : 47,
        "CharPositionInLine" : 32
      },
      "2" : {
        "Text" : " Import debian build xml ",
        "Line" : 50,
        "CharPositionInLine" : 35
      },
      "3" : {
        "Text" : " Use this target to build with CryptoBenchmark.java ",
        "Line" : 104,
        "CharPositionInLine" : 62
      },
      "4" : {
        "Text" : "\n    Run a libjitsi example from the org.jitsi.examples package by name. The name\n    of the example to run is to be specified as the value of the Ant property\n    'run.example.name'. Command-line arguments may be specified to the example\n    to be run via the Ant property 'run.example.arg.line'.\n  ",
        "Line" : 158,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : " JAVADOC ",
        "Line" : 178,
        "CharPositionInLine" : 19
      },
      "6" : {
        "Text" : " build all binaries and the libjitsi.jar ",
        "Line" : 208,
        "CharPositionInLine" : 51
      },
      "7" : {
        "Text" : " Run the tests",
        "Line" : 249,
        "CharPositionInLine" : 24
      },
      "CommentCount" : 8
    },
    "pom.xml" : {
      "ObjectId" : "036f9423b82fb8e062af583d1bbfffc98a0d65a8",
      "LastModified" : "2019-04-05T17:46:01Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " org.jitsi ",
        "Line" : 46,
        "CharPositionInLine" : 23
      },
      "1" : {
        "Text" : " https://mvnrepository.com/artifact/org.jetbrains/annotations ",
        "Line" : 83,
        "CharPositionInLine" : 74
      },
      "2" : {
        "Text" : " test ",
        "Line" : 89,
        "CharPositionInLine" : 18
      },
      "3" : {
        "Text" : " https://mvnrepository.com/artifact/org.powermock/powermock-core ",
        "Line" : 102,
        "CharPositionInLine" : 81
      },
      "4" : {
        "Text" : " https://mvnrepository.com/artifact/org.powermock/powermock-api-easymock ",
        "Line" : 109,
        "CharPositionInLine" : 85
      },
      "5" : {
        "Text" : " https://mvnrepository.com/artifact/org.powermock/powermock-module-junit4 ",
        "Line" : 116,
        "CharPositionInLine" : 86
      },
      "6" : {
        "Text" : " https://mvnrepository.com/artifact/io.pkts/pkts-core ",
        "Line" : 123,
        "CharPositionInLine" : 66
      },
      "7" : {
        "Text" : " jitsi-lgpl-dependencies ",
        "Line" : 230,
        "CharPositionInLine" : 43
      },
      "CommentCount" : 8
    },
    "src/native/build.xml" : {
      "ObjectId" : "3930ef5312ad6736392e7ffe8111547d7f6b7576",
      "LastModified" : "2018-04-11T21:13:02Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " additionnal property ",
        "Line" : 4,
        "CharPositionInLine" : 32
      },
      "1" : {
        "Text" : " load cpptasks jar to have <cc /> tag ",
        "Line" : 7,
        "CharPositionInLine" : 48
      },
      "2" : {
        "Text" : " load cpptasks jar ",
        "Line" : 9,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : " windows specific properties ",
        "Line" : 15,
        "CharPositionInLine" : 39
      },
      "4" : {
        "Text" : " linux specific properties ",
        "Line" : 19,
        "CharPositionInLine" : 37
      },
      "5" : {
        "Text" : " solaris specific properties ",
        "Line" : 23,
        "CharPositionInLine" : 39
      },
      "6" : {
        "Text" : " mac specific properties ",
        "Line" : 31,
        "CharPositionInLine" : 35
      },
      "7" : {
        "Text" : " FreeBSD specific properties ",
        "Line" : 35,
        "CharPositionInLine" : 39
      },
      "8" : {
        "Text" : " Unix specific properties ",
        "Line" : 39,
        "CharPositionInLine" : 36
      },
      "9" : {
        "Text" : "\n    Cross compilation. It is mainly used on Linux to cross-compile 32-bit\n    binaries on a 64-bit host. It is also used to compile ffmpeg on Mac OS X for\n    each architecture before creating an universal binary with the lipo tool.\n  ",
        "Line" : 79,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : " Mac OS X only ",
        "Line" : 88,
        "CharPositionInLine" : 25
      },
      "11" : {
        "Text" : " initialize destination directory ",
        "Line" : 93,
        "CharPositionInLine" : 44
      },
      "12" : {
        "Text" : " The path to the dpkg-buildpackage tool ",
        "Line" : 140,
        "CharPositionInLine" : 50
      },
      "13" : {
        "Text" : " The path to the dh_testdir tool ",
        "Line" : 142,
        "CharPositionInLine" : 43
      },
      "14" : {
        "Text" : "\n  <echo message=\"ffmpeg library: ${ffmpeg}\" />\n  <echo message=\"x264 library: ${x264}\" />\n  <echo message=\"lame library: ${lame}\" />\n  <echo message=\"portaudio library: ${portaudio}\" />\n  <echo message=\"speex library: ${speex}\" />\n  <echo message=\"Install directory ${native_install_dir}\" />\n  <echo message=\"arch: ${arch}\" />\n  ",
        "Line" : 160,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : " compile jnscreencapture library ",
        "Line" : 166,
        "CharPositionInLine" : 43
      },
      "16" : {
        "Text" : " common compiler flags ",
        "Line" : 170,
        "CharPositionInLine" : 37
      },
      "17" : {
        "Text" : " Linux specific flags ",
        "Line" : 178,
        "CharPositionInLine" : 36
      },
      "18" : {
        "Text" : " Mac OS X specific flags ",
        "Line" : 191,
        "CharPositionInLine" : 39
      },
      "19" : {
        "Text" : "compilerarg value=\"-arch\" if=\"is.running.macos\" />\n      <compilerarg value=\"i386\" if=\"is.running.macos\" /",
        "Line" : 196,
        "CharPositionInLine" : 59
      },
      "20" : {
        "Text" : "linkerarg value=\"-arch\" if=\"is.running.macos\" />\n      <linkerarg value=\"i386\" if=\"is.running.macos\" /",
        "Line" : 207,
        "CharPositionInLine" : 57
      },
      "21" : {
        "Text" : " Windows specific flags ",
        "Line" : 211,
        "CharPositionInLine" : 38
      },
      "22" : {
        "Text" : " compile jnawtrenderer library ",
        "Line" : 225,
        "CharPositionInLine" : 41
      },
      "23" : {
        "Text" : " common compiler flags ",
        "Line" : 229,
        "CharPositionInLine" : 37
      },
      "24" : {
        "Text" : " Linux-specific flags ",
        "Line" : 243,
        "CharPositionInLine" : 36
      },
      "25" : {
        "Text" : " some debian specific ",
        "Line" : 245,
        "CharPositionInLine" : 36
      },
      "26" : {
        "Text" : " Mac OS X-specific flags ",
        "Line" : 261,
        "CharPositionInLine" : 39
      },
      "27" : {
        "Text" : " Windows-specific flags ",
        "Line" : 288,
        "CharPositionInLine" : 38
      },
      "28" : {
        "Text" : " compile ffmpeg library ",
        "Line" : 303,
        "CharPositionInLine" : 34
      },
      "29" : {
        "Text" : " common compiler flags ",
        "Line" : 312,
        "CharPositionInLine" : 37
      },
      "30" : {
        "Text" : "\n        Depending on the way that lame is built, libmp3lame.a may be in\n        libmp3lame/ or libmp3lame/.libs/.\n      ",
        "Line" : 331,
        "CharPositionInLine" : 10
      },
      "31" : {
        "Text" : "\n        Static libraries MUST be at the end otherwise they will not be added to\n        the shared library.\n      ",
        "Line" : 341,
        "CharPositionInLine" : 10
      },
      "32" : {
        "Text" : " Unix specific flags ",
        "Line" : 352,
        "CharPositionInLine" : 35
      },
      "33" : {
        "Text" : " Mac OS X specific flags ",
        "Line" : 359,
        "CharPositionInLine" : 39
      },
      "34" : {
        "Text" : " Windows specific flags ",
        "Line" : 372,
        "CharPositionInLine" : 38
      },
      "35" : {
        "Text" : " compile jnwasapi library ",
        "Line" : 389,
        "CharPositionInLine" : 36
      },
      "36" : {
        "Text" : " compile jndirectshow library ",
        "Line" : 426,
        "CharPositionInLine" : 42
      },
      "37" : {
        "Text" : " compile jnportaudio library ",
        "Line" : 464,
        "CharPositionInLine" : 39
      },
      "38" : {
        "Text" : " Common flags ",
        "Line" : 496,
        "CharPositionInLine" : 28
      },
      "39" : {
        "Text" : " Linux-specific flags ",
        "Line" : 513,
        "CharPositionInLine" : 36
      },
      "40" : {
        "Text" : " Static libraries MUST be at the end; otherwise, they will not be\n           added to shared library.\n      ",
        "Line" : 520,
        "CharPositionInLine" : 10
      },
      "41" : {
        "Text" : " OS X-specific flags ",
        "Line" : 531,
        "CharPositionInLine" : 35
      },
      "42" : {
        "Text" : " Windows-specific flags ",
        "Line" : 559,
        "CharPositionInLine" : 38
      },
      "43" : {
        "Text" : " compile jnspeex library ",
        "Line" : 581,
        "CharPositionInLine" : 35
      },
      "44" : {
        "Text" : " common compiler flags ",
        "Line" : 611,
        "CharPositionInLine" : 37
      },
      "45" : {
        "Text" : " Linux specific flags ",
        "Line" : 620,
        "CharPositionInLine" : 36
      },
      "46" : {
        "Text" : " static libraries MUST be at the end otherwise\n      they will not be added to shared library\n      ",
        "Line" : 631,
        "CharPositionInLine" : 10
      },
      "47" : {
        "Text" : " Mac OS X specific flags ",
        "Line" : 641,
        "CharPositionInLine" : 39
      },
      "48" : {
        "Text" : " Windows specific flags ",
        "Line" : 659,
        "CharPositionInLine" : 38
      },
      "49" : {
        "Text" : " compile opus\n        linux binaries are linked to the distribution binary (call ant -Dopus=)\n        while other os opus is added to shared library, to avoid\n        additional binaries\n        macosx and windows currently not tested.\n    ",
        "Line" : 680,
        "CharPositionInLine" : 8
      },
      "50" : {
        "Text" : " common compiler flags ",
        "Line" : 688,
        "CharPositionInLine" : 43
      },
      "51" : {
        "Text" : " Unix specific flags ",
        "Line" : 700,
        "CharPositionInLine" : 41
      },
      "52" : {
        "Text" : " static libraries MUST be at the end otherwise\n                they will not be added to shared library\n            ",
        "Line" : 712,
        "CharPositionInLine" : 16
      },
      "53" : {
        "Text" : "<linkerarg value=\"-Wl,-Bstatic\" location=\"end\" if=\"is.running.linux\" />",
        "Line" : 713,
        "CharPositionInLine" : 91
      },
      "54" : {
        "Text" : "<linkerarg value=\"-Wl,-Bdynamic\" location=\"end\" if=\"is.running.linux\" />",
        "Line" : 715,
        "CharPositionInLine" : 92
      },
      "55" : {
        "Text" : " Mac OS X specific flags ",
        "Line" : 717,
        "CharPositionInLine" : 45
      },
      "56" : {
        "Text" : " Windows specific flags ",
        "Line" : 738,
        "CharPositionInLine" : 44
      },
      "57" : {
        "Text" : " opus libraries cannot be built as universal binaries\n               so you have to setup and compile opus for each architecture separately.\n               Run this ant script with:\n               -Darch=32 (rename libjnopus.jnilib to libjnopus.jnilib-32)\n               -Darch=64 (rename libjnopus.jnilib to libjnopus.jnilib-64)\n\n               Finally create the universal binary with:\n               lipo -create libjnopus.jnilib-* -output libjnopus.jnilib\n               strip libjnopus.jnilib\n          ",
        "Line" : 759,
        "CharPositionInLine" : 14
      },
      "58" : {
        "Text" : " see src/native/vpx/README.md ",
        "Line" : 763,
        "CharPositionInLine" : 42
      },
      "59" : {
        "Text" : " common compiler flags ",
        "Line" : 774,
        "CharPositionInLine" : 43
      },
      "60" : {
        "Text" : " java includes ",
        "Line" : 781,
        "CharPositionInLine" : 35
      },
      "61" : {
        "Text" : " libvpx includes ",
        "Line" : 785,
        "CharPositionInLine" : 37
      },
      "62" : {
        "Text" : " architecture flags ",
        "Line" : 789,
        "CharPositionInLine" : 40
      },
      "63" : {
        "Text" : " linker flags ",
        "Line" : 793,
        "CharPositionInLine" : 34
      },
      "64" : {
        "Text" : " see src/native/vpx/README.md ",
        "Line" : 809,
        "CharPositionInLine" : 42
      },
      "65" : {
        "Text" : " TODO: strip ",
        "Line" : 811,
        "CharPositionInLine" : 29
      },
      "66" : {
        "Text" : " common compiler flags ",
        "Line" : 819,
        "CharPositionInLine" : 43
      },
      "67" : {
        "Text" : " java includes ",
        "Line" : 825,
        "CharPositionInLine" : 35
      },
      "68" : {
        "Text" : "<compilerarg value=\"-I/Applications/Xcode.app//Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk/System/Library/Frameworks/JavaVM.framework/Versions/A/Headers/\" if=\"is.running.macos\" /> ",
        "Line" : 831,
        "CharPositionInLine" : 231
      },
      "69" : {
        "Text" : " libvpx includes ",
        "Line" : 833,
        "CharPositionInLine" : 37
      },
      "70" : {
        "Text" : " architecture flags ",
        "Line" : 837,
        "CharPositionInLine" : 40
      },
      "71" : {
        "Text" : " Mac OS X specific flags ",
        "Line" : 845,
        "CharPositionInLine" : 45
      },
      "72" : {
        "Text" : " linker flags ",
        "Line" : 849,
        "CharPositionInLine" : 34
      },
      "73" : {
        "Text" : " common ",
        "Line" : 850,
        "CharPositionInLine" : 28
      },
      "74" : {
        "Text" : " architecture flags ",
        "Line" : 855,
        "CharPositionInLine" : 40
      },
      "75" : {
        "Text" : " Mac OS X specific flags ",
        "Line" : 863,
        "CharPositionInLine" : 45
      },
      "76" : {
        "Text" : " Windows specific flags ",
        "Line" : 867,
        "CharPositionInLine" : 44
      },
      "77" : {
        "Text" : " Unix flags ",
        "Line" : 873,
        "CharPositionInLine" : 32
      },
      "78" : {
        "Text" : " Linux ",
        "Line" : 876,
        "CharPositionInLine" : 27
      },
      "79" : {
        "Text" : " Input files ",
        "Line" : 883,
        "CharPositionInLine" : 33
      },
      "80" : {
        "Text" : " compile jnvideo4linux2 library ",
        "Line" : 891,
        "CharPositionInLine" : 42
      },
      "81" : {
        "Text" : " compile jnwincoreaudio library for Windows Vista, 7 and 8 (32-bit/64-bit)\n    ",
        "Line" : 914,
        "CharPositionInLine" : 8
      },
      "82" : {
        "Text" : " compile jnmaccoreaudio library for Mac OS X (32-bit/64-bit) ",
        "Line" : 949,
        "CharPositionInLine" : 71
      },
      "83" : {
        "Text" : "\n    For mac, and linux (for mac export MACOSX_DEPLOYMENT_TARGET=10.6)\n    From http://www.webrtc.org/reference/getting-started\n    (you need to install the requirements\n    https://sites.google.com/a/chromium.org/dev/developers/how-tos/install-depot-tools\n    git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git\n    export PATH=\"$PATH\":`pwd`/depot_tools)\n    gclient config http://webrtc.googlecode.com/svn/trunk\n    gclient sync - -force\n    cd libjitsi\n    ant webrtc-aec -Dwebrtc.src=$HOME/dev/webrtc/\n    ",
        "Line" : 996,
        "CharPositionInLine" : 8
      },
      "84" : {
        "Text" : "compilerarg value=\"-DWEBRTC_AEC_DEBUG_DUMP\" /",
        "Line" : 1006,
        "CharPositionInLine" : 59
      },
      "85" : {
        "Text" : "compilerarg value=\"-xc++\" /",
        "Line" : 1010,
        "CharPositionInLine" : 41
      },
      "86" : {
        "Text" : " compile jnquicktime library for Mac OS X (32-bit/64-bit/ppc) ",
        "Line" : 1227,
        "CharPositionInLine" : 72
      },
      "87" : {
        "Text" : " compile pulseaudio library\n        gcc -D_JNI_IMPLEMENTATION_ -fPIC -I/usr/lib/jvm/java-1.5.0-sun/include\n            -I/usr/lib/jvm/java-1.5.0-sun/include/linux -O2 -Wall\n            org_jitsi_impl_neomedia_pulseaudio_PA.c `pkg-config - -cflags libpulse`\n            -shared -o libjnpulseaudio.so -Wl,- -no-undefined `pkg-config - -libs libpulse`\n            -ldl && strip -x libjnpulseaudio.so\n    ",
        "Line" : 1269,
        "CharPositionInLine" : 8
      },
      "88" : {
        "Text" : " compile sctp\n    usrsctp - compile steps in README file",
        "Line" : 1304,
        "CharPositionInLine" : 46
      },
      "89" : {
        "Text" : "<compilerarg value=\"/LD\" />",
        "Line" : 1360,
        "CharPositionInLine" : 47
      },
      "90" : {
        "Text" : "\n     Compile on x86_64 macosx\n     1. compile usrsctp and sctp will produce lib/native/mac/libjnsctp.jnilib-64\n     2. compile usrsctp for i386:\n        - export CC=\"gcc -arch i386\"\n        - steps from readme and use the following configure\n            (removing space before host param, not allowed in comments)\n          ./configure - -host=i386-darwin\n     3. compile sctp for i386 using -Darch=32 will produce\n         lib/native/mac/libjnsctp.jnilib-32\n     4. combine both binaries in one:\n        lipo -create libjnsctp.jnilib-* -output libjnsctp.jnilib\n    ",
        "Line" : 1391,
        "CharPositionInLine" : 8
      },
      "91" : {
        "Text" : " Cleanup object files and shared libraries ",
        "Line" : 1477,
        "CharPositionInLine" : 53
      },
      "92" : {
        "Text" : " Help, print useful targets ",
        "Line" : 1486,
        "CharPositionInLine" : 38
      },
      "CommentCount" : 93
    }
  },
  "FileTypes" : {
    "ANT" : 2,
    "MAVEN" : 1
  },
  "ElapsedTime" : 2957
}