{
  "Repository" : "47730857",
  "Revision" : "HEAD",
  "ObjectId" : "267bed869a0b35414526b5c393fc2586603ee173",
  "CommitTime" : "2019-04-18T10:20:43Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "9114e20e6e8a603ccbb64a8eb4647e6dc949a819",
      "LastModified" : "2018-10-22T15:35:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#head file path\r\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#devel-api\r\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#internal\r\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#public-api\r\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add link library  \r\n\n#TARGET_LINK_LIBRARIES(${FS_BUILD_BINARY_PREFIX}sqrt ${LIBRARIES})\r\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "automated-tests/src/CMakeLists.txt" : {
      "ObjectId" : "e4f0a2b294114aba963b95a6054874e999131b60",
      "LastModified" : "2014-04-16T15:46:46Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "automated-tests/src/dali-toolkit-internal/CMakeLists.txt" : {
      "ObjectId" : "5e2e9ed0e4a28c454dca0929f380667015093bd2",
      "LastModified" : "2019-03-01T14:35:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# List of test case sources (Only these get parsed for test cases)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Append list of test harness files (Won't get parsed for test cases)\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "automated-tests/src/dali-toolkit-styling/CMakeLists.txt" : {
      "ObjectId" : "bc765c7d4ab7dae3143f911a639abd7f2e0ec407",
      "LastModified" : "2019-03-01T14:35:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# List of test case sources (Only these get parsed for test cases)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Append list of test harness files (Won't get parsed for test cases)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "automated-tests/src/dali-toolkit-third-party/CMakeLists.txt" : {
      "ObjectId" : "6f50e828f8bdc68c3d48e87ae056e2e7c553a297",
      "LastModified" : "2019-03-01T14:35:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# List of test case sources (Only these get parsed for test cases)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Append list of test harness files (Won't get parsed for test cases)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Locate GTest\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#ADD_COMPILE_OPTIONS( -O0 -ggdb --coverage -Wall -Werror )\n\n# ADD_COMPILE_OPTIONS( ${${CAPI_LIB}_CFLAGS_OTHER} )\n\n# This works for a homogenous C++ project, but not for mixed C++/C project\n\n# On CMake >= 3.3, could use\n\n# ADD_COMPILE_OPTIONS( \"$<$<COMPILE_LANGUAGE:CXX>:${${CAPI_LIB}_CFLAGS_OTHER}>\" )\n\n# However, we need to support CMake 2.8, so instead, fall back to setting the CXX_FLAGS directly:\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "automated-tests/src/dali-toolkit/CMakeLists.txt" : {
      "ObjectId" : "678a4ae489ef35d82ec13318d1ecac65dc212be2",
      "LastModified" : "2019-03-01T14:35:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# List of test case sources (Only these get parsed for test cases)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Append list of test harness files (Won't get parsed for test cases)\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "build/tizen/Makefile.am" : {
      "ObjectId" : "164911298f98f6cc85c0fd768f79658d36f50804",
      "LastModified" : "2017-09-14T14:36:07Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2014 Samsung Electronics Co., Ltd.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# perform documentation last, so it doesn't prevent code from building if there's an error\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# From lcov version 1.10 onwards, branch coverage is off by default and earlier versions do not support the rc option\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "build/tizen/dali-toolkit/Makefile.am" : {
      "ObjectId" : "53a4788d8d54f0f14aebec3830e4b37d280b1b02",
      "LastModified" : "2018-12-06T11:30:03Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2018 Samsung Electronics Co., Ltd.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build the Dali Toolkit library\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The library\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#rename\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#rename\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Install headers\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# devel api\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# devel headers\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# public api source\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# public api headers\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# package doxygen file (contains doxygen grouping information)\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "build/tizen/docs/Makefile.am" : {
      "ObjectId" : "776a2750ada4ae2f2f8f4676c40a79a9f7675033",
      "LastModified" : "2016-11-30T09:17:33Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Build JavaScript API documentation using yuidoc ( Yahoo JavaScript Documentation Tool )\n\n# We first test yuidoc exists, then change in to the dali-script-v8 docs directory and run yuidoc\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "build/tizen/plugins/csharp/Makefile.am" : {
      "ObjectId" : "3e4e246d0dbb9323e5fd2e09881ad6ba2060481c",
      "LastModified" : "2017-03-30T10:32:22Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 Samsung Electronics Co., Ltd.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# http://www.apache.org/licenses/LICENSE-2.0\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\tmcs -nologo -target:library -out:$(dali_swig_dir)/NDali.dll $(dali_swig_dir)/automatic/csharp/*.cs $(dali_swig_dir)/manual/csharp/*.cs\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "build/tizen/plugins/javascript/Makefile.am" : {
      "ObjectId" : "0bb1082a5f9ba52a641637c77cc4ed133c347182",
      "LastModified" : "2016-11-30T09:17:33Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (c) 2015 Samsung Electronics Co., Ltd.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n# http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build the Dali Toolkit library\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# force the source code to include the directory the wrapper file is in\n\n# e.g. actors/actor-api.h to copy the same include style as dali-core\n\n# The reason for including toolkit paths directly instead of just the\n\n# install path for dali-toolkit.h, is dali-toolkit.h is not installed yet.\n\n# It won't be installed until the rpm is installed, and unfortunately the\n\n# plugin is part of the same rpm\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "docs/content/example-code/CMakeLists.txt" : {
      "ObjectId" : "133ab593f9c7b23ef4c18809ea3d58883f4416ee",
      "LastModified" : "2016-11-30T09:17:33Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "node-addon/build/tizen/CMakeLists.txt" : {
      "ObjectId" : "a5925af3becb24072f86cf9acd39bdcf79df7f87",
      "LastModified" : "2016-11-30T09:17:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Guide to build for GBS\n\n# Build dali-toolkit with gbs, the dali-addon will be built automatically\n\n#\n\n# To build for Desktop\n\n# option 1 (easy):  in node-addon folder type\n\n#\n\n# $ node-gyp build\n\n#\n\n# option 2: use cmake\n\n# This relies on Node source being downloaded ( don't forget the dot)\n\n#\n\n# cmake -DDesktopNodePath:String=/home/Downloads/node-v0.12.4 .\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is just pulling out dali / dali-toolkit header locations from pkg-config\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the include paths to include dali, dali-core, node, v8 and headers for dali-addon\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This sets up the linker flags for dali-core/ adaptor and toolkit\n\n# we don't need any flags for node / v8 as we're running inside node and v8 is statically linked to it\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ${CMAKE_INSTALL_PREFIX}\n\n#################################### install #####################################\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    }
  },
  "FileTypes" : {
    "CMAKE" : 8,
    "AUTOMAKE" : 5
  },
  "ElapsedTime" : 4120
}