{
  "Repository" : "4465903",
  "Revision" : "HEAD",
  "ObjectId" : "86bfc3d6a4091c791a5893adb4d8eb12ace6cc30",
  "CommitTime" : "2019-04-09T23:45:51Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "11492c11c639695281aff514d633f1b8c7015562",
      "LastModified" : "2019-01-19T21:58:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Note: Release builds are treated as production builds\n\n# and will take a lot longer to build due to link-time optimizations.\n\n#\n\n# Unless you are indeed releasing a binary, use Debug or RelWithDebInfo.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sanity logs.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Determine the used compiler.\n\n# In case of MSVC, CMake sets the MSVC variable to ON on its own.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Important note:\n\n# MSVC build is currently hardcoded to be statically linked.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Unlike makefiles, architecture is determined by the generator used.\n",
        "Line" : 59,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "##################################################\n\n### ALL CUSTOMIZABLE BUILD SWITCHES BEGIN HERE ###\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If it is your first time building Hypersomnia and you get some errors,\n\n# you might want to try turning HYPERSOMNIA_BARE on to build the minimal possible working Hypersomnia runtime.\n\n# Then, try to work from there.\n\n# The game should still run, even not having these features, although obviously, you won't see or hear anything.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# In the future, the switches will also differ depending on whether the target application is a client or a server.\n\n# If you're a developer, you might also want to disable some functionality to have faster builds for quicker iteration.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## These variables are used by the archiver to know which files are to be included with the executable,\n\n## and also for Visual Studio to properly set the working directory.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Application packaging switches.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Hardcoded, relative paths for directories that the executable might use.\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# From where will the game pull its official resources.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Where the game will save logs.\n\n# Deleting this folder will have no effect on the game.\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Where the game will save neon maps and other regenerable content.\n\n# Deleting this folder will have no effect on the game, except that some resources might take time to generate again.\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Where the game will save untitled works from editor, gui layouts, user config etc.\n\n# Deleting this folder might possibly result in data loss, e.g. the untitled works and some user settings.\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## Building switches for functionality using 3rdparty libraries.\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Switches for functionality originating from the Hypersomnia codebase.\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Build optimization switches.\n\n## These may speed up build times.\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Other self-explanatory static allocation switches. Possible values are one or zero.\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# If this variable is nonzero, the cosmos will use a statically allocated number\n\n# of entities, drastically improving access performance. Might be very useful for a sever application.\n\n# Pros: \n\n# \t+ Dereferencing entities with speed of light\n\n# Cons:\n\n#\t- Compilation might be longer due to component includes needed everywhere\n\n#\t- Can't tweak maximum number of entities at runtime\n\n#\t- Even empty game worlds occupy as much space as those filled to the maximum\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# If this variable is nonzero, the cosmos common will use a statically allocated number\n\n# of entity flavours, drastically improving access performance. Might be very useful for a sever application.\n\n# Pros: \n\n# \t+ Operating on entities with speed of light\n\n# Cons:\n\n#\t- Compilation might be longer due to component includes needed everywhere\n\n#\t- Can't tweak maximum number of entity flavours at runtime\n\n#\t- Even empty game worlds occupy as much space as those filled to the maximum\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Internal build flags for programmers' use. \n\n## Don't set them manually without a good reason.\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "### ALL CUSTOMIZABLE BUILD SWITCHES END HERE ###\n\n################################################\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Here we automatically adjust some of the switches,\n\n# based on what was set by the user.\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Honestly I don't know why we need that,\n\n# there is some weird CMAKE_AR-NOTFOUND error without this line.\n",
        "Line" : 181,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "# Set different default options for UNIX:\n\n# Disable those that are not yet supported\n",
        "Line" : 199,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "#####################################################\n\n### SPECIFICATION OF ALL SOURCE FILES BEGINS HERE ###\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# We will be building Lua manually as there is no up-to-date CMakeLists for Lua.\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# We will be building Box2D manually, as it is hacked to the utmost.\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Test scene sources whose inclusion is conditional on the value of BUILD_TEST_SCENES.\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Order is important inasmuch as multi-threaded builds are concerned.\n\n# Put intensive cpps to the very beginning.\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# These cpps will be included as the first to speed up multithreaded build times.\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# This should be the first one to build to catch errors early\n",
        "Line" : 336,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# The rest of 3rdparty libraries with minimal amount of source files.\n",
        "Line" : 646,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# These headers will be input to the Introspector-generator.\n",
        "Line" : 660,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Source files that are included conditionally.\n\n# Conditional inclusion of source files happens here.\n",
        "Line" : 676,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# natvis files for easier debugging in Visual Studio.\n",
        "Line" : 718,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# \"src/3rdparty/yojimbo/tlsf/tlsf.h\"\n\n# \"src/3rdparty/yojimbo/yojimbo.h\"\n\n# \"src/3rdparty/yojimbo/netcode.io/netcode.h\"\n\n# \"src/3rdparty/yojimbo/reliable.io/reliable.h\" \n",
        "Line" : 742,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "# Project resource files, e.g. an icon.\n",
        "Line" : 748,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "### SPECIFICATION OF ALL SOURCE FILES END HERE ###\n\n##################################################\n",
        "Line" : 758,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# We arrange the directories for the generated sources paths.\n",
        "Line" : 765,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Before Hypersomnia builds,\n\n# Introspector-generator must first generate the type information.\n",
        "Line" : 776,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# We build the generator of type information required for introspection.\n",
        "Line" : 779,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# We prepare a correct input configuration file for Introspector-generator.\n",
        "Line" : 783,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# CMake separates elements of lists with a semicolon, but the Introspector-generator accepts lists separated by newlines.\n\n# We must correct that.\n",
        "Line" : 785,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# The correct input configuration file shall contain paths to all headers for whom the generator should create introspectors,\n\n# and should also contain the correct output file path.\n\n# Thus, that call should substitute:\n\n# HYPERSOMNIA_HEADERS_WITH_INTROSPECTED_CLASSES_NEWLINE_SEPARATED \n\n# and GENERATED_SOURCES_PATH for the output file path.\n",
        "Line" : 796,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Before Hypersomnia builds,\n\n# version_file_generator must first query git for information about the most recent commit.\n",
        "Line" : 820,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# So from now on, we will be using Git to obtain some information about commits.\n",
        "Line" : 831,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# We add headers to aid IntelliSense.\n",
        "Line" : 881,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# We configure include directories for Hypersomnia codebase.\n",
        "Line" : 888,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# We configure additional flags for the compiler.\n",
        "Line" : 906,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Architecture switches\n",
        "Line" : 909,
        "CharPositionInLine" : 1
      },
      "52" : {
        "Text" : "# Generate debug information (we don't care about C libraries at this point)\n",
        "Line" : 922,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# -Wall and -Wextra cover everything already\n",
        "Line" : 932,
        "CharPositionInLine" : 1
      },
      "54" : {
        "Text" : "# Latest features of C++17 will be enabled.\n",
        "Line" : 935,
        "CharPositionInLine" : 1
      },
      "55" : {
        "Text" : "# TODO: -Wunused-value fails with SFINAE\n",
        "Line" : 951,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# We could use for example (void)T::value\n",
        "Line" : 952,
        "CharPositionInLine" : 1
      },
      "57" : {
        "Text" : "# TODO: -Wduplicated-branch fails with some of our custom type traits\n",
        "Line" : 953,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Latest features of C++17 will be enabled.\n",
        "Line" : 987,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Inline a lot. Default is /Ob1.\n",
        "Line" : 990,
        "CharPositionInLine" : 1
      },
      "60" : {
        "Text" : "# Looks like stdlib=libc++ is duplicated for the linker as well,\n\n# so we only have to add it to CXX.\n",
        "Line" : 1004,
        "CharPositionInLine" : 1
      },
      "61" : {
        "Text" : "# We configure additional flags for linker.\n",
        "Line" : 1027,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Incremental LTCG is enough for RelWithDebInfo.\n\n# It will drastically reduce rebuild times.\n",
        "Line" : 1039,
        "CharPositionInLine" : 1
      },
      "63" : {
        "Text" : "# We configure some preprocessor defines.\n",
        "Line" : 1059,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Lua is configured to compile as C++, of which sol2 library must necessarily know.\n",
        "Line" : 1069,
        "CharPositionInLine" : 1
      },
      "65" : {
        "Text" : "# We must wait till SOL will fixes these warnings.\n",
        "Line" : 1073,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# We must wait till Catch fixes this warning.\n",
        "Line" : 1078,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Additionally, we mark Release as the production build.\n",
        "Line" : 1095,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# We apply the variables to the actual flags.\n",
        "Line" : 1101,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# We configure MSVC to use static runtime libraries (\"/MT\" switch),\n\n# instead of DLL ones.\n\n# The definition of this function is found in cmake/configure_runtime_library.cmake\n",
        "Line" : 1162,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# We build Lua manually as there is no up-to-date CMakeLists for Lua.\n",
        "Line" : 1179,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# As some libraries do not use the preferred target_include_directories,\n\n# we must manually acquire the directories that they add via include_directories.\n",
        "Line" : 1183,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# We build OGG.\n",
        "Line" : 1189,
        "CharPositionInLine" : 1
      },
      "73" : {
        "Text" : "# We build Vorbis. It must know the paths for OGG that we have just built.\n",
        "Line" : 1199,
        "CharPositionInLine" : 1
      },
      "74" : {
        "Text" : "# We build OpenAL Soft. We need to set some variables beforehand.\n",
        "Line" : 1214,
        "CharPositionInLine" : 1
      },
      "75" : {
        "Text" : "# To avoid linker errors, we also need to tell OpenAL Soft we will be using it statically.\n",
        "Line" : 1219,
        "CharPositionInLine" : 1
      },
      "76" : {
        "Text" : "# We build the remaining libraries.\n",
        "Line" : 1246,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# add_subdirectory(\"${PROJECT_SOURCE_DIR}/src/3rdparty/enet\")\n",
        "Line" : 1249,
        "CharPositionInLine" : 1
      },
      "78" : {
        "Text" : "#if(ADD_MCMODEL_LARGE_FLAG)\n\n#target_compile_options(enet PUBLIC -mcmodel=large -no-pie)\n\n#endif()\n",
        "Line" : 1251,
        "CharPositionInLine" : 1
      },
      "79" : {
        "Text" : "#add_include_dirs_of(\"enet\")\n",
        "Line" : 1255,
        "CharPositionInLine" : 1
      },
      "80" : {
        "Text" : "# We build the source code generators.\n",
        "Line" : 1277,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# We configure the C++ defines in accordance with the currently set options.\n",
        "Line" : 1280,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# We configure additional user options for building the game.\n",
        "Line" : 1334,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# We build the main Hypersomnia executable.\n",
        "Line" : 1345,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Box2d sources go to the very end because they build with speed of light\n",
        "Line" : 1352,
        "CharPositionInLine" : 1
      },
      "85" : {
        "Text" : "# We define libraries upon which Hypersomnia depends.\n",
        "Line" : 1373,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "#target_link_libraries(Hypersomnia OpenGL::GLX)\n",
        "Line" : 1382,
        "CharPositionInLine" : 1
      },
      "87" : {
        "Text" : "#target_include_directories(Hypersomnia PUBLIC OpenGL::GLX)\n",
        "Line" : 1384,
        "CharPositionInLine" : 1
      },
      "88" : {
        "Text" : "# We add a command to automatically create an archive for every Release build.\n",
        "Line" : 1508,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# Custom targets for Makefile\n",
        "Line" : 1510,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 90
    },
    "cmake/add_include_dirs_of.cmake" : {
      "ObjectId" : "40d74ddd7891306698cbd35f84999a28aa412550",
      "LastModified" : "2017-05-03T16:11:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/configure_runtime_library.cmake" : {
      "ObjectId" : "82ec303d3ccee513734eecbe8b6a26bb7fe2ae3d",
      "LastModified" : "2017-05-03T16:11:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Default to statically-linked runtime.\n",
        "Line" : 4,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Set compiler options.\n",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake/extra-cmake-modules/find-modules/ECMFindModuleHelpersStub.cmake" : {
      "ObjectId" : "bb8c9a62fc6d93928a32ea5c11fa1d79a7323cea",
      "LastModified" : "2017-11-24T13:10:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/extra-cmake-modules/find-modules/FindX11_XCB.cmake" : {
      "ObjectId" : "dd55fd7b301ded660422071663a2e6e4cbdf65e7",
      "LastModified" : "2017-11-24T13:10:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindX11_XCB\n\n# -----------\n\n#\n\n# Try to find the X11 XCB compatibility library.\n\n#\n\n# This will define the following variables:\n\n#\n\n# ``X11_XCB_FOUND``\n\n#     True if (the requested version of) libX11-xcb is available\n\n# ``X11_XCB_VERSION``\n\n#     The version of libX11-xcb (this is not guaranteed to be set even when\n\n#     X11_XCB_FOUND is true)\n\n# ``X11_XCB_LIBRARIES``\n\n#     This can be passed to target_link_libraries() instead of the ``EGL::EGL``\n\n#     target\n\n# ``X11_XCB_INCLUDE_DIR``\n\n#     This should be passed to target_include_directories() if the target is not\n\n#     used for linking\n\n# ``X11_XCB_DEFINITIONS``\n\n#     This should be passed to target_compile_options() if the target is not\n\n#     used for linking\n\n#\n\n# If ``X11_XCB_FOUND`` is TRUE, it will also define the following imported\n\n# target:\n\n#\n\n# ``X11::XCB``\n\n#     The X11 XCB compatibility library\n\n#\n\n# In general we recommend using the imported target, as it is easier to use.\n\n# Bear in mind, however, that if the target is in the link interface of an\n\n# exported library, it must be made available by the package config file.\n\n#\n\n# Since pre-1.0.0.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2014 Alex Merry <alex.merry@kde.org>\n\n# Copyright 2011 Fredrik Höglund <fredrik@kde.org>\n\n# Copyright 2008 Helio Chissini de Castro <helio@kde.org>\n\n# Copyright 2007 Matthias Kretz <kretz@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n# 3. The name of the author may not be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# compatibility variables\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/extra-cmake-modules/find-modules/FindXCB.cmake" : {
      "ObjectId" : "d530d2d7f46e1f811e501676a54afe230c42f104",
      "LastModified" : "2017-11-24T13:10:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindXCB\n\n# -------\n\n#\n\n# Try to find XCB.\n\n#\n\n# This is a component-based find module, which makes use of the COMPONENTS and\n\n# OPTIONAL_COMPONENTS arguments to find_module.  The following components are\n\n# available::\n\n#\n\n#   XCB\n\n#   ATOM         AUX          COMPOSITE    CURSOR       DAMAGE\n\n#   DPMS         DRI2         DRI3         EVENT        EWMH\n\n#   GLX          ICCCM        IMAGE        KEYSYMS      PRESENT\n\n#   RANDR        RECORD       RENDER       RENDERUTIL   RES\n\n#   SCREENSAVER  SHAPE        SHM          SYNC         UTIL\n\n#   XEVIE        XF86DRI      XFIXES       XINERAMA     XINPUT\n\n#   XKB          XPRINT       XTEST        XV           XVMC\n\n#\n\n# If no components are specified, this module will act as though all components\n\n# except XINPUT (which is considered unstable) were passed to\n\n# OPTIONAL_COMPONENTS.\n\n#\n\n# This module will define the following variables, independently of the\n\n# components searched for or found:\n\n#\n\n# ``XCB_FOUND``\n\n#     True if (the requestion version of) xcb is available\n\n# ``XCB_VERSION``\n\n#     Found xcb version\n\n# ``XCB_TARGETS``\n\n#     A list of all targets imported by this module (note that there may be more\n\n#     than the components that were requested)\n\n# ``XCB_LIBRARIES``\n\n#     This can be passed to target_link_libraries() instead of the imported\n\n#     targets\n\n# ``XCB_INCLUDE_DIRS``\n\n#     This should be passed to target_include_directories() if the targets are\n\n#     not used for linking\n\n# ``XCB_DEFINITIONS``\n\n#     This should be passed to target_compile_options() if the targets are not\n\n#     used for linking\n\n#\n\n# For each searched-for components, ``XCB_<component>_FOUND`` will be set to\n\n# true if the corresponding xcb library was found, and false otherwise.  If\n\n# ``XCB_<component>_FOUND`` is true, the imported target ``XCB::<component>``\n\n# will be defined.  This module will also attempt to determine\n\n# ``XCB_*_VERSION`` variables for each imported target, although\n\n# ``XCB_VERSION`` should normally be sufficient.\n\n#\n\n# In general we recommend using the imported targets, as they are easier to use\n\n# and provide more control.  Bear in mind, however, that if any target is in the\n\n# link interface of an exported library, it must be made available by the\n\n# package config file.\n\n#\n\n# Since pre-1.0.0.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Fredrik Höglund <fredrik@kde.org>\n\n# Copyright 2013 Martin Gräßlin <mgraesslin@kde.org>\n\n# Copyright 2014-2015 Alex Merry <alex.merry@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n# 3. The name of the author may not be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Note that this list needs to be ordered such that any component\n\n# appears after its dependencies\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# XINPUT is unstable; do not include it by default\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# default component info: xcb components have fairly predictable\n\n# header files, library names and pkg-config names\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# exceptions\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/extra-cmake-modules/modules/ECMFindModuleHelpers.cmake" : {
      "ObjectId" : "f2e32f959e88618956ad340879ed98e722850519",
      "LastModified" : "2017-11-24T13:10:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# ECMFindModuleHelpers\n\n# --------------------\n\n#\n\n# Helper macros for find modules: ecm_find_package_version_check(),\n\n# ecm_find_package_parse_components() and\n\n# ecm_find_package_handle_library_components().\n\n#\n\n# ::\n\n#\n\n#   ecm_find_package_version_check(<name>)\n\n#\n\n# Prints warnings if the CMake version or the project's required CMake version\n\n# is older than that required by extra-cmake-modules.\n\n#\n\n# ::\n\n#\n\n#   ecm_find_package_parse_components(<name>\n\n#       RESULT_VAR <variable>\n\n#       KNOWN_COMPONENTS <component1> [<component2> [...]]\n\n#       [SKIP_DEPENDENCY_HANDLING])\n\n#\n\n# This macro will populate <variable> with a list of components found in\n\n# <name>_FIND_COMPONENTS, after checking that all those components are in the\n\n# list of KNOWN_COMPONENTS; if there are any unknown components, it will print\n\n# an error or warning (depending on the value of <name>_FIND_REQUIRED) and call\n\n# return().\n\n#\n\n# The order of components in <variable> is guaranteed to match the order they\n\n# are listed in the KNOWN_COMPONENTS argument.\n\n#\n\n# If SKIP_DEPENDENCY_HANDLING is not set, for each component the variable\n\n# <name>_<component>_component_deps will be checked for dependent components.\n\n# If <component> is listed in <name>_FIND_COMPONENTS, then all its (transitive)\n\n# dependencies will also be added to <variable>.\n\n#\n\n# ::\n\n#\n\n#   ecm_find_package_handle_library_components(<name>\n\n#       COMPONENTS <component> [<component> [...]]\n\n#       [SKIP_DEPENDENCY_HANDLING])\n\n#       [SKIP_PKG_CONFIG])\n\n#\n\n# Creates an imported library target for each component.  The operation of this\n\n# macro depends on the presence of a number of CMake variables.\n\n#\n\n# The <name>_<component>_lib variable should contain the name of this library,\n\n# and <name>_<component>_header variable should contain the name of a header\n\n# file associated with it (whatever relative path is normally passed to\n\n# '#include'). <name>_<component>_header_subdir variable can be used to specify\n\n# which subdirectory of the include path the headers will be found in.\n\n# ecm_find_package_components() will then search for the library\n\n# and include directory (creating appropriate cache variables) and create an\n\n# imported library target named <name>::<component>.\n\n#\n\n# Additional variables can be used to provide additional information:\n\n#\n\n# If SKIP_PKG_CONFIG, the <name>_<component>_pkg_config variable is set, and\n\n# pkg-config is found, the pkg-config module given by\n\n# <name>_<component>_pkg_config will be searched for and used to help locate the\n\n# library and header file.  It will also be used to set\n\n# <name>_<component>_VERSION.\n\n#\n\n# Note that if version information is found via pkg-config,\n\n# <name>_<component>_FIND_VERSION can be set to require a particular version\n\n# for each component.\n\n#\n\n# If SKIP_DEPENDENCY_HANDLING is not set, the INTERFACE_LINK_LIBRARIES property\n\n# of the imported target for <component> will be set to contain the imported\n\n# targets for the components listed in <name>_<component>_component_deps.\n\n# <component>_FOUND will also be set to false if any of the compoments in\n\n# <name>_<component>_component_deps are not found.  This requires the components\n\n# in <name>_<component>_component_deps to be listed before <component> in the\n\n# COMPONENTS argument.\n\n#\n\n# The following variables will be set:\n\n#\n\n# ``<name>_TARGETS``\n\n#   the imported targets\n\n# ``<name>_LIBRARIES``\n\n#   the found libraries\n\n# ``<name>_INCLUDE_DIRS``\n\n#   the combined required include directories for the components\n\n# ``<name>_DEFINITIONS``\n\n#   the \"other\" CFLAGS provided by pkg-config, if any\n\n# ``<name>_VERSION``\n\n#   the value of ``<name>_<component>_VERSION`` for the first component that\n\n#   has this variable set (note that components are searched for in the order\n\n#   they are passed to the macro), although if it is already set, it will not\n\n#   be altered\n\n#\n\n# Note that these variables are never cleared, so if\n\n# ecm_find_package_handle_library_components() is called multiple times with\n\n# different components (typically because of multiple find_package() calls) then\n\n# ``<name>_TARGETS``, for example, will contain all the targets found in any\n\n# call (although no duplicates).\n\n#\n\n# Since pre-1.0.0.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2014 Alex Merry <alex.merry@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n# 3. The name of the author may not be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make sure deps are included\n",
        "Line" : 160,
        "CharPositionInLine" : 12
      },
      "3" : {
        "Text" : "# This makes sure components are listed in the same order as\n\n# KNOWN_COMPONENTS (potentially important for inter-dependencies)\n",
        "Line" : 177,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# if there are any left, they are unknown components\n",
        "Line" : 187,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "cmake/version_file_generator/CMakeLists.txt" : {
      "ObjectId" : "2de809faedfb2f8b28742ce575fdee5515e6c937",
      "LastModified" : "2018-10-28T21:42:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Looks like stdlib=libc++ is duplicated for the linker as well,\n\n# so we only have to add it to CXX.\n",
        "Line" : 48,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/3rdparty/Box2D/Box2DConfig.cmake" : {
      "ObjectId" : "8a6c842e3435d96736291cfbdd1f61f385493bbe",
      "LastModified" : "2017-12-19T14:30:47Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/3rdparty/Box2D/CMakeLists.txt" : {
      "ObjectId" : "b800bcccbc023fe9e1ed0d5a145b193caabe1913",
      "LastModified" : "2017-11-24T13:10:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# These are used to create visual studio folders.\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# install headers\n",
        "Line" : 186,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# install libraries\n",
        "Line" : 196,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# install build system hooks for third-party apps\n",
        "Line" : 204,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "src/3rdparty/streflop/CMakeLists.txt" : {
      "ObjectId" : "4218c92e35fabca01557e318660ef8d31c5ab30e",
      "LastModified" : "2019-01-17T02:25:01Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Spring supplied CMake build file\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 11
  },
  "ElapsedTime" : 6236
}