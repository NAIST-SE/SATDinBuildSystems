{
  "Repository" : "11447711",
  "Revision" : "HEAD",
  "ObjectId" : "6fd9c4b004cb888b8b1bef2c9651e1c9ad860829",
  "CommitTime" : "2019-04-05T17:13:02Z",
  "Files" : {
    "pom.xml" : {
      "ObjectId" : "f863ca1b3c78c943c6ed0a971304397b59552aac",
      "LastModified" : "2019-04-05T17:13:02Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Set UTF-8 encoding for Maven plugins and output ",
        "Line" : 53,
        "CharPositionInLine" : 65
      },
      "1" : {
        "Text" : " Default to generating Javadoc in HTML 4.01 format ",
        "Line" : 57,
        "CharPositionInLine" : 67
      },
      "2" : {
        "Text" : " Plugins are listed here, but configured in pluginManagement, for compatibility with Eclipse. ",
        "Line" : 63,
        "CharPositionInLine" : 114
      },
      "3" : {
        "Text" : " See: https://stackoverflow.com/a/10483284/3950982 ",
        "Line" : 64,
        "CharPositionInLine" : 71
      },
      "4" : {
        "Text" : " Plugins. Find updates with: mvn versions:display-plugin-updates ",
        "Line" : 112,
        "CharPositionInLine" : 85
      },
      "5" : {
        "Text" : " Check main project for compatibility with JDK 7 API ",
        "Line" : 126,
        "CharPositionInLine" : 85
      },
      "6" : {
        "Text" : " Check against JDK 7 API ",
        "Line" : 138,
        "CharPositionInLine" : 77
      },
      "7" : {
        "Text" : " Compile sources (main for JDK 7, test for JDK 8) ",
        "Line" : 149,
        "CharPositionInLine" : 74
      },
      "8" : {
        "Text" : " Can't use \"release\" option, because ClassGraph needs to be built in JDK 7 ",
        "Line" : 156,
        "CharPositionInLine" : 107
      },
      "9" : {
        "Text" : " compatibility mode, and the @FunctionalInterface annotation was not available ",
        "Line" : 157,
        "CharPositionInLine" : 111
      },
      "10" : {
        "Text" : " in JDK 7. If building with \"source\" and \"target\" switches, unknown annotations ",
        "Line" : 158,
        "CharPositionInLine" : 112
      },
      "11" : {
        "Text" : " compile fine as long as they exist in the compiling JDK (in this case, JDK 8+). ",
        "Line" : 159,
        "CharPositionInLine" : 113
      },
      "12" : {
        "Text" : " Missing annotations don't trigger a linkage error or ClassNotFoundException ",
        "Line" : 160,
        "CharPositionInLine" : 109
      },
      "13" : {
        "Text" : " unless the annotation is actually read. ",
        "Line" : 161,
        "CharPositionInLine" : 73
      },
      "14" : {
        "Text" : " Tests use some JDK 8 features, such as lambdas ",
        "Line" : 174,
        "CharPositionInLine" : 88
      },
      "15" : {
        "Text" : " Execute unit tests ",
        "Line" : 182,
        "CharPositionInLine" : 44
      },
      "16" : {
        "Text" : " Create and bundle manifest file ",
        "Line" : 189,
        "CharPositionInLine" : 57
      },
      "17" : {
        "Text" : " Compile module-info.class using ModiTect, and place it in META-INF/versions/9 ",
        "Line" : 214,
        "CharPositionInLine" : 103
      },
      "18" : {
        "Text" : " In the future, rather than using ModiTect, could use two execute rules. ",
        "Line" : 216,
        "CharPositionInLine" : 101
      },
      "19" : {
        "Text" : " See: https://maven.apache.org/plugins/maven-compiler-plugin/examples/module-info.html ",
        "Line" : 217,
        "CharPositionInLine" : 115
      },
      "20" : {
        "Text" : " Put module-info.class in META-INF/versions/9 to maximize backwards compat ",
        "Line" : 229,
        "CharPositionInLine" : 115
      },
      "21" : {
        "Text" : " See: https://github.com/moditect/moditect/issues/67 ",
        "Line" : 230,
        "CharPositionInLine" : 93
      },
      "22" : {
        "Text" : " VersionFinder requires java.xml ",
        "Line" : 234,
        "CharPositionInLine" : 77
      },
      "23" : {
        "Text" : " FileUtils requires jdk.unsupported (for usage of Unsafe) ",
        "Line" : 235,
        "CharPositionInLine" : 102
      },
      "24" : {
        "Text" : " ModulePathInfo requires java.management ",
        "Line" : 236,
        "CharPositionInLine" : 85
      },
      "25" : {
        "Text" : " LogNode requires java.logging ",
        "Line" : 237,
        "CharPositionInLine" : 75
      },
      "26" : {
        "Text" : " Add src/test/perf to test sources ",
        "Line" : 255,
        "CharPositionInLine" : 59
      },
      "27" : {
        "Text" : " Create binary jar ",
        "Line" : 276,
        "CharPositionInLine" : 43
      },
      "28" : {
        "Text" : " Create source jar ",
        "Line" : 292,
        "CharPositionInLine" : 43
      },
      "29" : {
        "Text" : " Create Javadoc jar ",
        "Line" : 307,
        "CharPositionInLine" : 44
      },
      "30" : {
        "Text" : " Stage jars on Sonatype Nexus ",
        "Line" : 327,
        "CharPositionInLine" : 54
      },
      "31" : {
        "Text" : " See: http://java.dzone.com/articles/deploy-maven-central ",
        "Line" : 328,
        "CharPositionInLine" : 82
      },
      "32" : {
        "Text" : " and: http://central.sonatype.org/pages/apache-maven.html ",
        "Line" : 329,
        "CharPositionInLine" : 82
      },
      "33" : {
        "Text" : " Deploy jars to Maven Central ",
        "Line" : 342,
        "CharPositionInLine" : 54
      },
      "34" : {
        "Text" : " Test dependencies (main has no dependencies). ",
        "Line" : 358,
        "CharPositionInLine" : 59
      },
      "35" : {
        "Text" : " Find dependency updates with: mvn versions:display-dependency-updates ",
        "Line" : 359,
        "CharPositionInLine" : 83
      },
      "36" : {
        "Text" : " Compile Javadoc to HTML5 if building with JDK 9+ ",
        "Line" : 418,
        "CharPositionInLine" : 66
      },
      "37" : {
        "Text" : " coverall version 4.3.0 does not work with java 9. ",
        "Line" : 423,
        "CharPositionInLine" : 75
      },
      "38" : {
        "Text" : " See: https://github.com/trautonen/coveralls-maven-plugin/issues/112 ",
        "Line" : 424,
        "CharPositionInLine" : 93
      },
      "39" : {
        "Text" : " Sign jars for release (mvn release:prepare && mvn release:perform) ",
        "Line" : 432,
        "CharPositionInLine" : 84
      },
      "40" : {
        "Text" : " Lifecycle mapping for eclipse m2e compatibility. ",
        "Line" : 461,
        "CharPositionInLine" : 66
      },
      "41" : {
        "Text" : " See: https://stackoverflow.com/a/23707050/3950982 ",
        "Line" : 462,
        "CharPositionInLine" : 67
      },
      "42" : {
        "Text" : " Only activate in m2e ",
        "Line" : 467,
        "CharPositionInLine" : 50
      },
      "43" : {
        "Text" : " Putting this in pluginManagement causes Maven and IDEA to ignore this \"plugin\" ",
        "Line" : 472,
        "CharPositionInLine" : 104
      },
      "44" : {
        "Text" : " (the lifecycle-mapping plugin doesn't actually exist, it is a special artifactId ",
        "Line" : 473,
        "CharPositionInLine" : 106
      },
      "45" : {
        "Text" : " recognized only by m2e). ",
        "Line" : 474,
        "CharPositionInLine" : 50
      },
      "46" : {
        "Text" : " Cause m2e to ignore maven-enforcer-plugin (which does not have a ",
        "Line" : 482,
        "CharPositionInLine" : 106
      },
      "47" : {
        "Text" : " corresponding m2e connector, so otherwise triggers a warning). ",
        "Line" : 483,
        "CharPositionInLine" : 104
      },
      "48" : {
        "Text" : " See: https://stackoverflow.com/a/13043842/3950982 ",
        "Line" : 484,
        "CharPositionInLine" : 91
      },
      "CommentCount" : 49
    }
  },
  "FileTypes" : {
    "MAVEN" : 1
  },
  "ElapsedTime" : 339
}