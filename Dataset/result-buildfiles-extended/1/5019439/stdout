{
  "Repository" : "5019439",
  "Revision" : "HEAD",
  "ObjectId" : "6cb9316c5c0fea22dc798c9a32998a68ff7a0810",
  "CommitTime" : "2019-04-07T22:43:18Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "7dfc26de9df188f9a896b9b360a67c0bdf46612c",
      "LastModified" : "2019-04-07T22:43:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ROSS Configuration Options\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We probably don't want this to run on every build.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Old way to do this\n\n# Data Structure for Unprocessed Event List\n\n#SET(QUEUE calendar) #Calendar Queue\n\n#SET(QUEUE heap) #Push/Down Heap\n\n#SET(QUEUE splay) #Splay Tree\n\n#SET(QUEUE kp_splay) #Splay Tree in KPs\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# New way as of CMake 2.8\n\n# The default value for the QUEUE variable is splay\n\n# The other options are presented at config time by cmake-gui\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Random Library\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Network option\n\n# tcp option removed\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# GVT algorithm option\n\n#SET(GVT 7oclock)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Architecture setting and management\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## MPI\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ROSS Core code\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ROSS Models directory\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ROSS Documentation\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "core/CMakeLists.txt" : {
      "ObjectId" : "83ca30d95d1445db33a4218ed3e92e3e899c87d6",
      "LastModified" : "2019-04-02T16:45:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ROSS VERSION INFORMATION\n\n## Print Date and Time at top of ROSS output\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Print ROSS Git Hash\n\n# From http://stackoverflow.com/questions/1435953/how-can-i-pass-git-sha1-to-compiler-as-definition-using-cmake\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Data Structure for remote Events\n\n# If AVL_TREE is OFF, ROSS reverts to hashing\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ROSS_MEMORY is either on or off depending on whether or not we desire\n\n# memory buffers.  If it's not set to YES, it defaults to NO\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# RIO: Restart IO\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Damaris I/O and data management\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Use debugging-friendly memory allocation\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Show timing data at end of run\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Used by ross-kernel-inline.h\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Set all options\n\n#SET(OPTIONS \"${OPTIONS} -DROSS_QUEUE_${QUEUE} -DROSS_RAND_${RAND} -DROSS_NETWORK_mpi -DROSS_CLOCK_${CLOCK} -DROSS_GVT_${GVT} -DARCH_${ARCH}\")\n\n#SET(OPTIONS \"${OPTIONS} -DROSS_QUEUE_${QUEUE} -DROSS_RAND_${RAND} -DROSS_NETWORK_mpi -DROSS_CLOCK_${CLOCK} -DROSS_GVT_${GVT} -DARCH_${ARCH}\" PARENT_SCOPE)\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Generate Library\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Don't check coverage on lz4\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Create the coveralls target.\n",
        "Line" : 148,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# The source files.\n\n# If we should upload.\n",
        "Line" : 150,
        "CharPositionInLine" : 27
      },
      "14" : {
        "Text" : "# Build Specific Config Header\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# CODES config bin\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Make Install\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "core/ROSSConfig.cmake" : {
      "ObjectId" : "380fde8a1760eaacd3aa135483b6571b013ffcd4",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "core/cmake/Coveralls.cmake" : {
      "ObjectId" : "17c4c6a008b29931519e58b9b24d3bc0594855df",
      "LastModified" : "2015-09-01T19:45:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n# Copyright (C) 2014 Joakim SÃ¶derberg <joakim.soderberg@gmail.com>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Param _COVERAGE_SRCS\tA list of source files that coverage should be collected for.\n\n# Param _COVERALLS_UPLOAD Upload the result to coveralls?\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When passing a CMake list to an external process, the list\n\n# will be converted from the format \"1;2;3\" to \"1 2 3\".\n\n# This means the script we're calling won't see it as a list\n\n# of sources, but rather just one long path. We remedy this\n\n# by replacing \";\" with \"*\" and then reversing that in the script\n\n# that we're calling.\n\n# http://cmake.3232098.n2.nabble.com/Passing-a-CMake-list-quot-as-is-quot-to-a-custom-target-td6505681.html\n",
        "Line" : 45,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#message(\"Coverage sources: ${COVERAGE_SRCS}\")\n",
        "Line" : 58,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Zero the coverage counters.\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Run regress tests.\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Generate Gcov and translate it into coveralls JSON.\n\n# We do this by executing an external CMake script.\n\n# (We don't want this to run at CMake generation time, but after compilation and everything has run).\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# TODO: This is passed like: \"a b c\", not \"a;b;c\"\n",
        "Line" : 74,
        "CharPositionInLine" : 39
      },
      "8" : {
        "Text" : "# Upload the JSON to coveralls.\n",
        "Line" : 94,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 9
    },
    "core/cmake/CoverallsClear.cmake" : {
      "ObjectId" : "eb68695a2b1fce4ea197f5be588379d13e3c2fb7",
      "LastModified" : "2015-09-01T19:45:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n# Copyright (C) 2014 Joakim SÃ¶derberg <joakim.soderberg@gmail.com>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "core/cmake/CoverallsGenerateGcov.cmake" : {
      "ObjectId" : "c4276c94c56417e90583764f714716421f192957",
      "LastModified" : "2015-09-01T19:45:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n# Copyright (C) 2014 Joakim SÃ¶derberg <joakim.soderberg@gmail.com>\n\n#\n\n# This is intended to be run by a custom target in a CMake project like this.\n\n# 0. Compile program with coverage support.\n\n# 1. Clear coverage data. (Recursively delete *.gcda in build dir)\n\n# 2. Run the unit tests.\n\n# 3. Run this script specifying which source files the coverage should be performed on.\n\n#\n\n# This script will then use gcov to generate .gcov files in the directory specified\n\n# via the COV_PATH var. This should probably be the same as your cmake build dir.\n\n#\n\n# It then parses the .gcov files to convert them into the Coveralls JSON format:\n\n# https://coveralls.io/docs/api\n\n#\n\n# Example for running as standalone CMake script from the command line:\n\n# (Note it is important the -P is at the end...)\n\n# $ cmake -DCOV_PATH=$(pwd) \n\n#         -DCOVERAGE_SRCS=\"catcierge_rfid.c;catcierge_timer.c\" \n\n#         -P ../cmake/CoverallsGcovUpload.cmake\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Make sure we have the needed arguments.\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Since it's not possible to pass a CMake list properly in the\n\n# \"1;2;3\" format to an external process, we have replaced the\n\n# \";\" with \"*\", so reverse that here so we get it back into the\n\n# CMake list format.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO: Add these git things to the coveralls json.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Branch.\n",
        "Line" : 78,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "############################# Macros #########################################\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# This macro converts from the full path format gcov outputs:\n\n#\n\n#    /path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n#\n\n# to the original source file path the .gcov is for:\n\n#\n\n#   /path/to/project/root/subdir/the_file.c\n\n#\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# /path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov \n\n# -> \n\n# #path#to#project#root#subdir#the_file.c.gcov   \n",
        "Line" : 124,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# #path#to#project#root#subdir#the_file.c.gcov -> /path/to/project/root/subdir/the_file.c\n",
        "Line" : 129,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "##############################################################################\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Get the coverage data.\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Get a list of all the object directories needed by gcov\n\n# (The directories the .gcda files and .o files are found in)\n\n# and run gcov on those.\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\n\n# The -p below refers to \"Preserve path components\",\n\n# This means that the generated gcov filename of a source file will\n\n# keep the original files entire filepath, but / is replaced with #.\n\n# Example:\n\n#\n\n# /path/to/project/root/build/CMakeFiles/the_file.dir/subdir/the_file.c.gcda\n\n# ------------------------------------------------------------------------------\n\n# File '/path/to/project/root/subdir/the_file.c'\n\n# Lines executed:68.34% of 199\n\n# /path/to/project/root/subdir/the_file.c:creating '#path#to#project#root#subdir#the_file.c.gcov'\n\n#\n\n# If -p is not specified then the file is named only \"the_file.c.gcov\"\n\n#\n",
        "Line" : 149,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# TODO: Make these be absolute path\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Get only the filenames to use for filtering.\n\n#set(COVERAGE_SRCS_NAMES \"\")\n\n#foreach (COVSRC ${COVERAGE_SRCS})\n\n#\tget_filename_component(COVSRC_NAME ${COVSRC} NAME)\n\n#\tmessage(\"${COVSRC} -> ${COVSRC_NAME}\")\n\n#\tlist(APPEND COVERAGE_SRCS_NAMES \"${COVSRC_NAME}\")\n\n#endforeach()\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\n\n# Filter out all but the gcov files we want.\n\n#\n\n# We do this by comparing the list of COVERAGE_SRCS filepaths that the\n\n# user wants the coverage data for with the paths of the generated .gcov files,\n\n# so that we only keep the relevant gcov files.\n\n#\n\n# Example:\n\n# COVERAGE_SRCS =\n\n#\t\t\t\t/path/to/project/root/subdir/the_file.c\n\n#\n\n# ALL_GCOV_FILES =\n\n#\t\t\t\t/path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n#\t\t\t\t/path/to/project/root/build/#path#to#project#root#subdir#other_file.c.gcov\n\n# \n\n# Result should be:\n\n# GCOV_FILES = \n\n#\t\t\t\t/path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n#\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#message(\"Look in coverage sources: ${COVERAGE_SRCS}\")\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#\n\n# /path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov \n\n# -> \n\n# /path/to/project/root/subdir/the_file.c \n",
        "Line" : 208,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# Is this in the list of source files?\n\n# TODO: We want to match against relative path filenames from the source file root...\n",
        "Line" : 214,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# We remove it from the list, so we don't bother searching for it again.\n\n# Also files left in COVERAGE_SRCS_REMAINING after this loop ends should\n\n# have coverage data generated from them (no lines are covered).\n",
        "Line" : 222,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# TODO: Enable setting these\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Read the GCOV files line by line and get the coverage data.\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# The new coveralls API doesn't need the entire source (Yay!)\n\n# However, still keeping that part for now. Will cleanup in the future.\n",
        "Line" : 262,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# Loads the gcov file as a list of lines.\n\n# (We first open the file and replace all occurences of [] with _\n\n#  because CMake will fail to parse a line containing unmatched brackets...\n\n#  also the \\ to escaped \\n in macros screws up things.)\n\n# https://public.kitware.com/Bug/view.php?id=15369\n",
        "Line" : 267,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# Instead of trying to parse the source from the\n\n# gcov file, simply read the file contents from the source file.\n\n# (Parsing it from the gcov is hard because C-code uses ; in many places\n\n#  which also happens to be the same as the CMake list delimeter).\n",
        "Line" : 281,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "# According to http://json.org/ these should be escaped as well.\n\n# Don't know how to do that in CMake however...\n\n#string(REPLACE \"\\b\" \"\\\\\\\\b\" GCOV_FILE_SOURCE \"${GCOV_FILE_SOURCE}\")\n\n#string(REPLACE \"\\f\" \"\\\\\\\\f\" GCOV_FILE_SOURCE \"${GCOV_FILE_SOURCE}\")\n\n#string(REGEX REPLACE \"\\u([a-fA-F0-9]{4})\" \"\\\\\\\\u\\\\1\" GCOV_FILE_SOURCE \"${GCOV_FILE_SOURCE}\")\n",
        "Line" : 292,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# We want a json array of coverage data as a single string\n\n# start building them from the contents of the .gcov\n",
        "Line" : 298,
        "CharPositionInLine" : 1
      },
      "27" : {
        "Text" : "# Line number for the .gcov.\n",
        "Line" : 302,
        "CharPositionInLine" : 24
      },
      "28" : {
        "Text" : "#message(\"${GCOV_LINE}\")\n\n# Example of what we're parsing:\n\n# Hitcount  |Line | Source\n\n# \"        8:   26:        if (!allowed || (strlen(allowed) == 0))\"\n",
        "Line" : 305,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Check if we should exclude lines using the Lcov syntax.\n",
        "Line" : 315,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Lines with 0 line numbers are metadata and can be ignored.\n",
        "Line" : 345,
        "CharPositionInLine" : 3
      },
      "31" : {
        "Text" : "# Translate the hitcount into valid JSON values.\n",
        "Line" : 351,
        "CharPositionInLine" : 5
      },
      "32" : {
        "Text" : "# Advanced way of removing the trailing comma in the JSON array.\n\n# \"[1, 2, 3, \" -> \"[1, 2, 3\"\n",
        "Line" : 373,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# Append the trailing ] to complete the JSON array.\n",
        "Line" : 377,
        "CharPositionInLine" : 1
      },
      "34" : {
        "Text" : "# Generate the final JSON for this file.\n",
        "Line" : 380,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "# Loop through all files we couldn't find any coverage for\n\n# as well, and generate JSON for those as well with 0% coverage.\n",
        "Line" : 387,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Loads the source file as a list of lines.\n",
        "Line" : 391,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# Remove trailing comma, and complete JSON array with ]\n",
        "Line" : 407,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "# Generate the final JSON for this file.\n",
        "Line" : 411,
        "CharPositionInLine" : 1
      },
      "39" : {
        "Text" : "# Get rid of trailing comma.\n",
        "Line" : 417,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Generate the final complete JSON!\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 41
    },
    "core/cmake/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "c8d27f2e8ce494c96404086ce58982239916a44c",
      "LastModified" : "2015-03-24T21:01:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 45,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 49,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# check if this is a submodule\n",
        "Line" : 56,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 97,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 105,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    },
    "core/cmake/SetupMPI.cmake" : {
      "ObjectId" : "c257cefae0455eec2b3d5dfe47e665a5b7cdc3d9",
      "LastModified" : "2019-03-28T16:12:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# Copyright (c) 2017, Lawrence Livermore National Security, LLC.\n\n#\n\n# Produced at the Lawrence Livermore National Laboratory\n\n#\n\n# LLNL-CODE-725085\n\n#\n\n# All rights reserved.\n\n#\n\n# This file is part of BLT.\n\n#\n\n# For additional details, please also read BLT/LICENSE.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice,\n\n#   this list of conditions and the disclaimer below.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the disclaimer (as noted below) in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the name of the LLNS/LLNL nor the names of its contributors may\n\n#   be used to endorse or promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL LAWRENCE LIVERMORE NATIONAL SECURITY,\n\n# LLC, THE U.S. DEPARTMENT OF ENERGY OR CONTRIBUTORS BE LIABLE FOR ANY\n\n# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n\n# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n\n# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\n\n# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING\n\n# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################\n\n# MPI\n\n################################\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Determine if we should use fortran mpif.h header or fortran mpi module\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "docs/CMakeLists.txt" : {
      "ObjectId" : "265e20ddb71c2b575bbe5c5e7610eab39efb438e",
      "LastModified" : "2019-03-28T16:12:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "models/CMakeLists.txt" : {
      "ObjectId" : "ca8011854b8bf4eb6a63be2da8f5c17a7ddb2f99",
      "LastModified" : "2019-03-28T16:12:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## BASIC SCHEDULERS\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## INSTRUMENTATION TESTS\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Automatically search and add model subdirectories\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# follow sym-links\n",
        "Line" : 55,
        "CharPositionInLine" : 30
      },
      "4" : {
        "Text" : "#    MESSAGE(${dir_path})\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "models/phold/CMakeLists.txt" : {
      "ObjectId" : "100cfb41125cf4bd056049ac876df292aa2b9af6",
      "LastModified" : "2019-03-28T16:12:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 11
  },
  "ElapsedTime" : 1459
}