{
  "Repository" : "26245476",
  "Revision" : "HEAD",
  "ObjectId" : "9b19b044b46948e965dd5c1566559cce3c4b5d4a",
  "CommitTime" : "2019-04-17T16:04:36Z",
  "Files" : {
    "3party/agg/CMakeLists.txt" : {
      "ObjectId" : "5c506574b9b89e5b0c8c607b1a38a727748cb051",
      "LastModified" : "2018-06-25T14:58:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3party/bsdiff-courgette/CMakeLists.txt" : {
      "ObjectId" : "1d180331d243e2e656e7344c35c6121ba5a70067",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3party/bsdiff-courgette/bsdiff/bsdiff_tests/CMakeLists.txt" : {
      "ObjectId" : "e798c7350b95d6a81144fa3e0888e7819ecc0e05",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3party/expat/CMakeLists.txt" : {
      "ObjectId" : "1f333580b33e41ba3a94b6a6f128367108c0774e",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3party/expat/ConfigureChecks.cmake" : {
      "ObjectId" : "f03faa637d0e324f803fd0ba335a2370ef713e41",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#/* Define to 1 if you have the ANSI C header files. */\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#/* 1234 = LIL_ENDIAN, 4321 = BIGENDIAN */\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3party/expat/expat_config.h.cmake" : {
      "ObjectId" : "25d79a6d5e671f1eadef3bdf4f7d08d7ee4eff9e",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* expat_config.h.in.  Generated from configure.in by autoheader.  */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* 1234 = LIL_ENDIAN, 4321 = BIGENDIAN */",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Define to 1 if you have the `bcopy' function. */",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* Define to 1 if you have the <dlfcn.h> header file. */",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Define to 1 if you have the <fcntl.h> header file. */",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Define to 1 if you have the `getpagesize' function. */",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Define to 1 if you have the <inttypes.h> header file. */",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* Define to 1 if you have the `memmove' function. */",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* Define to 1 if you have the <memory.h> header file. */",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* Define to 1 if you have a working `mmap' system call. */",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Define to 1 if you have the <stdint.h> header file. */",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Define to 1 if you have the <stdlib.h> header file. */",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Define to 1 if you have the <strings.h> header file. */",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* Define to 1 if you have the <string.h> header file. */",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Define to 1 if you have the <sys/stat.h> header file. */",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Define to 1 if you have the <sys/types.h> header file. */",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Define to 1 if you have the <unistd.h> header file. */",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* Define to the address where bug reports for this package should be sent. */",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* Define to the full name of this package. */",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* Define to the full name and version of this package. */",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* Define to the one symbol short name of this package. */",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* Define to the version of this package. */",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* Define to 1 if you have the ANSI C header files. */",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/* whether byteorder is bigendian */",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/* Define to specify how much context to retain around the current parse\n   point. */",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "/* Define to make parameter entity parsing functionality available. */",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "/* Define to make XML Namespaces functionality available. */",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "/* Define to __FUNCTION__ or \"\" if `__func__' does not conform to ANSI C. */",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "/* Define to `long' if <sys/types.h> does not define. */",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "/* Define to `unsigned' if <sys/types.h> does not define. */",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "3party/freetype/CMakeLists.txt" : {
      "ObjectId" : "a7e59c4fffd4cd0cf40eca818771840e64f0adb6",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3party/freetype/builds/FindHarfBuzz.cmake" : {
      "ObjectId" : "8440c7b2b6801a85280b9c252837d67d928dd981",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2012, Intel Corporation\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice, this\n\n#   list of conditions and the following disclaimer.\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n# * Neither the name of Intel Corporation nor the names of its contributors may\n\n#   be used to endorse or promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Try to find Harfbuzz include and library directories.\n\n#\n\n# After successful discovery, this will set for inclusion where needed:\n\n# HARFBUZZ_INCLUDE_DIRS - containg the HarfBuzz headers\n\n# HARFBUZZ_LIBRARIES - containg the HarfBuzz library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# HarfBuzz 0.9.18 split ICU support into a separate harfbuzz-icu library.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3party/freetype/builds/cmake/iOS.cmake" : {
      "ObjectId" : "7970f2b10ab79b1b96f37ce3338faa687b5a4fbd",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# iOS.cmake\n\n#\n\n# Copyright 2014-2015 by\n\n# David Turner, Robert Wilhelm, and Werner Lemberg.\n\n#\n\n# Written by David Wimsey <david@wimsey.us>\n\n#\n\n# This file is part of the FreeType project, and may only be used, modified,\n\n# and distributed under the terms of the FreeType project license,\n\n# LICENSE.TXT.  By continuing to use, modify, or distribute this file you\n\n# indicate that you have read the license and understand and accept it\n\n# fully.\n\n#\n\n#\n\n# This file is derived from the files `Platform/Darwin.cmake' and\n\n# `Platform/UnixPaths.cmake', which are part of CMake 2.8.4.  It has been\n\n# altered for iOS development.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Options\n\n# -------\n\n#\n\n#   IOS_PLATFORM = OS | SIMULATOR\n\n#\n\n#     This decides whether SDKS are selected from the `iPhoneOS.platform' or\n\n#     `iPhoneSimulator.platform' folders.\n\n#\n\n#     OS - the default, used to build for iPhone and iPad physical devices,\n\n#       which have an ARM architecture.\n\n#     SIMULATOR - used to build for the Simulator platforms, which have an\n\n#       x86 architecture.\n\n#\n\n#   CMAKE_IOS_DEVELOPER_ROOT = /path/to/platform/Developer folder\n\n#\n\n#     By default, this location is automatically chosen based on the\n\n#     IOS_PLATFORM value above.  If you manually set this variable, it\n\n#     overrides the default location and forces the use of a particular\n\n#     Developer Platform.\n\n#\n\n#   CMAKE_IOS_SDK_ROOT = /path/to/platform/Developer/SDKs/SDK folder\n\n#\n\n#     By default, this location is automatically chosen based on the\n\n#     CMAKE_IOS_DEVELOPER_ROOT value.  In this case it is always the most\n\n#     up-to-date SDK found in the CMAKE_IOS_DEVELOPER_ROOT path.  If you\n\n#     manually set this variable, it forces the use of a specific SDK\n\n#     version.\n\n#\n\n#\n\n# Macros\n\n# ------\n\n#\n\n#   set_xcode_property (TARGET XCODE_PROPERTY XCODE_VALUE)\n\n#\n\n#     A convenience macro for setting Xcode specific properties on targets.\n\n#\n\n#     Example:\n\n#\n\n#       set_xcode_property(myioslib IPHONEOS_DEPLOYMENT_TARGET \"3.1\")\n\n#\n\n#   find_host_package (PROGRAM ARGS)\n\n#\n\n#     A macro to find executable programs on the host system, not within the\n\n#     iOS environment.  Thanks to the `android-cmake' project for providing\n\n#     the command.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# standard settings\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# required as of cmake 2.8.10\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# determine the cmake host system version so we know where to find the iOS\n\n# SDKs\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# force the compilers to gcc for iOS\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# skip the platform compiler checks for cross compiling\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# all iOS/Darwin specific settings - some may be redundant\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# hidden visibility is required for cxx on iOS\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# hack: If a new cmake (which uses CMAKE_INSTALL_NAME_TOOL) runs on an old\n\n#       build tree (where `install_name_tool' was hardcoded), and where\n\n#       CMAKE_INSTALL_NAME_TOOL isn't in the cache and still cmake didn't\n\n#       fail in `CMakeFindBinUtils.cmake' (because it isn't rerun), hardcode\n\n#       CMAKE_INSTALL_NAME_TOOL here to `install_name_tool' so it behaves as\n\n#       it did before.\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# set up iOS platform unless specified manually with IOS_PLATFORM\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# check the platform selection and setup for developer root\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# this causes the installers to properly locate the output libraries\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# this causes the installers to properly locate the output libraries\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# set up iOS developer location unless specified manually with\n\n# CMAKE_IOS_DEVELOPER_ROOT --\n\n# note that Xcode 4.3 changed the installation location; choose the most\n\n# recent one available\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# find and use the most recent iOS SDK unless specified manually with\n\n# CMAKE_IOS_SDK_ROOT\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# set the sysroot default to the most recent SDK\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# set the architecture for iOS --\n\n# note that currently both ARCHS_STANDARD_32_BIT and\n\n# ARCHS_UNIVERSAL_IPHONE_OS set armv7 only, so set both manually\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# set the find root to the iOS developer roots and to user defined paths\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# default to searching for frameworks first\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# set up the default search directories for frameworks\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# only search the iOS SDKs, not the remainder of the host filesystem\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# this little macro lets you set any Xcode specific property\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# this macro lets you find executable programs on the host system\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# eof\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "3party/gflags/CMakeLists.txt" : {
      "ObjectId" : "c0da7415e389f89f859d6d3d1c28bb1b66d3817d",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3party/gflags/Makefile.am" : {
      "ObjectId" : "c976d4531b3551a4615f3a2c2fd29789547b627c",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make sure that when we re-make ./configure, we get the macros we need\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is so we can #include <gflags/foo>\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This is mostly based on configure options\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# These are good warnings to turn on by default,\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The -no-undefined flag allows libtool to generate shared libraries for\n\n# Cygwin and MinGW.  LIBSTDCXX_LA_LINKER_FLAG is used to fix a Solaris bug.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## The .h files you want to install (that is, .h files that people\n\n## who install this package can include in their own applications.)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# This is for backwards compatibility only.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## This is for HTML and other documentation you want to install.\n\n## Add your documentation files (in doc/) in addition to these\n\n## top-level boilerplate files.  Also add a TODO file if you have one.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## The libraries (.so's) you want to install\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## The location of the windows project file for each binary we make\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## unittests you want to run when people type 'make check'.\n\n## TESTS is for binary unittests, check_SCRIPTS for script-based unittests.\n\n## TESTS_ENVIRONMENT sets environment variables for when you run unittest,\n\n## but it only seems to take effect for *binary* unittests (argh!)\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Every time you add a unittest to check_SCRIPTS, add it here too\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Used for auto-generated source files\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## vvvv RULES TO MAKE THE LIBRARIES, BINARIES, AND UNITTESTS\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# -version-info gets passed to libtool\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Also make sure this works when we don't link in pthreads\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# We also want to test that things work properly when the file that\n\n# holds main() has a name ending with -main or _main.  To keep the\n\n# Makefile small :-), we test the no-threads version of these.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Some buggy sh's ignore \"\" instead of treating it as a positional\n\n# parameter.  Since we use \"\" in this script, we prefer bash if we\n\n# can.  If there's no bash, we fall back to sh.\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Test the STRIP_FLAGS #define.\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# These are negative-compilation tests.  We want to make sure these\n\n# erroneous use of the flags macros correctly fail to compile.\n\n# Again, we just bother testing with the no-threads version of the library.\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# This one, on the other hand, should succeed.\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# This file isn't covered under any rule that would cause it to be distributed.\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## ^^^^ END OF RULES TO MAKE THE LIBRARIES, BINARIES, AND UNITTESTS\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "## This should always include $(TESTS), but may also include other\n\n## binaries that you compile but don't want automatically installed.\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# http://linux.die.net/man/1/pkg-config, http://pkg-config.freedesktop.org/wiki\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# I get the description and URL lines from the rpm spec. I use sed to\n\n# try to rewrite exec_prefix, libdir, and includedir in terms of\n\n# prefix, if possible.\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# The nothreads version is mostly the same\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 28
    },
    "3party/glm/CMakeLists.txt" : {
      "ObjectId" : "685710f57086b6840d8d98bdb2a8af4184f21cfa",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# VC doesn't support /arch:SSE3\t\n",
        "Line" : 91,
        "CharPositionInLine" : 30
      },
      "1" : {
        "Text" : "#add_definitions(-S)\n\n#add_definitions(-s)\n\n#add_definitions(-m32)\n\n#add_definitions(-O3)\n",
        "Line" : 121,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#add_definitions(-fprofile-arcs -ftest-coverage) gcov\n\n#ctest_enable_coverage()\n",
        "Line" : 126,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "3party/glm/CTestConfig.cmake" : {
      "ObjectId" : "d3388358823000497712871f32bb6428e6d3bef8",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## This file should be placed in the root directory of your project.\n\n## Then modify the CMakeLists.txt file in the root directory of your\n\n## project to incorporate the testing dashboard.\n\n## # The following are required to uses Dart and the Cdash dashboard\n\n##   ENABLE_TESTING()\n\n##   INCLUDE(CTest)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3party/glm/cmake/GNUInstallDirs.cmake" : {
      "ObjectId" : "4dc2d68a4ad620e099c8d7b37da87318f11e6ba4",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Define GNU standard installation directories\n\n# Provides install directory variables as defined for GNU software:\n\n#  http://www.gnu.org/prep/standards/html_node/Directory-Variables.html\n\n# Inclusion of this module defines the following variables:\n\n#  CMAKE_INSTALL_<dir>      - destination for files of a given type\n\n#  CMAKE_INSTALL_FULL_<dir> - corresponding absolute path\n\n# where <dir> is one of:\n\n#  BINDIR           - user executables (bin)\n\n#  SBINDIR          - system admin executables (sbin)\n\n#  LIBEXECDIR       - program executables (libexec)\n\n#  SYSCONFDIR       - read-only single-machine data (etc)\n\n#  SHAREDSTATEDIR   - modifiable architecture-independent data (com)\n\n#  LOCALSTATEDIR    - modifiable single-machine data (var)\n\n#  LIBDIR           - object code libraries (lib or lib64 or lib/<multiarch-tuple> on Debian)\n\n#  INCLUDEDIR       - C header files (include)\n\n#  OLDINCLUDEDIR    - C header files for non-gcc (/usr/include)\n\n#  DATAROOTDIR      - read-only architecture-independent data root (share)\n\n#  DATADIR          - read-only architecture-independent data (DATAROOTDIR)\n\n#  INFODIR          - info documentation (DATAROOTDIR/info)\n\n#  LOCALEDIR        - locale-dependent data (DATAROOTDIR/locale)\n\n#  MANDIR           - man documentation (DATAROOTDIR/man)\n\n#  DOCDIR           - documentation root (DATAROOTDIR/doc/PROJECT_NAME)\n\n# Each CMAKE_INSTALL_<dir> value may be passed to the DESTINATION options of\n\n# install() commands for the corresponding file type.  If the includer does\n\n# not define a value the above-shown default will be used and the value will\n\n# appear in the cache for editing by the user.\n\n# Each CMAKE_INSTALL_FULL_<dir> value contains an absolute path constructed\n\n# from the corresponding destination by prepending (if necessary) the value\n\n# of CMAKE_INSTALL_PREFIX.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Nikita Krupen'ko <krnekit@gmail.com>\n\n# Copyright 2011 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Installation directories\n\n#\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Override this default 'lib' with 'lib64' iff:\n\n#  - we are on Linux system but NOT cross-compiling\n\n#  - we are NOT on debian\n\n#  - we are on a 64 bits system\n\n# reason is: amd64 ABI: http://www.x86-64.org/documentation/abi.pdf\n\n# For Debian with multiarch, use 'lib/${CMAKE_LIBRARY_ARCHITECTURE}' if\n\n# CMAKE_LIBRARY_ARCHITECTURE is set (which contains e.g. \"i386-linux-gnu\"\n\n# See http://wiki.debian.org/Multiarch\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# is this a debian system ?\n",
        "Line" : 83,
        "CharPositionInLine" : 38
      },
      "5" : {
        "Text" : "# not debian, rely on CMAKE_SIZEOF_VOID_P:\n",
        "Line" : 87,
        "CharPositionInLine" : 11
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# Values whose defaults are relative to DATAROOTDIR.  Store empty values in\n\n# the cache and store the defaults in local variables if the cache values are\n\n# not set explicitly.  This auto-updates the defaults as DATAROOTDIR changes.\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Result directories\n\n#\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "3party/glm/glm/CMakeLists.txt" : {
      "ObjectId" : "9dbe11cab2eda236e6de15dff2f9f9b9c1c0adae",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_library(glm STATIC glm.cpp)\n\n#add_library(glm_shared SHARED glm.cpp)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3party/glm/test/CMakeLists.txt" : {
      "ObjectId" : "ef6c2877ef7c1df037f1e97f1c961cb3a82dfcde",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3party/glm/test/bug/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3party/glm/test/core/CMakeLists.txt" : {
      "ObjectId" : "0f5b9b496347e038d1ef5be32e5134935c605cf1",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3party/glm/test/external/gli/CMakeLists.txt" : {
      "ObjectId" : "6b91c28801ad559b9f69b60a1122d5d25f1b43b7",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3party/glm/test/gtc/CMakeLists.txt" : {
      "ObjectId" : "895a99f0009cd29d9fa447e60773feaeeff56962",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3party/glm/test/gtx/CMakeLists.txt" : {
      "ObjectId" : "c0dda1852c4760b665ca7946f5bc4051dfccdf7d",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3party/glm/util/CMakeLists.txt" : {
      "ObjectId" : "3deeb15b086e68582f32c245e342d20eef859424",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3party/glm/util/FindGLM.cmake" : {
      "ObjectId" : "2d9009298ff0e5906a0e075d08790c860476e129",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindGLM - attempts to locate the glm matrix/vector library.\n\n#\n\n# This module defines the following variables (on success):\n\n#   GLM_INCLUDE_DIRS  - where to find glm/glm.hpp\n\n#   GLM_FOUND         - if the library was successfully located\n\n#\n\n# It is trying a few standard installation locations, but can be customized\n\n# with the following variables:\n\n#   GLM_ROOT_DIR      - root directory of a glm installation\n\n#                       Headers are expected to be found in either:\n\n#                       <GLM_ROOT_DIR>/glm/glm.hpp           OR\n\n#                       <GLM_ROOT_DIR>/include/glm/glm.hpp\n\n#                       This variable can either be a cmake or environment\n\n#                       variable. Note however that changing the value\n\n#                       of the environment varible will NOT result in\n\n#                       re-running the header search and therefore NOT\n\n#                       adjust the variables set by this module.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2012 Carsten Neumann\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# default search dirs\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# check environment variable\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# put user specified location at beginning of search\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# locate header\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "3party/gmock/CMakeLists.txt" : {
      "ObjectId" : "00660b1b665b0537033bd93d3060c504cff703ca",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3party/icu/CMakeLists.txt" : {
      "ObjectId" : "fb1ec350bb09b824ba79499cd01f23740979d62d",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3party/jansson/CMakeLists.txt" : {
      "ObjectId" : "8e4028d94ea19d88100f14e9a4dff804fab667ac",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3party/jansson/Makefile.am" : {
      "ObjectId" : "a40aa469c1ea97b43539481238ca83d57ddc7bf7",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# \"make distcheck\" builds the dvi target, so use it to check that the\n\n# documentation is built correctly.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3party/jansson/doc/Makefile.am" : {
      "ObjectId" : "5069623fa39866121748b7d58f893daa269b6eb0",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "3party/jansson/src/Makefile.am" : {
      "ObjectId" : "9d040f699a72ae701377b7154c9b0dc7bc04fbb0",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# These flags are gcc specific\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3party/jansson/test/Makefile.am" : {
      "ObjectId" : "86d1614e06a88ed49c42678ca59745cd63022d11",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "3party/jansson/test/bin/Makefile.am" : {
      "ObjectId" : "346db5d4e56c64fa8a8a82ed5883e2a1d85c79c3",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# for speed and Valgrind\n",
        "Line" : 5,
        "CharPositionInLine" : 19
      },
      "CommentCount" : 1
    },
    "3party/jansson/test/suites/Makefile.am" : {
      "ObjectId" : "a53eb07f13c81c52b6c73c1ba26b1be83ef61e38",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "3party/jansson/test/suites/api/Makefile.am" : {
      "ObjectId" : "9e60f485fc1b93f2da38490cdc81ee35d3a2c3b8",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# for speed and Valgrind\n",
        "Line" : 34,
        "CharPositionInLine" : 19
      },
      "CommentCount" : 1
    },
    "3party/liboauthcpp/CMakeLists.txt" : {
      "ObjectId" : "0f5e83fbd872a6c295433980d19b2e982cc46098",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3party/libtess2/CMakeLists.txt" : {
      "ObjectId" : "0670ccebc8d3ee71550c40ed6d1d5a2bca5ef227",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3party/minizip/CMakeLists.txt" : {
      "ObjectId" : "8e41eafbaab74a09e7b276cecbcd1e0af3b617df",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3party/minizip/Makefile.am" : {
      "ObjectId" : "d343011ebc3b3fd78d2bc3a29801a083c038cf0c",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "3party/open-location-code/BUILD" : {
      "ObjectId" : "d31b6b52f8ecb65481dc4216d147190cf1f7f0f6",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "3party/open-location-code/CMakeLists.txt" : {
      "ObjectId" : "1ceb85a1e5a646782883ccc30b68b2eec9c968aa",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3party/opening_hours/CMakeLists.txt" : {
      "ObjectId" : "ac4cc607872f6d972ac0337404d9d00398580858",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3party/opening_hours/opening_hours_integration_tests/CMakeLists.txt" : {
      "ObjectId" : "564e7c5ed34fe21d571d53bed0638a3198b73974",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3party/opening_hours/opening_hours_supported_features_tests/CMakeLists.txt" : {
      "ObjectId" : "03beb3ca6b29fc7f4a2f35e610edab7079717d6a",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3party/opening_hours/opening_hours_tests/CMakeLists.txt" : {
      "ObjectId" : "b8a892a4e3b8c418a80b40ce3827bd5d13673874",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3party/osrm/CMakeLists.txt" : {
      "ObjectId" : "01fe271b40a41e2ec13cdf4847b2d65c2b013bf9",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# if (APPLE)\n\n#  target_compile_options(${PROJECT_NAME} PUBLIC \"-fobjc-arc\")\n\n#endif()\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#omim_add_test_subdirectory(osrm_tests)\n\n#omim_add_test(${project} ${SRC})\n\n# omim_link_libraries(osrm ...)\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3party/osrm/osrm-backend/CMakeLists.txt" : {
      "ObjectId" : "87dec16335dfcd4a7fc397fb8af6b1e269076a0c",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check the release mode\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check if LTO is available\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -flto\")\n\n#set(CHECK_LTO_SRC \"int main(){return 0;}\")\n",
        "Line" : 138,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Since gcc 4.9 the LTO format is non-standart ('slim'), so we need to use the build-in tools\n",
        "Line" : 148,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Unlocks multithreaded structs are not availible on mobile devices.\n",
        "Line" : 161,
        "CharPositionInLine" : 37
      },
      "5" : {
        "Text" : "# Configuring compilers\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# using Clang\n\n#  -Weverything -Wno-c++98-compat -Wno-shadow -Wno-exit-time-destructors\n",
        "Line" : 166,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# using GCC\n",
        "Line" : 175,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# using mingw\n",
        "Line" : 177,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# define M_PI, M_1_PI etc.\n",
        "Line" : 178,
        "CharPositionInLine" : 41
      },
      "10" : {
        "Text" : "# using Intel C++\n",
        "Line" : 184,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# using Visual Studio C++\n",
        "Line" : 187,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# avoid min and max macros that can break compilation\n",
        "Line" : 190,
        "CharPositionInLine" : 30
      },
      "13" : {
        "Text" : "# define M_PI\n",
        "Line" : 191,
        "CharPositionInLine" : 39
      },
      "14" : {
        "Text" : "# Activate C++11\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Configuring other platform dependencies\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#Check Boost\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#Common libraries from omim\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#target_link_libraries(osrm-prepare ${CMAKE_THREAD_LIBS_INIT})\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Add RPATH info to executables so that when they are run after being installed\n\n# (i.e., from /usr/local/bin/) the linker can find library dependencies. For\n\n# more info see http://www.cmake.org/Wiki/CMake_RPATH_handling\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "3party/osrm/osrm-backend/cmake/CPackDebianConfig.cmake" : {
      "ObjectId" : "065c4290015ff367f232bacbf30187083c76eb95",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# To create a proper Debian/Ubuntu package, the following CMake\n\n# options should be used:\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3party/osrm/osrm-backend/cmake/CheckCXXCompilerFlag.cmake" : {
      "ObjectId" : "e396f75a92cdd7377b18145420617c9d967c6df4",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check whether the CXX compiler supports a given flag.\n\n# CHECK_CXX_COMPILER_FLAG(<flag> <var>)\n\n#  <flag> - the compiler flag\n\n#  <var>  - variable to store the result\n\n# This internally calls the check_cxx_source_compiles macro.  See help\n\n# for CheckCXXSourceCompiles for a listing of variables that can\n\n# modify the build.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Alexander Neundorf, <neundorf@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Some compilers do not fail with a bad flag\n",
        "Line" : 21,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# GNU\n\n# MSVC\n\n# HP\n\n# SunPro\n\n# XL\n",
        "Line" : 22,
        "CharPositionInLine" : 60
      },
      "CommentCount" : 4
    },
    "3party/osrm/osrm-backend/cmake/FindDebArch.cmake" : {
      "ObjectId" : "5b405bc39bab284e5303d524eed02b0cc49c271c",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright (C) 2013\tEmmanuel Roullit <emmanuel.roullit@gmail.com>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3party/osrm/osrm-backend/cmake/FindLua52.cmake" : {
      "ObjectId" : "04dcf7ac7f2e0bc45936b21db5f86fead96e9832",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Lua library\n\n# This module defines\n\n#  LUA52_FOUND, if false, do not try to link to Lua\n\n#  LUA_LIBRARIES\n\n#  LUA_INCLUDE_DIR, where to find lua.h\n\n#  LUA_VERSION_STRING, the version of Lua found (since CMake 2.8.8)\n\n#\n\n# Note that the expected include convention is\n\n#  #include \"lua.h\"\n\n# and not\n\n#  #include <lua/lua.h>\n\n# This is because, the lua location is not standardized and may exist\n\n# in locations other than lua/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n# Copyright 2013 for Project-OSRM, Lua5.1 => Lua5.2\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 36,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 37,
        "CharPositionInLine" : 13
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 38,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# include the math library for Unix\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# For Windows and Mac, don't need to explicitly include the math library\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LUA_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "3party/osrm/osrm-backend/cmake/FindLua53.cmake" : {
      "ObjectId" : "347a0936587fb67354d9846db4aa9489d5844a4e",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Lua library\n\n# This module defines\n\n#  LUA53_FOUND, if false, do not try to link to Lua\n\n#  LUA_LIBRARIES\n\n#  LUA_INCLUDE_DIR, where to find lua.h\n\n#  LUA_VERSION_STRING, the version of Lua found (since CMake 2.8.8)\n\n#\n\n# Note that the expected include convention is\n\n#  #include \"lua.h\"\n\n# and not\n\n#  #include <lua/lua.h>\n\n# This is because, the lua location is not standardized and may exist\n\n# in locations other than lua/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n# Copyright 2013 for Project-OSRM, Lua5.1 => Lua5.2\n\n# Copyright 2017 for LinDev, Lua5.2 => Lua5.3\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 37,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 38,
        "CharPositionInLine" : 13
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 39,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# include the math library for Unix\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# For Windows and Mac, don't need to explicitly include the math library\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LUA_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "3party/osrm/osrm-backend/cmake/FindLuaJIT.cmake" : {
      "ObjectId" : "e0866062c5727052f9b5c9304b7791ab152375de",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Lua library\n\n# This module defines\n\n#  LUAJIT_FOUND, if false, do not try to link to Lua\n\n#  LUAJIT_LIBRARIES\n\n#  LUAJIT_INCLUDE_DIR, where to find lua.h\n\n#\n\n# Note that the expected include convention is\n\n#  #include \"lua.h\"\n\n# and not\n\n#  #include <lua/lua.h>\n\n# This is because, the lua location is not standardized and may exist\n\n# in locations other than lua/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n\n#\n\n# ################\n\n# 2010 - modified for cronkite to find luajit instead of lua, as it was before.\n\n#\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 48,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 49,
        "CharPositionInLine" : 13
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 50,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# include the math library for Unix\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# For Windows and Mac, don't need to explicitly include the math library\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LUAJIT_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "3party/osrm/osrm-backend/cmake/FindLuabind.cmake" : {
      "ObjectId" : "4b99b3c0e681a8fcd320bb8f9d506e2f7844a2a9",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Luabind library\n\n# This module defines\n\n#  LUABIND_FOUND, if false, do not try to link to Luabind\n\n#  LUABIND_LIBRARIES\n\n#  LUABIND_INCLUDE_DIR, where to find luabind.hpp\n\n#\n\n# Note that the expected include convention is\n\n#  #include <luabind/luabind.hpp>\n\n# and not\n\n#  #include <luabind.hpp>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 25,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LUABIND_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "3party/osrm/osrm-backend/cmake/FindOSMPBF.cmake" : {
      "ObjectId" : "78b1d9dc82756143bf635a7f8392fb68dc9f93d1",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate OSMPBF library\n\n# This module defines\n\n#  OSMPBF_FOUND, if false, do not try to link to OSMPBF\n\n#  OSMPBF_LIBRARIES\n\n#  OSMPBF_INCLUDE_DIR, where to find OSMPBF.hpp\n\n#\n\n# Note that the expected include convention is\n\n#  #include <osmpbf/osmpbf.h>\n\n# and not\n\n#  #include <osmpbf.h>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 25,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set OSMPBF_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#MARK_AS_ADVANCED(OSMPBF_INCLUDE_DIR OSMPBF_LIBRARIES OSMPBF_LIBRARY OSMPBF_LIBRARY_DBG) \n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "3party/osrm/osrm-backend/cmake/FindSTXXL.cmake" : {
      "ObjectId" : "76a2722b03bc6909b8fda001d2b9cbd5ac5276d0",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate STXXL library\n\n# This module defines\n\n#  STXXL_FOUND, if false, do not try to link to libstxxl\n\n#  STXXL_LIBRARY\n\n#  STXXL_INCLUDE_DIR, where to find stxxl.h\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 22,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set STXXL_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "3party/osrm/osrm-backend/cmake/FindTBB.cmake" : {
      "ObjectId" : "e5ca10039128483d56557998cf18cd6a32003c02",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Intel Threading Building Blocks include paths and libraries\n\n# FindTBB.cmake can be found at https://code.google.com/p/findtbb/\n\n# Written by Hannes Hofmann <hannes.hofmann _at_ informatik.uni-erlangen.de>\n\n# Improvements by Gino van den Bergen <gino _at_ dtecta.com>,\n\n#   Florian Uhlig <F.Uhlig _at_ gsi.de>,\n\n#   Jiri Marsik <jiri.marsik89 _at_ gmail.com>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The MIT License\n\n#\n\n# Copyright (c) 2011 Hannes Hofmann\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\n# THE SOFTWARE.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GvdB: This module uses the environment variable TBB_ARCH_PLATFORM which defines architecture and compiler.\n\n#   e.g. \"ia32/vc8\" or \"em64t/cc4.1.0_libc2.4_kernel2.6.16.21\"\n\n#   TBB_ARCH_PLATFORM is set by the build script tbbvars[.bat|.sh|.csh], which can be found\n\n#   in the TBB installation directory (TBB_INSTALL_DIR).\n\n#\n\n# GvdB: Mac OS X distribution places libraries directly in lib directory.\n\n#\n\n# For backwards compatibility, you may explicitely set the CMake variables TBB_ARCHITECTURE and TBB_COMPILER.\n\n# TBB_ARCHITECTURE [ ia32 | em64t | itanium ]\n\n#   which architecture to use\n\n# TBB_COMPILER e.g. vc9 or cc3.2.3_libc2.3.2_kernel2.4.21 or cc4.0.1_os10.4.9\n\n#   which compiler to use (detected automatically on Windows)\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This module respects\n\n# TBB_INSTALL_DIR or $ENV{TBB21_INSTALL_DIR} or $ENV{TBB_INSTALL_DIR}\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This module defines\n\n# TBB_INCLUDE_DIRS, where to find task_scheduler_init.h, etc.\n\n# TBB_LIBRARY_DIRS, where to find libtbb, libtbbmalloc\n\n# TBB_DEBUG_LIBRARY_DIRS, where to find libtbb_debug, libtbbmalloc_debug\n\n# TBB_INSTALL_DIR, the base TBB install directory\n\n# TBB_LIBRARIES, the libraries to link against to use TBB.\n\n# TBB_DEBUG_LIBRARIES, the libraries to link against to use TBB with debug symbols.\n\n# TBB_FOUND, If false, don't try to use TBB.\n\n# TBB_INTERFACE_VERSION, as defined in tbb/tbb_stddef.h\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# has em64t/vc8 em64t/vc9\n\n# has ia32/vc7.1 ia32/vc8 ia32/vc9\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Todo: add other Windows compilers such as ICL.\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# MAC\n",
        "Line" : 83,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# libs: libtbb.dylib, libtbbmalloc.dylib, *_debug\n",
        "Line" : 85,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# default flavor on apple: ia32/cc4.0.1_os10.4.9\n\n# Jiri: There is no reason to presume there is only one flavor and\n\n#       that user's setting of variables should be ignored.\n",
        "Line" : 90,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# LINUX\n",
        "Line" : 104,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# has em64t/cc3.2.3_libc2.3.2_kernel2.4.21 em64t/cc3.3.3_libc2.3.3_kernel2.6.5 em64t/cc3.4.3_libc2.3.4_kernel2.6.9 em64t/cc4.1.0_libc2.4_kernel2.6.16.21\n\n# has ia32/*\n\n# has itanium/*\n",
        "Line" : 110,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# SUN\n\n# not yet supported\n\n# has em64t/cc3.4.3_kernel5.10\n\n# has ia32/*\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-- Clear the public variables\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#-- Find TBB install dir and set ${_TBB_INSTALL_DIR} and cached ${TBB_INSTALL_DIR}\n\n# first: use CMake variable TBB_INSTALL_DIR\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# second: use environment variable\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Intel recommends setting TBB21_INSTALL_DIR\n",
        "Line" : 140,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# third: try to find path automatically\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# sanity check\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# finally: set the cached CMake variable TBB_INSTALL_DIR\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#-- A macro to rewrite the paths of the library. This is necessary, because\n\n#   find_library() always found the em64t/vc9 version of the TBB libs\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#    if (NOT \"${_TBB_ARCHITECTURE}\" STREQUAL \"em64t\")\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#    endif (NOT \"${_TBB_ARCHITECTURE}\" STREQUAL \"em64t\")\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#-- Look for include directory and set ${TBB_INCLUDE_DIR}\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Jiri: tbbvars now sets the CPATH environment variable to the directory\n\n#       containing the headers.\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#-- Look for libraries\n\n# GvdB: $ENV{TBB_ARCH_PLATFORM} is set by the build script tbbvars[.bat|.sh|.csh]\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Jiri: This block isn't mutually exclusive with the previous one\n\n#       (hence no else), instead I test if the user really specified\n\n#       the variables in question.\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# HH: deprecated\n",
        "Line" : 205,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Jiri: It doesn't hurt to look in more places, so I store the hints from\n\n#       ENV{TBB_ARCH_PLATFORM} and the TBB_ARCHITECTURE and TBB_COMPILER\n\n#       variables and search them both.\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# GvdB: Mac OS X distribution places libraries directly in lib directory.\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Jiri: No reason not to check the default paths. From recent versions,\n\n#       tbbvars has started exporting the LIBRARY_PATH and LD_LIBRARY_PATH\n\n#       variables, which now point to the directories of the lib files.\n\n#       It all makes more sense to use the ${_TBB_LIBRARY_DIR} as a HINTS\n\n#       argument instead of the implicit PATHS as it isn't hard-coded\n\n#       but computed by system introspection. Searching the LIBRARY_PATH\n\n#       and LD_LIBRARY_PATH environment variables is now even more important\n\n#       that tbbvars doesn't export TBB_ARCH_PLATFORM and it facilitates\n\n#       the use of TBB built from sources.\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#Extract path from TBB_LIBRARY name\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#TBB_CORRECT_LIB_DIR(TBB_LIBRARY)\n\n#TBB_CORRECT_LIB_DIR(TBB_MALLOC_LIBRARY)\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#-- Look for debug libraries\n\n# Jiri: Changed the same way as for the release libraries.\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Jiri: Self-built TBB stores the debug libraries in a separate directory.\n\n#       Extract path from TBB_LIBRARY_DEBUG name\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#TBB_CORRECT_LIB_DIR(TBB_LIBRARY_DEBUG)\n\n#TBB_CORRECT_LIB_DIR(TBB_MALLOC_LIBRARY_DEBUG)\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Jiri: Self-built TBB stores the debug libraries in a separate directory.\n",
        "Line" : 260,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# do only throw fatal, if this pkg is REQUIRED\n",
        "Line" : 270,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 38
    },
    "3party/osrm/osrm-backend/cmake/FingerPrint-Config.cmake" : {
      "ObjectId" : "a3325d30593c80bd5355d37ae7ea84917a3d0b72",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3party/osrm/osrm-backend/cmake/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "1bf0230088768cb8d053883c3fda8b319414782e",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n#  get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n#  git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n#  git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 45,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 49,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n#\t(ARGN MATCHES \"||\") OR\n\n#\t(ARGN MATCHES \"\\\\;\"))\n\n#\tmessage(\"Please report the following error to the project!\")\n\n#\tmessage(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 90,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 98,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 6
    },
    "3party/osrm/osrm-backend/cmake/check_luabind.cmake" : {
      "ObjectId" : "c4bf6365faaa9a9095a310c451ef991259fc969f",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3party/osrm/osrm-backend/third_party/libosmium/CMakeLists.txt" : {
      "ObjectId" : "5e70a9935aa904792f163e3a52b8865d669dea01",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  CMake Config\n\n#\n\n#  Libosmium\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Project version\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Build options\n\n#\n\n#  (Change with -DOPTION=VALUE on cmake command line.)\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Find external dependencies\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Decide which C++ version to use (Minimum/default: C++11).\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# following only available from cmake 2.8.12:\n\n#   add_compile_options(-std=${USE_CPP_VERSION})\n\n# so using this instead:\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Compiler and Linker flags\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Build Type\n\n#\n\n#-----------------------------------------------------------------------------\n\n# In 'Dev' mode: compile with very strict warnings and turn them into errors.\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Force RelWithDebInfo build type if none was given\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Unit and data tests\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Optional \"cppcheck\" target that checks C++ code\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# cpp doesn't find system includes for some reason, suppress that report\n",
        "Line" : 206,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Examples, benchmarks and documentation\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Headers\n\n#\n\n#  This will try to compile include files on their own to detect missing\n\n#  include directives and other dependency-related problems. Note that if this\n\n#  work, it is not enough to be sure it will compile in production code.\n\n#  But if it reports an error we know we are missing something.\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Create a dummy .cpp file that includes the header file we want to\n\n# check.\n",
        "Line" : 278,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# There is no way in CMake to just compile but not link a C++ file,\n\n# so we pretend to build a library here.\n",
        "Line" : 283,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "#### this is better but only supported from cmake 3.0:\n\n###add_library(${libname} OBJECT ${DUMMYCPP} include/${hpp})\n",
        "Line" : 287,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# We only have a copy of this file so we can use older boost versions which\n\n# don't have it. We probably don't want to install it.\n\n#install(FILES include/boost_unicode_iterator.hpp DESTINATION include)\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Packaging\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Print warnings at the end\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "3party/osrm/osrm-backend/third_party/libosmium/benchmarks/CMakeLists.txt" : {
      "ObjectId" : "6a4ca162dba30a2fdc4c4571d6ee1713698f9e2b",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  CMake Config\n\n#\n\n#  Libosmium benchmarks\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Configure benchmarks\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "3party/osrm/osrm-backend/third_party/libosmium/cmake/FindGem.cmake" : {
      "ObjectId" : "f5389d1e8320aebc66fac0856848b7d09b45c802",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Author thomas.roehr@dfki.de\n\n#\n\n# Version 0.3 2013-07-02\n\n#       - rely on `gem content` to find library and header\n\n#       - introduce GEM_OS_PKG to allow search via pkgconfig\n\n# Version 0.2 2010-01-14\n\n#       - add support for searching for multiple gems\n\n# Version 0.1 2010-12-15\n\n# \t- support basic search functionality \n\n#       - tested to find rice\n\n#\n\n# OUTPUT:\n\n#\n\n# GEM_INCLUDE_DIRS\tAfter successful search contains the include directores\n\n#\n\n# GEM_LIBRARIES\t\tAfter successful search contains the full path of each found library\n\n#\n\n#\n\n# Usage: \n\n# set(GEM_DEBUG TRUE)\n\n# find_package(Gem COMPONENTS rice hoe)\n\n# include_directories(${GEM_INCLUDE_DIRS})\n\n# target_link_libraries(${GEM_LIBRARIES}\n\n#\n\n# in case pkg-config should be used to search for the os pkg, set GEM_OS_PKG, i.e.\n\n# set(GEM_OS_PKG TRUE)\n\n#\n\n# Check for how 'gem' should be called\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Making backward compatible\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If the gem is installed as a gem\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Use `gem content <gem-name>` to extract current information about installed gems\n\n# Store the information into ${GEM_LOCAL_INFO}\n",
        "Line" : 61,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Create a list from the output results of the gem command\n",
        "Line" : 86,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "# Convert so that only '/' Unix path separator are being using\n\n# needed to do proper regex matching\n",
        "Line" : 90,
        "CharPositionInLine" : 16
      },
      "6" : {
        "Text" : "# Identify library -- checking for a library in the gems 'lib' (sub)directory\n\n# Search for an existing library, but only within the gems folder\n",
        "Line" : 94,
        "CharPositionInLine" : 16
      },
      "7" : {
        "Text" : "# Identify headers\n\n# Checking for available headers in an include directory\n",
        "Line" : 104,
        "CharPositionInLine" : 16
      },
      "8" : {
        "Text" : "# Compact the lists\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "3party/osrm/osrm-backend/third_party/libosmium/cmake/FindOSMPBF.cmake" : {
      "ObjectId" : "deeebd8b6c94eec781d2921eaf693a6031ef2f35",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Locate OSMPBF library\n\n#\n\n# This module defines\n\n#  OSMPBF_FOUND        - if false, do not try to link to OSMPBF\n\n#  OSMPBF_LIBRARIES    - full library path name\n\n#  OSMPBF_INCLUDE_DIRS - where to find OSMPBF.hpp\n\n#\n\n# Note that the expected include convention is\n\n#  #include <osmpbf/osmpbf.h>\n\n# and not\n\n#  #include <osmpbf.h>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 23,
        "CharPositionInLine" : 19
      },
      "2" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set OSMPBF_FOUND to TRUE if\n\n# all listed variables are TRUE.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Copy the results to the output variables.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "3party/osrm/osrm-backend/third_party/libosmium/cmake/FindOsmium.cmake" : {
      "ObjectId" : "1de41a0226869acdc16ba6dc459e75519c034324",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------\n\n#\n\n#  FindOsmium.cmake\n\n#\n\n#  Find the Libosmium headers and, optionally, several components needed for\n\n#  different Libosmium functions.\n\n#\n\n#----------------------------------------------------------------------\n\n#\n\n#  Usage:\n\n#\n\n#    Copy this file somewhere into your project directory, where cmake can\n\n#    find it. Usually this will be a directory called \"cmake\" which you can\n\n#    add to the CMake module search path with the following line in your\n\n#    CMakeLists.txt:\n\n#\n\n#      list(APPEND CMAKE_MODULE_PATH \"${CMAKE_SOURCE_DIR}/cmake\")\n\n#\n\n#    Then add the following in your CMakeLists.txt:\n\n#\n\n#      find_package(Osmium REQUIRED COMPONENTS <XXX>)\n\n#      include_directories(${OSMIUM_INCLUDE_DIRS})\n\n#\n\n#    For the <XXX> substitute a space separated list of one or more of the\n\n#    following components:\n\n#\n\n#      pbf        - include libraries needed for PBF input and output\n\n#      xml        - include libraries needed for XML input and output\n\n#      io         - include libraries needed for any type of input/output\n\n#      geos       - include if you want to use any of the GEOS functions\n\n#      gdal       - include if you want to use any of the OGR functions\n\n#      proj       - include if you want to use any of the Proj.4 functions\n\n#      sparsehash - include if you use the sparsehash index\n\n#\n\n#    You can check for success with something like this:\n\n#\n\n#      if(NOT OSMIUM_FOUND)\n\n#          message(WARNING \"Libosmium not found!\\n\")\n\n#      endif()\n\n#\n\n#----------------------------------------------------------------------\n\n#\n\n#  Variables:\n\n#\n\n#    OSMIUM_FOUND         - True if Osmium found.\n\n#    OSMIUM_INCLUDE_DIRS  - Where to find include files.\n\n#    OSMIUM_XML_LIBRARIES - Libraries needed for XML I/O.\n\n#    OSMIUM_PBF_LIBRARIES - Libraries needed for PBF I/O.\n\n#    OSMIUM_IO_LIBRARIES  - Libraries needed for XML or PBF I/O.\n\n#    OSMIUM_LIBRARIES     - All libraries Osmium uses somewhere.\n\n#\n\n#----------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 65,
        "CharPositionInLine" : 19
      },
      "3" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set OSMIUM_FOUND to TRUE if\n\n# all listed variables are TRUE.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Copy the results to the output variables.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#----------------------------------------------------------------------\n\n#\n\n#  Check for optional components\n\n#\n\n#----------------------------------------------------------------------\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#----------------------------------------------------------------------\n\n# Component 'io' is an alias for 'pbf' and 'xml'\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#----------------------------------------------------------------------\n\n# Component 'ogr' is an alias for 'gdal'\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#----------------------------------------------------------------------\n\n# Component 'pbf'\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#----------------------------------------------------------------------\n\n# Component 'xml'\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#----------------------------------------------------------------------\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#----------------------------------------------------------------------\n\n# Component 'geos'\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#----------------------------------------------------------------------\n\n# Component 'gdal' (alias 'ogr')\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#----------------------------------------------------------------------\n\n# Component 'proj'\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#----------------------------------------------------------------------\n\n# Component 'sparsehash'\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Find size of sparsetable::size_type. This does not work on older\n\n# CMake versions because they can do this check only in C, not in C++.\n",
        "Line" : 227,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# Falling back to checking size_t if google::sparsetable<int>::size_type\n\n# could not be checked.\n",
        "Line" : 236,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Sparsetable::size_type must be at least 8 bytes (64bit), otherwise\n\n# OSM object IDs will not fit.\n",
        "Line" : 243,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "#----------------------------------------------------------------------\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#----------------------------------------------------------------------\n\n#\n\n#  Check that all required libraries are available\n\n#\n\n#----------------------------------------------------------------------\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#----------------------------------------------------------------------\n\n#\n\n#  Add compiler flags\n\n#\n\n#----------------------------------------------------------------------\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Disable warning C4068: \"unknown pragma\" because we want it to ignore\n\n# pragmas for other compilers.\n",
        "Line" : 297,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Disable warning C4715: \"not all control paths return a value\" because\n\n# it generates too many false positives.\n",
        "Line" : 301,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Disable warning C4351: new behavior: elements of array '...' will be\n\n# default initialized. The new behaviour is correct and we don't support\n\n# old compilers anyway.\n",
        "Line" : 305,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# following only available from cmake 2.8.12:\n\n#   add_compile_options(-stdlib=libc++)\n\n# so using this instead:\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#----------------------------------------------------------------------\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# This is a set of recommended warning options that can be added when compiling\n\n# libosmium code.\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 27
    },
    "3party/osrm/osrm-backend/third_party/libosmium/doc/CMakeLists.txt" : {
      "ObjectId" : "9d69a16bd9e7d8a21f970633e3b0fd9ce8511367",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  CMake Config\n\n#\n\n#  Libosmium documentation\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    install(DIRECTORY \"${CMAKE_CURRENT_BINARY_DIR}/html\"\n\n#            DESTINATION \"share/doc/libosmium-dev\")\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "3party/osrm/osrm-backend/third_party/libosmium/examples/CMakeLists.txt" : {
      "ObjectId" : "c9f59603dc26fc4767db1a221ba2bc8c4532d263",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  CMake Config\n\n#\n\n#  Libosmium examples\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Examples depending on wingetopt\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Examples depending on SparseHash\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Examples depending on Boost Program Options\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Examples depending on GDAL/PROJ.4/SparseHash\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Configure examples\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "3party/osrm/osrm-backend/third_party/libosmium/test/CMakeLists.txt" : {
      "ObjectId" : "7ba455b02954374c8a3c647d7e7f0a90abb0cf6b",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  CMake Config\n\n#\n\n#  Libosmium unit tests\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Define function for adding tests\n\n#\n\n#  add_unit_tests(group name [ENABLE_IF bool] [LIBS libs] [LABELS labels])\n\n#\n\n#  group  - test group (directory)\n\n#  name   - name of test\n\n#  bool   - boolean variable telling whether the test should be run (optional)\n\n#  libs   - lib or libs that should be used when compiling test (optional)\n\n#  labels - additional labels this test should get (optional)\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Add all tests.\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Check that all tests available in test/t/*/test_*.cpp are run.\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "3party/osrm/osrm-backend/third_party/libosmium/test/data-tests/CMakeLists.txt" : {
      "ObjectId" : "89aead98ee698efa821c5c695162f0b51f080757",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  CMake Config\n\n#\n\n#  Libosmium data tests\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  testcases\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  xml\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  overview\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  multipolygon\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "3party/osrm/osrm-backend/third_party/libosmium/test/data-tests/run-testdata-multipolygon.cmake" : {
      "ObjectId" : "0d08f5a525e1ab45aa61fba33b34f757aa939907",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Helper script that runs the 'multipolygon' test.\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Remove files that might be left over from previous run\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Create multipolygons from test data.\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n#\n\n#  Compare created multipolygons with reference data.\n\n#\n\n#-----------------------------------------------------------------------------\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "3party/protobuf/CMakeLists.txt" : {
      "ObjectId" : "1a9addabf9bc026c073a25f386385df0820d9cc0",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3party/pugixml/CMakeLists.txt" : {
      "ObjectId" : "04b6d8d001cff0bdf30ff5db0d9161505158b23a",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3party/pugixml/scripts/CMakeLists.txt" : {
      "ObjectId" : "40a7ab0e0039a647ceb6efcbe56f7cb224232950",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Pre-defines standard install locations on *nix systems.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Enable C++11 long long for compilers that are capable of it\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3party/sdf_image/CMakeLists.txt" : {
      "ObjectId" : "535df18777931358e923feb8cfa0b61fbfe3f88d",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3party/stb_image/CMakeLists.txt" : {
      "ObjectId" : "4f78357e1563a41155ec33379bb9eb55e290f8f0",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3party/succinct/CMakeLists.txt" : {
      "ObjectId" : "4ba7f7a366e65e53ce27c194d3737ec44234c8fa",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3party/succinct/perftest/CMakeLists.txt" : {
      "ObjectId" : "8240a1bca33fe252469a9558cf00fbd4de6693cf",
      "LastModified" : "2019-01-28T10:00:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3party/vulkan_wrapper/CMakeLists.txt" : {
      "ObjectId" : "1f8c540eee34a2590a6389ebdf45a7120cd61d5a",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "CMakeLists.txt" : {
      "ObjectId" : "b36413852561964414b929f6b7ec0dc63aea7572",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# End of setting the target platform\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set build type:\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# End of setting build type\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Options\n\n# Call `make package` after cmake to build design tool.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set environment variables\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# End of setting environment variables\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Scripts\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Find installed packages\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#do nothing\n",
        "Line" : 214,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Include subdirectories\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Only options related to warnings should be placed here.\n\n# Other options should be set before all add_subdirectory calls.\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "android/jni/CMakeLists.txt" : {
      "ObjectId" : "aeaac9eab97ba0beedcea4c67f97b41417cfe9b6",
      "LastModified" : "2019-04-02T17:41:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# JNI headers\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# JNI sources\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Android libs\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# MapsWithMe libs\n",
        "Line" : 110,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "base/CMakeLists.txt" : {
      "ObjectId" : "ef270f33ce61da3d7a97a306bbbf29ed8da5aafb",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "base/base_tests/CMakeLists.txt" : {
      "ObjectId" : "f09c3239a4299dd4d7401a91746c3408e00d1a89",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/OmimHelpers.cmake" : {
      "ObjectId" : "2a9c52690179095e3d4a65e181af166d1e8a1721",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Function for setting target platform:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Functions for using in subdirectories\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Append Release/Debug flags:\n",
        "Line" : 207,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# CMAKE_CXX_STANDARD 14 flags:\n",
        "Line" : 250,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# CMake automatically adds additional compile options after linking.\n\n# For example '-fPIC' flag on skin_generator_tool, because it is linked to Qt libs.\n\n# We force correct flag for executables.\n",
        "Line" : 278,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Force gcc first search gch header in pch_exe/pch_lib:\n",
        "Line" : 288,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "coding/CMakeLists.txt" : {
      "ObjectId" : "1a7aa65435f6a7cc2d11ed021df3c58c8cb55568",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "coding/coding_tests/CMakeLists.txt" : {
      "ObjectId" : "04f0c9d9fde339ebd2d2521faa63ef16c9dfc29e",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "descriptions/CMakeLists.txt" : {
      "ObjectId" : "d8952eee7aecbfca2ce79e882900c69ea5475c7a",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "descriptions/descriptions_tests/CMakeLists.txt" : {
      "ObjectId" : "52cfc02c4b42a0bec2cb529f1f64b46db619f4af",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "drape/CMakeLists.txt" : {
      "ObjectId" : "f12c6a3dfead7dad92981b084282b89ec8bb5fcb",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "drape/drape_tests/CMakeLists.txt" : {
      "ObjectId" : "5bfbfa48dc5b2e78cdf2817ea0867fb0d82deec1",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "drape_frontend/CMakeLists.txt" : {
      "ObjectId" : "41977ea4e59e6666f7f85d30b2c5f1ae7365ee90",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "drape_frontend/drape_frontend_tests/CMakeLists.txt" : {
      "ObjectId" : "bea96c07d8627fbdedab939ded3578e367331fc8",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "editor/CMakeLists.txt" : {
      "ObjectId" : "3d502a887bf118d73ff9a900ec25d70784d65a57",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "editor/editor_tests/CMakeLists.txt" : {
      "ObjectId" : "dc31063839242ece6044eff40573baa96fc758a4",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "editor/editor_tests_support/CMakeLists.txt" : {
      "ObjectId" : "f7f25f92dbb975e13cb567c95fd764ac5d2a4c1d",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "editor/osm_auth_tests/CMakeLists.txt" : {
      "ObjectId" : "09f3a72c498dc00d642994f59c0e4f57171bbb3c",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "feature_list/CMakeLists.txt" : {
      "ObjectId" : "caf7c3432fff1e1cae3874dcadb17816da0d2859",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "generator/CMakeLists.txt" : {
      "ObjectId" : "1592d7589b853ebfa4058c99b9f44c77d5e6777a",
      "LastModified" : "2019-04-16T11:07:45Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "generator/booking_quality_check/CMakeLists.txt" : {
      "ObjectId" : "f312bfe5fbd9ff0e82c6cf79d98e8bc0f89ed8fe",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "generator/extract_addr/CMakeLists.txt" : {
      "ObjectId" : "f49d6fcc1a5fc328fae3e242ba412f989020a4b1",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "generator/feature_segments_checker/CMakeLists.txt" : {
      "ObjectId" : "84f583bed5146e84de0282da913cd9d90a20dce1",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "generator/generator_tests/CMakeLists.txt" : {
      "ObjectId" : "374773a54971d46b47716bbf93721c775692427b",
      "LastModified" : "2019-04-16T11:07:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO(syershov): Use FindPackage.\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "generator/generator_tests_support/CMakeLists.txt" : {
      "ObjectId" : "558acee7fa532b06144ea06f890bcabfa9108ee4",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "generator/generator_tool/CMakeLists.txt" : {
      "ObjectId" : "6a81eca3bff6954cb968abfa5754fae95ee26cdb",
      "LastModified" : "2019-04-17T09:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "generator/mwm_diff/CMakeLists.txt" : {
      "ObjectId" : "b9974293e8a97a60bfc40b8932661767c764399a",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "generator/mwm_diff/mwm_diff_tests/CMakeLists.txt" : {
      "ObjectId" : "b7dd576914644d650a9cd194ba129816e65401b5",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "generator/mwm_diff/pymwm_diff/CMakeLists.txt" : {
      "ObjectId" : "582d1bb7e6d742e4b5d650b06403e46c85022a14",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "generator/restaurants_info/CMakeLists.txt" : {
      "ObjectId" : "9cec0c38f06663ec3574b06f61f4c85ebc876f82",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "generator/srtm_coverage_checker/CMakeLists.txt" : {
      "ObjectId" : "cc90738390b744a865549d2e4432f4108f5971c5",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "geocoder/CMakeLists.txt" : {
      "ObjectId" : "5c82e4398bc6bf00760723787069056b12eaee05",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "geocoder/geocoder_cli/CMakeLists.txt" : {
      "ObjectId" : "d2e5655ab6feea0c4c1d4d501f9ce18331896439",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "geocoder/geocoder_tests/CMakeLists.txt" : {
      "ObjectId" : "a59bd7e1acf6a7fbb5dbf4d5d46541cd2a68b502",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "geometry/CMakeLists.txt" : {
      "ObjectId" : "da5f982e249cdacbc0f6e04844f4110f7e31215f",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "geometry/geometry_tests/CMakeLists.txt" : {
      "ObjectId" : "736c4041f689a74e141eeca0daae86a179473627",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "indexer/CMakeLists.txt" : {
      "ObjectId" : "33ded896ca72cbab5bc4f1919d3c6c62c932f60e",
      "LastModified" : "2019-04-17T09:49:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# it's in indexer due to editor which is in indexer and depends on postcodes_marcher\n",
        "Line" : 104,
        "CharPositionInLine" : 26
      },
      "1" : {
        "Text" : "# it's in indexer due to editor which is in indexer and depends on postcodes_marcher\n",
        "Line" : 105,
        "CharPositionInLine" : 27
      },
      "2" : {
        "Text" : "# it's in indexer because of CategoriesHolder dependency.\n",
        "Line" : 115,
        "CharPositionInLine" : 28
      },
      "3" : {
        "Text" : "# it's in indexer because of CategoriesHolder dependency.\n",
        "Line" : 116,
        "CharPositionInLine" : 30
      },
      "4" : {
        "Text" : "# it's in indexer because of CategoriesHolder dependency.\n",
        "Line" : 117,
        "CharPositionInLine" : 28
      },
      "5" : {
        "Text" : "# it's in indexer because of CategoriesHolder dependency.\n",
        "Line" : 118,
        "CharPositionInLine" : 30
      },
      "CommentCount" : 6
    },
    "indexer/indexer_tests/CMakeLists.txt" : {
      "ObjectId" : "7a89076d94db9afb4fdbcc730c1a43ecbcb0254b",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "kml/CMakeLists.txt" : {
      "ObjectId" : "9bdd70f049e838c2c68e6f40d598b6cb5dec7ae3",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "kml/kml_tests/CMakeLists.txt" : {
      "ObjectId" : "b548e9f6332f1429a65a3c00a48ee4ec8127495e",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "kml/pykmlib/CMakeLists.txt" : {
      "ObjectId" : "d7418de919a9877947cb6b17c416cbb6ac587e24",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "local_ads/CMakeLists.txt" : {
      "ObjectId" : "60600a09268f2198cfb3318df22461bdf49dc8ca",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "local_ads/local_ads_tests/CMakeLists.txt" : {
      "ObjectId" : "b618c8afa19df572d1830fac8455bd54636d7166",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "local_ads/pylocal_ads/CMakeLists.txt" : {
      "ObjectId" : "53dc2b4a7005f8fe860831335cb41e52dd60b70d",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "map/CMakeLists.txt" : {
      "ObjectId" : "e89a3f48e79cdcf6be01d6a14061df34dc4ec58d",
      "LastModified" : "2019-04-17T09:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "map/benchmark_tool/CMakeLists.txt" : {
      "ObjectId" : "f766bad2a107bfbd54333072159369670657f9e0",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "map/extrapolation_benchmark/CMakeLists.txt" : {
      "ObjectId" : "bfc85cba630a65d48717912b8bdcb3ba1c58a2dd",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "map/map_integration_tests/CMakeLists.txt" : {
      "ObjectId" : "5e75aa6fb6d3fecb457f90557a0e03de85060bd3",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "map/map_tests/CMakeLists.txt" : {
      "ObjectId" : "4b6991ff595de7a47139bd420001f8e34e35e9fd",
      "LastModified" : "2019-04-17T09:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "map/mwm_tests/CMakeLists.txt" : {
      "ObjectId" : "1dee2f04d1e45c5c6020860cfba1ed6405a630e4",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "map/style_tests/CMakeLists.txt" : {
      "ObjectId" : "bd033e6947b49bcfd816365f139cd7505e48df39",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "mapshot/CMakeLists.txt" : {
      "ObjectId" : "cf4d995f7d5237fe2c6c4a27327611c49f64f1c6",
      "LastModified" : "2019-04-17T09:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "metrics/CMakeLists.txt" : {
      "ObjectId" : "d29c30fb990b7fdf09733cf47ef2a55792f7d332",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "metrics/metrics_tests/CMakeLists.txt" : {
      "ObjectId" : "25e3d5c3a752a9f7de385d192364d41e7529c7a1",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "metrics/metrics_tests_support/CMakeLists.txt" : {
      "ObjectId" : "8622ec56aa982aedb31d7a52d599e4e382b8a395",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "openlr/CMakeLists.txt" : {
      "ObjectId" : "ea59cba7c6f2b82e19ea1c5ca02a30041a51fb53",
      "LastModified" : "2019-04-17T09:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "openlr/openlr_match_quality/CMakeLists.txt" : {
      "ObjectId" : "604fa3758c07ff4c9a3057e5f98c7623c72c538b",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "openlr/openlr_match_quality/openlr_assessment_tool/CMakeLists.txt" : {
      "ObjectId" : "f14caaef12fd61271f5ce57dcc9c7110715e9a48",
      "LastModified" : "2019-04-17T09:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "openlr/openlr_stat/CMakeLists.txt" : {
      "ObjectId" : "ba57cd36c768cf8f5d686679395f38ccfae32a70",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "openlr/openlr_tests/CMakeLists.txt" : {
      "ObjectId" : "18ece14f376c97124573d359bb6781b5b3008786",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "partners_api/CMakeLists.txt" : {
      "ObjectId" : "97f8cccb03db8b6ab6fb80b58147acfa98e64837",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "partners_api/partners_api_tests/CMakeLists.txt" : {
      "ObjectId" : "163b0f3f2df20ce31b84c8b47e171c98dfae89a4",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platform/CMakeLists.txt" : {
      "ObjectId" : "e95d80aac63a02d0f3ce34e8d62e4abd3f163448",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# neither iPhone nor Android\n",
        "Line" : 87,
        "CharPositionInLine" : 7
      },
      "CommentCount" : 1
    },
    "platform/platform_tests/CMakeLists.txt" : {
      "ObjectId" : "b426281946ffe482f76b59182a13a5b5ff333869",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "platform/platform_tests_support/CMakeLists.txt" : {
      "ObjectId" : "2a48c71b479f782ae462ef89eb502aa88f1bb52f",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pyhelpers/CMakeLists.txt" : {
      "ObjectId" : "c6f92447f7c5a88cfc921d549c7c4ad4ffb84615",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "qt/CMakeLists.txt" : {
      "ObjectId" : "4c1eb5b2df800376450b824e880aab03c5b6be02",
      "LastModified" : "2019-04-17T09:49:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generate DMG\n",
        "Line" : 273,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "qt/qt_common/CMakeLists.txt" : {
      "ObjectId" : "014cd8b085bbe09d09f06b6b893cfcdeeaf9cd81",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "qt_tstfrm/CMakeLists.txt" : {
      "ObjectId" : "02c0fd7c006506c5e7d06a7c2fc5b360d56bc4d3",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "routing/CMakeLists.txt" : {
      "ObjectId" : "a6b1552e3d3558cb574d6642d7bcc07a16b439e2",
      "LastModified" : "2019-04-17T09:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "routing/routing_benchmarks/CMakeLists.txt" : {
      "ObjectId" : "ef9ae89d41089f9940a2d71ea6931aa4a1f1fff0",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "routing/routing_consistency_tests/CMakeLists.txt" : {
      "ObjectId" : "cffdc4682cd5903da3e99f5625ec33b2cbb1b8ea",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This subproject implements routing consistency tests.\n\n# This tests are launched on the whole world dataset.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Not using omim_add_test because we don't need testingmain.cpp\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "routing/routing_integration_tests/CMakeLists.txt" : {
      "ObjectId" : "973091ae137941dcf2df7c264b7acf2fcb88915d",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This subproject implements integration tests.\n\n# This tests are launched on the whole world dataset.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# It is recommended to place tests here in the following cases:\n\n# - tests are written to be launch on the whole world dataset;\n\n# - tests covers significant number of subsystems;\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "routing/routing_quality/CMakeLists.txt" : {
      "ObjectId" : "62cfc445b5ce06b09f6b2872f2bfec7b40d95ebb",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "routing/routing_quality/routing_quality_tests/CMakeLists.txt" : {
      "ObjectId" : "5f20a69a7442826545bdc9e1e635458d4cad2251",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "routing/routing_quality/routing_quality_tool/CMakeLists.txt" : {
      "ObjectId" : "84c8a6e28a08184084ce99e7426deec36a34b719",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "routing/routing_tests/CMakeLists.txt" : {
      "ObjectId" : "adf4e3cdf646c5fbe17a520c456d0f319a399575",
      "LastModified" : "2019-04-17T09:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "routing_common/CMakeLists.txt" : {
      "ObjectId" : "3cb319eeac1c879740f283bb8526b71d37f4fde6",
      "LastModified" : "2019-04-17T09:49:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is generated by running ../configure.sh script.\n",
        "Line" : 13,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "routing_common/routing_common_tests/CMakeLists.txt" : {
      "ObjectId" : "f88b650515a84474096dda8180cdd2db227716d1",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "search/CMakeLists.txt" : {
      "ObjectId" : "3652d625df5e45a112c1c9412bd207a13a0ba985",
      "LastModified" : "2019-04-17T09:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "search/pysearch/CMakeLists.txt" : {
      "ObjectId" : "c55701b9e5171c0144c24fbb81bcf7de36fa7301",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "search/search_integration_tests/CMakeLists.txt" : {
      "ObjectId" : "2051defd6c7902699d4f05dd93f666011e803313",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "search/search_quality/CMakeLists.txt" : {
      "ObjectId" : "4f89f6df5e57813cc3396ecd659a0e5a4430133e",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "search/search_quality/assessment_tool/CMakeLists.txt" : {
      "ObjectId" : "700f038d73ad736b21a946038247fa7da486cc23",
      "LastModified" : "2019-04-17T09:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "search/search_quality/features_collector_tool/CMakeLists.txt" : {
      "ObjectId" : "df78b98f24692c64286bd6c35d588531c8ade173",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "search/search_quality/search_quality_tests/CMakeLists.txt" : {
      "ObjectId" : "24b5cb8e54d0d13cc7a00fa34a6db85c4bedac62",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "search/search_quality/search_quality_tool/CMakeLists.txt" : {
      "ObjectId" : "67b72f6a95b505bb4991f11a5aeac72338e2fcbb",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "search/search_tests/CMakeLists.txt" : {
      "ObjectId" : "a9cf5716cef124e8856092d14e9956ccb0279ec5",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "search/search_tests_support/CMakeLists.txt" : {
      "ObjectId" : "66d1ec840294a6bf3779b68d3e4cac4cd36e650e",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "shaders/CMakeLists.txt" : {
      "ObjectId" : "dc27b6d312a6486c5200ce4402cd130ca9493e77",
      "LastModified" : "2019-04-17T09:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "shaders/shaders_tests/CMakeLists.txt" : {
      "ObjectId" : "a84e76a7442d3e8ebcc85369eae81fcc62544329",
      "LastModified" : "2019-04-17T09:49:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Mobile compilation test takes much more time than others, so it should be the last.\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "skin_generator/CMakeLists.txt" : {
      "ObjectId" : "33d354943094beeb552330f6bdb70d80df76a2ac",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "software_renderer/CMakeLists.txt" : {
      "ObjectId" : "85d05a9e187e869525290924c8ec966a2dcb217d",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "stats/CMakeLists.txt" : {
      "ObjectId" : "4038f5b96e2800a589430af8cfc08e778438067e",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "storage/CMakeLists.txt" : {
      "ObjectId" : "37d14d9a039f08fad86b07336491e4589be5f300",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "storage/storage_integration_tests/CMakeLists.txt" : {
      "ObjectId" : "d6ee7029288ce1e4cccfd5a2dd664030ae4ec753",
      "LastModified" : "2019-04-17T09:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "storage/storage_tests/CMakeLists.txt" : {
      "ObjectId" : "ea5d6c9532e2dc50f77d903afabc90f80b30e5be",
      "LastModified" : "2019-04-17T09:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "track_analyzing/CMakeLists.txt" : {
      "ObjectId" : "8985aadb00c7f77eb6f6855d45187e8286c5f4f5",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "track_analyzing/track_analyzer/CMakeLists.txt" : {
      "ObjectId" : "2a0b46c5df406637ebf5a2951c006de2a6a705eb",
      "LastModified" : "2019-03-01T07:45:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "track_generator/CMakeLists.txt" : {
      "ObjectId" : "9139c92ba9d1639e9926ca106c8de131cec99cda",
      "LastModified" : "2019-04-17T09:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "track_generator/pytrack_generator/CMakeLists.txt" : {
      "ObjectId" : "195479a04ab59d9d9d6f60c57b9dbcc35fc37b4e",
      "LastModified" : "2019-04-17T09:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tracking/CMakeLists.txt" : {
      "ObjectId" : "31ca0ea6ddf49ad5fb0a8625dd4d8bbd7e618f7c",
      "LastModified" : "2019-04-17T09:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tracking/pytracking/CMakeLists.txt" : {
      "ObjectId" : "9e0f813f938a36b877481237dd83addcc04844c9",
      "LastModified" : "2019-04-17T09:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tracking/tracking_tests/CMakeLists.txt" : {
      "ObjectId" : "dd38da7e008cd6458ab603f2474244eaaa1d2501",
      "LastModified" : "2019-04-17T09:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "traffic/CMakeLists.txt" : {
      "ObjectId" : "48e44acd66d0c93fa76223e6df6904e8c5f01c37",
      "LastModified" : "2019-04-17T09:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "traffic/pytraffic/CMakeLists.txt" : {
      "ObjectId" : "5bf96e768b2474c934747c63428eebe1464efcd7",
      "LastModified" : "2019-04-17T09:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "traffic/traffic_tests/CMakeLists.txt" : {
      "ObjectId" : "f5bc5c0204dee714c4ffc4ee7c1cafceb829f931",
      "LastModified" : "2019-04-17T09:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "transit/CMakeLists.txt" : {
      "ObjectId" : "f4f2e6b7c980e99936d50d77b3575e065489fa5d",
      "LastModified" : "2019-04-17T09:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "transit/transit_tests/CMakeLists.txt" : {
      "ObjectId" : "917cbf3b56edb8c0abbcd3f9a90d3c538b8972be",
      "LastModified" : "2019-04-17T09:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ugc/CMakeLists.txt" : {
      "ObjectId" : "7bbab407e147baff62f01bbff0ed15f15bac0957",
      "LastModified" : "2019-04-17T09:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ugc/ugc_tests/CMakeLists.txt" : {
      "ObjectId" : "e1f036d1365239e2c89a9408b8a191ff3540491f",
      "LastModified" : "2019-04-17T09:49:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 175,
    "CMAKESOURCE" : 1,
    "AUTOMAKE" : 9,
    "BAZEL" : 1
  },
  "ElapsedTime" : 34509
}