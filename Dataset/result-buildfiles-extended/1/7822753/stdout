{
  "Repository" : "7822753",
  "Revision" : "HEAD",
  "ObjectId" : "ce2f175b703331524d3be68aa5b3af36bee9adcb",
  "CommitTime" : "2018-12-18T12:54:46Z",
  "Files" : {
    "TreeAnalysis/CMakeLists.txt" : {
      "ObjectId" : "b708421ecbf843842871015f26e9ba8527ad9fed",
      "LastModified" : "2018-09-04T15:11:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##################################\n\n## R. Bellan (UNITO) - Feb 2014 ##\n\n##################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---Locate the ROOT package and defines a number of variables (e.g. ROOT_INCLUDE_DIRS)\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---Define useful ROOT functions and macros (e.g. ROOT_GENERATE_DICTIONARY)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Set here the location of the source code of your analysis\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "TreeAnalysis/FindROOT.cmake" : {
      "ObjectId" : "0fe0962aca94d83aa740c121f058cb8a4358f7ec",
      "LastModified" : "2014-02-05T13:58:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find ROOT instalation\n\n# This module tries to find the ROOT installation on your system.\n\n# It tries to find the root-config script which gives you all the needed information.\n\n# If the system variable ROOTSYS is set this is straight forward.\n\n# If not the module uses the pathes given in ROOT_CONFIG_SEARCHPATH.\n\n# If you need an other path you should add this path to this varaible.  \n\n# The root-config script is then used to detect basically everything else.\n\n# This module defines a number of key variables and macros.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# F.Uhlig@gsi.de (fairroot.gsi.de)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# we need at least version 5.00/00\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# now parse the parts of the user given version string into variables\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# and now the version string given by qmake\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# compute an overall version number which can be compared at once\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# ask root-config for the library dir\n\n# Set ROOT_LIBRARY_DIR\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# ask root-config for the binary dir\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# ask root-config for the include dir\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# CACHE INTERNAL \"\")\n",
        "Line" : 110,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# ask root-config for the library varaibles\n",
        "Line" : 112,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#    ARGS \"--noldflags --noauxlibs --libs\" \n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#  STRING(REGEX MATCHALL \"([^ ])+\"  root_libs_all ${root_flags})\n\n#  STRING(REGEX MATCHALL \"-L([^ ])+\"  root_library ${root_flags})\n\n#  REMOVE_FROM_LIST(root_flags \"${root_libs_all}\" \"${root_library}\")\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Make variables changeble to the advanced user\n",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Set ROOT_INCLUDES\n",
        "Line" : 127,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "#######################################\n\n#\n\n#       Check the executables of ROOT \n\n#          ( rootcint ) \n\n#\n\n#######################################\n",
        "Line" : 132,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "###########################################\n\n#\n\n#       Macros for building ROOT dictionary\n\n#\n\n###########################################\n",
        "Line" : 149,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#  MESSAGE(\"INFILES: ${INFILES}\")\n\n#  MESSAGE(\"OutFILE: ${OUTFILE}\")\n\n#  MESSAGE(\"LINKDEF_FILE: ${LINKDEF_FILE}\")\n\n#  MESSAGE(\"INCLUDE_DIRS: ${INCLUDE_DIRS}\")\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#   MESSAGE(\"BLA: ${bla}\")\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#   MESSAGE(\"ROOT_CINT_EXECUTABLE has created the dictionary ${OUTFILE}\")\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "###########################################\n\n#\n\n#       Macros for building ROOT dictionary\n\n#\n\n###########################################\n",
        "Line" : 194,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "#  MESSAGE(\"INFILES: ${INFILES}\")\n\n#  MESSAGE(\"OutFILE: ${OUTFILE}\")\n\n#  MESSAGE(\"LINKDEF_FILE: ${LINKDEF_FILE}\")\n\n#  MESSAGE(\"INCLUDE_DIRS: ${INCLUDE_DIRS}\")\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#  MESSAGE(\"BLA: ${bla}\")\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#MESSAGE(\"PATH: ${path_name}\")\n\n#MESSAGE(\"Ext: ${file_extension}\")\n\n#MESSAGE(\"Name: ${file_name}\")\n\n#MESSAGE(\"Shell Name: ${shell_script_name}\")\n",
        "Line" : 240,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "#MESSAGE(\"New PATH: ${new_path}\")\n",
        "Line" : 249,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 25
    }
  },
  "FileTypes" : {
    "CMAKE" : 2
  },
  "ElapsedTime" : 766
}