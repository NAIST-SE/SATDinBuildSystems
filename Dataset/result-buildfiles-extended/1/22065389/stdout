{
  "Repository" : "22065389",
  "Revision" : "HEAD",
  "ObjectId" : "d504dc6cefbf2db58f78e599787fd62d534fa441",
  "CommitTime" : "2019-02-28T22:19:07Z",
  "Files" : {
    "solver_server/Makefile" : {
      "ObjectId" : "bc4e973895cfb503c2f3b04ed90b93381ace7c17",
      "LastModified" : "2018-01-15T23:18:44Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# May need to run sudo apt-get install libtool-bin\n",
        "Line" : 9,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Requires websocketd (e.g. $ brew install websocketd) and Ruby\n\n# This will open a websocket server at localhost:7444/reduce\n",
        "Line" : 16,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "### For playing with REDUCE ###\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# See Section 7.10 in the REDUCE manual http://www.reduce-algebra.com/reduce38-docs/reduce.pdf#section.7.10\n",
        "Line" : 27,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "### Debian Only ###\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "### Run from a different computer ###\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/Makefile" : {
      "ObjectId" : "04547792a21943855db8778418059db3c0805b0f",
      "LastModified" : "2018-09-16T23:45:35Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# for locally-modified Elm compiler, create a symlink to something like:\n\n# /PATH/TO/elm-make/.stack-work/install/x86_64-osx/lts-3.22/7.10.2/bin/elm-make\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# sed -i '' 's/var Elm = {};/var Elm = {};\\nElm[\"EvalUpdate\"] = Elm[\"EvalUpdate\"] || {};\\nElm[\"EvalUpdate\"].api = _user$$project$$EvalUpdate$$api;/g' ../build/out/sns.js\n",
        "Line" : 17,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Use our custom version of core that allows anything in sets.\n\n#\n\n# Wacky, but have to do it this way to avoid circular dependency b/c Basics is auto-included in everything.\n\n#\n\n# Based on tests/run-tests.sh in elm-lang/core.\n",
        "Line" : 22,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# `make clean` gets rid of a lot of stuff so the subsequent build may be slow.\n\n# Use this as a sort of \"quick clean\" that gets rid of less and lets the next build not be too slow.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TODO there are some files in ../build/out that aren't in .gitignore, but if we could copy those into\n\n# ../build/out from somwhere else during an html build, then clean could just delete everything under\n\n# ../build/out\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Just looks for unused vars for now, and only in files dirty in git.\n",
        "Line" : 52,
        "CharPositionInLine" : 14
      },
      "6" : {
        "Text" : "# wc -l ../examples/*\n",
        "Line" : 96,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 2
  },
  "ElapsedTime" : 2408
}