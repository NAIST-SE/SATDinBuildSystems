{
  "Repository" : "25177982",
  "Revision" : "HEAD",
  "ObjectId" : "cef0d869a14092ecf8278a78e5d3f5d670d93f41",
  "CommitTime" : "2019-04-17T15:34:15Z",
  "Files" : {
    "bridge-impl/pom.xml" : {
      "ObjectId" : "d49095677f8d5c290a2388c7d5acec441fc61155",
      "LastModified" : "2017-07-27T20:57:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n\t\t\t\tNote: When the generating the bridge components, the API classed will be output into\n\t\t\t\ttarget/liferay-faces-bridge-api.\n\t\t\t",
        "Line" : 60,
        "CharPositionInLine" : 7
      },
      "1" : {
        "Text" : "\n\t\t\t\t\tTo generate the portlet components run:\n\n\t\t\t\t\t\tmvn generate-sources -P generate-components -Dshort.namespace=portlet\n\t\t\t\t",
        "Line" : 69,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "demo/alloy-applicant-portlet/pom.xml" : {
      "ObjectId" : "26cd78adbd124e57fd82fcd58a507b4f57addfa0",
      "LastModified" : "2017-03-02T22:53:12Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "demo/alloy-showcase-portlet/pom.xml" : {
      "ObjectId" : "a5e0bc3a84011350f08911ff524c10d5a9787f4e",
      "LastModified" : "2018-07-13T20:49:16Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Note that this pom.xml provides similar functionality as the maven-assembly-plugin ",
        "Line" : 114,
        "CharPositionInLine" : 93
      },
      "1" : {
        "Text" : " but the \"unpack\" approach found below meets our needs better than the maven-assembly-plugin ",
        "Line" : 115,
        "CharPositionInLine" : 102
      },
      "CommentCount" : 2
    },
    "demo/bootsfaces-applicant-portlet/pom.xml" : {
      "ObjectId" : "ca935b9a6d12f9215c0d1204d76167dd5c62bbe9",
      "LastModified" : "2018-07-13T20:49:16Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "demo/butterfaces-applicant-portlet/pom.xml" : {
      "ObjectId" : "0a84b263c4119780b9bc8d3b79ef4e67655e9a98",
      "LastModified" : "2018-07-13T20:49:16Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "demo/icefaces-applicant-portlet/pom.xml" : {
      "ObjectId" : "0551fe67e165c0f22056160b5690f32807c628e3",
      "LastModified" : "2018-07-13T20:49:16Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "demo/jsf-applicant-portlet/pom.xml" : {
      "ObjectId" : "c1aa13a44fabc817e45d861cb48d63e4f61b5884",
      "LastModified" : "2018-07-13T20:49:16Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "demo/jsf-cdi-applicant-portlet/pom.xml" : {
      "ObjectId" : "4a250a620fcb23bd9747d1b2c9c51f44303a5f8e",
      "LastModified" : "2018-07-13T20:49:16Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "demo/jsf-export-pdf-portlet/pom.xml" : {
      "ObjectId" : "cf2684303326661867fbab22eb768a89d1281953",
      "LastModified" : "2018-07-13T20:49:16Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "demo/jsf-flows-portlet/pom.xml" : {
      "ObjectId" : "0cb03b766697aea41cda5e032693e7b2d8638f73",
      "LastModified" : "2018-07-13T20:49:16Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "demo/jsf-html5-applicant-portlet/pom.xml" : {
      "ObjectId" : "4572ef1d201dbd88dd3f55f8a058ae6f151dae36",
      "LastModified" : "2018-07-13T20:49:16Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "demo/jsf-ipc-events-bookings-portlet/pom.xml" : {
      "ObjectId" : "d44cd9331bd060b340dafe317d794c5a30775a3f",
      "LastModified" : "2018-07-13T20:49:16Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "demo/jsf-ipc-events-customers-portlet/pom.xml" : {
      "ObjectId" : "6bf3291c49acfd0f1e3bce545ab309f347403adc",
      "LastModified" : "2018-07-13T20:49:16Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "demo/jsf-ipc-pub-render-params-portlet/pom.xml" : {
      "ObjectId" : "532e83b7fe89592a5497cdac05ee88a5f374aabf",
      "LastModified" : "2018-07-13T20:49:16Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "demo/jsf-jsp-applicant-portlet/pom.xml" : {
      "ObjectId" : "00f4b243055d838a5f94c1005d98fff0b6f7bcb2",
      "LastModified" : "2018-07-13T20:49:16Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "demo/jsf-showcase-portlet/pom.xml" : {
      "ObjectId" : "f382fc86a7f1dbe5d2876bb0fd8d95a89285eb61",
      "LastModified" : "2018-07-13T20:49:16Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Note that this pom.xml provides similar functionality as the maven-assembly-plugin ",
        "Line" : 89,
        "CharPositionInLine" : 93
      },
      "1" : {
        "Text" : " but the \"unpack\" approach found below meets our needs better than the maven-assembly-plugin ",
        "Line" : 90,
        "CharPositionInLine" : 102
      },
      "CommentCount" : 2
    },
    "demo/jsf-spring-applicant-portlet/pom.xml" : {
      "ObjectId" : "cc11e3b6c24f56d1bd7db86d7eeeae443196fb92",
      "LastModified" : "2018-07-13T20:49:16Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "demo/pom.xml" : {
      "ObjectId" : "68f1c432e83715d5e1c4a90175402c05676a1976",
      "LastModified" : "2018-08-24T16:57:25Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Delete text files copied by add-third-party goal of license-maven-plugin ",
        "Line" : 192,
        "CharPositionInLine" : 92
      },
      "CommentCount" : 1
    },
    "demo/primefaces-applicant-portlet/pom.xml" : {
      "ObjectId" : "9b6c813e87492024ef6c3f7cc2a6ffa5cbf848b6",
      "LastModified" : "2018-07-13T20:49:16Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "demo/richfaces-applicant-portlet/pom.xml" : {
      "ObjectId" : "01213eba1cb46de888ce4f5dce101c1e6e45b77c",
      "LastModified" : "2018-07-13T20:49:16Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "issue/jsf-issues-portlet/pom.xml" : {
      "ObjectId" : "3d5b64f3faa00a02a22c24008390e54d61ddc748",
      "LastModified" : "2019-04-10T21:33:56Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "issue/pom.xml" : {
      "ObjectId" : "d68d326e8d32b621bef445e77344a779ad0bf549",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "issue/primefaces-issues-portlet/pom.xml" : {
      "ObjectId" : "fe9b154d9c9e70898174eb6bf54b0d42ad920868",
      "LastModified" : "2018-07-13T20:49:16Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "pom.xml" : {
      "ObjectId" : "21cc23b4f286dd13d281ed1a233e75b4e6aa64c4",
      "LastModified" : "2018-09-25T21:15:20Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " liferay.auto.deploy.dir is the location where WARs are copied for deployment ",
        "Line" : 164,
        "CharPositionInLine" : 92
      },
      "1" : {
        "Text" : " liferay.deploy.dir is the location where extracted WARs are finally deployed ",
        "Line" : 166,
        "CharPositionInLine" : 92
      },
      "2" : {
        "Text" : " http://jira.codehaus.org/browse/SCM-444 ",
        "Line" : 291,
        "CharPositionInLine" : 54
      },
      "3" : {
        "Text" : " FACES-1725/FACES-1598/PUSH-247: Exclude icepush.jar on WebLogic ",
        "Line" : 705,
        "CharPositionInLine" : 80
      },
      "4" : {
        "Text" : " Integration test dependencies. ",
        "Line" : 937,
        "CharPositionInLine" : 43
      },
      "5" : {
        "Text" : " Firefox 46.0 is required. ",
        "Line" : 969,
        "CharPositionInLine" : 39
      },
      "6" : {
        "Text" : " chromedriver version 2.29 is required. ",
        "Line" : 976,
        "CharPositionInLine" : 52
      },
      "7" : {
        "Text" : " Chrome/Chromium 59+ is required for headless testing. ",
        "Line" : 977,
        "CharPositionInLine" : 67
      },
      "8" : {
        "Text" : " phantomjs 2.1.1 is required. ",
        "Line" : 984,
        "CharPositionInLine" : 42
      },
      "9" : {
        "Text" : "\n\t\t\t<dependency>\n\t\t\t\t<groupId>net.sourceforge.htmlunit</groupId>\n\t\t\t\t<artifactId>htmlunit</artifactId>\n\t\t\t\t<version>2.23</version>\n\t\t\t</dependency>\n\t\t\t",
        "Line" : 1002,
        "CharPositionInLine" : 7
      },
      "10" : {
        "Text" : " End integration test dependencies. ",
        "Line" : 1015,
        "CharPositionInLine" : 47
      },
      "CommentCount" : 11
    },
    "support/pom.xml" : {
      "ObjectId" : "4b27b1257123ccbfd4bcb46dc5af2f75e1151463",
      "LastModified" : "2018-07-13T20:49:16Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " The release profile ensures that the version elements in the child pom.xml descriptors ",
        "Line" : 18,
        "CharPositionInLine" : 98
      },
      "1" : {
        "Text" : " will be auto-versioned by the maven-release-plugin. ",
        "Line" : 19,
        "CharPositionInLine" : 63
      },
      "2" : {
        "Text" : " The weblogic profile provides a way for developers to manually build the weblogic related ",
        "Line" : 27,
        "CharPositionInLine" : 101
      },
      "3" : {
        "Text" : " modules since they are not deployed during the release process. ",
        "Line" : 28,
        "CharPositionInLine" : 75
      },
      "CommentCount" : 4
    },
    "support/weblogic/glassfish-jsf/pom.xml" : {
      "ObjectId" : "97133b87ab17038cebb15c601499cd33478806e2",
      "LastModified" : "2018-07-13T20:49:16Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n\t\tThe purpose of this POM is to upgrade the version of Mojarra that ships with WebLogic 12c using the\tfollowing\n\t\tprocedure:\n\n\t\t- Backup the monolithic Mojarra JAR that ships in the WebLogic modules folder\n\t\t- Download a current monolithic Mojarra JAR from Maven Central and replace the META-INF/MANIFEST.MF with the\n\t\t  one that ships with WebLogic (updating version info as appropriate)\n\t\t- Copy the new JAR into the WebLogic modules folder\n\n\t\tIf you are using the same version of WebLogic as the one specified by the liferay.weblogic.version property in\n\t\tthe parent-most Liferay Faces pom.xml descriptor, then you can perform the upgrade by executing shell commands\n\t\tsuch as\tthe following:\n\n\t\t  export MW_HOME=$HOME/Oracle/Middleware\n\t\t  mvn clean install -P weblogic\n\n\t\tOtherwise, you must specify a different value for the weblogic.mojarra.pom property. For example:\n\n\t\t  mvn clean install -P weblogic -Dweblogic.mojarra.pom=$MW_HOME/wlserver/plugins/maven/com/oracle/weblogic/glassfish.jsf_2.0.0.0_2-1-20/12.1.3/glassfish.jsf_2.0.0.0_2-1-20.12.1.3.pom\n\t",
        "Line" : 34,
        "CharPositionInLine" : 5
      },
      "1" : {
        "Text" : "This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. ",
        "Line" : 206,
        "CharPositionInLine" : 131
      },
      "CommentCount" : 2
    },
    "support/weblogic/pom.xml" : {
      "ObjectId" : "3b1c5631076eb0f89c4911231af6326b18c4ea6b",
      "LastModified" : "2018-07-13T20:49:16Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " The release profile ensures that the version elements in the child pom.xml descriptors ",
        "Line" : 17,
        "CharPositionInLine" : 98
      },
      "1" : {
        "Text" : " will be auto-versioned by the maven-release-plugin. ",
        "Line" : 18,
        "CharPositionInLine" : 63
      },
      "CommentCount" : 2
    },
    "tck/bridge-tck-common/pom.xml" : {
      "ObjectId" : "b19b149863a758fd775060f29c3f29b615c9104f",
      "LastModified" : "2018-07-13T20:49:16Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "tck/bridge-tck-compat/pom.xml" : {
      "ObjectId" : "545f22332be1caa8cc728a3bd14cca9cc57824ae",
      "LastModified" : "2018-07-13T20:49:16Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Because the Bridge-TCK portlet is not an OSGi module, this jar (Bridge TCK Compat) can rely on the bridge-impl jar without concerns about breaking OSGi or modularity. ",
        "Line" : 32,
        "CharPositionInLine" : 178
      },
      "CommentCount" : 1
    },
    "tck/bridge-tck-encode-url-tests/pom.xml" : {
      "ObjectId" : "eec0e5c8dffbcbeec84f9ce61ef4645159d2531c",
      "LastModified" : "2018-07-13T20:49:16Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "tck/bridge-tck-formatter/pom.xml" : {
      "ObjectId" : "e39f72f62928ae6d11a45a118ae5e9c9475d18a1",
      "LastModified" : "2018-07-13T20:49:16Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "tck/bridge-tck-harness/pom.xml" : {
      "ObjectId" : "1c4ee6c14e3d30dcda8f8998f3082d9e06676459",
      "LastModified" : "2018-07-13T20:49:16Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "tck/bridge-tck-lifecycle-set-portlet/pom.xml" : {
      "ObjectId" : "db4c1b5f55130a0d1340848d16ad04112ceed84c",
      "LastModified" : "2018-07-13T20:49:16Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "tck/bridge-tck-liferay-harness/pom.xml" : {
      "ObjectId" : "8dc52e120aa8fca2ac49b019236b040ffc0aeb00",
      "LastModified" : "2018-07-13T20:49:16Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "tck/bridge-tck-main-portlet/pom.xml" : {
      "ObjectId" : "c1d4b0da45992d3c0e895dae1ac74d933cd6b028",
      "LastModified" : "2018-07-13T20:49:16Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " containers ",
        "Line" : 93,
        "CharPositionInLine" : 22
      },
      "1" : {
        "Text" : " /containers ",
        "Line" : 164,
        "CharPositionInLine" : 23
      },
      "2" : {
        "Text" : " browsers ",
        "Line" : 165,
        "CharPositionInLine" : 20
      },
      "3" : {
        "Text" : " /browsers ",
        "Line" : 236,
        "CharPositionInLine" : 21
      },
      "4" : {
        "Text" : " Specify a property like so: -Dintegration.browser.name=phantomjs ",
        "Line" : 255,
        "CharPositionInLine" : 84
      },
      "5" : {
        "Text" : " Integration test dependencies. ",
        "Line" : 319,
        "CharPositionInLine" : 44
      },
      "6" : {
        "Text" : " End integration test dependencies. ",
        "Line" : 360,
        "CharPositionInLine" : 48
      },
      "CommentCount" : 7
    },
    "tck/pom.xml" : {
      "ObjectId" : "545ddba1c3ac3b26cc1ae1f738e3ac6dfa58faad",
      "LastModified" : "2018-07-13T20:49:16Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "test/integration/pom.xml" : {
      "ObjectId" : "d7c10ba014d91ea463b809e357b7bc363c8370b2",
      "LastModified" : "2018-09-25T19:26:11Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " containers ",
        "Line" : 25,
        "CharPositionInLine" : 22
      },
      "1" : {
        "Text" : " /containers ",
        "Line" : 39,
        "CharPositionInLine" : 23
      },
      "2" : {
        "Text" : " browsers ",
        "Line" : 40,
        "CharPositionInLine" : 20
      },
      "3" : {
        "Text" : " /browsers ",
        "Line" : 111,
        "CharPositionInLine" : 21
      },
      "4" : {
        "Text" : " Specify a property like so: -Dintegration.browser.name=phantomjs ",
        "Line" : 133,
        "CharPositionInLine" : 84
      },
      "5" : {
        "Text" : "\n\t\t\t\t\tThis dependency is only included to ensure that all tests compile. Showcase tests are only run in\n\t\t\t\t\tthe selenium-alloy-showcase and selenium-jsf-showcase profiles.\n\t\t\t\t",
        "Line" : 176,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "\n\t\t\t\t\t\t\t\t\t\t\tSpecify a property like so: -Dintegration.browser.name=phantomjs\n\n\t\t\t\t\t\t\t\t\t\t\tWhen running tests from an IDE (like eclipse), you may need to set certain\n\t\t\t\t\t\t\t\t\t\t\tsystem properties:\n\n\t\t\t\t\t\t\t\t\t\t\t-Dintegration.context=/web/guest/alloy-showcase/-/alloy-tag\n\t\t\t\t\t\t\t\t\t\t\t-Dintegration.default.component.prefix=alloy\n\n\t\t\t\t\t\t\t\t\t\t\tSetting system properties in Eclipse:\n\t\t\t\t\t\t\t\t\t\t\thttp://stackoverflow.com/questions/862391/how-to-pass-the-d-system-properties-while-testing-on-eclipse\n\t\t\t\t\t\t\t\t\t\t\tSetting systen properties in IntelliJ:\n\t\t\t\t\t\t\t\t\t\t\thttp://stackoverflow.com/questions/29454494/set-java-system-properties-in-intellij-or-eclipse\n\t\t\t\t\t\t\t\t\t\t\tIt is not necessary to set system properties in Netbeans since Netbeans\n\t\t\t\t\t\t\t\t\t\t\tautomatically uses Maven properties correctly.\n\t\t\t\t\t\t\t\t\t\t",
        "Line" : 222,
        "CharPositionInLine" : 14
      },
      "7" : {
        "Text" : " Specify a property like so: -Dintegration.browser.name=phantomjs ",
        "Line" : 223,
        "CharPositionInLine" : 84
      },
      "8" : {
        "Text" : " Specify a property like so: -Dintegration.browser.name=phantomjs ",
        "Line" : 314,
        "CharPositionInLine" : 84
      },
      "9" : {
        "Text" : " Integration test dependencies. ",
        "Line" : 385,
        "CharPositionInLine" : 42
      },
      "10" : {
        "Text" : " End integration test dependencies. ",
        "Line" : 432,
        "CharPositionInLine" : 46
      },
      "CommentCount" : 11
    },
    "test/pom.xml" : {
      "ObjectId" : "b704051ffda484e94fbc6b99febb627d63407e35",
      "LastModified" : "2018-07-13T20:49:16Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "MAVEN" : 38
  },
  "ElapsedTime" : 2620
}