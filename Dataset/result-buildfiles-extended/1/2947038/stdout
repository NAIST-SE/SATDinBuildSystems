{
  "Repository" : "2947038",
  "Revision" : "HEAD",
  "ObjectId" : "36c89134d4013b2e5e45bc55656a18bd6141995a",
  "CommitTime" : "2019-02-16T09:40:51Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "71e7722e00eade7f50e76d9beb8c958744623955",
      "LastModified" : "2016-05-03T12:32:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n#  Copyright (c) 2013 Kyle Lutz <kyle.r.lutz@gmail.com>\n\n#\n\n#  Distributed under the Boost Software License, Version 1.0\n\n#  See accompanying file LICENSE_1_0.txt or copy at\n\n#  http://www.boost.org/LICENSE_1_0.txt\n\n#\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# find OpenCL\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# find Boost\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# optional support for c++11\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# optional support for offline-caching\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# thread-safety options\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# optional third-party libraries\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# optional support for boost dynamic libraries\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# for default use statis libs\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# compiler options\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Visual Studio C++\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Not enough actual parameters for a BOOST_PP macro\n\n# Warning C4244: 'initializing': conversion from 'double' to 'int', possible loss of data\n\n# Warning C4305: 'initializing': truncation from 'double' to 'float'\n\n# Warning C4800: 'uint32_t' : forcing value to bool 'true' or 'false' (performance warning)\n\n# Warning C4838: conversion from 'double' to 'float' requires a narrowing conversion\n",
        "Line" : 92,
        "CharPositionInLine" : 52
      },
      "12" : {
        "Text" : "# configure cmake config file\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# install cmake config file\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# install header files\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "cmake/FindBolt.cmake" : {
      "ObjectId" : "0820de0d073aa8ac45e7842fe8722efa7749a5a5",
      "LastModified" : "2015-05-02T17:46:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################################################################                                                                                     \n\n#   Â© 2012,2014 Advanced Micro Devices, Inc. All rights reserved.                                     \n\n#                                                                                    \n\n#   Licensed under the Apache License, Version 2.0 (the \"License\");   \n\n#   you may not use this file except in compliance with the License.                 \n\n#   You may obtain a copy of the License at                                          \n\n#                                                                                    \n\n#       http://www.apache.org/licenses/LICENSE-2.0                      \n\n#                                                                                    \n\n#   Unless required by applicable law or agreed to in writing, software              \n\n#   distributed under the License is distributed on an \"AS IS\" BASIS,              \n\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.         \n\n#   See the License for the specific language governing permissions and              \n\n#   limitations under the License.                                                   \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "############################################################################                                                                                     \n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Locate an BOLT implementation.\n\n#\n\n# Defines the following variables:\n\n#\n\n#   BOLT_FOUND - Found an Bolt imlementation\n\n#\n\n# Also defines the library variables below as normal\n\n# variables.\n\n#\n\n#   BOLT_LIBRARIES - These contain debug/optimized keywords when a debugging library is found\n\n#   BOLT_INCLUDE_DIRS - All relevant Bolt include directories\n\n#\n\n# Accepts the following variables as input:\n\n#\n\n#   BOLT_ROOT - (as a CMake or environment variable)\n\n#                The root directory of an BOLT installation\n\n#\n\n#   FIND_LIBRARY_USE_LIB64_PATHS - Global property that controls whether FindBOLT should search for \n\n#                              64bit or 32bit libs\n\n#\n\n#-----------------------\n\n# Example Usage:\n\n#\n\n#    find_package(BOLT REQUIRED)\n\n#    include_directories(${BOLT_INCLUDE_DIRS})\n\n#\n\n#    add_executable(foo foo.cc)\n\n#    target_link_libraries(foo ${BOLT_LIBRARIES})\n\n#\n\n#-----------------------\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This module helps to use BOLT_FIND_COMPONENTS, BOLT_FIND_REQUIRED, BOLT_FIND_QUIETLY\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Search for 64bit libs if FIND_LIBRARY_USE_LIB64_PATHS is set to true in the global environment, 32bit libs else\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Debug print statements\n\n#message( \"BOLT_LIBRARY_PATH_SUFFIXES: ${BOLT_LIBRARY_PATH_SUFFIXES}\" )\n\n#message( \"ENV{BOLT_ROOT}: $ENV{BOLT_ROOT}\" )\n\n#message( \"BOLT_FIND_COMPONENTS: ${BOLT_FIND_COMPONENTS}\" )\n\n#message( \"BOLT_FIND_REQUIRED: ${BOLT_FIND_REQUIRED}\" )\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set the component to find if the user does not specify explicitely\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Eventually, Bolt may support multiple backends, but for now it only supports CL\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Find and set the location of main BOLT static lib file\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Find and set the location of main BOLT static lib file\n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "cmake/FindEigen.cmake" : {
      "ObjectId" : "2cd3e12c0c243a6cc745bf787b7d765c3198ff59",
      "LastModified" : "2015-05-02T17:46:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ceres Solver - A fast non-linear least squares minimizer\n\n# Copyright 2013 Google Inc. All rights reserved.\n\n# http://code.google.com/p/ceres-solver/\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice,\n\n#   this list of conditions and the following disclaimer.\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n# * Neither the name of Google Inc. nor the names of its contributors may be\n\n#   used to endorse or promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Author: alexs.mac@gmail.com (Alex Stewart)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FindEigen.cmake - Find Eigen library, version >= 3.\n\n#\n\n# This module defines the following variables:\n\n#\n\n# EIGEN_FOUND: TRUE iff Eigen is found.\n\n# EIGEN_INCLUDE_DIRS: Include directories for Eigen.\n\n#\n\n# EIGEN_VERSION: Extracted from Eigen/src/Core/util/Macros.h\n\n# EIGEN_WORLD_VERSION: Equal to 3 if EIGEN_VERSION = 3.2.0\n\n# EIGEN_MAJOR_VERSION: Equal to 2 if EIGEN_VERSION = 3.2.0\n\n# EIGEN_MINOR_VERSION: Equal to 0 if EIGEN_VERSION = 3.2.0\n\n#\n\n# The following variables control the behaviour of this module:\n\n#\n\n# EIGEN_INCLUDE_DIR_HINTS: List of additional directories in which to\n\n#                          search for eigen includes, e.g: /timbuktu/eigen3.\n\n#\n\n# The following variables are also defined by this module, but in line with\n\n# CMake recommended FindPackage() module style should NOT be referenced directly\n\n# by callers (use the plural variables detailed above instead).  These variables\n\n# do however affect the behaviour of the module via FIND_[PATH/LIBRARY]() which\n\n# are NOT re-called (i.e. search for library is not repeated) if these variables\n\n# are set with valid values _in the CMake cache_. This means that if these\n\n# variables are set directly in the cache, either by the user in the CMake GUI,\n\n# or by the user passing -DVAR=VALUE directives to CMake when called (which\n\n# explicitly defines a cache variable), then they will be used verbatim,\n\n# bypassing the HINTS variables and other hard-coded search locations.\n\n#\n\n# EIGEN_INCLUDE_DIR: Include directory for CXSparse, not including the\n\n#                    include directory of any dependencies.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Called if we failed to find Eigen or any of it's required dependencies,\n\n# unsets all public (designed to be used externally) variables and reports\n\n# error message at priority depending upon [REQUIRED/QUIET/<NONE>] argument.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make results of search visible in the CMake GUI if Eigen has not\n\n# been found so that user does not have to toggle to advanced view.\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Note <package>_FIND_[REQUIRED/QUIETLY] variables defined by FindPackage()\n\n# use the camelcase library name, not uppercase.\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Neither QUIETLY nor REQUIRED, use no priority which emits a message\n\n# but continues configuration and allows generation.\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Search user-installed locations first, so that we prefer user installs\n\n# to system installs where both exist.\n\n#\n\n# TODO: Add standard Windows search locations for Eigen.\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Mac OS X\n",
        "Line" : 91,
        "CharPositionInLine" : 37
      },
      "8" : {
        "Text" : "# Mac OS X.\n",
        "Line" : 92,
        "CharPositionInLine" : 42
      },
      "9" : {
        "Text" : "# Search supplied hint directories first if supplied.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Mark internally as found, then verify. EIGEN_REPORT_NOT_FOUND() unsets\n\n# if called.\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Extract Eigen version from Eigen/src/Core/util/Macros.h\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# This is on a single line s/t CMake does not interpret it as a list of\n\n# elements and insert ';' separators which would result in 3.;2.;0 nonsense.\n",
        "Line" : 139,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Set standard CMake FindPackage variables if found.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Handle REQUIRED / QUIET optional arguments and version.\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Only mark internal variables as advanced if we found Eigen, otherwise\n\n# leave it visible in the standard GUI for the user to set manually.\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "cmake/FindTBB.cmake" : {
      "ObjectId" : "d299fd140487a450b6565a562f14bceb293336a6",
      "LastModified" : "2015-05-02T17:46:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Intel Threading Building Blocks include paths and libraries\n\n# FindTBB.cmake can be found at https://code.google.com/p/findtbb/\n\n# Written by Hannes Hofmann <hannes.hofmann _at_ informatik.uni-erlangen.de>\n\n# Improvements by Gino van den Bergen <gino _at_ dtecta.com>,\n\n#   Florian Uhlig <F.Uhlig _at_ gsi.de>,\n\n#   Jiri Marsik <jiri.marsik89 _at_ gmail.com>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The MIT License\n\n#\n\n# Copyright (c) 2011 Hannes Hofmann\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\n# THE SOFTWARE.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GvdB: This module uses the environment variable TBB_ARCH_PLATFORM which defines architecture and compiler.\n\n#   e.g. \"ia32/vc8\" or \"em64t/cc4.1.0_libc2.4_kernel2.6.16.21\"\n\n#   TBB_ARCH_PLATFORM is set by the build script `tbbvars[.bat|.sh|.csh], which can be found\n\n#   in the TBB installation directory (TBB_INSTALL_DIR).\n\n#\n\n# GvdB: Mac OS X distribution places libraries directly in lib directory.\n\n#\n\n# For backwards compatibility, you may explicitely set the CMake variables TBB_ARCHITECTURE and TBB_COMPILER.\n\n# TBB_ARCHITECTURE [ ia32 | em64t | itanium ]\n\n#   which architecture to use\n\n# TBB_COMPILER e.g. vc9 or cc3.2.3_libc2.3.2_kernel2.4.21 or cc4.0.1_os10.4.9\n\n#   which compiler to use (detected automatically on Windows)\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This module respects\n\n# TBB_INSTALL_DIR or $ENV{TBB21_INSTALL_DIR} or $ENV{TBB_INSTALL_DIR}\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This module defines\n\n# TBB_INCLUDE_DIRS, where to find task_scheduler_init.h, etc.\n\n# TBB_LIBRARY_DIRS, where to find libtbb, libtbbmalloc\n\n# TBB_DEBUG_LIBRARY_DIRS, where to find libtbb_debug, libtbbmalloc_debug\n\n# TBB_INSTALL_DIR, the base TBB install directory\n\n# TBB_LIBRARIES, the libraries to link against to use TBB.\n\n# TBB_DEBUG_LIBRARIES, the libraries to link against to use TBB with debug symbols.\n\n# TBB_FOUND, If false, don't try to use TBB.\n\n# TBB_INTERFACE_VERSION, as defined in tbb/tbb_stddef.h\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# has em64t/vc8 em64t/vc9\n\n# has ia32/vc7.1 ia32/vc8 ia32/vc9\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Todo: add other Windows compilers such as ICL.\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# MAC\n",
        "Line" : 83,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# libs: libtbb.dylib, libtbbmalloc.dylib, *_debug\n",
        "Line" : 85,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# default flavor on apple: ia32/cc4.0.1_os10.4.9\n\n# Jiri: There is no reason to presume there is only one flavor and\n\n#       that user's setting of variables should be ignored.\n",
        "Line" : 90,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# LINUX\n",
        "Line" : 104,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# has em64t/cc3.2.3_libc2.3.2_kernel2.4.21 em64t/cc3.3.3_libc2.3.3_kernel2.6.5 em64t/cc3.4.3_libc2.3.4_kernel2.6.9 em64t/cc4.1.0_libc2.4_kernel2.6.16.21\n\n# has ia32/*\n\n# has itanium/*\n",
        "Line" : 110,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# SUN\n\n# not yet supported\n\n# has em64t/cc3.4.3_kernel5.10\n\n# has ia32/*\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-- Clear the public variables\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#-- Find TBB install dir and set ${_TBB_INSTALL_DIR} and cached ${TBB_INSTALL_DIR}\n\n# first: use CMake variable TBB_INSTALL_DIR\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# second: use environment variable\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Intel recommends setting TBB21_INSTALL_DIR\n",
        "Line" : 140,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# third: try to find path automatically\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# sanity check\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# finally: set the cached CMake variable TBB_INSTALL_DIR\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#-- A macro to rewrite the paths of the library. This is necessary, because\n\n#   find_library() always found the em64t/vc9 version of the TBB libs\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#    if (NOT \"${_TBB_ARCHITECTURE}\" STREQUAL \"em64t\")\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#    endif (NOT \"${_TBB_ARCHITECTURE}\" STREQUAL \"em64t\")\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#-- Look for include directory and set ${TBB_INCLUDE_DIR}\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Jiri: tbbvars now sets the CPATH environment variable to the directory\n\n#       containing the headers.\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#-- Look for libraries\n\n# GvdB: $ENV{TBB_ARCH_PLATFORM} is set by the build script tbbvars[.bat|.sh|.csh]\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Jiri: This block isn't mutually exclusive with the previous one\n\n#       (hence no else), instead I test if the user really specified\n\n#       the variables in question.\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# HH: deprecated\n",
        "Line" : 205,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Jiri: It doesn't hurt to look in more places, so I store the hints from\n\n#       ENV{TBB_ARCH_PLATFORM} and the TBB_ARCHITECTURE and TBB_COMPILER\n\n#       variables and search them both.\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# GvdB: Mac OS X distribution places libraries directly in lib directory.\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Jiri: No reason not to check the default paths. From recent versions,\n\n#       tbbvars has started exporting the LIBRARY_PATH and LD_LIBRARY_PATH\n\n#       variables, which now point to the directories of the lib files.\n\n#       It all makes more sense to use the ${_TBB_LIBRARY_DIR} as a HINTS\n\n#       argument instead of the implicit PATHS as it isn't hard-coded\n\n#       but computed by system introspection. Searching the LIBRARY_PATH\n\n#       and LD_LIBRARY_PATH environment variables is now even more important\n\n#       that tbbvars doesn't export TBB_ARCH_PLATFORM and it facilitates\n\n#       the use of TBB built from sources.\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#Extract path from TBB_LIBRARY name\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#TBB_CORRECT_LIB_DIR(TBB_LIBRARY)\n\n#TBB_CORRECT_LIB_DIR(TBB_MALLOC_LIBRARY)\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#-- Look for debug libraries\n\n# Jiri: Changed the same way as for the release libraries.\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Jiri: Self-built TBB stores the debug libraries in a separate directory.\n\n#       Extract path from TBB_LIBRARY_DEBUG name\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#TBB_CORRECT_LIB_DIR(TBB_LIBRARY_DEBUG)\n\n#TBB_CORRECT_LIB_DIR(TBB_MALLOC_LIBRARY_DEBUG)\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Jiri: Self-built TBB stores the debug libraries in a separate directory.\n",
        "Line" : 260,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# do only throw fatal, if this pkg is REQUIRED\n",
        "Line" : 270,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 38
    },
    "cmake/opencl/FindOpenCL.cmake" : {
      "ObjectId" : "0a60e8d15eab2828fb7e9e18b380a9cd318bd097",
      "LastModified" : "2016-03-09T14:30:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find OpenCL\n\n# This module tries to find an OpenCL implementation on your system. It supports\n\n# AMD / ATI, Apple and NVIDIA implementations.\n\n#\n\n# To set the paths manually, define these environment variables:\n\n# OpenCL_INCPATH    - Include path (e.g. OpenCL_INCPATH=/opt/cuda/4.0/cuda/include)\n\n# OpenCL_LIBPATH    - Library path (e.h. OpenCL_LIBPATH=/usr/lib64/nvidia)\n\n#\n\n# Once done this will define\n\n#  OpenCL_FOUND         - system has OpenCL\n\n#  OpenCL_INCLUDE_DIRS  - the OpenCL include directory\n\n#  OpenCL_LIBRARIES     - link these to use OpenCL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The AMD SDK currently installs both x86 and x86_64 libraries\n\n# This is only a hack to find out architecture\n",
        "Line" : 30,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# On Win32 search relative to the library\n",
        "Line" : 43,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Unix style platforms\n",
        "Line" : 51,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# The AMD SDK currently does not place its headers\n\n# in /usr/include, therefore also search relative\n\n# to the library\n",
        "Line" : 59,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# for Mali GPUs, libmali must be linked\n",
        "Line" : 64,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# This is often the same, so clean up\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "example/CMakeLists.txt" : {
      "ObjectId" : "a5708cb0cc86e588e14b0c397b5ae834749e21d6",
      "LastModified" : "2016-05-03T12:32:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n#  Copyright (c) 2013-2014 Kyle Lutz <kyle.r.lutz@gmail.com>\n\n#\n\n#  Distributed under the Boost Software License, Version 1.0\n\n#  See accompanying file LICENSE_1_0.txt or copy at\n\n#  http://www.boost.org/LICENSE_1_0.txt\n\n#\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# boost library link dependencies\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add example program to list of tests (if testing is enabled)\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# opencl test example\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# eigen examples\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# opencv examples\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# opengl/vtk examples\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# qt examples\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# look for Qt4 in the first place\n",
        "Line" : 117,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# build with Qt4\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# look for Qt5\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# build with Qt5\n",
        "Line" : 131,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# no valid Qt framework found\n",
        "Line" : 139,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# required by both versions\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# add examples\n",
        "Line" : 148,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 15
    },
    "perf/CMakeLists.txt" : {
      "ObjectId" : "b04429e9d3c0dc4eed6583c2ff9d5c19ab49c7de",
      "LastModified" : "2016-06-24T03:24:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n#  Copyright (c) 2013 Kyle Lutz <kyle.r.lutz@gmail.com>\n\n#\n\n#  Distributed under the Boost Software License, Version 1.0\n\n#  See accompanying file LICENSE_1_0.txt or copy at\n\n#  http://www.boost.org/LICENSE_1_0.txt\n\n#\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# stl benchmarks (for comparison)\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# stl benchmarks which require c++11\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# cuda/thrust benchmarks (for comparison)\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# intel tbb benchmarks (for comparison)\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# bolt c++ template lib benchmarks (for comparison)\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "1aa99ff90d3b79957339f2c624ad9007f9b43d08",
      "LastModified" : "2018-12-29T18:55:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n#  Copyright (c) 2013 Kyle Lutz <kyle.r.lutz@gmail.com>\n\n#\n\n#  Distributed under the Boost Software License, Version 1.0\n\n#  See accompanying file LICENSE_1_0.txt or copy at\n\n#  http://www.boost.org/LICENSE_1_0.txt\n\n#\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# allow tests to use C++11 features\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# enable automatic kernel compilation error messages for tests\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# enable code coverage generation (only with GCC for now)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add path to test data dir\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# link with coverage library\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# miscellaneous tests\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# extra tests (interop tests, linkage tests, etc.)\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "test/extra/CMakeLists.txt" : {
      "ObjectId" : "4795a6cc145b9d5e754e67f2db2ef5b7776ea997",
      "LastModified" : "2018-12-29T18:55:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ---------------------------------------------------------------------------\n\n#  Copyright (c) 2015 Kyle Lutz <kyle.r.lutz@gmail.com>\n\n#\n\n#  Distributed under the Boost Software License, Version 1.0\n\n#  See accompanying file LICENSE_1_0.txt or copy at\n\n#  http://www.boost.org/LICENSE_1_0.txt\n\n#\n\n# ---------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include local test headers\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check for linkage problems\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# link with coverage library\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# eigen interop tests\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# opencv interop tests\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# qt interop tests\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# look for Qt4 in the first place\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# look for Qt5\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# no valid Qt framework found\n",
        "Line" : 62,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# the opengl interop test depends on qt to create the opengl context\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# vtk interop tests\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    }
  },
  "FileTypes" : {
    "CMAKE" : 9
  },
  "ElapsedTime" : 1375
}