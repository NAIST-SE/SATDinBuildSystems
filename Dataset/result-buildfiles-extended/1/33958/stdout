{
  "Repository" : "33958",
  "Revision" : "HEAD",
  "ObjectId" : "660b1bdd608d9b227d6a432737303f7e82af4a25",
  "CommitTime" : "2019-03-21T11:28:22Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "d239aef16189a0721c5dfcef55a21a1e6ae9d0b7",
      "LastModified" : "2019-03-20T11:19:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defines the CMake commands/policies\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make the scripts available in the 'cmake' directory available for the\n\n# 'include()' command, 'find_package()' command.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Setup the project\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# check for and enable c++11 support\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Beware of dragons\n",
        "Line" : 21,
        "CharPositionInLine" : 19
      },
      "5" : {
        "Text" : "# enable assembly\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This makes all the libraries build as SHARED\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Allow for dependnecies to exist in non-install location\n\n#\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Find Libraries\n\n#\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Find HDF5\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Look for MOAB if requested\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# user may have set a search path\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Look for DAGMC if requested\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Always look for DAGMC library\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Find Python\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Find NumPy\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Find f2py, if building spatial solver\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Include the CMake script UseCython.cmake.  This defines add_cython_module().\n\n# Instruction for use can be found at the top of cmake/UseCython.cmake.\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Add JsonCpp Flag\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\n\n# Build and install!\n\n#\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# With CMake, a clean separation can be made between the source tree and the\n\n# build tree.  When all source is compiled, as with pure C/C++, the source is\n\n# no-longer needed in the build tree.  However, with pure *.py source, the\n\n# source is processed directly.  To handle this, we reproduce the availability\n\n# of the source files in the build tree.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# add sub dirs\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# install python package\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "cmake/DownloadAndExtract.cmake" : {
      "ObjectId" : "7bd6028bc3ad03c39ed95b510a35490801ecfd9c",
      "LastModified" : "2019-01-09T21:45:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macros for downloading a tar file and extracting it if a sample file\n\n# doesn't already exist.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# don't need to do anything\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# download the file if we need to\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# extract the file\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# first download the src file\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# now download the platform specific file\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "cmake/FindCython.cmake" : {
      "ObjectId" : "a09df033bca66afd1029ef62510c4a678c912c3e",
      "LastModified" : "2018-01-16T21:42:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the Cython compiler.\n\n#\n\n# This code sets the following variables:\n\n#\n\n#  CYTHON_EXECUTABLE\n\n#  CYTHON_VERSION\n\n#  CYTHON_VERSION_MAJOR\n\n#  CYTHON_VERSION_MINOR\n\n#  CYTHON_VERSION_MICRO\n\n#\n\n# See also UseCython.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Kitware, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#=============================================================================\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use the Cython executable that lives next to the Python executable\n\n# if it is a local installation.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# get the version strings\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/FindDAGMC.cmake" : {
      "ObjectId" : "686a11d4f564f19024b05f49a10720b011abf89b",
      "LastModified" : "2019-02-15T17:37:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find DAGMC\n\n# Once done this will define\n\n#\n\n#  DAGMC_FOUND - system has DAGMC\n\n#  DAGMC_INCLUDE_DIRS - the DAGMC include directory\n\n#  DAGMC_LIBRARIES - Link these to use DAGMC\n\n#  DAGMC_DEFINITIONS - Compiler switches required for using DAGMC\n\n#\n\n#  Copyright (c) 2010 Roman Putanowicz <putanowr@l5.pk.edu.pl>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindF2py.cmake" : {
      "ObjectId" : "fec986305191f51365c4f716b8399f67598bbb9e",
      "LastModified" : "2018-01-16T21:42:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the f2py program, which comes as part of NumPy.\n\n#\n\n# This code sets the following variables:\n\n#\n\n#  F2PY_EXECUTABLE\n\n#  F2py_FOUND\n\n#  F2PY_VERSION\n\n#  F2PY_VERSION_MAJOR\n\n#  F2PY_VERSION_MINOR\n\n#  F2PY_VERSION_MICRO\n\n#\n\n# This code uses the following variables\n\n#\n\n#  DEPS_BIN_HINTS\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# because arch is dumb\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# get the version string\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/FindMOAB.cmake" : {
      "ObjectId" : "98dd290daa1279cb251f71b9aeebaeca43289be1",
      "LastModified" : "2018-01-16T21:42:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find MOAB\n\n# Once done this will define\n\n#\n\n#  MOAB_FOUND - system has MOAB\n\n#  MOAB_INCLUDE_DIRS - the MOAB include directory\n\n#  MOAB_LIBRARIES - Link these to use MOAB\n\n#  MOAB_DEFINITIONS - Compiler switches required for using MOAB\n\n#\n\n#  Copyright (c) 2010 Roman Putanowicz <putanowr@l5.pk.edu.pl>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set MOAB_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/FindNumpy.cmake" : {
      "ObjectId" : "136fce28cf5ed4774e358ddd5729a9ffb443bd53",
      "LastModified" : "2018-01-16T21:42:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Numpy\n\n# NumPy is the fundamental package needed for scientific computing with Python\n\n# www.numpy.scipy.org\n\n#\n\n# The module defines the following variables:\n\n#  NUMPY_FOUND - the system has numpy\n\n#  NUMPY_INCLUDE_DIR - where to find numpy/arrayobject.h\n\n#  NUMPY_INCLUDE_DIRS - numpy include directories\n\n#  NUMPY_VERSION_STRING - version (ex. 1.2.3)\n\n#  NUMPY_MAJOR_VERSION - major version (ex. 1)\n\n#  NUMPY_MINOR_VERSION - minor version (ex. 2)\n\n#  NUMPY_PATCH_VERSION - patch version (ex. 3)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2012 EDF-EADS-Phimeca\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set NUMPY_INCLUDE_DIR\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set NUMPY_INCLUDE_DIRS\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# version\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# check version\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# handle REQUIRED and QUIET options\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/FindPyne.cmake" : {
      "ObjectId" : "8c825d80207bcd2786b1180a524791d037f017e4",
      "LastModified" : "2018-01-16T21:42:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find PyNE libraries\r\n\n# This module finds the libraries corresponding to the PyNE library, using the Python\r\n\n# interpreter.\r\n\n# This code sets the following variables:\r\n\n#\r\n\n#  PYNE_LIBS_FOUND            - have the PyNE libs been found\r\n\n#  PYNE_PREFIX                - path to the PyNE installation\r\n\n#  PYNE_LIBS_DIR              - path to the PyNE libs dir\r\n\n#  PYNE_INCLUDE_DIR           - path to where PyNE header files are\r\n\n#\r\n\n# To use PyNE add the following lines to your main CMakeLists.txt file:\r\n\n# \r\n\n#   # Find the Pyne installation\r\n\n#   find_package(Pyne REQUIRED)\r\n\n#   link_directories(${PYNE_LIBS_DIR})\r\n\n#   include_directories(${PYNE_INCLUDE_DIR})\r\n\n#\r\n\n# Enjoy!\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use the Python interpreter to find the libs.\r\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Convert the process output into a list\r\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure all directory separators are '/'\r\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We use PYNE_INCLUDE_DIR, PYNE_LIBS_DIR and PYNE_PREFIX for the\r\n\n# cache entries because they are meant to specify the location of a single\r\n\n# library. We now set the variables listed by the documentation for this\r\n\n# module.\r\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/PyneMacros.cmake" : {
      "ObjectId" : "727b5b135e53a3d3ad7b13e45b41f08dc33d7bf6",
      "LastModified" : "2019-01-09T21:45:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set platform preprocessor macro\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# C++ settings\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# first set OS\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# next set compiler\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Fortran settings\n\n# FFLAGS depend on the compiler\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# languages\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Augment the Fortran implicit link libraries\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# The previous method found the gcc_s library by version,\n\n# find_library(LIBGCC_S_PATH gcc_s.${gcc_s_ver}\n\n# but this always found the library regardless of version, and then\n\n# the name as set was different from what was found.  This new way\n\n# ensures that the name is consistent with what was found.\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Pull off leading lib and trailing .dylib.\n",
        "Line" : 86,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# gfortran\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# ifort (untested)\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# g77\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#  add lib to pyne list\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# add the library\n",
        "Line" : 127,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# add it to the list of pyne libraries\n",
        "Line" : 129,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Print pyne logo\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# determine if spatial solver module should be built\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# set build type\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Default to release build type\n",
        "Line" : 162,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# quiets fortify_source warnings when not compiling with optimizations\n\n# in linux distros where compilers were compiled with fortify_source enabled by\n\n# default (e.g. Arch linux).\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Setup the RPATH correctly\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# use, i.e. don't skip the full RPATH for the build tree\n",
        "Line" : 180,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# when building, don't use the install RPATH already\n\n# (but later on when installing)\n",
        "Line" : 183,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# add the automatically determined parts of the RPATH\n\n# which point to directories outside the build tree to the install RPATH\n",
        "Line" : 189,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# the RPATH to be used when installing, but only if it's not a system directory\n",
        "Line" : 193,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Download bateman solver from PyNE data\n",
        "Line" : 208,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Download CRAM solver from PyNE data\n",
        "Line" : 212,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# fast compile with assembly, if available.\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# get the base name, without the extension\n",
        "Line" : 227,
        "CharPositionInLine" : 55
      },
      "29" : {
        "Text" : "# get the assembly file name\n",
        "Line" : 228,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# pick the filename to compile, either source or assembly\n",
        "Line" : 235,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# set some compile flags for the selected file\n",
        "Line" : 248,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 32
    },
    "cmake/ReplicatePythonSourceTree.cmake" : {
      "ObjectId" : "3cb5da5e24c1a91c5feb18779a0d5890df3a6bc2",
      "LastModified" : "2019-01-09T21:45:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Note: when executed in the build dir, then CMAKE_CURRENT_SOURCE_DIR is the\n\n# build dir.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/SelectLibraryConfigurations.cmake" : {
      "ObjectId" : "205c01d36ab3a8d0185017e731b039e845414337",
      "LastModified" : "2018-01-16T21:42:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# select_library_configurations( basename )\n\n#\n\n# This macro takes a library base name as an argument, and will choose good\n\n# values for basename_LIBRARY, basename_LIBRARIES, basename_LIBRARY_DEBUG, and\n\n# basename_LIBRARY_RELEASE depending on what has been found and set.  If only\n\n# basename_LIBRARY_RELEASE is defined, basename_LIBRARY, basename_LIBRARY_DEBUG,\n\n# and basename_LIBRARY_RELEASE will be set to the release value.  If only\n\n# basename_LIBRARY_DEBUG is defined, then basename_LIBRARY,\n\n# basename_LIBRARY_DEBUG and basename_LIBRARY_RELEASE will take the debug value. \n\n#\n\n# If the generator supports configuration types, then basename_LIBRARY and\n\n# basename_LIBRARIES will be set with debug and optimized flags specifying the\n\n# library to be used for the given configuration.  If no build type has been set\n\n# or the generator in use does not support configuration types, then\n\n# basename_LIBRARY and basename_LIBRARIES will take only the release values.\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2009 Will Dicharry <wdicharry@stellarscience.com>\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This macro was adapted from the FindQt4 CMake module and is maintained by Will\n\n# Dicharry <wdicharry@stellarscience.com>.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Utility macro to check if one variable exists while another doesn't, and set\n\n# one that doesn't exist to the one that exists.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# if only the release version was found, set the debug to be the release\n\n# version.\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# if only the debug version was found, set the release value to be the\n\n# debug value.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# if the generator supports configuration types or CMAKE_BUILD_TYPE\n\n# is set, then set optimized and debug options.\n",
        "Line" : 54,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# If there are no configuration types or build type, just use\n\n# the release version\n",
        "Line" : 64,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 8
    },
    "cmake/UseCython.cmake" : {
      "ObjectId" : "46ec804e7133226cc59955380370b5e10eb5e3e2",
      "LastModified" : "2018-01-16T21:42:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define a function to create Cython modules.\n\n#\n\n# For more information on the Cython project, see http://cython.org/.\n\n# \"Cython is a language that makes writing C extensions for the Python language\n\n# as easy as Python itself.\"\n\n#\n\n# This file defines a CMake function to build a Cython Python module.\n\n# To use it, first include this file.\n\n#\n\n#   include( UseCython )\n\n#\n\n# Then call cython_add_module to create a module.\n\n#\n\n#   cython_add_module( <module_name> <src1> <src2> ... <srcN> )\n\n#\n\n# To create a standalone executable, the function\n\n#\n\n#   cython_add_standalone_executable( <executable_name> [MAIN_MODULE src1] <src1> <src2> ... <srcN> )\n\n#\n\n# To avoid dependence on Python, set the PYTHON_LIBRARY cache variable to point\n\n# to a static library.  If a MAIN_MODULE source is specified,\n\n# the \"if __name__ == '__main__':\" from that module is used as the C main() method\n\n# for the executable.  If MAIN_MODULE, the source with the same basename as\n\n# <executable_name> is assumed to be the MAIN_MODULE.\n\n#\n\n# Where <module_name> is the name of the resulting Python module and\n\n# <src1> <src2> ... are source files to be compiled into the module, e.g. *.pyx,\n\n# *.py, *.c, *.cxx, etc.  A CMake target is created with name <module_name>.  This can\n\n# be used for target_link_libraries(), etc.\n\n#\n\n# The sample paths set with the CMake include_directories() command will be used\n\n# for include directories to search for *.pxd when running the Cython complire.\n\n#\n\n# Cache variables that effect the behavior include:\n\n#\n\n#  CYTHON_ANNOTATE\n\n#  CYTHON_NO_DOCSTRINGS\n\n#  CYTHON_FLAGS\n\n#\n\n# Source file properties that effect the build process are\n\n#\n\n#  CYTHON_IS_CXX\n\n#\n\n# If this is set of a *.pyx file with CMake set_source_files_properties()\n\n# command, the file will be compiled as a C++ file.\n\n#\n\n# See also FindCython.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Kitware, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#=============================================================================\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Configuration options.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create a *.c or *.cxx file from a *.pyx file.\n\n# Input the generated file basename.  The generate file will put into the variable\n\n# placed in the \"generated_file\" argument. Finally all the *.py and *.pyx files.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default to assuming all files are C.\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Determine if it is a C or C++ file.\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Get the include directories.\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Determine dependencies.\n\n# Add the pxd file will the same name as the given pyx file.\n",
        "Line" : 115,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# pxd files to check for additional dependencies.\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# check for C header dependencies\n",
        "Line" : 134,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Had trouble getting the quote in the regex\n",
        "Line" : 138,
        "CharPositionInLine" : 10
      },
      "11" : {
        "Text" : "# check for pxd dependencies\n",
        "Line" : 150,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Look for cimport statements.\n",
        "Line" : 152,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Add the module to the files to check, if appropriate.\n",
        "Line" : 164,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# if it is not already going to be checked\n",
        "Line" : 176,
        "CharPositionInLine" : 22
      },
      "15" : {
        "Text" : "# if it has not already been checked\n",
        "Line" : 177,
        "CharPositionInLine" : 20
      },
      "16" : {
        "Text" : "# if pxd file can be found\n",
        "Line" : 178,
        "CharPositionInLine" : 18
      },
      "17" : {
        "Text" : "# for each module dependency discovered\n",
        "Line" : 179,
        "CharPositionInLine" : 21
      },
      "18" : {
        "Text" : "# for each pxd file to check\n",
        "Line" : 180,
        "CharPositionInLine" : 19
      },
      "19" : {
        "Text" : "# Look for included pxi files\n",
        "Line" : 184,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# for each include statement found\n",
        "Line" : 194,
        "CharPositionInLine" : 17
      },
      "21" : {
        "Text" : "# pyx_file\n",
        "Line" : 196,
        "CharPositionInLine" : 15
      },
      "22" : {
        "Text" : "# Set additional flags.\n",
        "Line" : 198,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Include directory arguments.\n",
        "Line" : 220,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Determining generated file name.\n",
        "Line" : 227,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Add the command to run the post-processor.\n",
        "Line" : 235,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Add the command to run the compiler.\n",
        "Line" : 242,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Remove their visibility to the user.\n",
        "Line" : 253,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# cython_add_module( <name> src1 src2 ... srcN )\n\n# Build the Cython Python module.\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# cython_add_standalone_executable( _name [MAIN_MODULE src3.py] src1 src2 ... srcN )\n\n# Creates a standalone executable the given sources.\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 30
    },
    "docs/Makefile" : {
      "ObjectId" : "21208e5b58733c112b0d5bf41e9e0ff91587401a",
      "LastModified" : "2018-01-16T21:42:21Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# USE THIS ONE!!!\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "pyne/CMakeLists.txt" : {
      "ObjectId" : "37a979037faf1739e8bd49c79c1a3c6f25517d93",
      "LastModified" : "2019-02-15T17:37:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Python extension modules\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Print include dir\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Build normal cython modules\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Cram is actually a C, not C++ file\n\n#\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# dagmc requires a rename and is only built if we have MOAB.\n\n#\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# Spatial Solver\n\n#\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "pyne/xs/CMakeLists.txt" : {
      "ObjectId" : "230f6afa0fd0d9de491ea3472c6e472e9066c403",
      "LastModified" : "2018-01-16T21:42:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Python extension modules\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# xs\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "6408fe75d9cac674dad651a4eea6f9fd046fe902",
      "LastModified" : "2019-02-15T17:37:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# setup source files\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\"transport_spatial_methods/3d/main.f90\"\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#check operating system\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# setup source files\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Fast compile decay and cram\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# compile and link library\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Print include dir\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Install header files\n\n#\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Install libpyne\n\n#\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    }
  },
  "FileTypes" : {
    "CMAKE" : 15,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 2143
}