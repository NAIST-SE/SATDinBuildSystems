{
  "Repository" : "83463",
  "Revision" : "HEAD",
  "ObjectId" : "84e50658778231017bf0402a47a8c7758bcbc90d",
  "CommitTime" : "2019-04-17T23:20:43Z",
  "Files" : {
    "Makefile.am" : {
      "ObjectId" : "9beddc6b717b40e97b991c717ab842d63ab7493d",
      "LastModified" : "2017-05-30T23:48:43Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in -*-Makefile-*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "config/cygwin/Makefile" : {
      "ObjectId" : "2f9538ed62268d9345477c39179727cc675930ff",
      "LastModified" : "2017-11-19T21:47:04Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Hey, Emacs, this is a -*- Makefile -*- #\n\n#\n\n# GNUPLOT Makefile for Cygwin on WinNT and Win95/98/2000\n\n#\n\n# To compile gnuplot for WinXX:\n\n#\n\n# - check the beginning of this file settings you may want to change\n\n#   You'll have to tell it where to find the Help Compiler, among other\n\n#   things.\n\n# - compile the package: go to directory 'gnuplot' and issue the commands\n\n#\t make -C config/cygwin\n\n#\t make install -C config/cygwin\n\n# - resource compiler used is windres.exe in Cygwin\n\n# - note pdf, png, and gif libraries if used have to be build for Cygwin\n\n#   with former -mno-cygwin option\n\n# - -static used for static linking to libz-w.a and libpng-w.a\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# ************** Begin of Configuration section ************************\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Choose target to compile:\n\n# 1. wgnuplot.exe: The usual Windows GUI for input commands.\n\n# 2. wgnuplot_pipes.exe: The usual Windows GUI with support of pipes, so\n\n#    that e.g.  plot '<awk -f preprocess.awk my.dat')  or  x=system('ls -1')\n\n#    can work. Drawback: wgnuplot_pipes.exe keeps attached to a console (DOS)\n\n#    window it was launched from, or it opens a new one.\n\n# 3. gnuplot.exe: Console mode instead of GUI for the text input.\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#TARGET=wgnuplot_pipes.exe\n\n#TARGET=gnuplot.exe\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Comment out the definition lines to disable the according features:\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# GIF, PNG, JPEG device drivers\n\n# Requires gd library. There are two possibilities how to configure these\n\n# drivers for use in gnuplot, depending on the gd version. See README.1ST for\n\n# more details. \n\n#\n\n# You should compile gnuplot with GD library v2.0 or newer.\n\n# This library writes PNG, GIF and JPEG images.\n\n# If libgd has been compiled with TrueType font support, then you can use\n\n# scaled TrueType fonts in png images. If not, then uncomment FREETYPE.\n\n# Requires GD, PNG and Z libraries, optionally libfreetype.\n\n#\n\n#NEWGD=1\n\n#JPEG=1\n\n#FREETYPE=1\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# PDF device driver\n\n# requires PNG and Z libraries based on particular PDF library used\n\n#PDF=1\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# DEBUGging support\n\n# creates binaries suitable for debugging. Some bugs may come and go\n\n# as opposed to a production build since we lower the optimization level\n\n#DEBUG=1\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# MOUSE support for the windows terminal\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Below you can adapt paths according to your software setup:\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Where to place gnuplot.gih helpfile:\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Where to install the PostScript prologue files, relatively to the executable\n\n# wgnuplot.exe\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Similarly for javascript files for the canvas terminal:\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Similarly for lua scripts used by the lua terminal\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Destination directory, used in 'make install':\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# give here the path to Gygwin GCC compiler unless it is already in PATH\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#GCCPATH = /bin/\n\n#GCCPATH =\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Do you want some special optimization?\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# To compile the .chm file you need hcw either out of Microsoft SDK or MS HTML Help\n\n# Workshop. The latter can be obtained at www.helpmaster.com/help/devaids.htm.\n\n# Put the path to hcw here unless it is already in PATH:\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Switches are for HCW 4.03:\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Choose which windres/rc do you want to use (GNU windres or MS RC):\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# If uncommented GNU_RC above and rc.exe not in PATH, then set:\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# GNU sort\n\n#GNUSORT = gsort.exe\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#\n\n# *************** End of Configuration section *************************\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\n\n#         There shouldn't be anything to be changed below this line\n\n# **********************************************************************\n\n#\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# PIPES: define if you would prefer support of pipes undef Windows (e.g.\n\n# plot '<awk -f preprocess.awk my.dat'). Drawback: wgnuplot_pipes.exe keeps\n\n# attached to a console=DOS window it was launched from, or it opens a new one.\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# CONSOLE: define if you would prefer the console (non-GUI) version of the\n\n# text command window.\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Set PIPES and CONSOLE according to the target\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# macros for makefile.all\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# -I/usr/local/include\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# RC = /bin/windres\n",
        "Line" : 230,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# include the 'core makefile template'\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# default rules\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Rules:\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#endif /* GNUPLOT_TIMEBASE_H_INCLUDED */\" >> $@t\n",
        "Line" : 302,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "#make binary demo files\n",
        "Line" : 342,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#\n\n# Create config.h\n\n#\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Create documentation in various formats\n\n#\n",
        "Line" : 355,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Generate TeX documentation with the complete list of all terminals\n\n# (gnuplot.tex should be the same on all platforms):\n",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# sort alphabetically all terminals (note: req. GNU sort, not from MS)\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# sequence of terminals according to \"ls term/*.trm\":\n",
        "Line" : 372,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Old version: generate documentation with only currently used terminals:\n",
        "Line" : 383,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Call LaTeX three times to get the toc right.\n",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# clean up temporary files\n",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# now move the whole stuff to its destination\n",
        "Line" : 422,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 45,
      "Errorlog" : "line 301:71 token recognition error at: '\"\\1'\n"
    },
    "config/djgpp/Makefile" : {
      "ObjectId" : "42da06b40ddc1a0707926cc5b22090fcf265371b",
      "LastModified" : "2018-04-07T08:20:49Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Hello, emacs: this is a -*- Makefile -*-\n\n#\n\n# GNUPLOT Makefile for DJGPP version 2 using a cross compiler and a Unix-like shell\n\n#\n\n# Tested on Windows using MSYS2.\n\n#\n\n# Usage:\n\n#   Change the configuration section in 'config/djgpp/Makfile' to\n\n#     match your setup.\n\n#   Start e.g. the MSYS/MSYS2 prompt and change directory to 'config/djgpp'.\n\n#   Options can also be changed on the command line, e.g.:\n\n#\t make GD=1 LUA=1 ICONV=1 CERF=1 MGRX=1 all\n\n#\t make install\n\n#\n\n# AUTHORS : several ... including Edzer Pebesma <pebesma@metoor.frw.uva.nl>\n\n#           and         Hans-Bernhard Broeker <broeker@physik.rwth-aachen.de>\n\n#           and         Bastian Maerkisch\n\n# \n\n# \"install\" target: copies the executable etc.to a given\n\n# directory; to customize change FINALDEST below\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# External libraries\n\n#  Use the MGRX fork instead of GRX\n\n#MGRX=1\n\n#  lua, libiconv and readline are available as binaries\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#READLINE=1\n\n#  libgd has to be compiled from sources, it requires\n\n#  libjpeg, libpng16 and libz (binaries available) and\n\n#  freetype (sources)\n\n#GD=1\n\n#GD_FONTCONFIG=1\n\n#  cerf has to be compiled from sources\n\n#CERF=1\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Options\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#DEBUG=1\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Choose cross-platform compilation (CROSS not defined is untested)\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Destination of the install target\n\n# (no trailing \\ for directory names)\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# here customize the name of the executable\n\n# exe file will be  gnuplot.exe:\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# where to place gnuplot.gih helpfile upon MAKE\n\n# note it will be built inside gnuplot\\$(HELPDEST)\n\n# and eventually copied to FINALDEST during install\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# name of the helpfile\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# gnuplot will look for gnuplotrc here:\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Where to install the PostScript prologue files, relatively to the executable\n\n# gnuplot.exe\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Similarly for javascript files for the canvas terminal:\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Similarly for lua scripts used by the lua terminal\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Install will put TeX files here:\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# DJGPP (cross-)compiler\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# configuration files\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# terminal support files\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# README etc\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#-unix2dos $(FINALDEST)/*.txt $(FINALDEST)/README $(FINALDEST)/ChangeLog\n\n#-unix2dos $(FINALDEST)/Copyright $(FINALDEST)/NEWS $(FINALDEST)/BUGS $(FINALDEST)/RELEASE_NOTES\n",
        "Line" : 321,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# demo and contrib\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#HBB: if at all, this batch-file should only be generated by a\n\n#separate target, like 'install-bat'. Besides, it doesn't work,\n\n#as is, because DOS always executes foo.exe before even looking for\n\n#a foo.bat\n\n#\t$(DEL)  $(EXENAME).bat\n\n#\techo @echo off > $(EXENAME).bat\n\n#\techo SET GNUHELP= $(FINALDEST)\\\\$(HELPFILE) >> $(EXENAME).bat\n\n#\techo SET GNUPLOT= $(FINALDEST) >> $(EXENAME).bat\n\n#\techo $(FINALDEST)\\\\$(EXENAME).exe %1 %2 %3 %4 %5 %6 >> $(EXENAME).bat\n\n#\techo SET GNUHELP= >> $(EXENAME).bat\n\n#\techo SET GNUPLOT= >> $(EXENAME).bat\n\n#\t$(COPY) $(EXENAME).bat $(FINALDEST)\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# clean target - remove all temp files, but leave executable intact\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# realclean target - remove all files created by the makefile\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#####\n\n##     END OF GNUPLOT MAKEFILE FOR DJGPP V2\n\n#####\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25,
      "Errorlog" : "line 109:5 token recognition error at: '\"\\nendif\\n\\n# Native compiler\\nNCC = gcc\\n\\n# include directories\\nINCLUDE = -I. -I$(S) -Ic:/djgpp/include\\nNINCLUDE = -I$(TOP)/config/mingw -I$(S)\\n\\n# libraries\\nLIB = -Lc:/djgpp/lib\\n\\nTERMFLAGS = \\\\n\\t-DGNUPLOT_PS_DIR=$(SS)$(GNUPLOT_PS_DIR)$(SS) \\\\n\\t-DGNUPLOT_JS_DIR=$(SS)$(GNUPLOT_JS_DIR)$(SS)\\nTERMLIBS =\\n\\nifdef LUA\\n\\tOPTS += -DHAVE_LUA\\n\\tTERMFLAGS += -DGNUPLOT_LUA_DIR=$(SS)$(GNUPLOT_LUA_DIR)$(SS)\\n\\tTERMLIBS += -llua\\n\\tLUATARGETS += gnuplot-lua-tikz.sty\\n\\tLUA_HELP = gnuplot-tikz.help\\nendif\\n\\n# for svga term driver\\nifdef DJSVGA\\nifndef MGRX\\n\\tTERMFLAGS += -DDJSVGA=1 -DHAVE_GRX -Ic:/djgpp/contrib/grx249/include\\n\\tTERMLIBS  += -Lc:/djgpp/contrib/grx249/lib/dj2 -lgrx20\\nelse\\n\\tTERMFLAGS += -DDJSVGA=1 -DHAVE_GRX -DHAVE_MGRX -Ic:/djgpp/contrib/mgrx110/include\\n\\tTERMLIBS  += -Lc:/djgpp/contrib/mgrx110/lib/dj2 -lmgrx\\nendif\\nelse\\n\\tTERMFLAGS += -DDJSVGA=0\\nendif\\n\\nifdef MOUSE\\n#ifdef MGRX\\n\\tOPTS += -DUSE_MOUSE\\n#endif\\nendif\\n\\nifdef ICONV\\n\\tOPTS += -DHAVE_ICONV\\n\\tLIB += -liconv \\nendif\\n\\nifdef GD\\n\\tOPTS += -Ic:/djgpp/include/gd \\\\n\\t\\t-DHAVE_LIBGD -DHAVE_GD_H -DHAVE_GD_GIF -DGIF_ANIMATION -DHAVE_GD_PNG -DHAVE_GD_JPEG \\\\n\\t\\t-DHAVE_GD_TTF\\n\\tTERMLIBS += -lgd -ljpeg -lpng16 -lz \\\\n\\t\\t-lfreetype\\nifdef GD_FONTCONFIG\\n\\tTERMLIBS += -lfontconfig -lexpat -luuid -lfreetype\\nendif\\nendif\\n\\nifdef READLINE\\n\\tOPTS += -DHAVE_LIBREADLINE -D HAVE_READLINE_READLINE_H -DHAVE_READLINE_HISTORY_H -DHAVE_READLINE_RESET \\\\n\\t\\t-DHAVE_READLINE_SIGNAL_HANDLER -DHAVE_READLINE_PENDING_SIGNAL\\n\\tLIB += -lreadline\\nendif\\n\\nifdef CERF\\n\\tOPTS += -DHAVE_LIBCERF -DNEED_CEXP\\n\\tLIB += -lcerf\\nendif\\n\\nifdef DEBUG\\n\\tOPTS += -g\\nendif\\n\\n# HBB : added $(OPTS) so user can\\n#   change CFLAGS easily, without having to change makefile\\nCFLAGS = -DHAVE_CONFIG_H \\\\n\\t-DGNUPLOT_SHARE_DIR=$(SS)$(GNUPLOT_SHARE_DIR)$(SS) \\\\n\\t-O2 $(OPTS) -Wall -Wno-misleading-indentation\\n\\nLINKOPT = $(LDFLAGS) $(LIB) $(TERMLIBS) -lm -lpc\\nifdef DEBUG\\n\\tLINKOPT += -g\\nendif\\n\\n# abbreviations for relative directory names\\nTOP=../..\\nS=$(TOP)/src/\\nT=$(TOP)/term/\\nD=$(TOP)/docs/\\nM=$(TOP)/demo/\\nO=o\\n\\nVPATH = $(S)\\n\\n# use makefile.all:\\ninclude $(S)/makefile.all\\n\\nOBJS = $(COREOBJS) version.$(O)\\n\\n.SUFFIXES: .exe .o .c\\n\\n.c.o:  \\n\\t$(CC) -c $(CFLAGS) $(INCLUDE) -MMD -MT '$*.o' -MF $*.d -o $@ $<\\n\\nall: $(EXENAME).exe  $(HELPDEST)/$(HELPFILE)  $(M)binary?  demo_plugin.dxe  $(LUATARGETS)\\n\\n# -s performs the coff2exe step implicitly (?)\\n# HBB: that's plain wrong: -s means 'strip executable',\\n#   and stubify (formerly called stubify) is now always done\\n#   automatically in the link step. I changed this so you\\n#   get a debuggable gnuplot, but a stripped gnuplot.exe\\n$(EXENAME).exe : $(OBJS)\\n\\t$(CC) -o $(EXENAME) $(OBJS) $(LINKOPT)\\n\\t$(OBJCOPY) --strip-all $(EXENAME) $(EXENAME).exe\\n\\t$(STUBIFY) $(EXENAME).exe\\n\\ncommand.o: command.c plot.h setshow.h help.h\\n\\t$(CC) -c $(CFLAGS) $(INCLUDE) -DHELPFILE=$(SS)$(HELPFILE)$(SS) -MMD -MT '$*.o' -MF $*.d -o $@ $<\\n\\nshow.o: show.c plot.h setshow.h\\n\\t$(CC) -c $(CFLAGS) $(INCLUDE) -DHELPFILE=$(SS)$(HELPFILE)$(SS) -MMD -MT '$*.o' -MF $*.d -o $@ $<\\n\\nterm.o: term.c term.h plot.h setshow.h bitmap.h $(CORETERM)\\n\\t$(CC) -c $(CFLAGS) $(INCLUDE) $(TERMFLAGS) -I$(T) -MMD -MT '$*.o' -MF $*.d -o $@ $<\\n\\nEMAIL=gnuplot-info@lists.sourceforge.net\\nversion.o: version.c\\n\\t$(CC) -c -DCONTACT=$(SS)$(EMAIL)$(SS) $(CFLAGS) $(INCLUDE) -MMD -MT '$*.o' -MF $*.d -o $@ $<\\n\\n# convert gnuplot.doc to gnuplot.gih\\n$(HELPDEST)/$(HELPFILE): doc2gih.exe $(D)gnuplot.doc\\n\\t$(WD)doc2gih.exe  $(D)gnuplot.doc > $@\\n\\ndoc2gih.exe: $(D)doc2gih.c $(D)termdoc.c $(CORETERM) $(LUA_HELP)\\n\\t$(NCC) $(CFLAGS) -DWINDOWS_NO_GUI $(NINCLUDE) $(TERMFLAGS) -I$(T) -o $@ $(D)doc2gih.c $(D)termdoc.c\\n\\ndemo_plugin.o: $(M)plugin/demo_plugin.c\\n\\t$(CC) $(CFLAGS) $(INCLUDE) -I$(M)plugin -c -o $@ $<\\n\\ndemo_plugin.dxe: demo_plugin.o\\nifdef CROSS\\n\\tPATH=$(subst /,\\\\,$(DJBIN)) DJDIR=$(DJDIR) $(DXE3GEN) -o $@ -V -E _sinc -E _nsinc -E _divisors $< -lm -lc\\nelse\\n\\t$(DXE3GEN) -o $@ -V -E _sinc -E _nsinc -E _divisors $< -lm -lc\\nendif\\n\\ngnuplot-lua-tikz.sty: $(T)/lua/gnuplot-tikz.lua\\n\\tlua.exe $< style\\n\\n$(LUA_HELP): $(T)/lua/gnuplot-tikz.lua\\n\\tlua.exe $< termhelp > $@\\n\\n# now for the demo bin\\n$(M)binary?: bf_test.exe\\n\\t$(WD)bf_test.exe\\n\\t$(COPY) binary? $(M)\\n\\t$(DEL) binary?\\n\\nbf_test.o: bf_test.c\\n\\t$(NCC) $(NINCLUDE) $(CFLAGS) -c $<\\n\\nbf_test.exe: bf_test.o\\n\\t$(NCC) $(NINCLUDE) $(CFLAGS) -DWINDOWS_NO_GUI bf_test.o -lm -o $@\\n\\n# now install things and create a .bat file to make things easier\\ninstall: all\\n\\t-$(MKDIR) $(FINALDEST)\\b'\nline 279:36 token recognition error at: '\\b'\nline 281:32 token recognition error at: '\\b'\nline 283:46 token recognition error at: '\\b'\n"
    },
    "config/mingw/Makefile" : {
      "ObjectId" : "a96f704a5be93907ec34f20db1b5c56729216242",
      "LastModified" : "2019-01-15T14:23:55Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Hello, emacs: this is a -*- Makefile -*-\n\n#\n\n# GNUPLOT Makefile for MinGW/MSYS or MinGW-w64/MSYS2 on Windows \n\n#\n\n# Note: Currently MinGW cannot be used to compile gnuplot unless\n\n#       libraries / headers are updated.\n\n# Note that Mingw-w64 needs to be configured with --enable-secure-api, and\n\n#       MINGW_HAS_SECURE_API must be defined in _mingw.h.\n\n#\n\n# See http://www.mingw.org or http://msys2.github.io/ for more details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To compile gnuplot for Windows:\n\n# - Change the configuration section in 'config/mingw/Makfile' to\n\n#   match your setup.\n\n# - On the MSYS/MSYS2 prompt, change directory to 'config/mingw' and issue\n\n#   the commands\n\n#\t make all\n\n#\t make install\n\n#\n\n# This makefile was tested with \n\n#   MSYS, MinGW32 and Microsoft HTML Help 1.4 SDK.\n\n#   MSYS2, MinGW-w64\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# ************** Begin of Configuration section ************************\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Choose target to compile:\n\n# 1. PLAIN: wgnuplot.exe: The usual Windows GUI for input commands.\n\n# 2. PIPES: wgnuplot_pipes.exe: Like wgnuplot, but with an additional console\n\n#    window, so you can see the output of commands like\n\n#      plot '<awk -f preprocess.awk my.dat')  or  x=system('ls -1')\n\n# 3. CONSOLE: gnuplot.exe: Console mode instead of GUI for the text input.\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable exactly one of these:\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#VARIANT = PIPES\n\n#VARIANT = CONSOLE\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Comment out the definition lines to disable the according features:\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Define this only if doing a release build\n\n#RELEASE=1\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Set-up your compiler environment\n\n#\n\n# Define if you are using MSYS2/MinGW64 instead of MSYS/MinGW\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define if you want a 32bit version (even using a 64bit compiler)\n\n#M32=1\n\n# Define if you use clang instead of gcc, requires MINGW64\n\n#CLANG=1\n\n# Use the colorgcc frontend explicitly\n\n#COLORGCC=1\n\n# Specify the path to the compiler unless it is already in PATH\n\n#CCPATH = g:/mingw32/bin/\n\n#CCPATH = c:/apps/mingw/bin/\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Path to 32bit programs\n\n# On 32bit machines:\n\n#PROGRAMFILES32=\"$(PROGRAMFILES)\"\n\n#PROGRAMFILES32=/c/Program\\ Files\n\n# On 64bit machines: (no access to ProgramFiles(x86) variable!)\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define if you would like a UNICODE build\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# GIF, PNG, JPEG device drivers\n\n# Requires gd library. There are two possibilities how to configure these\n\n# drivers for use in gnuplot, depending on the gd version. See README.1ST for\n\n# more details.\n\n#\n\n# You should compile gnuplot with GD library v2.0 or newer.\n\n# This library writes PNG, GIF and JPEG images.\n\n# If libgd has been compiled with TrueType font support, then you can use\n\n# scaled TrueType fonts. If not, then uncomment FREETYPE.\n\n# Requires GD, PNG and Z libraries, optionally libfreetype.\n\n# In some cases, libfreetype can depend on additional libraries such as\n\n# fontconfig or iconv; then, uncomment GDAUTOCONFIGLIBS so that all of the\n\n# libraries needed for linking will be taken by running 'gdlib-config'.\n\n# Uncomment BGD if you want to use the binary DLL version of libgd.\n\n#NEWGD=1\n\n#JPEG=1\n\n#FREETYPE=1\n\n#GDAUTOCONFIGLIBS=1\n\n#GDPKGCONFIG=1\n\n#BGD=1\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# PDF device driver\n\n# Requires PNG and Z libraries based on particular PDF library used, and\n\n# optionally also TIFF library according to\n\n# 1. defined PDF_NOTIFF:\n\n#    'Light' pdf library (produces wgnuplot.exe only 200 KB larger!)\n\n#    You can get this pdf library by compiling it without PNG, GD and TIFF\n\n#    support: change  pdflib/p_intern.h  and recompile the pdf library.\n\n#    Gnuplot does not use the tiff routines, and gd/png are elsewhere.\n\n# 2. undefined PDF_NOTIFF:\n\n#    Full pdf library (produces wgnuplot.exe 500 KB larger!)\n\n#PDF=1\n\n#PDF_NOTIFF=1\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# DEBUGging support\n\n# creates binaries suitable for debugging. Some bugs may come and go\n\n# as opposed to a production build since we lower the optimization level\n\n#DEBUG=1\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# MOUSE support for the windows terminal\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Cairo/Pango terminals\n\n# Uncomment the following lines to select the pngcairo and pdfcairo\n\n# terminals\n\n#CAIROTERMS=1\n\n#CAIROLIBS=1\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# WXWIDGETS interactive terminal\n\n# Requires wxWidgets, Cairo, Pango, and their respective dependencies.\n\n# Uncomment the following lines to compile it.\n\n#WXT=1\n\n#CAIROLIBS=1\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Build qt terminal?\n\n#QT=1\n\n# specify QT installation directory\n\n#QT_DIR = /c/Qt/5.2.1/mingw48_32\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Uncomment the following line to select the lua/tikz terminal\n\n#LUA=lua\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Uncomment the following line to select the caca terminal\n\n# Requires libcaca version 0.99.beta15 or newer. A post-beta18\n\n# svn version is recommended since it contains an improved\n\n# win32 backend.\n\n#CACA=1\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Uncomment if you have libiconv\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Uncomment if you have libcerf\n\n# http://sourceforge.net/projects/libcerf/\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Uncomment if console mode gnuplot should use GNU readline\n\n# (not recommended)\n\n#GNUREADLINE=1\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Uncomment if you want to use Direct2D 1.1 (Windows 8 and Windows 7 Platform Update)\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# GRX graphics library, for debugging the DJGPP svga terminal\n\n#GRX=1\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# or, the MGRX fork of GRX\n\n#MGRX=1\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Below you can adapt paths according to your software setup:\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Where to install the PostScript prologue files, relatively to the\n\n# executable in bin/wgnuplot.exe\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Similarly for javascript files for the canvas terminal:\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Similarly for translation files for the qt terminal:\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Similarly for scripts used by the lua terminal\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Install will put TeX files here:\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# gnuplot will look for gnuplotrc here:\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Destination directory, used in 'make install':\n\n#DESTDIR = /local/opt/gnuplot-4.5\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Do you want some special optimization / flags?\n\n#CFLAGS +=\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# This does not seem to work even if GCC_COLORS is set.\n\n#CFLAGS += -fdiagnostics-color=always\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# To compile the .chm file you need the Microsoft HTML Help 1.4 SDK\n\n# It can be obtained here:\n\n# http://go.microsoft.com/fwlink/?LinkId=154968\n\n# We need to explicitly set the correct path here since we also need\n\n# adjust the include and library paths.\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Choose which resource compiler you want to use (GNU windres or MS rc):\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# If uncommented GNU_RC above and rc.exe not in PATH, then set:\n",
        "Line" : 220,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# GNU sort\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Inno Setup Compiler\n\n# get it from: http://www.jrsoftware.org/isdl.php\n\n# Use unicode version of Inno Setup Compiler but not Standard version\n\n# because the setup file of gnuplot installer is now encoded utf-8 with BOM.\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Directory that might contain extra files to be shipped with the installer.\n\n# This should include dependencies like DLLs, but also fontconfig configuration files.\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#EXTRADIST = /d/gnuplot/dist32\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#EXTRADIST = /d/gnuplot/dist64\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#EXTRADIST = /d/gnuplot/dist\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\n\n# *************** End of Configuration section *************************\n\n#\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#         There shouldn't be anything to be changed below this line\n\n# **********************************************************************\n\n#\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# We enforce to use console mode gnuplot to run gnuplot scripts in order\n\n# to see their output during make.\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# MINGW32 always produces 32bit executables\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# !COLORGCC\n",
        "Line" : 275,
        "CharPositionInLine" : 5
      },
      "51" : {
        "Text" : "#!CCPATH\n",
        "Line" : 279,
        "CharPositionInLine" : 5
      },
      "52" : {
        "Text" : "# CLANG\n",
        "Line" : 284,
        "CharPositionInLine" : 5
      },
      "53" : {
        "Text" : "# macros for makefile.all\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Name of helpfiles:\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "#  TERMLIBS += -lpdf-w -ltiff-w\n",
        "Line" : 408,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "#\treadline only usable for console mode gnuplot\n",
        "Line" : 514,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# RC = d:/cygnus/cygwin-b20/H-i586-cygwin32/bin/windres\n",
        "Line" : 530,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# include the 'core makefile template'\n",
        "Line" : 597,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# default rules\n",
        "Line" : 605,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# pull in dependency info for existing object files\n",
        "Line" : 645,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# explicit rules\n",
        "Line" : 658,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# build timestamp.h first\n",
        "Line" : 707,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Call the Qt resource compiler\n",
        "Line" : 733,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Call the Qt ui compiler\n",
        "Line" : 737,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Call the Qt meta-object compiler\n",
        "Line" : 741,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# end (Call the Qt ui compiler)\n",
        "Line" : 756,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Translation files\n",
        "Line" : 758,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# convert gnuplot.doc to windows/wgnuplot.html\n",
        "Line" : 776,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Working directory for patched Japanese sources \n",
        "Line" : 800,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Random file which receives patches by term-ja.diff to get dependencies right\n",
        "Line" : 804,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Create a local copy of relevant sources\n",
        "Line" : 808,
        "CharPositionInLine" : 1
      },
      "72" : {
        "Text" : "# Apply patch for Japanese docs\n",
        "Line" : 816,
        "CharPositionInLine" : 1
      },
      "73" : {
        "Text" : "# FIXME: some files always end up read-only...\n",
        "Line" : 824,
        "CharPositionInLine" : 1
      },
      "74" : {
        "Text" : "# Create Japanese html source in EUC-JP encoding\n",
        "Line" : 826,
        "CharPositionInLine" : 1
      },
      "75" : {
        "Text" : "# Change character encoding from EUC-JP to SHIFT-JIS\n",
        "Line" : 828,
        "CharPositionInLine" : 1
      },
      "76" : {
        "Text" : "# Adjust Encoding and Language information\n",
        "Line" : 833,
        "CharPositionInLine" : 1
      },
      "77" : {
        "Text" : "# Build help file\n",
        "Line" : 837,
        "CharPositionInLine" : 1
      },
      "78" : {
        "Text" : "# sequence of terminals according to \"ls term/*.trm\":\n",
        "Line" : 895,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Old version: generate documentation with only currently used terminals:\n",
        "Line" : 907,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# Call LaTeX three times to get the toc right.\n",
        "Line" : 925,
        "CharPositionInLine" : 1
      },
      "81" : {
        "Text" : "# rebuild makefile.all\n",
        "Line" : 1200,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 82,
      "Errorlog" : "line 934:6 token recognition error at: '\"\\u'\nline 935:7 token recognition error at: '\\u'\nline 1145:38 token recognition error at: '\\1'\nline 1146:49 token recognition error at: '\\1'\n"
    },
    "config/msvc/Makefile" : {
      "ObjectId" : "d8ff47b443bfa8363e1cf96b99ba66816a0abf39",
      "LastModified" : "2018-04-22T18:32:31Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# GNUPLOT Makefile Microsoft Visual C++ 2010 or newer\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# In order to do parallel builds you can use the nmake replacement jom,\n\n# see https://wiki.qt.io/Jom\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# John Bollinger bbands@yahoo.com, 4 March 2002:\n\n#   Added png support with zlib and libpng as subs of .\\src\n\n#     libpng and zlib can be downloaded from ftp://ftp.uu.net/graphics/png\n\n#   Added pdf support with pdflib as a sub of .\\src\n\n#     pdflib can be downloaded from http://www.pdflib.com\n\n#   Added MSC multi-thread support for compatibility with pdflib\n\n# Bastian Maerkisch bmaerkisch@web.de:\n\n#   Added support for binary version of the GD library (bgd.dll)\n\n#     gdlib can be downloaded from http://www.libgd.org/\n\n#     Development of libgd seems to have stalled:\n\n#     Latest binary build can be found at http://www.libgd.org/releases/gd-latest-win32.zip\n\n#     As of March 2011 this is version 2.0.34.\n\n#   Removed zlib and libpng again as they're already included in bgd.dll\n\n# Hans-Bernhard Broeker:\n\n#   updated to current version of MSVC\n\n#   undid silly name change for pgnuplot.exe, call console version gnuplot.exe instead\n\n#   removed remainder of wgnuplot_pipes.exe support\n\n#   isolated more configuration-dependent parts (gd, pdf, wx) to lines of their own,\n\n#     so they can be turned on/off more easily.\n\n# Bastian Maerkisch bmaerkisch@web.de:\n\n#   Out of tree version. Moved to config\\msvc\n\n#   See ChangeLog for further changes.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# To compile with Visual C:\n\n#\tOptionally download gdlib to config\\msvc\\gdwin32\n\n#\tOptionally download pdflib to config\\msvc\\pdflib and compile it if you choose the source\n\n#\n\n#\tStart the Microsoft Visual C++ command shell (e.g. via link installed setup)\n\n#\tchange to the gnuplot\\config\\msvc directory\n\n#   Edit the Makefile to match your setup. (If you don't have the optional libraries,\n\n#   you will probably have to disable some parts.)\n\n#\tNow run:\n\n#\t  nmake\n\n#\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set to one iff doing a release build\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Compilation options, disable by setting to zero\n\n# Is libgd available? (required by terminal png/jpeg/gif)?\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Is pdflib available? (required by terminal pdf)\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Build wxt terminal? (requires GTK, wxWidgets, cairo and pango libraries)\n\n# See http://wiki.wxwidgets.org/Microsoft_Visual_C%2B%2B_Guide\n\n#     http://wiki.wxwidgets.org/Visual_Studio_2008_%289.0%29\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Build Cairo Terminals (cairolatex, epslatex, pdflatex)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Build qt terminal?\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Set to one if you have Qt5 (instead of Qt4)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Build the lua/tikz terminal?\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Build caca terminal? Requires libcaca\n\n# Requires libcaca version 0.99.beta15 or newer. A post-beta18\n\n# svn version is recommended since it contains an improved\n\n# win32 backend.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Enable if you want to use Direct2D 1.1 (Windows 8 and Windows 7 Platform Update)\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Create debug build?\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Create dependency files?\n\n# Caveat:  This increases build time by more than 50%.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Location of additional libraries\n\n#GDDIR = gdwin32\n\n#LUADIR = lua\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#QTDIR = C:\\Qt\\4.8.4\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#CAIRODIR = cairo-pango\n\n#CACADIR = libcaca\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# installation directory\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#HHC=\"\"%%PROGRAMFILES(X86)%%\\HTML Help Workshop\\hhc\"\"\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Include the generated dependency files\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Call the Qt resource compiler\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Call the Qt ui compiler\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# default rules\n",
        "Line" : 346,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Batch-mode script to both compile and produces .dep files suitable for NMAKE.\n\n# Adopted from https://stackoverflow.com/a/36091560\n\n# This looks more complicated than it is, see patch #756 for an explanation.\n\n# This is roughly equivalent to -M -MM -MP -MT$@ -MF$(@R).dep in GNU make + gcc.\n\n# The script requires three arguments: The obj file extension, the file extension for the\n\n# dependencies, and the cl compiler command line.\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# dependencies\n",
        "Line" : 396,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Note: Need to adopt the dependency for other branches\n",
        "Line" : 408,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#ifndef GNUPLOT_TIMEBASE_H_INCLUDED>$@\n\n#define GNUPLOT_TIMEBASE_H_INCLUDED>>$@\n",
        "Line" : 411,
        "CharPositionInLine" : 7
      },
      "29" : {
        "Text" : "#endif>>$@\n",
        "Line" : 414,
        "CharPositionInLine" : 7
      },
      "30" : {
        "Text" : "# rules\n",
        "Line" : 505,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# explicit dependencies \n",
        "Line" : 514,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# resources\n",
        "Line" : 522,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# generate LUA TeX support files and terminal help\n",
        "Line" : 530,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# build windows help file\n",
        "Line" : 540,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# make binary demo files\n\n# WINDOWS_NO_GUI makes sure that wtext.h does not redefine fread() etc.\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# clean up temporary files\n",
        "Line" : 560,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 37,
      "Errorlog" : "line 83:10 token recognition error at: '\\Q'\nline 83:13 token recognition error at: '\\5'\nline 83:17 token recognition error at: '\\m'\nline 86:13 token recognition error at: '\\m'\nline 87:12 token recognition error at: '\\m'\nline 91:10 token recognition error at: '\"$(PROGRAMFILES)\\g'\nline 153:20 token recognition error at: '\"\\nLDFLAGS = $(LDFLAGS) /DEBUG\\n!ENDIF\\nCOMMONLIBS = kernel32.lib user32.lib gdi32.lib winspool.lib \\\\n             comdlg32.lib comctl32.lib advapi32.lib shell32.lib \\\\n             msimg32.lib gdiplus.lib shlwapi.lib \\\\n             d2d1.lib dwrite.lib ole32.lib\\nCONSOLELIBS = ole32.lib oleaut32.lib comctl32.lib\\n\\n!IFDEF LIBDIR\\nOPTIONS = $(OPTIONS) /I$(LIBDIR)\\i'\nline 164:39 token recognition error at: '\\l'\nline 174:31 token recognition error at: '\\i'\nline 175:38 token recognition error at: '\\l'\nline 182:39 token recognition error at: '\\p'\nline 183:36 token recognition error at: '\\p'\nline 193:32 token recognition error at: '\\i'\nline 193:40 token recognition error at: '\\g'\nline 193:63 token recognition error at: '\\l'\nline 193:67 token recognition error at: '\\g'\nline 193:76 token recognition error at: '\\i'\nline 193:98 token recognition error at: '\\i'\nline 193:106 token recognition error at: '\\p'\nline 193:130 token recognition error at: '\\i'\nline 193:138 token recognition error at: '\\m'\nline 215:29 token recognition error at: '\\i'\nline 215:48 token recognition error at: '\\i'\nline 215:56 token recognition error at: '\\Q'\nline 215:74 token recognition error at: '\\i'\nline 215:82 token recognition error at: '\\Q'\nline 215:99 token recognition error at: '\\i'\nline 215:107 token recognition error at: '\\Q'\nline 215:128 token recognition error at: '\\i'\nline 215:136 token recognition error at: '\\Q'\nline 215:157 token recognition error at: '\\i'\nline 215:165 token recognition error at: '\\Q'\nline 216:38 token recognition error at: '\\l'\nline 218:12 token recognition error at: '\\b'\nline 218:16 token recognition error at: '\\m'\nline 219:12 token recognition error at: '\\b'\nline 219:16 token recognition error at: '\\u'\nline 220:12 token recognition error at: '\\b'\nline 252:4 token recognition error at: '\"C:\\P'\nline 252:27 token recognition error at: '\\H'\nline 252:46 token recognition error at: '\\h'\nline 254:20 token recognition error at: '\\H'\nline 254:39 token recognition error at: '\\h'\nline 269:21 token recognition error at: '\"\\nBUILD_TARGETS = cl-wrap.cmd\\n!ENDIF\\n\\n# macros for makefile.all\\n# Note: make sure that there is a space after the last backslash for jom compatibility\\n\\nO=obj\\nS=$(TOP)\\s'\nline 278:6 token recognition error at: '\\w'\nline 279:7 token recognition error at: '\\w'\nline 280:6 token recognition error at: '\\q'\nline 282:8 token recognition error at: '\\d'\nline 283:8 token recognition error at: '\\d'\nline 287:13 token recognition error at: '\\m'\nline 405:16 token recognition error at: '\\c'\nline 405:23 token recognition error at: '\\c'\nline 406:12 token recognition error at: '\\c'\nline 406:19 token recognition error at: '\\c'\nline 409:38 token recognition error at: '\\h'\nline 409:44 token recognition error at: '\\m'\nline 419:14 token recognition error at: '\\b'\nline 431:14 token recognition error at: '\\b'\nline 507:38 token recognition error at: '\\p'\nline 507:50 token recognition error at: '\\s'\nline 507:65 token recognition error at: '\\b'\nline 510:39 token recognition error at: '\\p'\nline 510:51 token recognition error at: '\\s'\nline 510:66 token recognition error at: '\\b'\nline 515:58 token recognition error at: '\\p'\nline 516:59 token recognition error at: '\\p'\nline 543:3 token recognition error at: '\\g'\nline 544:8 token recognition error at: '\"cd $(D) & $(HHC) windows\\w'\nline 544:58 token recognition error at: '\"\\n\\tif exist $(D)windows\\w'\nline 545:51 token recognition error at: '\\w'\nline 547:25 token recognition error at: '\\d'\nline 548:111 token recognition error at: '\\d'\nline 553:22 token recognition error at: '\\b'\nline 554:69 token recognition error at: '\\b'\nline 557:27 token recognition error at: '\\d'\nline 602:24 token recognition error at: '\\b'\nline 602:45 token recognition error at: '\\b'\nline 603:32 token recognition error at: '\\b'\nline 604:31 token recognition error at: '\\b'\nline 605:34 token recognition error at: '\\b'\nline 606:41 token recognition error at: '\\b'\nline 607:36 token recognition error at: '\\b'\nline 608:39 token recognition error at: '\\b'\nline 609:54 token recognition error at: '\\b'\nline 610:60 token recognition error at: '\\b'\nline 611:54 token recognition error at: '\\b'\nline 612:25 token recognition error at: '\\b'\nline 613:43 token recognition error at: '\\b'\nline 613:47 token recognition error at: '\\p'\nline 613:74 token recognition error at: '\\b'\nline 613:78 token recognition error at: '\\p'\nline 614:52 token recognition error at: '\\b'\nline 614:56 token recognition error at: '\\p'\nline 622:15 token recognition error at: '\\s'\nline 622:21 token recognition error at: '\\g'\nline 623:15 token recognition error at: '\\s'\nline 624:24 token recognition error at: '\\s'\nline 624:30 token recognition error at: '\\L'\nline 624:53 token recognition error at: '\\s'\nline 624:59 token recognition error at: '\\L'\nline 625:15 token recognition error at: '\\s'\nline 625:21 token recognition error at: '\\L'\nline 625:27 token recognition error at: '\\R'\nline 625:45 token recognition error at: '\\s'\nline 625:51 token recognition error at: '\\L'\nline 626:15 token recognition error at: '\\s'\nline 626:21 token recognition error at: '\\L'\nline 626:27 token recognition error at: '\\g'\nline 626:50 token recognition error at: '\\s'\nline 626:56 token recognition error at: '\\L'\nline 627:24 token recognition error at: '\\d'\nline 627:46 token recognition error at: '\\d'\nline 629:81 token recognition error at: '\\d'\nline 630:24 token recognition error at: '\\l'\nline 630:49 token recognition error at: '\\l'\nline 631:51 token recognition error at: '\\l'\nline 632:16 token recognition error at: '\\w'\nline 632:20 token recognition error at: '\\R'\nline 632:54 token recognition error at: '\\w'\nline 632:58 token recognition error at: '\\R'\nline 633:16 token recognition error at: '\\w'\nline 633:20 token recognition error at: '\\R'\nline 633:57 token recognition error at: '\\w'\nline 633:61 token recognition error at: '\\R'\nline 634:24 token recognition error at: '\\d'\nline 634:46 token recognition error at: '\\d'\nline 635:16 token recognition error at: '\\d'\nline 635:32 token recognition error at: '\\d'\nline 636:24 token recognition error at: '\\d'\nline 636:29 token recognition error at: '\\g'\nline 636:52 token recognition error at: '\\d'\nline 636:57 token recognition error at: '\\g'\nline 637:16 token recognition error at: '\\d'\nline 637:21 token recognition error at: '\\g'\nline 637:38 token recognition error at: '\\d'\nline 637:43 token recognition error at: '\\g'\nline 638:40 token recognition error at: '\\g'\nline 638:48 token recognition error at: '\\g'\nline 639:40 token recognition error at: '\\p'\nline 639:46 token recognition error at: '\\g'\nline 640:40 token recognition error at: '\\l'\nline 640:46 token recognition error at: '\\g'\nline 641:40 token recognition error at: '\\c'\nline 641:48 token recognition error at: '\\g'\nline 642:13 token recognition error at: '\\s'\nline 642:19 token recognition error at: '\\L'\nline 642:25 token recognition error at: '\\R'\nline 642:62 token recognition error at: '\\l'\nline 642:68 token recognition error at: '\\g'\nline 643:13 token recognition error at: '\\s'\nline 643:19 token recognition error at: '\\L'\nline 643:25 token recognition error at: '\\g'\nline 643:67 token recognition error at: '\\l'\nline 643:73 token recognition error at: '\\g'\nline 645:18 token recognition error at: '\\l'\nline 645:22 token recognition error at: '\\g'\nline 646:57 token recognition error at: '\\l'\nline 646:63 token recognition error at: '\\g'\nline 647:57 token recognition error at: '\\p'\nline 647:63 token recognition error at: '\\g'\nline 648:59 token recognition error at: '\\c'\nline 648:67 token recognition error at: '\\g'\nline 649:64 token recognition error at: '\\g'\nline 649:72 token recognition error at: '\\g'\nline 653:18 token recognition error at: '\\g'\n"
    },
    "config/watcom/Makefile" : {
      "ObjectId" : "05d5a260ff30db2e024c668e9be69a89ddf97af1",
      "LastModified" : "2018-04-07T08:20:49Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Hello, emacs: this is a -*- Makefile -*-\n\n#\n\n# GNUPLOT Makefile OpenWatcom 1.3 on Win32\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# To compile:\n\n#       Either, from ..\\src:\n\n#         wmake -f ..\\config\\makefile.oww\n\n#       or copy this file to ..\\src, edit it to your liking, then\n\n#       from ..\\src:\n\n#         wmake -f makefile.oww\n\n# \n\n# History of this file:\n\n# 2004-02-23: Created by massive editing of makefile.nt (and config.nt)\n\n# 2004-04-25: Removed all remaining MS-isms (by peeking at how OW's\n\n#  MS namesake replacement tools generate their command lines)\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# enable exactly one of these:\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#VARIANT = PIPES\n\n#VARIANT = CONSOLE\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Programs: \n\n# The Microsoft Help compiler:\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# compiler flags: \n\n#\n\n# Defines\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# library-dependent ones may have to be added, like:\n\n# -DHAVE_LIBPNG -DHAVE_LIBPDF\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# fall back to GDI if everything else fails\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# compiler flags, determined from MS ones by OW's \"cl /showwopts\"\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# -c  : don't link\n\n# -I  : add directory to include search path\n\n# -zq : don't show a version banner message\n\n# -5r : P5-optimized, 386-compatible code, register calling convention\n\n# -zm : put each function in its own section to improve dead code elimination\n\n# -bm : target multi-threaded environment\n\n# -sg : grow the stack if needed\n\n# -zlf: store library usage in .obj files\n\n# -ei : force sizeof(enum) >= sizeof(int)\n\n# -o  : optimization options:   \n\n#    r:   reorder for pipelining\n\n#    i:   inline intrinsics\n\n#    l:   loop optimizations\n\n#    t:   optimize for speed\n\n# -j  : char is signed\n\n# -aa : allow non-const initializers for locals\n\n# -d2 : debug information\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# removed: -za99\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ...and here.\n\n# see other terminal defines in term.h\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Note: like makefile.wc, this need the special Watcom-style version of\n\n# makefile.all, because line continuation in WMake is different...\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# extensions:\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# default rule\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# file-specific rules\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#REFERENCE _wstart_ \n\n#OPTION START=_wstart_\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# NOTE: Unknown what /l 0x409 does in MS RC call --- seems to work without, though\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#make binary demo files\n\n# WINDOWS_NO_GUI makes sure that wtext.h does not redefine fread() etc.\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# clean up temporary files\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20,
      "Errorlog" : "line 27:6 token recognition error at: '\"c:\\p'\nline 27:23 token recognition error at: '\\h'\nline 27:37 token recognition error at: '\\h'\nline 27:45 token recognition error at: '\"\\n# ... and the HTML help compiler\\nHHC_DIR = c:\\P'\nline 29:26 token recognition error at: '\\H'\nline 30:6 token recognition error at: '\"$(HHC_DIR)\\h'\nline 30:25 token recognition error at: '\"\\n\\n# OpenWatcom programs:\\nWCL = wcl386\\nWCC = wcc386\\nWPP = wpp386\\nWLD = wlink\\nWRC = wrc\\n\\n# Speed up compilation a bit by running the compiler as a DLL from\\n# inside wmake:\\n!ifdef __LOADDLL__\\n!  loaddll wcc      wccd\\n!  loaddll wccaxp   wccdaxp\\n!  loaddll wcc386   wccd386\\n!  loaddll wpp      wppdi86\\n!  loaddll wppaxp   wppdaxp\\n!  loaddll wpp386   wppd386\\n!  loaddll wlink    wlinkd\\n!  loaddll wlib     wlibd\\n!endif\\n\\n# Where to install the PostScript prologue files, relatively to the executable\\n# wgnuplot.exe\\nGNUPLOT_PS_DIR = share/PostScript\\n\\n# paths for external libs added here... \\nLDLIBS = \\n\\n# Optional libraries:\\n# GDI+ and Direct2D/DirectWrite support libraries are available at\\n#   https://sourceforge.net/p/gnuplot/patches/746/\\n#GDIPLUS=1\\n#DIRECT2D=1\\n\\n# Macros for makefile.all\\nO=obj\\nT=$(TOP)\\term\\\\nD=$(TOP)\\d'\nline 69:8 token recognition error at: '\\d'\nline 70:8 token recognition error at: '\\s'\nline 71:6 token recognition error at: '\\w'\nline 151:13 token recognition error at: '\\m'\nline 273:20 token recognition error at: '\\w'\nline 273:37 token recognition error at: '\\w'\nline 274:6 token recognition error at: '\\w'\nline 274:40 token recognition error at: '\\g'\nline 276:34 token recognition error at: '\\w'\nline 285:18 token recognition error at: '\\w'\nline 286:17 token recognition error at: '\\w'\nline 288:18 token recognition error at: '\\p'\nline 289:52 token recognition error at: '\\p'\nline 320:58 token recognition error at: '\\b'\nline 323:9 token recognition error at: '\\b'\nline 326:18 token recognition error at: '\\b'\nline 332:31 token recognition error at: '\\g'\nline 332:48 token recognition error at: '\\w'\n"
    },
    "demo/html/Makefile" : {
      "ObjectId" : "d6e33262c68b0d39b71b5ded1dc5d49906c5f9a5",
      "LastModified" : "2019-01-15T14:23:55Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Auto-generation of the html demo set using the png terminal.\n\n#\n\n# Several of the demos need manual intervention:\n\n#\tfontfile vector epslatex\n\n#\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The png terminal does not support dashed lines, so let's use pngcairo\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "demo/plugin/Makefile.am" : {
      "ObjectId" : "cfe94b35961075438f495376a7b8581b3e40fc31",
      "LastModified" : "2018-04-07T08:20:49Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in -*-Makefile-*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note: Solaris SunPro C compiler needs these flags instead\n\n#\n\n# demo_plugin_so_CFLAGS = -KPIC -I$(top_srcdir)/src\n\n# demo_plugin_so_LDFLAGS = -G\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "docs/Makefile.am" : {
      "ObjectId" : "129f4c1f6e6778ba743efebb52dbbf835528196c",
      "LastModified" : "2018-08-13T18:30:47Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am for GNUPLOT documentation directory\n\n# based on Makefile.in as of 20-may-2012\n\n#\n\n# Note that the master file for generating documentation is gnuplot.doc.\n\n# See README.\n\n#\n\n# To print manual:\n\n#\n\n#   For LaTeX\n\n#       make dvi\n\n#     or\n\n#       make pdf\n\n#\t(requires pdflatex and also graphicx and picins packages)\n\n#     or\n\n#       make pdf_nofig\n\n#       (PDF without figures, e.g. if graphicx or picins are not present)\n\n#     or\n\n#       make ps\n\n#\n\n#   For groff (GNU troff}\n\n#       make grotxt\n\n#       (print or view gnuplot.txt)\n\n#     or\n\n#       make grodvi\n\n#       (print or view gnuplot.dvi)\n\n#     or\n\n#       make grops\n\n#       (print or view gnuplot.ps)\n\n#     or\n\n#       make groff\n\n#       (all three of the above)\n\n#\n\n#   For nroff\n\n#     make nroff\n\n#     (print or view gnuplot.nroff)\n\n#\n\n#   For troff\n\n#     make \"TROFF=itroff\" troff    (use your troff here)\n\n#\n\n#   For GNU info (texinfo)\n\n#     make info\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# default is what is needed for interactive gnuplot\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# DIST_COMMON = README\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# for debugging\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "### [tn]roff documentation\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "### groff documentation\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "### doc2xxx dependencies\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "### html\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "### PDF documentation\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9,
      "Errorlog" : "line 190:10 token recognition error at: '\"\\u'\nline 191:11 token recognition error at: '\\u'\nline 373:37 token recognition error at: '\" ]; then \\\\n\\t     rm -f $$f ; \\\\n\\t   else \\\\n\\t     :; \\\\n\\t   fi \\\\n\\t done\\n\\t$(AM_V_at)rm -f pdf_figures\\n\\n# for VMS only\\ninstall-vms: gnuplot.hlp\\n\\t$(AM_V_at)$(INSTALL_DATA) gnuplot.hlp $(datadir)/gnuplot.hlp\\n\\n#the end\\n\u0000'\n"
    },
    "docs/old/README.pro" : {
      "ObjectId" : "4629765c5fada40dee1836884622468c39fac1b5",
      "LastModified" : "2018-04-07T08:20:49Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "docs/psdoc/Makefile" : {
      "ObjectId" : "a2039a845f630d73ffd13b0db4027128f6318e2f",
      "LastModified" : "2018-04-07T08:20:49Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Create ps_symbols.ps\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "faq/Makefile" : {
      "ObjectId" : "6a14a87b9111ac2040cba8275abc2f2a3ed9b34f",
      "LastModified" : "2019-04-16T22:06:38Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Makefile for gnuplot FAQ\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "man/Makefile.am" : {
      "ObjectId" : "aa66caacc4f935c46bd26a5e58f9f792febd1227",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in -*-Makefile-*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "share/LaTeX/Makefile.am" : {
      "ObjectId" : "3421b85bd7d2e02eb81e4cbdd48ae34e0d6b84fc",
      "LastModified" : "2018-04-07T08:20:49Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in -*-Makefile-*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "share/Makefile.am" : {
      "ObjectId" : "5df83936f230f0289a8457d04d3d4cfc07442cf0",
      "LastModified" : "2018-04-07T08:20:49Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in -*-Makefile-*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/Makefile.am" : {
      "ObjectId" : "5eaad73cc48f361e28f494772bd546da27dffbdc",
      "LastModified" : "2019-03-04T07:10:03Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in -*-Makefile-*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in the spirit of automake ...\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Where to send email about bugs and comments (locally)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Default help file location\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Location of X11 app defaults\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Default X11 driver location\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Default Qt driver location\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Default lua driver location\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Default javascript location\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Default Postscript prologues location\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# System-wide initialization file\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# There is probably no need to edit anything below this line\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Hercules and original pc graphics driver code\n\n# corgraph.asm header.mac hrcgraph.asm pcgraph.asm lineproc.mac\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Call the moc preprocessor\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Call the Qt resource compiler\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Call the Qt ui compiler\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Generate translation files\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# List of compiles translation files\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Install translation files\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# HAVE_LRELEASE\n",
        "Line" : 151,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# Clean moc & qrc files\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Clean transform gnuplot_qt for demo\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Qt terminal sources\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# embed example (uncomment to build it)\n\n# \n\n# bin_PROGRAMS += embed_example\n\n# \n\n# nodist_embed_example_SOURCES = qtterminal/moc_embed_example.cpp \\\n#          qtterminal/moc_QtGnuplotInstance.cpp \\\n#          qtterminal/moc_QtGnuplotWidget.cpp qtterminal/moc_QtGnuplotScene.cpp \\\n#          qtterminal/moc_QtGnuplotEvent.cpp qtterminal/qrc_QtGnuplotResource.cpp\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# \n\n# embed_example_SOURCES = qtterminal/embed_example.cpp \\\n# qtterminal/QtGnuplotWidget.cpp qtterminal/QtGnuplotEvent.cpp \\\n# qtterminal/QtGnuplotScene.cpp qtterminal/QtGnuplotItems.cpp \\\n# qtterminal/QtGnuplotInstance.cpp\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# \n\n# embed_example_LDADD = $(QT_LIBS)\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# build_qt\n",
        "Line" : 199,
        "CharPositionInLine" : 6
      },
      "27" : {
        "Text" : "## we don't need COREOBJS, but CORETERM\n\n## for the term.o dependencies\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# begin makefile.all\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# end makefile.all\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Provide an explicit build recipe for bf_test so that a zillion extraneous\n\n# libraries are not dragged in.\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "src/qtterminal/Makefile.am" : {
      "ObjectId" : "698c8530f1707497318200e57d09e1dbd16cedc2",
      "LastModified" : "2018-04-07T08:20:49Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in -*-Makefile-*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# here are listed all the qtterminal files that go to the distribution\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/qtterminal/QtGnuplot.pro" : {
      "ObjectId" : "5e242a14d00e4a767c8a27195c644a0702778029",
      "LastModified" : "2018-04-07T08:20:49Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# This qmake project file is used for internationalization tools.\n\n# run lupdate to update ts files, linguist to edit the translations\n\n# and lrelease to generate the qm files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/wxterminal/Makefile.am" : {
      "ObjectId" : "875bfdcd9895b7cb641831c12ef20ebfcd1fb27f",
      "LastModified" : "2018-04-07T08:20:49Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in -*-Makefile-*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# here are listed all the wxterminal files that go to the distribution\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "QMAKE" : 2,
    "MAKEFILE" : 8,
    "AUTOMAKE" : 9
  },
  "ElapsedTime" : 1730
}