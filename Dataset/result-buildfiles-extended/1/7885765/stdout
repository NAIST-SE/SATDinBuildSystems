{
  "Repository" : "7885765",
  "Revision" : "HEAD",
  "ObjectId" : "6bed09db57f3560da353d0c723774fcb4ac417fe",
  "CommitTime" : "2019-04-07T15:08:47Z",
  "Files" : {
    "compiler/libpc300/CMakeLists.txt" : {
      "ObjectId" : "c57f21f454ca634905282eab82d48ea036c685d3",
      "LastModified" : "2005-07-24T20:00:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#build file for CMake, see http://www.cmake.org/\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check for optional include files\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The Pawn compiler shared library\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The Pawn compiler driver (console program)\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tools/pcre/CMakeLists.txt" : {
      "ObjectId" : "846241d64f7eed01b6d5023ed1d482f675feddb4",
      "LastModified" : "2014-07-18T16:14:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n#\n\n# This file allows building PCRE with the CMake configuration and build\n\n# tool. Download CMake in source or binary form from http://www.cmake.org/\n\n#\n\n# Original listfile by Christian Ehrlicher <Ch.Ehrlicher@gmx.de>\n\n# Refined and expanded by Daniel Richard G. <skunk@iSKUNK.ORG>\n\n# 2007-09-14 mod by Sheri so 7.4 supported configuration options can be entered\n\n# 2007-09-19 Adjusted by PH to retain previous default settings\n\n# 2007-12-26 (a) On UNIX, use names libpcre instead of just pcre\n\n#            (b) Ensure pcretest and pcregrep link with the local library,\n\n#                not a previously-installed one.\n\n#            (c) Add PCRE_SUPPORT_LIBREADLINE, PCRE_SUPPORT_LIBZ, and\n\n#                PCRE_SUPPORT_LIBBZ2.\n\n# 2008-01-20 Brought up to date to include several new features by Christian\n\n#            Ehrlicher.\n\n# 2008-01-22 Sheri added options for backward compatibility of library names\n\n#            when building with minGW:\n\n#            if \"ON\", NON_STANDARD_LIB_PREFIX causes shared libraries to\n\n#            be built without \"lib\" as prefix. (The libraries will be named\n\n#            pcre.dll, pcreposix.dll and pcrecpp.dll).\n\n#            if \"ON\", NON_STANDARD_LIB_SUFFIX causes shared libraries to\n\n#            be built with suffix of \"-0.dll\". (The libraries will be named\n\n#            libpcre-0.dll, libpcreposix-0.dll and libpcrecpp-0.dll - same names\n\n#            built by default with Configure and Make.\n\n# 2008-01-23 PH removed the automatic build of pcredemo.\n\n# 2008-04-22 PH modified READLINE support so it finds NCURSES when needed.\n\n# 2008-07-03 PH updated for revised UCP property support (change of files)\n\n# 2009-03-23 PH applied Steven Van Ingelgem's patch to change the name\n\n#            CMAKE_BINARY_DIR to PROJECT_BINARY_DIR so that it works when PCRE\n\n#            is included within another project.\n\n# 2009-03-23 PH applied a modified version of Steven Van Ingelgem's patches to\n\n#            add options to stop the building of pcregrep and the tests, and\n\n#            to disable the final configuration report.\n\n# 2009-04-11 PH applied Christian Ehrlicher's patch to show compiler flags that\n\n#            are set by specifying a release type.\n\n# 2010-01-02 PH added test for stdint.h\n\n# 2010-03-02 PH added test for inttypes.h\n\n# 2011-08-01 PH added PCREGREP_BUFSIZE\n\n# 2011-08-22 PH added PCRE_SUPPORT_JIT\n\n# 2011-09-06 PH modified WIN32 ADD_TEST line as suggested by Sergey Cherepanov\n\n# 2011-09-06 PH added PCRE_SUPPORT_PCREGREP_JIT\n\n# 2011-10-04 Sheri added support for including coff data in windows shared libraries\n\n#            compiled with MINGW if pcre.rc and/or pcreposix.rc are placed in\n\n#            the source dir by the user prior to building\n\n# 2011-10-04 Sheri changed various add_test's to use exes' location built instead\n\n#            of DEBUG location only (likely only matters in MSVC)\n\n# 2011-10-04 Sheri added scripts to provide needed variables to RunTest and\n\n#            RunGrepTest (used for UNIX and Msys)\n\n# 2011-10-04 Sheri added scripts to provide needed variables and to execute\n\n#            RunTest.bat in Win32 (for effortless testing with \"make test\")\n\n# 2011-10-04 Sheri Increased minimum required cmake version\n\n# 2012-01-06 PH removed pcre_info.c and added pcre_string_utils.c\n\n# 2012-01-10 Zoltan Herczeg added libpcre16 support\n\n# 2012-01-13 Stephen Kelly added out of source build support\n\n# 2012-01-17 PH applied Stephen Kelly's patch to parse the version data out\n\n#            of the configure.ac file\n\n# 2012-02-26 PH added support for libedit\n\n# 2012-09-06 PH added support for PCRE_EBCDIC_NL25\n\n# 2012-09-08 ChPe added PCRE32 support\n\n# 2012-10-23 PH added support for VALGRIND and GCOV\n\n# 2012-12-08 PH added patch from Daniel Richard G to quash some MSVC warnings\n\n# 2013-07-01 PH realized that the \"support\" for GCOV was a total nonsense and\n\n#            so it has been removed.\n\n# 2013-10-08 PH got rid of the \"source\" command, which is a bash-ism (use \".\")\n\n# 2013-11-05 PH added support for PARENS_NEST_LIMIT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Increased minimum to 2.8.0 to support newer add_test features\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for FindReadline.cmake\n",
        "Line" : 75,
        "CharPositionInLine" : 51
      },
      "3" : {
        "Text" : "# external packages\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Configuration checks\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# User-configurable options\n\n#\n\n# (Note: CMakeSetup displays these in alphabetical order, regardless of\n\n# the order we use here)\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# bzip2 lib\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# zlib\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# editline lib\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# readline lib\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Prepare build configuration\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# This next one used to contain\n\n#       SET(PCRETEST_LIBS ${READLINE_LIBRARY})\n\n# but I was advised to add the NCURSES test as well, along with\n\n# some modifications to cmake/FindReadline.cmake which should\n\n# make it possible to override the default if necessary. PH\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# libedit is a plug-compatible alternative to libreadline\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Output files\n",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Parse version numbers and date out of configure.ac\n",
        "Line" : 390,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Read only the first 50 lines of the file\n",
        "Line" : 394,
        "CharPositionInLine" : 17
      },
      "16" : {
        "Text" : "# What about pcre-config and libpcre.pc?\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Character table generation\n",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Source code\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Build setup\n",
        "Line" : 583,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# needed to make sure to not link debug libs\n\n# against release libs and vice versa\n",
        "Line" : 592,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Libraries\n\n# pcre\n",
        "Line" : 600,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# pcrecpp\n",
        "Line" : 665,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Executables\n",
        "Line" : 687,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Removed by PH (2008-01-23) because pcredemo shouldn't really be built\n\n# automatically, and it gave trouble in some environments anyway.\n\n# ADD_EXECUTABLE(pcredemo pcredemo.c)\n\n# TARGET_LINK_LIBRARIES(pcredemo pcreposix)\n\n# IF(NOT BUILD_SHARED_LIBS)\n\n#     # make sure to not use declspec(dllimport) in static mode on windows\n\n#         SET_TARGET_PROPERTIES(pcredemo PROPERTIES COMPILE_FLAGS \"-DPCRE_STATIC\")\n\n# ENDIF(NOT BUILD_SHARED_LIBS)\n",
        "Line" : 689,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Testing\n",
        "Line" : 704,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# exes in Debug location tested by the RunTest shell script\n\n# via \"make test\"\n",
        "Line" : 767,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# =================================================\n",
        "Line" : 775,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Write out a CTest configuration file\n\n#\n",
        "Line" : 776,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Provide environment for executing the bat file version of RunTest\n",
        "Line" : 817,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# Both the sh and bat file versions of RunTest are run if make test is used\n\n# in msys\n",
        "Line" : 840,
        "CharPositionInLine" : 6
      },
      "31" : {
        "Text" : "# Changed to accommodate testing whichever location was just built\n",
        "Line" : 850,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Installation\n",
        "Line" : 864,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Remove pcrecpp.3\n",
        "Line" : 881,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# help, only for nice output\n",
        "Line" : 906,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# end CMakeLists.txt\n",
        "Line" : 991,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 36
    },
    "tools/pcre/Makefile.am" : {
      "ObjectId" : "5f640b003a2cc689c037825f1057d788260893c4",
      "LastModified" : "2014-07-18T16:14:56Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note that pcrecpp.html is not in this list; it is listed separately below.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The Libtool libraries to install.  We'll add to this later.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Unit tests you want to run when people type 'make check'.\n\n# TESTS is for binary unit tests, check_SCRIPTS for script-based tests\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Some of the binaries we make are to be installed, and others are\n\n# (non-user-visible) helper programs needed to build libpcre, libpcre16\n\n# or libpcre32.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Additional files to delete on 'make clean' and 'make maintainer-clean'.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Additional files to bundle with the distribution, over and above what\n\n# the Autotools include by default.\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# These files contain additional m4 macros that are used by autoconf.\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# These files contain maintenance information\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# These files are used in the preparation of a release\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# These files are to do with building for Virtual Pascal\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# These files are usable versions of pcre.h and config.h that are distributed\n\n# for the benefit of people who are building PCRE manually, without the\n\n# Autotools support.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# The only difference between pcre.h.in and pcre.h is the setting of the PCRE\n\n# version number. Therefore, we can create the generic version just by copying.\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# It is more complicated for config.h.generic. We need the version that results\n\n# from a default configuration so as to get all the default values for PCRE\n\n# configuration macros such as MATCH_LIMIT and NEWLINE. We can get this by\n\n# doing a configure in a temporary directory. However, some trickery is needed,\n\n# because the source directory may already be configured. If you just try\n\n# running configure in a new directory, it complains. For this reason, we move\n\n# config.status out of the way while doing the default configuration. The\n\n# resulting config.h is munged by perl to put #ifdefs round any #defines for\n\n# macros with values, and to #undef all boolean macros such as HAVE_xxx and\n\n# SUPPORT_xxx. We also get rid of any gcc-specific visibility settings. Make\n\n# sure that PCRE_EXP_DEFN is unset (in case it has visibility settings).\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#define\\s((?:HAVE|SUPPORT|STDC)_\\w+)/){print\"/* #undef $$1 */\\n\";$$blank=0;next;}' \\\n\t  -e 'if(/^#define\\s(?!PACKAGE|VERSION)(\\w+)/){print\"#ifndef $$1\\n$$_#endif\\n\";$$blank=0;next;}' \\\n\t  -e 'if(/^\\s*$$/){print unless $$blank; $$blank=1;} else{print;$$blank=0;}' \\\n\t  _generic/config.h >$@\n",
        "Line" : 168,
        "CharPositionInLine" : 12
      },
      "15" : {
        "Text" : "# These are the header files we'll install. We do not distribute pcre.h because\n\n# it is generated from pcre.h.in.\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# These additional headers will be be installed if C++ support is enabled. We\n\n# do not distribute pcrecpparg.h or pcre_stringpiece.h, as these are generated\n\n# from corresponding .h.in files (which we do distribute).\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# WITH_PCRE_CPP\n",
        "Line" : 193,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "## ---------------------------------------------------------------\n\n## The dftables program is used to rebuild character tables before compiling\n\n## PCRE, if --enable-rebuild-chartables is specified. It is not a user-visible\n\n## program. The default (when --enable-rebuild-chartables is not specified) is\n\n## to copy a distributed set of tables that are defined for ASCII code. In this\n\n## case, dftables is not needed.\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# WITH_REBUILD_CHARTABLES\n",
        "Line" : 217,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "## The main pcre library\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Build the 8 bit library if it is enabled.\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## This file is generated as part of the building process, so don't distribute.\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# WITH_PCRE8\n",
        "Line" : 261,
        "CharPositionInLine" : 6
      },
      "24" : {
        "Text" : "# Build the 16 bit library if it is enabled.\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "## This file is generated as part of the building process, so don't distribute.\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# WITH_PCRE16\n",
        "Line" : 300,
        "CharPositionInLine" : 6
      },
      "27" : {
        "Text" : "# Build the 32 bit library if it is enabled.\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "## This file is generated as part of the building process, so don't distribute.\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# WITH_PCRE32\n",
        "Line" : 339,
        "CharPositionInLine" : 6
      },
      "30" : {
        "Text" : "# The pcre_chartables.c.dist file is the default version of pcre_chartables.c,\n\n# used unless --enable-rebuild-chartables is specified.\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# The JIT compiler lives in a separate directory, but its files are #included\n\n# when pcre_jit_compile.c is processed, so they must be distributed.\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# WITH_PCRE8\n",
        "Line" : 373,
        "CharPositionInLine" : 6
      },
      "33" : {
        "Text" : "# WITH_PCRE16\n",
        "Line" : 376,
        "CharPositionInLine" : 6
      },
      "34" : {
        "Text" : "# WITH_PCRE32\n",
        "Line" : 379,
        "CharPositionInLine" : 6
      },
      "35" : {
        "Text" : "# WITH_PCRE8\n",
        "Line" : 384,
        "CharPositionInLine" : 6
      },
      "36" : {
        "Text" : "# WITH_PCRE16\n",
        "Line" : 387,
        "CharPositionInLine" : 6
      },
      "37" : {
        "Text" : "# WITH_PCRE32\n\n# WITH_VALGRIND\n",
        "Line" : 390,
        "CharPositionInLine" : 6
      },
      "38" : {
        "Text" : "# WITH_PCRE8\n",
        "Line" : 396,
        "CharPositionInLine" : 6
      },
      "39" : {
        "Text" : "# WITH_PCRE16\n",
        "Line" : 399,
        "CharPositionInLine" : 6
      },
      "40" : {
        "Text" : "# WITH_PCRE32\n\n# WITH_GCOV\n",
        "Line" : 402,
        "CharPositionInLine" : 6
      },
      "41" : {
        "Text" : "## If JIT support is enabled, arrange for the JIT test program to run.\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# WITH_PCRE8\n",
        "Line" : 416,
        "CharPositionInLine" : 6
      },
      "43" : {
        "Text" : "# WITH_PCRE16\n",
        "Line" : 419,
        "CharPositionInLine" : 6
      },
      "44" : {
        "Text" : "# WITH_PCRE32\n",
        "Line" : 422,
        "CharPositionInLine" : 6
      },
      "45" : {
        "Text" : "# WITH_GCOV\n\n# WITH_JIT\n",
        "Line" : 426,
        "CharPositionInLine" : 6
      },
      "46" : {
        "Text" : "## A version of the main pcre library that has a posix re API.\n",
        "Line" : 429,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# WITH_GCOV\n",
        "Line" : 441,
        "CharPositionInLine" : 6
      },
      "48" : {
        "Text" : "# WITH_PCRE8\n",
        "Line" : 443,
        "CharPositionInLine" : 6
      },
      "49" : {
        "Text" : "## There's a C++ library as well.\n",
        "Line" : 445,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# WITH_GCOV\n",
        "Line" : 481,
        "CharPositionInLine" : 6
      },
      "51" : {
        "Text" : "# WITH_PCRE_CPP\n",
        "Line" : 483,
        "CharPositionInLine" : 6
      },
      "52" : {
        "Text" : "## The main unit tests\n",
        "Line" : 485,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Each unit test is a binary plus a script that runs that binary in various\n\n# ways. We install these test binaries in case folks find it helpful.\n",
        "Line" : 487,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# WITH_PCRE8\n",
        "Line" : 500,
        "CharPositionInLine" : 6
      },
      "55" : {
        "Text" : "# WITH_PCRE16\n",
        "Line" : 504,
        "CharPositionInLine" : 6
      },
      "56" : {
        "Text" : "# WITH_PCRE32\n",
        "Line" : 508,
        "CharPositionInLine" : 6
      },
      "57" : {
        "Text" : "# WITH_VALGRIND\n",
        "Line" : 511,
        "CharPositionInLine" : 6
      },
      "58" : {
        "Text" : "# WITH_GCOV\n",
        "Line" : 515,
        "CharPositionInLine" : 6
      },
      "59" : {
        "Text" : "# WITH_GCOV\n\n# WITH_PCRE8\n",
        "Line" : 528,
        "CharPositionInLine" : 6
      },
      "60" : {
        "Text" : "# PCRE demonstration program. No longer built automatcally. The point is that\n\n# the users should build it themselves. So just distribute the source.\n\n# noinst_PROGRAMS += pcredemo\n\n# pcredemo_SOURCES = pcredemo.c\n\n# pcredemo_LDADD = libpcre.la\n",
        "Line" : 630,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "## Utility rules, documentation, etc.\n",
        "Line" : 639,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# A compatibility line, the old build system worked with 'make test'\n",
        "Line" : 641,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# A PCRE user submitted the following addition, saying that it \"will allow\n\n# anyone using the 'mingw32' compiler to simply type 'make pcre.dll' and get a\n\n# nice DLL for Windows use\". (It is used by the pcre.dll target.)\n",
        "Line" : 645,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# A PCRE user submitted the following addition, saying that it \"will allow\n\n# anyone using the 'mingw32' compiler to simply type 'make pcre.dll' and get a\n\n# nice DLL for Windows use\".\n",
        "Line" : 656,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# We have .pc files for pkg-config users.\n",
        "Line" : 663,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Note that pcrecpp.3 is not in this list, but is included separately below.\n",
        "Line" : 676,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Arrange for the per-function man pages to have 16- and 32-bit names as well.\n",
        "Line" : 730,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# gcov/lcov code coverage reporting\n",
        "Line" : 792,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Coverage reporting targets:\n\n#\n\n# coverage: Create a coverage report from 'make check'\n\n# coverage-baseline: Capture baseline coverage information\n\n# coverage-reset: This zeros the coverage counters only\n\n# coverage-report: This creates the coverage report only\n\n# coverage-clean-report: This removes the generated coverage report\n\n#   without cleaning the coverage data itself\n\n# coverage-clean-data: This removes the captured coverage data without\n\n#   removing the coverage files created at compile time (*.gcno)\n\n# coverage-clean: This cleans all coverage data including the generated\n\n#   coverage report.\n",
        "Line" : 796,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# WITH_GCOV\n",
        "Line" : 882,
        "CharPositionInLine" : 6
      },
      "71" : {
        "Text" : "## CMake support\n",
        "Line" : 884,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "## end Makefile.am\n",
        "Line" : 894,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 73
    },
    "tools/pcre/cmake/FindEditline.cmake" : {
      "ObjectId" : "2d0b7cc543c3b5259ea2886d1903ee39c27ea93e",
      "LastModified" : "2014-07-18T16:14:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Modified from FindReadline.cmake (PH Feb 2012)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/pcre/cmake/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "151d81250318e646a3baf86b4515fa237f725b5d",
      "LastModified" : "2014-07-18T16:14:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME (DEFAULT_MSG|\"Custom failure message\") VAR1 ... )\n\n#    This macro is intended to be used in FindXXX.cmake modules files.\n\n#    It handles the REQUIRED and QUIET argument to FIND_PACKAGE() and\n\n#    it also sets the <UPPERCASED_NAME>_FOUND variable.\n\n#    The package is found if all variables listed are TRUE.\n\n#    Example:\n\n#\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(LibXml2 DEFAULT_MSG LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR)\n\n#\n\n#    LibXml2 is considered to be found, if both LIBXML2_LIBRARIES and \n\n#    LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.\n\n#    If it is not found and REQUIRED was used, it fails with FATAL_ERROR, \n\n#    independent whether QUIET was used or not.\n\n#    If it is found, the location is reported using the VAR1 argument, so \n\n#    here a message \"Found LibXml2: /usr/lib/libxml2.so\" will be printed out.\n\n#    If the second argument is DEFAULT_MSG, the message in the failure case will \n\n#    be \"Could NOT find LibXml2\", if you don't like this message you can specify\n\n#    your own custom failure message there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/pcre/cmake/FindReadline.cmake" : {
      "ObjectId" : "1d4cc55843136c7802eb4892b0b6fcffb13e95e3",
      "LastModified" : "2014-07-18T16:14:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# from http://websvn.kde.org/trunk/KDE/kdeedu/cmake/modules/FindReadline.cmake\n\n# http://websvn.kde.org/trunk/KDE/kdeedu/cmake/modules/COPYING-CMAKE-SCRIPTS\n\n# --> BSD licensed\n\n#\n\n# GNU Readline library finder\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 2008-04-22 The next clause used to read like this:\n\n#\n\n#  FIND_LIBRARY(READLINE_LIBRARY NAMES readline)\n\n#        FIND_LIBRARY(NCURSES_LIBRARY NAMES ncurses )\n\n#        include(FindPackageHandleStandardArgs)\n\n#        FIND_PACKAGE_HANDLE_STANDARD_ARGS(Readline DEFAULT_MSG NCURSES_LIBRARY READLINE_INCLUDE_DIR READLINE_LIBRARY )\n\n#\n\n# I was advised to modify it such that it will find an ncurses library if\n\n# required, but not if one was explicitly given, that is, it allows the\n\n# default to be overridden. PH \n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 5,
    "AUTOMAKE" : 1
  },
  "ElapsedTime" : 6490
}