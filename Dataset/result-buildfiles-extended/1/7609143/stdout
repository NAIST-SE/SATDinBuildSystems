{
  "Repository" : "7609143",
  "Revision" : "HEAD",
  "ObjectId" : "74e513eb6a6787a925d43cd1500277d54d86ab8f",
  "CommitTime" : "2019-04-17T18:34:44Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "9cc81c9d1fb886b814048ca4bc3cb9de42a3d822",
      "LastModified" : "2019-04-11T23:33:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n#\n\n#  BLIS    \n\n#  An object-based framework for developing high-performance BLAS-like\n\n#  libraries.\n\n#\n\n#  Copyright (C) 2014, The University of Texas at Austin\n\n#\n\n#  Redistribution and use in source and binary forms, with or without\n\n#  modification, are permitted provided that the following conditions are\n\n#  met:\n\n#   - Redistributions of source code must retain the above copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n#   - Redistributions in binary form must reproduce the above copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#   - Neither the name(s) of the copyright holder(s) nor the names of its\n\n#     contributors may be used to endorse or promote products derived\n\n#     from this software without specific prior written permission.\n\n#\n\n#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n#  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n#  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Makefile\n\n#\n\n# Field G. Van Zee\n\n# \n\n# Top-level makefile for libflame linear algebra library.\n\n#\n\n#\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# --- Makefile PHONY target definitions ----------------------------------------\n\n#\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# --- Determine makefile fragment location -------------------------------------\n\n#\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Comments:\n\n# - We don't need to define DIST_PATH, LIB_PATH, INC_PATH, or SHARE_PATH since\n\n#   the defaults in common.mk (and config.mk) are designed to work with the\n\n#   top-level Makefile.\n\n#DIST_PATH  := .\n\n#LIB_PATH    = ./lib/$(CONFIG_NAME)\n\n#INC_PATH    = ./include/$(CONFIG_NAME)\n\n#SHARE_PATH := .\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# --- Include common makefile definitions --------------------------------------\n\n#\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the name of the common makefile.\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Include the configuration file.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Detect whether we actually got the configuration file. If we didn't, then\n\n# it is likely that the user has not yet generated it (via configure).\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# --- Main target variable definitions -----------------------------------------\n\n#\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# --- Object file paths ---\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Construct the base object file path for the current configuration.\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Construct base object file paths corresponding to the four locations\n\n# of source code.\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# --- Define install target names for static libraries ---\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# --- Define install target names for shared libraries ---\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# The 'install' target does not create symlinks for Windows builds, so we don't\n\n# bother defining LIBBLIS_SO_MMB_INST.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# --- Determine which libraries to build ---\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Strip leading, internal, and trailing whitespace.\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# --- Define install directory for headers ---\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Set the path to the subdirectory of the include installation directory.\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# --- Define install directory for public makefile fragments ---\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Set the path to the subdirectory of the share installation directory.\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#\n\n# --- Library object definitions -----------------------------------------------\n\n#\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# In this section, we will isolate the relevant source code filepaths and\n\n# convert them to lists of object filepaths. Relevant source code falls into\n\n# four categories: configuration source; architecture-specific kernel source;\n\n# reference kernel source; and general framework source.\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# $(call gen-obj-paths-from-src file_exts, src_files, base_src_path, base_obj_path)\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Generate object file paths for source code found in the sub-configuration\n\n# directories.\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Generate object file paths for architecture-specific kernel source code.\n\n# We target only .c, .s, and .S files. Note that MK_KERNELS_SRC is already\n\n# limited to the kernel source corresponding to the kernel sets in\n\n# KERNEL_LIST. This is because the configure script only propogated makefile\n\n# fragments into those specific kernel subdirectories.\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Generate object file paths for reference kernels, with one set of object\n\n# files for each sub-configuration in CONFIG_LIST. Note that due to the\n\n# nuances of naming the reference kernel files, we can't use the function\n\n# gen-obj-paths-from-src as we do above and below.\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Generate object file paths for all of the portable framework source code.\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Generate object file paths for the sandbox source code. If a sandbox was not\n\n# enabled a configure-time, this variable will we empty.\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Combine all of the object files into some readily-accessible variables.\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Optionally filter out the BLAS and CBLAS compatibility layer object files.\n\n# This is not actually necessary, since each affected file is guarded by C\n\n# preprocessor macros, but it but prevents \"empty\" object files from being\n\n# added into the library (and reduces compilation time).\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\n\n# --- Monolithic header definitions --------------------------------------------\n\n#\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Define a list of headers to install. The default is to only install blis.h.\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# If CBLAS is enabled, we also install cblas.h so the user does not need to\n\n# change their source code to #include \"blis.h\" in order to access the CBLAS\n\n# function prototypes and enums.\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#\n\n# --- public makefile fragment definitions -------------------------------------\n\n#\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Define a list of makefile fragments to install.\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#\n\n# --- BLAS test drivers definitions --------------------------------------------\n\n#\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# The location of the BLAS test suite's input files.\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# The location of the BLAS test suite object directory.\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# The locations of the BLAS test suite source code (f2c and drivers).\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# The paths to object files we will create (f2c and drivers).\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# libf2c name and location.\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# The base names of each driver source file (ie: filename minus suffix).\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# The binary executable driver names.\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Binary executable driver \"run-\" names\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Filter level-1, level-2, and level-3 names to different variables.\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Define some CFLAGS that we'll only use when compiling BLAS test suite\n\n# files.\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Suppress warnings about possibly uninitialized variables for the BLAS\n\n# test driver code (as output from f2c), which is riddled with such\n\n# variables, but only if the option to do so is supported.\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# The location of the script that checks the BLAS test output.\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "#\n\n# --- BLIS testsuite definitions -----------------------------------------------\n\n#\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# The location of the test suite's general and operations-specific\n\n# input/configuration files.\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# The locations of the test suite source directory and the local object\n\n# directory.\n",
        "Line" : 342,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Convert source file paths to object file paths by replacing the base source\n\n# directories with the base object directories, and also replacing the source\n\n# file suffix (eg: '.c') with '.o'.\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# The test suite binary executable filename.\n\n# NOTE: The TESTSUITE_WRAPPER variable defaults to the empty string if it\n\n# is not already set, in which case it has no effect lateron when the\n\n# testsuite binary is executed via lines such as\n\n#\n\n#   $(TESTSUITE_WRAPPER) ./$(TESTSUITE_BIN) ... > $(TESTSUITE_OUT_FILE)\n\n#\n\n# The reason TESTSUITE_WRAPPER is employed in this way is so that some\n\n# unusual environments (e.g. ARM) can run the testsuite through some other\n\n# binary. See .travis.yml for details on how the variable is employed in\n\n# practice.\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# The location of the script that checks the BLIS testsuite output.\n",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "#\n\n# --- Uninstall definitions ----------------------------------------------------\n\n#\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# These shell commands gather the filepaths to any library in the current\n\n# LIBDIR that might be left over from an old installation. We start with\n\n# including nothing for static libraries, since older static libraries are\n\n# always overwritten by newer ones. Then we add shared libraries, which are\n\n# named with three .so version numbers.\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# These shell commands gather the filepaths to any library symlink in the\n\n# current LIBDIR that might be left over from an old installation. We start\n\n# with symlinks named using the .so major version number.\n",
        "Line" : 390,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# We also prepare to uninstall older-style symlinks whose names contain the\n\n# BLIS version number and configuration family.\n",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# This shell command grabs all files named \"*.h\" that are not blis.h or cblas.h\n\n# in the installation directory. We consider this set of headers to be \"old\" and\n\n# eligible for removal upon running of the uninstall-old-headers target.\n",
        "Line" : 400,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# IS_CONFIGURED\n",
        "Line" : 405,
        "CharPositionInLine" : 6
      },
      "62" : {
        "Text" : "#\n\n# --- Targets/rules ------------------------------------------------------------\n\n#\n",
        "Line" : 408,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# --- Primary targets ---\n",
        "Line" : 412,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# --- Environment check rules ---\n",
        "Line" : 431,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# --- Consolidated blis.h header creation ---\n",
        "Line" : 451,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# --- Consolidated cblas.h header creation ---\n",
        "Line" : 464,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# --- General source code / object code rules ---\n",
        "Line" : 478,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# FGVZ: Add support for compiling .s and .S files in 'config'/'kernels'\n\n# directories.\n\n#  - May want to add an extra foreach loop around function eval/call.\n",
        "Line" : 480,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# first argument: a configuration name from config_list, used to look up the\n\n# CFLAGS to use during compilation.\n",
        "Line" : 484,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# first argument: a configuration name from the union of config_list and\n\n# config_name, used to look up the CFLAGS to use during compilation.\n",
        "Line" : 496,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# first argument: a kernel set (name) being targeted (e.g. haswell).\n",
        "Line" : 508,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# first argument: a kernel set (name) being targeted (e.g. haswell).\n",
        "Line" : 519,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# first argument: a kernel set (name) being targeted (e.g. haswell).\n\n# second argument: the configuration whose CFLAGS we should use in compilation.\n\n# third argument: the kernel file suffix being considered.\n",
        "Line" : 530,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# first argument: a configuration name from the union of config_list and\n\n# config_name, used to look up the CFLAGS to use during compilation.\n",
        "Line" : 543,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Define functions to choose the correct sub-configuration name for the\n\n# given kernel set. This function is called when instantiating the\n\n# make-kernels-rule.\n",
        "Line" : 565,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Instantiate the build rule for files in the configuration directory for\n\n# each of the sub-configurations in CONFIG_LIST with the CFLAGS designated\n\n# for that sub-configuration.\n",
        "Line" : 570,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Instantiate the build rule for framework files. Use the CFLAGS for the\n\n# configuration family, which exists in the directory whose name is equal to\n\n# CONFIG_NAME. Note that this doesn't need to be in a loop since we expect\n\n# CONFIG_NAME to only ever contain a single name. (BTW: If CONFIG_NAME refers\n\n# to a singleton family, then CONFIG_LIST contains CONFIG_NAME as its only\n\n# item.)\n",
        "Line" : 575,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Instantiate the build rule for reference kernel initialization and\n\n# reference kernels for each of the sub-configurations in CONFIG_LIST with\n\n# the CFLAGS designated for that sub-configuration.\n",
        "Line" : 583,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Instantiate the build rule for optimized kernels for each of the kernel\n\n# sets in KERNEL_LIST with the CFLAGS designated for the sub-configuration\n\n# specified by the KCONFIG_MAP.\n",
        "Line" : 589,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# Instantiate the build rule for C sandbox files. Use the CFLAGS for the\n\n# configuration family.\n",
        "Line" : 595,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Instantiate the build rule for C++ sandbox files. Use the CXXFLAGS for the\n\n# configuration family.\n",
        "Line" : 600,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# --- All-purpose library rule (static and shared) ---\n",
        "Line" : 606,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# --- Static library archiver rules ---\n",
        "Line" : 611,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# ifeq ($(ENABLE_VERBOSE),no)\n",
        "Line" : 624,
        "CharPositionInLine" : 5
      },
      "85" : {
        "Text" : "# --- Shared library linker rules ---\n",
        "Line" : 639,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# ifeq ($(ENABLE_VERBOSE),no)\n",
        "Line" : 650,
        "CharPositionInLine" : 5
      },
      "87" : {
        "Text" : "# Local symlink for shared library.\n\n# NOTE: We use a '.loc' suffix to avoid filename collisions in case this\n\n# rule is executed concurrently with the install-lib-symlinks rule, which\n\n# also creates symlinks in the current directory (before installing them).\n\n# NOTE: We don't create any symlinks during Windows builds.\n",
        "Line" : 662,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# ifeq ($(ENABLE_VERBOSE),no)\n",
        "Line" : 672,
        "CharPositionInLine" : 5
      },
      "89" : {
        "Text" : "# --- BLAS test suite rules ---\n",
        "Line" : 680,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# f2c object file rule.\n",
        "Line" : 690,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# driver object file rule.\n",
        "Line" : 699,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# libf2c library archive rule.\n",
        "Line" : 708,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# first argument: the base name of the BLAS test driver.\n",
        "Line" : 719,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# Instantiate the rule above for each driver file.\n",
        "Line" : 730,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# A rule to run ?blat1.x driver files.\n",
        "Line" : 733,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# Instantiate the rule above for each level-1 driver file.\n",
        "Line" : 744,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# A rule to run ?blat2.x and ?blat3.x driver files.\n",
        "Line" : 747,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "# Instantiate the rule above for each level-2 driver file.\n",
        "Line" : 758,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# Instantiate the rule above for each level-3 driver file.\n",
        "Line" : 761,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# Check the results of the BLAS test suite drivers.\n",
        "Line" : 764,
        "CharPositionInLine" : 0
      },
      "101" : {
        "Text" : "# --- BLIS test suite rules ---\n",
        "Line" : 772,
        "CharPositionInLine" : 0
      },
      "102" : {
        "Text" : "# Object file rule.\n",
        "Line" : 786,
        "CharPositionInLine" : 0
      },
      "103" : {
        "Text" : "# Testsuite binary rule.\n",
        "Line" : 795,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "# A rule to run the testsuite using the normal input.* files.\n",
        "Line" : 804,
        "CharPositionInLine" : 0
      },
      "105" : {
        "Text" : "# A rule to run the testsuite using the input.*.fast files, which\n\n# run a set of tests designed to finish much more quickly.\n",
        "Line" : 818,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "# A rule to run the testsuite using the input.*.md files, which\n\n# run a set of tests designed to only exercise mixed-datatype gemm.\n",
        "Line" : 833,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "# A rule to run the testsuite using the input.*.salt files, which\n\n# simulates application-level threading across operation tests.\n",
        "Line" : 848,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "# Check the results of the BLIS testsuite.\n",
        "Line" : 863,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "# Check the results of the BLIS testsuite (fast).\n",
        "Line" : 871,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "# Check the results of the BLIS testsuite (mixed-datatype).\n",
        "Line" : 879,
        "CharPositionInLine" : 0
      },
      "111" : {
        "Text" : "# Check the results of the BLIS testsuite (salt).\n",
        "Line" : 887,
        "CharPositionInLine" : 0
      },
      "112" : {
        "Text" : "# --- Install header rules ---\n",
        "Line" : 895,
        "CharPositionInLine" : 0
      },
      "113" : {
        "Text" : "# --- Install share rules ---\n",
        "Line" : 910,
        "CharPositionInLine" : 0
      },
      "114" : {
        "Text" : "# --- Install library rules ---\n",
        "Line" : 932,
        "CharPositionInLine" : 0
      },
      "115" : {
        "Text" : "# Install static library.\n",
        "Line" : 936,
        "CharPositionInLine" : 0
      },
      "116" : {
        "Text" : "# Install shared library containing .so major, minor, and build versions.\n\n# Note: Installation rules for Windows does not include major, minor, and\n\n# build version numbers.\n",
        "Line" : 947,
        "CharPositionInLine" : 0
      },
      "117" : {
        "Text" : "# Linux/OSX library (.so OR .dylib) installation rules.\n",
        "Line" : 952,
        "CharPositionInLine" : 0
      },
      "118" : {
        "Text" : "# ifeq ($(IS_WIN),yes)\n",
        "Line" : 963,
        "CharPositionInLine" : 5
      },
      "119" : {
        "Text" : "# Windows library (.dll and .lib) installation rules.\n",
        "Line" : 965,
        "CharPositionInLine" : 0
      },
      "120" : {
        "Text" : "# ifeq ($(IS_WIN),no)\n",
        "Line" : 986,
        "CharPositionInLine" : 6
      },
      "121" : {
        "Text" : "# --- Install-symlinks rules ---\n",
        "Line" : 988,
        "CharPositionInLine" : 0
      },
      "122" : {
        "Text" : "# Note: Symlinks are not installed on Windows.\n",
        "Line" : 992,
        "CharPositionInLine" : 0
      },
      "123" : {
        "Text" : "# Install generic shared library symlink.\n",
        "Line" : 995,
        "CharPositionInLine" : 0
      },
      "124" : {
        "Text" : "# Install shared library symlink containing only .so major version.\n",
        "Line" : 1006,
        "CharPositionInLine" : 0
      },
      "125" : {
        "Text" : "# ifeq ($(IS_WIN),no)\n",
        "Line" : 1017,
        "CharPositionInLine" : 6
      },
      "126" : {
        "Text" : "# --- Query current configuration ---\n",
        "Line" : 1019,
        "CharPositionInLine" : 0
      },
      "127" : {
        "Text" : "# --- Clean rules ---\n",
        "Line" : 1042,
        "CharPositionInLine" : 0
      },
      "128" : {
        "Text" : "# ENABLE_VERBOSE\n\n# IS_CONFIGURED\n",
        "Line" : 1121,
        "CharPositionInLine" : 6
      },
      "129" : {
        "Text" : "# ENABLE_VERBOSE\n\n# IS_CONFIGURED\n",
        "Line" : 1140,
        "CharPositionInLine" : 6
      },
      "130" : {
        "Text" : "# ENABLE_VERBOSE\n\n# IS_CONFIGURED\n",
        "Line" : 1162,
        "CharPositionInLine" : 6
      },
      "131" : {
        "Text" : "# ENABLE_VERBOSE\n\n# IS_CONFIGURED\n",
        "Line" : 1175,
        "CharPositionInLine" : 6
      },
      "132" : {
        "Text" : "# --- CHANGELOG rules ---\n",
        "Line" : 1201,
        "CharPositionInLine" : 0
      },
      "133" : {
        "Text" : "# --- Uninstall rules ---\n",
        "Line" : 1208,
        "CharPositionInLine" : 0
      },
      "134" : {
        "Text" : "# NOTE: We can't write these uninstall rules directly in terms of targets\n\n# $(MK_LIBS_VERS_CONF_INST), $(MK_LIBS_INST), and $(MK_INCL_DIR_INST)\n\n# because those targets are already defined in terms of rules that *build*\n\n# those products.\n",
        "Line" : 1210,
        "CharPositionInLine" : 0
      },
      "135" : {
        "Text" : "# --- Uninstall old rules ---\n",
        "Line" : 1247,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 136
    },
    "blastest/Makefile" : {
      "ObjectId" : "4659fcfee7ed4811e506979c917958d9c9e0199b",
      "LastModified" : "2018-12-04T20:31:06Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n#\n\n#  BLIS    \n\n#  An object-based framework for developing high-performance BLAS-like\n\n#  libraries.\n\n#\n\n#  Copyright (C) 2014, The University of Texas at Austin\n\n#\n\n#  Redistribution and use in source and binary forms, with or without\n\n#  modification, are permitted provided that the following conditions are\n\n#  met:\n\n#   - Redistributions of source code must retain the above copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n#   - Redistributions in binary form must reproduce the above copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#   - Neither the name(s) of the copyright holder(s) nor the names of its\n\n#     contributors may be used to endorse or promote products derived\n\n#     from this software without specific prior written permission.\n\n#\n\n#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n#  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n#  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Makefile\n\n#\n\n# Field G. Van Zee\n\n# \n\n# Makefile for BLAS test drivers.\n\n#\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# --- Makefile PHONY target definitions ----------------------------------------\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# --- Determine makefile fragment location -------------------------------------\n\n#\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Comments:\n\n# - DIST_PATH is assumed to not exist if BLIS_INSTALL_PATH is given.\n\n# - We must use recursively expanded assignment for LIB_PATH and INC_PATH in\n\n#   the second case because CONFIG_NAME is not yet set.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# --- Include common makefile definitions --------------------------------------\n\n#\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Include the common makefile fragment.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# --- General build definitions ------------------------------------------------\n\n#\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Gather all local object files.\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Extract base names for each test driver file.\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Binary executable names.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Binary run-rule names\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Filter level-1, level-2, and level-3 names to different variables.\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# The location of the script that checks the BLAS test output.\n\n#BLASTEST_CHECK := $(DIST_PATH)/$(BUILD_DIR)/check-blastest.sh\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Override the value of CINCFLAGS so that the value of CFLAGS returned by\n\n# get-user-cflags-for() is not cluttered up with include paths needed only\n\n# while building BLIS.\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Use the CFLAGS for the configuration family.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Suppress warnings about uninitialized functions, add local header\n\n# paths and the path to blis.h to CFLAGS.\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Locate the libblis library to which we will link.\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Override the location of the check-blastest.sh script.\n\n#BLASTEST_CHECK := ./check-blastest.sh\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\n\n# --- Targets/rules ------------------------------------------------------------\n\n#\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# --- Primary targets ---\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# --Object file rules --\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# -- libf2c library archive rule --\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# -- Executable file rules --\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# first argument: the base name of the BLAS test driver.\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Instantiate the rule above for each driver file.\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# -- Test run rules --\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# A rule to run ?blat1.x driver files.\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Instantiate the rule above for each level-1 driver file.\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# A rule to run ?blat2.x and ?blat3.x driver files.\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Instantiate the rule above for each level-2 driver file.\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Instantiate the rule above for each level-3 driver file.\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# -- Clean rules --\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 33
    },
    "examples/oapi/Makefile" : {
      "ObjectId" : "64dbf20dd6308af09ae633d288a6d46bc8ef2fd9",
      "LastModified" : "2018-12-04T20:31:06Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n#\n\n#  BLIS    \n\n#  An object-based framework for developing high-performance BLAS-like\n\n#  libraries.\n\n#\n\n#  Copyright (C) 2014, The University of Texas at Austin\n\n#\n\n#  Redistribution and use in source and binary forms, with or without\n\n#  modification, are permitted provided that the following conditions are\n\n#  met:\n\n#   - Redistributions of source code must retain the above copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n#   - Redistributions in binary form must reproduce the above copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#   - Neither the name(s) of the copyright holder(s) nor the names of its\n\n#     contributors may be used to endorse or promote products derived\n\n#     from this software without specific prior written permission.\n\n#\n\n#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n#  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n#  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Makefile\n\n#\n\n# Field G. Van Zee\n\n#\n\n# Makefile for BLIS object API example code.\n\n#\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# --- Makefile PHONY target definitions ----------------------------------------\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# --- Determine makefile fragment location -------------------------------------\n\n#\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Comments:\n\n# - DIST_PATH is assumed to not exist if BLIS_INSTALL_PATH is given.\n\n# - We must use recursively expanded assignment for LIB_PATH and INC_PATH in\n\n#   the second case because CONFIG_NAME is not yet set.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#ifneq ($(strip $(BLIS_LIB_PATH)),)\n\n#LIB_PATH   := $(BLIS_LIB_PATH)\n\n#endif\n\n#\n\n#ifneq ($(strip $(BLIS_INC_PATH)),)\n\n#INC_PATH   := $(BLIS_INC_PATH)\n\n#endif\n\n#\n\n#ifneq ($(strip $(BLIS_SHARE_PATH)),)\n\n#SHARE_PATH := $(BLIS_SHARE_PATH)\n\n#endif\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# --- Include common makefile definitions --------------------------------------\n\n#\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Include the common makefile fragment.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# --- General build definitions ------------------------------------------------\n\n#\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Gather all local object files.\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Override the value of CINCFLAGS so that the value of CFLAGS returned by\n\n# get-user-cflags-for() is not cluttered up with include paths needed only\n\n# while building BLIS.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Use the \"framework\" CFLAGS for the configuration family.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Add local header paths to CFLAGS\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Locate the libblis library to which we will link.\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Binary executable name.\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\n\n# --- Targets/rules ------------------------------------------------------------\n\n#\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# --- Primary targets ---\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# --- Environment check rules ---\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# --Object file rules --\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# -- Executable file rules --\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# -- Test run rules --\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#run: $(TEST_BIN)\n\n#\t./$(TEST_BIN)\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# -- Clean rules --\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "examples/tapi/Makefile" : {
      "ObjectId" : "1de4acc1329753a922f529168693c60f4522c176",
      "LastModified" : "2018-12-04T20:31:06Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n#\n\n#  BLIS    \n\n#  An object-based framework for developing high-performance BLAS-like\n\n#  libraries.\n\n#\n\n#  Copyright (C) 2014, The University of Texas at Austin\n\n#\n\n#  Redistribution and use in source and binary forms, with or without\n\n#  modification, are permitted provided that the following conditions are\n\n#  met:\n\n#   - Redistributions of source code must retain the above copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n#   - Redistributions in binary form must reproduce the above copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#   - Neither the name(s) of the copyright holder(s) nor the names of its\n\n#     contributors may be used to endorse or promote products derived\n\n#     from this software without specific prior written permission.\n\n#\n\n#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n#  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n#  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Makefile\n\n#\n\n# Field G. Van Zee\n\n#\n\n# Makefile for BLIS typed API example code.\n\n#\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# --- Makefile PHONY target definitions ----------------------------------------\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# --- Determine makefile fragment location -------------------------------------\n\n#\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Comments:\n\n# - DIST_PATH is assumed to not exist if BLIS_INSTALL_PATH is given.\n\n# - We must use recursively expanded assignment for LIB_PATH and INC_PATH in\n\n#   the second case because CONFIG_NAME is not yet set.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# --- Include common makefile definitions --------------------------------------\n\n#\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Include the common makefile fragment.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# --- General build definitions ------------------------------------------------\n\n#\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Gather all local object files.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Override the value of CINCFLAGS so that the value of CFLAGS returned by\n\n# get-user-cflags-for() is not cluttered up with include paths needed only\n\n# while building BLIS.\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Use the \"framework\" CFLAGS for the configuration family.\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add local header paths to CFLAGS\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Locate the libblis library to which we will link.\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Binary executable name.\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\n\n# --- Targets/rules ------------------------------------------------------------\n\n#\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# --- Primary targets ---\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# --- Environment check rules ---\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# --Object file rules --\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# -- Executable file rules --\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# -- Test run rules --\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#run: $(TEST_BIN)\n\n#\t./$(TEST_BIN)\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# -- Clean rules --\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "kernels/power7/3/test/Makefile" : {
      "ObjectId" : "15f27b8113092dedbc411689ffde9da1246def9b",
      "LastModified" : "2014-04-01T17:57:24Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "mpi_test/Makefile" : {
      "ObjectId" : "8bf871b9973fef39669f9473b5fbce2faf76317d",
      "LastModified" : "2018-12-04T20:31:06Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n#\n\n#  BLIS    \n\n#  An object-based framework for developing high-performance BLAS-like\n\n#  libraries.\n\n#\n\n#  Copyright (C) 2014, The University of Texas at Austin\n\n#\n\n#  Redistribution and use in source and binary forms, with or without\n\n#  modification, are permitted provided that the following conditions are\n\n#  met:\n\n#   - Redistributions of source code must retain the above copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n#   - Redistributions in binary form must reproduce the above copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#   - Neither the name(s) of the copyright holder(s) nor the names of its\n\n#     contributors may be used to endorse or promote products derived\n\n#     from this software without specific prior written permission.\n\n#\n\n#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n#  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n#  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Makefile\n\n#\n\n# Field G. Van Zee\n\n# \n\n# Makefile for standalone BLIS test drivers.\n\n#\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# --- Makefile PHONY target definitions ----------------------------------------\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Comments:\n\n# - DIST_PATH is assumed to not exist if BLIS_INSTALL_PATH is given.\n\n# - We must use recursively expanded assignment for LIB_PATH and INC_PATH in\n\n#   the second case because CONFIG_NAME is not yet set.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# --- Include common makefile definitions --------------------------------------\n\n#\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include the common makefile fragment.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# --- BLAS and LAPACK implementations ------------------------------------------\n\n#\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# BLAS library path(s). This is where the BLAS libraries reside.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# OpenBLAS\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ATLAS\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# MKL\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ESSL\n\n# Note: ESSL is named differently for SMP and/or BG\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Accelerate\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\n\n# --- General build definitions ------------------------------------------------\n\n#\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Gather all local object files.\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Override the value of CINCFLAGS so that the value of CFLAGS returned by\n\n# get-user-cflags-for() is not cluttered up with include paths needed only\n\n# while building BLIS.\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Use the \"framework\" CFLAGS for the configuration family.\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Add local header paths to CFLAGS\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Locate the libblis library to which we will link.\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\n\n# --- Targets/rules ------------------------------------------------------------\n\n#\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Complete list of possible targets when defining 'all':\n\n#\n\n#   blis openblas atlas mkl mac essl\n\n#\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# --Object file rules --\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# -- Executable file rules --\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# NOTE: For the BLAS test drivers, we place the BLAS libraries before BLIS\n\n# on the link command line in case BLIS was configured with the BLAS\n\n# compatibility layer. This prevents BLIS from inadvertently getting called\n\n# for the BLAS routines we are trying to test with.\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# -- Clean rules --\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "test/3/Makefile" : {
      "ObjectId" : "8d4c2e616c72b5f5856e8cb0ebd33e3ebca72072",
      "LastModified" : "2019-04-11T23:33:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#!/bin/bash\n\n#\n\n#  BLIS    \n\n#  An object-based framework for developing high-performance BLAS-like\n\n#  libraries.\n\n#\n\n#  Copyright (C) 2014, The University of Texas at Austin\n\n#  Copyright (C) 2018, Advanced Micro Devices, Inc.\n\n#\n\n#  Redistribution and use in source and binary forms, with or without\n\n#  modification, are permitted provided that the following conditions are\n\n#  met:\n\n#   - Redistributions of source code must retain the above copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n#   - Redistributions in binary form must reproduce the above copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#   - Neither the name(s) of the copyright holder(s) nor the names of its\n\n#     contributors may be used to endorse or promote products derived\n\n#     from this software without specific prior written permission.\n\n#\n\n#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n#  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n#  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Makefile\n\n#\n\n# Field G. Van Zee\n\n#\n\n# Makefile for standalone BLIS test drivers.\n\n#\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# --- Makefile PHONY target definitions ----------------------------------------\n\n#\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# --- Determine makefile fragment location -------------------------------------\n\n#\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Comments:\n\n# - DIST_PATH is assumed to not exist if BLIS_INSTALL_PATH is given.\n\n# - We must use recursively expanded assignment for LIB_PATH and INC_PATH in\n\n#   the second case because CONFIG_NAME is not yet set.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# --- Include common makefile definitions --------------------------------------\n\n#\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Include the common makefile fragment.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# --- BLAS implementations -----------------------------------------------------\n\n#\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# BLAS library path(s). This is where the BLAS libraries reside.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# OpenBLAS\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ATLAS\n\n#ATLAS_LIB      := $(HOME_LIB_PATH)/libf77blas.a \\\n#                  $(HOME_LIB_PATH)/libatlas.a\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Eigen\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# MKL\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#MKLP_LIB       := -L$(MKL_LIB_PATH) \\\n#                  -lmkl_intel_thread \\\n#                  -lmkl_core \\\n#                  -lmkl_intel_ilp64 \\\n#                  -L$(ICC_LIB_PATH) \\\n#                  -liomp5\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#-L$(ICC_LIB_PATH) \\\n                  #-lgomp\n",
        "Line" : 121,
        "CharPositionInLine" : 18
      },
      "15" : {
        "Text" : "#\n\n# --- Problem size definitions -------------------------------------------------\n\n#\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Single core (single-threaded)\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Single-socket (multithreaded)\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Dual-socket (multithreaded)\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\n\n# --- General build definitions ------------------------------------------------\n\n#\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Gather all local object files.\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Override the value of CINCFLAGS so that the value of CFLAGS returned by\n\n# get-user-cflags-for() is not cluttered up with include paths needed only\n\n# while building BLIS.\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Use the \"framework\" CFLAGS for the configuration family.\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Add local header paths to CFLAGS.\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Locate the libblis library to which we will link.\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Define a set of CFLAGS for use with C++ and Eigen.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Create a copy of CXXFLAGS without -fopenmp in order to disable multithreading.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Which library?\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Complex implementation type\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Implementation string\n\n#STR_3MHW := -DSTR=\\\"3mhw\\\"\n\n#STR_3M1  := -DSTR=\\\"3m1\\\"\n\n#STR_4MHW := -DSTR=\\\"4mhw\\\"\n\n#STR_4M1B := -DSTR=\\\"4m1b\\\"\n\n#STR_4M1A := -DSTR=\\\"4m1a\\\"\n\n#STR_1M   := -DSTR=\\\"1m\\\"\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Single or multithreaded string\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Problem size specification\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\n\n# --- Targets/rules ------------------------------------------------------------\n\n#\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#blis-ind:   blis-ind-st blis-ind-mt\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Define the datatypes, operations, and implementations.\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Define functions to construct object filenames from the datatypes and\n\n# operations given an implementation. We define one function for single-\n\n# threaded, single-socket, and dual-socket filenames.\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Construct object and binary names for single-threaded, single-socket, and\n\n# dual-socket files for BLIS, OpenBLAS, and a vendor library (e.g. MKL).\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Define some targets associated with the above object/binary files.\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Mark the object files as intermediate so that make will remove them\n\n# automatically after building the binaries on which they depend.\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# --Object file rules --\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#$(TEST_OBJ_PATH)/%.o: $(TEST_SRC_PATH)/%.c\n\n#\t$(CC) $(CFLAGS) -c $< -o $@\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# A function to return the datatype cpp macro def from the datatype\n\n# character.\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# A function to return other cpp macros that help the test driver\n\n# identify the implementation.\n\n#get-bl-cpp = $(strip \\\n#             $(if $(findstring     blis,$(1)),$(STR_NAT) $(BLI_DEF),\\\n#             $(if $(findstring openblas,$(1)),$(STR_OBL) $(BLA_DEF),\\\n#             $(if $(findstring    eigen,$(1)),$(STR_EIG) $(EIG_DEF),\\\n#                                              $(STR_VEN) $(BLA_DEF)))))\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Rules for BLIS and BLAS libraries.\n",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Rules for Eigen.\n",
        "Line" : 380,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# -- Executable file rules --\n",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# NOTE: For the BLAS test drivers, we place the BLAS libraries before BLIS\n\n# on the link command line in case BLIS was configured with the BLAS\n\n# compatibility layer. This prevents BLIS from inadvertently getting called\n\n# for the BLAS routines we are trying to test with.\n",
        "Line" : 411,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# -- Clean rules --\n",
        "Line" : 456,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 48
    },
    "test/Makefile" : {
      "ObjectId" : "799900b586a10a0b5b3e106d328ed7a9ae5be42c",
      "LastModified" : "2019-04-11T23:33:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n#\n\n#  BLIS    \n\n#  An object-based framework for developing high-performance BLAS-like\n\n#  libraries.\n\n#\n\n#  Copyright (C) 2014, The University of Texas at Austin\n\n#  Copyright (C) 2017, Advanced Micro Devices, Inc.\n\n#\n\n#  Redistribution and use in source and binary forms, with or without\n\n#  modification, are permitted provided that the following conditions are\n\n#  met:\n\n#   - Redistributions of source code must retain the above copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n#   - Redistributions in binary form must reproduce the above copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#   - Neither the name(s) of the copyright holder(s) nor the names of its\n\n#     contributors may be used to endorse or promote products derived\n\n#     from this software without specific prior written permission.\n\n#\n\n#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n#  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n#  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Makefile\n\n#\n\n# Field G. Van Zee\n\n# \n\n# Makefile for standalone BLIS test drivers.\n\n#\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# --- Makefile PHONY target definitions ----------------------------------------\n\n#\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# --- Determine makefile fragment location -------------------------------------\n\n#\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Comments:\n\n# - DIST_PATH is assumed to not exist if BLIS_INSTALL_PATH is given.\n\n# - We must use recursively expanded assignment for LIB_PATH and INC_PATH in\n\n#   the second case because CONFIG_NAME is not yet set.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# --- Include common makefile definitions --------------------------------------\n\n#\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Include the common makefile fragment.\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# --- BLAS and LAPACK implementations ------------------------------------------\n\n#\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# BLIS library and header path. This is simply wherever it was installed.\n\n#BLIS_LIB_PATH  := $(INSTALL_PREFIX)/lib\n\n#BLIS_INC_PATH  := $(INSTALL_PREFIX)/include/blis\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# BLIS library.\n\n#BLIS_LIB       := $(BLIS_LIB_PATH)/libblis.a\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# BLAS library path(s). This is where the BLAS libraries reside.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#MKL_LIB_PATH   := /opt/apps/intel/13/composer_xe_2013.2.146/mkl/lib/intel64\n\n#MKL_LIB_PATH   := $(HOME)/intel/mkl/lib/intel64\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#ESSL_LIB_PATH  := $(HOME)/path/to/essl/changeme\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# OpenBLAS\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ATLAS\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# MKL\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# ESSL\n\n# Note: ESSL is named differently for SMP and/or BG\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# This is the 32b library on POWER\n",
        "Line" : 118,
        "CharPositionInLine" : 24
      },
      "18" : {
        "Text" : "#ESSL_TYPE      := 6464  # This is the 64b library on POWER\n\n#ESSL_TYPE      := bg    # This is the 32b single-threaded library on Blue Gene\n\n#ESSL_TYPE      := smpbg # This is the 32b multi-threaded library on Blue Gene\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Accelerate\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#\n\n# --- General build definitions ------------------------------------------------\n\n#\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Gather all local object files.\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Override the value of CINCFLAGS so that the value of CFLAGS returned by\n\n# get-user-cflags-for() is not cluttered up with include paths needed only\n\n# while building BLIS.\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Use the CFLAGS for the configuration family.\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Add local header paths to CFLAGS\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Locate the libblis library to which we will link.\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#\n\n# --- Targets/rules ------------------------------------------------------------\n\n#\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Complete list of possible targets when defining 'all':\n\n#\n\n#   blis openblas atlas mkl mac essl\n\n#\n\n#all: blis openblas atlas mkl\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# --Object file rules --\n",
        "Line" : 274,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# -- Executable file rules --\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# NOTE: For the BLAS test drivers, we place the BLAS libraries before BLIS\n\n# on the link command line in case BLIS was configured with the BLAS\n\n# compatibility layer. This prevents BLIS from inadvertently getting called\n\n# for the BLAS routines we are trying to test with.\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# -- Clean rules --\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 32
    },
    "test/exec_sizes/Makefile" : {
      "ObjectId" : "ca84863539c6e3620824ebd04704da47df9c7ee7",
      "LastModified" : "2019-04-11T23:33:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#!/bin/bash\n\n#\n\n#  BLIS    \n\n#  An object-based framework for developing high-performance BLAS-like\n\n#  libraries.\n\n#\n\n#  Copyright (C) 2014, The University of Texas at Austin\n\n#\n\n#  Redistribution and use in source and binary forms, with or without\n\n#  modification, are permitted provided that the following conditions are\n\n#  met:\n\n#   - Redistributions of source code must retain the above copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n#   - Redistributions in binary form must reproduce the above copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#   - Neither the name(s) of the copyright holder(s) nor the names of its\n\n#     contributors may be used to endorse or promote products derived\n\n#     from this software without specific prior written permission.\n\n#\n\n#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n#  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n#  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Makefile\n\n#\n\n# Field G. Van Zee\n\n# \n\n# Makefile for standalone BLIS test drivers.\n\n#\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# --- Makefile PHONY target definitions ----------------------------------------\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# --- Determine makefile fragment location -------------------------------------\n\n#\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Comments:\n\n# - DIST_PATH is assumed to not exist if BLIS_INSTALL_PATH is given.\n\n# - We must use recursively expanded assignment for LIB_PATH and INC_PATH in\n\n#   the second case because CONFIG_NAME is not yet set.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# --- Include common makefile definitions --------------------------------------\n\n#\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Include the common makefile fragment.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# --- BLAS and LAPACK implementations ------------------------------------------\n\n#\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# BLIS library and header path. This is simply wherever it was installed.\n\n#BLIS_LIB_PATH  := $(INSTALL_PREFIX)/lib\n\n#BLIS_INC_PATH  := $(INSTALL_PREFIX)/include/blis\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# BLIS library.\n\n#BLIS_LIB       := $(BLIS_LIB_PATH)/libblis.a\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# BLAS library path(s). This is where the BLAS libraries reside.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#MKL_LIB_PATH   := $(HOME)/intel/mkl/lib/intel64/\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# OpenBLAS, ATLAS, and MKL libraries.\n\n#BLAS_LIB       := $(LIB_PATH)/libblas.a\n\n#BLAS_LIB       := $(LIB_PATH)/libgoto.a\n\n#BLAS_LIB       := $(LIB_PATH)/libgoto2.a\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#MBLAS_LIB       := -L$(MKL_LIB_PATH) \\\n#                   -lmkl_sequential \\\n#                   -lmkl_core \\\n#                   -lmkl_intel_lp64\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#MBLAS_LIB      := -Wl,--start-group \\\n#                  $(MKL_LIB_PATH)/libmkl_sequential.a \\\n#                  $(MKL_LIB_PATH)/libmkl_core.a \\\n#                  $(MKL_LIB_PATH)/libmkl_intel_ilp64.a \\\n#                  -Wl,--end-group \\\n#                  -lpthread -lm\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\n\n# --- General build definitions ------------------------------------------------\n\n#\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Gather all local source files.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Override the value of CINCFLAGS so that the value of CFLAGS returned by\n\n# get-user-cflags-for() is not cluttered up with include paths needed only\n\n# while building BLIS.\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Use the CFLAGS for the configuration family.\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Add local header paths to CFLAGS\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Locate the libblis library to which we will link.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#\n\n# --- Targets/rules ------------------------------------------------------------\n\n#\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# --Object file rules --\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# -- Executable file rules --\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# BLIS rules\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# OpenBLAS rules\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# ATLAS BLAS rules\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# MKL BLAS rules\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# -- Clean rules --\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "test/mixeddt/Makefile" : {
      "ObjectId" : "7ae4cb934257045130ad46afa4ebb9c044ca5a93",
      "LastModified" : "2019-04-11T23:33:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#!/bin/bash\n\n#\n\n#  BLIS    \n\n#  An object-based framework for developing high-performance BLAS-like\n\n#  libraries.\n\n#\n\n#  Copyright (C) 2014, The University of Texas at Austin\n\n#\n\n#  Redistribution and use in source and binary forms, with or without\n\n#  modification, are permitted provided that the following conditions are\n\n#  met:\n\n#   - Redistributions of source code must retain the above copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n#   - Redistributions in binary form must reproduce the above copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#   - Neither the name(s) of the copyright holder(s) nor the names of its\n\n#     contributors may be used to endorse or promote products derived\n\n#     from this software without specific prior written permission.\n\n#\n\n#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n#  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n#  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Makefile\n\n#\n\n# Field G. Van Zee\n\n#\n\n# Makefile for standalone BLIS test drivers.\n\n#\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# --- Makefile PHONY target definitions ----------------------------------------\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# --- Determine makefile fragment location -------------------------------------\n\n#\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Comments:\n\n# - DIST_PATH is assumed to not exist if BLIS_INSTALL_PATH is given.\n\n# - We must use recursively expanded assignment for LIB_PATH and INC_PATH in\n\n#   the second case because CONFIG_NAME is not yet set.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# --- Include common makefile definitions --------------------------------------\n\n#\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Include the common makefile fragment.\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# --- BLAS and LAPACK implementations ------------------------------------------\n\n#\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# BLIS library and header path. This is simply wherever it was installed.\n\n#BLIS_LIB_PATH  := $(INSTALL_PREFIX)/lib\n\n#BLIS_INC_PATH  := $(INSTALL_PREFIX)/include/blis\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# BLIS library.\n\n#BLIS_LIB       := $(BLIS_LIB_PATH)/libblis.a\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# BLAS library path(s). This is where the BLAS libraries reside.\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\n\n# --- General build definitions ------------------------------------------------\n\n#\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Gather all local object files.\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Override the value of CINCFLAGS so that the value of CFLAGS returned by\n\n# get-frame-cflags-for() is not cluttered up with include paths needed only\n\n# while building BLIS.\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Use the \"framework\" CFLAGS for the configuration family.\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Add local header paths to CFLAGS.\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Locate the libblis library to which we will link.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Which library?\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Single or multithreaded string\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Problem size specification\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Enumerate possible datatypes and computation precisions.\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Various functions that help us construct the datatype combinations and then\n\n# extract the needed datatype strings and C preprocessor define flags.\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Define a function to return the appropriate -DSTR= and -D[BLIS|BLAS] flags.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Enumerate all possible datatype combinations.\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Build a list of the datatype strings.\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Build a list of BLIS, OpenBLAS, and MKL executables.\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#\n\n# --- Targets/rules ------------------------------------------------------------\n\n#\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#blis:        test_ssssgemm_asm_blis_st.x \\\n#             test_sssdgemm_asm_blis_st.x \\\n#             test_ssdsgemm_asm_blis_st.x \\\n#             test_sdssgemm_asm_blis_st.x \\\n#             test_dsssgemm_asm_blis_st.x \\\n#             test_dddsgemm_asm_blis_st.x \\\n#             test_ddddgemm_asm_blis_st.x\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# --Object file rules --\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Define the function that will be used to instantiate compilation rules\n\n# for the various implementations.\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define the implementations for which we will instantiate compilation rules.\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Instantiate the rule function make-st-rule() and make-mt-rule for each\n\n# implementation in IMPLS and each of the datatype \"codes\" in DT_CODES.\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# -- Executable file rules --\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# NOTE: For the BLAS test drivers, we place the BLAS libraries before BLIS\n\n# on the link command line in case BLIS was configured with the BLAS\n\n# compatibility layer. This prevents BLIS from inadvertently getting called\n\n# for the BLAS routines we are trying to test with.\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# -- Clean rules --\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 35
    },
    "test/studies/skx/Makefile" : {
      "ObjectId" : "29134a4ff71353189dbb1987bd93221a8e5661b7",
      "LastModified" : "2019-04-11T23:33:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#!/bin/bash\n\n#\n\n#  BLIS    \n\n#  An object-based framework for developing high-performance BLAS-like\n\n#  libraries.\n\n#\n\n#  Copyright (C) 2014, The University of Texas at Austin\n\n#\n\n#  Redistribution and use in source and binary forms, with or without\n\n#  modification, are permitted provided that the following conditions are\n\n#  met:\n\n#   - Redistributions of source code must retain the above copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n#   - Redistributions in binary form must reproduce the above copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#   - Neither the name(s) of the copyright holder(s) nor the names of its\n\n#     contributors may be used to endorse or promote products derived\n\n#     from this software without specific prior written permission.\n\n#\n\n#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n#  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n#  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Makefile\n\n#\n\n# Field G. Van Zee\n\n#\n\n# Makefile for standalone BLIS test drivers.\n\n#\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# --- Makefile PHONY target definitions ----------------------------------------\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Comments:\n\n# - DIST_PATH is assumed to not exist if BLIS_INSTALL_PATH is given.\n\n# - We must use recursively expanded assignment for LIB_PATH and INC_PATH in\n\n#   the second case because CONFIG_NAME is not yet set.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# --- Include common makefile definitions --------------------------------------\n\n#\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include the common makefile fragment.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# --- BLAS and LAPACK implementations ------------------------------------------\n\n#\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# BLIS library and header path. This is simply wherever it was installed.\n\n#BLIS_LIB_PATH  := $(INSTALL_PREFIX)/lib\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# BLIS library.\n\n#BLIS_LIB       := $(BLIS_LIB_PATH)/libblis.a\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# BLAS library path(s). This is where the BLAS libraries reside.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#MKL_LIB_PATH   := /opt/apps/intel/13/composer_xe_2013.2.146/mkl/lib/intel64\n\n#MKL_LIB_PATH   := $(HOME)/intel/mkl/lib/intel64\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#ICC_LIB_PATH   := /opt/apps/intel/13/composer_xe_2013.2.146/compiler/lib/intel64\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# OpenBLAS\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ATLAS\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# For ARMPL\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# MKL\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#MKLP_LIB       := -L$(MKL_LIB_PATH) \\\n#                  -lmkl_intel_thread \\\n#                  -lmkl_core \\\n#                  -lmkl_intel_ilp64 \\\n#                  -L$(ICC_LIB_PATH) \\\n#                  -liomp5\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#-L$(ICC_LIB_PATH) \\\n                  #-lgomp\n",
        "Line" : 136,
        "CharPositionInLine" : 18
      },
      "18" : {
        "Text" : "# ACML\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\n\n# --- General build definitions ------------------------------------------------\n\n#\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Gather all local object files.\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Override the value of CINCFLAGS so that the value of CFLAGS returned by\n\n# get-user-cflags-for() is not cluttered up with include paths needed only\n\n# while building BLIS.\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Use the \"framework\" CFLAGS for the configuration family.\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Add local header paths to CFLAGS.\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Locate the libblis library to which we will link.\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Datatype\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Which library?\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Complex implementation type\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Implementation string\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Single or multithreaded string\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Problem size specification\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#\n\n# --- Targets/rules ------------------------------------------------------------\n\n#\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# --Object file rules --\n",
        "Line" : 441,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# blis 3mhw\n",
        "Line" : 446,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# blis 3m1\n",
        "Line" : 459,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# blis 4mhw\n",
        "Line" : 472,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# blis 4m1b\n",
        "Line" : 485,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# blis 4m1a\n",
        "Line" : 498,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# blis 1m\n",
        "Line" : 511,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# blis asm\n",
        "Line" : 524,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# openblas\n",
        "Line" : 549,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# mkl\n",
        "Line" : 574,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# armpl\n",
        "Line" : 599,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# mkl\n",
        "Line" : 624,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# -- Executable file rules --\n",
        "Line" : 626,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# NOTE: For the BLAS test drivers, we place the BLAS libraries before BLIS\n\n# on the link command line in case BLIS was configured with the BLAS\n\n# compatibility layer. This prevents BLIS from inadvertently getting called\n\n# for the BLAS routines we are trying to test with.\n",
        "Line" : 628,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# -- Clean rules --\n",
        "Line" : 658,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "test/studies/thunderx2/Makefile" : {
      "ObjectId" : "c812161d40d840277eddf0caae5f2fc07cc75d40",
      "LastModified" : "2019-04-11T23:33:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#!/bin/bash\n\n#\n\n#  BLIS    \n\n#  An object-based framework for developing high-performance BLAS-like\n\n#  libraries.\n\n#\n\n#  Copyright (C) 2014, The University of Texas at Austin\n\n#\n\n#  Redistribution and use in source and binary forms, with or without\n\n#  modification, are permitted provided that the following conditions are\n\n#  met:\n\n#   - Redistributions of source code must retain the above copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n#   - Redistributions in binary form must reproduce the above copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#   - Neither the name(s) of the copyright holder(s) nor the names of its\n\n#     contributors may be used to endorse or promote products derived\n\n#     from this software without specific prior written permission.\n\n#\n\n#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n#  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n#  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Makefile\n\n#\n\n# Field G. Van Zee\n\n#\n\n# Makefile for standalone BLIS test drivers.\n\n#\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# --- Makefile PHONY target definitions ----------------------------------------\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Comments:\n\n# - DIST_PATH is assumed to not exist if BLIS_INSTALL_PATH is given.\n\n# - We must use recursively expanded assignment for LIB_PATH and INC_PATH in\n\n#   the second case because CONFIG_NAME is not yet set.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# --- Include common makefile definitions --------------------------------------\n\n#\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include the common makefile fragment.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# --- BLAS and LAPACK implementations ------------------------------------------\n\n#\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# BLIS library and header path. This is simply wherever it was installed.\n\n#BLIS_LIB_PATH  := $(INSTALL_PREFIX)/lib\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# BLIS library.\n\n#BLIS_LIB       := $(BLIS_LIB_PATH)/libblis.a\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# BLAS library path(s). This is where the BLAS libraries reside.\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# OpenBLAS\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ATLAS\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# For ARMPL\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# MKL\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#MKLP_LIB       := -L$(MKL_LIB_PATH) \\\n#                  -lmkl_intel_thread \\\n#                  -lmkl_core \\\n#                  -lmkl_intel_ilp64 \\\n#                  -L$(ICC_LIB_PATH) \\\n#                  -liomp5\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#-L$(ICC_LIB_PATH) \\\n                  #-lgomp\n",
        "Line" : 131,
        "CharPositionInLine" : 18
      },
      "16" : {
        "Text" : "# ACML\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#\n\n# --- General build definitions ------------------------------------------------\n\n#\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Gather all local object files.\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Use the \"framework\" CFLAGS for the configuration family.\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Add local header paths to CFLAGS.\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Locate the libblis library to which we will link.\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Datatype\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Which library?\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Complex implementation type\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Implementation string\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Single or multithreaded string\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Problem size specification\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#\n\n# --- Targets/rules ------------------------------------------------------------\n\n#\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# --Object file rules --\n",
        "Line" : 431,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# blis 3mhw\n",
        "Line" : 436,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# blis 3m1\n",
        "Line" : 449,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# blis 4mhw\n",
        "Line" : 462,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# blis 4m1b\n",
        "Line" : 475,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# blis 4m1a\n",
        "Line" : 488,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# blis 1m\n",
        "Line" : 501,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# blis asm\n",
        "Line" : 514,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# openblas\n",
        "Line" : 539,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# mkl\n",
        "Line" : 564,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# armpl\n",
        "Line" : 589,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# mkl\n",
        "Line" : 614,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# -- Executable file rules --\n",
        "Line" : 616,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# NOTE: For the BLAS test drivers, we place the BLAS libraries before BLIS\n\n# on the link command line in case BLIS was configured with the BLAS\n\n# compatibility layer. This prevents BLIS from inadvertently getting called\n\n# for the BLAS routines we are trying to test with.\n",
        "Line" : 618,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# -- Clean rules --\n",
        "Line" : 648,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 44
    },
    "test/thread_ranges/Makefile" : {
      "ObjectId" : "2ed155be1abaad1d1a5ce18a0a7cf4f3548b2129",
      "LastModified" : "2019-04-11T23:33:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#!/bin/bash\n\n#\n\n#  BLIS    \n\n#  An object-based framework for developing high-performance BLAS-like\n\n#  libraries.\n\n#\n\n#  Copyright (C) 2014, The University of Texas at Austin\n\n#\n\n#  Redistribution and use in source and binary forms, with or without\n\n#  modification, are permitted provided that the following conditions are\n\n#  met:\n\n#   - Redistributions of source code must retain the above copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n#   - Redistributions in binary form must reproduce the above copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#   - Neither the name(s) of the copyright holder(s) nor the names of its\n\n#     contributors may be used to endorse or promote products derived\n\n#     from this software without specific prior written permission.\n\n#\n\n#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n#  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n#  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Makefile\n\n#\n\n# Field G. Van Zee\n\n# \n\n# Makefile for standalone BLIS test drivers.\n\n#\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# --- Makefile PHONY target definitions ----------------------------------------\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# --- Determine makefile fragment location -------------------------------------\n\n#\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Comments:\n\n# - DIST_PATH is assumed to not exist if BLIS_INSTALL_PATH is given.\n\n# - We must use recursively expanded assignment for LIB_PATH and INC_PATH in\n\n#   the second case because CONFIG_NAME is not yet set.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# --- Include common makefile definitions --------------------------------------\n\n#\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Include the common makefile fragment.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# --- General build definitions ------------------------------------------------\n\n#\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Gather all local object files.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Override the value of CINCFLAGS so that the value of CFLAGS returned by\n\n# get-user-cflags-for() is not cluttered up with include paths needed only\n\n# while building BLIS.\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Use the CFLAGS for the configuration family.\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add installed and local header paths to CFLAGS\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Locate the libblis library to which we will link.\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Datatype\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Problem size specification\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\n\n# --- Targets/rules ------------------------------------------------------------\n\n#\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# --Object file rules --\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# blis asm\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# -- Executable file rules --\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# NOTE: For the BLAS test drivers, we place the BLAS libraries before BLIS\n\n# on the link command line in case BLIS was configured with the BLAS\n\n# compatibility layer. This prevents BLIS from inadvertently getting called\n\n# for the BLAS routines we are trying to test with.\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# -- Clean rules --\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "testsuite/Makefile" : {
      "ObjectId" : "1e97cdcf4244a3b383863e50aaa1dfcaa44d6478",
      "LastModified" : "2019-04-11T23:33:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n#\n\n#  BLIS    \n\n#  An object-based framework for developing high-performance BLAS-like\n\n#  libraries.\n\n#\n\n#  Copyright (C) 2014, The University of Texas at Austin\n\n#\n\n#  Redistribution and use in source and binary forms, with or without\n\n#  modification, are permitted provided that the following conditions are\n\n#  met:\n\n#   - Redistributions of source code must retain the above copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n#   - Redistributions in binary form must reproduce the above copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#   - Neither the name(s) of the copyright holder(s) nor the names of its\n\n#     contributors may be used to endorse or promote products derived\n\n#     from this software without specific prior written permission.\n\n#\n\n#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n#  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n#  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Makefile\n\n#\n\n# Field G. Van Zee\n\n#\n\n# Makefile for BLIS testsuite.\n\n#\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# --- Makefile PHONY target definitions ----------------------------------------\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# --- Determine makefile fragment location -------------------------------------\n\n#\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Comments:\n\n# - DIST_PATH is assumed to not exist if BLIS_INSTALL_PATH is given.\n\n# - We must use recursively expanded assignment for LIB_PATH and INC_PATH in\n\n#   the second case because CONFIG_NAME is not yet set.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# --- Include common makefile definitions --------------------------------------\n\n#\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Include the common makefile fragment.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# --- General build definitions ------------------------------------------------\n\n#\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Gather all local object files.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Override the value of CINCFLAGS so that the value of CFLAGS returned by\n\n# get-user-cflags-for() is not cluttered up with include paths needed only\n\n# while building BLIS.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Use the \"framework\" CFLAGS for the configuration family.\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add local header paths to CFLAGS\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Locate the libblis library to which we will link.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Binary executable name.\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\n\n# --- Targets/rules ------------------------------------------------------------\n\n#\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# --- Primary targets ---\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# --- Environment check rules ---\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# --Object file rules --\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# -- Executable file rules --\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# -- Test run/check rules --\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# -- Clean rules --\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "windows/Makefile" : {
      "ObjectId" : "f015fe14fff92204dfa5d30963bbd2c0aca45b5b",
      "LastModified" : "2019-04-11T23:33:08Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\r\n\n#\r\n\n#  BLIS    \r\n\n#  An object-based framework for developing high-performance BLAS-like\r\n\n#  libraries.\r\n\n#\r\n\n#  Copyright (C) 2014, The University of Texas at Austin\r\n\n#\r\n\n#  Redistribution and use in source and binary forms, with or without\r\n\n#  modification, are permitted provided that the following conditions are\r\n\n#  met:\r\n\n#   - Redistributions of source code must retain the above copyright\r\n\n#     notice, this list of conditions and the following disclaimer.\r\n\n#   - Redistributions in binary form must reproduce the above copyright\r\n\n#     notice, this list of conditions and the following disclaimer in the\r\n\n#     documentation and/or other materials provided with the distribution.\r\n\n#   - Neither the name(s) of the copyright holder(s) nor the names of its\r\n\n#     contributors may be used to endorse or promote products derived\r\n\n#     from this software without specific prior written permission.\r\n\n#\r\n\n#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n\n#  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n\n#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n\n#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n\n#  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n\n#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n\n#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n\n#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n\n#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n\n#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n\n#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\n#\r\n\n#\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\r\n\n# --- Include variables determined at configure-time --------------------------\r\n\n#\r\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\r\n\n# --- Include environment- and build-specific definitions ----------------------\r\n\n#\r\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include build definitions\r\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\r\n\n# --- Variable modifications ---------------------------------------------------\r\n\n#\r\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\r\n\n# --- High-level rules ---------------------------------------------------------\r\n\n#\r\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\r\n\n# --- Source code (inference) rules --------------------------------------------\r\n\n#\r\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# --- C source files in flamec directory ---\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\r\n\n# --- Library generation rules -------------------------------------------------\r\n\n#\r\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# --- Static library ---\r\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# --- Dynamic library (object code file, import library, and export file) ---\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\r\n\n# --- Install rules ------------------------------------------------------------\r\n\n#\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# --- Header files ---\r\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# --- Static library ---\r\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# --- Dynamic library (object code) ---\r\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# --- Dynamic library (import library) ---\r\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# --- Dynamic library (export file) ---\r\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#\r\n\n# --- Clean rules --------------------------------------------------------------\r\n\n#\r\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Useful for developing when all we want to do is remove the library products.\r\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\r\n\n# --- Help target --------------------------------------------------------------\r\n\n#\r\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20,
      "Errorlog" : "line 40:23 token recognition error at: '\\c'\nline 54:17 token recognition error at: '\\d'\n"
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 15
  },
  "ElapsedTime" : 2078
}