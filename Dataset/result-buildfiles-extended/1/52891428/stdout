{
  "Repository" : "52891428",
  "Revision" : "HEAD",
  "ObjectId" : "73f100e460e60d8a872522991603a2b2c3cf77ea",
  "CommitTime" : "2019-04-18T23:40:56Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "6b1123ce7ea37bc717b5f5af0bd554f58d3934fb",
      "LastModified" : "2018-12-17T19:13:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2013-present Barefoot Networks, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#    http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Allow the version to be set from outside\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Semantic version numbering: <major>.<minor>.<patch>[-rcX]\n\n# Examples: 0.5.1, 1.0.0-rc1, 1.0.1-alpha\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# # search in /usr/local first\n\n# set (CMAKE_FIND_ROOT_PATH \"/usr/local/bin\" \"${CMAKE_FIND_ROOT_PATH}\")\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# required tools and libraries\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The boost graph headers are optional and only required by the graphs backend\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# otherwise ordered_map code tries to use boost::get (graph)\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# other required libraries\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# check includes\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# check functions\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# set libraries to be used with check_function_exists\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# restore CMAKE_REQUIRED_LIBRARIES\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# python modules\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# other packages\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# enable CTest\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# if we want to manage versions in CMake ...\n\n# include (cmake/P4CVersion.cmake)\n\n# set (CPACK_PACKAGE_VERSION_MAJOR ${__P4C_VERSION_MAJOR})\n\n# set (CPACK_PACKAGE_VERSION_MINOR ${__P4C_VERSION_MINOR})\n\n# set (CPACK_PACKAGE_VERSION_PATCH ${__P4C_VERSION_PATCH})\n\n# if (__P4C_VERSION_RC)\n\n#   set (CPACK_PACKAGE_VERSION_PATCH ${CPACK_PACKAGE_VERSION_PATCH}-${__P4C_VERSION_RC})\n\n# endif ()\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# set (CMAKE_CXX_EXTENSIONS OFF) # prefer using -std=c++11 rather than -std=gnu++11\n\n# CMAKE_CXX_STANDARD was introduced in CMake 3.1, so for older versions of CMake, we use -std=gnu++11\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# If we're on GCC, use the gold linker if available.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# list to collect all files that need lint\n",
        "Line" : 207,
        "CharPositionInLine" : 30
      },
      "19" : {
        "Text" : "# list to collect all test tags\n",
        "Line" : 208,
        "CharPositionInLine" : 48
      },
      "20" : {
        "Text" : "# list to collect all .def files\n",
        "Line" : 209,
        "CharPositionInLine" : 29
      },
      "21" : {
        "Text" : "# Other configuration files that need to be generated\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# IR_GENERATOR_DIRECTORY is used to set the RUNTIME_OUTPUT_DIRECTORY property\n\n# of the irgenerator target to the matching path\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# the order of adding subdirectories matters because of target dependencies\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# component libraries: must be defined before being used in the\n\n# backend executables\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# add extensions - before the frontends as they produce IR and extra frontend sources\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# extra sources that need to be linked directly into p4test so that\n\n# extensions can provide specific conversions (e.g., for externs)\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Generate an option that makes it possible to disable this extension.\n",
        "Line" : 243,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# IR Generation\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Fixup #line directives in the generated IR files\n\n# This is a vestige of automake. CMake handles dependencies correctly,\n\n# so we should output the line directives directly from the generator\n\n#\n\n# Moreover, we generate these files to a temporary location and update the\n\n# build files only if they have changed. This avoids rebuilding the whole\n\n# tree when small changes to the .def files affect only the .cpp file and\n\n# not the headers.\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Header files\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#FIXME -- should only run this when headers change -- how to accomplish that?\n",
        "Line" : 313,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Installation\n\n# Targets install themselves. Here we install the core headers\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# cpplint\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# add cpplint as a test so that make check can proceed in parallel\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# tags, etags\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# check, recheck, check-*, check-ifail, gtest\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# uninstall target\n",
        "Line" : 372,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# docs\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# \\TODO: packaging\n",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 40
    },
    "backends/bmv2/CMakeLists.txt" : {
      "ObjectId" : "1ed5fde1d83832484eb10e1cc3fc7e1a721ef17e",
      "LastModified" : "2019-04-18T23:40:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2013-present Barefoot Networks, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#    http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Makefile for a backend that generates code for the Behavioral Model version 2 (BMv2)\n\n# compiling for the simple_switch target.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# sources for backend executable\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# hack to get around the fact that the test scripts expect the backend\n\n# binary to be in the top level directory. This should go away when we\n\n# remove automake and fix the scripts.\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tests\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -p to use psa switch model\n\n# -a to pass flags to compiler\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This test defines two lpm keys for a table.\n\n# Even though the P4 spec allows it, it doesn't really make sense in a switch\n\n# so we allow it to fail on BMv2.\n",
        "Line" : 141,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# compiler claims (incorrectly?) that c2 has mulitple successors, so is not supported\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# As of 2019-Feb-04 latest p4c code, this program fails due to the\n\n# root cause of both issues #1694 and #1669.  I have tested it with\n\n# the proposed fix for issue #1694 that is on PR #1704, and while\n\n# that does make the produced BMv2 JSON file able to cause packets\n\n# to be recirculated, resubmitted, etc. it still has the bug of not\n\n# preserving the metadata specified in the program's field_lists, so\n\n# the STF tests fail because of issue #1669.  As of this writing,\n\n# this program is the _only_ p4c test program that relies for its\n\n# successful execution on the preservation of metadata across\n\n# resubmit, recirculate, and/or clone operations.\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# This test uses a feature currently unsupported in the BMv2 back-end.\n",
        "Line" : 158,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# This test uses a table graph that is not implementable in BMv2\n",
        "Line" : 160,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# These tests use a table key with type 'error'\n",
        "Line" : 162,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# This test uses an undefined extern\n",
        "Line" : 165,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# This test also uses a custom extern\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# This test uses an incorrect model\n",
        "Line" : 169,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# These psa tests are not ready to run on bmv2 yet\n",
        "Line" : 171,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# This reads stack.next\n",
        "Line" : 175,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# These test use computations in the verify/update checksum controls - unsupported\n",
        "Line" : 177,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# These tests require bmv2's psa_switch to support std metadata passing at minimum\n",
        "Line" : 180,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 19
    },
    "backends/bmv2/psa_switch/version.h.cmake" : {
      "ObjectId" : "5410802c0c47fc287cc091df7d4c2c8f9bff4294",
      "LastModified" : "2018-11-06T20:49:16Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\nCopyright 2018-present Barefoot Networks, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/**\n  Set the compiler version at build time.\n  The build system defines P4C_VERSION as a full string as well as the\n  following components: P4C_VERSION_MAJOR, P4C_VERSION_MINOR,\n  P4C_VERSION_PATCH, P4C_VERSION_RC, and P4C_GIT_SHA.\n\n  They can be used to construct a version string as follows:\n  #define VERSION_STRING \"@P4C_VERSION@\"\n  or\n  #define VERSION_STRING \"@P4C_VERSION_MAJOR@.@P4C_VERSION_MINOR@.@P4C_VERSION_PATCH@@P4C_VERSION_RC@\"\n\n  Or, since this is backend specific, feel free to define other numbering\n  scheme.\n\n  */",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "backends/bmv2/simple_switch/version.h.cmake" : {
      "ObjectId" : "9e221a37aab7be27bba3450363b110f4d5397835",
      "LastModified" : "2018-11-06T20:49:16Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\nCopyright 2018-present Barefoot Networks, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/**\n  Set the compiler version at build time.\n  The build system defines P4C_VERSION as a full string as well as the\n  following components: P4C_VERSION_MAJOR, P4C_VERSION_MINOR,\n  P4C_VERSION_PATCH, P4C_VERSION_RC, and P4C_GIT_SHA.\n\n  They can be used to construct a version string as follows:\n  #define VERSION_STRING \"@P4C_VERSION@\"\n  or\n  #define VERSION_STRING \"@P4C_VERSION_MAJOR@.@P4C_VERSION_MINOR@.@P4C_VERSION_PATCH@@P4C_VERSION_RC@\"\n\n  Or, since this is backend specific, feel free to define other numbering\n  scheme.\n\n  */",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "backends/ebpf/CMakeLists.txt" : {
      "ObjectId" : "39ae7e21e044b2d45963f4eb5ad0963d98ea6b26",
      "LastModified" : "2018-12-27T23:38:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2013-present Barefoot Networks, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#    http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Makefile for the EBPF P4-16 back-end.\n\n# To be included in the main P4C compiler makefile\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# hack to get around the fact that the test scripts expect the backend\n\n# binary to be in the top level directory. This should go away when we\n\n# remove automake and fix the scripts.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# needs to be installed\n\n# p4include_HEADERS += $(srcdir)/%reldir%/p4include/ebpf_model.p4\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tests\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check if the kernel version is new enough to support ebpf features\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Check if we have the right llvm version\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If you get an error here see\n\n# https://stackoverflow.com/questions/38171543/error-when-using-cmake-with-llvm\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Only add the kernel tests if the two requirements are met\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ToDo Add check which verifies that BCC is installed\n\n# Ideally, this is done via check for the python package\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "backends/ebpf/version.h.cmake" : {
      "ObjectId" : "b15839862cbc30faee1baf40b026385e7f5331dc",
      "LastModified" : "2018-11-06T20:49:16Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\nCopyright 2018-present Barefoot Networks, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/**\n  Set the compiler version at build time.\n  The build system defines P4C_VERSION as a full string as well as the\n  following components: P4C_VERSION_MAJOR, P4C_VERSION_MINOR,\n  P4C_VERSION_PATCH, P4C_VERSION_RC, and P4C_GIT_SHA.\n\n  They can be used to construct a version string as follows:\n  #define VERSION_STRING \"@P4C_VERSION@\"\n  or\n  #define VERSION_STRING \"@P4C_VERSION_MAJOR@.@P4C_VERSION_MINOR@.@P4C_VERSION_PATCH@@P4C_VERSION_RC@\"\n\n  Or, since this is backend specific, feel free to define other numbering\n  scheme.\n\n  */",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "backends/graphs/CMakeLists.txt" : {
      "ObjectId" : "8994d104dc94ac5d2b550e24aa0efb246315a9ac",
      "LastModified" : "2018-12-27T23:38:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2013-present Barefoot Networks, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#    http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This link is not required but it is convenient to have access to this\n\n# backend in the top-level build directory, along with all the other backends.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "backends/graphs/version.h.cmake" : {
      "ObjectId" : "9e3a4846974d75738e6c463d07cd8cbc75531a6f",
      "LastModified" : "2018-11-06T20:49:16Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\nCopyright 2018-present Barefoot Networks, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/**\n  Set the compiler version at build time.\n  The build system defines P4C_VERSION as a full string as well as the\n  following components: P4C_VERSION_MAJOR, P4C_VERSION_MINOR,\n  P4C_VERSION_PATCH, P4C_VERSION_RC, and P4C_GIT_SHA.\n\n  They can be used to construct a version string as follows:\n  #define VERSION_STRING \"@P4C_VERSION@\"\n  or\n  #define VERSION_STRING \"@P4C_VERSION_MAJOR@.@P4C_VERSION_MINOR@.@P4C_VERSION_PATCH@@P4C_VERSION_RC@\"\n\n  Or, since this is backend specific, feel free to define other numbering\n  scheme.\n\n  */",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "backends/p4test/CMakeLists.txt" : {
      "ObjectId" : "effd626fe3ba1a7940cec731e7a222ce6c459060",
      "LastModified" : "2019-04-12T20:09:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2013-present Barefoot Networks, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#    http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Makefile for a fake backend that is used for testing the P4-16 front-end.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# hack to get around the fact that the test scripts expect the backend\n\n# binary to be in the top level directory. This should go away when we\n\n# remove automake and fix the scripts.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Tests\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Builds a list of tests for which P4Info generation is not supported. It makes\n\n# sense not to fail the test just because P4Info generation fails. It probably\n\n# would not make sense to run all the tests twice (one with and one without\n\n# P4Runtime).\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Two counter instances provided for psa_direct_counter, illegal according to\n\n# PSA spec and fails in P4Info generation\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Need to convert PSA_MeterColor_t to a serializable enum\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# error not supported in static entries, not strictly required for P4Info\n\n# generation though\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# P4Info generation fails (as expected with the current P4Runtime spec) with:\n\n# Unsupported type parameter for Value Set; this version of P4Runtime requires\n\n# that when the type parameter of a Value Set is a struct, all the fields of\n\n# the struct must be of type bit<W>, but inner is not\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# These tests use 'error' as a table key\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# issue #13\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Several PSA arch programs that fail with p4test\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# This program is invalid according to the PSA specification as one direct\n\n# counter is shared by multiple match tables: \"A DirectCounter instance must\n\n# appear as the value of the psa_direct_counter table attribute for at most\n\n# one table.\"\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# we invoke p4c with --p4runtime-files even for programs in p4_16_errors. This\n\n# enables us to use p4_16_errors even for programs which pass compilation but\n\n# fail P4Info generation expectedly (see issue 1803). If a program fails\n\n# compilation, the P4Runtime serializer will not be invoked anyway and there\n\n# will be no P4Info file.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "backends/p4test/version.h.cmake" : {
      "ObjectId" : "bb40b0cb3120de720fd108d6edf0fba2850cc558",
      "LastModified" : "2018-11-06T20:49:16Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\nCopyright 2018-present Barefoot Networks, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/**\n  Set the compiler version at build time.\n  The build system defines P4C_VERSION as a full string as well as the\n  following components: P4C_VERSION_MAJOR, P4C_VERSION_MINOR,\n  P4C_VERSION_PATCH, P4C_VERSION_RC, and P4C_GIT_SHA.\n\n  They can be used to construct a version string as follows:\n  #define VERSION_STRING \"@P4C_VERSION@\"\n  or\n  #define VERSION_STRING \"@P4C_VERSION_MAJOR@.@P4C_VERSION_MINOR@.@P4C_VERSION_PATCH@@P4C_VERSION_RC@\"\n\n  Or, since this is backend specific, feel free to define other numbering\n  scheme.\n\n  */",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindBMV2.cmake" : {
      "ObjectId" : "f92ffe506c4621568461e2aab093b188d8005d62",
      "LastModified" : "2018-11-06T20:49:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# check for simple_switch\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check for psa_switch\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindLibGc.cmake" : {
      "ObjectId" : "d5e571eef3dae00440f29acf136c3c1f1a59426a",
      "LastModified" : "2018-11-06T20:49:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2013-present Barefoot Networks, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#    http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindLibGc\n\n# -----------\n\n#\n\n# Try to find the LibGc A garbage collector for C and C++\n\n# implementing the Boehm-Demers-Weiser Conservative Garbage Collector\n\n#\n\n# Once done this will define\n\n#\n\n# ::\n\n#\n\n#   LIBGC_FOUND - System has LibGc\n\n#   LIBGC_INCLUDE_DIR - The LibGc include directory\n\n#   LIBGC_LIBRARIES - The libraries needed to use LibGc\n\n#   LIBGC_DEFINITIONS - Compiler switches required for using LibGc\n\n#   LIBGC_VERSION_STRING - the version of LibGc found\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the find_path() and find_library() calls\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# some earlier versions do not put the full version as a comment\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/FindLibGmp.cmake" : {
      "ObjectId" : "51baa528037cfabfe54de3a4c46c6188f273e203",
      "LastModified" : "2018-11-06T20:49:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2017 Xilinx, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#    http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FindLibGmp\n\n# -----------\n\n#\n\n# Try to find LibGmp the GNU Multiple Precision Arithmetic Library\n\n#\n\n# Once done this will define\n\n#\n\n# ::\n\n#\n\n#   LIBGMP_FOUND - System has LibGmp\n\n#   LIBGMP_INCLUDE_DIR - The LibGmp include directory\n\n#   LIBGMP_LIBRARIES - The libraries needed to use LibGmp\n\n#   LIBGMP_DEFINITIONS - Compiler switches required for using LibGmp\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindPythonModule.cmake" : {
      "ObjectId" : "e3c04318d939d6c56e7ef0e784bedd4a0f58d8d7",
      "LastModified" : "2018-11-06T20:49:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# A module's location is usually a directory, but for binary modules\n\n# it's a .so file.\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "cmake/P4CUtils.cmake" : {
      "ObjectId" : "e525086cec95fc58b13f01ede184456e4d240225",
      "LastModified" : "2018-11-06T20:49:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# test and add a C++ compiler option if supported\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check if a compiler supports a certain feature by compiling the program\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add a required library\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# checks if a library exists and adds it to the list of p4c dependencies\n\n# supports an additional argument: REQUIRED. If present, it will throw\n\n# a fatal error if the library does not exist.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add files with the appropriate path to the list of linted files\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# add a single test to the testsuite\n\n# Arguments:\n\n#   - tag is a label for the set of test suite where this test belongs\n\n#     (for example, p4, p14_to_16, bmv2, ebpf\n\n#   - driver is the script that is used to run the test and compare the results\n\n#   - isXfail is boolean that specifies whether this test is expected to fail\n\n#   - alias is a possibly different name for the test such that the\n\n#     same p4 program can be used in different test configurations.\n\n#     Must be unique across the test suite.\n\n#   - p4test is the name of the p4 program to test (path relative to the p4c directory)\n\n#   - args is a list of arguments to pass to the test\n\n#\n\n# It generates a ${p4name}.test file invoking ${driver} on the p4\n\n# program with command line arguments ${args}\n\n# Sets the timeout on tests at 300s (for the slow Travis machines)\n\n#\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# generate all the tests specified in the tests list\n\n# Arguments:\n\n#   - tag is a label for the set of tests, for example, p4, p14_to_16, bmv2, ebpf\n\n#   - driver is the script that is used to run the tests and compare the results\n\n#   - testsuite is a list of test names\n\n#   - xfail is a set of tests that are expected to fail\n\n#\n\n# The macro generates the test files in a directory prefixed by tag.\n\n#\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# __xfail_test\n",
        "Line" : 134,
        "CharPositionInLine" : 12
      },
      "8" : {
        "Text" : "# tests\n",
        "Line" : 135,
        "CharPositionInLine" : 15
      },
      "9" : {
        "Text" : "# add the tag to the list\n",
        "Line" : 137,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# generate a list of test name suffixes based on specified testsuites\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# convert the paths from a list of input files to their absolute paths\n\n# does not follow symlinks.\n\n#   - files is a list of (relative) file paths\n\n#   - abs_files is the return set of absolute file paths\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# generate all the tests specified in the testsuites: builds a list of tests\n\n# from the testsuite patterns by calling p4c_find_test_names then pass the list\n\n# to p4c_add_test_list\n\n# Arguments:\n\n#   - tag is a label for the set of tests, for example, p4, p14_to_16, bmv2, ebpf\n\n#   - driver is the script that is used to run the tests and compare the results\n\n#   - testsuite is a list of directory patterns, e.g.: testdata/p4_16_samples/*.p4\n\n#   - xfail is a set of tests that are expected to fail\n\n#\n\n# The macro generates the test files in a directory prefixed by tag.\n\n#\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# same as p4c_add_tests but adds --p4runtime flag when invoking test driver\n\n# unless test is listed in p4rt_exclude\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# add rules to make check and recheck for a specific test suite\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# avoid escaping spaces\n",
        "Line" : 204,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# list the xfail tests\n",
        "Line" : 209,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# list the xfail tests\n",
        "Line" : 216,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# check for the number of cores on the machine and return them in ${var}\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# MESSAGE (\"p4c_get_nprocs: ${rc} ${${var}}\")\n",
        "Line" : 237,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# poor's cmake replacement for $(shell grep -L xxx $(shell -l yyy))\n\n# It takes as arguments:\n\n#  - input_files: a pattern for files (full path)\n\n#  - test_list: a variable to be set to the resulting list of tests matching\n\n#  - pairs of:\n\n#  - pattern selector: INCLUDE or EXCLUDE\n\n#  - pattern list: a list of patterns that should be included or excluded\n\n# Returns:\n\n#  - the list of tests matching search_patterns and not exclude_patterns\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#   MESSAGE (\"include pattern: ${search_patterns}, length ${__pLen}\")\n",
        "Line" : 278,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# only exclude patterns\n",
        "Line" : 280,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# if (DEFINED exclude_patterns)\n\n#   MESSAGE (\"exclude pattern: ${exclude_patterns}, length ${__pLen}\")\n\n# endif()\n",
        "Line" : 283,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# search_patterns\n",
        "Line" : 302,
        "CharPositionInLine" : 17
      },
      "25" : {
        "Text" : "# exclude_patterns\n",
        "Line" : 310,
        "CharPositionInLine" : 17
      },
      "26" : {
        "Text" : "# test files\n",
        "Line" : 314,
        "CharPositionInLine" : 15
      },
      "27" : {
        "Text" : "# return\n",
        "Line" : 316,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 28
    },
    "cmake/UnifiedBuild.cmake" : {
      "ObjectId" : "3f656af5b136205e00f3fb08a65d61253a06fe9c",
      "LastModified" : "2018-11-06T20:49:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Options to control unified compilation. More information is available in the\n\n# documentation for `build_unified`.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Helper function: compute `divided / divisor`, round up to the next highest\n\n# integer, and write the result in `output_var`.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Helper function: determine how a list of `num_items` items should be split\n\n# into chunks of at most `max_chunk_size` items, such that each chunk has as\n\n# close to the same size as possible. We want to do this when generated unified\n\n# sources so that we distribute the \"load\" between the chunks as evenly as\n\n# possible.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Helper function: generate a unified source file called `chunk_filename` that\n\n# will `#include` each of the source files in `sources`.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Determine the absolute path to `source_file`.\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Convert it to a path relative to the root of the project source tree. It's\n\n# important to avoid absolute paths in generated C++ code; including them\n\n# will prevent ccache from reusing results between different checkouts of\n\n# the same repo.\n",
        "Line" : 47,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# By using `file(GENERATE ... CONTENT ...)`, we tell cmake to check whether\n\n# the contents have changed and only overwrite the file if they have. This\n\n# reduces unnecessary rebuilds.\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Use unified compilation when building the source files in `sources`. This\n\n# will:\n\n#   - Partition the files in `sources` into chunks.\n\n#   - Generate a unified source file for each chunk; the source file will\n\n#     `#include` each file in the chunk.\n\n#   - Replace the contents of `sources` with the list of unified source files.\n\n#     That means that `sources is both the input and the output to this\n\n#     function.\n\n# The behavior of `build_unified` can be controlled in a number of ways:\n\n#   - The ENABLE_UNIFIED_COMPILATION option can be used to enable or disable it\n\n#     completely. If disabled, this function has no effect.\n\n#   - The UNIFIED_SOURCE_CHUNK_SIZE option can be used to specify a desired\n\n#     chunk size. This can be overridden for a specific invocation of\n\n#     `build_unified` by passing a second parameter. In either case, the value\n\n#     can be either an integer or the string `ALL`, which produces one chunk\n\n#     with all the files in it.\n\n#   - Source files with one of the properties `GENERATED` or `NONUNIFIED` will\n\n#     be built separately, as usual, even if they're passed into\n\n#     `build_unified`. Generated files must always be excluded to avoid breaking\n\n#     dependency tracking, while the NONUNIFIED property allows callers\n\n#     fine-grained control over which files get unified.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# The ENABLE_UNIFIED_COMPILATION option is a global switch that turns this\n\n# feature off. By just returning here, `sources` remains unchanged, and we'll\n\n# build each file in it individually.\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# This function takes an optional second argument which specifies the maximum\n\n# chunk size to use. If it's not specified, the global option\n\n# UNIFIED_SOURCE_CHUNK_SIZE provides the default value.\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# The maximum chunk size is either a number, specifying the maximum number of\n\n# files that should be included in a chunk (we'll get as close to that as we\n\n# can) or the symbol `ALL`, specifying that all files should be placed a\n\n# single chunk, no matter how many there are.\n",
        "Line" : 101,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# We transform the name of this function's output variable (which is normally\n\n# something like `FRONTEND_SRCS`) into a valid base filename (e.g.\n\n# `unified_frontend_srcs`) which we'll use to name the unified sources we're\n\n# generating (e.g.  `unified_frontend_srcs_1.cpp`).\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Separate out any files that are marked as GENERATED (because unifying them\n\n# will break dependency analysis) or NONUNIFIED (because the user doesn't want\n\n# to unify them for some other reason). We add them directly to\n\n# `final_sources_list`, skipping the unified sources generation process.\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Partition the files in `sources_to_unify` into chunks of roughly equal size\n\n# and generate the unified sources file for each chunk.\n",
        "Line" : 142,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Convert from an index into the chunk to an index into the overall list\n\n# of source files.\n",
        "Line" : 148,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# We may have run past the end of the list of source files if the chunk\n\n# size didn't divide the number of source files evenly.\n",
        "Line" : 152,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# Add `sources_to_unify[source_idx]` to the chunk. Because it will be\n\n# included in a unified sources file, it's now effectively a header, so\n\n# we need to tell cmake that as well.\n",
        "Line" : 155,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Generate the actual unified sources file and add its filename to the final\n\n# list of sources we'll return.\n",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# All done. Replace the contents of the list that the caller passed to us with\n\n# the new list of unified sources.\n",
        "Line" : 171,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 19
    },
    "cmake/Uninstall.cmake" : {
      "ObjectId" : "bebcfb868f97ccbfea82ef06ce3c9e81cf36c998",
      "LastModified" : "2018-11-06T20:49:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# uninstall\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/config.h.cmake" : {
      "ObjectId" : "2be59aeaadd2864bee0afb08f7ca6dcc5d5e2d1e",
      "LastModified" : "2018-11-06T20:49:16Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/* Define to 1 if you have the boost iostreams library */",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* Define to 1 if you have the boost graph headers */",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* Define to 1 if you have the execinfo.h header */",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* Define to 1 if you have the LIBGC library. */",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Define to 1 if you have the memchr function. */",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Define to 1 if you have the pipe2 function. */",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Define to 1 if you have the GC_print_stats function. */",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* Define if you have simple switch installed */",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* Define to 1 if you have the ucontext.h header */",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* Define to 1 if you have the cxxabi.h header */",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "control-plane/CMakeLists.txt" : {
      "ObjectId" : "8bd79741a74babd6cd70c61ee7b67271f10a0d83",
      "LastModified" : "2019-04-15T17:55:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2013-present Barefoot Networks, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#    http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The standard P4Runtime protocol buffers message definitions live in the PI\n\n# repo, which is included in this repo as a submodule.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Generate source code from the .proto definitions using protoc. The output is\n\n# placed in the build directory inside `control-plane`. For example,\n\n# p4info.proto produces:\n\n#   control-plane/p4/config/p4info.pb.h\n\n#   control-plane/p4/config/p4info.pb.cc\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# These macros are much nicer than the custom command, but do not work for generating\n\n# files in a different directory (e.g. p4/config). If we are ok with just generating\n\n# the output in ${CMAKE_CURRENT_BINARY_DIR}, then these are fine. Also, for python there\n\n# is no explicit dependency, so we need to make a target that always generates them (yuk!)\n\n#PROTOBUF_GENERATE_CPP (P4RUNTIME_GEN_SRCS P4RUNTIME_INFO_HDRS ${P4RUNTIME_PROTO})\n\n#PROTOBUF_GENERATE_PYTHON (P4RUNTIME_GEN_PYTHON P4RUNTIME_INFO_GEN_HDRS ${P4RUNTIME_INFO_PROTO})\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# exclude p4RuntimeSerializer.cpp because it is has issues with\n\n# include order. It would be nice to implement region-based NOLINT to\n\n# handle this case.\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "frontends/CMakeLists.txt" : {
      "ObjectId" : "37f3c4e8fba4c93afd27d7396ebe5264331864cb",
      "LastModified" : "2019-03-01T18:14:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2013-present Barefoot Networks, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#    http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Versions of CMake before 3.7.2 require a filename argument to BISON_TARGET's\n\n# VERBOSE option. Later versions \"support\" it, but they generate a file with\n\n# the same name automatically anyway, and then issue a warning because the\n\n# file gets overwritten, so we need this code to avoid warning spew during\n\n# compilation.\n",
        "Line" : 190,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# regardless of the output name, flex puts out yy.lex.c, so we use a custom command to generate\n\n# the file to stdout and redirect to the desired name\n\n# FLEX_TARGET (${pname}Lexer parsers/${pname}/${pname}lexer.ll ${CMAKE_CURRENT_BINARY_DIR}/parsers/${pname}/${pname}lexer.cc)\n",
        "Line" : 201,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# BUILT_SOURCES += \\\n\n# \tparsers/p4/p4parser.hpp \\\n\n# \tparsers/v1/v1parser.hpp\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# noinst_HEADERS += \\\n\n# \tparsers/p4/p4lexer.hpp \\\n\n# \tparsers/v1/v1lexer.hpp\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ir/CMakeLists.txt" : {
      "ObjectId" : "f150c3d970e34a342654cc5f6ca8060aad9323a9",
      "LastModified" : "2018-11-06T20:49:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2013-present Barefoot Networks, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#    http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/CMakeLists.txt" : {
      "ObjectId" : "4cfdf67744939c8df467063deb27cd8f0e4322af",
      "LastModified" : "2019-03-25T01:59:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2013-present Barefoot Networks, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#    http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "midend/CMakeLists.txt" : {
      "ObjectId" : "c4a9c70fbb6a579b0d29f2bfa127a6616d9b7cb3",
      "LastModified" : "2019-03-25T01:59:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2013-present Barefoot Networks, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#    http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "4598b936c7e6781723e66b9f01f445e1f3f9100e",
      "LastModified" : "2018-11-06T20:49:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2013-present Barefoot Networks, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#    http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n\n# GTests\n\n################################################################################\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Flags needed for GTest tests.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# For files generated by the protobuf compiler\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Configure GTest to disable support for SEH (which is irrelevant for p4c since\n\n# we don't currently support Windows) and pthreads (which prevents GTest from\n\n# using its internal TLS implementation, which interacts badly with libgc).\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build the GTest library itself.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add the non-backend-specific unit tests to cpplint.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Combine the executable and the non-backend-specific unit tests into a single\n\n# unified compilation group.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Merge the base sources with the tests added to GTEST_SOURCES by specific\n\n# backends or by extensions. We can't assume that one extension's GTests can be\n\n# unified with another's, so we can't handle unified compilation transparently\n\n# for all GTests.\n\n# XXX(seth): The current approach is an awkward fit for cmake anyway. We should\n\n# restructure backend-specific GTests to live in their own libraries, and just\n\n# link the libraries in.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Build `gtestp4c`, which will contain all of our tests. Backends and extensions\n\n# can add GTests to `GTEST_SOURCES` to include them in the test executable. They\n\n# can also link in additional libraries, if needed, by adding them to\n\n# `GTEST_LDADD`.\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Tests\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "tools/driver/CMakeLists.txt" : {
      "ObjectId" : "644afcb41d133d080adfbaaf12f2949a81dd81ff",
      "LastModified" : "2018-11-06T20:49:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2013-present Barefoot Networks, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#    http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# bin_SCRIPTS += p4c\n\n# CLEANFILES += $(bin_SCRIPTS)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/ir-generator/CMakeLists.txt" : {
      "ObjectId" : "2e748a0eb107b4d87361a8c59111b04c42a1fd67",
      "LastModified" : "2018-11-06T20:49:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2013-present Barefoot Networks, Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#    http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Unconditionally set the output directory for the irgenerator to the path\n\n# where the custom command that generates IR sources expects to find it.\n\n# The generator expression $<BOOL:1> prevents IDE generators like Xcode\n\n# from appending a per-configuration subdirectory to the specified path.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 20,
    "CMAKESOURCE" : 6
  },
  "ElapsedTime" : 3686
}