{
  "Repository" : "6401800",
  "Revision" : "HEAD",
  "ObjectId" : "6bd0c16214b4ae87be76ba449b686f78422e0b4f",
  "CommitTime" : "2019-02-13T03:04:32Z",
  "Files" : {
    "Makefile.am" : {
      "ObjectId" : "4b1c1883f01ceed8a8d72f0e607a06ac1141ceca",
      "LastModified" : "2018-12-14T19:48:31Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "modules/cuda/Makefile" : {
      "ObjectId" : "2bd22e6c5b6b204db5e46531968159ce9d4ba86c",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# DEFINES=-DVERBOSE\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "modules/cuda/test/Makefile" : {
      "ObjectId" : "d665f395c2daa2c2d5d0ce20d9d0c366f6dfe033",
      "LastModified" : "2017-03-21T19:26:00Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "modules/mpi/Makefile" : {
      "ObjectId" : "24af6044b4ceec7ed9bfcf607d228816b3be8d67",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# DEFINES=-DVERBOSE\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "modules/mpi/test/Makefile" : {
      "ObjectId" : "f45ef25dd2d79a12a40ccac6f77864143131b6cd",
      "LastModified" : "2016-04-26T16:20:28Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "modules/openshmem-am/Makefile" : {
      "ObjectId" : "5ff51b9ecf084f9416455a5493e4adcccfde0803",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# DEFINES=-DVERBOSE\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "modules/openshmem-am/test/Makefile" : {
      "ObjectId" : "6b1772069f89a43bf84a5e3111e963a9d0f6cfe1",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# g++ -std=c++11 $(HCLIB_CFLAGS) $(HCLIB_OSHMEM_CFLAGS) $(HCLIB_LDFLAGS) $(HCLIB_OSHMEM_LDFLAGS) -o $@ $^ $(HCLIB_LDLIBS) $(HCLIB_OSHMEM_LDLIBS)\n",
        "Line" : 15,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "modules/openshmem/Makefile" : {
      "ObjectId" : "fd3000420e19a82621cae0e64a222e2c203a6677",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# DEFINES=-DVERBOSE\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "modules/openshmem/test/Makefile" : {
      "ObjectId" : "210de4bafb84314cec1d70230d967edd54d36016",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# g++ -std=c++11 $(HCLIB_CFLAGS) $(HCLIB_OSHMEM_CFLAGS) $(HCLIB_LDFLAGS) $(HCLIB_OSHMEM_LDFLAGS) -o $@ $^ $(HCLIB_LDLIBS) $(HCLIB_OSHMEM_LDLIBS)\n",
        "Line" : 17,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "modules/sos/Makefile" : {
      "ObjectId" : "c7380a233acd435d63e6407cde5cb801a0a22b07",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# DEFINES=-DVERBOSE\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "modules/sos/test/Makefile" : {
      "ObjectId" : "27dc8c4f4a6b799d3fec1c4c7424dfa71ffc6e68",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "modules/system/Makefile" : {
      "ObjectId" : "258b5b70c9d1026ab206cbef1455a39e5c59492a",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# DEFINES=-DVERBOSE\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "modules/system/test/Makefile" : {
      "ObjectId" : "e4dcf00995678a1e329373a91c13836808c88128",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "modules/upcxx/Makefile" : {
      "ObjectId" : "f6d4be73d3bc97556fb251c5a6cac9d4c36d19e4",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# DEFINES=-DVERBOSE\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "modules/upcxx/test/Makefile" : {
      "ObjectId" : "30bc769cb1ceda5225e4e856f4263363b4a31d0c",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/Makefile.am" : {
      "ObjectId" : "d8be8ef0d335d6d880aee153fdcec2bb3089359f",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Includes folders\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# cflags: important to define that otherwise we inherit default values too\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# build the hclib library\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# These are populated in sub-folder's Makefile.inc\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# LINUX\n\n# OSX\n",
        "Line" : 65,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# LINUX\n\n# OSX\n",
        "Line" : 80,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# LINUX\n\n# OSX\n",
        "Line" : 95,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# PPC64\n\n# X86_64\n\n# X86\n",
        "Line" : 99,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# build hclib\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "test/c/Makefile" : {
      "ObjectId" : "636b43e904651c0e3c23f0120c63ee4c49176e16",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# always update\n",
        "Line" : 15,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 1
    },
    "test/cholesky/Makefile" : {
      "ObjectId" : "2739715e2fb0af36559937746dab0477ef83808c",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/cpp/Makefile" : {
      "ObjectId" : "dff2a5379da8a6407ea6a967f4d6dcd2db81c2b1",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# always update\n",
        "Line" : 18,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 1
    },
    "test/cuda/Makefile" : {
      "ObjectId" : "a8e7e45c8050eb69eeed0aebb1321f14f116d48c",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/cuda/nbody-hemi/Makefile" : {
      "ObjectId" : "413f2b988a6d510402c212ede60520a3034c98c5",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/deadlock/Makefile" : {
      "ObjectId" : "6971e3ed27190116a0caa689e751429421190c0f",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/fib/Makefile" : {
      "ObjectId" : "623ef4cefb3dcca0d5d3e4c6974819c36db84837",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/forasync/arrayadd1d/Makefile" : {
      "ObjectId" : "8bc13142b2f9f49f057954ff2484c1a7d18560bc",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/forasync/arrayadd2d/Makefile" : {
      "ObjectId" : "fe4166c55b1693a9e4dadc734c72bf300cbfbf54",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/forasync/arrayadd3d/Makefile" : {
      "ObjectId" : "800ac73ea5fa92b1c30e1c639bda6a10751033a7",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/hpt/Makefile" : {
      "ObjectId" : "d6caa0ad530791c3a30127511a29d32926906baf",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/misc/Makefile" : {
      "ObjectId" : "e526222c2fbc39884b3baa8cdf21d7da8edbf5f7",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/performance-regression/full-apps/Makefile" : {
      "ObjectId" : "52cf10a1fc0bca8e46728d7aaec1ba07233cc108",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/performance-regression/full-apps/bots/Makefile" : {
      "ObjectId" : "c66af06e3f44531c2025ce853bc282185f287e3e",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################################\n\n#  This program is part of the Barcelona OpenMP Tasks Suite                                  #\n\n#  Copyright (C) 2009 Barcelona Supercomputing Center - Centro Nacional de Supercomputacion  #\n\n#  Copyright (C) 2009 Universitat Politecnica de Catalunya                                   #\n\n#                                                                                            #\n\n#  This program is free software; you can redistribute it and/or modify                      #\n\n#  it under the terms of the GNU General Public License as published by                      #\n\n#  the Free Software Foundation; either version 2 of the License, or                         #\n\n#  (at your option) any later version.                                                       #\n\n#                                                                                            #\n\n#  This program is distributed in the hope that it will be useful,                           #\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of                            #\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                             #\n\n#  GNU General Public License for more details.                                              #\n\n#                                                                                            #\n\n#  You should have received a copy of the GNU General Public License                         #\n\n#  along with this program; if not, write to the Free Software                               #\n\n#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA            #\n\n##############################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/performance-regression/full-apps/bots/alignment_for/Makefile" : {
      "ObjectId" : "9eeff371ec7e93ddc7d373c83f508eee9d363aca",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################################\n\n#  This program is part of the Barcelona OpenMP Tasks Suite                                  #\n\n#  Copyright (C) 2009 Barcelona Supercomputing Center - Centro Nacional de Supercomputacion  #\n\n#  Copyright (C) 2009 Universitat Politecnica de Catalunya                                   #\n\n#                                                                                            #\n\n#  This program is free software; you can redistribute it and/or modify                      #\n\n#  it under the terms of the GNU General Public License as published by                      #\n\n#  the Free Software Foundation; either version 2 of the License, or                         #\n\n#  (at your option) any later version.                                                       #\n\n#                                                                                            #\n\n#  This program is distributed in the hope that it will be useful,                           #\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of                            #\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                             #\n\n#  GNU General Public License for more details.                                              #\n\n#                                                                                            #\n\n#  You should have received a copy of the GNU General Public License                         #\n\n#  along with this program; if not, write to the Free Software                               #\n\n#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA            #\n\n##############################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Don't change below here \n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/performance-regression/full-apps/bots/alignment_single/Makefile" : {
      "ObjectId" : "9eeff371ec7e93ddc7d373c83f508eee9d363aca",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################################\n\n#  This program is part of the Barcelona OpenMP Tasks Suite                                  #\n\n#  Copyright (C) 2009 Barcelona Supercomputing Center - Centro Nacional de Supercomputacion  #\n\n#  Copyright (C) 2009 Universitat Politecnica de Catalunya                                   #\n\n#                                                                                            #\n\n#  This program is free software; you can redistribute it and/or modify                      #\n\n#  it under the terms of the GNU General Public License as published by                      #\n\n#  the Free Software Foundation; either version 2 of the License, or                         #\n\n#  (at your option) any later version.                                                       #\n\n#                                                                                            #\n\n#  This program is distributed in the hope that it will be useful,                           #\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of                            #\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                             #\n\n#  GNU General Public License for more details.                                              #\n\n#                                                                                            #\n\n#  You should have received a copy of the GNU General Public License                         #\n\n#  along with this program; if not, write to the Free Software                               #\n\n#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA            #\n\n##############################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Don't change below here \n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/performance-regression/full-apps/bots/fft/Makefile" : {
      "ObjectId" : "4b06b55b4493646be9733c542ccc0b862e8ac821",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################################\n\n#  This program is part of the Barcelona OpenMP Tasks Suite                                  #\n\n#  Copyright (C) 2009 Barcelona Supercomputing Center - Centro Nacional de Supercomputacion  #\n\n#  Copyright (C) 2009 Universitat Politecnica de Catalunya                                   #\n\n#                                                                                            #\n\n#  This program is free software; you can redistribute it and/or modify                      #\n\n#  it under the terms of the GNU General Public License as published by                      #\n\n#  the Free Software Foundation; either version 2 of the License, or                         #\n\n#  (at your option) any later version.                                                       #\n\n#                                                                                            #\n\n#  This program is distributed in the hope that it will be useful,                           #\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of                            #\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                             #\n\n#  GNU General Public License for more details.                                              #\n\n#                                                                                            #\n\n#  You should have received a copy of the GNU General Public License                         #\n\n#  along with this program; if not, write to the Free Software                               #\n\n#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA            #\n\n##############################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#PROGRAM_OBJS=\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Don't change below here \n\n#\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/performance-regression/full-apps/bots/fib/Makefile" : {
      "ObjectId" : "2feb8258d23eba84d457fcefddb4cfd3abda355b",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################################\n\n#  This program is part of the Barcelona OpenMP Tasks Suite                                  #\n\n#  Copyright (C) 2009 Barcelona Supercomputing Center - Centro Nacional de Supercomputacion  #\n\n#  Copyright (C) 2009 Universitat Politecnica de Catalunya                                   #\n\n#                                                                                            #\n\n#  This program is free software; you can redistribute it and/or modify                      #\n\n#  it under the terms of the GNU General Public License as published by                      #\n\n#  the Free Software Foundation; either version 2 of the License, or                         #\n\n#  (at your option) any later version.                                                       #\n\n#                                                                                            #\n\n#  This program is distributed in the hope that it will be useful,                           #\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of                            #\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                             #\n\n#  GNU General Public License for more details.                                              #\n\n#                                                                                            #\n\n#  You should have received a copy of the GNU General Public License                         #\n\n#  along with this program; if not, write to the Free Software                               #\n\n#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA            #\n\n##############################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#LIBS = \n\n#PROGRAM_OBJS=\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Don't change below here \n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/performance-regression/full-apps/bots/floorplan/Makefile" : {
      "ObjectId" : "2feb8258d23eba84d457fcefddb4cfd3abda355b",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################################\n\n#  This program is part of the Barcelona OpenMP Tasks Suite                                  #\n\n#  Copyright (C) 2009 Barcelona Supercomputing Center - Centro Nacional de Supercomputacion  #\n\n#  Copyright (C) 2009 Universitat Politecnica de Catalunya                                   #\n\n#                                                                                            #\n\n#  This program is free software; you can redistribute it and/or modify                      #\n\n#  it under the terms of the GNU General Public License as published by                      #\n\n#  the Free Software Foundation; either version 2 of the License, or                         #\n\n#  (at your option) any later version.                                                       #\n\n#                                                                                            #\n\n#  This program is distributed in the hope that it will be useful,                           #\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of                            #\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                             #\n\n#  GNU General Public License for more details.                                              #\n\n#                                                                                            #\n\n#  You should have received a copy of the GNU General Public License                         #\n\n#  along with this program; if not, write to the Free Software                               #\n\n#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA            #\n\n##############################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#LIBS = \n\n#PROGRAM_OBJS=\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Don't change below here \n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/performance-regression/full-apps/bots/health/Makefile" : {
      "ObjectId" : "866c776dd807bb03b51099281d7a46938f4086c8",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################################\n\n#  This program is part of the Barcelona OpenMP Tasks Suite                                  #\n\n#  Copyright (C) 2009 Barcelona Supercomputing Center - Centro Nacional de Supercomputacion  #\n\n#  Copyright (C) 2009 Universitat Politecnica de Catalunya                                   #\n\n#                                                                                            #\n\n#  This program is free software; you can redistribute it and/or modify                      #\n\n#  it under the terms of the GNU General Public License as published by                      #\n\n#  the Free Software Foundation; either version 2 of the License, or                         #\n\n#  (at your option) any later version.                                                       #\n\n#                                                                                            #\n\n#  This program is distributed in the hope that it will be useful,                           #\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of                            #\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                             #\n\n#  GNU General Public License for more details.                                              #\n\n#                                                                                            #\n\n#  You should have received a copy of the GNU General Public License                         #\n\n#  along with this program; if not, write to the Free Software                               #\n\n#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA            #\n\n##############################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#PROGRAM_OBJS=\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Don't change below here \n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/performance-regression/full-apps/bots/nqueens/Makefile" : {
      "ObjectId" : "2feb8258d23eba84d457fcefddb4cfd3abda355b",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################################\n\n#  This program is part of the Barcelona OpenMP Tasks Suite                                  #\n\n#  Copyright (C) 2009 Barcelona Supercomputing Center - Centro Nacional de Supercomputacion  #\n\n#  Copyright (C) 2009 Universitat Politecnica de Catalunya                                   #\n\n#                                                                                            #\n\n#  This program is free software; you can redistribute it and/or modify                      #\n\n#  it under the terms of the GNU General Public License as published by                      #\n\n#  the Free Software Foundation; either version 2 of the License, or                         #\n\n#  (at your option) any later version.                                                       #\n\n#                                                                                            #\n\n#  This program is distributed in the hope that it will be useful,                           #\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of                            #\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                             #\n\n#  GNU General Public License for more details.                                              #\n\n#                                                                                            #\n\n#  You should have received a copy of the GNU General Public License                         #\n\n#  along with this program; if not, write to the Free Software                               #\n\n#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA            #\n\n##############################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#LIBS = \n\n#PROGRAM_OBJS=\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Don't change below here \n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/performance-regression/full-apps/bots/sort/Makefile" : {
      "ObjectId" : "80d4b08fa72b547ed490883e660ece968c8861d3",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################################\n\n#  This program is part of the Barcelona OpenMP Tasks Suite                                  #\n\n#  Copyright (C) 2009 Barcelona Supercomputing Center - Centro Nacional de Supercomputacion  #\n\n#  Copyright (C) 2009 Universitat Politecnica de Catalunya                                   #\n\n#                                                                                            #\n\n#  This program is free software; you can redistribute it and/or modify                      #\n\n#  it under the terms of the GNU General Public License as published by                      #\n\n#  the Free Software Foundation; either version 2 of the License, or                         #\n\n#  (at your option) any later version.                                                       #\n\n#                                                                                            #\n\n#  This program is distributed in the hope that it will be useful,                           #\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of                            #\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                             #\n\n#  GNU General Public License for more details.                                              #\n\n#                                                                                            #\n\n#  You should have received a copy of the GNU General Public License                         #\n\n#  along with this program; if not, write to the Free Software                               #\n\n#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA            #\n\n##############################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#LIBS = \n\n#PROGRAM_OBJS=\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Don't change below here \n\n#\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/performance-regression/full-apps/bots/sparselu_for/Makefile" : {
      "ObjectId" : "80d4b08fa72b547ed490883e660ece968c8861d3",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################################\n\n#  This program is part of the Barcelona OpenMP Tasks Suite                                  #\n\n#  Copyright (C) 2009 Barcelona Supercomputing Center - Centro Nacional de Supercomputacion  #\n\n#  Copyright (C) 2009 Universitat Politecnica de Catalunya                                   #\n\n#                                                                                            #\n\n#  This program is free software; you can redistribute it and/or modify                      #\n\n#  it under the terms of the GNU General Public License as published by                      #\n\n#  the Free Software Foundation; either version 2 of the License, or                         #\n\n#  (at your option) any later version.                                                       #\n\n#                                                                                            #\n\n#  This program is distributed in the hope that it will be useful,                           #\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of                            #\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                             #\n\n#  GNU General Public License for more details.                                              #\n\n#                                                                                            #\n\n#  You should have received a copy of the GNU General Public License                         #\n\n#  along with this program; if not, write to the Free Software                               #\n\n#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA            #\n\n##############################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#LIBS = \n\n#PROGRAM_OBJS=\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Don't change below here \n\n#\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/performance-regression/full-apps/bots/sparselu_single/Makefile" : {
      "ObjectId" : "80d4b08fa72b547ed490883e660ece968c8861d3",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################################\n\n#  This program is part of the Barcelona OpenMP Tasks Suite                                  #\n\n#  Copyright (C) 2009 Barcelona Supercomputing Center - Centro Nacional de Supercomputacion  #\n\n#  Copyright (C) 2009 Universitat Politecnica de Catalunya                                   #\n\n#                                                                                            #\n\n#  This program is free software; you can redistribute it and/or modify                      #\n\n#  it under the terms of the GNU General Public License as published by                      #\n\n#  the Free Software Foundation; either version 2 of the License, or                         #\n\n#  (at your option) any later version.                                                       #\n\n#                                                                                            #\n\n#  This program is distributed in the hope that it will be useful,                           #\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of                            #\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                             #\n\n#  GNU General Public License for more details.                                              #\n\n#                                                                                            #\n\n#  You should have received a copy of the GNU General Public License                         #\n\n#  along with this program; if not, write to the Free Software                               #\n\n#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA            #\n\n##############################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#LIBS = \n\n#PROGRAM_OBJS=\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Don't change below here \n\n#\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/performance-regression/full-apps/bots/strassen/Makefile" : {
      "ObjectId" : "f0d2fdfcc7047262faa9f883abc586c65d752d42",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################################\n\n#  This program is part of the Barcelona OpenMP Tasks Suite                                  #\n\n#  Copyright (C) 2009 Barcelona Supercomputing Center - Centro Nacional de Supercomputacion  #\n\n#  Copyright (C) 2009 Universitat Politecnica de Catalunya                                   #\n\n#                                                                                            #\n\n#  This program is free software; you can redistribute it and/or modify                      #\n\n#  it under the terms of the GNU General Public License as published by                      #\n\n#  the Free Software Foundation; either version 2 of the License, or                         #\n\n#  (at your option) any later version.                                                       #\n\n#                                                                                            #\n\n#  This program is distributed in the hope that it will be useful,                           #\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of                            #\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                             #\n\n#  GNU General Public License for more details.                                              #\n\n#                                                                                            #\n\n#  You should have received a copy of the GNU General Public License                         #\n\n#  along with this program; if not, write to the Free Software                               #\n\n#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA            #\n\n##############################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#LIBS = \n\n#PROGRAM_OBJS=\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Don't change below here \n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/performance-regression/full-apps/bots/uts/Makefile" : {
      "ObjectId" : "f3a6b057192440bc7f4b466ab245ecb8b1c8034b",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################################\n\n#  This program is part of the Barcelona OpenMP Tasks Suite                                  #\n\n#  Copyright (C) 2009 Barcelona Supercomputing Center - Centro Nacional de Supercomputacion  #\n\n#  Copyright (C) 2009 Universitat Politecnica de Catalunya                                   #\n\n#                                                                                            #\n\n#  This program is free software; you can redistribute it and/or modify                      #\n\n#  it under the terms of the GNU General Public License as published by                      #\n\n#  the Free Software Foundation; either version 2 of the License, or                         #\n\n#  (at your option) any later version.                                                       #\n\n#                                                                                            #\n\n#  This program is distributed in the hope that it will be useful,                           #\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of                            #\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                             #\n\n#  GNU General Public License for more details.                                              #\n\n#                                                                                            #\n\n#  You should have received a copy of the GNU General Public License                         #\n\n#  along with this program; if not, write to the Free Software                               #\n\n#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA            #\n\n##############################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#CUTOFF_VERSIONS = manual if_clause\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Don't change below here \n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/performance-regression/full-apps/coral/kmi_hash/src/Makefile" : {
      "ObjectId" : "522859728aca69739a6a00d6df696f15abeb4610",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#   ---------------------------\n\n#   Compiler Flags\n\n#   ---------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#MPICC = mpixlc_r \n\n#MPICXX = mpicxx\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#LIB_TIMEBASE_PATH = /home/morozov/lib\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/performance-regression/full-apps/coral/kmi_hash/tests/Makefile" : {
      "ObjectId" : "d0c2919b2885bbac32e145b3fcb13f455e3eceb0",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#   ---------------------------\n\n#   Compiler Flags\n\n#   ---------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#MPICC = mpixlc_r \n\n#MPICXX = mpicxx\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# HPM_LIB = /soft/perftools/hpctw/lib/libmpihpm.a /bgsys/drivers/ppcfloor/bgpm/lib/libbgpm.a \n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/performance-regression/full-apps/graph500-2.1.4/Makefile" : {
      "ObjectId" : "c66d234e2eff9ab506022f7a41695d57fb4acc56",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# -*- Makefile -*-\n\n# Copyright 2010,  Georgia Institute of Technology, USA.\n\n# See COPYING for license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/performance-regression/full-apps/graph500-2.1.4/mpi-tuned-2d/mpi/Makefile" : {
      "ObjectId" : "6e1eaa600e52a289709e7e1e1db13145e9ce64d7",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (C) 2013 The Trustees of Indiana University.             \n\n#                                                                         \n\n# Use, modification and distribution is subject to the Boost Software     \n\n# License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at \n\n# http://www.boost.org/LICENSE_1_0.txt)                                   \n\n#                                                                         \n\n#  Authors: Jeremiah Willcock                                             \n\n#           Andrew Lumsdaine                                              \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/performance-regression/full-apps/graph500-2.1.4/mpi/Makefile" : {
      "ObjectId" : "d455e2a013e04087b718d063b17b1349f299036b",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# -g -pg\n",
        "Line" : 1,
        "CharPositionInLine" : 219
      },
      "1" : {
        "Text" : "# CFLAGS = -g -Wall -Drestrict= -DGRAPH_GENERATOR_MPI\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -g -pg\n",
        "Line" : 3,
        "CharPositionInLine" : 40
      },
      "CommentCount" : 3
    },
    "test/performance-regression/full-apps/graph500-2.1.4/oshmem/Makefile" : {
      "ObjectId" : "c63e834daee75d90260088ad0abfc2b50b8714d3",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# For Cray SHMEM\n\n# OSHMEM_LD_FLAGS=-L$(OPENSHMEM_INSTALL)/lib64 -lsma\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# For OpenMPI SHMEM\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/performance-regression/full-apps/gups/Makefile" : {
      "ObjectId" : "848be080e2fd82f33bc607d0a07e47d59d357128",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/performance-regression/full-apps/hpcc-1.5.0/Makefile" : {
      "ObjectId" : "faaa88ef78e98368f4cc378d00600e514ffb8516",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# -*- Makefile -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/performance-regression/full-apps/hpcc-1.5.0/hpl/Makefile" : {
      "ObjectId" : "a5f01267687c41cc169fa085dfc4152c0850d145",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#  \n\n#  -- High Performance Computing Linpack Benchmark (HPL)                \n\n#     HPL - 2.0 - September 10, 2008                          \n\n#     Antoine P. Petitet                                                \n\n#     University of Tennessee, Knoxville                                \n\n#     Innovative Computing Laboratory                                 \n\n#     (C) Copyright 2000-2008 All Rights Reserved                       \n\n#                                                                       \n\n#  -- Copyright notice and Licensing terms:                             \n\n#                                                                       \n\n#  Redistribution  and  use in  source and binary forms, with or without\n\n#  modification, are  permitted provided  that the following  conditions\n\n#  are met:                                                             \n\n#                                                                       \n\n#  1. Redistributions  of  source  code  must retain the above copyright\n\n#  notice, this list of conditions and the following disclaimer.        \n\n#                                                                       \n\n#  2. Redistributions in binary form must reproduce  the above copyright\n\n#  notice, this list of conditions,  and the following disclaimer in the\n\n#  documentation and/or other materials provided with the distribution. \n\n#                                                                       \n\n#  3. All  advertising  materials  mentioning  features  or  use of this\n\n#  software must display the following acknowledgement:                 \n\n#  This  product  includes  software  developed  at  the  University  of\n\n#  Tennessee, Knoxville, Innovative Computing Laboratory.             \n\n#                                                                       \n\n#  4. The name of the  University,  the name of the  Laboratory,  or the\n\n#  names  of  its  contributors  may  not  be used to endorse or promote\n\n#  products  derived   from   this  software  without  specific  written\n\n#  permission.                                                          \n\n#                                                                       \n\n#  -- Disclaimer:                                                       \n\n#                                                                       \n\n#  THIS  SOFTWARE  IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n#  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,  INCLUDING,  BUT NOT\n\n#  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n#  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE UNIVERSITY\n\n#  OR  CONTRIBUTORS  BE  LIABLE FOR ANY  DIRECT,  INDIRECT,  INCIDENTAL,\n\n#  SPECIAL,  EXEMPLARY,  OR  CONSEQUENTIAL DAMAGES  (INCLUDING,  BUT NOT\n\n#  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n#  DATA OR PROFITS; OR BUSINESS INTERRUPTION)  HOWEVER CAUSED AND ON ANY\n\n#  THEORY OF LIABILITY, WHETHER IN CONTRACT,  STRICT LIABILITY,  OR TORT\n\n#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n#  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\n# ######################################################################\n\n#  \n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n## Targets #############################################################\n\n#\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# ######################################################################\n\n#\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\n\n# ######################################################################\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "test/performance-regression/full-apps/isx/Makefile" : {
      "ObjectId" : "16af2e6ae83a4b244dcab455e82b722daceee875",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# include $(HCLIB_ROOT)/../modules/system/inc/hclib_system.pre.mak\n\n# include $(HCLIB_ROOT)/../modules/openshmem/inc/hclib_openshmem.pre.mak\n\n# include $(HCLIB_ROOT)/include/hclib.mak\n\n# include $(HCLIB_ROOT)/../modules/system/inc/hclib_system.post.mak\n\n# include $(HCLIB_ROOT)/../modules/openshmem/inc/hclib_openshmem.post.mak\n\n# include $(GASNET_INSTALL)/include/gemini-conduit/gemini-par.mak\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#$(OPTFLAGS)\n",
        "Line" : 13,
        "CharPositionInLine" : 89
      },
      "2" : {
        "Text" : "### \n\n# If you change these values, you must also change them in params.h\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Don't place anything below this line, since\n\n# # the make depend program will overwrite it\n\n# # DO NOT DELETE THIS LINE -- make depend depends on it.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "test/performance-regression/full-apps/isx/isx-phases/isx-flat/Makefile" : {
      "ObjectId" : "03c97432853ede624e473542a2f5ba8794d4929b",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#$(OPTFLAGS)\n",
        "Line" : 12,
        "CharPositionInLine" : 101
      },
      "1" : {
        "Text" : "###\n\n# If you change these values, you must also change them in params.h\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Don't place anything below this line, since\n\n# # the make depend program will overwrite it\n\n# # DO NOT DELETE THIS LINE -- make depend depends on it.",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "test/performance-regression/full-apps/isx/isx-phases/isx-omp/Makefile" : {
      "ObjectId" : "3888551d4eb856658afbfbdefeb2aa1379011100",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#$(OPTFLAGS)\n",
        "Line" : 12,
        "CharPositionInLine" : 101
      },
      "1" : {
        "Text" : "###\n\n# If you change these values, you must also change them in params.h\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Don't place anything below this line, since\n\n# # the make depend program will overwrite it\n\n# # DO NOT DELETE THIS LINE -- make depend depends on it.",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "test/performance-regression/full-apps/kastors-1.1/jacobi/Makefile" : {
      "ObjectId" : "409c452b94f92fdcefbd81a2ec44c689812474d6",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/performance-regression/full-apps/mandelbrot/Makefile" : {
      "ObjectId" : "7515909297b6b16d3fd8e315a565b530e19e32fe",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/performance-regression/full-apps/oshmem-contexts-pipeline/Makefile" : {
      "ObjectId" : "b59c4159aae8c4130ceb42fe707aa6a828e83984",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/performance-regression/full-apps/qmcpack/CMake/CheckProcessorID.cmake" : {
      "ObjectId" : "b7ff920e2870e1bbe8068222b2b79b2c13d546d6",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#checking processor name to pick optimization flags for linux and mac os x\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/performance-regression/full-apps/qmcpack/CMake/Compilers.cmake" : {
      "ObjectId" : "b52dae2ddb61095aee0611444273ea9f01af70d7",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#adding compiler flags\n\n#\n\n#Since F77FLAGS is used with ADD_CUSTOM_COMMAND variable F77FLAGS needs to be comma separated.\n\n# incorrect:   SET(F77OPTFLAGS  \"-fpp2 -O3 -unrol -fno-alias -ftz\")\n\n# correct:     SET(F77OPTFLAGS  -fpp2 -O3 -unrol -fno-alias -ftz)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  SET(FORTRAN_LIBS \"-lPEPCF90 -lCEPCF90 -lF90 -lintrins\")\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set the customized compiler flags\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# set the fortran libraries for linker\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# check if the compiler is correct xlC_r xlc_r mpCC_r mpcc_r\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#    SET(CMAKE_CXX_FLAGS \"-g\")\n\n#    SET(FORTRAN_LIBS \"-lg2c\")\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "test/performance-regression/full-apps/qmcpack/CMake/CrayXT.cmake" : {
      "ObjectId" : "07b666f5fbb4752bd9fecddf7941195b832c7508",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Cmake for cray XT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# pgi environments: no reason to use it !!\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# link ACML library\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#SET(LAPACK_LIBRARY \"/opt/pgi/6.2.5/linux86-64/6.2/lib/libpgc.a\")\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#openmp is enabled\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# always link statically\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "## targeting CATAMOUNT\n\n#IF(ENABLE_CATAMOUNT)\n\n#  ADD_DEFINITIONS(-DXT_CATAMOUNT)\n\n#ENDIF(ENABLE_CATAMOUNT)\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##CRAY XT3 CATAMOUNT \n\n#IF($ENV{CATAMOUNT_DIR} MATCHES \"catamount\")\n\n#      INCLUDE(${PROJECT_CMAKE}/CrayXTPgi.cmake)\n\n#    ENDIF($ENV{PE_ENV} MATCHES \"PGI\")\n\n#    IF($ENV{PE_ENV} MATCHES \"GNU\")\n\n#       INCLUDE(${PROJECT_CMAKE}/GNUCompilers.cmake)\n\n#       IF($ENV{CXX} MATCHES \"CC\")\n\n#    ENDIF($ENV{PE_ENV} MATCHES \"GNU\")\n\n#    SET(HAVE_MPI 1)\n\n#    SET(HAVE_OOMPI 1)\n\n#    SET(FOUND_CXXENV 1)\n\n#  ENDIF($ENV{CXX} MATCHES \"CC\")\n\n#  LINK_LIBRARIES  (/opt/acml/3.6/gnu64/lib/libacml.a;/usr/lib64/libg2c.a)\n\n#ENDIF($ENV{CATAMOUNT_DIR} MATCHES \"catamount\")\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#SET(CMAKE_CXX_FLAGS \" --restrict -fast --target=catamount \")\n\n#SET(CMAKE_CXX_FLAGS \" --restrict -fast --target=catamount \")\n\n#SET(CMAKE_CXX_FLAGS \" --restrict -fastsse -Mipa -Minline=levels:10 --no_exceptions -DBOOST_NO_EXCEPTIONS\")\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "test/performance-regression/full-apps/qmcpack/CMake/FindADIOS.cmake" : {
      "ObjectId" : "144977860eecdc4631b924c71c9533ab7d88e8ca",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADIOS_INCLUDES\n\n#ADIOS_LIBRARIES\n\n#ADIOS_FOUND\n\n#ADIOS_DEFINITIONS\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Try to find adios config\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#check for adios_config\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#Use adios config to find the correct flags\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#Configure ADIOS with the correct flags\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#MESSAGE(STATUS ${ADIOS_CON_OUT})\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#convert the library name to uppercase\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#check the path for the library\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#If we found the library then add it adios_libraries\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#Call error if we can't find one of the libraries\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "test/performance-regression/full-apps/qmcpack/CMake/FindApache.cmake" : {
      "ObjectId" : "d342d20740bab9a0c88297c0fc31081da2c71e06",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# this module look for xerces-c from apache.org support\n\n# it will define the following values\n\n#\n\n# XERCES_INCLUDE_DIR  = where xercesc/util/XMLString.hpp can be found\n\n# XERCES_LIBRARY      = the library to link against xerces-c\n\n# FOUND_XERCESC       = set to 1 if xerces-c is found\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/performance-regression/full-apps/qmcpack/CMake/FindBlitz++.cmake" : {
      "ObjectId" : "37a2d6357de2fba8809e3d931245f86728c4e5dc",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# this module look for blitz++ (http://www.oonumerics.org/blitz) support\n\n# it will define the following values\n\n#\n\n# BLITZ_INCLUDE_DIR = where blitz/blitz.h can be found\n\n#\n\n# May want to define this but seldom required\n\n# BLITZ_LIBRARY = where blitz library can be found (reserved)\n\n#\n\n#IF(EXISTS ${PROJECT_CMAKE}/BlitzppConfig.cmake)\n\n#  INCLUDE(${PROJECT_CMAKE}/BlitzppConfig.cmake)\n\n#ENDIF(EXISTS ${PROJECT_CMAKE}/BlitzppConfig.cmake)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/performance-regression/full-apps/qmcpack/CMake/FindBoost.cmake" : {
      "ObjectId" : "c674789ee10172096e2fa99426735367b7ed8a62",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# this module look for boost (http://www.boost.org) support\n\n# it will define the following values\n\n#\n\n# Boost_INCLUDE_DIR = where boost/boost.h can be found\n\n# Boost_FOUND = boolean\n\n#\n\n# May want to define this but seldom required\n\n# BOOST_LIBRARIES = where boost library can be found (reserved)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#FIND_PATH(Boost_INCLUDE_DIR boost/config.hpp ${BOOST_HOME} ${BOOST_HOME}/include $ENV{BOOST_HOME} $ENV{BOOST_HOME}/include ${CMAKE_FIND_ROOT_PATH})\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "test/performance-regression/full-apps/qmcpack/CMake/FindCUDA.cmake" : {
      "ObjectId" : "2b5a2b8ca1808ec2fdf0fff9ddbc4189896bdc87",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Tools for building CUDA C files: libraries and build dependencies.\n\n# This script locates the NVIDIA CUDA C tools. It should work on linux, windows,\n\n# and mac and should be reasonably up to date with CUDA C releases.\n\n#\n\n# This script makes use of the standard find_package arguments of <VERSION>,\n\n# REQUIRED and QUIET.  CUDA_FOUND will report if an acceptable version of CUDA\n\n# was found.\n\n#\n\n# The script will prompt the user to specify CUDA_TOOLKIT_ROOT_DIR if the prefix\n\n# cannot be determined by the location of nvcc in the system path and REQUIRED\n\n# is specified to find_package(). To use a different installed version of the\n\n# toolkit set the environment variable CUDA_BIN_PATH before running cmake\n\n# (e.g. CUDA_BIN_PATH=/usr/local/cuda1.0 instead of the default /usr/local/cuda)\n\n# or set CUDA_TOOLKIT_ROOT_DIR after configuring.  If you change the value of\n\n# CUDA_TOOLKIT_ROOT_DIR, various components that depend on the path will be\n\n# relocated.\n\n#\n\n# It might be necessary to set CUDA_TOOLKIT_ROOT_DIR manually on certain\n\n# platforms, or to use a cuda runtime not installed in the default location. In\n\n# newer versions of the toolkit the cuda library is included with the graphics\n\n# driver- be sure that the driver version matches what is needed by the cuda\n\n# runtime version.\n\n#\n\n# The following variables affect the behavior of the macros in the script (in\n\n# alphebetical order).  Note that any of these flags can be changed multiple\n\n# times in the same directory before calling CUDA_ADD_EXECUTABLE,\n\n# CUDA_ADD_LIBRARY, CUDA_COMPILE, CUDA_COMPILE_PTX or CUDA_WRAP_SRCS.\n\n#\n\n#  CUDA_64_BIT_DEVICE_CODE (Default matches host bit size)\n\n#  -- Set to ON to compile for 64 bit device code, OFF for 32 bit device code.\n\n#     Note that making this different from the host code when generating object\n\n#     or C files from CUDA code just won't work, because size_t gets defined by\n\n#     nvcc in the generated source.  If you compile to PTX and then load the\n\n#     file yourself, you can mix bit sizes between device and host.\n\n#\n\n#  CUDA_ATTACH_VS_BUILD_RULE_TO_CUDA_FILE (Default ON)\n\n#  -- Set to ON if you want the custom build rule to be attached to the source\n\n#     file in Visual Studio.  Turn OFF if you add the same cuda file to multiple\n\n#     targets.\n\n#\n\n#     This allows the user to build the target from the CUDA file; however, bad\n\n#     things can happen if the CUDA source file is added to multiple targets.\n\n#     When performing parallel builds it is possible for the custom build\n\n#     command to be run more than once and in parallel causing cryptic build\n\n#     errors.  VS runs the rules for every source file in the target, and a\n\n#     source can have only one rule no matter how many projects it is added to.\n\n#     When the rule is run from multiple targets race conditions can occur on\n\n#     the generated file.  Eventually everything will get built, but if the user\n\n#     is unaware of this behavior, there may be confusion.  It would be nice if\n\n#     this script could detect the reuse of source files across multiple targets\n\n#     and turn the option off for the user, but no good solution could be found.\n\n#\n\n#  CUDA_BUILD_CUBIN (Default OFF)\n\n#  -- Set to ON to enable and extra compilation pass with the -cubin option in\n\n#     Device mode. The output is parsed and register, shared memory usage is\n\n#     printed during build.\n\n#\n\n#  CUDA_BUILD_EMULATION (Default OFF for device mode)\n\n#  -- Set to ON for Emulation mode. -D_DEVICEEMU is defined for CUDA C files\n\n#     when CUDA_BUILD_EMULATION is TRUE.\n\n#\n\n#  CUDA_GENERATED_OUTPUT_DIR (Default CMAKE_CURRENT_BINARY_DIR)\n\n#  -- Set to the path you wish to have the generated files placed.  If it is\n\n#     blank output files will be placed in CMAKE_CURRENT_BINARY_DIR.\n\n#     Intermediate files will always be placed in\n\n#     CMAKE_CURRENT_BINARY_DIR/CMakeFiles.\n\n#\n\n#  CUDA_GENERATE_DEPENDENCIES_DURING_CONFIGURE (Default ON)\n\n#  -- Instead of waiting until build time compute dependencies, do it during\n\n#     configure time.  Note that dependencies are still generated during\n\n#     build, so that if they change the build system can be updated.  This\n\n#     mainly removes the need for configuring once after the first build to\n\n#     load the dependies into the build system.\n\n#\n\n#  CUDA_CHECK_DEPENDENCIES_DURING_COMPILE (Default ON)\n\n#  -- During build, the file level dependencies are checked.  If all\n\n#     dependencies are older than the generated file, the generated file isn't\n\n#     compiled but touched (time stamp updated) so the driving build system\n\n#     thinks it has been compiled.\n\n#\n\n#  CUDA_HOST_COMPILATION_CPP (Default ON)\n\n#  -- Set to OFF for C compilation of host code.\n\n#\n\n#  CUDA_HOST_COMPILER (Default CMAKE_C_COMPILER, $(VCInstallDir)/bin for VS)\n\n#  -- Set the host compiler to be used by nvcc.  Ignored if -ccbin or\n\n#     --compiler-bindir is already present in the CUDA_NVCC_FLAGS or\n\n#     CUDA_NVCC_FLAGS_<CONFIG> variables.  For Visual Studio targets\n\n#     $(VCInstallDir)/bin is a special value that expands out to the path when\n\n#     the command is run from withing VS.\n\n#\n\n#  CUDA_NVCC_FLAGS\n\n#  CUDA_NVCC_FLAGS_<CONFIG>\n\n#  -- Additional NVCC command line arguments.  NOTE: multiple arguments must be\n\n#     semi-colon delimited (e.g. --compiler-options;-Wall)\n\n#\n\n#  CUDA_PROPAGATE_HOST_FLAGS (Default ON)\n\n#  -- Set to ON to propagate CMAKE_{C,CXX}_FLAGS and their configuration\n\n#     dependent counterparts (e.g. CMAKE_C_FLAGS_DEBUG) automatically to the\n\n#     host compiler through nvcc's -Xcompiler flag.  This helps make the\n\n#     generated host code match the rest of the system better.  Sometimes\n\n#     certain flags give nvcc problems, and this will help you turn the flag\n\n#     propagation off.  This does not affect the flags supplied directly to nvcc\n\n#     via CUDA_NVCC_FLAGS or through the OPTION flags specified through\n\n#     CUDA_ADD_LIBRARY, CUDA_ADD_EXECUTABLE, or CUDA_WRAP_SRCS.  Flags used for\n\n#     shared library compilation are not affected by this flag.\n\n#\n\n#  CUDA_SEPARABLE_COMPILATION (Default OFF)\n\n#  -- If set this will enable separable compilation for all CUDA runtime object\n\n#     files.  If used outside of CUDA_ADD_EXECUTABLE and CUDA_ADD_LIBRARY\n\n#     (e.g. calling CUDA_WRAP_SRCS directly),\n\n#     CUDA_COMPUTE_SEPARABLE_COMPILATION_OBJECT_FILE_NAME and\n\n#     CUDA_LINK_SEPARABLE_COMPILATION_OBJECTS should be called.\n\n#\n\n#  CUDA_VERBOSE_BUILD (Default OFF)\n\n#  -- Set to ON to see all the commands used when building the CUDA file.  When\n\n#     using a Makefile generator the value defaults to VERBOSE (run make\n\n#     VERBOSE=1 to see output), although setting CUDA_VERBOSE_BUILD to ON will\n\n#     always print the output.\n\n#\n\n# The script creates the following macros (in alphebetical order):\n\n#\n\n#  CUDA_ADD_CUFFT_TO_TARGET( cuda_target )\n\n#  -- Adds the cufft library to the target (can be any target).  Handles whether\n\n#     you are in emulation mode or not.\n\n#\n\n#  CUDA_ADD_CUBLAS_TO_TARGET( cuda_target )\n\n#  -- Adds the cublas library to the target (can be any target).  Handles\n\n#     whether you are in emulation mode or not.\n\n#\n\n#  CUDA_ADD_EXECUTABLE( cuda_target file0 file1 ...\n\n#                       [WIN32] [MACOSX_BUNDLE] [EXCLUDE_FROM_ALL] [OPTIONS ...] )\n\n#  -- Creates an executable \"cuda_target\" which is made up of the files\n\n#     specified.  All of the non CUDA C files are compiled using the standard\n\n#     build rules specified by CMAKE and the cuda files are compiled to object\n\n#     files using nvcc and the host compiler.  In addition CUDA_INCLUDE_DIRS is\n\n#     added automatically to include_directories().  Some standard CMake target\n\n#     calls can be used on the target after calling this macro\n\n#     (e.g. set_target_properties and target_link_libraries), but setting\n\n#     properties that adjust compilation flags will not affect code compiled by\n\n#     nvcc.  Such flags should be modified before calling CUDA_ADD_EXECUTABLE,\n\n#     CUDA_ADD_LIBRARY or CUDA_WRAP_SRCS.\n\n#\n\n#  CUDA_ADD_LIBRARY( cuda_target file0 file1 ...\n\n#                    [STATIC | SHARED | MODULE] [EXCLUDE_FROM_ALL] [OPTIONS ...] )\n\n#  -- Same as CUDA_ADD_EXECUTABLE except that a library is created.\n\n#\n\n#  CUDA_BUILD_CLEAN_TARGET()\n\n#  -- Creates a convience target that deletes all the dependency files\n\n#     generated.  You should make clean after running this target to ensure the\n\n#     dependency files get regenerated.\n\n#\n\n#  CUDA_COMPILE( generated_files file0 file1 ... [STATIC | SHARED | MODULE]\n\n#                [OPTIONS ...] )\n\n#  -- Returns a list of generated files from the input source files to be used\n\n#     with ADD_LIBRARY or ADD_EXECUTABLE.\n\n#\n\n#  CUDA_COMPILE_PTX( generated_files file0 file1 ... [OPTIONS ...] )\n\n#  -- Returns a list of PTX files generated from the input source files.\n\n#\n\n#  CUDA_COMPUTE_SEPARABLE_COMPILATION_OBJECT_FILE_NAME( output_file_var\n\n#                                                       cuda_target\n\n#                                                       object_files )\n\n#  -- Compute the name of the intermediate link file used for separable\n\n#     compilation.  This file name is typically passed into\n\n#     CUDA_LINK_SEPARABLE_COMPILATION_OBJECTS.  output_file_var is produced\n\n#     based on cuda_target the list of objects files that need separable\n\n#     compilation as specified by object_files.  If the object_files list is\n\n#     empty, then output_file_var will be empty.  This function is called\n\n#     automatically for CUDA_ADD_LIBRARY and CUDA_ADD_EXECUTABLE.  Note that\n\n#     this is a function and not a macro.\n\n#\n\n#  CUDA_INCLUDE_DIRECTORIES( path0 path1 ... )\n\n#  -- Sets the directories that should be passed to nvcc\n\n#     (e.g. nvcc -Ipath0 -Ipath1 ... ). These paths usually contain other .cu\n\n#     files.\n\n#\n\n#\n\n#  CUDA_LINK_SEPARABLE_COMPILATION_OBJECTS( output_file_var cuda_target\n\n#                                           nvcc_flags object_files)\n\n#\n\n#  -- Generates the link object required by separable compilation from the given\n\n#     object files.  This is called automatically for CUDA_ADD_EXECUTABLE and\n\n#     CUDA_ADD_LIBRARY, but can be called manually when using CUDA_WRAP_SRCS\n\n#     directly.  When called from CUDA_ADD_LIBRARY or CUDA_ADD_EXECUTABLE the\n\n#     nvcc_flags passed in are the same as the flags passed in via the OPTIONS\n\n#     argument.  The only nvcc flag added automatically is the bitness flag as\n\n#     specified by CUDA_64_BIT_DEVICE_CODE.  Note that this is a function\n\n#     instead of a macro.\n\n#\n\n#  CUDA_WRAP_SRCS ( cuda_target format generated_files file0 file1 ...\n\n#                   [STATIC | SHARED | MODULE] [OPTIONS ...] )\n\n#  -- This is where all the magic happens.  CUDA_ADD_EXECUTABLE,\n\n#     CUDA_ADD_LIBRARY, CUDA_COMPILE, and CUDA_COMPILE_PTX all call this\n\n#     function under the hood.\n\n#\n\n#     Given the list of files (file0 file1 ... fileN) this macro generates\n\n#     custom commands that generate either PTX or linkable objects (use \"PTX\" or\n\n#     \"OBJ\" for the format argument to switch).  Files that don't end with .cu\n\n#     or have the HEADER_FILE_ONLY property are ignored.\n\n#\n\n#     The arguments passed in after OPTIONS are extra command line options to\n\n#     give to nvcc.  You can also specify per configuration options by\n\n#     specifying the name of the configuration followed by the options.  General\n\n#     options must preceed configuration specific options.  Not all\n\n#     configurations need to be specified, only the ones provided will be used.\n\n#\n\n#        OPTIONS -DFLAG=2 \"-DFLAG_OTHER=space in flag\"\n\n#        DEBUG -g\n\n#        RELEASE --use_fast_math\n\n#        RELWITHDEBINFO --use_fast_math;-g\n\n#        MINSIZEREL --use_fast_math\n\n#\n\n#     For certain configurations (namely VS generating object files with\n\n#     CUDA_ATTACH_VS_BUILD_RULE_TO_CUDA_FILE set to ON), no generated file will\n\n#     be produced for the given cuda file.  This is because when you add the\n\n#     cuda file to Visual Studio it knows that this file produces an object file\n\n#     and will link in the resulting object file automatically.\n\n#\n\n#     This script will also generate a separate cmake script that is used at\n\n#     build time to invoke nvcc.  This is for several reasons.\n\n#\n\n#       1. nvcc can return negative numbers as return values which confuses\n\n#       Visual Studio into thinking that the command succeeded.  The script now\n\n#       checks the error codes and produces errors when there was a problem.\n\n#\n\n#       2. nvcc has been known to not delete incomplete results when it\n\n#       encounters problems.  This confuses build systems into thinking the\n\n#       target was generated when in fact an unusable file exists.  The script\n\n#       now deletes the output files if there was an error.\n\n#\n\n#       3. By putting all the options that affect the build into a file and then\n\n#       make the build rule dependent on the file, the output files will be\n\n#       regenerated when the options change.\n\n#\n\n#     This script also looks at optional arguments STATIC, SHARED, or MODULE to\n\n#     determine when to target the object compilation for a shared library.\n\n#     BUILD_SHARED_LIBS is ignored in CUDA_WRAP_SRCS, but it is respected in\n\n#     CUDA_ADD_LIBRARY.  On some systems special flags are added for building\n\n#     objects intended for shared libraries.  A preprocessor macro,\n\n#     <target_name>_EXPORTS is defined when a shared library compilation is\n\n#     detected.\n\n#\n\n#     Flags passed into add_definitions with -D or /D are passed along to nvcc.\n\n#\n\n# The script defines the following variables:\n\n#\n\n#  CUDA_VERSION_MAJOR    -- The major version of cuda as reported by nvcc.\n\n#  CUDA_VERSION_MINOR    -- The minor version.\n\n#  CUDA_VERSION\n\n#  CUDA_VERSION_STRING   -- CUDA_VERSION_MAJOR.CUDA_VERSION_MINOR\n\n#\n\n#  CUDA_TOOLKIT_ROOT_DIR -- Path to the CUDA Toolkit (defined if not set).\n\n#  CUDA_SDK_ROOT_DIR     -- Path to the CUDA SDK.  Use this to find files in the\n\n#                           SDK.  This script will not directly support finding\n\n#                           specific libraries or headers, as that isn't\n\n#                           supported by NVIDIA.  If you want to change\n\n#                           libraries when the path changes see the\n\n#                           FindCUDA.cmake script for an example of how to clear\n\n#                           these variables.  There are also examples of how to\n\n#                           use the CUDA_SDK_ROOT_DIR to locate headers or\n\n#                           libraries, if you so choose (at your own risk).\n\n#  CUDA_INCLUDE_DIRS     -- Include directory for cuda headers.  Added automatically\n\n#                           for CUDA_ADD_EXECUTABLE and CUDA_ADD_LIBRARY.\n\n#  CUDA_LIBRARIES        -- Cuda RT library.\n\n#  CUDA_CUFFT_LIBRARIES  -- Device or emulation library for the Cuda FFT\n\n#                           implementation (alternative to:\n\n#                           CUDA_ADD_CUFFT_TO_TARGET macro)\n\n#  CUDA_CUBLAS_LIBRARIES -- Device or emulation library for the Cuda BLAS\n\n#                           implementation (alterative to:\n\n#                           CUDA_ADD_CUBLAS_TO_TARGET macro).\n\n#  CUDA_cupti_LIBRARY    -- CUDA Profiling Tools Interface library.\n\n#                           Only available for CUDA version 4.0+.\n\n#  CUDA_curand_LIBRARY   -- CUDA Random Number Generation library.\n\n#                           Only available for CUDA version 3.2+.\n\n#  CUDA_cusparse_LIBRARY -- CUDA Sparse Matrix library.\n\n#                           Only available for CUDA version 3.2+.\n\n#  CUDA_npp_LIBRARY      -- NVIDIA Performance Primitives library.\n\n#                           Only available for CUDA version 4.0+.\n\n#  CUDA_nvcuvenc_LIBRARY -- CUDA Video Encoder library.\n\n#                           Only available for CUDA version 3.2+.\n\n#                           Windows only.\n\n#  CUDA_nvcuvid_LIBRARY  -- CUDA Video Decoder library.\n\n#                           Only available for CUDA version 3.2+.\n\n#                           Windows only.\n\n#\n\n#\n\n#  James Bigler, NVIDIA Corp (nvidia.com - jbigler)\n\n#  Abe Stephens, SCI Institute -- http://www.sci.utah.edu/~abe/FindCuda.html\n\n#\n\n#  Copyright (c) 2008 - 2009 NVIDIA Corporation.  All rights reserved.\n\n#\n\n#  Copyright (c) 2007-2009\n\n#  Scientific Computing and Imaging Institute, University of Utah\n\n#\n\n#  This code is licensed under the MIT License.  See the FindCUDA.cmake script\n\n#  for the text of the license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The MIT License\n\n#\n\n# License for the specific language governing rights and limitations under\n\n# Permission is hereby granted, free of charge, to any person obtaining a\n\n# copy of this software and associated documentation files (the \"Software\"),\n\n# to deal in the Software without restriction, including without limitation\n\n# the rights to use, copy, modify, merge, publish, distribute, sublicense,\n\n# and/or sell copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\n# DEALINGS IN THE SOFTWARE.\n\n#\n\n###############################################################################\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# FindCUDA.cmake\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We need to have at least this version to support the VERSION_LESS argument to 'if' (2.6.2) and unset (2.6.3)\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This macro helps us find the location of helper files we will need the full path to\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# CMAKE_CURRENT_LIST_FILE contains the full path to the file currently being\n\n# processed.  Using this variable, we can pull out the current path, and\n\n# provide a way to get access to the other files we need local to here.\n",
        "Line" : 331,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Set this variable as internal, so the user isn't bugged with it.\n",
        "Line" : 346,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#####################################################################\n\n## CUDA_INCLUDE_NVCC_DEPENDENCIES\n\n##\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# So we want to try and include the dependency file if it exists.  If\n\n# it doesn't exist then we need to create an empty one, so we can\n\n# include it.\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If it does exist, then we need to check to see if all the files it\n\n# depends on exist.  If they don't then we should clear the dependency\n\n# file and regenerate it later.  This covers the case where a header\n\n# file has disappeared or moved.\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Include the dependency file.  Create it first if it doesn't exist .  The\n\n# INCLUDE puts a dependency that will force CMake to rerun and bring in the\n\n# new info when it changes.  DO NOT REMOVE THIS (as I did and spent a few\n\n# hours figuring out why it didn't work.\n",
        "Line" : 368,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Always include this file to force CMake to run again next\n\n# invocation and rebuild the dependencies.\n\n#message(\"including dependency_file = ${dependency_file}\")\n",
        "Line" : 375,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Now we need to verify the existence of all the included files\n\n# here.  If they aren't there we need to just blank this variable and\n\n# make the file regenerate again.\n",
        "Line" : 380,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#   if(DEFINED CUDA_NVCC_DEPEND)\n\n#     message(\"CUDA_NVCC_DEPEND set\")\n\n#   else()\n\n#     message(\"CUDA_NVCC_DEPEND NOT set\")\n\n#   endif()\n",
        "Line" : 383,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#message(\"CUDA_NVCC_DEPEND found\")\n",
        "Line" : 389,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# message(\"searching for ${f}\")\n",
        "Line" : 391,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "#message(\"file ${f} not found\")\n",
        "Line" : 393,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "#message(\"CUDA_NVCC_DEPEND false\")\n\n# No dependencies, so regenerate the file.\n",
        "Line" : 398,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#message(\"CUDA_NVCC_DEPEND_REGENERATE = ${CUDA_NVCC_DEPEND_REGENERATE}\")\n\n# No incoming dependencies, so we need to generate them.  Make the\n\n# output depend on the dependency file itself, which should cause the\n\n# rule to re-run.\n",
        "Line" : 403,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "#message(\"Generating an empty dependency_file: ${dependency_file}\")\n",
        "Line" : 409,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# Setup variables' defaults\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 415,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Allow the user to specify if the device code is supposed to be 32 or 64 bit.\n",
        "Line" : 421,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Attach the build rule to the source file in VS.  This option\n",
        "Line" : 429,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Prints out extra information about the cuda file during compilation\n",
        "Line" : 432,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Set whether we are using emulation or device mode.\n",
        "Line" : 435,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Where to put the generated output.\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Parse HOST_COMPILATION mode.\n",
        "Line" : 445,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Extra user settable flags\n",
        "Line" : 448,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Propagate the host flags to the host compiler via -Xcompiler\n",
        "Line" : 457,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Enable CUDA_SEPARABLE_COMPILATION\n",
        "Line" : 460,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Specifies whether the commands used when compiling the .cu file will be printed out.\n",
        "Line" : 463,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Makefile and similar generators don't define CMAKE_CONFIGURATION_TYPES, so we\n\n# need to add another entry for the CMAKE_BUILD_TYPE.  We also need to add the\n\n# standerd set of 4 build types (Debug, MinSizeRel, Release, and RelWithDebInfo)\n\n# for completeness.  We need run this loop in order to accomodate the addition\n\n# of extra configuration types.  Duplicate entries will be removed by\n\n# REMOVE_DUPLICATES.\n",
        "Line" : 475,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# Locate CUDA, Set Build Type, etc.\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Check to see if the CUDA_TOOLKIT_ROOT_DIR and CUDA_SDK_ROOT_DIR have changed,\n\n# if they have then clear the cache variables, so that will be detected again.\n",
        "Line" : 495,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Make sure you run this before you unset CUDA_VERSION.\n",
        "Line" : 501,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# This only existed in the 3.0 version of the CUDA toolkit\n",
        "Line" : 503,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# No specific variables to catch.  Use this kind of code before calling\n\n# find_package(CUDA) to clean up any variables that may depend on this path.\n",
        "Line" : 521,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "#   unset(MY_SPECIAL_CUDA_SDK_INCLUDE_DIR CACHE)\n\n#   unset(MY_SPECIAL_CUDA_SDK_LIBRARY CACHE)\n",
        "Line" : 524,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# Search for the cuda distribution.\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Search in the CUDA_BIN_PATH first.\n",
        "Line" : 531,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# Now search default paths\n",
        "Line" : 541,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# We need to force this back into the cache.\n",
        "Line" : 551,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# CUDA_NVCC_EXECUTABLE\n",
        "Line" : 563,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Search default search paths, after we search our own set of paths.\n",
        "Line" : 572,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Compute the version.\n",
        "Line" : 577,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# Need to set these based off of the cached value\n",
        "Line" : 584,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# Always set this convenience variable\n",
        "Line" : 589,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Here we need to determine if the version we found is acceptable.  We will\n\n# assume that is unless CUDA_FIND_VERSION_EXACT or CUDA_FIND_VERSION is\n\n# specified.  The presence of either of these options checks the version\n\n# string and signals if the version is acceptable or not.\n",
        "Line" : 592,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#\n",
        "Line" : 597,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "#\n",
        "Line" : 601,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "#\n",
        "Line" : 605,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# CUDA_TOOLKIT_INCLUDE\n",
        "Line" : 615,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Header included in toolkit\n",
        "Line" : 617,
        "CharPositionInLine" : 21
      },
      "53" : {
        "Text" : "# Search default search paths, after we search our own set of paths.\n",
        "Line" : 624,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Set the user list of include dir to nothing to initialize it.\n",
        "Line" : 628,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# CUDA 3.2+ on Windows moved the library directories, so we need the new\n\n# and old paths.\n",
        "Line" : 634,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# CUDA 3.2+ on Windows moved the library directories, so we need to new\n\n# (lib/Win32) and the old path (lib).\n",
        "Line" : 638,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# Search default search paths, after we search our own set of paths.\n",
        "Line" : 649,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# CUDA_LIBRARIES\n",
        "Line" : 658,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# The cudartemu library only existed for the 3.0 version of CUDA.\n",
        "Line" : 661,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# CUPTI library showed up in cuda toolkit 4.0\n",
        "Line" : 668,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# If we are using emulation mode and we found the cudartemu library then use\n\n# that one instead of cudart.\n",
        "Line" : 674,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# We need to add the path to cudart to the linker using rpath, since the\n\n# library name for the cuda libraries is prepended with @rpath.\n",
        "Line" : 682,
        "CharPositionInLine" : 2
      },
      "63" : {
        "Text" : "# 1.1 toolkit on linux doesn't appear to have a separate library on\n\n# some platforms.\n",
        "Line" : 694,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "#######################\n\n# Look for some of the toolkit helper libraries\n",
        "Line" : 703,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "#######################\n\n# Disable emulation for v3.1 onward\n",
        "Line" : 710,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Search for additional CUDA toolkit libraries.\n",
        "Line" : 718,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# Emulation libraries aren't available in version 3.1 onward.\n",
        "Line" : 720,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "# cusparse showed up in version 3.2\n",
        "Line" : 727,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "########################\n\n# Look for the SDK stuff.  As of CUDA 3.0 NVSDKCUDA_ROOT has been replaced with\n\n# NVSDKCOMPUTE_ROOT with the old CUDA C contents moved into the C subdirectory\n",
        "Line" : 747,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Keep the CUDA_SDK_ROOT_DIR first in order to be able to override the\n\n# environment variables.\n",
        "Line" : 759,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Example of how to find an include file from the CUDA_SDK_ROOT_DIR\n",
        "Line" : 771,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# find_path(CUDA_CUT_INCLUDE_DIR\n\n#   cutil.h\n\n#   PATHS ${CUDA_SDK_SEARCH_PATH}\n\n#   PATH_SUFFIXES \"common/inc\"\n\n#   DOC \"Location of cutil.h\"\n\n#   NO_DEFAULT_PATH\n\n#   )\n\n# # Now search system paths\n\n# find_path(CUDA_CUT_INCLUDE_DIR cutil.h DOC \"Location of cutil.h\")\n",
        "Line" : 773,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# mark_as_advanced(CUDA_CUT_INCLUDE_DIR)\n",
        "Line" : 783,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Example of how to find a library in the CUDA_SDK_ROOT_DIR\n",
        "Line" : 786,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# # cutil library is called cutil64 for 64 bit builds on windows.  We don't want\n\n# # to get these confused, so we are setting the name based on the word size of\n\n# # the build.\n",
        "Line" : 788,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# if(CMAKE_SIZEOF_VOID_P EQUAL 8)\n\n#   set(cuda_cutil_name cutil64)\n\n# else()\n\n#   set(cuda_cutil_name cutil32)\n\n# endif()\n",
        "Line" : 792,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# find_library(CUDA_CUT_LIBRARY\n\n#   NAMES cutil ${cuda_cutil_name}\n\n#   PATHS ${CUDA_SDK_SEARCH_PATH}\n\n#   # The new version of the sdk shows up in common/lib, but the old one is in lib\n\n#   PATH_SUFFIXES \"common/lib\" \"lib\"\n\n#   DOC \"Location of cutil library\"\n\n#   NO_DEFAULT_PATH\n\n#   )\n\n# # Now search system paths\n\n# find_library(CUDA_CUT_LIBRARY NAMES cutil ${cuda_cutil_name} DOC \"Location of cutil library\")\n\n# mark_as_advanced(CUDA_CUT_LIBRARY)\n\n# set(CUDA_CUT_LIBRARIES ${CUDA_CUT_LIBRARY})\n",
        "Line" : 798,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "#############################\n\n# Check for required components\n",
        "Line" : 813,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# Macros\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 833,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "###############################################################################\n\n# Add include directories to pass to the nvcc command.\n",
        "Line" : 839,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "##############################################################################\n",
        "Line" : 848,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "##############################################################################\n\n# Separate the OPTIONS out from the sources\n\n#\n",
        "Line" : 853,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Assume this is a file\n",
        "Line" : 877,
        "CharPositionInLine" : 8
      },
      "84" : {
        "Text" : "##############################################################################\n\n# Parse the OPTIONS from ARGN and set the variables prefixed by _option_prefix\n\n#\n",
        "Line" : 884,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# Determine if we are dealing with a perconfiguration flag\n",
        "Line" : 890,
        "CharPositionInLine" : 4
      },
      "86" : {
        "Text" : "# Set arg to nothing to keep it from being processed further\n",
        "Line" : 895,
        "CharPositionInLine" : 8
      },
      "87" : {
        "Text" : "##############################################################################\n\n# Helper to add the include directory for CUDA only once\n",
        "Line" : 906,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# If SHARED, MODULE, or STATIC aren't already in the list of arguments, then\n\n# add SHARED or STATIC based on the value of BUILD_SHARED_LIBS.\n",
        "Line" : 925,
        "CharPositionInLine" : 2
      },
      "89" : {
        "Text" : "##############################################################################\n\n# Helper to avoid clashes of files with the same basename but different paths.\n\n# This doesn't attempt to do exactly what CMake internals do, which is to only\n\n# add this path when there is a conflict, since by the time a second collision\n\n# in names is detected it's already too late to fix the first one.  For\n\n# consistency sake the relative path will be added to all files.\n",
        "Line" : 944,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "#message(\"CUDA_COMPUTE_BUILD_PATH([${path}] ${build_path})\")\n\n# Only deal with CMake style paths from here on out\n",
        "Line" : 951,
        "CharPositionInLine" : 2
      },
      "91" : {
        "Text" : "# Absolute paths are generally unnessary, especially if something like\n\n# file(GLOB_RECURSE) is used to pick up the files.\n",
        "Line" : 955,
        "CharPositionInLine" : 4
      },
      "92" : {
        "Text" : "# This recipie is from cmLocalGenerator::CreateSafeUniqueObjectFileName in the\n\n# CMake source.\n",
        "Line" : 960,
        "CharPositionInLine" : 2
      },
      "93" : {
        "Text" : "# Remove leading /\n",
        "Line" : 963,
        "CharPositionInLine" : 2
      },
      "94" : {
        "Text" : "# Avoid absolute paths by removing ':'\n",
        "Line" : 965,
        "CharPositionInLine" : 2
      },
      "95" : {
        "Text" : "# Avoid relative paths that go up the tree\n",
        "Line" : 967,
        "CharPositionInLine" : 2
      },
      "96" : {
        "Text" : "# Avoid spaces\n",
        "Line" : 969,
        "CharPositionInLine" : 2
      },
      "97" : {
        "Text" : "# Strip off the filename.  I wait until here to do it, since removin the\n\n# basename can make a path that looked like path/../basename turn into\n\n# path/.. (notice the trailing slash).\n",
        "Line" : 972,
        "CharPositionInLine" : 2
      },
      "98" : {
        "Text" : "#message(\"${build_path} = ${bpath}\")\n",
        "Line" : 978,
        "CharPositionInLine" : 2
      },
      "99" : {
        "Text" : "##############################################################################\n\n# This helper macro populates the following variables and setups up custom\n\n# commands and targets to invoke the nvcc compiler to generate C or PTX source\n\n# dependent upon the format parameter.  The compiler is invoked once with -M\n\n# to generate a dependency file and a second time with -cuda or -ptx to generate\n\n# a .cpp or .ptx file.\n\n# INPUT:\n\n#   cuda_target         - Target name\n\n#   format              - PTX or OBJ\n\n#   FILE1 .. FILEN      - The remaining arguments are the sources to be wrapped.\n\n#   OPTIONS             - Extra options to NVCC\n\n# OUTPUT:\n\n#   generated_files     - List of generated files\n\n##############################################################################\n\n##############################################################################\n",
        "Line" : 981,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# If CMake doesn't support separable compilation, complain\n",
        "Line" : 999,
        "CharPositionInLine" : 2
      },
      "101" : {
        "Text" : "# Set up all the command line flags here, so that they can be overridden on a per target basis.\n",
        "Line" : 1004,
        "CharPositionInLine" : 2
      },
      "102" : {
        "Text" : "# Emulation if the card isn't present.\n",
        "Line" : 1008,
        "CharPositionInLine" : 2
      },
      "103" : {
        "Text" : "# Emulation.\n",
        "Line" : 1010,
        "CharPositionInLine" : 4
      },
      "104" : {
        "Text" : "# Device mode.  No flags necessary.\n",
        "Line" : 1013,
        "CharPositionInLine" : 4
      },
      "105" : {
        "Text" : "# This needs to be passed in at this stage, because VS needs to fill out the\n\n# value of VCInstallDir from within VS.  Note that CCBIN is only used if\n\n# -ccbin or --compiler-bindir isn't used and CUDA_HOST_COMPILER matches\n\n# $(VCInstallDir)/bin.\n",
        "Line" : 1035,
        "CharPositionInLine" : 2
      },
      "106" : {
        "Text" : "# Figure out which configure we will use and pass that in as an argument to\n\n# the script.  We need to defer the decision until compilation time, because\n\n# for VS projects we won't know if we are making a debug or release build\n\n# until build time.\n",
        "Line" : 1045,
        "CharPositionInLine" : 2
      },
      "107" : {
        "Text" : "# Initialize our list of includes with the user ones followed by the CUDA system ones.\n",
        "Line" : 1055,
        "CharPositionInLine" : 2
      },
      "108" : {
        "Text" : "# Get the include directories for this directory and use them for our nvcc command.\n",
        "Line" : 1057,
        "CharPositionInLine" : 2
      },
      "109" : {
        "Text" : "# Reset these variables\n",
        "Line" : 1065,
        "CharPositionInLine" : 2
      },
      "110" : {
        "Text" : "# Figure out if we are building a shared library.  BUILD_SHARED_LIBS is\n\n# respected in CUDA_ADD_LIBRARY.\n",
        "Line" : 1075,
        "CharPositionInLine" : 2
      },
      "111" : {
        "Text" : "# SHARED, MODULE\n",
        "Line" : 1078,
        "CharPositionInLine" : 2
      },
      "112" : {
        "Text" : "# STATIC\n",
        "Line" : 1084,
        "CharPositionInLine" : 2
      },
      "113" : {
        "Text" : "# CUDA_HOST_FLAGS\n",
        "Line" : 1090,
        "CharPositionInLine" : 2
      },
      "114" : {
        "Text" : "# If we are setting up code for a shared library, then we need to add extra flags for\n\n# compiling objects for shared libraries.\n",
        "Line" : 1092,
        "CharPositionInLine" : 4
      },
      "115" : {
        "Text" : "# Only add the CMAKE_{C,CXX}_FLAGS if we are propagating host flags.  We\n\n# always need to set the SHARED_FLAGS, though.\n",
        "Line" : 1098,
        "CharPositionInLine" : 2
      },
      "116" : {
        "Text" : "# Loop over all the configuration types to generate appropriate flags for run_nvcc.cmake\n",
        "Line" : 1107,
        "CharPositionInLine" : 2
      },
      "117" : {
        "Text" : "# CMAKE_FLAGS are strings and not lists.  By not putting quotes around CMAKE_FLAGS\n\n# we convert the strings to lists (like we want).\n",
        "Line" : 1110,
        "CharPositionInLine" : 4
      },
      "118" : {
        "Text" : "# nvcc chokes on -g3 in versions previous to 3.0, so replace it with -g\n",
        "Line" : 1114,
        "CharPositionInLine" : 6
      },
      "119" : {
        "Text" : "# Note that if we ever want CUDA_NVCC_FLAGS_<CONFIG> to be string (instead of a list\n\n# like it is currently), we can remove the quotes around the\n\n# ${CUDA_NVCC_FLAGS_${config_upper}} variable like the CMAKE_HOST_FLAGS_<CONFIG> variable.\n",
        "Line" : 1134,
        "CharPositionInLine" : 4
      },
      "120" : {
        "Text" : "# Get the list of definitions from the directory property\n",
        "Line" : 1140,
        "CharPositionInLine" : 2
      },
      "121" : {
        "Text" : "# Reset the output variable\n",
        "Line" : 1152,
        "CharPositionInLine" : 2
      },
      "122" : {
        "Text" : "# Iterate over the macro arguments and create custom\n\n# commands for all the .cu files.\n",
        "Line" : 1155,
        "CharPositionInLine" : 2
      },
      "123" : {
        "Text" : "# Ignore any file marked as a HEADER_FILE_ONLY\n",
        "Line" : 1158,
        "CharPositionInLine" : 4
      },
      "124" : {
        "Text" : "# Allow per source file overrides of the format.\n",
        "Line" : 1162,
        "CharPositionInLine" : 6
      },
      "125" : {
        "Text" : "# Don't use any of the host compilation flags for PTX targets.\n",
        "Line" : 1178,
        "CharPositionInLine" : 8
      },
      "126" : {
        "Text" : "# Determine output directory\n",
        "Line" : 1186,
        "CharPositionInLine" : 6
      },
      "127" : {
        "Text" : "# Add a custom target to generate a c or ptx file. ######################\n",
        "Line" : 1199,
        "CharPositionInLine" : 6
      },
      "128" : {
        "Text" : "# Set all of our file names.  Make sure that whatever filenames that have\n\n# generated_file_path in them get passed in through as a command line\n\n# argument, so that the ${CMAKE_CFG_INTDIR} gets expanded at run time\n\n# instead of configure time.\n",
        "Line" : 1217,
        "CharPositionInLine" : 6
      },
      "129" : {
        "Text" : "# Setup properties for obj files:\n",
        "Line" : 1227,
        "CharPositionInLine" : 6
      },
      "130" : {
        "Text" : "# This is an object file not to be compiled, but only be linked.\n",
        "Line" : 1231,
        "CharPositionInLine" : 31
      },
      "131" : {
        "Text" : "# Don't add CMAKE_CURRENT_SOURCE_DIR if the path is already an absolute path.\n",
        "Line" : 1235,
        "CharPositionInLine" : 6
      },
      "132" : {
        "Text" : "# Convience string for output ###########################################\n",
        "Line" : 1247,
        "CharPositionInLine" : 6
      },
      "133" : {
        "Text" : "# Build the NVCC made dependency file ###################################\n",
        "Line" : 1254,
        "CharPositionInLine" : 6
      },
      "134" : {
        "Text" : "# Configure the build script\n",
        "Line" : 1262,
        "CharPositionInLine" : 6
      },
      "135" : {
        "Text" : "# So if a user specifies the same cuda file as input more than once, you\n\n# can have bad things happen with dependencies.  Here we check an option\n\n# to see if this is the behavior they want.\n",
        "Line" : 1265,
        "CharPositionInLine" : 6
      },
      "136" : {
        "Text" : "# Create up the comment string\n",
        "Line" : 1282,
        "CharPositionInLine" : 6
      },
      "137" : {
        "Text" : "# Bring in the dependencies.  Creates a variable CUDA_NVCC_DEPEND #######\n",
        "Line" : 1290,
        "CharPositionInLine" : 6
      },
      "138" : {
        "Text" : "# Check to see if the build script is newer than the dependency file.  If\n\n# it is, regenerate it.\n\n# message(\"CUDA_GENERATE_DEPENDENCIES_DURING_CONFIGURE  = ${CUDA_GENERATE_DEPENDENCIES_DURING_CONFIGURE}\")\n\n# message(\"CUDA_NVCC_DEPEND_REGENERATE = ${CUDA_NVCC_DEPEND_REGENERATE}\")\n\n# execute_process(COMMAND ls -lTtr \"${custom_target_script}\" \"${cmake_dependency_file}\" \"${NVCC_generated_dependency_file}\")\n",
        "Line" : 1293,
        "CharPositionInLine" : 6
      },
      "139" : {
        "Text" : "# Note that NVCC_generated_dependency_file is always generated.\n",
        "Line" : 1299,
        "CharPositionInLine" : 6
      },
      "140" : {
        "Text" : "# If the two files were generated about the same time then reversing the\n\n# comparison will also be true, so check the CUDA_NVCC_DEPEND_REGENERATE\n\n# flag.\n",
        "Line" : 1302,
        "CharPositionInLine" : 8
      },
      "141" : {
        "Text" : "# message(\"************************************************************************\")\n\n# message(\"Same modification time: ${custom_target_script} ${NVCC_generated_dependency_file}\")\n",
        "Line" : 1306,
        "CharPositionInLine" : 10
      },
      "142" : {
        "Text" : "# The timestep check is valid\n",
        "Line" : 1312,
        "CharPositionInLine" : 10
      },
      "143" : {
        "Text" : "# message(\"_cuda_generate_dependencies = ${_cuda_generate_dependencies}\")\n",
        "Line" : 1316,
        "CharPositionInLine" : 6
      },
      "144" : {
        "Text" : "# If we needed to regenerate the dependency file, do so now.\n",
        "Line" : 1318,
        "CharPositionInLine" : 6
      },
      "145" : {
        "Text" : "# message(\"CUDA_HOST_COMPILER = ${CUDA_HOST_COMPILER}\")\n",
        "Line" : 1322,
        "CharPositionInLine" : 8
      },
      "146" : {
        "Text" : "#message(\"CUDA_VS_DIR = ${CUDA_VS_DIR}\")\n",
        "Line" : 1334,
        "CharPositionInLine" : 10
      },
      "147" : {
        "Text" : "# The CUDA_HOST_COMPILER is set to something interesting, so use the\n\n# ccbin_flags as-is.\n",
        "Line" : 1339,
        "CharPositionInLine" : 10
      },
      "148" : {
        "Text" : "# message(\"_cuda_dependency_ccbin = ${_cuda_dependency_ccbin}\")\n",
        "Line" : 1343,
        "CharPositionInLine" : 8
      },
      "149" : {
        "Text" : "# Only do this if we have some kind of host compiler defined in\n\n# _cuda_dependency_ccbin or ccbin_flags isn't set.\n",
        "Line" : 1345,
        "CharPositionInLine" : 10
      },
      "150" : {
        "Text" : "# Try and reload the dependies\n",
        "Line" : 1365,
        "CharPositionInLine" : 12
      },
      "151" : {
        "Text" : "# Build the generated file and dependency file ##########################\n",
        "Line" : 1371,
        "CharPositionInLine" : 6
      },
      "152" : {
        "Text" : "# These output files depend on the source_file and the contents of cmake_dependency_file\n",
        "Line" : 1374,
        "CharPositionInLine" : 8
      },
      "153" : {
        "Text" : "# Make sure the output directory exists before trying to write to it.\n",
        "Line" : 1378,
        "CharPositionInLine" : 8
      },
      "154" : {
        "Text" : "# Make sure the build system knows the file is generated.\n",
        "Line" : 1392,
        "CharPositionInLine" : 6
      },
      "155" : {
        "Text" : "# Don't add the object file to the list of generated files if we are using\n\n# visual studio and we are attaching the build rule to the cuda file.  VS\n\n# will add our object file to the linker automatically for us.\n",
        "Line" : 1395,
        "CharPositionInLine" : 6
      },
      "156" : {
        "Text" : "# Visual Studio 8 crashes when you close the solution when you don't add the object file.\n",
        "Line" : 1401,
        "CharPositionInLine" : 8
      },
      "157" : {
        "Text" : "#message(\"Not adding ${generated_file}\")\n",
        "Line" : 1403,
        "CharPositionInLine" : 10
      },
      "158" : {
        "Text" : "# Add the other files that we want cmake to clean on a cleanup ##########\n",
        "Line" : 1412,
        "CharPositionInLine" : 6
      },
      "159" : {
        "Text" : "# Set the return parameter\n",
        "Line" : 1420,
        "CharPositionInLine" : 2
      },
      "160" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# Separable Compilation Link\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1435,
        "CharPositionInLine" : 0
      },
      "161" : {
        "Text" : "# Compute the filename to be used by CUDA_LINK_SEPARABLE_COMPILATION_OBJECTS\n",
        "Line" : 1441,
        "CharPositionInLine" : 0
      },
      "162" : {
        "Text" : "# Setup the build rule for the separable compilation intermediate link file.\n",
        "Line" : 1453,
        "CharPositionInLine" : 0
      },
      "163" : {
        "Text" : "# This is an object file not to be compiled, but only\n\n# be linked.\n\n# This file is generated during the build\n",
        "Line" : 1459,
        "CharPositionInLine" : 27
      },
      "164" : {
        "Text" : "# For now we are ignoring all the configuration specific flags.\n",
        "Line" : 1464,
        "CharPositionInLine" : 4
      },
      "165" : {
        "Text" : "# If -ccbin, --compiler-bindir has been specified, don't do anything.  Otherwise add it here.\n",
        "Line" : 1472,
        "CharPositionInLine" : 4
      },
      "166" : {
        "Text" : "# Some generators don't handle the multiple levels of custom command\n\n# dependencies correctly (obj1 depends on file1, obj2 depends on obj1), so\n\n# we work around that issue by compiling the intermediate link object as a\n\n# pre-link custom command in that situation.\n",
        "Line" : 1489,
        "CharPositionInLine" : 4
      },
      "167" : {
        "Text" : "# VS 2010 and 2012 have this problem.  If future versions fix this issue,\n\n# it should still work, it just won't be as nice as the other method.\n",
        "Line" : 1495,
        "CharPositionInLine" : 6
      },
      "168" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# ADD LIBRARY\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1519,
        "CharPositionInLine" : 0
      },
      "169" : {
        "Text" : "# Separate the sources from the options\n",
        "Line" : 1528,
        "CharPositionInLine" : 2
      },
      "170" : {
        "Text" : "# Create custom commands and targets for each file.\n",
        "Line" : 1531,
        "CharPositionInLine" : 2
      },
      "171" : {
        "Text" : "# Compute the file name of the intermedate link file used for separable\n\n# compilation.\n",
        "Line" : 1536,
        "CharPositionInLine" : 2
      },
      "172" : {
        "Text" : "# Add the library.\n",
        "Line" : 1540,
        "CharPositionInLine" : 2
      },
      "173" : {
        "Text" : "# Add a link phase for the separable compilation if it has been enabled.  If\n\n# it has been enabled then the ${cuda_target}_SEPARABLE_COMPILATION_OBJECTS\n\n# variable will have been defined.\n",
        "Line" : 1547,
        "CharPositionInLine" : 2
      },
      "174" : {
        "Text" : "# We need to set the linker language based on what the expected generated file\n\n# would be. CUDA_C_OR_CXX is computed based on CUDA_HOST_COMPILATION_CPP.\n",
        "Line" : 1556,
        "CharPositionInLine" : 2
      },
      "175" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# ADD EXECUTABLE\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1566,
        "CharPositionInLine" : 0
      },
      "176" : {
        "Text" : "# Separate the sources from the options\n",
        "Line" : 1575,
        "CharPositionInLine" : 2
      },
      "177" : {
        "Text" : "# Create custom commands and targets for each file.\n",
        "Line" : 1577,
        "CharPositionInLine" : 2
      },
      "178" : {
        "Text" : "# Compute the file name of the intermedate link file used for separable\n\n# compilation.\n",
        "Line" : 1580,
        "CharPositionInLine" : 2
      },
      "179" : {
        "Text" : "# Add the library.\n",
        "Line" : 1584,
        "CharPositionInLine" : 2
      },
      "180" : {
        "Text" : "# Add a link phase for the separable compilation if it has been enabled.  If\n\n# it has been enabled then the ${cuda_target}_SEPARABLE_COMPILATION_OBJECTS\n\n# variable will have been defined.\n",
        "Line" : 1591,
        "CharPositionInLine" : 2
      },
      "181" : {
        "Text" : "# We need to set the linker language based on what the expected generated file\n\n# would be. CUDA_C_OR_CXX is computed based on CUDA_HOST_COMPILATION_CPP.\n",
        "Line" : 1600,
        "CharPositionInLine" : 2
      },
      "182" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA COMPILE\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1610,
        "CharPositionInLine" : 0
      },
      "183" : {
        "Text" : "# Separate the sources from the options\n",
        "Line" : 1617,
        "CharPositionInLine" : 2
      },
      "184" : {
        "Text" : "# Create custom commands and targets for each file.\n",
        "Line" : 1619,
        "CharPositionInLine" : 2
      },
      "185" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA COMPILE PTX\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1628,
        "CharPositionInLine" : 0
      },
      "186" : {
        "Text" : "# Separate the sources from the options\n",
        "Line" : 1635,
        "CharPositionInLine" : 2
      },
      "187" : {
        "Text" : "# Create custom commands and targets for each file.\n",
        "Line" : 1637,
        "CharPositionInLine" : 2
      },
      "188" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA ADD CUFFT TO TARGET\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1645,
        "CharPositionInLine" : 0
      },
      "189" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA ADD CUBLAS TO TARGET\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1658,
        "CharPositionInLine" : 0
      },
      "190" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA BUILD CLEAN TARGET\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1671,
        "CharPositionInLine" : 0
      },
      "191" : {
        "Text" : "# Call this after you add all your CUDA targets, and you will get a convience\n\n# target.  You should also make clean after running this target to get the\n\n# build system to generate all the code again.\n",
        "Line" : 1677,
        "CharPositionInLine" : 2
      },
      "192" : {
        "Text" : "# Clear out the variable, so the next time we configure it will be empty.\n\n# This is useful so that the files won't persist in the list after targets\n\n# have been removed.\n",
        "Line" : 1688,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 193
    },
    "test/performance-regression/full-apps/qmcpack/CMake/FindCUDA/make2cmake.cmake" : {
      "ObjectId" : "7fce167c23ac70663c370d34a8809c4e2d0015ce",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  James Bigler, NVIDIA Corp (nvidia.com - jbigler)\n\n#  Abe Stephens, SCI Institute -- http://www.sci.utah.edu/~abe/FindCuda.html\n\n#\n\n#  Copyright (c) 2008 - 2009 NVIDIA Corporation.  All rights reserved.\n\n#\n\n#  Copyright (c) 2007-2009\n\n#  Scientific Computing and Imaging Institute, University of Utah\n\n#\n\n#  This code is licensed under the MIT License.  See the FindCUDA.cmake script\n\n#  for the text of the license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The MIT License\n\n#\n\n# License for the specific language governing rights and limitations under\n\n# Permission is hereby granted, free of charge, to any person obtaining a\n\n# copy of this software and associated documentation files (the \"Software\"),\n\n# to deal in the Software without restriction, including without limitation\n\n# the rights to use, copy, modify, merge, publish, distribute, sublicense,\n\n# and/or sell copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\n# DEALINGS IN THE SOFTWARE.\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#######################################################################\n\n# This converts a file written in makefile syntax into one that can be included\n\n# by CMake.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# message(\"FOUND DEPENDS\")\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Remember, four backslashes is escaped to one backslash in the string.\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# This works for the nvcc -M generated dependency files.\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# If softlinks start to matter, we should change this to REALPATH.  For now we need\n\n# to flatten paths, because nvcc can generate stuff like /bin/../include instead of\n\n# just /include.\n",
        "Line" : 58,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# message(\"FOUND NO DEPENDS\")\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Remove the duplicate entries and sort them.\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "test/performance-regression/full-apps/qmcpack/CMake/FindCUDA/parse_cubin.cmake" : {
      "ObjectId" : "2518c685250cf3c1b78779eae3c1946d3678d220",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  James Bigler, NVIDIA Corp (nvidia.com - jbigler)\n\n#  Abe Stephens, SCI Institute -- http://www.sci.utah.edu/~abe/FindCuda.html\n\n#\n\n#  Copyright (c) 2008 - 2009 NVIDIA Corporation.  All rights reserved.\n\n#\n\n#  Copyright (c) 2007-2009\n\n#  Scientific Computing and Imaging Institute, University of Utah\n\n#\n\n#  This code is licensed under the MIT License.  See the FindCUDA.cmake script\n\n#  for the text of the license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The MIT License\n\n#\n\n# License for the specific language governing rights and limitations under\n\n# Permission is hereby granted, free of charge, to any person obtaining a\n\n# copy of this software and associated documentation files (the \"Software\"),\n\n# to deal in the Software without restriction, including without limitation\n\n# the rights to use, copy, modify, merge, publish, distribute, sublicense,\n\n# and/or sell copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\n# DEALINGS IN THE SOFTWARE.\n\n#\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#######################################################################\n\n# Parses a .cubin file produced by nvcc and reports statistics about the file.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Remember, four backslashes is escaped to one backslash in the string.\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Only look at \"code { }\" blocks.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Break into individual lines.\n",
        "Line" : 53,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Extract kernel names.\n",
        "Line" : 58,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Check to see if the kernel name starts with \"_\"\n",
        "Line" : 62,
        "CharPositionInLine" : 10
      },
      "8" : {
        "Text" : "# if (${entry} MATCHES \"^_\")\n",
        "Line" : 64,
        "CharPositionInLine" : 10
      },
      "9" : {
        "Text" : "# Skip the rest of this block.\n\n# message(\"Skipping ${entry}\")\n\n# set(skip TRUE)\n",
        "Line" : 65,
        "CharPositionInLine" : 12
      },
      "10" : {
        "Text" : "# else (${entry} MATCHES \"^_\")\n",
        "Line" : 68,
        "CharPositionInLine" : 10
      },
      "11" : {
        "Text" : "# endif (${entry} MATCHES \"^_\")\n",
        "Line" : 70,
        "CharPositionInLine" : 10
      },
      "12" : {
        "Text" : "# Skip the rest of the block if necessary\n",
        "Line" : 74,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Registers\n",
        "Line" : 77,
        "CharPositionInLine" : 10
      },
      "14" : {
        "Text" : "# Local memory\n",
        "Line" : 83,
        "CharPositionInLine" : 10
      },
      "15" : {
        "Text" : "# Shared memory\n",
        "Line" : 89,
        "CharPositionInLine" : 10
      },
      "16" : {
        "Text" : "# message(\"FOUND NO DEPENDS\")\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 17
    },
    "test/performance-regression/full-apps/qmcpack/CMake/FindCUDA/run_nvcc.cmake" : {
      "ObjectId" : "7349da322453e9bb0e205c91f7c59ea55562a078",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  James Bigler, NVIDIA Corp (nvidia.com - jbigler)\n\n#\n\n#  Copyright (c) 2008 - 2009 NVIDIA Corporation.  All rights reserved.\n\n#\n\n#  This code is licensed under the MIT License.  See the FindCUDA.cmake script\n\n#  for the text of the license.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The MIT License\n\n#\n\n# License for the specific language governing rights and limitations under\n\n# Permission is hereby granted, free of charge, to any person obtaining a\n\n# copy of this software and associated documentation files (the \"Software\"),\n\n# to deal in the Software without restriction, including without limitation\n\n# the rights to use, copy, modify, merge, publish, distribute, sublicense,\n\n# and/or sell copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\n# DEALINGS IN THE SOFTWARE.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##########################################################################\n\n# This file runs the nvcc commands to produce the desired output file along with\n\n# the dependency file needed by CMake to compute dependencies.  In addition the\n\n# file checks the output of each command and if the command fails it deletes the\n\n# output files.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Input variables\n\n#\n\n# verbose:BOOL=<>          OFF: Be as quiet as possible (default)\n\n#                          ON : Describe each step\n\n#\n\n# build_configuration:STRING=<> Typically one of Debug, MinSizeRel, Release, or\n\n#                               RelWithDebInfo, but it should match one of the\n\n#                               entries in CUDA_HOST_FLAGS. This is the build\n\n#                               configuration used when compiling the code.  If\n\n#                               blank or unspecified Debug is assumed as this is\n\n#                               what CMake does.\n\n#\n\n# generated_file:STRING=<> File to generate.  This argument must be passed in.\n\n#\n\n# generated_cubin_file:STRING=<> File to generate.  This argument must be passed\n\n#                                                   in if build_cubin is true.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set these up as variables to make reading the generated file easier\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We won't actually use these variables for now, but we need to set this, in\n\n# order to force this file to be run again if it changes.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This is the list of host compilation flags.  It C or CXX should already have\n\n# been chosen by FindCUDA.cmake.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Take the compiler flags and package them up to be sent to the compiler via -Xcompiler\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# If we weren't given a build_configuration, use Debug.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#message(\"CUDA_NVCC_HOST_COMPILER_FLAGS = ${CUDA_NVCC_HOST_COMPILER_FLAGS}\")\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Extra quotes are added around each flag to help nvcc parse out flags with spaces.\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#message(\"nvcc_host_compiler_flags = \\\"${nvcc_host_compiler_flags}\\\"\")\n\n# Add the build specific configuration flags\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# cuda_execute_process - Executes a command with optional command echo and status message.\n\n#\n\n#   status  - Status message to print if verbose is true\n\n#   command - COMMAND argument from the usual execute_process argument structure\n\n#   ARGN    - Remaining arguments are the command with arguments\n\n#\n\n#   CUDA_result - return value from running the command\n\n#\n\n# Make this a macro instead of a function, so that things like RESULT_VARIABLE\n\n# and other return variables are present after executing the process.\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Now we need to build up our command string.  We are accounting for quotes\n\n# and spaces, anything else is left up to the user to fix if they want to\n\n# copy and paste a runnable command line.\n",
        "Line" : 126,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# If there are quotes, excape them, so they come through.\n",
        "Line" : 131,
        "CharPositionInLine" : 6
      },
      "15" : {
        "Text" : "# Args with spaces need quotes around them to get them to be parsed as a single argument.\n",
        "Line" : 133,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# Echo the command\n",
        "Line" : 140,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Run the command\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Delete the target file\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# For CUDA 2.3 and below, -G -M doesn't work, so remove the -G flag\n\n# for dependency generation and hope for the best.\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# CMake policy 0007 NEW states that empty list elements are not\n\n# ignored.  I'm just setting it to avoid the warning that's printed.\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Note that this will remove all occurances of -G.\n",
        "Line" : 162,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# nvcc doesn't define __CUDACC__ for some reason when generating dependency files.  This\n\n# can cause incorrect dependencies when #including files based on this macro which is\n\n# defined in the generating passes of nvcc invokation.  We will go ahead and manually\n\n# define this for now until a future version fixes this bug.\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Generate the dependency file\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Generate the cmake readable dependency file to a temp file.  Don't put the\n\n# quotes just around the filenames for the input_file and output_file variables.\n\n# CMake will pass the quotes through and not be able to find the file.\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Copy the file if it is different\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Delete the temporary file\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Generate the code\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Since nvcc can sometimes leave half done files make sure that we delete the output file.\n",
        "Line" : 243,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Cubin resource report commands.\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Run with -cubin to produce resource usage report.\n",
        "Line" : 257,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Execute the parser script.\n",
        "Line" : 272,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 32
    },
    "test/performance-regression/full-apps/qmcpack/CMake/FindEinspline.cmake" : {
      "ObjectId" : "1e1b03695b6daaf04c834512c19705371af9fdbf",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# this module look for einspline support\n\n# it will define the following values\n\n#\n\n# EINSPLINE_INCLUDE_DIR  = where einspline/config.h can be found\n\n# EINSPLINE_LIBRARIES    = the library to link against \n\n# EINSPLINE_FOUND        = set to true after finding the pre-compiled library\n\n#\n\n# EINSPLINE_DIR          = directory where the source files are located\n\n#\n\n#FIND_LIBRARY(EINSPLINE_LIBRARY einspline ${TRIAL_LIBRARY_PATHS})\n\n#FIND_PATH(EINSPLINE_INCLUDE_DIR einspline/bspline.h ${TRIAL_INCLUDE_PATHS} )\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/performance-regression/full-apps/qmcpack/CMake/FindFFTW.cmake" : {
      "ObjectId" : "ad972dd0b24738494e91325e5c45b7b1f60f90ad",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FFTW_INCLUDE_DIR = fftw3.h\n\n# FFTW_LIBRARIES = libfftw3.a\n\n# FFTW_FOUND = true if FFTW3 is found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/performance-regression/full-apps/qmcpack/CMake/FindGSL.cmake" : {
      "ObjectId" : "dc783abddbe07b41103621c40fb14cebcebf2379",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# this module look for gsl (http://www.gnu.org/software/gsl) support\n\n# it will define the following values\n\n#\n\n# GSL_INCLUDE_DIR = where gsl/gsl_version.h can be found\n\n# GSL_LIBRARY     = the library to link against libgsl\n\n# FOUND_GSL       = set to 1 if gsl is found\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/performance-regression/full-apps/qmcpack/CMake/FindGTK.cmake" : {
      "ObjectId" : "d85959e97a7d59d574e5083ceb4f2040b6bcd8e8",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# try to find GTK (and glib) and GTKGLArea\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GTK_INCLUDE_DIR   - Directories to include to use GTK\n\n# GTK_LIBRARIES     - Files to link against to use GTK\n\n# GTK_FOUND         - If false, don't try to use GTK\n\n# GTK_GL_FOUND      - If false, don't try to use GTK's GL features\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# modified CMake/Modules/FindGTK.cmake\n\n# - add gtkmm search\n\n# don't even bother under WIN32\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# common search paths for header files\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# common search paths for libraries\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Some Linux distributions (e.g. Red Hat) have glibconfig.h\n\n# and glib.h in different directories, so we need to look\n\n# for both.\n\n#  - Atanas Georgiev <atanas@cs.columbia.edu>\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#\n\n# The 12 suffix is thanks to the FreeBSD ports collection\n\n#\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Assume that if gtk and glib were found, the other\n\n# supporting libraries have also been found.\n",
        "Line" : 128,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# gtkmm\n",
        "Line" : 195,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#link everything\n",
        "Line" : 343,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 10
    },
    "test/performance-regression/full-apps/qmcpack/CMake/FindHDF5.cmake" : {
      "ObjectId" : "a9969da5809a9dbec37d4f997a617861454839f9",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# this module look for HDF5 (http://hdf.ncsa.uiuc.edu) support\n\n# it will define the following values\n\n#\n\n# HDF5_INCLUDE_DIR  = where hdf5.h can be found\n\n# HDF5_LIBRARY      = the library to link against (hdf5 etc)\n\n# HDF5_FOUND        = set to true after finding the library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  find_file(h5settings libhdf5.settings ${QMC_LIBRARY_PATHS})\n\n#  exec_program(grep  \n\n#    ARGS libraries ${h5settings}\n\n#    OUTPUT_VARIABLE HDF5_EXTRA_LIBS\n\n#    RETURN_VALUE mycheck\n\n#    )\n\n#  if(HDF5_EXTRA_LIBS MATCHES \"sz\")\n\n#    STRING(REGEX MATCHALL \"[-][L]([^ ;])+\" HDF5_EXTRA_LIBS_LINK  ${HDF5_EXTRA_LIBS})\n\n#    STRING(REGEX REPLACE \"[-][L]\" \"\" SZLIB_PATH ${HDF5_EXTRA_LIBS_LINK})\n\n#    find_library(SZLIB_LIBRARIES sz ${SZLIB_PATH})\n\n#    if(SZLIB_LIBRARIES)\n\n#      MESSAGE(STATUS \"SZLIB_LIBRARIES=\"${SZLIB_LIBRARIES})\n\n#      set(SZLIB_FOUND TRUE)\n\n#    endif(SZLIB_LIBRARIES)\n\n#  endif(HDF5_EXTRA_LIBS MATCHES \"sz\")\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "test/performance-regression/full-apps/qmcpack/CMake/FindLapack.cmake" : {
      "ObjectId" : "46a7cc9b5304e3e9765c90c3be5803430fc5bb1c",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this module look for lapack/blas and other numerical library support\n\n# it will define the following values\n\n# Since lapack and blas are essential, link_liraries are called.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#IF(NOT CMAKE_COMPILER_IS_GNUCXX)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Intel composer has everything, \n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#default MKL libraries \n",
        "Line" : 39,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# COULD SEARCH THESE but..... \n",
        "Line" : 105,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#MARK_AS_ADVANCED(\n\n#  LAPACK_LIBRARIES \n\n#  BLAS_LIBRARIES \n\n#  )\n\n#IF(USE_SCALAPACK)\n\n#  SET(PNPATHS \n\n#    ${MKL_PATHS}\n\n#    ${BLACS_HOME}/lib\n\n#    ${SCALAPACK_HOME}/lib\n\n#    /usr/lib\n\n#    /opt/lib\n\n#    /usr/local/lib\n\n#    /sw/lib\n\n#    )\n\n#\n\n#  IF(INTEL_MKL)\n\n#    FIND_LIBRARY(BLACSLIB mkl_blacs_${PLAT}_lp${QMC_BITS} PATHS  ${PNPATHS})\n\n#    FIND_LIBRARY(SCALAPACKLIB mkl_scalapack PATHS  ${PNPATHS})\n\n#  ENDIF(INTEL_MKL)\n\n#\n\n#  IF(NOT SCALAPACKLIB)\n\n#    FIND_LIBRARY(BLACSLIB blacs_MPI-${PLAT}-{BLACSDBGLVL} PATHS  ${PNPATHS})\n\n#    FIND_LIBRARY(BLACSCINIT blacsCinit_MPI-${PLAT}-{BLACSDBGLVL} PATHS  ${PNPATHS})\n\n#    FIND_LIBRARY(SCALAPACKLIB scalapack PATHS  ${PNPATHS})\n\n#  ENDIF(NOT SCALAPACKLIB)\n\n#\n\n#  IF(BLACSLIB AND SCALAPACKLIB)\n\n#    SET(FOUND_SCALAPACK 1 CACHE BOOL \"Found scalapack library\")\n\n#  ELSE(BLACSLIB AND SCALAPACKLIB)\n\n#    SET(FOUND_SCALAPACK 0 CACHE BOOL \"Mising scalapack library\")\n\n#  ENDIF(BLACSLIB AND SCALAPACKLIB)\n\n#\n\n#  MARK_AS_ADVANCED(\n\n#    BLACSCINIT\n\n#    BLACSLIB\n\n#    SCALAPACKLIB\n\n#    FOUND_SCALAPACK\n\n#    )\n\n#ENDIF(USE_SCALAPACK)\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "test/performance-regression/full-apps/qmcpack/CMake/FindLibxml2.cmake" : {
      "ObjectId" : "c39edf15373602c81c520155bb132051eba2dcbf",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# this module look for libxml (http://www.xmlsoft.org) support\n\n# it will define the following values\n\n#\n\n# LibXml2_INCLUDE_DIR  = where libxml/xpath.h can be found\n\n# LibXml2_LIBRARIES    = the library to link against libxml2\n\n# LibXml2_FOUND        = set to 1 if libxml2 is found\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#IF(LIBXML2_INCLUDE_DIR)\n\n#  return()\n\n#ENDIF(LIBXML2_INCLUDE_DIR)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/performance-regression/full-apps/qmcpack/CMake/FindLibxmlpp.cmake" : {
      "ObjectId" : "466159a673d84d246aa816faa266112c2de30d5a",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# this module look for libxml++ (http://libxmlplusplus.sourceforge.net) support\n\n# it will define the following values\n\n#\n\n# LIBXMLPP_INCLUDE_PATH = where libxml++/libxml++.h can be found\n\n# LIBXMLPP_LIBRARY      = the library to link against libxml++\n\n# FOUND_LIBXMLPP        = set to 1 if libxml++ is found\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/performance-regression/full-apps/qmcpack/CMake/FindSZLIB.cmake" : {
      "ObjectId" : "f0d9d4a50ada785b9f3c9ef47708b1ba551b418b",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Find the native SZLIB includes and library\n\n#\n\n# SZLIB_INCLUDE_DIR - where to find zlib.h, etc.\n\n# SZLIB_LIBRARIES   - List of fully qualified libraries to link against when using zlib.\n\n# SZLIB_FOUND       - Do not attempt to use zlib if \"no\" or undefined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/performance-regression/full-apps/qmcpack/CMake/FindSprng.cmake" : {
      "ObjectId" : "fc04bfb8c554059b00750ab7eafba3fe3fc35709",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# this module look for SPRNG (http://hdf.ncsa.uiuc.edu) support\n\n# it will define the following values\n\n#\n\n# SPRNG_INCLUDE_PATH = where sprng.h can be found\n\n# SPRNG_LIBRARY      = the library to link against (sprng etc)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#IF($ENV{SPRNG_HOME} MATCHES \"sprng\")\n\n#  SET(TRIAL_LIBRARY_PATHS\n\n#     $ENV{SPRNG_HOME}/lib ${TRIAL_LIBRARY_PATHS} )\n\n#  SET(TRIAL_INCLUDE_PATHS\n\n#     $ENV{SPRNG_HOME}/include ${TRIAL_INCLUDE_PATHS} )\n\n#ENDIF($ENV{SPRNG_HOME} MATCHES \"sprng\")\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/performance-regression/full-apps/qmcpack/CMake/FindTBB.cmake" : {
      "ObjectId" : "929438f10f8b98793883ead2d63decedecdf5159",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# this module look for tbb support\n\n#\n\n# TBB_FOUND = boolean\n\n# TBB_INCLUDE_DIR = where tbb/tbb.h can be found\n\n# TBB_LIBRARIES =  -L${TBB_LIBDIR} -ltbbmalloc -ltbb\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/performance-regression/full-apps/qmcpack/CMake/FindTau.cmake" : {
      "ObjectId" : "1acd83db7b540d78d13742e719fa9d00aa0da660",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# this module look for tau (http://www.boost.org) support\n\n# it will define the following values\n\n#\n\n# TAU_INCLUDE_DIR = where TAU.h can be found\n\n#\n\n# May want to define this but seldom required\n\n# TAU_LIBRARY = where boost library can be found (reserved)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/performance-regression/full-apps/qmcpack/CMake/FindZLIB.cmake" : {
      "ObjectId" : "5ac31f80b3bcb158fdf1db3d7578e2bb178d7f31",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Find the native ZLIB includes and library\n\n#\n\n# ZLIB_INCLUDE_DIR - where to find zlib.h, etc.\n\n# ZLIB_LIBRARIES   - List of fully qualified libraries to link against when using zlib.\n\n# ZLIB_FOUND       - Do not attempt to use zlib if \"no\" or undefined.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#FIND_PATH(ZLIB_INCLUDE_DIR zlib.h ${ZLIB_HOME}/include $ENV{ZLIB_HOME}/include)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#IF(ZLIB_INCLUDE_DIR)\n\n#  IF(ZLIB_LIBRARY)\n\n#    SET( ZLIB_LIBRARIES ${ZLIB_LIBRARY} )\n\n#    SET( ZLIB_FOUND TRUE)\n\n#  ENDIF(ZLIB_LIBRARY)\n\n#ENDIF(ZLIB_INCLUDE_DIR)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/performance-regression/full-apps/qmcpack/CMake/GNUCompilers.cmake" : {
      "ObjectId" : "a9de0d32d9659b67fe89d50ea3a74929c10433c3",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#GNU compilers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  SET(CMAKE_CXX_FLAGS \"-O3 -ftemplate-depth-60 -Drestrict=__restrict__ -fstrict-aliasing -funroll-all-loops   -finline-limit=1000 -ffast-math -Wno-deprecated \")\n\n#  SET(CMAKE_CXX_FLAGS \"-g -O3 -ftemplate-depth-60 -Drestrict=__restrict__ -funroll-all-loops   -finline-limit=1000 -Wno-deprecated \")\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -ftemplate-depth=60\")\n",
        "Line" : 23,
        "CharPositionInLine" : 38
      },
      "3" : {
        "Text" : "#  SET(CMAKE_CXX_FLAGS \"-O6 -ftemplate-depth-60 -Drestrict=__restrict__ -fstrict-aliasing -funroll-all-loops   -finline-limit=1000 -ffast-math -Wno-deprecated -pg\")\n\n#  SET(CMAKE_CXX_FLAGS \"-g -ftemplate-depth-60 -Drestrict=__restrict__ -fstrict-aliasing -Wno-deprecated\")\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# SET(CMAKE_SHARED_LIBRARY_CXX_FLAGS \"${CMAKE_SHARED_LIBRARY_CXX_FLAGS} -faltivec -framework Accelerate -bind_at_load\")\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#  SET(FORTRAN_LIBS \"-lg2c\")\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#IF(APPLE)\n\n#  INCLUDE_DIRECTORIES(/sw/include)\n\n#ENDIF(APPLE)\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "test/performance-regression/full-apps/qmcpack/CMake/IA32Compilers.cmake" : {
      "ObjectId" : "02e4977edcb1d2ae4395f12d1e15385600031e25",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  SET (FORTRAN_LIBS \"-lg2c\")\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/performance-regression/full-apps/qmcpack/CMake/IBMCompilers.cmake" : {
      "ObjectId" : "504e0ab30729a341ab059b3c5fc12559b5e603bc",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#IBM Visual Age C/C++ compilers\n\n#\n\n#check guidec++ and overwrites the BITS\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "######################################################################\n\n#AIX_BIT_FLAGS is the option to switch between 32/64\n\n#If BITS=64, compiler and ar options have to have -q64 or -X64\n\n######################################################################\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "######################################################################\n\n#AIX_CXX_COMMON_FLAGS for the flags required for any level of optimizations\n\n#AIX_CXX_OPT_FLAGS    for aggressive optimization\n\n#AIX_CXX_COMMON_FLAGS for basic optimization level\n\n######################################################################\n\n#SET(AIX_CXX_COMMON_FLAGS \"-qarch=pwr4 -qtune=pwr4 -qkeyword=restrict -qstrict -qansialias -qalias=typeptr -qnoeh -qrtti=dyna -qtemplateregistry=${LIBRARY_OUTPUT_PATH}/tempegistry\")\n\n#SET(AIX_CXX_OPT_FLAGS \"-O3 -qipa -qinline -qspill=2000\")\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#SET(AIX_CXX_OPT_FLAGS \"-O3 -DINLINE_ALL=  -Q -qipa=inline -qinline \")\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "######################################################################\n\n#set the CXX flags: common + opt + bit\n\n######################################################################\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "######################################################################\n\n#add openmp-related flags: common + opt + bit + thread\n\n######################################################################\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# check if the compiler is correct xlC_r xlc_r mpCC_r mpcc_r\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#SET(CMAKE_CXX_LINK_FLAGS ${CMAKE_CXX_FLAGS})\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "test/performance-regression/full-apps/qmcpack/CMake/Intel7.cmake" : {
      "ObjectId" : "c7feb479d312561e49240218c4b7c542ebd909f6",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Intel compilers 7.x\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/performance-regression/full-apps/qmcpack/CMake/IntelAbe.cmake" : {
      "ObjectId" : "ee6e76e909a5c663b92ac2d638d003b7a54bc5c3",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#compiler flags for intel 8.x\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for Mac OS X\n\n#SET(CMAKE_CXX_FLAGS \"-restrict -unroll -fno-alias -O3 -msse3 -axT\")\n\n# for Abe core 2 quad\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ELSE(${CMAKE_SYSTEM_NAME} MATCHES \"Darwin\")\n\n#  IF(QMC_BITS MATCHES 64)\n\n#  ELSE(QMC_BITS MATCHES 64)\n\n#    SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -xW -cxxlib-icc\")\n\n#  ENDIF(QMC_BITS MATCHES 64)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#ifc -> ifort\n\n#SET(FORTRAN_LIBS \" -lifcore -lifport\")\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "######################################################\n\n#KCC needs to be used to build static libraries\n\n######################################################\n\n#SET(CMAKE_AR xild) \n\n#SET(CMAKE_CXX_CREATE_STATIC_LIBRARY \"<CMAKE_AR> -lib -o <TARGET> <OBJECTS>\")\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "test/performance-regression/full-apps/qmcpack/CMake/IntelCompilers.cmake" : {
      "ObjectId" : "ca5e554cc976484eecf6b5392cd7369c7630d521",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# compiler flags for intel 8.x, 9.x, 10.x, 11.x\n\n# check the version and warn users if older compilers are being used\n\n# SSE4.2 option is available for 11.1  and higher\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# common options for intel compilers\n\n#enable Interprocedural (IP) Optimizations\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(INTEL_OPTS \"-g -restrict -unroll -ansi-alias -O3 -ip -openmp\")\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#MESSAGE(STATUS \"CPU_IDENTITY ${CPU_IDENTITY}\")\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#grep icpc version and determine what options to be used\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Use deprecated options prior to 11.1\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-ipo_obj force generation of real object files (requires -ipo)\n\n#set(CMAKE_CXX_FLAGS \"-restrict -unroll -fno-alias -O3 -Ob=1 -ansi -ipo -ipo_obj -cxxlib-icc\")\n\n#set(CMAKE_CC_FLAGS \"-restrict -unroll -fno-alias -O3 -Ob=1 -ansi -ipo -ipo_obj\")\n\n#set(CMAKE_CXX_FLAGS \"-restrict -unroll -fno-alias -g -ansi\")\n\n#set(CMAKE_CC_FLAGS \"-restrict -unroll -fno-alias -g -ansi\")\n\n#set(CMAKE_CXX_FLAGS \"-restrict -unroll -fno-alias -O3 -cxxlib-icc\")\n\n#set(CMAKE_CXX_FLAGS \"-restrict -unroll -fno-alias -O3 -ansi -fno-fnalias -ivdep_parallel -Ob=2\")\n\n#set(CMAKE_CXX_FLAGS \"-restrict -unroll -fno-alias -O3 -ivdep_parallel -Ob=2\")\n\n#set(CMAKE_CXX_FLAGS \"-restrict -unroll -fno-alias -O3 -Ob=2 -qp\")\n\n#set(CMAKE_CXX_FLAGS \"-restrict -unroll -fno-alias -O3 -Ob=2 -cxxlib-icc\")\n\n#set(CMAKE_CXX_FLAGS \"-restrict -unroll -fno-alias -O3\")\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#check if -ftz is accepted\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#SET(CMAKE_TRY_ICC_FLAGS \"-xSSE4.1\")\n\n#CHECK_C_COMPILER_FLAG(${CMAKE_TRY_ICC_FLAGS} INTEL_CC_FLAGS)\n\n#IF(INTEL_CC_FLAGS)\n\n#  SET(HAVE_SSE4_2 1)\n\n#  IF(NOT SSE_OPT_SET)\n\n#    SET(INTEL_OPTS \"${INTEL_OPTS} ${CMAKE_TRY_ICC_FLAGS}\")\n\n#    SET(SSE_OPT_SET TRUE)\n\n#  ENDIF(NOT SSE_OPT_SET)\n\n#ENDIF(INTEL_CC_FLAGS)\n\n#\n\n#SET(CMAKE_TRY_ICC_FLAGS \"-xSSSE3\")\n\n#CHECK_C_COMPILER_FLAG(${CMAKE_TRY_ICC_FLAGS} INTEL_CC_FLAGS)\n\n#IF(INTEL_CC_FLAGS)\n\n#  SET(HAVE_SSSE3 1)\n\n#  IF(NOT SSE_OPT_SET)\n\n#    SET(INTEL_OPTS \"${INTEL_OPTS} ${CMAKE_TRY_ICC_FLAGS}\")\n\n#    SET(SSE_OPT_SET TRUE)\n\n#  ENDIF(NOT SSE_OPT_SET)\n\n#ENDIF(INTEL_CC_FLAGS)\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#SET(CMAKE_TRY_ICC_FLAGS \"-xSSE3\")\n\n#CHECK_C_COMPILER_FLAG(${CMAKE_TRY_ICC_FLAGS} INTEL_CC_FLAGS)\n\n#IF(INTEL_CC_FLAGS)\n\n#  SET(HAVE_SSE3 1)\n\n#  IF(NOT SSE_OPT_SET)\n\n#    SET(INTEL_OPTS \"${INTEL_OPTS} ${CMAKE_TRY_ICC_FLAGS}\")\n\n#    SET(SSE_OPT_SET TRUE)\n\n#  ENDIF(NOT SSE_OPT_SET)\n\n#ENDIF(INTEL_CC_FLAGS)\n\n#\n\n#SET(CMAKE_TRY_ICC_FLAGS \"-xSSE2\")\n\n#CHECK_C_COMPILER_FLAG(${CMAKE_TRY_ICC_FLAGS} INTEL_CC_FLAGS)\n\n#IF(INTEL_CC_FLAGS)\n\n#  SET(HAVE_SSE2 1)\n\n#  IF(NOT SSE_OPT_SET)\n\n#    SET(INTEL_OPTS \"${INTEL_OPTS} ${CMAKE_TRY_ICC_FLAGS}\")\n\n#    SET(SSE_OPT_SET TRUE)\n\n#  ENDIF(NOT SSE_OPT_SET)\n\n#ENDIF(INTEL_CC_FLAGS)\n\n#\n\n#SET(CMAKE_TRY_ICC_FLAGS \"-xSSE\")\n\n#CHECK_C_COMPILER_FLAG(${CMAKE_TRY_ICC_FLAGS} INTEL_CC_FLAGS)\n\n#IF(INTEL_CC_FLAGS)\n\n#  SET(HAVE_SSE 1)\n\n#  IF(NOT SSE_OPT_SET)\n\n#    SET(INTEL_OPTS \"${INTEL_OPTS} ${CMAKE_TRY_ICC_FLAGS}\")\n\n#    SET(SSE_OPT_SET TRUE)\n\n#  ENDIF(NOT SSE_OPT_SET)\n\n#ENDIF(INTEL_CC_FLAGS)\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#if($ENV{CXX} matches cmpi)\n\n#  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -ccl icpc\")\n\n#endif($ENV{CXX} matches cmpi)\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#IF(${CMAKE_SYSTEM_PROCESSOR} matches \"unknown\")\n\n#  IF(CPU_IDENTITY matches \"E5\")\n\n#    set(CMAKE_CXX_FLAGS \"${INTEL_OPTS} -xT \")\n\n#    set(CMAKE_C_FLAGS \"${INTEL_OPTS} -xT\")\n\n#  ELSE(CPU_IDENTITY matches \"E5\")\n\n#  set(CMAKE_CXX_FLAGS \"${INTEL_OPTS} -xP \")\n\n#  set(CMAKE_C_FLAGS \"${INTEL_OPTS} -xP\")\n\n#  endif(CPU_IDENTITY matches \"E5\")\n\n#  set(HAVE_SSE 1)\n\n#  set(HAVE_SSE2 1)\n\n#  set(HAVE_SSE3 1)\n\n#  set(HAVE_SSSE3 1)\n\n#  #set(USE_PREFETCH 1)\n\n#  #set(PREFETCH_AHEAD 12)\n\n#endif(${CMAKE_SYSTEM_PROCESSOR} matches \"unknown\")\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#ifc -> ifort\n\n#set(FORTRAN_LIBS \" -lifcore -lifport\")\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "######################################################\n\n#KCC needs to be used to build static libraries\n\n######################################################\n\n#set(CMAKE_AR xild) \n\n#set(CMAKE_CXX_CREATE_STATIC_LIBRARY \"<CMAKE_AR> -lib -o <TARGET> <OBJECTS>\")\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "test/performance-regression/full-apps/qmcpack/CMake/KCCCompilers.cmake" : {
      "ObjectId" : "7c9b2f641fa83dcf00325f965e4a281a424ee8c3",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#KCC or guidec++ with IBM Visual Age C/C++ backends\n\n#JK cannot access other platforms with KCC or guidec++\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#####################################################\n\n#guidec++ only works with -q64\n\n#####################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "######################################################\n\n#KCC needs to be used to build static libraries\n\n######################################################\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/performance-regression/full-apps/qmcpack/CMake/UseLATEX.cmake" : {
      "ObjectId" : "e7f5c0d80246471e5838efbfcd1d06f3509ff384",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# File: UseLATEX.cmake\n\n# CMAKE commands to actually use the LaTeX compiler\n\n# Version: 1.7.0\n\n# Author: Kenneth Moreland (kmorel at sandia dot gov)\n\n#\n\n# Copyright 2004 Sandia Corporation.\n\n# Under the terms of Contract DE-AC04-94AL85000, there is a non-exclusive\n\n# license for use of this work by or on behalf of the\n\n# U.S. Government. Redistribution and use in source and binary forms, with\n\n# or without modification, are permitted provided that this Notice and any\n\n# statement of authorship are reproduced on all copies.\n\n#\n\n# The following MACROS are defined:\n\n#\n\n# ADD_LATEX_DOCUMENT(<tex_file>\n\n#                       [BIBFILES <bib_files>]\n\n#                       [INPUTS <input_tex_files>]\n\n#                       [IMAGE_DIRS] <image_directories>\n\n#                       [IMAGES] <image_files>\n\n#                       [CONFIGURE] <tex_files>\n\n#                       [DEPENDS] <tex_files>\n\n#                       [USE_INDEX] [USE_GLOSSARY]\n\n#                       [DEFAULT_PDF] [MANGLE_TARGET_NAMES])\n\n#       Adds targets that compile <tex_file>.  The latex output is placed\n\n#       in LATEX_OUTPUT_PATH or CMAKE_CURRENT_BINARY_DIR if the former is\n\n#       not set.  The latex program is picky about where files are located,\n\n#       so all input files are copied from the source directory to the\n\n#       output directory.  This includes the target tex file, any tex file\n\n#       listed with the INPUTS option, the bibliography files listed with\n\n#       the BIBFILES option, and any .cls, .bst, and .clo files found in\n\n#       the current source directory.  Images found in the IMAGE_DIRS\n\n#       directories or listed by IMAGES are also copied to the output\n\n#       directory and coverted to an appropriate format if necessary.  Any\n\n#       tex files also listed with the CONFIGURE option are also processed\n\n#       with the CMake CONFIGURE_FILE command (with the @ONLY flag.  Any\n\n#       file listed in CONFIGURE but not the target tex file or listed with\n\n#       INPUTS has no effect. DEPENDS can be used to specify generated files\n\n#       that are needed to compile the latex target.\n\n#\n\n#       The following targets are made:\n\n#               dvi: Makes <name>.dvi\n\n#               pdf: Makes <name>.pdf using pdflatex.\n\n#               safepdf: Makes <name>.pdf using ps2pdf.  If using the default\n\n#                       program arguments, this will ensure all fonts are\n\n#                       embedded and no lossy compression has been performed\n\n#                       on images.\n\n#               ps: Makes <name>.ps\n\n#               html: Makes <name>.html\n\n#               auxclean: Deletes <name>.aux.  This is sometimes necessary\n\n#                       if a LaTeX error occurs and writes a bad aux file.\n\n#\n\n#       If the argument MANGLE_TARGET_NAMES is given, then each of the\n\n#       target names above will be mangled with the <tex_file> name.  This\n\n#       is to make the targets unique if ADD_LATEX_DOCUMENT is called for\n\n#       multiple documents.  If the argument USE_INDEX is given, then\n\n#       commands to build an index are made.  If the argument USE_GLOSSARY\n\n#       is given, then commands to build a glossary are made.\n\n#\n\n# History:\n\n#\n\n# 1.7.0 Added DEPENDS options (thanks to Theodore Papadopoulp).\n\n#\n\n# 1.6.1 Ported the makeglossaries command to CMake and embedded the port\n\n#       into UseLATEX.cmake.\n\n#\n\n# 1.6.0 Allow the use of the makeglossaries command.  Thanks to Oystein\n\n#       S. Haaland for the patch.\n\n#\n\n# 1.5.0 Allow any type of file in the INPUTS lists, not just tex file\n\n#       (suggested by Eric Noulard).  As a consequence, the ability to\n\n#       specify tex files without the .tex extension is removed.  The removed\n\n#       function is of dubious value anyway.\n\n#\n\n#\tWhen copying input files, skip over any file that exists in the\n\n#\tbinary directory but does not exist in the source directory with the\n\n#\tassumption that these files were added by some other mechanism.  I\n\n#\tfind this useful when creating large documents with multiple\n\n#\tchapters that I want to build separately (for speed) as I work on\n\n#\tthem.  I use the same boilerplate as the starting point for all\n\n#\tand just copy it with different configurations.  This was what the\n\n#\tseparate ADD_LATEX_DOCUMENT method was supposed to originally be for.\n\n#\tSince its external use is pretty much deprecated, I removed that\n\n#\tdocumentation.\n\n#\n\n# 1.4.1 Copy .sty files along with the other class and package files.\n\n#\n\n# 1.4.0 Added a MANGLE_TARGET_NAMES option that will mangle the target names.\n\n#\n\n#       Fixed problem with copying bib files that became apparent with\n\n#       CMake 2.4.\n\n#\n\n# 1.3.0 Added a LATEX_OUTPUT_PATH variable that allows you or the user to\n\n#       specify where the built latex documents to go.  This is especially\n\n#       handy if you want to do in-source builds.\n\n#\n\n#       Removed the ADD_LATEX_IMAGES macro and absorbed the functionality\n\n#       into ADD_LATEX_DOCUMENT.  The old interface was always kind of\n\n#       clunky anyway since you had to specify the image directory in both\n\n#       places.  It also made supporting LATEX_OUTPUT_PATH problematic.\n\n#\n\n#       Added support for jpeg files.\n\n#\n\n# 1.2.0 Changed the configuration options yet again.  Removed the NO_CONFIGURE\n\n#       Replaced it with a CONFIGURE option that lists input files for which\n\n#       configure should be run.\n\n#\n\n#       The pdf target no longer depends on the dvi target.  This allows you\n\n#       to build latex documents that require pdflatex.  Also added an option\n\n#       to make the pdf target the default one.\n\n#\n\n# 1.1.1 Added the NO_CONFIGURE option.  The @ character can be used when\n\n#       specifying table column separators.  If two or more are used, then\n\n#       will incorrectly substitute them.\n\n#\n\n# 1.1.0 Added ability include multiple bib files.  Added ability to do copy\n\n#       sub-tex files for multipart tex files.\n\n#\n\n# 1.0.0 If both ps and pdf type images exist, just copy the one that\n\n#       matches the current render mode.  Replaced a bunch of STRING\n\n#       commands with GET_FILENAME_COMPONENT commands that were made to do\n\n#       the desired function.\n\n#\n\n# 0.4.0 First version posted to CMake Wiki.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#############################################################################\n\n# Find the location of myself while originally executing.  If you do this\n\n# inside of a macro, it will recode where the macro was invoked.\n\n#############################################################################\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#############################################################################\n\n# Generic helper macros\n\n#############################################################################\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Helpful list macros.\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Parse macro arguments.\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Match the contents of a file to a regular expression.\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The FILE STRINGS command would be a bit better, but it's not supported on\n\n# older versions of CMake.\n",
        "Line" : 187,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#############################################################################\n\n# Macros that perform processing during a LaTeX build.\n\n#############################################################################\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#############################################################################\n\n# Helper macros for establishing LaTeX build.\n\n#############################################################################\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Just holds extensions for known image types.  They should all be lower case.\n",
        "Line" : 348,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Makes custom commands to convert a file to a particular type.\n",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# As a shortcut, we can just copy the file.\n",
        "Line" : 400,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# Check to see if there is another input file of the appropriate type.\n",
        "Line" : 410,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# If we still need to convert, do it.\n",
        "Line" : 420,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Adds custom commands to process the given files for dvi and pdf builds.\n\n# Adds the output files to the given variables (does not replace).\n",
        "Line" : 433,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Check to see if we need to downsample the image.\n",
        "Line" : 442,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "# Make sure the output directory exists.\n",
        "Line" : 452,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# Do conversions for dvi.\n",
        "Line" : 456,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# Do conversions for pdf.\n",
        "Line" : 460,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# Special case: output exists but input does not.  Assume that it was\n\n# created elsewhere and skip the input file copy.\n",
        "Line" : 513,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "#############################################################################\n\n# Commands provided by the UseLATEX.cmake \"package\"\n\n#############################################################################\n",
        "Line" : 521,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Parses arguments to ADD_LATEX_DOCUMENT and ADD_LATEX_TARGETS and sets the\n\n# variables LATEX_TARGET, LATEX_IMAGE_DIR, LATEX_BIBFILES, LATEX_DEPENDS, and\n\n# LATEX_INPUTS.\n",
        "Line" : 531,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# The first argument is the target latex file.\n",
        "Line" : 542,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Backward compatibility between 1.6.0 and 1.6.1.\n",
        "Line" : 555,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Set up target names.\n",
        "Line" : 565,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# For each directory in LATEX_IMAGE_DIRS, glob all the image files and\n\n# place them in LATEX_IMAGES.\n",
        "Line" : 582,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "#############################################################################\n\n# Actually do stuff\n\n#############################################################################\n",
        "Line" : 751,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Must be part of the actual configure (included from CMakeLists.txt).\n",
        "Line" : 768,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 28
    },
    "test/performance-regression/full-apps/qmcpack/CMake/addAbinit.cmake" : {
      "ObjectId" : "0d15125d84af98ff2a0b3948678ed5ea90ba87d8",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#EXEC_PROGRAM(rm ${ABINITDIR} ARGS -f Makefile libabinit.a)\n\n#CONFIGURE_FILE(${ABINITDIR}/Makefile.in ${ABINITDIR}/Makefile)\n\n#EXEC_PROGRAM(make ${ABINITDIR} ARGS -f Makefile)\n\n#EXEC_PROGRAM(cp ${ABINITDIR} ARGS \"libabinit.a ${LIBRARY_OUTPUT_PATH}/\")\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/performance-regression/full-apps/qmcpack/CMake/addMPI.cmake" : {
      "ObjectId" : "eb301d11447f9c98e0a430815aaa3ee6d3f1f273",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# this module look sfor MPI (Message Passing Interface) support\n\n# it will define the following values\n\n#\n\n# MPI_INCLUDE_PATH = where mpi.h can be found\n\n# MPI_LIBRARY      = the library to link against (mpi mpich etc)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#first, check if vmi is installed: typical linux clusters at NCSA\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#IF(MPI_LIBRARY)\n\n#  SET(MPI_LIBRARY ${MPI_LIBRARY} \"-lvmi -ldl -lpthread\")\n\n#ENDIF(MPI_LIBRARY)\n",
        "Line" : 39,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#vmi is not found. Search for the conventional mpi installation\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "test/performance-regression/full-apps/qmcpack/CMake/ctest_script.cmake" : {
      "ObjectId" : "5f38e875dc7f568723518343499552dbc1636bec",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ctest script for building, running, and submitting the test results \n\n# Usage:  ctest -s script,build\n\n#   build = debug / optimized / valgrind\n\n# Note: this test will use use the number of processors defined in the variable N_PROCS,\n\n#   the enviornmental variable N_PROCS, or the number of processors availible (if not specified)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set platform specific variables\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Get the source directory based on the current directory\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Check that we specified the build type to run\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set the number of processors\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Linux:\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Mac:\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Windows:\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Set basic variables\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Set valgrind options\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Clear the binary directory and create an initial cache\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Set the configure options\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Configure and run the tests\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Run the configure, build and tests\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Submit the results to oblivion\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Clean up\n\n# exec_program(\"make distclean\")\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "test/performance-regression/full-apps/qmcpack/CMake/macros.cmake" : {
      "ObjectId" : "c9ec744c9d8695efb7389f25f1b66e6da5118d27",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Function to copy a directory\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Macro to add the dependencies and libraries to an executable\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add the package dependencies\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Add a provisional test\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Change the output directory so we do not install in bin\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Check if we actually want to add the test\n\n# SET( EXCLUDE_TESTS_FROM_ALL 1 )\n\n# Check if test has already been added\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# The target has not been added\n",
        "Line" : 42,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# The correct target has already been added\n",
        "Line" : 52,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# The correct target has already been added\n",
        "Line" : 54,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# The correct target has already been added\n",
        "Line" : 56,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# The correct target has already been added\n",
        "Line" : 58,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# We are trying to add 2 different tests with the same name\n",
        "Line" : 60,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Macro to create the test name\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# STRING(REGEX REPLACE \"--\" \"-\" TESTNAME ${TESTNAME} )\n",
        "Line" : 74,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Add a executable as a test\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Add a executable as a weekly test\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Add a executable as a parallel test\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Add a executable as a parallel 1, 2, 4 processor test\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Add a executable as a parallel 8, 12, 16 processor test\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Add a parallel test that may use both MPI and threads\n\n# This allows us to correctly compute the number of processors used by the test\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Runs qmcapp\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "test/performance-regression/full-apps/qmcpack/CMakeLists.txt" : {
      "ObjectId" : "1533447715ce7ea9025e26fc9025b1730a6f41a0",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#####################################################\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "######################################################################\n\n# Version \n\n######################################################################\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "######################################################################\n\n# CTest \n\n######################################################################\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "######################################################################\n\n# Build level\n\n######################################################################\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "######################################################################\n\n#define the paths for library and executable for out-of-soruce compilation\n\n######################################################################\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "######################################################################\n\n# build include and library paths required for the projects\n\n# For XYZ library, set an environment as\n\n# export XYZ_HOME='root-of-the-library'\n\n# XYZ_HOME/include\n\n# XYZ_HOME/lib\n\n# IF XYZ library is found, XYZ_FOUND is set to true\n\n#\n\n# find_package is used with cmake 2.8 and higher\n\n######################################################################\n\n#if(APPLE)\n\n#  set(QMC_INCLUDE_PATHS ${QMC_INCLUDE_PATHS} /sw/include)\n\n#  set(QMC_LIBRARY_PATHS ${QMC_LIBRARY_PATHS} /sw/lib)\n\n#endif(APPLE)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "######################################################################\n\n# Set the compiler-time parameters\n\n# OHMMS_DIM =  dimension of the problem\n\n# OHMMS_INDEXTYPE = type of index\n\n# OHMMS_PRECISION  = base precision, float, double etc\n\n# QMC_COMPLEX = true if using complex wavefunctions\n\n# QMC_MPI =  enable MPI \n\n# QMC_OMP = enable OMP \n\n# QMC_BITS = 32/64 bit\n\n######################################################################\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "######################################################################\n\n# enable MPI and OPNEMP  if possible\n\n######################################################################\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "######################################################################\n\n# set debug printout\n\n# DEBUG_PSIBUFFER_ON keep track buffer's locator\n\n######################################################################\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "######################################################################\n\n# check environment variables \n\n# todo: disallow environment\n\n######################################################################\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "######################################################################\n\n# Standard test\n\n######################################################################\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "######################################################################\n\n# add macros to compile einspline if necessary\n\n######################################################################\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "######################################################################\n\n# Build options\n\n# QMC_BUILD_STATIC build static/dynamic  libraries\n\n# BUILD_QMCTOOLS   build utility programs\n\n# BUILD_SANDBOX    build test programs\n\n# MPIP_PROFILE     profile mpi performance\n\n######################################################################\n\n#SET(BUILD_QMCTOOLS 1 CACHE BOOL \"Build tools for QMCPACK\")\n\n#SET(BUILD_SANDBOX 0 CACHE BOOL \"Build snadbox for testing\")\n\n#SET(MPIP_PROFILE 0 CACHE BOOL \"Build with mpip for mpi profile\")\n\n#SET(BUILD_QMCTOOLS 1)\n\n#SET(BUILD_SANDBOX 0)\n\n#SET(MPIP_PROFILE 0)\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "######################################################################\n\n# Performance-related macros\n\n# QMC_SK_USE_RECURSIVE enable/disable recursive evalaution of SK\n\n######################################################################\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "######################################################################\n\n# FIXED PARAMETERS for test and legacy reasons\n\n# DO NOT TOUCH THESE\n\n# QMC_ORTHO  = 0 for general unit cell, 1 for orthogonal cells\n\n# QMC_FASTWALKER  = true, when operation is faster for each walker\n\n######################################################################\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "######################################################################\n\n#list of options to determine libraries. First, try to use libraries available\n\n#FindXYZ.cmake will set the values if successful\n\n######################################################################\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "######################################################\n\n# Directory where customize cmake files reside\n\n######################################################\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "######################################################\n\n# set ADIOS flags \n\n######################################################\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "######################################################\n\n# Get the current SVN version\n\n######################################################\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Will be edited on export, do not edit. Exact match required.\n",
        "Line" : 228,
        "CharPositionInLine" : 31
      },
      "20" : {
        "Text" : "# Will be edited on export, do not edit. Exact match required.\n",
        "Line" : 229,
        "CharPositionInLine" : 48
      },
      "21" : {
        "Text" : "# Avoid using svn with exported files\n",
        "Line" : 232,
        "CharPositionInLine" : 43
      },
      "22" : {
        "Text" : "######################################################\n\n#COMPILER choose one of the cmake files to customize the compiler options\n\n#If nothing is chosen, default settings by cmake will  be used.\n\n#If the automatic detection does not work, comment out everything \n\n#upto COMPILER MANUAL SELECTION and use one of the customized cmake file.\n\n######################################################\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "######################################################\n\n# DO NOT MODIFY BELOW\n\n# If you like to customize your build, create a toolchain as instructed\n\n######################################################\n\n######################################################\n\n# now set the compiler flags and the macros in src/config.h\n\n######################################################\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "######################################################\n\n# Try to identify CPU identity\n\n######################################################\n",
        "Line" : 276,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "#------------------------------------\n\n# On Jaguar use CrayXT.cmake\n\n#------------------------------------\n",
        "Line" : 282,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "#------------------------------------\n\n# Check if using IBM compilers\n\n#------------------------------------\n",
        "Line" : 293,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "#------------------------------------\n\n# Check if using Intel compilers\n\n#------------------------------------\n",
        "Line" : 301,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "#------------------------------------\n\n# other compilers, e.g., mpicxx \n\n# most likely *unix with gnu or intel compilers\n\n# using \"-restrict\" option to find out if intel compilers are backend.\n\n#------------------------------------\n",
        "Line" : 309,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "#-------------------------------------------------------------------\n\n#  check MPI installation\n\n#-------------------------------------------------------------------\n",
        "Line" : 327,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "## mpi compilers\n",
        "Line" : 331,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "#LINK_LIBRARIES(${MPI_LIBRARY})\n",
        "Line" : 350,
        "CharPositionInLine" : 10
      },
      "32" : {
        "Text" : "#-------------------------------------------------------------------\n\n# check lapack/blas\n\n#-------------------------------------------------------------------\n",
        "Line" : 360,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# setup ctest variables\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "####################################################################\n\n#First check the required libraries. Abort if these are not found.\n\n#Changed the fall-back versions to use similar conventions to 2.8.0 and higher\n\n####################################################################\n\n# use customized cmake file for boost so that we can deal with multiple\n\n# installataions\n\n# list of libraries to be linked with the main applications using I/O\n",
        "Line" : 390,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#IF(ZLIB_FOUND)\n\n#  SET(QMC_UTIL_LIBS ${QMC_UTIL_LIBS} ${ZLIB_LIBRARIES})\n\n#ENDIF(ZLIB_FOUND)\n",
        "Line" : 421,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "#MESSAGE(FATAL_ERROR \"Require boost 1.33.x or higher. Set BOOST_HOME\")\n",
        "Line" : 439,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "#set(HAVE_CUDA 0)\n",
        "Line" : 442,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#\n",
        "Line" : 449,
        "CharPositionInLine" : 78
      },
      "39" : {
        "Text" : "#INCLUDE(${PROJECT_CMAKE}/FindPkgConfig.cmake)\n\n##################################################################\n\n# TODO:use profile tools\n\n##################################################################\n\n#IF(MPIP_PROFILE)\n\n#  LINK_LIBRARIES(\"/usr/apps/tools/mpip/lib/cmpi/libmpiP.a\")\n\n#  LINK_LIBRARIES(\"/usr/lib/libbfd.a\")\n\n#  LINK_LIBRARIES(\"/usr/lib/libiberty.a\")\n\n#ENDIF(MPIP_PROFILE)\n\n#if(ENABLE_TAU_PROFILE)\n\n#  INCLUDE(${PROJECT_CMAKE}/FindTau.cmake)\n\n#endif(ENABLE_TAU_PROFILE)\n\n#    #add tau stuff\n\n#    IF(FOUND_TAU)\n\n#      ADD_DEFINITIONS(\n\n#        -DTAU_MPI\n\n#        -DTAU_MPI_THREADED\n\n#        -DTAU_MPIGREQUEST\n\n#        -DTAU_MPIDATAREP\n\n#        -DTAU_MPIERRHANDLER\n\n#        -DTAU_MPIATTRFUNCTION\n\n#        -DTAU_MPITYPEEX\n\n#        -DTAU_MPIADDERROR\n\n#      )\n\n#      #build libtau\n\n#      subdirs(src/tau)\n\n#      LINK_LIBRARIES(tau)\n\n#    ENDIF(FOUND_TAU)\n\n#IF(FOUND_TAU)\n\n#  INCLUDE_DIRECTORIES(${TAU_INCLUDE_DIR})\n\n#  ADD_DEFINITIONS (-DPROFILING_ON\n\n#      -DTAU_STDCXXLIB\n\n#      -DTAU_DOT_H_LESS_HEADERS\n\n#      -DTAU_CALLPATH\n\n#      -DTAU_LARGEFILE64_SOURCE\n\n#      -DTAU_BFD\n\n#      )\n\n#  if(ENABLE_OPENMP)\n\n#    ADD_DEFINITIONS(-DTAU_OPENMP)\n\n#  endif(ENABLE_OPENMP)\n\n#ENDIF(FOUND_TAU)\n",
        "Line" : 456,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "######################################################\n\n# Add optional macros\n\n######################################################\n",
        "Line" : 498,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#include qmcpack/src build/src\n",
        "Line" : 508,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "######################################################################\n\n# Manage Einspline library\n\n# - toolchain file can set \n\n# - check if libeinspline can be found in $EINSPLINE_HOME/include and\n\n# $EINSPLINE_HOME/lib\n\n# - if not found, build it from the source directory in $EINSPLINE_HOME\n\n# - if everything fails, do not use it\n\n######################################################################\n",
        "Line" : 511,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#if(HAVE_EINSPLINE_EXT)\n\n#  set(HAVE_EINSPLINE 0)\n\n#  INCLUDE(${PROJECT_CMAKE}/FindEinspline.cmake)\n\n#  IF(EINSPLINE_FOUND)\n\n#    INCLUDE_DIRECTORIES(${EINSPLINE_INCLUDE_DIR})\n\n#    SET(QMC_UTIL_LIBS ${EINSPLINE_LIBRARIES} ${QMC_UTIL_LIBS})\n\n#    set(build_einspline 0)\n\n#  endif()\n\n#endif()\n",
        "Line" : 521,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#include(ExternalProject)\n\n#  set(einspline_PREFIX \"${CMAKE_CURRENT_BINARY_DIR}/einspline\")\n\n#  set(einspline_INSTALL_DIR \"${CMAKE_CURRENT_BINARY_DIR}/einspline\")\n\n#  set(einspline_CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=${einspline_INSTALL_DIR})\n\n#ExternalProject_Add(\n\n#   einspline\n\n#   SVN_REPOSITORY http://qmctools.googlecode.com/svn/ext-packages/einspline\n\n#   )\n\n#    INSTALL_DIR ${einspline_INSTALL_DIR}\n\n#    CMAKE_ARGS ${einspline_CMAKE_ARGS}\n\n#    )\n\n#  find_package(einspline REQUIRED)\n\n#  set(HAVE_EINSPLINE 1)\n\n#######################################################################\n\n## Manage GTK+ and GTKMM packages for GUI\n\n## search headers and libraries\n\n##   1) -lXYZ-${XYZ_VERSION} \n\n##   2) -lXYZ\n\n## example: -lgtk-${GTK_VERSION} | -lgtk\n\n#######################################################################\n\n#SET(GTK_VERSION 2.0)\n\n#SET(PANGO_VERSION 1.0)\n\n#\n\n#SET(GTKMM_VERSION 2.4)\n\n#SET(PANGOMM_VERSION 1.4)\n\n#SET(SIGCPP_VERSION 2.0)\n\n#IF(ENABLE_GTK_GUI)\n\n#  INCLUDE(${PROJECT_CMAKE}/FindGTK.cmake)\n\n#  #THIS SHOULD GO TO the directory where GUI is built\n\n#  IF(GTKMM_FOUND)\n\n#   INCLUDE_DIRECTORIES(${GTKMM_INCLUDE_DIR})\n\n#   LINK_LIBRARIES(${GTKMM_LIBRARIES})\n\n#  ENDIF(GTKMM_FOUND)\n\n#ENDIF(ENABLE_GTK_GUI)\n",
        "Line" : 536,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "###################################################\n\n# Add user extra flags\n\n###################################################\n",
        "Line" : 572,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "###################################################\n\n# Done searching libraries. Start building qmcpack\n\n###################################################\n",
        "Line" : 581,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "####################################################################\n\n# add definitions\n\n#  -DH5_USE_16_API for HDF5\n\n#  -DMPICH_SKIP_MPICXX : disable C++ binding of MPICH\n\n####################################################################\n",
        "Line" : 587,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#ADD_DEFINITIONS(-DDISABLE_WS_CELL)\n",
        "Line" : 602,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "#########################\n\n# add definitions for adios profile\n\n# add definitions for adios verification\n\n########################\n",
        "Line" : 607,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "#ADD_DEFINITIONS(-DIO_PROFILE)\n\n#ADD_DEFINITIONS(-DADIOS_VERIFY)\n",
        "Line" : 612,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "#ADD_CUSTOM_TARGET(print_settings ALL\n\n#      ${CMAKE_COMMAND} -E echo \"Print build settings\"\n\n#          VERBATIM)\n\n#\n\n#add_custom_command(TARGET print_settings\n\n#  POST_BUILD\n\n#  COMMAND svn info ${qmcpack_SOURCE_DIR})\n\n#\n\n#file(APPEND ${qmcpack_BINARY_DIR}/bin/qmcpack.settings ${print_settings})\n",
        "Line" : 619,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 52
    },
    "test/performance-regression/full-apps/qmcpack/docs/CMakeLists.txt" : {
      "ObjectId" : "de6d7c25500050fbfdeec00553ec95a707dbc42a",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/performance-regression/full-apps/qmcpack/docs/Makefile" : {
      "ObjectId" : "176ac315d460d80103aaca384705593350a62dd3",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/performance-regression/full-apps/qmcpack/docs/tex/Makefile" : {
      "ObjectId" : "3495761e82c4bbadbec2671ba0398b03dc7262f4",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/performance-regression/full-apps/qmcpack/docs/usrdoc/Makefile" : {
      "ObjectId" : "9314a9d3c0c3be5917a177a19a3ced8bd693e4e4",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/performance-regression/full-apps/qmcpack/src/AtomicHF/CMakeLists.txt" : {
      "ObjectId" : "6e3e4aaaa96ddcaed6076bc2c90970ae9845004f",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#CONFIGURE_FILE(${hf_SOURCE_DIR}/../Configuration.h.in\n\n#              ${hf_SOURCE_DIR}/../Configuration.h)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/performance-regression/full-apps/qmcpack/src/AtomicHF/Makefile" : {
      "ObjectId" : "6e8d478061750242bb40e228c03252967d258d1e",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##########################################################\n\n# OHMMS application makefile stub for suite: linuxicc\n\n# Created Sat Mar 29 15:39:36 CST 2003 by jnkim on bach\n\n# Generated by configure --arch linuxicc --tb\n\n##########################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#CDIR = ../Common/IO\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#PASS_DEFS = \"CC=${CXX} -c\" \"LD=${CXX}\" \"CCFLAGS=${CXXFLAGSAPP}\" \"DEFS=${DEFS}\" \"INCL=${OHMMSINC}\" \"LIBS=${OHMMSLIBS}\"\n\n#MAKE_ALL = $(MAKE) all $(PASS_DEFS)\n\n#MAKE_NEWMAKE = $(MAKE) -f template.make newmake $(PASS_DEFS)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Common_obj:\tCommon_newmake\n\n#\tcd ../Common; ${MAKE_ALL}\n\n#Common_newmake:\n\n#\tcd ../Common; $(MAKE_NEWMAKE)\n\n#Common_clean:\n\n#\tcd ../Common; ${MAKE} clean\n\n#clean:\n\n#\trm -rf *.o hartreefock.x\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#include $(HFDIR)/src/Particle/Makefile\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#  ---------------------------------------------------\n\n#  $RCSfile$Author: jnkim $\n\n#  $Revision: 5857 $Date: 2003/08/27 14:19:23 $\n\n#  ---------------------------------------------------\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "test/performance-regression/full-apps/qmcpack/src/CMakeLists.txt" : {
      "ObjectId" : "05446152969275f4ea494a14ca59d975bdd9ad14",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####################################\n\n# create libqmcutil\n\n####################################\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#IF(QMC_BUILD_STATIC)\n\n#  ADD_LIBRARY(qmcutil STATIC ${UTILITIES})\n\n#ELSE(QMC_BUILD_STATIC)\n\n#  ADD_LIBRARY(qmcutil SHARED ${UTILITIES})\n\n#ENDIF(QMC_BUILD_STATIC)\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "####################################\n\n# create liboompi\n\n####################################\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "####################################\n\n# create libqmcbase \n\n####################################\n",
        "Line" : 85,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# IF(QMC_BUILD_LEVEL GREATER 2)\n\n#   IF(NOT QMC_COMPLEX)\n\n#     SET(PARTICLE ${PARTICLE} Particle/Bead_ParticleSet.cpp )\n\n#   ENDIF(NOT QMC_COMPLEX)\n\n# ENDIF(QMC_BUILD_LEVEL GREATER 2)\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#IF(QMC_BUILD_STATIC)\n\n#  ADD_LIBRARY(qmcbase STATIC ${PARTICLE}  ${PARTICLEIO})\n\n#ELSE(QMC_BUILD_STATIC)\n\n#  ADD_LIBRARY(qmcbase SHARED ${PARTICLE}  ${PARTICLEIO})\n\n#ENDIF(QMC_BUILD_STATIC)\n",
        "Line" : 138,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#SUBDIRS(einspline)\n",
        "Line" : 144,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#############################\n\n# Creating ADIOS\n\n#############################\n",
        "Line" : 146,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#if(HAVE_ADIOS)\n",
        "Line" : 152,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#endif(HAVE_ADIOS)\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#IF(BUILD_QMCTOOLS)\n",
        "Line" : 168,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#ENDIF(BUILD_QMCTOOLS)\n",
        "Line" : 170,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "test/performance-regression/full-apps/qmcpack/src/Makefile.am" : {
      "ObjectId" : "e7aba5873adc03d4f68497f2cfda4fc6b465ad4a",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#add mpi-related sources and oompi directory for --enable-mpi=yes\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# build the base library used by any application\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#important: build order,\n\n#  i) current directory for the base libraries\n\n# ii) application-dependent libraries: FortranLib, OOMPI, SlaterKosterTB\n\n#iii) the main application: OhmmsApp\n\n# iv) ready to install the header files and libraries\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/performance-regression/full-apps/qmcpack/src/Message/Makefile" : {
      "ObjectId" : "0547159820f45fc7440bc1c11771545fee14498d",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/performance-regression/full-apps/qmcpack/src/OOMPI/CMakeLists.txt" : {
      "ObjectId" : "86cdf582977e813c2bfdd96f197d498966c0a88f",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/performance-regression/full-apps/qmcpack/src/OOMPI/Makefile" : {
      "ObjectId" : "f0ba76c2372af47e134ce4ddf986cfc1d91aa703",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# CMAKE generated file: DO NOT EDIT!\n\n# Generated by \"Unix Makefiles\" Generator, CMake Version 2.8\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Default target executed when no arguments are given to make.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Special targets provided by cmake.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Disable implicit rules so canoncical targets will work.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Remove some rules from gmake that .SUFFIXES does not remove.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Suppress display of executed commands.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# A target that is always out of date.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#=============================================================================\n\n# Set environment variables for the build.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# The shell in which to execute make rules.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# The CMake executable.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# The command to remove a file.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# The program to use to edit the cache.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# The top-level source directory on which CMake was run.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# The top-level build directory on which CMake was run.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#=============================================================================\n\n# Targets provided globally by CMake.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Special rule for the target edit_cache\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Special rule for the target edit_cache\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Special rule for the target rebuild_cache\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Special rule for the target rebuild_cache\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# The main all target\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# The main clean target\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# The main clean target\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Prepare targets for installation.\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Prepare targets for installation.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# clear depends\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Convenience name for target.\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Convenience name for target.\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# fast build rule for target.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# target to build an object file\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# target to build an object file\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# target to build an object file\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# target to build an object file\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# target to build an object file\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# target to build an object file\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# target to build an object file\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# target to build an object file\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# target to build an object file\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# target to build an object file\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 260,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# target to build an object file\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# target to build an object file\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# target to build an object file\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# target to build an object file\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# target to build an object file\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# target to build an object file\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# target to build an object file\n",
        "Line" : 355,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# target to build an object file\n",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 380,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# target to build an object file\n",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 390,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# target to build an object file\n",
        "Line" : 400,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# Help Target\n",
        "Line" : 415,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "#=============================================================================\n\n# Special targets to cleanup operation of make.\n",
        "Line" : 488,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# Special rule to run CMake to check the build system integrity.\n\n# No rule that depends on this can have commands that come from listfiles\n\n# because they might be regenerated.\n",
        "Line" : 491,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 91
    },
    "test/performance-regression/full-apps/qmcpack/src/OOMPI/Makefile.am" : {
      "ObjectId" : "a21560923f09e46d9fb8766c413192124024881c",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# -*- makefile -*-\n\n#\n\n# Copyright (c) 2002-2003 Indiana University.  All rights reserved.\n\n# Copyright (c) 1996, 1997, 1998, 2000 University of Notre Dame.\n\n#                         All rights reserved.\n\n# \n\n# This file is part of the OOMPI software package.  For license\n\n# information, see the LICENSE file in the top level directory of the\n\n# OOMPI source distribution.\n\n#\n\n# $Id: Makefile.am 642 2005-09-11 18:56:31Z jnkim $\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#INCLUDES\t\t= -I$(top_srcdir)/src \n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/performance-regression/full-apps/qmcpack/src/Particle/Makefile" : {
      "ObjectId" : "e7f29dd80da70fe289fb3e2ca941b1bad59ac9fd",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/performance-regression/full-apps/qmcpack/src/PseudoGen/CMakeLists.txt" : {
      "ObjectId" : "969628f3b3ec178ebcbef75c1f03fe30537d8467",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/performance-regression/full-apps/qmcpack/src/QMCApp/CMakeLists.txt" : {
      "ObjectId" : "fdb81efa173c47255e4028e1cc3236c9bb1b80a1",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####################################\n\n# create libqmc \n\n####################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "####################################\n\n# list of QMC applications\n\n# qmcapp is the only one\n\n####################################\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "####################################\n\n# Add test subdirectory\n\n####################################\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/performance-regression/full-apps/qmcpack/src/QMCApp/Makefile.am" : {
      "ObjectId" : "b93dfe63249761516d12d268f7c087fd8dbed500",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "test/performance-regression/full-apps/qmcpack/src/QMCApp/test/CMakeLists.txt" : {
      "ObjectId" : "ed4cc83b781e459d8b14c2a48ebe49b53607618f",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#############################################################\n\n# Add tests to ctest\n\n#############################################################\n\n# Useful macros to compile and run an executable:\n\n#   ADD_QMC_PROVISIONAL_TEST( EXECFILE )\n\n#       Add a provisional test that will be compiled \n\n#       but not executed\n\n#   ADD_QMC_TEST( EXECFILE ARGS )\n\n#       Add a serial test passing the given args to the test\n\n#   ADD_QMC_TEST_PARALLEL( EXECFILE PROCS ARGS )\n\n#       Add a parallel test with the given number of\n\n#       processors and arguments\n\n#   ADD_QMC_TEST_1_2_4( EXECFILE args )\n\n#       Add a test that will run on 1, 2, and 4 processors\n\n#   ADD_QMC_WEEKLY_TEST( EXECFILE PROCS ARGS )\n\n#       Add a \"WEEKLY\" parallel test with the given number \n\n#       of processors and arguments\n\n#   ADD_QMC_TEST_THREAD_MPI( EXECFILE PROCS THREADS ARGS )\n\n#       Add a parallel test with the given number of threads\n\n#       per processes\n\n# Useful macros to run an existing executable:\n\n#   RUN_QMC_APP( TESTNAME SRC_DIR PROCS THREADS ARGS )\n\n#############################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add a simple hello world test\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Run the deterministic tests (sucess is running without errors)\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Run the statistical tests\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "test/performance-regression/full-apps/qmcpack/src/QMCDrivers/CMakeLists.txt" : {
      "ObjectId" : "88b906c8a31851f126be7a77075593c48b89be7a",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####################################\n\n# QMC Drivers which implements various QMC algorithms\n\n####################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# IF(QMC_BUILD_LEVEL GREATER 2)\n\n#    SET(QMCDRIVERS ${QMCDRIVERS}\n\n#    EE/EEFactory.cpp\n\n#    EE/VMCMultiRenyiOMP.cpp\n\n#    EE/VMCRenyiOMP.cpp\n\n#    EE/QMCRenyiUpdateBase.cpp\n\n#    EE/RenyiUpdatePbyP.cpp\n\n#    )\n\n# ENDIF(QMC_BUILD_LEVEL GREATER 2)\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#     PolymerEstimator.cpp\n\n#     MultiChain.cpp\n\n#     RQMCMultiple.cpp\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#     ../Estimators/CSPolymerEstimator.cpp\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# REMOVE broken stuff\n\n#    ../Estimators/RQMCMultipleEstimator.cpp\n\n#    SpaceWarp.cpp\n\n#    RQMCMultiWarp.cpp\n\n#    VMC/VMCMultipleWarp.cpp\n\n#    VMC/VMCPbyPMultiWarp.cpp\n\n#    CorrelatedSampling/CSUpdateBase.cpp\n\n#    CorrelatedSampling/CSVMC.cpp\n\n#    CorrelatedSampling/CSVMCUpdateAll.cpp\n\n#    CorrelatedSampling/CSVMCUpdatePbyP.cpp\n\n#  IF(NOT QMC_COMPLEX)\n\n#    SET(QMCDRIVERS ${QMCDRIVERS}\n\n#    RQMCMultiplePbyP.cpp\n\n#    )\n\n#  ENDIF(NOT QMC_COMPLEX)\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "####################################\n\n# create libqmc \n\n####################################\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#IF(QMC_BUILD_STATIC)\n\n#  ADD_LIBRARY(qmcdriver STATIC ${QMCDRIVERS})\n\n#ELSE(QMC_BUILD_STATIC)\n\n#  ADD_LIBRARY(qmcdriver SHARED ${QMCDRIVERS})\n\n#ENDIF(QMC_BUILD_STATIC)\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "test/performance-regression/full-apps/qmcpack/src/QMCHamiltonians/CMakeLists.txt" : {
      "ObjectId" : "fe0d8107496f18079b7e111eb43361597672f011",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  FSAtomPseudoPot.cpp\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#    StressPBCAA.cpp\n\n#    StressPBCAB.cpp\n\n#    StressKinetic.cpp\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add research-related sources here\n",
        "Line" : 73,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#IF(HAVE_LIBFFTW)\n\n#  SET(HAMSRCS ${HAMSRCS}\n\n#    DispersionRelation.cpp\n\n#    MomentumDistribution.cpp\n\n#)\n\n#ENDIF(HAVE_LIBFFTW)\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#IF(QMC_BUILD_STATIC)\n\n#  ADD_LIBRARY(qmcham STATIC ${HAMSRCS})\n\n#ELSE(QMC_BUILD_STATIC)\n\n#  ADD_LIBRARY(qmcham SHARED ${HAMSRCS})\n\n#ENDIF(QMC_BUILD_STATIC)\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "test/performance-regression/full-apps/qmcpack/src/QMCTools/CMakeLists.txt" : {
      "ObjectId" : "135736a35ba93f465c1d8ac40415b9b656bcb50f",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# create libmocommon \n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/performance-regression/full-apps/qmcpack/src/QMCTools/ppconvert/Makefile" : {
      "ObjectId" : "57c744a7ddace5690da4b4bccaa57ff0dffcd90f",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#Intel Compiler with MKL build\n\n#CXX = icpc\n\n#CXXFLAGS = -O3 -g -restrict -mkl\n\n#BLASLIBS =\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# g++ build using installed MKL\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# dummy rule to build everything\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# useful macros\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# rules for each executable\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# rules for objects in src/\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# rules for objects in src/common (mostly derived from libcommon)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#$(BUILDDIR)/IOHDF5.o: $(COMMONDIR)/IOHDF5.cc $(COMMON_IO_HEADERS)\n\n#\t$(CXX) $(CXXFLAGS) -I$(COMMONDIR) -I$(HDF_INCLUDEDIR) -c $(COMMONDIR)/IOHDF5.cc -o $@\n\n#$(BUILDDIR)/IOVarHDF5.o: $(COMMONDIR)/IOVarHDF5.cc $(COMMON_IO_HEADERS)\n\n#\t$(CXX) $(CXXFLAGS) -I$(COMMONDIR) -I$(HDF_INCLUDEDIR) -c $(COMMONDIR)/IOVarHDF5.cc -o $@\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "test/performance-regression/full-apps/qmcpack/src/QMCWaveFunctions/CMakeLists.txt" : {
      "ObjectId" : "165f92133f95d73a682f0413ba0bf8e4b1cca395",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "########################\n\n# build jastrows\n\n########################\n\n#common jastrows\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# wavefunctions only availbale to 3-dim problems\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#  IF(QMC_BUILD_LEVEL GREATER 1)\n\n#\n\n#    SET(FERMION_SRCS ${FERMION_SRCS}\n\n#      Bspline3DSetBase.cpp\n\n#      Bspline3DSet.cpp\n\n#      Bspline3DSetTrunc.cpp\n\n#      TricubicBsplineSetBuilder.cpp\n\n#      TricubicBsplineSetBuilder.1.cpp\n\n#      TricubicBsplineSetBuilder.2.cpp\n\n#      PlaneWave/PWBasis.cpp\n\n#      PlaneWave/PWParameterSet.cpp\n\n#      PlaneWave/PWOrbitalBuilder.cpp\n\n#      )\n\n#  ENDIF(QMC_BUILD_LEVEL GREATER 1)\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#only experimental version\n",
        "Line" : 131,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "####################################\n\n# create libqmcwfs\n\n####################################\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#IF(QMC_BUILD_STATIC)\n\n#  ADD_LIBRARY(qmcwfs STATIC ${WFBASE_SRCS} ${JASTROW_SRCS} ${FERMION_SRCS})\n\n#ELSE(QMC_BUILD_STATIC)\n\n#  ADD_LIBRARY(qmcwfs SHARED ${WFBASE_SRCS} ${JASTROW_SRCS} ${FERMION_SRCS})\n\n#ENDIF(QMC_BUILD_STATIC)\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "test/performance-regression/full-apps/qmcpack/src/QMCWaveFunctions/Makefile.am" : {
      "ObjectId" : "44251711c0aa67c3c54d1a47faea1298a8122ab1",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#add mpi-related sources and oompi directory for --enable-mpi=yes\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# build the base library used by any application\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/performance-regression/full-apps/qmcpack/src/SQD/CMakeLists.txt" : {
      "ObjectId" : "f8818e026700dec1953c48fddb519b0d01bbb2cf",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#CONFIGURE_FILE(${hf_SOURCE_DIR}/../Configuration.h.in\n\n#              ${hf_SOURCE_DIR}/../Configuration.h)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#INCLUDE(${CMAKE_ROOT}/Modules/FindOpenGL.cmake)\n\n#INCLUDE(${CMAKE_ROOT}/Modules/FindQt.cmake)\n\n#INCLUDE(${PROJECT_CMAKE}/FindQwt.cmake)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/performance-regression/full-apps/qmcpack/src/SandBox/CMakeLists.txt" : {
      "ObjectId" : "a3f2a36218d3972a04a9559c6a4a849a6b90536b",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#IF(INTEL_MKL)\n\n#  LINK_LIBRARIES(${INTEL_GUIDE_LIBRARY} ${CMAKE_THREAD_LIBS_INIT})\n\n#ELSE(INTEL_MKL)\n\n#  LINK_LIBRARIES(${CMAKE_THREAD_LIBS_INIT})\n\n#ENDIF(INTEL_MKL)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#IF(NOT ${CMAKE_SYSTEM_NAME} MATCHES \"Darwin\")\n\n#  LINK_LIBRARIES(${LAPACK_LIBRARY} ${BLAS_LIBRARY} ${FORTRAN_LIBS})\n\n#ENDIF(NOT ${CMAKE_SYSTEM_NAME} MATCHES \"Darwin\")\n\n#\n\n#IF(HAVE_MPI)\n\n#  ADD_EXECUTABLE(mpi_group group.cpp)\n\n#  TARGET_LINK_LIBRARIES(mpi_group qmc qmcbase qmcutil)\n\n#\n\n#  ADD_EXECUTABLE( observable_helper_test  observable_helper_test.cpp)\n\n#  TARGET_LINK_LIBRARIES( observable_helper_test qmcbase qmcutil)\n\n#ENDIF(HAVE_MPI)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ADD_EXECUTABLE(gnubug gnubug.cpp)\n\n#TARGET_LINK_LIBRARIES(gnubug qmcbase qmcutil)\n\n#FIND_LIBRARY(BOOST_SERIALIZATION_LIBRARY  boost_serialization-il-1_33\n\n#/u/ncsa/jnkim/share/boost/bin/boost/libs/serialization/build/libboost_serialization.so/intel-linux/release/shared-linkable-true/\n\n#)\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#ADD_EXECUTABLE(serialization serialization.cpp)\n\n#TARGET_LINK_LIBRARIES(serialization boost)\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#ADD_EXECUTABLE(cubicspline cubicspline.cpp)\n\n#TARGET_LINK_LIBRARIES(cubicspline qmcbase qmcutil)\n\n#\n\n#ADD_EXECUTABLE(cubicspline1 cubicspline1.cpp)\n\n#TARGET_LINK_LIBRARIES(cubicspline1 qmcbase qmcutil)\n\n#\n\n#ADD_EXECUTABLE(bspline bspline.cpp)\n\n#TARGET_LINK_LIBRARIES(bspline qmc qmcbase)\n\n#\n\n#ADD_EXECUTABLE(tribsplineComplex tribsplineComplex.cpp)\n\n#TARGET_LINK_LIBRARIES(tribsplineComplex qmc qmcbase)\n\n#ADD_EXECUTABLE(tribsplineReal tribsplineReal.cpp)\n\n#TARGET_LINK_LIBRARIES(tribsplineReal qmc qmcbase)\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#INCLUDE(${PROJECT_CMAKE}/FindBlitz++.cmake)\n\n#INCLUDE_DIRECTORIES(${BLITZ_INCLUDE_DIR})\n\n#ADD_EXECUTABLE(bspline_blitz bspline_blitz.cpp)\n\n#TARGET_LINK_LIBRARIES(bspline_blitz qmc qmcbase)\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#ADD_EXECUTABLE(reduce_test reduce_performance_test.cpp)\n\n#TARGET_LINK_LIBRARIES(reduce_test boost)\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "test/performance-regression/full-apps/qmcpack/src/Utilities/Makefile" : {
      "ObjectId" : "adcee13e4b1a3a7fa14280320ddd56c90b26905c",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#Utilities classes\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DO NOT DELETE\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/performance-regression/full-apps/qmcpack/src/benchmark/CMakeLists.txt" : {
      "ObjectId" : "3b894b8d9dcb818346a97dcfe90ed0e0e5a935b3",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ADD_EXECUTABLE( fft1d  fft1d.cpp)\n\n#TARGET_LINK_LIBRARIES(fft1d qmcutil)\n\n#\n\n#ADD_EXECUTABLE( fft1d_bench  fft1d_bench.cpp)\n\n#TARGET_LINK_LIBRARIES(fft1d_bench qmcutil)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/performance-regression/full-apps/qmcpack/src/boost/CMakeLists.txt" : {
      "ObjectId" : "2fecc842ec430460ca4d3eaa6c3b3b0ae248d87d",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##########################################################################\n\n# Imported from\n\n# http://svn.boost.org/svn/boost/sandbox-branches/boost-cmake/boost_1_34_0\n\n##########################################################################\n\n# Copyright (C) 2007 Douglas Gregor <doug.gregor@gmail.com>\n\n# Copyright (C) 2007 Troy Straszheim\n\n#                                                                        #\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# See accompanying file LICENSE_1_0.txt or copy at\n\n#   http://www.boost.org/LICENSE_1_0.txt\n\n##########################################################################\n\n##########################################################################\n\n# Boost Version information\n\n# 1.34.x supports cmake build.\n\n##########################################################################\n\n#set(BOOST_VERSION_MAJOR 1)\n\n#set(BOOST_VERSION_MINOR 33)\n\n#set(BOOST_VERSION_SUBMINOR 0)\n\n#set(BOOST_VERSION \"${BOOST_VERSION_MAJOR}.${BOOST_VERSION_MINOR}.${BOOST_VERSION_SUBMINOR}\")\n\n#SET (BOOST_LIBS $ENV{BOOST_HOME}/libs)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Boost.Filesystem\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#SUBDIRS(serialization)\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/performance-regression/full-apps/qmcpack/src/boost/python/CMakeLists.txt" : {
      "ObjectId" : "ce31f9da02b04a7387df401543813abb26262805",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/performance-regression/full-apps/qmcpack/src/dataspork/CMakeLists.txt" : {
      "ObjectId" : "f6fd8f5e7926c27c023d64cec3358a5f7f16efa3",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/performance-regression/full-apps/qmcpack/src/einspline/CMakeLists.txt" : {
      "ObjectId" : "d1fc505a5cc8ac5926ed48e00cbcb72d92e2743e",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FOREACH(a ${HFILES})\n\n#  #INSTALL(FILES ${EINSPLINE_HOME}/src/${a} DESTINATION ${PROJECT_BINARY_DIR}/include/einspline)\n\n#  configure_file(${EINSPLINE_HOME}/src/${a} ${PROJECT_BINARY_DIR}/include/einspline/${a} COPYONLY)\n\n#ENDFOREACH()\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#do not compiler c functions\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#    multi_bspline_eval_sse_c_cpp.cc       \n\n#    multi_bspline_eval_std_c_cpp.cc       \n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#ADD_EXECUTABLE(time_multi time_multi_new.c)\n\n#target_link_libraries(time_multi einspline)\n\n#add_dependencies(time_multi ${PROJECT_BINARY_HOME}/include/einspline/bspline.h)\n\n#ADD_EXECUTABLE(test_multi_single test_multi_single.cpp)\n\n#target_link_libraries(test_multi_single einspline)\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "test/performance-regression/full-apps/qmcpack/src/tau/CMakeLists.txt" : {
      "ObjectId" : "3d3196132dbbff066fee31865af09c85accd5395",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-DTAU_MPIFILE\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  ${TAU_HOME}/src/Profile/Comp_pgi.cpp\n\n#  ${TAU_HOME}/src/Profile/Comp_xl.cpp\n\n#  ${TAU_HOME}/src/Profile/Comp_intel9.cpp\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TauMpi.c\n\n# ClockSync.c\n\n# ProfileMerge.c\n\n# TauFMpi.c\n\n# TauMpiExtensions.c\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/performance-regression/full-apps/rodinia/b+tree/Makefile" : {
      "ObjectId" : "087ffdaf4220818813ee7f6614a1e2d02ad83758",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# ========================================================================================================================================================================================================200\n\n#\tEXECUTABLES (LINK OBJECTS TOGETHER INTO BINARY)\n\n# ========================================================================================================================================================================================================200\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ========================================================================================================================================================================================================200\n\n#\tOBJECTS (COMPILE SOURCE FILES INTO OBJECTS)\n\n# ========================================================================================================================================================================================================200\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ======================================================================================================================================================150\n\n#\tMAIN FUNCTION\n\n# ======================================================================================================================================================150\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ======================================================================================================================================================150\n\n#\tKERNELS\n\n# ======================================================================================================================================================150\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ======================================================================================================================================================150\n\n#\tUTILITIES\n\n# ======================================================================================================================================================150\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ======================================================================================================================================================150\n\n#\tEND\n\n# ======================================================================================================================================================150\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ========================================================================================================================================================================================================200\n\n#\tDELETE\n\n# ========================================================================================================================================================================================================200\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ========================================================================================================================================================================================================200\n\n#\tEND\n\n# ========================================================================================================================================================================================================200\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "test/performance-regression/full-apps/rodinia/backprop/Makefile" : {
      "ObjectId" : "ef2971a4686c9c3d608eaf621099d3762ecd5c44",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# C compiler\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/performance-regression/full-apps/rodinia/bfs/Makefile" : {
      "ObjectId" : "d75ea9d21a7d4504885e98b2ee84a3258224d0bb",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/performance-regression/full-apps/rodinia/cfd/Makefile" : {
      "ObjectId" : "4e474a3227d7e25a8f916e864ca977eda86589a8",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/performance-regression/full-apps/rodinia/heartwall/AVI/Makefile" : {
      "ObjectId" : "0ebcbb9fc69f8d4de11ddbe6b511a99163955ef0",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# compile supporting function file into object (binary)\r\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# compile supporting function file into object (binary)\r\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# delete files\r\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/performance-regression/full-apps/rodinia/heartwall/Makefile" : {
      "ObjectId" : "2fa5806b68da696f594b14e43f120d765382d3c1",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# link objects(binaries) together\r\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# compile main function file into object (binary)\r\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# delete all object files\r\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "test/performance-regression/full-apps/rodinia/hotspot/Makefile" : {
      "ObjectId" : "e27fb82543bbd53750f71e5be4f0ae511d7bab6a",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# C compiler\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/performance-regression/full-apps/rodinia/hotspot3D/Makefile" : {
      "ObjectId" : "3c10fd7955f34228c22ffce2d9fe1b367abacc3e",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/performance-regression/full-apps/rodinia/kmeans/Makefile" : {
      "ObjectId" : "240bcc518333c08a8a8fa4ebc21538c2e6a1faf6",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# C compiler\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/performance-regression/full-apps/rodinia/lavaMD/Makefile" : {
      "ObjectId" : "038abbcc0342a2316ddac417e6a7f0032f0c4f6f",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Example\n\n# target: dependencies\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# command 1\n\n# command 2\n",
        "Line" : 7,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# .\n\n# .\n\n# .\n",
        "Line" : 9,
        "CharPositionInLine" : 10
      },
      "3" : {
        "Text" : "# command n\n",
        "Line" : 12,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# link objects (binaries) together\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# compile function files into objects (binaries)\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# delete all object and executable files\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "test/performance-regression/full-apps/rodinia/leukocyte/Makefile" : {
      "ObjectId" : "e81084ababe96ca9fa4cc2e14b37e20df96c002a",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/performance-regression/full-apps/rodinia/leukocyte/OpenMP/Makefile" : {
      "ObjectId" : "110c7801d4e13af25556e2b699da67f55c7f3304",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# C compiler\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Matrix library path\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/performance-regression/full-apps/rodinia/lud/Makefile" : {
      "ObjectId" : "7389259bd3e013addcae24bf2bf93a592beefcbc",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/performance-regression/full-apps/rodinia/lud/omp/Makefile" : {
      "ObjectId" : "74c5ae237a4c6d94a7099d298873777f8396d43e",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for LU Decomposition\n\n#\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DEBUG can be set to YES to include debugging info, or NO otherwise\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# PROFILE can be set to YES to include profiling info, or NO otherwise\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ------------  name of the executable  ----------------------------------------\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ------------  list of all source files  --------------------------------------\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ------------  compiler  ------------------------------------------------------\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ------------  compiler flags  ------------------------------------------------\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ------------  compiler defs  ------------------------------------------------\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ------------  linker flags  --------------------------------------------------\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ------------  additional system include directories  -------------------------\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ------------  private include directories  -----------------------------------\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# ------------  system libraries  (e.g. -lm )  ---------------------------------\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ------------  additional system library directories  -------------------------\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ------------  additional system libraries  -----------------------------------\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ------------  private library directories  -----------------------------------\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ------------  private libraries  (e.g. libxyz.a )  ---------------------------\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# ------------  generate the names of the object files  ------------------------\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ------------  make the executable (the default goal)  ------------------------\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# ------------  make the objects  ----------------------------------------------\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# ==============================================================================\n\n# vim: set tabstop=2: set shiftwidth=2:\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "test/performance-regression/full-apps/rodinia/lud/tools/Makefile" : {
      "ObjectId" : "8cb962b9d61c805227e4615a64322c5fc8ca7816",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/performance-regression/full-apps/rodinia/nn/Makefile" : {
      "ObjectId" : "bff21a1f3efe1036d5406f200ebbe3055c51927b",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/performance-regression/full-apps/rodinia/nw/Makefile" : {
      "ObjectId" : "97a141f54094a63bde2f7b3e54a4b0d764845a50",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# C compiler\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/performance-regression/full-apps/rodinia/particlefilter/Makefile" : {
      "ObjectId" : "13f7a5aa8bdc80dc398106743ba87067863ef441",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#makefile\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/performance-regression/full-apps/rodinia/pathfinder/Makefile" : {
      "ObjectId" : "f1e1819cf2ea5e0a9c500e914c134c34d1b71078",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/performance-regression/full-apps/rodinia/srad/Makefile" : {
      "ObjectId" : "7cb62c6a16abef7c1e15bb1f46632ab69726bb2b",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# C compiler\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/performance-regression/full-apps/rodinia/streamcluster/Makefile" : {
      "ObjectId" : "8ab83de39c7b6deae1aa49d83fd7cff4df752d91",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/performance-regression/full-apps/samplesort/Makefile" : {
      "ObjectId" : "c9f1c3945daf25fc245bc5b3e42d3100967ec152",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/performance-regression/full-apps/shmem-binary-search/Makefile" : {
      "ObjectId" : "6d18ef604223a43bd8a7c20148f63960e8a9cf8e",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/performance-regression/full-apps/uts/Makefile" : {
      "ObjectId" : "483cc36f906b79f26b321417280395505d71ebd1",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###  UTS - Unbalanced Tree Search  ###\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CONFFILE should be a symlink to your configuration\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ------------------------------------- #\n\n# Set Random Number Generator sources:\n\n# ------------------------------------- #\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the default RNG\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ------------------------------------- #\n\n# Targets:\n\n# ------------------------------------- #\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "########## Sequential Implementations ##########\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "########## Distributed Memory Model Implementations ##########\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "########## Shared Memory Model Implementations ##########\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "test/smithwaterman/Makefile" : {
      "ObjectId" : "c024404eee55da5a598de435fec0a13566b738a3",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/uts/Makefile" : {
      "ObjectId" : "611ff3b61c1d8636c5b45a78717f98f2f60cddfa",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tools/Makefile" : {
      "ObjectId" : "95e5a7b6bd8c0bcd4e3521d6aa56f4c72243bd38",
      "LastModified" : "2018-12-16T23:27:43Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tutorial/hipc18/c/asyncfinish/Makefile" : {
      "ObjectId" : "8036683f369369477f8643181ebe5f276ba1ce52",
      "LastModified" : "2018-12-21T01:31:37Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tutorial/hipc18/cpp/asyncfinish/Makefile" : {
      "ObjectId" : "7efbf18cfcb1acd70da10bea889a4c9fb59efe9d",
      "LastModified" : "2018-12-21T01:31:37Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tutorial/hipc18/cpp/ddt/Makefile" : {
      "ObjectId" : "8eade7f817f79d9453880a9abb6e10804fab09f8",
      "LastModified" : "2018-12-21T01:31:37Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tutorial/hipc18/cpp/forasync/Makefile" : {
      "ObjectId" : "1ed788949c712b7b348de4042e86bb24c17969d0",
      "LastModified" : "2018-12-21T01:31:37Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tutorial/hipc18/cpp/futures/Makefile" : {
      "ObjectId" : "8eade7f817f79d9453880a9abb6e10804fab09f8",
      "LastModified" : "2018-12-21T01:31:37Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 56,
    "MAKEFILE" : 96,
    "AUTOMAKE" : 6
  },
  "ElapsedTime" : 3403
}