{
  "Repository" : "6720899",
  "Revision" : "HEAD",
  "ObjectId" : "dfd4eaf2965546602cae253a9f266fd68723ca31",
  "CommitTime" : "2019-03-02T09:37:35Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "d8ef04736037fe766560cb24409d89286c47649b",
      "LastModified" : "2019-01-08T03:48:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# no permission for the default install prefix %ProgramFiles%\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# No effect for multi-configuration generators (e.g. for Visual Studio)\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# suppress several \"possible loss of data\" warnings, and\n\n# \"zero-length array in struct\" from libusb.h\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# no warning for getenv()\n",
        "Line" : 53,
        "CharPositionInLine" : 45
      },
      "4" : {
        "Text" : "# Heed warnings from non-MSVC compilers\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# additional cmake modules\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# setup threading\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#set the default path for built executables to the \"bin\" directory\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#set the default path for built libraries to the \"lib\" directory\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# dependencies\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# try find PKGConfig as it will be used if found\n",
        "Line" : 93,
        "CharPositionInLine" : 27
      },
      "11" : {
        "Text" : "# Add includes\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# for generated headers\n",
        "Line" : 100,
        "CharPositionInLine" : 24
      },
      "13" : {
        "Text" : "# VAAPI can fail to start at runtime. It must have a fallback.\n",
        "Line" : 242,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Major Linux distro stable releases have buggy OpenCL ICD loader.\n\n# The workaround of disabling exceptions can only be set up during compile time.\n\n# Diabling it for all should be harmless. The flag is the same for GCC/Clang/ICC.\n",
        "Line" : 331,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# RPATH handling for CUDA 8.0 libOpenCL.so conflict. See #804.\n",
        "Line" : 387,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# RPATH handling for private libusb copies\n\n# Users have two options:\n\n# 1. Build libusb in depends/ and leave it there:\n\n#      Do NOT set CMAKE_INSTALL_RPATH. It works by default.\n\n# 2. Build libusb and install it somewhere:\n\n#      Set CMAKE_INSTALL_RPATH to the libusb.so installation directory before compiling.\n\n# Both command line -DCMAKE_INSTALL_RPATH=... and CMake GUI settings are accepted.\n\n#\n\n# Anyway if wrong versions of libusb is used, errors will be reported explicitly.\n",
        "Line" : 397,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# MSVC creates freenect2.lib for both dynamic and static by default\n",
        "Line" : 433,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 18
    },
    "cmake_modules/CheckOpenCLICDLoader.cmake" : {
      "ObjectId" : "f02b3e626d776e2111593f8f56e435a3656e5bcd",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake_modules/FindGLFW3.cmake" : {
      "ObjectId" : "cf1ca41a7f6d114b39e9c429d405c3d29b70e0ac",
      "LastModified" : "2016-02-09T22:19:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GLFW3\n\n#\n\n# If no pkgconfig, define GLFW_ROOT to installation tree\n\n# Will define the following:\n\n# GLFW3_FOUND\n\n# GLFW3_INCLUDE_DIRS\n\n# GLFW3_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# homebrew or macports pkgconfig locations\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# directories in the official binary package\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake_modules/FindLibUSB.cmake" : {
      "ObjectId" : "1565c83e4845063e99d9b9e0199cf5d58cebb45c",
      "LastModified" : "2018-02-24T03:12:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find libusb for portable USB support\n\n# \n\n# If the LibUSB_ROOT environment variable\n\n# is defined, it will be used as base path.\n\n# The following standard variables get defined:\n\n#  LibUSB_FOUND:    true if LibUSB was found\n\n#  LibUSB_INCLUDE_DIR: the directory that contains the include file\n\n#  LibUSB_LIBRARIES:  the libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Otherwise use System pkg-config path\n",
        "Line" : 11,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 2
    },
    "cmake_modules/FindOpenCL.cmake" : {
      "ObjectId" : "e0b97f674efe543dfa72887c49cc66904c035f3c",
      "LastModified" : "2016-02-09T22:19:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindOpenCL\n\n# ----------\n\n#\n\n# Try to find OpenCL\n\n#\n\n# Once done this will define::\n\n#\n\n#   OpenCL_FOUND          - True if OpenCL was found\n\n#   OpenCL_INCLUDE_DIRS   - include directories for OpenCL\n\n#   OpenCL_LIBRARIES      - link against this library to use OpenCL\n\n#   OpenCL_VERSION_STRING - Highest supported OpenCL version (eg. 1.2)\n\n#   OpenCL_VERSION_MAJOR  - The major version of the OpenCL implementation\n\n#   OpenCL_VERSION_MINOR  - The minor version of the OpenCL implementation\n\n#\n\n# The module will also define two cache variables::\n\n#\n\n#   OpenCL_INCLUDE_DIR    - the OpenCL include directory\n\n#   OpenCL_LIBRARY        - the path to the OpenCL library\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2014 Matthaeus G. Chajdas\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# \n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n# \n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n# \n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake_modules/FindOpenNI2.cmake" : {
      "ObjectId" : "60569c8057a538f653ad322219d88d4e5a08d1b8",
      "LastModified" : "2018-02-24T03:12:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find OpenNI2\n\n# \n\n# If the OPENNI2_INCLUDE and OPENNI2_REDIST environment variables\n\n# are defined, they will be used as search path.\n\n# The following standard variables get defined:\n\n#  OpenNI2_FOUND:    true if found\n\n#  OpenNI2_INCLUDE_DIRS: the directory that contains the include file\n\n#  OpenNI2_LIBRARY_DIR: the directory that contains the library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake_modules/FindTegraJPEG.cmake" : {
      "ObjectId" : "62465279c7848604c0a394112d8adeeefe226528",
      "LastModified" : "2018-06-09T02:54:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindTegraJPEG.cmake\n\n# - TegraJPEG_FOUND\n\n# - TegraJPEG_INCLUDE_DIRS\n\n# - TegraJPEG_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Detect Linux4Tegra distribution\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Detect L4T version\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Download gstjpeg source\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Do we want checksum for the download?\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "cmake_modules/FindTurboJPEG.cmake" : {
      "ObjectId" : "55f730715dc6e3808146cbc2e2351b161e54457c",
      "LastModified" : "2016-02-09T22:19:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindTurboJPEG.cmake\n\n# Uses environment variable TurboJPEG_ROOT as backup\n\n# - TurboJPEG_FOUND\n\n# - TurboJPEG_INCLUDE_DIRS\n\n# - TurboJPEG_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# homebrew\n",
        "Line" : 13,
        "CharPositionInLine" : 32
      },
      "2" : {
        "Text" : "# macports\n",
        "Line" : 14,
        "CharPositionInLine" : 17
      },
      "3" : {
        "Text" : "#Library names:\n\n# debian sid,strech: libturbojpeg0\n\n# debian/ubuntu else: libturbojpeg1-dev #provided by libjpeg-turbo8-dev (ubuntu)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# homebrew\n",
        "Line" : 31,
        "CharPositionInLine" : 32
      },
      "5" : {
        "Text" : "# macports\n",
        "Line" : 32,
        "CharPositionInLine" : 17
      },
      "CommentCount" : 6
    },
    "cmake_modules/GenerateResources.cmake" : {
      "ObjectId" : "8616e38ec2daed8ff2c6eec168a569fc17bdf227",
      "LastModified" : "2016-02-09T22:19:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake_modules/SetupLibfreenect2Threading.cmake" : {
      "ObjectId" : "d08057994184acd8cd668a5d6efeae6f72daaa35",
      "LastModified" : "2018-02-24T03:12:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "dcc1b17c5b393778f035b22838d816954ebb4320",
      "LastModified" : "2018-02-24T03:12:56Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "8741f67fd3aadaddcdb81ef66f91497ef4d07f9a",
      "LastModified" : "2018-02-24T03:12:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# No effect for multi-configuration generators (e.g. for Visual Studio)\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# The example build system is standalone and will work out-of-tree with these files copied\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for flextGL.h\n",
        "Line" : 24,
        "CharPositionInLine" : 52
      },
      "3" : {
        "Text" : "# try find PKGConfig as it will be used if found\n",
        "Line" : 26,
        "CharPositionInLine" : 27
      },
      "4" : {
        "Text" : "# FindGLFW3.cmake\n",
        "Line" : 27,
        "CharPositionInLine" : 67
      },
      "5" : {
        "Text" : "# Out-of-tree build will have to have DLLs manually copied.\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "tools/streamer_recorder/CMakeLists.txt" : {
      "ObjectId" : "77f203f5e1d12f17919c6f2d48d499293dc5be24",
      "LastModified" : "2018-02-24T03:12:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# No effect for multi-configuration generators (e.g. for Visual Studio)\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# The build system could be standalone if these files are copied instead of being referenced here.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for flextGL.h\n",
        "Line" : 24,
        "CharPositionInLine" : 52
      },
      "3" : {
        "Text" : "# for protonect viewer\n",
        "Line" : 25,
        "CharPositionInLine" : 57
      },
      "4" : {
        "Text" : "# try find PKGConfig as it will be used if found\n",
        "Line" : 27,
        "CharPositionInLine" : 27
      },
      "5" : {
        "Text" : "# FindGLFW3.cmake\n",
        "Line" : 28,
        "CharPositionInLine" : 67
      },
      "6" : {
        "Text" : "# Out-of-tree build will have to have DLLs manually copied.\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Add OpenCV package dependency for udp-image-streaming\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# OpenCV requires exception.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    }
  },
  "FileTypes" : {
    "CMAKE" : 13
  },
  "ElapsedTime" : 1152
}