{
  "Repository" : "16440981",
  "Revision" : "HEAD",
  "ObjectId" : "4f8b4acdf67a5de2e5ec499ffc01de9c47f2aa40",
  "CommitTime" : "2019-04-16T21:17:21Z",
  "Files" : {
    "cmake/OpenDDSConfig.cmake" : {
      "ObjectId" : "85850fa51581a954eb6f4f82174c1bb91f9eddb7",
      "LastModified" : "2018-11-19T22:27:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OpenDDS License. See accompanying LICENSE\n\n# file or http://www.opendds.org/license.html for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# OpenDDS CMake Config-File Package\n\n# ---------------------------------\n\n#\n\n# Finds OpenDDS MPC-Compiled libraries and imports them as CMake targets.\n\n#\n\n# The following imported targets will be defined if the corresponding libraries\n\n# were compiled with OpenDDS (using MPC):\n\n#\n\n#   OpenDDS::OpenDDS - Convenience target which will loop-in most targets required\n\n#                      for a typical OpenDDS scenario:\n\n#                        * OpenDDS::Dcps\n\n#                        * OpenDDS::Multicast\n\n#                        * OpenDDS::Rtps\n\n#                        * OpenDDS::Rtps_Udp\n\n#                        * OpenDDS::InfoRepoDiscovery\n\n#                        * OpenDDS::Shmem\n\n#                        * OpenDDS::Tcp\n\n#                        * OpenDDS::Udp\n\n#\n\n#   OpenDDS::<LIB>   - Target for specific library dependency that was generated by\n\n#                      compiling OpenDDS. These will generally be located in the\n\n#                      $DDS_ROOT/lib directory. For example, OpenDDS_Dcps(d).so/.dll\n\n#                      will be imported as the OpenDDS::Dcps CMake target.\n\n#\n\n#   ACE::ACE         - Target for the core ACE library.\n\n#\n\n#   ACE::<LIB>       - Similar to OpenDDS::<LIB> except typically these sit in the\n\n#                      $ACE_ROOT/lib directory with files like ACE_XML_Utils(d).so/.dll\n\n#                      getting imported as ACE::XML_Utils.\n\n#\n\n#   TAO::TAO         - Target for the core TAO library.\n\n#\n\n#   TAO::<LIB>       - Similar to OpenDDS::<LIB> except typically these sit in the\n\n#                      $ACE_ROOT/lib directory (note: not $TAO_ROOT/lib) with files like\n\n#                      TAO_PortableServer(d).so/.dll getting imported as TAO::PortableServer.\n\n#\n\n# In addition to the imported targets above the following macro will be important\n\n# for adding IDL sources (and other C/C++ sources if desired) to a given target.\n\n#\n\n# OPENDDS_TARGET_SOURCES(target\n\n#   [items...]\n\n#   [<INTERFACE|PUBLIC|PRIVATE> items...]\n\n#   [TAO_IDL_OPTIONS options...]\n\n#   [OPENDDS_IDL_OPTIONS options...])\n\n#\n\n# This macro behaves similarly to target_sources(...) with the following\n\n# differences:\n\n#   1) Items can be either C/C++ sources or IDL sources.\n\n#   2) The scope-qualifier (PUBLIC, PRIVATE, INTERFACE) is not required.\n\n#      When it is omitted, PRIVATE is used by default.\n\n#   3) Command-line options can be supplied to the TAO/OpenDDS IDL compilers\n\n#      using TAO_IDL_OPTIONS and/or OPENDDS_IDL_OPTIONS (if the default be-\n\n#      havior is not suitable).\n\n#\n\n# When IDL sources are supplied, custom commands are generated which will\n\n# be invoked to compile the IDL sources into their component cpp/h files.\n\n#\n\n# A custom command will also be added to generate the required IDL export\n\n# header file (*target*_export.h) to add the required export macros. This\n\n# file is then added as a dependency for the supplied target.\n\n#\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# See https://gitlab.kitware.com/cmake/community/wikis/FAQ#dynamic-replace\n",
        "Line" : 225,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/OpenDDSConfigVersion.cmake" : {
      "ObjectId" : "77968ed356fedd5d926da647c27b2fe68cb2bb14",
      "LastModified" : "2018-11-02T21:56:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OpenDDS License. See accompanying LICENSE\n\n# file or http://www.opendds.org/license.html for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/api_macros.cmake" : {
      "ObjectId" : "b5e00328d8daa53f01354567045ba54944c3537e",
      "LastModified" : "2018-11-19T22:27:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OpenDDS License. See accompanying LICENSE\n\n# file or http://www.opendds.org/license.html for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Handle explicit sources per scope\n",
        "Line" : 29,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# The above should add IDL-Generated sources; here, the\n\n# regular c/cpp/h files specified by the user are added.\n",
        "Line" : 161,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "cmake/dds_idl_sources.cmake" : {
      "ObjectId" : "f78d65f14c06fe3e7297effee4707ce4cdbdfc65",
      "LastModified" : "2018-11-19T22:27:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OpenDDS License. See accompanying LICENSE\n\n# file or http://www.opendds.org/license.html for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Each IDL file corresponds to one bridge target. All targets which depend\n\n# upon the C/C++ files generated from IDL compilation will also depend upon\n\n# the bridge target to guarantee that IDL files will compile prior to the\n\n# dependent targets. This is simply set to the first IDL-Dependent target.\n",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# If an IDL-Generation command was already created this file can safely be\n\n# skipped; however, the dependencies still need to be added to the target.\n",
        "Line" : 73,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "## remove trailing slashes\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "## opendds_idl would generate different code with the -I flag followed by absolute path\n\n## or relative path, if it's a relative path we need to keep it a relative path to the binary tree\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "## if this is FACE IDL, do not reprocess the original idl file throught tao_idl\n",
        "Line" : 163,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# The type-support IDL will include the primary IDL file\n",
        "Line" : 206,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 7
    },
    "cmake/init.cmake" : {
      "ObjectId" : "84d61d2a67b0b7724ead0b86047a00fac62f494c",
      "LastModified" : "2018-12-17T15:09:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OpenDDS License. See accompanying LICENSE\n\n# file or http://www.opendds.org/license.html for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make Sure CMake can use the Paths\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/options.cmake" : {
      "ObjectId" : "69878ce9f9abbb25997314e1d4b5f3d5c0940cec",
      "LastModified" : "2019-02-19T22:15:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OpenDDS License. See accompanying LICENSE\n\n# file or http://www.opendds.org/license.html for details.\n\n#\n\n# CMake options for configuring the OpenDDS CMake package. These options\n\n# depend upon variables/options from the config.cmake file which is auto-\n\n# generated using the $DDS_ROOT/configure script.\n\n#\n\n# Various base #defines are set depending on which options have been enabled.\n\n# These are set as transient dependencies on every target which generates IDL\n\n# and/or links against respective MPC-Compiled targets (for example, OpenDDS::Dcps).\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Handle base property defines like MPC/config/dcps_optional_features.mpb\n\n# depending on which cmd-line switches the user provided.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ACE defines.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# On MSVC, ACE sets this in config-win32-common.h\n",
        "Line" : 80,
        "CharPositionInLine" : 14
      },
      "4" : {
        "Text" : "# Link libraries.\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Force C++ standard.\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Handle other features\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/tao_idl_sources.cmake" : {
      "ObjectId" : "7fb434318bce916e2dfde790214963f56d9f6b0d",
      "LastModified" : "2018-11-19T22:27:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OpenDDS License. See accompanying LICENSE\n\n# file or http://www.opendds.org/license.html for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## convert all include paths to be relative to binary tree instead of to source tree\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# if the flag is like \"-Wb,stub_export_file=filename\" then set the varilabe\n\n# \"idl_cmd_arg-wb-stub_export_file\" to filename\n",
        "Line" : 78,
        "CharPositionInLine" : 7
      },
      "CommentCount" : 3
    },
    "java/ant/build.xml" : {
      "ObjectId" : "dd09e37210ca4cfe7345a697d5665fc6be4dfc37",
      "LastModified" : "2015-07-02T15:50:45Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n\n    Author:  Steven Stallion\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "\n        Project Paths\n    ",
        "Line" : 19,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "\n        Project Targets\n    ",
        "Line" : 32,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : " enable assertions ",
        "Line" : 109,
        "CharPositionInLine" : 63
      },
      "CommentCount" : 4
    },
    "java/jms/build.xml" : {
      "ObjectId" : "74cc980359a842076e089668707a3e8dacd6198e",
      "LastModified" : "2015-07-02T15:50:45Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n\n    Author:  Steven Stallion\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "\n        Project Paths\n    ",
        "Line" : 20,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "\n        Project Targets\n    ",
        "Line" : 60,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : " Create version.properties ",
        "Line" : 120,
        "CharPositionInLine" : 43
      },
      "4" : {
        "Text" : " Collect native libraries to package ",
        "Line" : 158,
        "CharPositionInLine" : 53
      },
      "5" : {
        "Text" : " Create native library index for runtime ",
        "Line" : 187,
        "CharPositionInLine" : 57
      },
      "6" : {
        "Text" : " Update Resource Adapter descriptor ",
        "Line" : 193,
        "CharPositionInLine" : 52
      },
      "7" : {
        "Text" : " Enable assertions ",
        "Line" : 270,
        "CharPositionInLine" : 61
      },
      "CommentCount" : 8
    },
    "java/jms/compat/build.xml" : {
      "ObjectId" : "54f241963c4a1eb7d7e8d03a823d92cea04dfa93",
      "LastModified" : "2015-07-02T15:50:45Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n\n    Author:  Steven Stallion\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "\n        Project Paths\n    ",
        "Line" : 23,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "\n        Project Targets\n    ",
        "Line" : 55,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : " silly ant ",
        "Line" : 98,
        "CharPositionInLine" : 69
      },
      "4" : {
        "Text" : " silly ant ",
        "Line" : 116,
        "CharPositionInLine" : 69
      },
      "5" : {
        "Text" : " ensure RAR is built ",
        "Line" : 137,
        "CharPositionInLine" : 60
      },
      "6" : {
        "Text" : " Start the JBoss instance with remote debugging enabled (for manual testing), wait for Ctrl-C.  Use the teardown target to stop DCPSInfoRepo.  ",
        "Line" : 160,
        "CharPositionInLine" : 155
      },
      "7" : {
        "Text" : " enable assertions ",
        "Line" : 164,
        "CharPositionInLine" : 186
      },
      "8" : {
        "Text" : " Deployables ",
        "Line" : 166,
        "CharPositionInLine" : 37
      },
      "9" : {
        "Text" : " enable assertions ",
        "Line" : 179,
        "CharPositionInLine" : 106
      },
      "10" : {
        "Text" : " Deployables ",
        "Line" : 181,
        "CharPositionInLine" : 37
      },
      "11" : {
        "Text" : " enable assertions ",
        "Line" : 225,
        "CharPositionInLine" : 61
      },
      "CommentCount" : 12
    },
    "java/jms/example/jbossesb/helloworld/build.xml" : {
      "ObjectId" : "eb3055bc4230960b5dbdb70f224d5f627c6eec90",
      "LastModified" : "2015-07-02T15:50:45Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n\n    Author:  Steven Stallion\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "\n        Project Paths\n    ",
        "Line" : 17,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "\n        Project Targets\n    ",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : " silly ant ",
        "Line" : 76,
        "CharPositionInLine" : 69
      },
      "CommentCount" : 4
    },
    "java/jms/example/jbossesb/helloworld2/build.xml" : {
      "ObjectId" : "3b58a47ff94085ddf42507337af1e2d2a4ca5050",
      "LastModified" : "2015-07-02T15:50:45Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n\n    Author:  Steven Stallion\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "\n        Project Paths\n    ",
        "Line" : 17,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "\n        Project Targets\n    ",
        "Line" : 28,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : " silly ant ",
        "Line" : 76,
        "CharPositionInLine" : 69
      },
      "CommentCount" : 4
    },
    "java/jms/example/jbossesb/router/build.xml" : {
      "ObjectId" : "f147942073ce5f40ad3e42a37ec4f9eceef0fab0",
      "LastModified" : "2015-07-02T15:50:45Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n\n    Author:  Steven Stallion\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "\n        Project Paths\n    ",
        "Line" : 17,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "\n        Project Targets\n    ",
        "Line" : 27,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    },
    "java/jms/native/build.xml" : {
      "ObjectId" : "87bd73e34039248ba0c748b4d6516e1ce28d21be",
      "LastModified" : "2015-07-02T15:50:45Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : "\n\n    Author:  Weiqi Gao\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : " MPC features and type ",
        "Line" : 29,
        "CharPositionInLine" : 35
      },
      "2" : {
        "Text" : " gmake or make or vcbuild or devenv ",
        "Line" : 73,
        "CharPositionInLine" : 48
      },
      "3" : {
        "Text" : " command line arguments ",
        "Line" : 99,
        "CharPositionInLine" : 36
      },
      "4" : {
        "Text" : "\n        Project Targets\n    ",
        "Line" : 159,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "tests/cmake_integration/Messenger/Messenger_1/CMakeLists.txt" : {
      "ObjectId" : "52db59579bb0d5db29f3706957432bee7d453a4e",
      "LastModified" : "2019-01-07T16:12:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OpenDDS License. See accompanying LICENSE\n\n# file or http://www.opendds.org/license.html for details.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Publisher\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Subscriber\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Copy configs/scripts into build-output directory\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tests/cmake_integration/Messenger/Messenger_2/CMakeLists.txt" : {
      "ObjectId" : "7c1e443cac2c3424aff98e8054d45a2c5e48c1e3",
      "LastModified" : "2019-01-07T16:12:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OpenDDS License. See accompanying LICENSE\n\n# file or http://www.opendds.org/license.html for details.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Messenger library\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Publisher\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Subscriber\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Copy configs/scripts into build-output directory\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "tools/IntermediateTypeLang/cpp/Makefile" : {
      "ObjectId" : "baed11d75b6deb51a7b331f7f818a1bb0e4b6702",
      "LastModified" : "2016-01-15T23:02:34Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "tools/modeling/build.xml" : {
      "ObjectId" : "45afdd17010135b3dee94cafbba10e8011212ee6",
      "LastModified" : "2016-01-15T23:02:34Z",
      "FileType" : "ANT",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 9,
    "MAKEFILE" : 1,
    "ANT" : 8
  },
  "ElapsedTime" : 9692
}