{
  "Repository" : "75987316",
  "Revision" : "HEAD",
  "ObjectId" : "af0b406bc98c6dd98fcecdbeb58ee5e05ba98fa7",
  "CommitTime" : "2018-08-29T13:28:11Z",
  "Files" : {
    "Makefile.am" : {
      "ObjectId" : "3aac0864e445ba14bc6ccb9c6540e0932d413d75",
      "LastModified" : "2018-03-27T14:04:15Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am -- Template for generating Makefile via Automake.\n\n# Copyright (C) 2006-2018 PUC-Rio/Laboratorio TeleMidia\n\n#\n\n# This file is part of Ginga (Ginga-NCL).\n\n#\n\n# Ginga is free software: you can redistribute it and/or modify it\n\n# under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation, either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# Ginga is distributed in the hope that it will be useful, but WITHOUT\n\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n\n# License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with Ginga.  If not, see <https://www.gnu.org/licenses/>.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Setup code coverage.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Generate README from README.md if we have Perl.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3,
      "Errorlog" : "line 37:30 token recognition error at: '\\w'\n"
    },
    "build-cmake/CMakeLists.txt" : {
      "ObjectId" : "5492d0f152a46d52f2147d35e22a6ff6ad2b20e7",
      "LastModified" : "2018-05-22T23:51:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Defaul C++ params\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ginga-related cmake's variables\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find dependencies\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# OpenGL not found, turn it off\n",
        "Line" : 47,
        "CharPositionInLine" : 24
      },
      "4" : {
        "Text" : "# NCLUA download/configure/build/install\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#end NCLUA\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Download, link, build with CEF\n",
        "Line" : 85,
        "CharPositionInLine" : 14
      },
      "7" : {
        "Text" : "# Download chromium embedded files\n",
        "Line" : 93,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Logical target used to link the libcef library.\n",
        "Line" : 112,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#if WITH_LIBRSVG\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#WITH_LIBRSVG\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# libginga target\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ginga target\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ginga-gl target\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# gingagui target\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ginga-qt executable.\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Find the QtWidgets library\n",
        "Line" : 290,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Copy datafiles to build dir\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Set rpath so that libraries can be placed next to the executable.\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Copy binary and resource files to the target output directory.\n",
        "Line" : 325,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Set SUID permissions on the chrome-sandbox target.\n",
        "Line" : 329,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# add a target to generate API documentation with Doxygen\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "build-cmake/CMakeModules/FindCEF.cmake" : {
      "ObjectId" : "cd33a7ddad40a52f4c7bdac62812f8c0d1a22760",
      "LastModified" : "2017-05-12T07:50:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 The Chromium Embedded Framework Authors. All rights\n\n# reserved. Use of this source code is governed by a BSD-style license that\n\n# can be found in the LICENSE file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# This file is the CEF CMake configuration entry point and should be loaded\n\n# using `find_package(CEF REQUIRED)`. See the top-level CMakeLists.txt file\n\n# included with the CEF binary distribution for usage information.\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find the CEF binary distribution root directory.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Execute additional cmake files from the CEF binary distribution.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "build-cmake/CMakeModules/FindCairo.cmake" : {
      "ObjectId" : "1a768e323342fb490514da9eedfe84f5c715fe39",
      "LastModified" : "2017-05-12T07:50:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Cairo\n\n# Once done, this will define\n\n#\n\n#  CAIRO_FOUND - system has Cairo\n\n#  CAIRO_INCLUDE_DIRS - the Cairo include directories\n\n#  CAIRO_LIBRARIES - link these to use Cairo\n\n#\n\n# Copyright (C) 2012 Raphael Kubo da Costa <rakuco@webkit.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# 1.  Redistributions of source code must retain the above copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n# 2.  Redistributions in binary form must reproduce the above copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND ITS CONTRIBUTORS ``AS\n\n# IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n\n# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\n# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR ITS\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\n# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\n# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n\n# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n\n# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n\n# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FIXME: After we require CMake 2.8.2 we can pass QUIET to this call.\n",
        "Line" : 32,
        "CharPositionInLine" : 34
      },
      "2" : {
        "Text" : "# FIXME: Should not be needed anymore once we start depending on CMake 2.8.3\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# FIXME: Use IF (NOT ...) with CMake 2.8.2+ to get rid of the ELSE block\n",
        "Line" : 69,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 4
    },
    "build-cmake/CMakeModules/FindFFmpeg.cmake" : {
      "ObjectId" : "cca976fb2c4b070a7828f7c1e564a5c0a64cf9f1",
      "LastModified" : "2018-03-27T14:04:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find ffmpeg libraries (libavcodec, libavformat and libavutil)\n\n# Once done this will define\n\n#\n\n# FFMPEG_FOUND - system has ffmpeg or libav\n\n# FFMPEG_INCLUDE_DIR - the ffmpeg include directory\n\n# FFMPEG_LIBRARIES - Link these to use ffmpeg\n\n# FFMPEG_LIBAVCODEC\n\n# FFMPEG_LIBAVFORMAT\n\n# FFMPEG_LIBAVUTIL\n\n#\n\n# Copyright (c) 2008 Andreas Schneider <mail@cynapses.org>\n\n# Modified for other libraries by Lasse Kärkkäinen <tronic>\n\n# Modified for Hedgewars by Stepik777\n\n#\n\n# Redistribution and use is allowed according to the terms of the New\n\n# BSD license.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "build-cmake/CMakeModules/FindGDK3.cmake" : {
      "ObjectId" : "8016563810e8849b70b22e804a38fe4e23f9d973",
      "LastModified" : "2018-03-27T14:04:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GDK 3\n\n# Once done, this will define\n\n#\n\n#  GDK3_FOUND - system has GDK 3\n\n#  GDK3_INCLUDE_DIRS - the GDK 3 include directories\n\n#  GDK3_LIBRARIES - link these to use GDK 3\n\n#\n\n# Copyright (C) 2012 Raphael Kubo da Costa <rakuco@webkit.org>\n\n# Copyright (C) 2013 Igalia S.L.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# 1.  Redistributions of source code must retain the above copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n# 2.  Redistributions in binary form must reproduce the above copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND ITS CONTRIBUTORS ``AS\n\n# IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n\n# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\n# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR ITS\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\n# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\n# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n\n# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n\n# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n\n# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "build-cmake/CMakeModules/FindGDKPixBuf.cmake" : {
      "ObjectId" : "39bde1c31e5d2a0a4ef95465d34e2b439e13bf96",
      "LastModified" : "2018-03-27T14:04:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find GDK-PixBuf\n\n# Find the GDK-PixBuf include directories and libraries\n\n#\n\n# This module defines\n\n#   GDKPIXBUF_FOUND       - true if the following are found\n\n#   GDKPIXBUF_INCLUDE_DIR - GDK-PixBuf include directory\n\n#   GDKPIXBUF_LIBRARY     - GDK-PixBuf library location\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If pkg-config finds gdk-pixbuf-2.0, this will set:\n\n#   PC_GDKPIXBUF_FOUND (to TRUE)\n\n#   PC_GDKPIXBUF_INCLUDEDIR\n\n#   PC_GDKPIXBUF_INCLUDE_DIRS\n\n#   PC_GDKPIXBUF_LIBDIR\n\n#   PC_GDKPIXBUF_LIBRARY_DIRS\n\n# These variables are then used as hints to find_path()\n\n# and find_library()\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Hints provided by pkg-config\n",
        "Line" : 24,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Standard include directories\n",
        "Line" : 29,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Search all subdirs of the above\n",
        "Line" : 34,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Subdirectory hints\n",
        "Line" : 40,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Hints provided by pkg-config\n",
        "Line" : 47,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# Sets GDKPIXBUF_FOUND to true if GDKPIXBUF_INCLUDE_DIR and\n\n# GDKPIXBUF_LIBRARY are both set\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "build-cmake/CMakeModules/FindGLIB.cmake" : {
      "ObjectId" : "93d3ec547999fb4bef01ccbfd6277858fc200d8a",
      "LastModified" : "2018-03-27T14:04:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Glib and its components (gio, gobject etc)\n\n# Once done, this will define\n\n#\n\n#  GLIB_FOUND - system has Glib\n\n#  GLIB_INCLUDE_DIRS - the Glib include directories\n\n#  GLIB_LIBRARIES - link these to use Glib\n\n#\n\n# Optionally, the COMPONENTS keyword can be passed to find_package()\n\n# and Glib components can be looked for.  Currently, the following\n\n# components can be used, and they define the following variables if\n\n# found:\n\n#\n\n#  gio:             GLIB_GIO_LIBRARIES\n\n#  gobject:         GLIB_GOBJECT_LIBRARIES\n\n#  gmodule:         GLIB_GMODULE_LIBRARIES\n\n#  gthread:         GLIB_GTHREAD_LIBRARIES\n\n#\n\n# Note that the respective _INCLUDE_DIR variables are not set, since\n\n# all headers are in the same directory as GLIB_INCLUDE_DIRS.\n\n#\n\n# Copyright (C) 2012 Raphael Kubo da Costa <rakuco@webkit.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# 1.  Redistributions of source code must retain the above copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n# 2.  Redistributions in binary form must reproduce the above copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND ITS CONTRIBUTORS ``AS\n\n# IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n\n# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\n# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR ITS\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\n# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\n# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n\n# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n\n# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n\n# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Files in glib's main include path may include glibconfig.h, which,\n\n# for some odd reason, is normally in $LIBDIR/glib-2.0/include.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Version detection\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Additional Glib components.  We only look for libraries, as not all of them\n\n# have corresponding headers and all headers are installed alongside the main\n\n# glib ones.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# gio-unix is compiled as part of the gio library, but the include paths\n\n# are separate from the shared glib ones. Since this is currently only used\n\n# by WebKitGTK+ we don't go to extraordinary measures beyond pkg-config.\n",
        "Line" : 101,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "build-cmake/CMakeModules/FindGStreamer-1.0.cmake" : {
      "ObjectId" : "8dd938bb2a94b06a5ae464febf4a9f2b88d8e9a8",
      "LastModified" : "2018-03-27T14:04:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "build-cmake/CMakeModules/FindGStreamer.cmake" : {
      "ObjectId" : "77c2d9dbc1efabe8d300d7958765cd5648e31ad8",
      "LastModified" : "2018-03-27T14:04:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GStreamer and its plugins\n\n# Once done, this will define\n\n#\n\n#  GSTREAMER_FOUND - system has GStreamer\n\n#  GSTREAMER_INCLUDE_DIRS - the GStreamer include directories\n\n#  GSTREAMER_LIBRARIES - link these to use GStreamer\n\n#\n\n# Additionally, gstreamer-base is always looked for and required, and\n\n# the following related variables are defined:\n\n#\n\n#  GSTREAMER_BASE_INCLUDE_DIRS - gstreamer-base's include directory\n\n#  GSTREAMER_BASE_LIBRARIES - link to these to use gstreamer-base\n\n#\n\n# Optionally, the COMPONENTS keyword can be passed to find_package()\n\n# and GStreamer plugins can be looked for.  Currently, the following\n\n# plugins can be searched, and they define the following variables if\n\n# found:\n\n#\n\n#  gstreamer-app:        GSTREAMER_APP_INCLUDE_DIRS and GSTREAMER_APP_LIBRARIES\n\n#  gstreamer-audio:      GSTREAMER_AUDIO_INCLUDE_DIRS and GSTREAMER_AUDIO_LIBRARIES\n\n#  gstreamer-fft:        GSTREAMER_FFT_INCLUDE_DIRS and GSTREAMER_FFT_LIBRARIES\n\n#  gstreamer-gl:         GSTREAMER_GL_INCLUDE_DIRS and GSTREAMER_GL_LIBRARIES\n\n#  gstreamer-mpegts:     GSTREAMER_MPEGTS_INCLUDE_DIRS and GSTREAMER_MPEGTS_LIBRARIES\n\n#  gstreamer-pbutils:    GSTREAMER_PBUTILS_INCLUDE_DIRS and GSTREAMER_PBUTILS_LIBRARIES\n\n#  gstreamer-tag:        GSTREAMER_TAG_INCLUDE_DIRS and GSTREAMER_TAG_LIBRARIES\n\n#  gstreamer-video:      GSTREAMER_VIDEO_INCLUDE_DIRS and GSTREAMER_VIDEO_LIBRARIES\n\n#\n\n# Copyright (C) 2012 Raphael Kubo da Costa <rakuco@webkit.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# 1.  Redistributions of source code must retain the above copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n# 2.  Redistributions in binary form must reproduce the above copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND ITS CONTRIBUTORS ``AS\n\n# IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n\n# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\n# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR ITS\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\n# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\n# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n\n# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n\n# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n\n# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Helper macro to find a GStreamer plugin (or GStreamer itself)\n\n#   _component_prefix is prepended to the _INCLUDE_DIRS and _LIBRARIES variables (eg. \"GSTREAMER_AUDIO\")\n\n#   _pkgconfig_name is the component's pkg-config name (eg. \"gstreamer-1.0\", or \"gstreamer-video-1.0\").\n\n#   _library is the component's library name (eg. \"gstreamer-1.0\" or \"gstvideo-1.0\")\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ------------------------\n\n# 1. Find GStreamer itself\n\n# ------------------------\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# 1.1. Find headers and libraries\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -------------------------\n\n# 2. Find GStreamer plugins\n\n# -------------------------\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ------------------------------------------------\n\n# 3. Process the COMPONENTS passed to FIND_PACKAGE\n\n# ------------------------------------------------\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "build-cmake/CMakeModules/FindGTK3.cmake" : {
      "ObjectId" : "8ce5433906ffea1e85f1ca398da0058c5acd59d5",
      "LastModified" : "2018-03-27T14:04:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GTK+ 3\n\n# Once done, this will define\n\n#\n\n#  GTK3_FOUND - system has GTK+ 3.\n\n#  GTK3_INCLUDE_DIRS - the GTK+ 3. include directories\n\n#  GTK3_LIBRARIES - link these to use GTK+ 3.\n\n#  GTK3_SUPPORTS_GESTURES - GTK+ supports gestures (GTK+ >= 3.14)\n\n#  GTK3_SUPPORTS_QUARTZ - GTK+ supports Quartz backend\n\n#  GTK3_SUPPORTS_X11 - GTK+ supports X11 backend\n\n#  GTK3_SUPPORTS_WAYLAND - GTK+ supports Wayland backend\n\n#\n\n# Copyright (C) 2012 Raphael Kubo da Costa <rakuco@webkit.org>\n\n# Copyright (C) 2013, 2015 Igalia S.L.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# 1.  Redistributions of source code must retain the above copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n# 2.  Redistributions in binary form must reproduce the above copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND ITS CONTRIBUTORS ``AS\n\n# IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n\n# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\n# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR ITS\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\n# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\n# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n\n# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n\n# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n\n# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "build-cmake/CMakeModules/FindLibSoup.cmake" : {
      "ObjectId" : "d6654e46f8e6bccf7f4cfe02bfe9f1d530a89d9e",
      "LastModified" : "2018-03-27T14:04:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LibSoup 2.4\n\n# This module defines the following variables:\n\n#\n\n#  LIBSOUP_FOUND - LibSoup 2.4 was found\n\n#  LIBSOUP_INCLUDE_DIRS - the LibSoup 2.4 include directories\n\n#  LIBSOUP_LIBRARIES - link these to use LibSoup 2.4\n\n#\n\n# Copyright (C) 2012 Raphael Kubo da Costa <rakuco@webkit.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# 1.  Redistributions of source code must retain the above copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n# 2.  Redistributions in binary form must reproduce the above copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND ITS CONTRIBUTORS ``AS\n\n# IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n\n# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\n# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR ITS\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\n# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\n# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n\n# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n\n# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n\n# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# LibSoup does not provide an easy way to retrieve its version other than its\n\n# .pc file, so we need to rely on PC_LIBSOUP_VERSION and REQUIRE the .pc file\n\n# to be found.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "build-cmake/CMakeModules/FindLibZip.cmake" : {
      "ObjectId" : "76ab22428346a064c8fe7b226e99e9a24a1b86ce",
      "LastModified" : "2018-03-27T14:04:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Finds libzip.\n\n#\n\n# This module defines:\n\n# LIBZIP_INCLUDE_DIR_ZIP\n\n# LIBZIP_INCLUDE_DIR_ZIPCONF\n\n# LIBZIP_LIBRARY\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "build-cmake/CMakeModules/FindLinuxDVB.cmake" : {
      "ObjectId" : "4e596a1427166ce0830545dc001f5fa322bfc651",
      "LastModified" : "2018-03-27T14:04:15Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "build-cmake/CMakeModules/FindPango.cmake" : {
      "ObjectId" : "64bf9ac4e70f595f1c8d4dac202bbc2b7ffe380d",
      "LastModified" : "2018-03-27T14:04:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the pango library\n\n# Once done this will define\n\n#\n\n#  PANGO_FOUND - system has pango\n\n#  PANGO_INCLUDE_DIRS - the pango include directory\n\n#  PANGO_LIBRARIES - Link these to use pango\n\n#\n\n# Define PANGO_MIN_VERSION for which version desired.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Report results\n",
        "Line" : 29,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Hide advanced variables from CMake GUIs\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "build-cmake/CMakeModules/FindRSVG.cmake" : {
      "ObjectId" : "49480ba3649e220d31eba143b6c58b9c2095ca69",
      "LastModified" : "2018-03-27T14:04:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libRSVG\n\n# RSVG_FOUND - system has pango\n\n# RSVG_LIBRARIES - path to the library\n\n# RSVG_INCLUDE_DIRS - include dirs\n\n# RSVG_DEFINITIONS\n\n# \n\n# COPYING-CMAKE-SCRIPTS\n\n# Alexander Couzens <lynxis@base45.de>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set RSVG_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "build-cmake/CMakeModules/FindSDL2.cmake" : {
      "ObjectId" : "0badaa10d44b688974e2e1cccfa6841cd333250b",
      "LastModified" : "2018-03-27T14:04:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module defines\n\n# SDL2_LIBRARY, the name of the library to link against\n\n# SDL2_FOUND, if false, do not try to link to SDL2\n\n# SDL2_INCLUDE_DIR, where to find SDL.h\n\n#\n\n# This module responds to the the flag:\n\n# SDL2_BUILDING_LIBRARY\n\n# If this is defined, then no SDL2main will be linked in because\n\n# only applications need main().\n\n# Otherwise, it is assumed you are building an application and this\n\n# module will attempt to locate and set the the proper link flags\n\n# as part of the returned SDL2_LIBRARY variable.\n\n#\n\n# Don't forget to include SDLmain.h and SDLmain.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDL2main which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL2 library\n\n# (SDL2.dll, libsdl2.so, SDL2.framework, etc).\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2DIR\n\n# used in building SDL2.\n\n# l.e.galup  9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL guidelines.\n\n# Added a search for SDL2main which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL convention\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 75,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 76,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 77,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDL2main. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDL2main for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 105,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# SDL2 may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MinGW needs an additional link flag, -mwindows\n\n# It's total link flags should look like -lmingw32 -lSDL2main -lSDL2 -mwindows\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# For SDL2main\n",
        "Line" : 134,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 141,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 151,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# For MinGW library\n",
        "Line" : 158,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 163,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 165,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 14
    },
    "build-cmake/CMakeModules/FindSDL2_image.cmake" : {
      "ObjectId" : "436ae900dfde80acad4072d3e5c533e678e1d8ce",
      "LastModified" : "2018-03-27T14:04:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate SDL_image library\n\n#\n\n# This module defines:\n\n#\n\n# ::\n\n#\n\n#   SDL_IMAGE_LIBRARIES, the name of the library to link against\n\n#   SDL_IMAGE_INCLUDE_DIRS, where to find the headers\n\n#   SDL_IMAGE_FOUND, if false, do not try to link against\n\n#   SDL_IMAGE_VERSION_STRING - human-readable string containing the version of SDL_image\n\n#\n\n#\n\n#\n\n# For backward compatiblity the following variables are also set:\n\n#\n\n# ::\n\n#\n\n#   SDLIMAGE_LIBRARY (same value as SDL_IMAGE_LIBRARIES)\n\n#   SDLIMAGE_INCLUDE_DIR (same value as SDL_IMAGE_INCLUDE_DIRS)\n\n#   SDLIMAGE_FOUND (same value as SDL_IMAGE_FOUND)\n\n#\n\n#\n\n#\n\n# $SDLDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$SDLDIR used in building SDL.\n\n#\n\n# Created by Eric Wing.  This was influenced by the FindSDL.cmake\n\n# module, but with modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n# Copyright 2012 Benjamin Eikel\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# path suffixes to search inside ENV{SDLDIR}\n",
        "Line" : 50,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# for backward compatiblity\n\n#set(SDLIMAGE_LIBRARY ${SDL_IMAGE_LIBRARIES})\n\n#set(SDLIMAGE_INCLUDE_DIR ${SDL_IMAGE_INCLUDE_DIRS})\n\n#set(SDLIMAGE_FOUND ${SDL_IMAGE_FOUND})\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "build-cmake/CMakeModules/FindSDL2_ttf.cmake" : {
      "ObjectId" : "421fe2e99374a11362ede997d835926fc87519d7",
      "LastModified" : "2018-03-27T14:04:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate SDL_image library\n\n#\n\n# This module defines:\n\n#\n\n# ::\n\n#\n\n#   SDL_TTF_LIBRARIES, the name of the library to link against\n\n#   SDL_TTF_INCLUDE_DIRS, where to find the headers\n\n#   SDL_TTF_FOUND, if false, do not try to link against\n\n#   SDL_F_VERSION_STRING - human-readable string containing the version of SDL_ttf\n\n#\n\n#\n\n#\n\n# For backward compatiblity the following variables are also set:\n\n#\n\n# ::\n\n#\n\n#   SDLTTF_LIBRARY (same value as SDL_TTF_LIBRARIES)\n\n#   SDLTTF_INCLUDE_DIR (same value as SDL_TTF_INCLUDE_DIRS)\n\n#   SDLTTF_FOUND (same value as SDL_TTF_FOUND)\n\n#\n\n#\n\n#\n\n# $SDLDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$SDLDIR used in building SDL.\n\n#\n\n# Created by Eric Wing.  This was influenced by the FindSDL.cmake\n\n# module, but with modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n# Copyright 2012 Benjamin Eikel\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# path suffixes to search inside ENV{SDLDIR}\n",
        "Line" : 50,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# for backward compatiblity\n\n#set(SDLTTF_LIBRARY ${SDL_TTF_LIBRARIES})\n\n#set(SDLTTF_INCLUDE_DIR ${SDL_TTF_INCLUDE_DIRS})\n\n#set(SDLTTF_FOUND ${SDL_TTF_FOUND})\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "build-cmake/CMakeModules/cef_macros.cmake" : {
      "ObjectId" : "48b287eabbcd8819de434fa50b08f2d23e97173a",
      "LastModified" : "2018-03-27T14:04:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 The Chromium Embedded Framework Authors. All rights\n\n# reserved. Use of this source code is governed by a BSD-style license that\n\n# can be found in the LICENSE file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Must be loaded via FindCEF.cmake.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Shared macros.\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Print the current CEF configuration.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Append platform specific sources to a list of sources.\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Determine the target output directory based on platform and generator.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# By default Ninja and Make builds don't create a subdirectory named after\n\n# the configuration.\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Output binaries (executables, libraries) to the correct directory.\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Copy a list of files from one directory to another. Relative files paths are maintained.\n\n# The path component of the source |file_list| will be removed.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# Linux macros.\n\n#\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Use pkg-config to find Linux libraries and update compiler/linker variables.\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Read pkg-config info into variables.\n",
        "Line" : 130,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Strip leading and trailing whitepspace.\n",
        "Line" : 135,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Convert to a list.\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Update build variables.\n",
        "Line" : 145,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Set SUID permissions on the specified executable.\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#\n\n# Mac OS X macros.\n\n#\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Fix the framework rpath in the helper executable.\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# The helper is in $app_name.app/Contents/Frameworks/$app_name Helper.app/Contents/MacOS/\n\n# so set rpath up to Contents/ so that the loader can find Frameworks/.\n",
        "Line" : 176,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Fix the framework rpath in the main executable.\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# The main app is at $app_name.app/Contents/MacOS/$app_name\n\n# so set rpath up to Contents/ so that the loader can find Frameworks/.\n",
        "Line" : 184,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Manually process and copy over resource files.\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Remove one or more prefixes from the source paths.\n",
        "Line" : 193,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Determine the absolute source and target paths.\n",
        "Line" : 199,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Change the target file extension.\n",
        "Line" : 208,
        "CharPositionInLine" : 6
      },
      "25" : {
        "Text" : "# Create the target directory.\n",
        "Line" : 215,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "# Compile the XIB file to a NIB.\n",
        "Line" : 217,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# Copy the file as-is.\n",
        "Line" : 222,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "#\n\n# Windows macros.\n\n#\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Add custom manifest files to an executable target.\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#\n\n# Target configuration macros.\n\n#\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Add a logical target that can be used to link the specified libraries into an\n\n# executable target.\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Set common target properties. Use SET_LIBRARY_TARGET_PROPERTIES() or\n\n# SET_EXECUTABLE_TARGET_PROPERTIES() instead of calling this macro directly.\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Compile flags.\n",
        "Line" : 273,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# Compile definitions.\n",
        "Line" : 278,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# Include directories.\n",
        "Line" : 283,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# Linker flags.\n",
        "Line" : 286,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# Set Xcode target properties.\n",
        "Line" : 301,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# -std=gnu++11\n\n# -fno-objc-link-runtime\n\n# -Wobjc-missing-property-synthesis\n",
        "Line" : 304,
        "CharPositionInLine" : 78
      },
      "39" : {
        "Text" : "# -Wl,-dead_strip\n\n# -std=c99\n\n# No -fasm-blocks\n",
        "Line" : 308,
        "CharPositionInLine" : 78
      },
      "40" : {
        "Text" : "# -fno-exceptions\n\n# -fno-rtti\n\n# No -mpascal-strings\n\n# -fvisibility-inlines-hidden\n\n# -fobjc-call-cxx-cdtors\n\n# -fvisibility=hidden\n\n# -fno-threadsafe-statics\n\n# -Werror\n",
        "Line" : 312,
        "CharPositionInLine" : 78
      },
      "41" : {
        "Text" : "# -Wnewline-eof\n",
        "Line" : 321,
        "CharPositionInLine" : 78
      },
      "42" : {
        "Text" : "# Set library-specific properties.\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Shared library linker flags.\n",
        "Line" : 333,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# Set executable-specific properties.\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Executable linker flags.\n",
        "Line" : 352,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 46
    },
    "build-cmake/CMakeModules/cef_variables.cmake" : {
      "ObjectId" : "cc8c2b60fbaaa4c6f7cdf8328397cc262c7de96d",
      "LastModified" : "2018-03-27T14:04:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2016 The Chromium Embedded Framework Authors. All rights\n\n# reserved. Use of this source code is governed by a BSD-style license that\n\n# can be found in the LICENSE file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Must be loaded via FindCEF.cmake.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# Shared configuration.\n\n#\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Determine the platform.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Determine the project architecture.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# PROJECT_ARCH should be specified on Mac OS X.\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Determine the build type.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# CMAKE_BUILD_TYPE should be specified when using Ninja or Unix Makefiles.\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Path to the include directory.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Path to the libcef_dll_wrapper target.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Shared compiler/linker flags.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Allow C++ programs to use stdint.h macros specified in the C99 standard that aren't \n\n# in the C++ standard (e.g. UINT8_MAX, INT64_MIN, etc)\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#\n\n# Linux configuration.\n\n#\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Platform-specific compiler/linker flags.\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Avoid assumptions regarding non-aliasing of objects of different types\n\n# Generate position-independent code for shared libraries\n\n# Protect some vulnerable functions from stack-smashing (security feature)\n\n# Support stack unwinding for backtrace()\n\n# Give hidden visibility to declarations that are not explicitly marked as visible\n\n# Set the minimum buffer size protected by SSP (security feature, related to stack-protector)\n\n# Use pipes rather than temporary files for communication between build stages\n\n# Use the pthread library\n\n# Enable all warnings\n\n# Treat warnings as errors\n\n# Don't warn about missing field initializers\n\n# Don't warn about unused parameters\n",
        "Line" : 68,
        "CharPositionInLine" : 36
      },
      "15" : {
        "Text" : "# Use the C99 language standard\n",
        "Line" : 82,
        "CharPositionInLine" : 36
      },
      "16" : {
        "Text" : "#-fno-exceptions                 # Disable exceptions\n\n#-fno-rtti                       # Disable real-time type information\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Don't generate thread-safe statics\n\n# Give hidden visibility to inlined class member functions\n\n# Use the C++11 language standard including GNU extensions\n\n# Warn about mixed signed/unsigned type comparisons\n",
        "Line" : 87,
        "CharPositionInLine" : 36
      },
      "18" : {
        "Text" : "# Disable optimizations\n\n# Generate debug information\n",
        "Line" : 93,
        "CharPositionInLine" : 36
      },
      "19" : {
        "Text" : "# Optimize for maximum speed\n\n# Enable linker optimizations to improve locality of reference for data sections\n\n# Enable linker optimizations to improve locality of reference for function sections\n\n# Ignore the #ident directive\n\n# Undefine _FORTIFY_SOURCE in case it was previously defined\n\n# Add memory and string function protection (security feature, related to stack-protector)\n",
        "Line" : 97,
        "CharPositionInLine" : 36
      },
      "20" : {
        "Text" : "# Generate position-independent code for shared libraries\n\n# Use the pthread library\n\n# Don't generate new-style dynamic tags in ELF\n\n# Treat warnings as errors\n\n# Set rpath so that libraries can be placed next to the executable\n\n# Mark the stack as non-executable (security feature)\n\n# Resolve symbols on program start instead of on first use (security feature)\n\n# Mark relocation sections as read-only (security feature)\n",
        "Line" : 105,
        "CharPositionInLine" : 36
      },
      "21" : {
        "Text" : "# Enable linker optimizations\n\n# Only link libraries that export symbols used by the binary\n\n# Remove unused code resulting from -fdata-sections and -function-sections\n",
        "Line" : 115,
        "CharPositionInLine" : 36
      },
      "22" : {
        "Text" : "# Allow the Large File Support (LFS) interface to replace the old interface\n",
        "Line" : 120,
        "CharPositionInLine" : 36
      },
      "23" : {
        "Text" : "# Not a debug build\n",
        "Line" : 123,
        "CharPositionInLine" : 36
      },
      "24" : {
        "Text" : "# Don't warn about unused local typedefs\n",
        "Line" : 132,
        "CharPositionInLine" : 34
      },
      "25" : {
        "Text" : "# Don't warn about invalid suffixes on literals\n",
        "Line" : 139,
        "CharPositionInLine" : 34
      },
      "26" : {
        "Text" : "# Don't warn about type narrowing\n",
        "Line" : 146,
        "CharPositionInLine" : 34
      },
      "27" : {
        "Text" : "# 64-bit architecture.\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# 32-bit architecture.\n",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# Standard libraries.\n",
        "Line" : 172,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# CEF directory paths.\n",
        "Line" : 177,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# CEF library paths.\n",
        "Line" : 183,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# List of CEF binary files.\n",
        "Line" : 187,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# List of CEF resource files.\n",
        "Line" : 195,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "#\n\n# Mac OS X configuration.\n\n#\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Platform-specific compiler/linker flags.\n\n# See also Xcode target properties in cef_macros.cmake.\n",
        "Line" : 212,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# Avoid assumptions regarding non-aliasing of objects of different types\n\n# Protect some vulnerable functions from stack-smashing (security feature)\n\n# Support stack unwinding for backtrace()\n\n# Give hidden visibility to declarations that are not explicitly marked as visible\n\n# Enable all warnings\n\n# Treat warnings as errors\n\n# Enable additional warnings\n\n# Warn whenever an #else or an #endif is followed by text\n\n# Warn about no newline at end of file\n\n# Don't warn about missing field initializers\n\n# Don't warn about unused parameters\n",
        "Line" : 216,
        "CharPositionInLine" : 36
      },
      "37" : {
        "Text" : "# Use the C99 language standard\n",
        "Line" : 229,
        "CharPositionInLine" : 36
      },
      "38" : {
        "Text" : "# Disable exceptions\n\n# Disable real-time type information\n\n# Don't generate thread-safe statics\n\n# Call the constructor/destructor of C++ instance variables in ObjC objects\n\n# Give hidden visibility to inlined class member functions\n\n# Use the C++11 language standard including GNU extensions\n\n# Don't warn about type narrowing\n\n# Warn about mixed signed/unsigned type comparisons\n",
        "Line" : 232,
        "CharPositionInLine" : 36
      },
      "39" : {
        "Text" : "# Disable optimizations\n\n# Generate debug information\n",
        "Line" : 242,
        "CharPositionInLine" : 36
      },
      "40" : {
        "Text" : "# Optimize for maximum speed plus a few extras\n",
        "Line" : 246,
        "CharPositionInLine" : 36
      },
      "41" : {
        "Text" : "# Search for static or shared library versions in the same pass\n\n# Support creation of ObjC static libraries\n\n# Generate position-independent code suitable for executables only\n",
        "Line" : 249,
        "CharPositionInLine" : 36
      },
      "42" : {
        "Text" : "# Strip dead code\n",
        "Line" : 254,
        "CharPositionInLine" : 36
      },
      "43" : {
        "Text" : "# Don't warn about potentially uninstantiated static members\n",
        "Line" : 262,
        "CharPositionInLine" : 36
      },
      "44" : {
        "Text" : "# Standard libraries.\n",
        "Line" : 266,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# Find the newest available base SDK.\n",
        "Line" : 273,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# Target SDK.\n",
        "Line" : 282,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# Target architecture.\n",
        "Line" : 289,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# CEF directory paths.\n",
        "Line" : 296,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# CEF library paths.\n",
        "Line" : 301,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "#\n\n# Windows configuration.\n\n#\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Configure use of the sandbox.\n",
        "Line" : 311,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# The cef_sandbox.lib static library is currently built with VS2015. It will\n\n# not link successfully with other VS versions.\n",
        "Line" : 314,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# Configure use of official build compiler settings.\n\n# When using an official build the \"Debug\" build is actually a Release build\n\n# with DCHECKs enabled. In order to link the sandbox the Debug build must\n\n# be configured with some Release-related compiler settings.\n",
        "Line" : 319,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# Don't need official build settings when the sandbox is off.\n",
        "Line" : 325,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# Consumers who run into LNK4099 warnings can pass /Z7 instead (see issue #385).\n",
        "Line" : 329,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# Platform-specific compiler/linker flags.\n",
        "Line" : 332,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# Multiprocess compilation\n\n# Enable function-level linking\n\n# Disable run-time type information\n\n# Warning level 4\n\n# Treat warnings as errors\n\n# Ignore \"unreferenced formal parameter\" warning\n\n# Ignore \"conditional expression is constant\" warning\n\n# Ignore \"conversion possible loss of data\" warning\n\n# Ignore \"nonstandard extension used: override\" warning\n\n# Ignore \"assignment operator could not be generated\" warning\n\n# Ignore \"potentially uninitialized local variable\" warning\n\n# Ignore \"unreachable code\" warning\n\n# Ignore \"function or variable may be unsafe\" warning\n",
        "Line" : 335,
        "CharPositionInLine" : 18
      },
      "58" : {
        "Text" : "# CMake adds /RTC1, /D\"_DEBUG\" and a few other values by default for Debug\n\n# builds. We can't link the sandbox with those values so clear the CMake\n\n# defaults here.\n",
        "Line" : 351,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "# Multithreaded release runtime\n",
        "Line" : 357,
        "CharPositionInLine" : 20
      },
      "60" : {
        "Text" : "# Multithreaded debug runtime\n\n# Disable optimizations\n\n# Enable basic run-time checks\n",
        "Line" : 361,
        "CharPositionInLine" : 20
      },
      "61" : {
        "Text" : "# Multithreaded release runtime\n\n# Optimize for maximum speed\n\n# Inline any suitable function\n\n# Enable string pooling\n",
        "Line" : 367,
        "CharPositionInLine" : 18
      },
      "62" : {
        "Text" : "# Generate debug information\n",
        "Line" : 373,
        "CharPositionInLine" : 18
      },
      "63" : {
        "Text" : "# No default manifest (see ADD_WINDOWS_MANIFEST macro usage)\n\n# Allow 32-bit processes to access 3GB of RAM\n",
        "Line" : 376,
        "CharPositionInLine" : 24
      },
      "64" : {
        "Text" : "# Windows platform\n\n# Unicode build\n\n# Targeting Windows 7\n\n# Use the standard's templated min/max\n\n# Exclude less common API declarations\n\n# Disable exceptions\n",
        "Line" : 380,
        "CharPositionInLine" : 38
      },
      "65" : {
        "Text" : "# Not a debug build\n\n# DCHECKs are enabled\n",
        "Line" : 389,
        "CharPositionInLine" : 40
      },
      "66" : {
        "Text" : "# Not a debug build\n",
        "Line" : 394,
        "CharPositionInLine" : 38
      },
      "67" : {
        "Text" : "# Standard libraries.\n",
        "Line" : 397,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "# CEF directory paths.\n",
        "Line" : 405,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# CEF library paths.\n",
        "Line" : 411,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "# List of CEF binary files.\n",
        "Line" : 415,
        "CharPositionInLine" : 2
      },
      "71" : {
        "Text" : "# List of CEF resource files.\n",
        "Line" : 427,
        "CharPositionInLine" : 2
      },
      "72" : {
        "Text" : "# Required by cef_sandbox.lib\n\n# Used by apps to test if the sandbox is enabled\n",
        "Line" : 440,
        "CharPositionInLine" : 24
      },
      "73" : {
        "Text" : "# Libraries required by cef_sandbox.lib.\n",
        "Line" : 444,
        "CharPositionInLine" : 4
      },
      "74" : {
        "Text" : "# CEF sandbox library paths.\n",
        "Line" : 452,
        "CharPositionInLine" : 4
      },
      "75" : {
        "Text" : "# Configure use of ATL.\n",
        "Line" : 457,
        "CharPositionInLine" : 2
      },
      "76" : {
        "Text" : "# Determine if the Visual Studio install supports ATL.\n",
        "Line" : 460,
        "CharPositionInLine" : 4
      },
      "77" : {
        "Text" : "# Used by apps to test if ATL support is enabled\n",
        "Line" : 470,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 78
    },
    "lib/Makefile.am" : {
      "ObjectId" : "dd83fa05c84a6029ce0c48ea084b393a4c0eef13",
      "LastModified" : "2018-03-27T14:04:15Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am -- Template for generating Makefile via Automake.\n\n# Copyright (C) 2006-2018 PUC-Rio/Laboratorio TeleMidia\n\n#\n\n# This file is part of Ginga (Ginga-NCL).\n\n#\n\n# Ginga is free software: you can redistribute it and/or modify it\n\n# under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation, either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# Ginga is distributed in the hope that it will be useful, but WITHOUT\n\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n\n# License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with Ginga.  If not, see <https://www.gnu.org/licenses/>.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# WITH_LIBRSVG\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# WITH_LUA\n",
        "Line" : 64,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# WITH_NCLUA\n",
        "Line" : 68,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# WITH_CEF\n",
        "Line" : 84,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "src-gui/Makefile.am" : {
      "ObjectId" : "a11400965edbfd19d1115236cdb5af365414d21f",
      "LastModified" : "2018-05-23T19:22:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am -- Template for generating Makefile via Automake.\n\n# Copyright (C) 2006-2018 PUC-Rio/Laboratorio TeleMidia\n\n#\n\n# This file is part of Ginga (Ginga-NCL).\n\n#\n\n# Ginga is free software: you can redistribute it and/or modify it\n\n# under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation, either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# Ginga is distributed in the hope that it will be useful, but WITHOUT\n\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n\n# License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with Ginga.  If not, see <https://www.gnu.org/licenses/>.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src-gui/icons/Makefile.am" : {
      "ObjectId" : "b9ee1c293144ba97ec67f179b6821ae0c263ce31",
      "LastModified" : "2018-05-23T19:22:26Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am -- Template for generating Makefile via Automake.\n\n# Copyright (C) 2006-2018 PUC-Rio/Laboratorio TeleMidia\n\n#\n\n# This file is part of Ginga (Ginga-NCL).\n\n#\n\n# Ginga is free software: you can redistribute it and/or modify it\n\n# under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation, either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# Ginga is distributed in the hope that it will be useful, but WITHOUT\n\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n\n# License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with Ginga.  If not, see <https://www.gnu.org/licenses/>.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src-gui/style/Makefile.am" : {
      "ObjectId" : "bdb3801b0e820d56164098a9a239d0f63879df56",
      "LastModified" : "2018-03-27T14:04:15Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am -- Template for generating Makefile via Automake.\n\n# Copyright (C) 2006-2018 PUC-Rio/Laboratorio TeleMidia\n\n#\n\n# This file is part of Ginga (Ginga-NCL).\n\n#\n\n# Ginga is free software: you can redistribute it and/or modify it\n\n# under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation, either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# Ginga is distributed in the hope that it will be useful, but WITHOUT\n\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n\n# License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with Ginga.  If not, see <https://www.gnu.org/licenses/>.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/Makefile.am" : {
      "ObjectId" : "016c88de319c8b34a9d2f99920f986d808eac9b8",
      "LastModified" : "2018-03-27T14:04:15Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am -- Template for generating Makefile via Automake.\n\n# Copyright (C) 2006-2018 PUC-Rio/Laboratorio TeleMidia\n\n#\n\n# This file is part of Ginga (Ginga-NCL).\n\n#\n\n# Ginga is free software: you can redistribute it and/or modify it\n\n# under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation, either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# Ginga is distributed in the hope that it will be useful, but WITHOUT\n\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n\n# License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with Ginga.  If not, see <https://www.gnu.org/licenses/>.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests-ncl/generated/Makefile.am" : {
      "ObjectId" : "a47f418a1834d38e3b060ad423fd30f0cf1de0cf",
      "LastModified" : "2018-05-22T23:51:28Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am -- Template for generating Makefile via Automake.\n\n# Copyright (C) 2006-2018 PUC-Rio/Laboratorio TeleMidia\n\n#\n\n# This file is part of Ginga (Ginga-NCL).\n\n#\n\n# Ginga is free software: you can redistribute it and/or modify it\n\n# under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation, either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# Ginga is distributed in the hope that it will be useful, but WITHOUT\n\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n\n# License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with Ginga.  If not, see <https://www.gnu.org/licenses/>.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# empty\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# no region\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# nested region\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# no descriptor\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# property: left, right, top, width, height, location, size, and bounds.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# remote media and media nested in contexts\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# property: explicitDur\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# property: focusIndex\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# property: transparency\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# property: visible\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# property: visible\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# link: loop\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# link: stop self\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# link: animation on background color\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# link: animation on width and height\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# link: animation on transparency\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# actinos (start, stop, pause, resume, abort)\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# transition-barwipe\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# transition-diagonalwipe\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# transition-fade\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21,
      "Errorlog" : "line 221:57 token recognition error at: '\\1'\nline 242:60 token recognition error at: '\\1'\nline 243:68 token recognition error at: '\\1'\nline 262:55 token recognition error at: '\\1'\nline 263:63 token recognition error at: '\\1'\n"
    },
    "tests/Makefile.am" : {
      "ObjectId" : "01c2c338f1290f767ebeccb43854237bb068fa70",
      "LastModified" : "2018-05-22T23:51:28Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am -- Template for generating Makefile via Automake.\n\n# Copyright (C) 2006-2018 PUC-Rio/Laboratorio TeleMidia\n\n#\n\n# This file is part of Ginga (Ginga-NCL).\n\n#\n\n# Ginga is free software: you can redistribute it and/or modify it\n\n# under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation, either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# Ginga is distributed in the hope that it will be useful, but WITHOUT\n\n# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n\n# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n\n# License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with Ginga.  If not, see <https://www.gnu.org/licenses/>.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Auxiliary scripts.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Generate env.sh, env.csh, and gdb.cfg.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Configure valgrind and generate suppfile from suppfile.m4.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Setup test framework.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Setup tests environment.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Auxiliary programs.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Test applications.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Test programs.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# lib/aux-ginga.h ----------------------------------------------------------\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# lib/Document.h -----------------------------------------------------------\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# lib/Predicate.h ----------------------------------------------------------\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# lib/Event.h --------------------------------------------------------------\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# lib/Object.h -------------------------------------------------------------\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# lib/PlayerSiggen.h -------------------------------------------------------\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# lib/Media.h --------------------------------------------------------------\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# lib/MediaSettings.h ------------------------------------------------------\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# lib/Context.h ------------------------------------------------------------\n",
        "Line" : 304,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# lib/Switch.h ------------------------------------------------------------\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# lib/Parser.h -------------------------------------------------------------\n",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# lib/ParserLua.h ----------------------------------------------------------\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# lib/ginga.h (Ginga Library API) ------------------------------------------\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    }
  },
  "FileTypes" : {
    "CMAKE" : 20,
    "AUTOMAKE" : 8
  },
  "ElapsedTime" : 3263
}