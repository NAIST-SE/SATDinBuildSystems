{
  "Repository" : "9999667",
  "Revision" : "HEAD",
  "ObjectId" : "9a7d8c303ee1df8763165673909c8f9e1db60d1d",
  "CommitTime" : "2015-06-26T19:21:18Z",
  "Files" : {
    "catkin/src/.old/audio_common/audio_capture/CMakeLists.txt" : {
      "ObjectId" : "c2d0adbe90c4c21fa1ee79ddfd136a6ace020d45",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/.old/audio_common/audio_common/CMakeLists.txt" : {
      "ObjectId" : "d0f5151e03a897945be73b41343e04ac1596ae29",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/.old/audio_common/audio_common_msgs/CMakeLists.txt" : {
      "ObjectId" : "eb8ff56c0ea40fdaa65779d20b0d78f0a29a13c0",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/.old/audio_common/audio_play/CMakeLists.txt" : {
      "ObjectId" : "f3c09bca57da536e611f52ee65a921638146159c",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/.old/audio_common/sound_play/CMakeLists.txt" : {
      "ObjectId" : "1743f16cafe0011b1c58367e995915cde9826c97",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/.old/audio_common/sound_play/test/CMakeLists.txt" : {
      "ObjectId" : "901b16ed1445808b1642503dabbc64907ec311fb",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/.old/finder_low_py/CMakeLists.txt" : {
      "ObjectId" : "c25868793488ab2d5f804eef9a58d0ba18a823a9",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and scripts declared therein get installed\n\n# catkin_python_setup()\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#######################################\n\n## Declare ROS messages and services ##\n\n#######################################\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Generate messages in the 'msg' folder\n\n# add_message_files(\n\n#   FILES\n\n#   Message1.msg\n\n#   Message2.msg\n\n# )\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Generate services in the 'srv' folder\n\n# add_service_files(\n\n#   FILES\n\n#   Service1.srv\n\n#   Service2.srv\n\n# )\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n\n# generate_messages(\n\n#   DEPENDENCIES\n\n#   std_msgs  # Or other packages containing msgs\n\n# )\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###################################################\n\n## Declare things to be passed to other projects ##\n\n###################################################\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n\n#catkin_package(\n\n#   INCLUDE_DIRS include\n\n#  LIBRARIES finder_teleop\n\n#  CATKIN_DEPENDS joy roscpp stdmsgs\n\n#  DEPENDS system_lib\n\n#)\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Specify additional locations of header files\n\n#include_directories(include\n\n#  ${catkin_INCLUDE_DIRS}\n\n#)\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Declare a cpp library\n\n# add_library(finder_teleop\n\n#   src/${PROJECT_NAME}/finder_teleop.cpp\n\n# )\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Declare a cpp executable\n\n#add_executable(finder_teleop_node src/finder_teleop_joy.cpp)\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Add dependencies to the executable\n\n# add_dependencies(finder_teleop_node ${PROJECT_NAME})\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Specify libraries to link a library or executable target against\n\n#target_link_libraries(finder_teleop_node\n\n#  ${catkin_LIBRARIES}\n\n#)\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## not required for python when using catkin_python_setup()\n\n# install(PROGRAMS\n\n#   scripts/my_python_script\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Mark executables and/or libraries for installation\n\n# install(TARGETS finder_teleop finder_teleop_node\n\n#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Mark cpp header files for installation\n\n# install(DIRECTORY include/${PROJECT_NAME}/\n\n#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n\n#   FILES_MATCHING PATTERN \"*.h\"\n\n#   PATTERN \".svn\" EXCLUDE\n\n# )\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n\n# install(FILES\n\n#   # myfile1\n\n#   # myfile2\n\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n# )\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_finder_teleop.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "catkin/src/.old/hugo/CMakeLists.txt" : {
      "ObjectId" : "ebc44db90f55616fefc320687ef2dc371ba4425d",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/.old/old_finder/CMakeLists.txt" : {
      "ObjectId" : "5e386c0acf23402d5362333dbcdf8d243beb121c",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#catkin_python_setup()\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_executable(brazo_console src/brazo_console.cpp)\n\n#target_link_libraries(brazo_console ${catkin_LIBRARIES})\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#install(PROGRAMS\n\n#\tscripts/battery_monitor.py\n\n#\tscripts/odometry.py\n\n#\tscripts/joy.py\n\n#\tscripts/virtual_joy.py\n\n#\tscripts/twist_to_motors.py\t\n\n#\tDESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n#)",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "catkin/src/.old/usb_cam/CMakeLists.txt" : {
      "ObjectId" : "5a1a949227e291ecfef68e313cd2554a1bd535fe",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Mark executables and/or libraries for installation\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "catkin/src/.old/video/CMakeLists.txt" : {
      "ObjectId" : "a3fb02a99b65817c0c8feffc553c13f73e01956e",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/CMakeLists.txt" : {
      "ObjectId" : "3703df4eb44d42a204494d52ac343d0342b2ae64",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/brazo/CMakeLists.txt" : {
      "ObjectId" : "de758ca66addedaac4616385a532939fb5b26fd9",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#catkin_python_setup()\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_executable(brazo_console src/brazo_console.cpp)\n\n#target_link_libraries(brazo_console ${catkin_LIBRARIES})\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "catkin/src/cmake_modules/CMakeLists.txt" : {
      "ObjectId" : "8a44335d2c29bfb9e13bf001de08a5d9b1a99cf8",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Install all cmake files\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "catkin/src/cmake_modules/cmake/Modules/FindEigen.cmake" : {
      "ObjectId" : "8587367d331b5d266459f543d0e2c25b1b1dd3b0",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###############################################################################\n\n# \n\n# CMake script for finding the Eigen library.\n\n# \n\n# http://eigen.tuxfamily.org/index.php?title=Main_Page\n\n# \n\n# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD\n\n# license.\n\n# \n\n# \n\n# Input variables:\n\n# \n\n# - Eigen_ROOT_DIR (optional): When specified, header files and libraries\n\n#   will be searched for in `${Eigen_ROOT_DIR}/include` and\n\n#   `${Eigen_ROOT_DIR}/libs` respectively, and the default CMake search order\n\n#   will be ignored. When unspecified, the default CMake search order is used.\n\n#   This variable can be specified either as a CMake or environment variable.\n\n#   If both are set, preference is given to the CMake variable.\n\n#   Use this variable for finding packages installed in a nonstandard location,\n\n#   or for enforcing that one of multiple package installations is picked up.\n\n# \n\n# Cache variables (not intended to be used in CMakeLists.txt files)\n\n# \n\n# - Eigen_INCLUDE_DIR: Absolute path to package headers.\n\n# \n\n# \n\n# Output variables:\n\n# \n\n# - Eigen_FOUND: Boolean that indicates if the package was found\n\n# - Eigen_INCLUDE_DIRS: Paths to the necessary header files\n\n# - Eigen_VERSION: Version of Eigen library found\n\n# - Eigen_DEFINITIONS: Definitions to be passed on behalf of eigen\n\n# \n\n# \n\n# Example usage:\n\n# \n\n#   # Passing the version means Eigen_FOUND will only be TRUE if a\n\n#   # version >= the provided version is found.\n\n#   find_package(Eigen 3.1.2)\n\n#   if(NOT Eigen_FOUND)\n\n#     # Error handling\n\n#   endif()\n\n#   ...\n\n#   add_definitions(${Eigen_DEFINITIONS})\n\n#   ...\n\n#   include_directories(${Eigen_INCLUDE_DIRS} ...)\n\n# \n\n###############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Backwards Compatibility\n",
        "Line" : 61,
        "CharPositionInLine" : 46
      },
      "CommentCount" : 2
    },
    "catkin/src/cmake_modules/cmake/Modules/FindNUMPY.cmake" : {
      "ObjectId" : "6c95ffdd66add76177c0baf6d900a54637812e01",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file was downloaded from\n\n# http://svn.lam.fr/repos/unsio/trunk/py/cmake/FindNumPy.cmake\n\n# - Find the NumPy libraries\n\n# This module finds if NumPy is installed, and sets the following variables\n\n# indicating where it is.\n\n#\n\n# TODO: Update to provide the libraries and paths for linking npymath lib.\n\n#\n\n# NUMPY_FOUND - was NumPy found\n\n# NUMPY_VERSION - the version of NumPy found as a string\n\n# NUMPY_VERSION_MAJOR - the major version number of NumPy\n\n# NUMPY_VERSION_MINOR - the minor version number of NumPy\n\n# NUMPY_VERSION_PATCH - the patch version number of NumPy\n\n# NUMPY_VERSION_DECIMAL - e.g. version 1.6.1 is 10601\n\n# NUMPY_INCLUDE_DIRS - path to the NumPy include files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#============================================================================\n\n# Copyright 2012 Continuum Analytics, Inc.\n\n#\n\n# MIT License\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining\n\n# a copy of this software and associated documentation files\n\n# (the \"Software\"), to deal in the Software without restriction, including\n\n# without limitation the rights to use, copy, modify, merge, publish,\n\n# distribute, sublicense, and/or sell copies of the Software, and to permit\n\n# persons to whom the Software is furnished to do so, subject to\n\n# the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n\n# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n\n# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\n# OTHER DEALINGS IN THE SOFTWARE.\n\n#\n\n#============================================================================\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#   \n\n# Example usage:\n\n#   \n\n#   # Passing the version means NUMPY_FOUND will only be TRUE if a\n\n#   # version >= the provided version is found.\n\n#   find_package(NUMPY 1.7)\n\n#   if(NOT NUMPY_FOUND)\n\n#     # Error handling\n\n#   endif()\n\n#   ...\n\n#   include_directories(${NUMPY_INCLUDE_DIRS} ...)\n\n# \n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Finding NumPy involves calling the Python interpreter\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Convert the process output into a list\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Just in case there is unexpected output from the Python command.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The output from Python was unexpected. Raise an error always\n\n# here, because we found NumPy, but it appears to be corrupted somehow.\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Make sure all directory separators are '/'\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Get the major and minor version numbers\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "catkin/src/cmake_modules/cmake/Modules/FindTBB.cmake" : {
      "ObjectId" : "f9e3e0f57fc816a7edc5ad5919c255a65838feed",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Intel Threading Building Blocks include paths and libraries\r\n\n# FindTBB.cmake can be found at https://code.google.com/p/findtbb/\r\n\n# Written by Hannes Hofmann <hannes.hofmann _at_ informatik.uni-erlangen.de>\r\n\n# Improvements by Gino van den Bergen <gino _at_ dtecta.com>,\r\n\n#   Florian Uhlig <F.Uhlig _at_ gsi.de>,\r\n\n#   Jiri Marsik <jiri.marsik89 _at_ gmail.com>\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The MIT License\r\n\n#\r\n\n# Copyright (c) 2011 Hannes Hofmann\r\n\n#\r\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\r\n\n# of this software and associated documentation files (the \"Software\"), to deal\r\n\n# in the Software without restriction, including without limitation the rights\r\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n\n# copies of the Software, and to permit persons to whom the Software is\r\n\n# furnished to do so, subject to the following conditions:\r\n\n#\r\n\n# The above copyright notice and this permission notice shall be included in\r\n\n# all copies or substantial portions of the Software.\r\n\n#\r\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n\n# THE SOFTWARE.\r\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GvdB: This module uses the environment variable TBB_ARCH_PLATFORM which defines architecture and compiler.\r\n\n#   e.g. \"ia32/vc8\" or \"em64t/cc4.1.0_libc2.4_kernel2.6.16.21\"\r\n\n#   TBB_ARCH_PLATFORM is set by the build script tbbvars[.bat|.sh|.csh], which can be found\r\n\n#   in the TBB installation directory (TBB_INSTALL_DIR).\r\n\n#\r\n\n# GvdB: Mac OS X distribution places libraries directly in lib directory.\r\n\n#\r\n\n# For backwards compatibility, you may explicitely set the CMake variables TBB_ARCHITECTURE and TBB_COMPILER.\r\n\n# TBB_ARCHITECTURE [ ia32 | em64t | itanium ]\r\n\n#   which architecture to use\r\n\n# TBB_COMPILER e.g. vc9 or cc3.2.3_libc2.3.2_kernel2.4.21 or cc4.0.1_os10.4.9\r\n\n#   which compiler to use (detected automatically on Windows)\r\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This module respects\r\n\n# TBB_INSTALL_DIR or $ENV{TBB21_INSTALL_DIR} or $ENV{TBB_INSTALL_DIR}\r\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This module defines\r\n\n# TBB_INCLUDE_DIRS, where to find task_scheduler_init.h, etc.\r\n\n# TBB_LIBRARY_DIRS, where to find libtbb, libtbbmalloc\r\n\n# TBB_DEBUG_LIBRARY_DIRS, where to find libtbb_debug, libtbbmalloc_debug\r\n\n# TBB_INSTALL_DIR, the base TBB install directory\r\n\n# TBB_LIBRARIES, the libraries to link against to use TBB.\r\n\n# TBB_DEBUG_LIBRARIES, the libraries to link against to use TBB with debug symbols.\r\n\n# TBB_FOUND, If false, don't try to use TBB.\r\n\n# TBB_INTERFACE_VERSION, as defined in tbb/tbb_stddef.h\r\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# has em64t/vc8 em64t/vc9\r\n\n# has ia32/vc7.1 ia32/vc8 ia32/vc9\r\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Todo: add other Windows compilers such as ICL.\r\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# MAC\r\n",
        "Line" : 83,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# libs: libtbb.dylib, libtbbmalloc.dylib, *_debug\r\n",
        "Line" : 85,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# default flavor on apple: ia32/cc4.0.1_os10.4.9\r\n\n# Jiri: There is no reason to presume there is only one flavor and\r\n\n#       that user's setting of variables should be ignored.\r\n",
        "Line" : 90,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# LINUX\r\n",
        "Line" : 104,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# has em64t/cc3.2.3_libc2.3.2_kernel2.4.21 em64t/cc3.3.3_libc2.3.3_kernel2.6.5 em64t/cc3.4.3_libc2.3.4_kernel2.6.9 em64t/cc4.1.0_libc2.4_kernel2.6.16.21\r\n\n# has ia32/*\r\n\n# has itanium/*\r\n",
        "Line" : 110,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# SUN\r\n\n# not yet supported\r\n\n# has em64t/cc3.4.3_kernel5.10\r\n\n# has ia32/*\r\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-- Clear the public variables\r\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#-- Find TBB install dir and set ${_TBB_INSTALL_DIR} and cached ${TBB_INSTALL_DIR}\r\n\n# first: use CMake variable TBB_INSTALL_DIR\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# second: use environment variable\r\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Intel recommends setting TBB21_INSTALL_DIR\r\n",
        "Line" : 140,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# third: try to find path automatically\r\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# sanity check\r\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# finally: set the cached CMake variable TBB_INSTALL_DIR\r\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#-- A macro to rewrite the paths of the library. This is necessary, because\r\n\n#   find_library() always found the em64t/vc9 version of the TBB libs\r\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#    if (NOT \"${_TBB_ARCHITECTURE}\" STREQUAL \"em64t\")\r\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#    endif (NOT \"${_TBB_ARCHITECTURE}\" STREQUAL \"em64t\")\r\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#-- Look for include directory and set ${TBB_INCLUDE_DIR}\r\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Jiri: tbbvars now sets the CPATH environment variable to the directory\r\n\n#       containing the headers.\r\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#-- Look for libraries\r\n\n# GvdB: $ENV{TBB_ARCH_PLATFORM} is set by the build script tbbvars[.bat|.sh|.csh]\r\n",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Jiri: This block isn't mutually exclusive with the previous one\r\n\n#       (hence no else), instead I test if the user really specified\r\n\n#       the variables in question.\r\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# HH: deprecated\r\n",
        "Line" : 205,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Jiri: It doesn't hurt to look in more places, so I store the hints from\r\n\n#       ENV{TBB_ARCH_PLATFORM} and the TBB_ARCHITECTURE and TBB_COMPILER\r\n\n#       variables and search them both.\r\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# GvdB: Mac OS X distribution places libraries directly in lib directory.\r\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Jiri: No reason not to check the default paths. From recent versions,\r\n\n#       tbbvars has started exporting the LIBRARY_PATH and LD_LIBRARY_PATH\r\n\n#       variables, which now point to the directories of the lib files.\r\n\n#       It all makes more sense to use the ${_TBB_LIBRARY_DIR} as a HINTS\r\n\n#       argument instead of the implicit PATHS as it isn't hard-coded\r\n\n#       but computed by system introspection. Searching the LIBRARY_PATH\r\n\n#       and LD_LIBRARY_PATH environment variables is now even more important\r\n\n#       that tbbvars doesn't export TBB_ARCH_PLATFORM and it facilitates\r\n\n#       the use of TBB built from sources.\r\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#Extract path from TBB_LIBRARY name\r\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#TBB_CORRECT_LIB_DIR(TBB_LIBRARY)\r\n\n#TBB_CORRECT_LIB_DIR(TBB_MALLOC_LIBRARY)\r\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#-- Look for debug libraries\r\n\n# Jiri: Changed the same way as for the release libraries.\r\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Jiri: Self-built TBB stores the debug libraries in a separate directory.\r\n\n#       Extract path from TBB_LIBRARY_DEBUG name\r\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#TBB_CORRECT_LIB_DIR(TBB_LIBRARY_DEBUG)\r\n\n#TBB_CORRECT_LIB_DIR(TBB_MALLOC_LIBRARY_DEBUG)\r\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Jiri: Self-built TBB stores the debug libraries in a separate directory.\r\n",
        "Line" : 260,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# do only throw fatal, if this pkg is REQUIRED\r\n",
        "Line" : 270,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 38
    },
    "catkin/src/cmake_modules/cmake/Modules/FindTinyXML.cmake" : {
      "ObjectId" : "aabb323d50cf4f1b1b4cd45736fd7589df33e773",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##################################################################################################\n\n# \n\n# CMake script for finding TinyXML.\n\n# \n\n# Input variables:\n\n# \n\n# - TinyXML_ROOT_DIR (optional): When specified, header files and libraries will be searched for in\n\n#     ${TinyXML_ROOT_DIR}/include\n\n#     ${TinyXML_ROOT_DIR}/libs\n\n#   respectively, and the default CMake search order will be ignored. When unspecified, the default\n\n#   CMake search order is used.\n\n#   This variable can be specified either as a CMake or environment variable. If both are set,\n\n#   preference is given to the CMake variable.\n\n#   Use this variable for finding packages installed in a nonstandard location, or for enforcing\n\n#   that one of multiple package installations is picked up.\n\n# \n\n# \n\n# Cache variables (not intended to be used in CMakeLists.txt files)\n\n# \n\n# - TinyXML_INCLUDE_DIR: Absolute path to package headers.\n\n# - TinyXML_LIBRARY: Absolute path to library.\n\n# \n\n# \n\n# Output variables:\n\n# \n\n# - TinyXML_FOUND: Boolean that indicates if the package was found\n\n# - TinyXML_INCLUDE_DIRS: Paths to the necessary header files\n\n# - TinyXML_LIBRARIES: Package libraries\n\n# \n\n# \n\n# Example usage:\n\n# \n\n#  find_package(TinyXML)\n\n#  if(NOT TinyXML_FOUND)\n\n#    # Error handling\n\n#  endif()\n\n#  ...\n\n#  include_directories(${TinyXML_INCLUDE_DIRS} ...)\n\n#  ...\n\n#  target_link_libraries(my_target ${TinyXML_LIBRARIES})\n\n# \n\n##################################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get package location hint from environment variable (if any)\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Search path for nonstandard package locations\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find headers and libraries\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Output variables generation\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Enforce case-correctness: Set appropriately cased variable...\n",
        "Line" : 68,
        "CharPositionInLine" : 36
      },
      "6" : {
        "Text" : "# ...and unset uppercase variable generated by find_package_handle_standard_args\n",
        "Line" : 69,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 7
    },
    "catkin/src/cmake_modules/cmake/Modules/FindXenomai.cmake" : {
      "ObjectId" : "e59ece7b0df07a9b1b2b53143e205468cd79d9f6",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# (C) Copyright 2005-2014 Johns Hopkins University (JHU), All Rights\n\n# Reserved.\n\n#\n\n# --- begin cisst license - do not edit ---\n\n# \n\n# This software is provided \"as is\" under an open source license, with\n\n# no warranty.  The complete license can be found in license.txt and\n\n# http://www.cisst.org/cisst/license.txt.\n\n# \n\n# --- end cisst license ---\n\n#\n\n# CMake script for finding Xenomai\n\n#\n\n# This will find Xenomai on Linux systems and define flags for each of the\n\n# supported Xenomai \"skins\". The current supported skins are:\n\n#\n\n# - NATIVE\n\n# - POSIX\n\n# \n\n# Input variables:\n\n# \n\n# - ${Xenomai_ROOT_DIR} (optional): Used as a hint to find the Xenomai root dir\n\n# - $ENV{XENOMAI_ROOT_DIR} (optional): Used as a hint to find the Xenomai root dir\n\n#\n\n# Cache variables:\n\n#\n\n# - Xenomai_ROOT_DIR\n\n# - Xenomai_INCLUDE_DIRS\n\n#\n\n# Output Variables:\n\n#\n\n# - Xenomai_FOUND: Boolean that indicates if the package was found. See the\n\n#   Xenomai_*_FOUND variables below for individual skins.\n\n# - Xenomai_VERSION: major.minor.patch Xenomai version string\n\n# - Xenomai_XENO_CONFIG: Path to xeno-config program\n\n#\n\n# - Individual library variables:\n\n#   - Xenomai_LIBRARY_XENOMAI\n\n#   - Xenomai_LIBRARY_NATIVE\n\n#   - Xenomai_LIBRARY_PTHREAD_RT\n\n#   - Xenomai_LIBRARY_RTDM\n\n#   - Xenomai_LIBRARY_RTDK ( this will be empty, deprecated after Xenomai 2.6.0)\n\n#\n\n# - Native Flags:\n\n#   - Xenomai_NATIVE_FOUND: Boolean that indicates if the native skin was found\n\n#   - Xenomai_NATIVE_DEFINITIONS\n\n#   - Xenomai_NATIVE_INCLUDE_DIRS\n\n#   - Xenomai_NATIVE_LIBRARY_DIRS\n\n#   - Xenomai_NATIVE_LIBRARIES\n\n#   - Xenomai_NATIVE_LDFLAGS\n\n# \n\n# - POSIX Flags:\n\n#   - Xenomai_POSIX_FOUND: Boolean that indicates if the posix skin was found\n\n#   - Xenomai_POSIX_DEFINITIONS\n\n#   - Xenomai_POSIX_INCLUDE_DIRS\n\n#   - Xenomai_POSIX_LIBRARY_DIRS\n\n#   - Xenomai_POSIX_LIBRARIES\n\n#   - Xenomai_POSIX_LDFLAGS\n\n#\n\n# - RTDM Flags:\n\n#   - Xenomai_RTDM_FOUND: Boolean that indicates if the RTDM skin was found\n\n#   - Xenomai_RTDM_DEFINITIONS\n\n#   - Xenomai_RTDM_INCLUDE_DIRS\n\n#   - Xenomai_RTDM_LIBRARY_DIRS\n\n#   - Xenomai_RTDM_LIBRARIES\n\n#   - Xenomai_RTDM_LDFLAGS\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get hint from environment variable (if any)\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# set the search paths\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# find xeno_config.h\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# did we find xeno_config.h?\n",
        "Line" : 86,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# set the root directory\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# on ubuntu linux, xenomai install is not rooted to a single dir\n",
        "Line" : 92,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# elsewhere, xenomai install is packaged\n",
        "Line" : 96,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# Find xeno-config\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# get xenomai version\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# find the xenomai pthread library\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# In 2.6.0 RTDK was merged into the main xenomai library\n",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Xenomai libraries for each skin\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Xenomai LDFLAGS for each skin\n",
        "Line" : 126,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Xenomai compiler definitions for each supported skin\n",
        "Line" : 131,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Xenomai library dirs for each skin\n",
        "Line" : 136,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Xenomai library dirs for each skin\n",
        "Line" : 141,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Compatibility\n",
        "Line" : 146,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 18
    },
    "catkin/src/cmake_modules/tests/test_find_tinyxml/CMakeLists.txt" : {
      "ObjectId" : "ce142f5bc261fa19855053d53ddd1e447018be93",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# INCLUDE ${TinyXML_INCLUDE_DIRS}  # Include this if one of your headers uses a header from TinyXML_INCLUDE_DIRS\n\n# LIBRARIES ${TinyXML_LIBRARIES}  # Include this if people who link against you need to link against TinyXML too\n\n# # OR\n\n# DEPENDS TinyXML  # Use this if you would use both of the above lines\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "catkin/src/finder/CMakeLists.txt" : {
      "ObjectId" : "dff02dc84bf283a2b072b166b2483b8a132c7cca",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#catkin_python_setup()\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_executable(brazo_console src/brazo_console.cpp)\n\n#target_link_libraries(brazo_console ${catkin_LIBRARIES})\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#install(PROGRAMS\n\n#\tscripts/battery_monitor.py\n\n#\tscripts/odometry.py\n\n#\tscripts/joy.py\n\n#\tscripts/virtual_joy.py\n\n#\tscripts/twist_to_motors.py\t\n\n#\tDESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n#)",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "catkin/src/hector_slam/hector_compressed_map_transport/CMakeLists.txt" : {
      "ObjectId" : "fa76652f64b0ed036b47ffac71016e0f5b640dd9",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n\n# catkin_python_setup()\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#######################################\n\n## Declare ROS messages and services ##\n\n#######################################\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Generate messages in the 'msg' folder\n\n# add_message_files(\n\n#   FILES\n\n#   Message1.msg\n\n#   Message2.msg\n\n# )\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Generate services in the 'srv' folder\n\n# add_service_files(\n\n#   FILES\n\n#   Service1.srv\n\n#   Service2.srv\n\n# )\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n\n# generate_messages(\n\n#   DEPENDENCIES\n\n#   hector_nav_msgs#   nav_msgs#   std_msgs\n\n# )\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES hector_compressed_map_transport\n\n#  CATKIN_DEPENDS cv_bridge geometry_msgs hector_map_tools image_transport nav_msgs opencv2 sensor_msgs\n\n#  DEPENDS eigen opencv2\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n# include_directories(include)\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Declare a cpp library\n\n# add_library(hector_compressed_map_transport\n\n#   src/${PROJECT_NAME}/hector_compressed_map_transport.cpp\n\n# )\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Declare a cpp executable\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Add cmake target dependencies of the executable/library\n\n## as an example, message headers may need to be generated before nodes\n\n# add_dependencies(hector_compressed_map_transport_node hector_compressed_map_transport_generate_messages_cpp)\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Specify libraries to link a library or executable target against\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n\n# install(PROGRAMS\n\n#   scripts/my_python_script\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Mark executables and/or libraries for installation\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Mark cpp header files for installation\n\n# install(DIRECTORY include/${PROJECT_NAME}/\n\n#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n\n#   FILES_MATCHING PATTERN \"*.h\"\n\n#   PATTERN \".svn\" EXCLUDE\n\n# )\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n\n# install(FILES\n\n#   # myfile1\n\n#   # myfile2\n\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n# )\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_hector_compressed_map_transport.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "catkin/src/hector_slam/hector_geotiff/CMakeLists.txt" : {
      "ObjectId" : "038ba6ea4303f10968db00538e48b5142f49b525",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n\n# catkin_python_setup()\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#######################################\n\n## Declare ROS messages and services ##\n\n#######################################\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Generate messages in the 'msg' folder\n\n# add_message_files(\n\n#   FILES\n\n#   Message1.msg\n\n#   Message2.msg\n\n# )\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Generate services in the 'srv' folder\n\n# add_service_files(\n\n#   FILES\n\n#   Service1.srv\n\n#   Service2.srv\n\n# )\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n\n# generate_messages(\n\n#   DEPENDENCIES\n\n#   hector_nav_msgs#   nav_msgs#   std_msgs\n\n# )\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n\n# install(PROGRAMS\n\n#   scripts/my_python_script\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Mark executables and/or libraries for installation\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Mark cpp header files for installation\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n\n# install(FILES\n\n#   # myfile1\n\n#   # myfile2\n\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n# )\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_hector_geotiff.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "catkin/src/hector_slam/hector_geotiff_plugins/CMakeLists.txt" : {
      "ObjectId" : "0f153b947ad38a618d112a7d4d1197150b071c41",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n\n# catkin_python_setup()\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#######################################\n\n## Declare ROS messages and services ##\n\n#######################################\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Generate messages in the 'msg' folder\n\n# add_message_files(\n\n#   FILES\n\n#   Message1.msg\n\n#   Message2.msg\n\n# )\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Generate services in the 'srv' folder\n\n# add_service_files(\n\n#   FILES\n\n#   Service1.srv\n\n#   Service2.srv\n\n# )\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n\n# generate_messages(\n\n#   DEPENDENCIES\n\n#   hector_nav_msgs#   nav_msgs#   std_msgs\n\n# )\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES hector_geotiff_plugins\n\n#  CATKIN_DEPENDS hector_geotiff hector_nav_msgs\n\n#  DEPENDS\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n# include_directories(include)\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Declare a cpp library\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Declare a cpp executable\n\n# add_executable(hector_geotiff_node src/hector_geotiff_node.cpp)\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Add cmake target dependencies of the executable/library\n\n## as an example, message headers may need to be generated before nodes\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Specify libraries to link a library or executable target against\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n\n# install(PROGRAMS\n\n#   scripts/my_python_script\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Mark executables and/or libraries for installation\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Mark cpp header files for installation\n\n# install(DIRECTORY include/${PROJECT_NAME}/\n\n#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n\n#   FILES_MATCHING PATTERN \"*.h\"\n\n#   PATTERN \".svn\" EXCLUDE\n\n# )\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_hector_geotiff.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "catkin/src/hector_slam/hector_imu_attitude_to_tf/CMakeLists.txt" : {
      "ObjectId" : "b1f21aaac973d83982c4cf78ca7c242b0d6ae224",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n\n# catkin_python_setup()\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#######################################\n\n## Declare ROS messages and services ##\n\n#######################################\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Generate messages in the 'msg' folder\n\n# add_message_files(\n\n#   FILES\n\n#   Message1.msg\n\n#   Message2.msg\n\n# )\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Generate services in the 'srv' folder\n\n# add_service_files(\n\n#   FILES\n\n#   Service1.srv\n\n#   Service2.srv\n\n# )\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n\n# generate_messages(\n\n#   DEPENDENCIES\n\n#   hector_nav_msgs#   nav_msgs#   std_msgs\n\n# )\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES hector_imu_attitude_to_tf\n\n#  CATKIN_DEPENDS roscpp sensor_msgs tf\n\n#  DEPENDS\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n# include_directories(include)\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Declare a cpp library\n\n# add_library(hector_imu_attitude_to_tf\n\n#   src/${PROJECT_NAME}/hector_imu_attitude_to_tf.cpp\n\n# )\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Declare a cpp executable\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Add cmake target dependencies of the executable/library\n\n## as an example, message headers may need to be generated before nodes\n\n# add_dependencies(hector_imu_attitude_to_tf_node hector_imu_attitude_to_tf_generate_messages_cpp)\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Specify libraries to link a library or executable target against\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n\n# install(PROGRAMS\n\n#   scripts/my_python_script\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Mark executables and/or libraries for installation\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Mark cpp header files for installation\n\n# install(DIRECTORY include/${PROJECT_NAME}/\n\n#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n\n#   FILES_MATCHING PATTERN \"*.h\"\n\n#   PATTERN \".svn\" EXCLUDE\n\n# )\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n\n# install(FILES\n\n#   # myfile1\n\n#   # myfile2\n\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n# )\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_hector_imu_attitude_to_tf.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "catkin/src/hector_slam/hector_imu_tools/CMakeLists.txt" : {
      "ObjectId" : "709eb7414b01a6ef3d045a156d47b66dddcacc50",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n\n# catkin_python_setup()\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#######################################\n\n## Declare ROS messages and services ##\n\n#######################################\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Generate messages in the 'msg' folder\n\n# add_message_files(\n\n#   FILES\n\n#   Message1.msg\n\n#   Message2.msg\n\n# )\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Generate services in the 'srv' folder\n\n# add_service_files(\n\n#   FILES\n\n#   Service1.srv\n\n#   Service2.srv\n\n# )\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n\n# generate_messages(\n\n#   DEPENDENCIES\n\n#   hector_nav_msgs#   nav_msgs#   std_msgs\n\n# )\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES hector_imu_attitude_to_tf\n\n#  CATKIN_DEPENDS roscpp sensor_msgs tf\n\n#  DEPENDS\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n# include_directories(include)\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Declare a cpp library\n\n# add_library(hector_imu_attitude_to_tf\n\n#   src/${PROJECT_NAME}/hector_imu_attitude_to_tf.cpp\n\n# )\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Declare a cpp executable\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Add cmake target dependencies of the executable/library\n\n## as an example, message headers may need to be generated before nodes\n\n# add_dependencies(hector_imu_attitude_to_tf_node hector_imu_attitude_to_tf_generate_messages_cpp)\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Specify libraries to link a library or executable target against\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n\n# install(PROGRAMS\n\n#   scripts/my_python_script\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Mark executables and/or libraries for installation\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Mark cpp header files for installation\n\n# install(DIRECTORY include/${PROJECT_NAME}/\n\n#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n\n#   FILES_MATCHING PATTERN \"*.h\"\n\n#   PATTERN \".svn\" EXCLUDE\n\n# )\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n\n# install(FILES\n\n#   # myfile1\n\n#   # myfile2\n\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n# )\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_hector_imu_attitude_to_tf.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "catkin/src/hector_slam/hector_map_server/CMakeLists.txt" : {
      "ObjectId" : "2bf8c0c77b9924545ae29672562c789025c72e27",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n\n# catkin_python_setup()\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#######################################\n\n## Declare ROS messages and services ##\n\n#######################################\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Generate messages in the 'msg' folder\n\n# add_message_files(\n\n#   FILES\n\n#   Message1.msg\n\n#   Message2.msg\n\n# )\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Generate services in the 'srv' folder\n\n# add_service_files(\n\n#   FILES\n\n#   Service1.srv\n\n#   Service2.srv\n\n# )\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n\n# generate_messages(\n\n#   DEPENDENCIES\n\n#   hector_nav_msgs#   nav_msgs#   std_msgs\n\n# )\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES hector_map_server\n\n#  CATKIN_DEPENDS roscpp hector_map_tools hector_marker_drawing hector_nav_msgs nav_msgs tf\n\n#  DEPENDS\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n# include_directories(include)\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Declare a cpp library\n\n# add_library(hector_map_server\n\n#   src/${PROJECT_NAME}/hector_map_server.cpp\n\n# )\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Declare a cpp executable\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Add cmake target dependencies of the executable/library\n\n## as an example, message headers may need to be generated before nodes\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Specify libraries to link a library or executable target against\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n\n# install(PROGRAMS\n\n#   scripts/my_python_script\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Mark executables and/or libraries for installation\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Mark cpp header files for installation\n\n# install(DIRECTORY include/${PROJECT_NAME}/\n\n#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n\n#   FILES_MATCHING PATTERN \"*.h\"\n\n#   PATTERN \".svn\" EXCLUDE\n\n# )\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n\n# install(FILES\n\n#   # myfile1\n\n#   # myfile2\n\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n# )\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_hector_map_server.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "catkin/src/hector_slam/hector_map_tools/CMakeLists.txt" : {
      "ObjectId" : "d872b2534d441269de56d7ca09aac6509f397949",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n\n# catkin_python_setup()\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#######################################\n\n## Declare ROS messages and services ##\n\n#######################################\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Generate messages in the 'msg' folder\n\n# add_message_files(\n\n#   FILES\n\n#   Message1.msg\n\n#   Message2.msg\n\n# )\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Generate services in the 'srv' folder\n\n# add_service_files(\n\n#   FILES\n\n#   Service1.srv\n\n#   Service2.srv\n\n# )\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n\n# generate_messages(\n\n#   DEPENDENCIES\n\n#   hector_nav_msgs#   nav_msgs#   std_msgs\n\n# )\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#  LIBRARIES hector_map_tools\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n# include_directories(include)\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Declare a cpp library\n\n# add_library(hector_map_tools\n\n#   src/${PROJECT_NAME}/hector_map_tools.cpp\n\n# )\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Declare a cpp executable\n\n# add_executable(hector_map_tools_node src/hector_map_tools_node.cpp)\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Add cmake target dependencies of the executable/library\n\n## as an example, message headers may need to be generated before nodes\n\n# add_dependencies(hector_map_tools_node hector_map_tools_generate_messages_cpp)\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Specify libraries to link a library or executable target against\n\n# target_link_libraries(hector_map_tools_node\n\n#   ${catkin_LIBRARIES}\n\n# )\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n\n# install(PROGRAMS\n\n#   scripts/my_python_script\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Mark executables and/or libraries for installation\n\n# install(TARGETS hector_map_tools hector_map_tools_node\n\n#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Mark cpp header files for installation\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n\n# install(FILES\n\n#   # myfile1\n\n#   # myfile2\n\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n# )\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_hector_map_tools.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "catkin/src/hector_slam/hector_mapping/CMakeLists.txt" : {
      "ObjectId" : "e60d2753506169b2e060bd561d5844d4202cf567",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## System dependencies are found with CMake's conventions\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n\n# catkin_python_setup()\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#######################################\n\n## Declare ROS messages and services ##\n\n#######################################\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Generate messages in the 'msg' folder\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Generate services in the 'srv' folder\n\n# add_service_files(\n\n#   FILES\n\n#   Service1.srv\n\n#   Service2.srv\n\n# )\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#  LIBRARIES hector_mapping\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Declare a cpp library\n\n# add_library(hector_mapping\n\n#   src/${PROJECT_NAME}/hector_mapping.cpp\n\n# )\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Declare a cpp executable\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Add cmake target dependencies of the executable/library\n\n## as an example, message headers may need to be generated before nodes\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Specify libraries to link a library or executable target against\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n\n# install(PROGRAMS\n\n#   scripts/my_python_script\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Mark executables and/or libraries for installation\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Mark cpp header files for installation\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n\n# install(FILES\n\n#   # myfile1\n\n#   # myfile2\n\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n# )\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_hector_mapping.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "catkin/src/hector_slam/hector_marker_drawing/CMakeLists.txt" : {
      "ObjectId" : "bbf140a565c711d8caeb5e719cb1f7e1fa601ac9",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n\n# catkin_python_setup()\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#######################################\n\n## Declare ROS messages and services ##\n\n#######################################\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Generate messages in the 'msg' folder\n\n# add_message_files(\n\n#   FILES\n\n#   Message1.msg\n\n#   Message2.msg\n\n# )\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Generate services in the 'srv' folder\n\n# add_service_files(\n\n#   FILES\n\n#   Service1.srv\n\n#   Service2.srv\n\n# )\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n\n# generate_messages(\n\n#   DEPENDENCIES\n\n#   hector_nav_msgs#   nav_msgs#   std_msgs\n\n# )\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#  LIBRARIES hector_marker_drawing\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Declare a cpp library\n\n# add_library(hector_marker_drawing\n\n#   src/${PROJECT_NAME}/hector_marker_drawing.cpp\n\n# )\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Declare a cpp executable\n\n# add_executable(hector_marker_drawing_node src/hector_marker_drawing_node.cpp)\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Add cmake target dependencies of the executable/library\n\n## as an example, message headers may need to be generated before nodes\n\n# add_dependencies(hector_marker_drawing_node hector_marker_drawing_generate_messages_cpp)\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Specify libraries to link a library or executable target against\n\n# target_link_libraries(hector_marker_drawing_node\n\n#   ${catkin_LIBRARIES}\n\n# )\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n\n# install(PROGRAMS\n\n#   scripts/my_python_script\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Mark executables and/or libraries for installation\n\n# install(TARGETS hector_marker_drawing hector_marker_drawing_node\n\n#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Mark cpp header files for installation\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n\n# install(FILES\n\n#   # myfile1\n\n#   # myfile2\n\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n# )\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_hector_marker_drawing.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "catkin/src/hector_slam/hector_nav_msgs/CMakeLists.txt" : {
      "ObjectId" : "0a0279884401a226f8d5f746b4e52640679a5e47",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n\n# catkin_python_setup()\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#######################################\n\n## Declare ROS messages and services ##\n\n#######################################\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Generate messages in the 'msg' folder\n\n# add_message_files(\n\n#   FILES\n\n#   Message1.msg\n\n#   Message2.msg\n\n# )\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Generate services in the 'srv' folder\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES hector_nav_msgs\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#  DEPENDS\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n# include_directories(include)\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Declare a cpp library\n\n# add_library(hector_nav_msgs\n\n#   src/${PROJECT_NAME}/hector_nav_msgs.cpp\n\n# )\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Declare a cpp executable\n\n# add_executable(hector_nav_msgs_node src/hector_nav_msgs_node.cpp)\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Add cmake target dependencies of the executable/library\n\n## as an example, message headers may need to be generated before nodes\n\n# add_dependencies(hector_nav_msgs_node hector_nav_msgs_generate_messages_cpp)\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## Specify libraries to link a library or executable target against\n\n# target_link_libraries(hector_nav_msgs_node\n\n#   ${catkin_LIBRARIES}\n\n# )\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n\n# install(PROGRAMS\n\n#   scripts/my_python_script\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Mark executables and/or libraries for installation\n\n# install(TARGETS hector_nav_msgs hector_nav_msgs_node\n\n#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Mark cpp header files for installation\n\n# install(DIRECTORY include/${PROJECT_NAME}/\n\n#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n\n#   FILES_MATCHING PATTERN \"*.h\"\n\n#   PATTERN \".svn\" EXCLUDE\n\n# )\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n\n# install(FILES\n\n#   # myfile1\n\n#   # myfile2\n\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n# )\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_hector_nav_msgs.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "catkin/src/hector_slam/hector_slam/CMakeLists.txt" : {
      "ObjectId" : "6db213340372801e66224769858bea0437b93bca",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/hector_slam/hector_slam_launch/CMakeLists.txt" : {
      "ObjectId" : "623f61251e58a944e739106c7f22e679cb5c136d",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n\n# catkin_python_setup()\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#######################################\n\n## Declare ROS messages and services ##\n\n#######################################\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Generate messages in the 'msg' folder\n\n# add_message_files(\n\n#   FILES\n\n#   Message1.msg\n\n#   Message2.msg\n\n# )\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Generate services in the 'srv' folder\n\n# add_service_files(\n\n#   FILES\n\n#   Service1.srv\n\n#   Service2.srv\n\n# )\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n\n# generate_messages(\n\n#   DEPENDENCIES\n\n#   hector_nav_msgs#   nav_msgs#   std_msgs\n\n# )\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES hector_slam_launch\n\n#  CATKIN_DEPENDS hector_map_tools hector_nav_msgs nav_msgs pluginlib roscpp std_msgs\n\n#  DEPENDS\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n# include_directories(include)\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Declare a cpp library\n\n# add_library(hector_slam_launch\n\n#   src/${PROJECT_NAME}/hector_slam_launch.cpp\n\n# )\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Declare a cpp executable\n\n# add_executable(hector_slam_launch_node src/hector_slam_launch_node.cpp)\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Add cmake target dependencies of the executable/library\n\n## as an example, message headers may need to be generated before nodes\n\n# add_dependencies(hector_slam_launch_node hector_slam_launch_generate_messages_cpp)\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Specify libraries to link a library or executable target against\n\n# target_link_libraries(hector_slam_launch_node\n\n#   ${catkin_LIBRARIES}\n\n# )\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n\n# install(PROGRAMS\n\n#   scripts/my_python_script\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Mark executables and/or libraries for installation\n\n# install(TARGETS hector_slam_launch hector_slam_launch_node\n\n#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}\n\n#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Mark cpp header files for installation\n\n# install(DIRECTORY include/${PROJECT_NAME}/\n\n#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n\n#   FILES_MATCHING PATTERN \"*.h\"\n\n#   PATTERN \".svn\" EXCLUDE\n\n# )\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n\n# install(FILES\n\n#   # myfile1\n\n#   # myfile2\n\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n# )\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_hector_slam_launch.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "catkin/src/hector_slam/hector_trajectory_server/CMakeLists.txt" : {
      "ObjectId" : "a38ed25a74611b57543df2b99200b4dd750a02ec",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## System dependencies are found with CMake's conventions\n\n# find_package(Boost REQUIRED COMPONENTS system)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n\n# catkin_python_setup()\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#######################################\n\n## Declare ROS messages and services ##\n\n#######################################\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Generate messages in the 'msg' folder\n\n# add_message_files(\n\n#   FILES\n\n#   Message1.msg\n\n#   Message2.msg\n\n# )\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Generate services in the 'srv' folder\n\n# add_service_files(\n\n#   FILES\n\n#   Service1.srv\n\n#   Service2.srv\n\n# )\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n\n# generate_messages(\n\n#   DEPENDENCIES\n\n#   hector_nav_msgs#   nav_msgs#   std_msgs\n\n# )\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#  INCLUDE_DIRS include\n\n#  LIBRARIES hector_trajectory_server\n\n#  CATKIN_DEPENDS roscpp hector_nav_msgs nav_msgs hector_map_tools tf\n\n#  DEPENDS\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n# include_directories(include)\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Declare a cpp library\n\n# add_library(hector_trajectory_server\n\n#   src/${PROJECT_NAME}/hector_trajectory_server.cpp\n\n# )\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "## Declare a cpp executable\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Add cmake target dependencies of the executable/library\n\n## as an example, message headers may need to be generated before nodes\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Specify libraries to link a library or executable target against\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Mark executable scripts (Python etc.) for installation\n\n## in contrast to setup.py, you can choose the destination\n\n# install(PROGRAMS\n\n#   scripts/my_python_script\n\n#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}\n\n# )\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Mark executables and/or libraries for installation\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## Mark cpp header files for installation\n\n# install(DIRECTORY include/${PROJECT_NAME}/\n\n#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n\n#   FILES_MATCHING PATTERN \"*.h\"\n\n#   PATTERN \".svn\" EXCLUDE\n\n# )\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n\n# install(FILES\n\n#   # myfile1\n\n#   # myfile2\n\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n# )\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#############\n\n## Testing ##\n\n#############\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "## Add gtest based cpp test target and link libraries\n\n# catkin_add_gtest(${PROJECT_NAME}-test test/test_hector_trajectory_server.cpp)\n\n# if(TARGET ${PROJECT_NAME}-test)\n\n#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})\n\n# endif()\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "## Add folders to be run by python nosetests\n\n# catkin_add_nosetests(test)\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "catkin/src/hector_worldmodel/hector_object_tracker/CMakeLists.txt" : {
      "ObjectId" : "aa8969604249abe8774e41d7e8cb9a2f3cae524c",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n\n# catkin_python_setup()\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#######################################\n\n## Declare ROS messages and services ##\n\n#######################################\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Generate messages in the 'msg' folder\n\n# add_message_files(\n\n#   FILES\n\n# )\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Generate services in the 'srv' folder\n\n# add_service_files(\n\n#   FILES\n\n# )\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n\n# generate_messages(\n\n#   DEPENDENCIES\n\n# )\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#include\n",
        "Line" : 48,
        "CharPositionInLine" : 17
      },
      "8" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Add cmake target dependencies of the executable/library\n\n## as an example, message headers may need to be generated before nodes\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## Specify libraries to link a library or executable target against\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Mark executables and/or libraries for installation\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## Mark cpp header files for installation\n\n# install(DIRECTORY include/${PROJECT_NAME}/\n\n#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n\n#   FILES_MATCHING PATTERN \"*.h\"\n\n#   PATTERN \".svn\" EXCLUDE\n\n# )\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n\n# install(FILES\n\n#   # myfile1\n\n#   # myfile2\n\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n# )\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "catkin/src/hector_worldmodel/hector_worldmodel/CMakeLists.txt" : {
      "ObjectId" : "6f58e274b13429f43106a53ba1ea6907aaf3eab0",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/hector_worldmodel/hector_worldmodel_geotiff_plugins/CMakeLists.txt" : {
      "ObjectId" : "e8e595bf212967bb346123876655cf3864a4c10e",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n\n# catkin_python_setup()\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#######################################\n\n## Declare ROS messages and services ##\n\n#######################################\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Generate messages in the 'msg' folder\n\n# add_message_files(\n\n#   FILES\n\n# )\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Generate services in the 'srv' folder\n\n# add_service_files(\n\n#   FILES\n\n# )\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n\n# generate_messages(\n\n#   DEPENDENCIES\n\n# )\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Specify additional locations of header files\n\n## Your package locations should be listed before other locations\n\n#include_directories(include)\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## Add cmake target dependencies of the executable/library\n\n## as an example, message headers may need to be generated before nodes\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Specify libraries to link a library or executable target against\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "## Mark executables and/or libraries for installation\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "## Mark cpp header files for installation\n\n# install(DIRECTORY include/${PROJECT_NAME}/\n\n#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}\n\n#   FILES_MATCHING PATTERN \"*.h\"\n\n#   PATTERN \".svn\" EXCLUDE\n\n# )\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## Mark other files for installation (e.g. launch and bag files, etc.)\n\n# install(FILES\n\n#   # myfile1\n\n#   # myfile2\n\n#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}\n\n# )\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "catkin/src/hector_worldmodel/hector_worldmodel_msgs/CMakeLists.txt" : {
      "ObjectId" : "d2688e2e5c35d00b81900b9a8ec0f57e9b4d84fd",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Find catkin macros and libraries\n\n## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)\n\n## is used, also find other catkin packages\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Uncomment this if the package has a setup.py. This macro ensures\n\n## modules and global scripts declared therein get installed\n\n## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html\n\n# catkin_python_setup()\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#######################################\n\n## Declare ROS messages and services ##\n\n#######################################\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Generate messages in the 'msg' folder\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## Generate services in the 'srv' folder\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Generate added messages and services with any dependencies listed here\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "###################################\n\n## catkin specific configuration ##\n\n###################################\n\n## The catkin_package macro generates cmake config files for your package\n\n## Declare things to be passed to dependent projects\n\n## INCLUDE_DIRS: uncomment this if you package contains header files\n\n## LIBRARIES: libraries you create in this project that dependent projects also need\n\n## CATKIN_DEPENDS: catkin_packages dependent projects also need\n\n## DEPENDS: system dependencies of this project that dependent projects also need\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "###########\n\n## Build ##\n\n###########\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#############\n\n## Install ##\n\n#############\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# all install targets should use catkin DESTINATION variables\n\n# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "## Mark cpp header files for installation\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "catkin/src/hokuyo_node/CMakeLists.txt" : {
      "ObjectId" : "ea3f8474ab1cd0807d1f0938cd4ae53086f6a92f",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Utilities that use log4cxx - getID and getFirmwareVersion\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Load catkin and all dependencies required for this package\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Dynamic reconfigure support\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Export with catkin_package\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Hokuyo library\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# hokuyo_node\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Install targets\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "catkin/src/hokuyo_node/src/CMakeLists.txt" : {
      "ObjectId" : "1d7355fa31177ab6fdbc2dbffa7786e9762192b7",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/hugo/CMakeLists.txt" : {
      "ObjectId" : "ebc44db90f55616fefc320687ef2dc371ba4425d",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/imu_tools/imu_filter_madgwick/CMakeLists.txt" : {
      "ObjectId" : "f646b5f65c27d8a8b8ca686a6fd0c0b0df779e28",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generate dynamic parameters\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# create imu_filter library\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# create imu_filter_nodelet library\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# create imu_filter_node executable\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "catkin/src/imu_tools/imu_filter_madgwick/Makefile" : {
      "ObjectId" : "b75b928f20ef9ea4f509a17db62e4e31b422c27f",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "catkin/src/imu_tools/imu_tools/CMakeLists.txt" : {
      "ObjectId" : "a0a19abdc022c5189a200c7f97304adc8b25f48e",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/joystick_drivers/joy/CMakeLists.txt" : {
      "ObjectId" : "97433451b5eb516ef6594ff9c7319d4a5c5324b1",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# http://ros.org/doc/groovy/api/catkin/html/user_guide/supposed.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Load catkin and all dependencies required for this package\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for <linux/joystick.h>\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#catkin_add_nosetests(test/test_joy_msg_migration.py)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Install targets\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "catkin/src/joystick_drivers/joystick_drivers/CMakeLists.txt" : {
      "ObjectId" : "ec67f78f229e67f79bfab21b243d23344c7c01e6",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/joystick_drivers/ps3joy/CMakeLists.txt" : {
      "ObjectId" : "2dfba126bf20f3c911adf12957ab6d96114d2da8",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# http://ros.org/doc/groovy/api/catkin/html/user_guide/supposed.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Load catkin and all dependencies required for this package\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Install targets\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "catkin/src/joystick_drivers/spacenav_node/CMakeLists.txt" : {
      "ObjectId" : "506d476d4d3f0a843757fb180a41faa882aee60b",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# http://ros.org/doc/groovy/api/catkin/html/user_guide/supposed.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Load catkin and all dependencies required for this package\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Install targets\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "catkin/src/joystick_drivers/wiimote/CMakeLists.txt" : {
      "ObjectId" : "94844ce81aad3bd3b722794b2b01eefde5b1f2ec",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# http://ros.org/doc/groovy/api/catkin/html/user_guide/supposed.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Load catkin and all dependencies required for this package\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# generate the messages\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# define the package\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Install targets\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "catkin/src/ros_tutorials/ros_tutorials/CMakeLists.txt" : {
      "ObjectId" : "46c2f87424b70f4f1cf63763a0f4171739e18d00",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/ros_tutorials/roscpp_tutorials/CMakeLists.txt" : {
      "ObjectId" : "d1294c444e195f34357bb864183d46b80c3f9895",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# listener_single_message\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "catkin/src/ros_tutorials/roscpp_tutorials/add_two_ints_client/CMakeLists.txt" : {
      "ObjectId" : "e4393c10bcce78a1d5976817332750ecd6a5a76c",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/ros_tutorials/roscpp_tutorials/add_two_ints_server/CMakeLists.txt" : {
      "ObjectId" : "4a728283121c2578c522f1e1e0109c49bb0dddc0",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/ros_tutorials/roscpp_tutorials/add_two_ints_server_class/CMakeLists.txt" : {
      "ObjectId" : "257869fbb18d63ad5bc269f5c2f2a4e983ea1266",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/ros_tutorials/roscpp_tutorials/anonymous_listener/CMakeLists.txt" : {
      "ObjectId" : "c20ccc1a687712c4896a77efbfe2422c7bd998f2",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/ros_tutorials/roscpp_tutorials/babbler/CMakeLists.txt" : {
      "ObjectId" : "fad289e2d3076d041588c9e84d9bdc994c4ebea7",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/ros_tutorials/roscpp_tutorials/custom_callback_processing/CMakeLists.txt" : {
      "ObjectId" : "83b7aa56b7235c68ccd8ecf85c78322fcfb791ce",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/ros_tutorials/roscpp_tutorials/listener/CMakeLists.txt" : {
      "ObjectId" : "5d22651020454e9b975704feab5425c2d5231ab3",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/ros_tutorials/roscpp_tutorials/listener_async_spin/CMakeLists.txt" : {
      "ObjectId" : "5afc64afa767fa9ddc982162bee4b0094a63f36f",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/ros_tutorials/roscpp_tutorials/listener_class/CMakeLists.txt" : {
      "ObjectId" : "e0a82b7745833983d52ffbf908c3e6e6cf686983",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/ros_tutorials/roscpp_tutorials/listener_multiple/CMakeLists.txt" : {
      "ObjectId" : "b05a33905b93b6d59c948df7925e7e18ecde93c5",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/ros_tutorials/roscpp_tutorials/listener_single_message/CMakeLists.txt" : {
      "ObjectId" : "72e76ceb96413e077eb581266c7118376d5eaed4",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/ros_tutorials/roscpp_tutorials/listener_threaded_spin/CMakeLists.txt" : {
      "ObjectId" : "c29ae56cc1c61fdc4bbeb4fa23584e51d4dd126b",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/ros_tutorials/roscpp_tutorials/listener_unreliable/CMakeLists.txt" : {
      "ObjectId" : "513f8bd3577d00faa20f67f58b8398f420a7f347",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/ros_tutorials/roscpp_tutorials/listener_with_tracked_object/CMakeLists.txt" : {
      "ObjectId" : "7a1808d5f790597ecd45fb28a8b8093e90b292b0",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/ros_tutorials/roscpp_tutorials/listener_with_userdata/CMakeLists.txt" : {
      "ObjectId" : "e71a07ef53277a1cc6751e4382e4827096a12e5e",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/ros_tutorials/roscpp_tutorials/node_handle_namespaces/CMakeLists.txt" : {
      "ObjectId" : "9caadd8f9f0e8c759d59af40a1c78db7802561ac",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/ros_tutorials/roscpp_tutorials/notify_connect/CMakeLists.txt" : {
      "ObjectId" : "34c3bd2607983787d5b01d6b55ab621c524a0bb3",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/ros_tutorials/roscpp_tutorials/parameters/CMakeLists.txt" : {
      "ObjectId" : "b3631d4165b72686b0a7245f93e2929918c7103c",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/ros_tutorials/roscpp_tutorials/talker/CMakeLists.txt" : {
      "ObjectId" : "f848c28148827270fc990883c8decd717f78b80e",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/ros_tutorials/roscpp_tutorials/time_api/CMakeLists.txt" : {
      "ObjectId" : "83073f34f5e030a21026ffd904a71f0423a21f68",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/ros_tutorials/roscpp_tutorials/time_api/sleep/CMakeLists.txt" : {
      "ObjectId" : "8f533fc157b9cbf863e56df846318e129ec6f111",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/ros_tutorials/roscpp_tutorials/timers/CMakeLists.txt" : {
      "ObjectId" : "9f69a44bf9e368396809d8706d3bb96fae0e1de3",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/ros_tutorials/rospy_tutorials/CMakeLists.txt" : {
      "ObjectId" : "191945dc3b21cf66b995e6995f1b2b7b0175cedb",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# do not wildcard install files since the root folder of the package will contain a debian folder for releasing\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "catkin/src/ros_tutorials/turtlesim/CMakeLists.txt" : {
      "ObjectId" : "0961db504894f323eafda523d0eeed9e813e8116",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/rosserial/rosserial/CMakeLists.txt" : {
      "ObjectId" : "c2ce65fb141fca6c39edd01894d6362b288044be",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/rosserial/rosserial_arduino/CMakeLists.txt" : {
      "ObjectId" : "592c952464bc8c166637af7bb362539cb721069f",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/rosserial/rosserial_arduino/arduino-cmake/cmake/ArduinoToolchain.cmake" : {
      "ObjectId" : "f320898dd70eaf761303ea253cca2fa6a4117bf8",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================#\n\n# Author: Tomasz Bogdal (QueezyTheGreat)\n\n# Home:   https://github.com/queezythegreat/arduino-cmake\n\n#\n\n# This Source Code Form is subject to the terms of the Mozilla Public\n\n# License, v. 2.0. If a copy of the MPL was not distributed with this file,\n\n# You can obtain one at http://mozilla.org/MPL/2.0/.\n\n#=============================================================================#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add current directory to CMake Module path automatically\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================#\n\n#                         System Paths                                        #\n\n#=============================================================================#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Fink\n",
        "Line" : 28,
        "CharPositionInLine" : 56
      },
      "4" : {
        "Text" : "# MacPorts\n",
        "Line" : 29,
        "CharPositionInLine" : 57
      },
      "5" : {
        "Text" : "#=============================================================================#\n\n#                         Detect Arduino SDK                                  #\n\n#=============================================================================#\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "catkin/src/rosserial/rosserial_arduino/arduino-cmake/cmake/Platform/Arduino.cmake" : {
      "ObjectId" : "4f037ccb143623893a0f1c9262c89d832323baf2",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================#\n\n# generate_arduino_firmware(name\n\n#      [BOARD board_id]\n\n#      [SKETCH sketch_path |\n\n#       SRCS  src1 src2 ... srcN]\n\n#      [HDRS  hdr1 hdr2 ... hdrN]\n\n#      [LIBS  lib1 lib2 ... libN]\n\n#      [PORT  port]\n\n#      [SERIAL serial_cmd]\n\n#      [PROGRAMMER programmer_id]\n\n#      [AFLAGS flags]\n\n#      [NO_AUTOLIBS]\n\n#      [MANUAL])\n\n#\n\n#=============================================================================#\n\n#\n\n#   generaters firmware and libraries for Arduino devices\n\n#\n\n# The arguments are as follows:\n\n#\n\n#      name           # The name of the firmware target         [REQUIRED]\n\n#      BOARD          # Board name (such as uno, mega2560, ...) [REQUIRED]\n\n#      SKETCH         # Arduino sketch [must have SRCS or SKETCH]\n\n#      SRCS           # Sources        [must have SRCS or SKETCH]\n\n#      HDRS           # Headers \n\n#      LIBS           # Libraries to link\n\n#      ARDLIBS        # Arduino libraries to link (Wire, Servo, SPI, etc)\n\n#      PORT           # Serial port (enables upload support)\n\n#      SERIAL         # Serial command for serial target\n\n#      PROGRAMMER     # Programmer id (enables programmer support)\n\n#      AFLAGS         # Avrdude flags for target\n\n#      NO_AUTOLIBS    # Disables Arduino library detection\n\n#      MANUAL         # (Advanced) Only use AVR Libc/Includes\n\n#\n\n# Here is a short example for a target named test:\n\n#    \n\n#       generate_arduino_firmware(\n\n#           NAME test\n\n#           SRCS test.cpp \n\n#                test2.cpp\n\n#           HDRS test.h test2.h\n\n#           BOARD uno)\n\n#\n\n# Alternatively you can specify the option by variables:\n\n#\n\n#       set(test_SRCS test.cpp test2.cpp)\n\n#       set(test_HDRS test.h test2.h\n\n#       set(test_BOARD uno)\n\n#\n\n#       generate_arduino_firmware(test)\n\n#\n\n# All variables need to be prefixed with the target name (${TARGET_NAME}_${OPTION}).\n\n#\n\n#=============================================================================#\n\n# generate_avr_firmware(name\n\n#      [BOARD board_id]\n\n#       SRCS  src1 src2 ... srcN]\n\n#      [HDRS  hdr1 hdr2 ... hdrN]\n\n#      [LIBS  lib1 lib2 ... libN]\n\n#      [PORT  port]\n\n#      [SERIAL serial_cmd]\n\n#      [PROGRAMMER programmer_id]\n\n#      [AFLAGS flags])\n\n#=============================================================================#\n\n#\n\n#   generaters firmware and libraries for AVR devices\n\n#   it simply calls generate_arduino_firmware() with NO_AUTOLIBS and MANUAL\n\n#\n\n# The arguments are as follows:\n\n#\n\n#      name           # The name of the firmware target         [REQUIRED]\n\n#      BOARD          # Board name (such as uno, mega2560, ...) [REQUIRED]\n\n#      SRCS           # Sources                                 [REQUIRED]\n\n#      HDRS           # Headers \n\n#      LIBS           # Libraries to link\n\n#      PORT           # Serial port (enables upload support)\n\n#      SERIAL         # Serial command for serial target\n\n#      PROGRAMMER     # Programmer id (enables programmer support)\n\n#      AFLAGS         # Avrdude flags for target\n\n#\n\n# Here is a short example for a target named test:\n\n#    \n\n#       generate_avr_firmware(\n\n#           NAME test\n\n#           SRCS test.cpp \n\n#                test2.cpp\n\n#           HDRS test.h test2.h\n\n#           BOARD uno)\n\n#\n\n# Alternatively you can specify the option by variables:\n\n#\n\n#       set(test_SRCS test.cpp test2.cpp)\n\n#       set(test_HDRS test.h test2.h\n\n#       set(test_BOARD uno)\n\n#\n\n#       generate_avr_firmware(test)\n\n#\n\n# All variables need to be prefixed with the target name (${TARGET_NAME}_${OPTION}).\n\n#\n\n#=============================================================================#\n\n# generate_arduino_library(name\n\n#      [BOARD board_id]\n\n#      [SRCS  src1 src2 ... srcN]\n\n#      [HDRS  hdr1 hdr2 ... hdrN]\n\n#      [LIBS  lib1 lib2 ... libN]\n\n#      [NO_AUTOLIBS]\n\n#      [MANUAL])\n\n#=============================================================================#\n\n#   generaters firmware and libraries for Arduino devices\n\n#\n\n# The arguments are as follows:\n\n#\n\n#      name           # The name of the firmware target         [REQUIRED]\n\n#      BOARD          # Board name (such as uno, mega2560, ...) [REQUIRED]\n\n#      SRCS           # Sources                                 [REQUIRED]\n\n#      HDRS           # Headers \n\n#      LIBS           # Libraries to link\n\n#      NO_AUTOLIBS    # Disables Arduino library detection\n\n#      MANUAL         # (Advanced) Only use AVR Libc/Includes\n\n#\n\n# Here is a short example for a target named test:\n\n#    \n\n#       generate_arduino_library(\n\n#           NAME test\n\n#           SRCS test.cpp \n\n#                test2.cpp\n\n#           HDRS test.h test2.h\n\n#           BOARD uno)\n\n#\n\n# Alternatively you can specify the option by variables:\n\n#\n\n#       set(test_SRCS test.cpp test2.cpp)\n\n#       set(test_HDRS test.h test2.h\n\n#       set(test_BOARD uno)\n\n#\n\n#       generate_arduino_library(test)\n\n#\n\n# All variables need to be prefixed with the target name (${TARGET_NAME}_${OPTION}).\n\n#\n\n#=============================================================================#\n\n# generate_avr_library(name\n\n#      [BOARD board_id]\n\n#      [SRCS  src1 src2 ... srcN]\n\n#      [HDRS  hdr1 hdr2 ... hdrN]\n\n#      [LIBS  lib1 lib2 ... libN])\n\n#=============================================================================#\n\n#   generaters firmware and libraries for AVR devices\n\n#   it simply calls generate_arduino_library() with NO_AUTOLIBS and MANUAL\n\n#\n\n# The arguments are as follows:\n\n#\n\n#      name           # The name of the firmware target         [REQUIRED]\n\n#      BOARD          # Board name (such as uno, mega2560, ...) [REQUIRED]\n\n#      SRCS           # Sources                                 [REQUIRED]\n\n#      HDRS           # Headers \n\n#      LIBS           # Libraries to link\n\n#\n\n# Here is a short example for a target named test:\n\n#    \n\n#       generate_avr_library(\n\n#           NAME test\n\n#           SRCS test.cpp \n\n#                test2.cpp\n\n#           HDRS test.h test2.h\n\n#           BOARD uno)\n\n#\n\n# Alternatively you can specify the option by variables:\n\n#\n\n#       set(test_SRCS test.cpp test2.cpp)\n\n#       set(test_HDRS test.h test2.h\n\n#       set(test_BOARD uno)\n\n#\n\n#       generate_avr_library(test)\n\n#\n\n# All variables need to be prefixed with the target name (${TARGET_NAME}_${OPTION}).\n\n#\n\n#=============================================================================#\n\n# generate_arduino_example(name\n\n#                          LIBRARY library_name\n\n#                          EXAMPLE example_name\n\n#                          [BOARD  board_id]\n\n#                          [PORT port]\n\n#                          [SERIAL serial command]\n\n#                          [PORGRAMMER programmer_id]\n\n#                          [AFLAGS avrdude_flags])\n\n#=============================================================================#\n\n#\n\n#        name         - The name of the library example        [REQUIRED]\n\n#        LIBRARY      - Library name                           [REQUIRED]\n\n#        EXAMPLE      - Example name                           [REQUIRED]\n\n#        BOARD        - Board ID\n\n#        PORT         - Serial port [optional]\n\n#        SERIAL       - Serial command [optional]\n\n#        PROGRAMMER   - Programmer id (enables programmer support)\n\n#        AFLAGS       - Avrdude flags for target\n\n#\n\n# Creates a example from the specified library.\n\n#\n\n#\n\n#=============================================================================#\n\n# print_board_list()\n\n#=============================================================================#\n\n#\n\n# Print list of detected Arduino Boards.\n\n#\n\n#=============================================================================#\n\n# print_programmer_list()\n\n#=============================================================================#\n\n#\n\n# Print list of detected Programmers.\n\n#\n\n#=============================================================================#\n\n# print_programmer_settings(PROGRAMMER)\n\n#=============================================================================#\n\n#\n\n#        PROGRAMMER - programmer id\n\n#\n\n# Print the detected Programmer settings.\n\n#\n\n#=============================================================================#\n\n# print_board_settings(ARDUINO_BOARD)\n\n#=============================================================================#\n\n#\n\n#        ARDUINO_BOARD - Board id\n\n#\n\n# Print the detected Arduino board settings.\n\n#\n\n#=============================================================================#\n\n# register_hardware_platform(HARDWARE_PLATFORM_PATH)\n\n#=============================================================================#\n\n#\n\n#        HARDWARE_PLATFORM_PATH - Hardware platform path\n\n#\n\n# Registers a Hardware Platform path.\n\n# See: http://code.google.com/p/arduino/wiki/Platforms\n\n#\n\n# This enables you to register new types of hardware platforms such as the\n\n# Sagnuino, without having to copy the files into your Arduion SDK.\n\n#\n\n# A Hardware Platform is a directory containing the following:\n\n#\n\n#        HARDWARE_PLATFORM_PATH/\n\n#            |-- bootloaders/\n\n#            |-- cores/\n\n#            |-- variants/\n\n#            |-- boards.txt\n\n#            `-- programmers.txt\n\n#            \n\n#  The board.txt describes the target boards and bootloaders. While\n\n#  programmers.txt the programmer defintions.\n\n#\n\n#  A good example of a Hardware Platform is in the Arduino SDK:\n\n#\n\n#        ${ARDUINO_SDK_PATH}/hardware/arduino/\n\n#\n\n#=============================================================================#\n\n# Configuration Options\n\n#=============================================================================#\n\n#\n\n# ARDUINO_SDK_PATH            - Arduino SDK Path\n\n# ARDUINO_AVRDUDE_PROGRAM     - Full path to avrdude programmer\n\n# ARDUINO_AVRDUDE_CONFIG_PATH - Full path to avrdude configuration file\n\n#\n\n# ARDUINO_C_FLAGS             - C compiler flags\n\n# ARDUINO_CXX_FLAGS           - C++ compiler flags\n\n# ARDUINO_LINKER_FLAGS        - Linker flags\n\n#\n\n# ARDUINO_DEFAULT_BOARD      - Default Arduino Board ID when not specified.\n\n# ARDUINO_DEFAULT_PORT       - Default Arduino port when not specified.\n\n# ARDUINO_DEFAULT_SERIAL     - Default Arduino Serial command when not specified.\n\n# ARDUINO_DEFAULT_PROGRAMMER - Default Arduino Programmer ID when not specified.\n\n#\n\n#\n\n# ARDUINO_FOUND       - Set to True when the Arduino SDK is detected and configured.\n\n# ARDUINO_SDK_VERSION - Set to the version of the detected Arduino SDK (ex: 1.0)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================#\n\n# Author: Tomasz Bogdal (QueezyTheGreat)\n\n# Home:   https://github.com/queezythegreat/arduino-cmake\n\n#\n\n# This Source Code Form is subject to the terms of the Mozilla Public\n\n# License, v. 2.0. If a copy of the MPL was not distributed with this file,\n\n# You can obtain one at http://mozilla.org/MPL/2.0/.\n\n#=============================================================================#\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================#\n\n#                           User Functions                                    \n\n#=============================================================================#\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#=============================================================================#\n\n# [PUBLIC/USER]\n\n#\n\n# print_board_list()\n\n#\n\n# see documentation at top\n\n#=============================================================================#\n",
        "Line" : 297,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#=============================================================================#\n\n# [PUBLIC/USER]\n\n#\n\n# print_programmer_list()\n\n#\n\n# see documentation at top\n\n#=============================================================================#\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#=============================================================================#\n\n# [PUBLIC/USER]\n\n#\n\n# print_programmer_settings(PROGRAMMER)\n\n#\n\n# see documentation at top\n\n#=============================================================================#\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# [PUBLIC/USER]\n\n#\n\n# print_board_settings(ARDUINO_BOARD)\n\n#\n\n# see documentation at top\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#=============================================================================#\n\n# [PUBLIC/USER]\n\n# see documentation at top\n\n#=============================================================================#\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Options\n\n# One Value Keywords\n\n# Multi Value Keywords\n",
        "Line" : 364,
        "CharPositionInLine" : 68
      },
      "9" : {
        "Text" : "#=============================================================================#\n\n# [PUBLIC/USER]\n\n# see documentation at top\n\n#=============================================================================#\n",
        "Line" : 407,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Options\n\n# One Value Keywords\n\n# Multi Value Keywords\n",
        "Line" : 414,
        "CharPositionInLine" : 68
      },
      "11" : {
        "Text" : "#=============================================================================#\n\n# [PUBLIC/USER]\n\n# see documentation at top\n\n#=============================================================================#\n",
        "Line" : 450,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Options\n\n# One Value Keywords\n",
        "Line" : 457,
        "CharPositionInLine" : 68
      },
      "13" : {
        "Text" : "# Multi Value Keywords\n",
        "Line" : 459,
        "CharPositionInLine" : 70
      },
      "14" : {
        "Text" : "#=============================================================================#\n\n# [PUBLIC/USER]\n\n# see documentation at top\n\n#=============================================================================#\n",
        "Line" : 528,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# TODO: This is not optimal!!!!\n",
        "Line" : 533,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Options\n",
        "Line" : 536,
        "CharPositionInLine" : 62
      },
      "17" : {
        "Text" : "# One Value Keywords\n",
        "Line" : 537,
        "CharPositionInLine" : 55
      },
      "18" : {
        "Text" : "# Multi Value Keywords\n",
        "Line" : 538,
        "CharPositionInLine" : 62
      },
      "19" : {
        "Text" : "#=============================================================================#\n\n# [PUBLIC/USER]\n\n# see documentation at top\n\n#=============================================================================#\n",
        "Line" : 580,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Options\n\n# One Value Keywords\n\n# Multi Value Keywords\n",
        "Line" : 586,
        "CharPositionInLine" : 71
      },
      "21" : {
        "Text" : "#=============================================================================#\n\n# [PUBLIC/USER]\n\n# see documentation at top\n\n#=============================================================================#\n",
        "Line" : 641,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#=============================================================================#\n\n#                        Internal Functions                                   \n\n#=============================================================================#\n",
        "Line" : 716,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#=============================================================================#\n\n# [PRIVATE/INTERNAL]\n\n#\n\n# parse_generator_arguments(TARGET_NAME PREFIX OPTIONS ARGS MULTI_ARGS [ARG1 ARG2 .. ARGN])\n\n#\n\n#         PREFIX     - Parsed options prefix\n\n#         OPTIONS    - List of options\n\n#         ARGS       - List of one value keyword arguments\n\n#         MULTI_ARGS - List of multi value keyword arguments\n\n#         [ARG1 ARG2 .. ARGN] - command arguments [optional]\n\n#\n\n# Parses generator options from either variables or command arguments\n\n#\n\n#=============================================================================#\n",
        "Line" : 720,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#=============================================================================#\n\n# [PRIVATE/INTERNAL]\n\n#\n\n# load_generator_settings(TARGET_NAME PREFIX [SUFFIX_1 SUFFIX_2 .. SUFFIX_N])\n\n#\n\n#         TARGET_NAME - The base name of the user settings\n\n#         PREFIX      - The prefix name used for generator settings\n\n#         SUFFIX_XX   - List of suffixes to load\n\n#\n\n#  Loads a list of user settings into the generators scope. User settings have\n\n#  the following syntax:\n\n#\n\n#      ${BASE_NAME}${SUFFIX}\n\n#\n\n#  The BASE_NAME is the target name and the suffix is a specific generator settings.\n\n#\n\n#  For every user setting found a generator setting is created of the follwoing fromat:\n\n#\n\n#      ${PREFIX}${SUFFIX}\n\n#\n\n#  The purpose of loading the settings into the generator is to not modify user settings\n\n#  and to have a generic naming of the settings within the generator.\n\n#\n\n#=============================================================================#\n",
        "Line" : 740,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#=============================================================================#\n\n# [PRIVATE/INTERNAL]\n\n#\n\n# get_arduino_flags(COMPILE_FLAGS LINK_FLAGS BOARD_ID MANUAL)\n\n#\n\n#       COMPILE_FLAGS_VAR -Variable holding compiler flags\n\n#       LINK_FLAGS_VAR - Variable holding linker flags\n\n#       BOARD_ID - The board id name\n\n#       MANUAL - (Advanced) Only use AVR Libc/Includes\n\n#\n\n# Configures the the build settings for the specified Arduino Board.\n\n#\n\n#=============================================================================#\n",
        "Line" : 772,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Normalize version (remove all periods)\n",
        "Line" : 790,
        "CharPositionInLine" : 83
      },
      "27" : {
        "Text" : "# output\n",
        "Line" : 804,
        "CharPositionInLine" : 8
      },
      "28" : {
        "Text" : "# output \n",
        "Line" : 825,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "#=============================================================================#\n\n# [PRIVATE/INTERNAL]\n\n#\n\n# setup_arduino_core(VAR_NAME BOARD_ID)\n\n#\n\n#        VAR_NAME    - Variable name that will hold the generated library name\n\n#        BOARD_ID    - Arduino board id\n\n#\n\n# Creates the Arduino Core library for the specified board,\n\n# each board gets it's own version of the library.\n\n#\n\n#=============================================================================#\n",
        "Line" : 834,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Debian/Ubuntu fix\n",
        "Line" : 853,
        "CharPositionInLine" : 12
      },
      "31" : {
        "Text" : "#=============================================================================#\n\n# [PRIVATE/INTERNAL]\n\n#\n\n# find_arduino_libraries(VAR_NAME SRCS ARDLIBS)\n\n#\n\n#      VAR_NAME - Variable name which will hold the results\n\n#      SRCS     - Sources that will be analized\n\n#      ARDLIBS  - Arduino libraries identified by name (e.g., Wire, SPI, Servo)\n\n#\n\n#     returns a list of paths to libraries found.\n\n#\n\n#  Finds all Arduino type libraries included in sources. Available libraries\n\n#  are ${ARDUINO_SDK_PATH}/libraries and ${CMAKE_CURRENT_SOURCE_DIR}.\n\n#\n\n#  Also adds Arduino libraries specifically names in ALIBS.  We add \".h\" to the \n\n#  names and then process them just like the Arduino libraries found in the sources.\n\n#\n\n#  A Arduino library is a folder that has the same name as the include header.\n\n#  For example, if we have a include \"#include <LibraryName.h>\" then the following\n\n#  directory structure is considered a Arduino library:\n\n#\n\n#     LibraryName/\n\n#          |- LibraryName.h\n\n#          `- LibraryName.c\n\n#\n\n#  If such a directory is found then all sources within that directory are considred\n\n#  to be part of that Arduino library.\n\n#\n\n#=============================================================================#\n",
        "Line" : 865,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Skipping generated files. They are, probably, not exist yet.\n\n# TODO: Maybe it's possible to skip only really nonexisting files,\n\n# but then it wiil be less deterministic.\n",
        "Line" : 898,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# Workaround for sketches, which are marked as generated\n",
        "Line" : 902,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# Property Scope\n",
        "Line" : 921,
        "CharPositionInLine" : 47
      },
      "35" : {
        "Text" : "#=============================================================================#\n\n# [PRIVATE/INTERNAL]\n\n#\n\n# setup_arduino_library(VAR_NAME BOARD_ID LIB_PATH COMPILE_FLAGS LINK_FLAGS)\n\n#\n\n#        VAR_NAME    - Vairable wich will hold the generated library names\n\n#        BOARD_ID    - Board ID\n\n#        LIB_PATH    - Path of the library\n\n#        COMPILE_FLAGS - Compile flags\n\n#        LINK_FLAGS    - Link flags\n\n#\n\n# Creates an Arduino library, with all it's library dependencies.\n\n#\n\n#      ${LIB_NAME}_RECURSE controls if the library will recurse\n\n#      when looking for source files.\n\n#\n\n#=============================================================================#\n",
        "Line" : 943,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# For known libraries can list recurse here\n",
        "Line" : 961,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Detect if recursion is needed\n",
        "Line" : 974,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "# Target already exists, skiping creating\n",
        "Line" : 1009,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : "#=============================================================================#\n\n# [PRIVATE/INTERNAL]\n\n#\n\n# setup_arduino_libraries(VAR_NAME BOARD_ID SRCS COMPILE_FLAGS LINK_FLAGS)\n\n#\n\n#        VAR_NAME    - Vairable wich will hold the generated library names\n\n#        BOARD_ID    - Board ID\n\n#        SRCS        - source files\n\n#        COMPILE_FLAGS - Compile flags\n\n#        LINK_FLAGS    - Linker flags\n\n#\n\n# Finds and creates all dependency libraries based on sources.\n\n#\n\n#=============================================================================#\n",
        "Line" : 1019,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Create static library instead of returning sources\n",
        "Line" : 1039,
        "CharPositionInLine" : 8
      },
      "41" : {
        "Text" : "#=============================================================================#\n\n# [PRIVATE/INTERNAL]\n\n#\n\n# setup_arduino_target(TARGET_NAME ALL_SRCS ALL_LIBS COMPILE_FLAGS LINK_FLAGS MANUAL)\n\n#\n\n#        TARGET_NAME - Target name\n\n#        BOARD_ID    - Arduino board ID\n\n#        ALL_SRCS    - All sources\n\n#        ALL_LIBS    - All libraries\n\n#        COMPILE_FLAGS - Compile flags\n\n#        LINK_FLAGS    - Linker flags\n\n#        MANUAL - (Advanced) Only use AVR Libc/Includes\n\n#\n\n# Creates an Arduino firmware target.\n\n#\n\n#=============================================================================#\n",
        "Line" : 1050,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Convert firmware image to ASCII HEX format\n",
        "Line" : 1090,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# Display target size\n",
        "Line" : 1099,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# Create ${TARGET_NAME}-size target\n",
        "Line" : 1109,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "#=============================================================================#\n\n# [PRIVATE/INTERNAL]\n\n#\n\n# setup_arduino_upload(BOARD_ID TARGET_NAME PORT)\n\n#\n\n#        BOARD_ID    - Arduino board id\n\n#        TARGET_NAME - Target name\n\n#        PORT        - Serial port for upload\n\n#        PROGRAMMER_ID - Programmer ID\n\n#        AVRDUDE_FLAGS - avrdude flags\n\n#\n\n# Create an upload target (${TARGET_NAME}-upload) for the specified Arduino target.\n\n#\n\n#=============================================================================#\n",
        "Line" : 1121,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Add programmer support if defined\n",
        "Line" : 1138,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "#=============================================================================#\n\n# [PRIVATE/INTERNAL]\n\n#\n\n# setup_arduino_bootloader_upload(TARGET_NAME BOARD_ID PORT)\n\n#\n\n#      TARGET_NAME - target name\n\n#      BOARD_ID    - board id\n\n#      PORT        - serial port\n\n#      AVRDUDE_FLAGS - avrdude flags (override)\n\n#\n\n# Set up target for upload firmware via the bootloader.\n\n#\n\n# The target for uploading the firmware is ${TARGET_NAME}-upload .\n\n#\n\n#=============================================================================#\n",
        "Line" : 1146,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Global upload target\n",
        "Line" : 1184,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "#=============================================================================#\n\n# [PRIVATE/INTERNAL]\n\n#\n\n# setup_arduino_programmer_burn(TARGET_NAME BOARD_ID PROGRAMMER PORT AVRDUDE_FLAGS)\n\n#\n\n#      TARGET_NAME - name of target to burn\n\n#      BOARD_ID    - board id\n\n#      PROGRAMMER  - programmer id\n\n#      PORT        - serial port\n\n#      AVRDUDE_FLAGS - avrdude flags (override)\n\n# \n\n# Sets up target for burning firmware via a programmer.\n\n#\n\n# The target for burning the firmware is ${TARGET_NAME}-burn .\n\n#\n\n#=============================================================================#\n",
        "Line" : 1192,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "#=============================================================================#\n\n# [PRIVATE/INTERNAL]\n\n#\n\n# setup_arduino_bootloader_burn(TARGET_NAME BOARD_ID PROGRAMMER PORT AVRDUDE_FLAGS)\n\n# \n\n#      TARGET_NAME - name of target to burn\n\n#      BOARD_ID    - board id\n\n#      PROGRAMMER  - programmer id\n\n#      PORT        - serial port\n\n#      AVRDUDE_FLAGS - avrdude flags (override)\n\n#\n\n# Create a target for burning a bootloader via a programmer.\n\n#\n\n# The target for burning the bootloader is ${TARGET_NAME}-burn-bootloader\n\n#\n\n#=============================================================================#\n",
        "Line" : 1233,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Erase the chip\n",
        "Line" : 1274,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# Set unlock bits and fuses (because chip is going to be erased)\n",
        "Line" : 1277,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# Set bootloader image\n",
        "Line" : 1286,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# Set lockbits\n",
        "Line" : 1289,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# Create burn bootloader target\n",
        "Line" : 1292,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "#=============================================================================#\n\n# [PRIVATE/INTERNAL]\n\n#\n\n# setup_arduino_programmer_args(BOARD_ID PROGRAMMER TARGET_NAME PORT AVRDUDE_FLAGS OUTPUT_VAR)\n\n#\n\n#      BOARD_ID    - board id\n\n#      PROGRAMMER  - programmer id\n\n#      TARGET_NAME - target name\n\n#      PORT        - serial port\n\n#      AVRDUDE_FLAGS - avrdude flags (override)\n\n#      OUTPUT_VAR  - name of output variable for result\n\n#\n\n# Sets up default avrdude settings for burning firmware via a programmer.\n\n#=============================================================================#\n",
        "Line" : 1300,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "#TODO: Check mandatory settings before continuing\n",
        "Line" : 1323,
        "CharPositionInLine" : 4
      },
      "58" : {
        "Text" : "# Set programmer\n",
        "Line" : 1328,
        "CharPositionInLine" : 60
      },
      "59" : {
        "Text" : "# Set USB as port\n",
        "Line" : 1331,
        "CharPositionInLine" : 42
      },
      "60" : {
        "Text" : "# Set port\n",
        "Line" : 1333,
        "CharPositionInLine" : 46
      },
      "61" : {
        "Text" : "# Set baud rate\n",
        "Line" : 1335,
        "CharPositionInLine" : 65
      },
      "62" : {
        "Text" : "# Set force\n",
        "Line" : 1340,
        "CharPositionInLine" : 39
      },
      "63" : {
        "Text" : "# Set delay\n",
        "Line" : 1344,
        "CharPositionInLine" : 61
      },
      "64" : {
        "Text" : "# MCU Type\n",
        "Line" : 1347,
        "CharPositionInLine" : 60
      },
      "65" : {
        "Text" : "#=============================================================================#\n\n# [PRIVATE/INTERNAL]\n\n#\n\n# setup_arduino_bootloader_args(BOARD_ID TARGET_NAME PORT AVRDUDE_FLAGS OUTPUT_VAR)\n\n#\n\n#      BOARD_ID    - board id\n\n#      TARGET_NAME - target name\n\n#      PORT        - serial port\n\n#      AVRDUDE_FLAGS - avrdude flags (override)\n\n#      OUTPUT_VAR  - name of output variable for result\n\n#\n\n# Sets up default avrdude settings for uploading firmware via the bootloader.\n\n#=============================================================================#\n",
        "Line" : 1354,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# avrdude config\n\n# MCU Type\n",
        "Line" : 1375,
        "CharPositionInLine" : 44
      },
      "67" : {
        "Text" : "# Programmer\n",
        "Line" : 1379,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "# Baud rate\n",
        "Line" : 1392,
        "CharPositionInLine" : 32
      },
      "69" : {
        "Text" : "# Serial port\n\n# Dont erase\n",
        "Line" : 1393,
        "CharPositionInLine" : 44
      },
      "70" : {
        "Text" : "#=============================================================================#\n\n# [PRIVATE/INTERNAL]\n\n#\n\n# find_sources(VAR_NAME LIB_PATH RECURSE)\n\n#\n\n#        VAR_NAME - Variable name that will hold the detected sources\n\n#        LIB_PATH - The base path\n\n#        RECURSE  - Whether or not to recurse\n\n#\n\n# Finds all C/C++ sources located at the specified path.\n\n#\n\n#=============================================================================#\n",
        "Line" : 1402,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "#=============================================================================#\n\n# [PRIVATE/INTERNAL]\n\n#\n\n# setup_serial_target(TARGET_NAME CMD)\n\n#\n\n#         TARGET_NAME - Target name\n\n#         CMD         - Serial terminal command\n\n#\n\n# Creates a target (${TARGET_NAME}-serial) for launching the serial termnial.\n\n#\n\n#=============================================================================#\n",
        "Line" : 1435,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "#=============================================================================#\n\n# [PRIVATE/INTERNAL]\n\n#\n\n# detect_arduino_version(VAR_NAME)\n\n#\n\n#       VAR_NAME - Variable name where the detected version will be saved\n\n#\n\n# Detects the Arduino SDK Version based on the revisions.txt file. The\n\n# following variables will be generated:\n\n#\n\n#    ${VAR_NAME}         -> the full version (major.minor.patch)\n\n#    ${VAR_NAME}_MAJOR   -> the major version\n\n#    ${VAR_NAME}_MINOR   -> the minor version\n\n#    ${VAR_NAME}_PATCH   -> the patch version\n\n#\n\n#=============================================================================#\n",
        "Line" : 1453,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "#=============================================================================#\n\n# [PRIVATE/INTERNAL]\n\n#\n\n# load_arduino_style_settings(SETTINGS_LIST SETTINGS_PATH)\n\n#\n\n#      SETTINGS_LIST - Variable name of settings list\n\n#      SETTINGS_PATH - File path of settings file to load.\n\n#\n\n# Load a Arduino style settings file into the cache.\n\n# \n\n#  Examples of this type of settings file is the boards.txt and\n\n# programmers.txt files located in ${ARDUINO_SDK}/hardware/arduino.\n\n#\n\n# Settings have to following format:\n\n#\n\n#      entry.setting[.subsetting] = value\n\n#\n\n# where [.subsetting] is optional\n\n#\n\n# For example, the following settings:\n\n#\n\n#      uno.name=Arduino Uno\n\n#      uno.upload.protocol=stk500\n\n#      uno.upload.maximum_size=32256\n\n#      uno.build.mcu=atmega328p\n\n#      uno.build.core=arduino\n\n#\n\n# will generate the follwoing equivalent CMake variables:\n\n#\n\n#      set(uno.name \"Arduino Uno\")\n\n#      set(uno.upload.protocol     \"stk500\")\n\n#      set(uno.upload.maximum_size \"32256\")\n\n#      set(uno.build.mcu  \"atmega328p\")\n\n#      set(uno.build.core \"arduino\")\n\n#\n\n#      set(uno.SETTINGS  name upload build)              # List of settings for uno\n\n#      set(uno.upload.SUBSETTINGS protocol maximum_size) # List of sub-settings for uno.upload\n\n#      set(uno.build.SUBSETTINGS mcu core)               # List of sub-settings for uno.build\n\n# \n\n#  The ${ENTRY_NAME}.SETTINGS variable lists all settings for the entry, while\n\n# ${ENTRY_NAME}.SUBSETTINGS variables lists all settings for a sub-setting of\n\n# a entry setting pair.\n\n#\n\n#  These variables are generated in order to be able to  programatically traverse\n\n# all settings (for a example see print_board_settings() function).\n\n#\n\n#=============================================================================#\n",
        "Line" : 1495,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Settings file split into lines\n",
        "Line" : 1545,
        "CharPositionInLine" : 49
      },
      "75" : {
        "Text" : "# Add entry to settings list if it does not exist\n",
        "Line" : 1556,
        "CharPositionInLine" : 12
      },
      "76" : {
        "Text" : "# Add entry to main list\n",
        "Line" : 1560,
        "CharPositionInLine" : 16
      },
      "77" : {
        "Text" : "# Add entry setting to entry settings list if it does not exist\n",
        "Line" : 1564,
        "CharPositionInLine" : 12
      },
      "78" : {
        "Text" : "# Add setting to entry\n",
        "Line" : 1569,
        "CharPositionInLine" : 16
      },
      "79" : {
        "Text" : "# Add entry sub-setting to entry sub-settings list if it does not exists\n",
        "Line" : 1577,
        "CharPositionInLine" : 12
      },
      "80" : {
        "Text" : "# Save setting value\n",
        "Line" : 1590,
        "CharPositionInLine" : 12
      },
      "81" : {
        "Text" : "#=============================================================================#\n\n# print_settings(ENTRY_NAME)\n\n#\n\n#      ENTRY_NAME - name of entry\n\n#\n\n# Print the entry settings (see load_arduino_syle_settings()).\n\n#\n\n#=============================================================================#\n",
        "Line" : 1603,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "#=============================================================================#\n\n# [PRIVATE/INTERNAL]\n\n#\n\n# print_list(SETTINGS_LIST)\n\n#\n\n#      SETTINGS_LIST - Variables name of settings list\n\n#\n\n# Print list settings and names (see load_arduino_syle_settings()).\n\n#=============================================================================#\n",
        "Line" : 1630,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "#=============================================================================#\n\n# [PRIVATE/INTERNAL]\n\n#\n\n# setup_arduino_example(TARGET_NAME LIBRARY_NAME EXAMPLE_NAME OUTPUT_VAR)\n\n#\n\n#      TARGET_NAME  - Target name\n\n#      LIBRARY_NAME - Library name\n\n#      EXAMPLE_NAME - Example name\n\n#      OUTPUT_VAR   - Variable name to save sketch path.\n\n#\n\n# Creates a Arduino example from a the specified library.\n\n#=============================================================================#\n",
        "Line" : 1660,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Property Scope\n",
        "Line" : 1676,
        "CharPositionInLine" : 31
      },
      "85" : {
        "Text" : "#=============================================================================#\n\n# [PRIVATE/INTERNAL]\n\n#\n\n# setup_arduino_sketch(TARGET_NAME SKETCH_PATH OUTPUT_VAR)\n\n#\n\n#      TARGET_NAME - Target name\n\n#      SKETCH_PATH - Path to sketch directory\n\n#      OUTPUT_VAR  - Variable name where to save generated sketch source\n\n#\n\n# Generates C++ sources from Arduino Sketch.\n\n#=============================================================================#\n",
        "Line" : 1693,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# Sketch directory specified, try to find main sketch...\n",
        "Line" : 1712,
        "CharPositionInLine" : 12
      },
      "87" : {
        "Text" : "# Sektch file specified, assuming parent directory as sketch directory\n",
        "Line" : 1723,
        "CharPositionInLine" : 12
      },
      "88" : {
        "Text" : "# Find all sketch files\n",
        "Line" : 1729,
        "CharPositionInLine" : 8
      },
      "89" : {
        "Text" : "# Regenerate build system if sketch changes\n",
        "Line" : 1736,
        "CharPositionInLine" : 8
      },
      "90" : {
        "Text" : "# Mark file that it exists for find_file\n",
        "Line" : 1743,
        "CharPositionInLine" : 8
      },
      "91" : {
        "Text" : "#=============================================================================#\n\n# [PRIVATE/INTERNAL]\n\n#\n\n# generate_cpp_from_sketch(MAIN_SKETCH_PATH SKETCH_SOURCES SKETCH_CPP)\n\n#\n\n#         MAIN_SKETCH_PATH - Main sketch file path\n\n#         SKETCH_SOURCES   - Setch source paths\n\n#         SKETCH_CPP       - Name of file to generate\n\n#\n\n# Generate C++ source file from Arduino sketch files.\n\n#=============================================================================#\n",
        "Line" : 1753,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# remove comments\n",
        "Line" : 1768,
        "CharPositionInLine" : 4
      },
      "93" : {
        "Text" : "# find first statement\n",
        "Line" : 1771,
        "CharPositionInLine" : 4
      },
      "94" : {
        "Text" : "#message(STATUS \"FIRST STATEMENT: ${FIRST_STATEMENT}\")\n\n#message(STATUS \"FIRST STATEMENT POSITION: ${HEAD_LENGTH}\")\n",
        "Line" : 1777,
        "CharPositionInLine" : 4
      },
      "95" : {
        "Text" : "#arduino_debug_msg(\"SKETCH_HEAD:\\n${SKETCH_HEAD}\")\n",
        "Line" : 1782,
        "CharPositionInLine" : 4
      },
      "96" : {
        "Text" : "# find the body of the main pde\n",
        "Line" : 1784,
        "CharPositionInLine" : 4
      },
      "97" : {
        "Text" : "#arduino_debug_msg(\"BODY:\\n${SKETCH_BODY}\")\n",
        "Line" : 1787,
        "CharPositionInLine" : 4
      },
      "98" : {
        "Text" : "# write the file head\n",
        "Line" : 1789,
        "CharPositionInLine" : 4
      },
      "99" : {
        "Text" : "# Count head line offset (for GCC error reporting)\n",
        "Line" : 1792,
        "CharPositionInLine" : 4
      },
      "100" : {
        "Text" : "# add arduino include header\n\n#file(APPEND ${SKETCH_CPP} \"\\n#line 1 \\\"autogenerated\\\"\\n\")\n",
        "Line" : 1797,
        "CharPositionInLine" : 4
      },
      "101" : {
        "Text" : "# add function prototypes\n",
        "Line" : 1806,
        "CharPositionInLine" : 4
      },
      "102" : {
        "Text" : "# Write function prototypes\n",
        "Line" : 1826,
        "CharPositionInLine" : 8
      },
      "103" : {
        "Text" : "# \" else if(var == other) {\" shoudn't be listed as prototype\n",
        "Line" : 1832,
        "CharPositionInLine" : 12
      },
      "104" : {
        "Text" : "# Write Sketch CPP source\n",
        "Line" : 1843,
        "CharPositionInLine" : 4
      },
      "105" : {
        "Text" : "#=============================================================================#\n\n# [PRIVATE/INTERNAL]\n\n#\n\n# setup_arduino_size_script(OUTPUT_VAR)\n\n#\n\n#        OUTPUT_VAR - Output variable that will contain the script path\n\n#\n\n# Generates script used to display the firmware size.\n\n#=============================================================================#\n",
        "Line" : 1856,
        "CharPositionInLine" : 0
      },
      "106" : {
        "Text" : "#=============================================================================#\n\n# [PRIVATE/INTERNAL]\n\n#\n\n#  arduino_debug_on()\n\n#\n\n# Enables Arduino module debugging.\n\n#=============================================================================#\n",
        "Line" : 1949,
        "CharPositionInLine" : 0
      },
      "107" : {
        "Text" : "#=============================================================================#\n\n# [PRIVATE/INTERNAL]\n\n#\n\n#  arduino_debug_off()\n\n#\n\n# Disables Arduino module debugging.\n\n#=============================================================================#\n",
        "Line" : 1961,
        "CharPositionInLine" : 0
      },
      "108" : {
        "Text" : "#=============================================================================#\n\n# [PRIVATE/INTERNAL]\n\n#\n\n# arduino_debug_msg(MSG)\n\n#\n\n#        MSG - Message to print\n\n#\n\n# Print Arduino debugging information. In order to enable printing\n\n# use arduino_debug_on() and to disable use arduino_debug_off().\n\n#=============================================================================#\n",
        "Line" : 1973,
        "CharPositionInLine" : 0
      },
      "109" : {
        "Text" : "#=============================================================================#\n\n# [PRIVATE/INTERNAL]\n\n#\n\n# remove_comments(SRC_VAR OUT_VAR)\n\n#\n\n#        SRC_VAR - variable holding sources\n\n#        OUT_VAR - variable holding sources with no comments\n\n#\n\n# Removes all comments from the source code.\n\n#=============================================================================#\n",
        "Line" : 1989,
        "CharPositionInLine" : 0
      },
      "110" : {
        "Text" : "#message(STATUS \"removing comments from: ${FILE}\")\n\n#file(WRITE \"${CMAKE_BINARY_DIR}/${FILE}_pre_remove_comments.txt\" ${SRC})\n\n#message(STATUS \"\\n${SRC}\")\n",
        "Line" : 2004,
        "CharPositionInLine" : 4
      },
      "111" : {
        "Text" : "# remove all comments\n",
        "Line" : 2008,
        "CharPositionInLine" : 4
      },
      "112" : {
        "Text" : "#file(WRITE \"${CMAKE_BINARY_DIR}/${FILE}_post_remove_comments.txt\" ${SRC})\n\n#message(STATUS \"\\n${SRC}\")\n",
        "Line" : 2011,
        "CharPositionInLine" : 4
      },
      "113" : {
        "Text" : "#=============================================================================#\n\n# [PRIVATE/INTERNAL]\n\n#\n\n# get_num_lines(DOCUMENT OUTPUT_VAR)\n\n#\n\n#        DOCUMENT   - Document contents\n\n#        OUTPUT_VAR - Variable which will hold the line number count\n\n#\n\n# Counts the line number of the document.\n\n#=============================================================================#\n",
        "Line" : 2018,
        "CharPositionInLine" : 0
      },
      "114" : {
        "Text" : "#=============================================================================#\n\n# [PRIVATE/INTERNAL]\n\n#\n\n# required_variables(MSG msg VARS var1 var2 .. varN)\n\n#\n\n#        MSG  - Message to be displayed in case of error\n\n#        VARS - List of variables names to check\n\n#\n\n# Ensure the specified variables are not empty, otherwise a fatal error is emmited.\n\n#=============================================================================#\n",
        "Line" : 2034,
        "CharPositionInLine" : 0
      },
      "115" : {
        "Text" : "#=============================================================================#\n\n# [PRIVATE/INTERNAL]\n\n#\n\n# error_for_unparsed(PREFIX)\n\n#\n\n#        PREFIX - Prefix name\n\n#\n\n# Emit fatal error if there are unparsed argument from cmake_parse_arguments().\n\n#=============================================================================#\n",
        "Line" : 2054,
        "CharPositionInLine" : 0
      },
      "116" : {
        "Text" : "#=============================================================================#\n\n#                              C Flags                                        \n\n#=============================================================================#\n",
        "Line" : 2075,
        "CharPositionInLine" : 0
      },
      "117" : {
        "Text" : "#=============================================================================#\n\n#                             C++ Flags                                       \n\n#=============================================================================#\n",
        "Line" : 2087,
        "CharPositionInLine" : 0
      },
      "118" : {
        "Text" : "#=============================================================================#\n\n#                       Executable Linker Flags                               #\n\n#=============================================================================#\n",
        "Line" : 2099,
        "CharPositionInLine" : 0
      },
      "119" : {
        "Text" : "#=============================================================================#\n\n#=============================================================================#\n\n#                       Shared Lbrary Linker Flags                            #\n\n#=============================================================================#\n",
        "Line" : 2109,
        "CharPositionInLine" : 0
      },
      "120" : {
        "Text" : "#=============================================================================#\n\n#                         Arduino Settings                                    \n\n#=============================================================================#\n",
        "Line" : 2126,
        "CharPositionInLine" : 0
      },
      "121" : {
        "Text" : "#=============================================================================#\n\n#                          Initialization                                     \n\n#=============================================================================#\n",
        "Line" : 2134,
        "CharPositionInLine" : 0
      },
      "122" : {
        "Text" : "# Ensure that all required paths are found\n",
        "Line" : 2182,
        "CharPositionInLine" : 4
      },
      "123" : {
        "Text" : "#print_board_list()\n\n#print_programmer_list()\n",
        "Line" : 2213,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 124
    },
    "catkin/src/rosserial/rosserial_client/CMakeLists.txt" : {
      "ObjectId" : "5541635223d6594c191f3ca7ddcf920b7b937bb9",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/rosserial/rosserial_client/cmake/rosserial_client-extras.cmake" : {
      "ObjectId" : "b46ce14ab1b8bf2579c06ccba38fbd7223d40dc8",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Generate a rosserial_client ros_lib folder using the make_libraries\n\n# script supplied by a particular package. The default is to fall back\n\n# on the generic script in rosserial_client itself.\n\n#\n\n# :param PACKAGE: name of package to look in for lib generating script.\n\n# :type PACKAGE: string\n\n# :param SCRIPT: name of script, for example `make_libraries.py`.\n\n# :type SCRIPT: string\n\n#\n\n# @public\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Configure a CMake project located in a subfolder of a catkin project,\n\n# optionally specifying a CMake toolchain to use in the build of the\n\n# subproject.\n\n#\n\n# :param DIRECTORY: subdirectory of current package to configure.\n\n# :type DIRECTORY: string\n\n# :param TOOLCHAIN_FILE: full path to toolchain file.\n\n# :type TOOLCHAIN_FILE: string\n\n#\n\n# @public\n\n#\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create a build tree directory for configuring the client's CMake project.\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#\n\n# Create a catkin target which builds a target in the subproject.\n\n#\n\n# :param client_directory: subdirectory of current package with subproject.\n\n# :type client_directory: string\n\n# :param client_target: name of target in subproject to build.\n\n# :type client_target: string\n\n# :param ARGN: additional arguments for target (eg, ALL).\n\n# :type ARGN: list of strings\n\n#\n\n# @public\n\n#\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "catkin/src/rosserial/rosserial_embeddedlinux/CMakeLists.txt" : {
      "ObjectId" : "7cf902aa8947a3edb5c12135c64640337803d503",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/rosserial/rosserial_msgs/CMakeLists.txt" : {
      "ObjectId" : "89fc4020c8dc3a926dfae6dd56180ace1b890443",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/rosserial/rosserial_python/CMakeLists.txt" : {
      "ObjectId" : "badc0f2091d27e9a57195a59c984d54b82065adf",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/rosserial/rosserial_server/CMakeLists.txt" : {
      "ObjectId" : "50c8fef4ad275bc494ac4fa9166ed21d8e97cb67",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/rosserial/rosserial_windows/CMakeLists.txt" : {
      "ObjectId" : "876db61c12496906edc054b577d60fa71560dd76",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/rosserial/rosserial_xbee/CMakeLists.txt" : {
      "ObjectId" : "1058e8f8e07e5f3255ba9b0aac71da32ee20eac9",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/rrhh/CMakeLists.txt" : {
      "ObjectId" : "b7019b432f6c8c48e9291197f93a6edbfafd29c0",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#catkin_python_setup()\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_executable(brazo_console src/brazo_console.cpp)\n\n#target_link_libraries(brazo_console ${catkin_LIBRARIES})\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "catkin/src/test/CMakeLists.txt" : {
      "ObjectId" : "8708b6385ee18608c10ccd131d9d098a0438bbbd",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "catkin/src/volti/CMakeLists.txt" : {
      "ObjectId" : "a00fbe464dc5569996dbb79de7c0f32657890155",
      "LastModified" : "2015-04-10T18:31:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(ROS_BUILD_TYPE Release)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "catkin/src/volti_msgs/CMakeLists.txt" : {
      "ObjectId" : "d202bd146cdd71842b48c8e014a26f9da1999d57",
      "LastModified" : "2015-04-10T18:31:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(ROS_BUILD_TYPE Release)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "rosbuild/hector_vision/CMakeLists.txt" : {
      "ObjectId" : "28105dd5aa07a561c1429ae4530c22e0e36b34ec",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Append to CPACK_SOURCE_IGNORE_FILES a semicolon-separated list of\n\n# directories (or patterns, but directories should suffice) that should\n\n# be excluded from the distro.  This is not the place to put things that\n\n# should be ignored everywhere, like \"build\" directories; that happens in\n\n# rosbuild/rosbuild.cmake.  Here should be listed packages that aren't\n\n# ready for inclusion in a distro.\n\n#\n\n# This list is combined with the list in rosbuild/rosbuild.cmake.  Note\n\n# that CMake 2.6 may be required to ensure that the two lists are combined\n\n# properly.  CMake 2.4 seems to have unpredictable scoping rules for such\n\n# variables.\n\n#list(APPEND CPACK_SOURCE_IGNORE_FILES /core/experimental)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "rosbuild/hector_vision/Makefile" : {
      "ObjectId" : "a818ccadb911aa86a9120d25981d64abf102dd30",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "rosbuild/hector_vision/hector_heat_detection/CMakeLists.txt" : {
      "ObjectId" : "37c40f131620235f80e3e9310eda8035c23ce280",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set the build type.  Options are:\n\n#  Coverage       : w/ debug symbols, w/o optimization, w/ code-coverage\n\n#  Debug          : w/ debug symbols, w/o optimization\n\n#  Release        : w/o debug symbols, w/ optimization\n\n#  RelWithDebInfo : w/ debug symbols, w/ optimization\n\n#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries\n\n#set(ROS_BUILD_TYPE Debug)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set the default path for built executables to the \"bin\" directory\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set the default path for built libraries to the \"lib\" directory\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#uncomment if you have defined messages\n\n#rosbuild_genmsg()\n\n#uncomment if you have defined services\n\n#rosbuild_gensrv()\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#common commands for building c++ executables and libraries\n\n#rosbuild_add_library(${PROJECT_NAME} src/example.cpp)\n\n#target_link_libraries(${PROJECT_NAME} another_library)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#rosbuild_add_boost_directories()\n\n#rosbuild_link_boost(${PROJECT_NAME} thread)\n\n#rosbuild_add_executable(example examples/example.cpp)\n\n#target_link_libraries(example ${PROJECT_NAME})\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#add dynamic reconfigure api\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#rosbuild_add_library(${PROJECT_NAME} src/example.cpp)\n\n#target_link_libraries(${PROJECT_NAME} another_library)\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#TODO: Define non-absolute include path\n\n#Teporary includes of opencv with sse3 disabled\n\n#target_link_libraries(${PROJECT_NAME} /home/konstantin/opencv/opencv2.3_bin/lib/libopencv_highgui.so)\n\n#target_link_libraries(${PROJECT_NAME} /home/konstantin/opencv/opencv2.3_bin/lib/libopencv_imgproc.so)\n\n#target_link_libraries(${PROJECT_NAME} /home/konstantin/opencv/opencv2.3_bin/lib/libopencv_features2d.so)\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "rosbuild/hector_vision/hector_heat_detection/Makefile" : {
      "ObjectId" : "b75b928f20ef9ea4f509a17db62e4e31b422c27f",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "rosbuild/hector_vision/hector_motion_detection/CMakeLists.txt" : {
      "ObjectId" : "47004199cbafc9a49fd2368758bab01425e6b194",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set the build type.  Options are:\n\n#  Coverage       : w/ debug symbols, w/o optimization, w/ code-coverage\n\n#  Debug          : w/ debug symbols, w/o optimization\n\n#  Release        : w/o debug symbols, w/ optimization\n\n#  RelWithDebInfo : w/ debug symbols, w/ optimization\n\n#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set the default path for built executables to the \"bin\" directory\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set the default path for built libraries to the \"lib\" directory\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#uncomment if you have defined messages\n\n#rosbuild_genmsg()\n\n#uncomment if you have defined services\n\n#rosbuild_gensrv()\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#common commands for building c++ executables and libraries\n\n#rosbuild_add_library(${PROJECT_NAME} src/example.cpp)\n\n#target_link_libraries(${PROJECT_NAME} another_library)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#rosbuild_add_boost_directories()\n\n#rosbuild_link_boost(${PROJECT_NAME} thread)\n\n#rosbuild_add_executable(example examples/example.cpp)\n\n#target_link_libraries(example ${PROJECT_NAME})\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#add dynamic reconfigure api\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#rosbuild_add_library(${PROJECT_NAME} src/example.cpp)\n\n#target_link_libraries(${PROJECT_NAME} another_library)\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#TODO: Define non-absolute include path\n\n#Teporary includes of opencv with sse3 disabled\n\n#target_link_libraries(${PROJECT_NAME} /home/konstantin/opencv/opencv2.3_bin/lib/libopencv_highgui.so)\n\n#target_link_libraries(${PROJECT_NAME} /home/konstantin/opencv/opencv2.3_bin/lib/libopencv_imgproc.so)\n\n#target_link_libraries(${PROJECT_NAME} /home/konstantin/opencv/opencv2.3_bin/lib/libopencv_features2d.so)\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "rosbuild/hector_vision/hector_motion_detection/Makefile" : {
      "ObjectId" : "b75b928f20ef9ea4f509a17db62e4e31b422c27f",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "rosbuild/hector_vision/hector_qrcode_detection/3rdparty/zbar/Makefile" : {
      "ObjectId" : "0c169cb783fc17138bbe12d70b2d34d5aece820d",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "rosbuild/hector_vision/hector_qrcode_detection/CMakeLists.txt" : {
      "ObjectId" : "6400d56eb337384b1cef32d5af594b52ea9d4f03",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set the build type.  Options are:\n\n#  Coverage       : w/ debug symbols, w/o optimization, w/ code-coverage\n\n#  Debug          : w/ debug symbols, w/o optimization\n\n#  Release        : w/o debug symbols, w/ optimization\n\n#  RelWithDebInfo : w/ debug symbols, w/ optimization\n\n#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries\n\n#set(ROS_BUILD_TYPE RelWithDebInfo)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set the default path for built executables to the \"bin\" directory\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set the default path for built libraries to the \"lib\" directory\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#uncomment if you have defined messages\n\n#rosbuild_genmsg()\n\n#uncomment if you have defined services\n\n#rosbuild_gensrv()\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#common commands for building c++ executables and libraries\n\n#rosbuild_add_library(${PROJECT_NAME} src/example.cpp)\n\n#target_link_libraries(${PROJECT_NAME} another_library)\n\n#rosbuild_add_boost_directories()\n\n#rosbuild_link_boost(${PROJECT_NAME} thread)\n\n#rosbuild_add_executable(example examples/example.cpp)\n\n#target_link_libraries(example ${PROJECT_NAME})\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# download and build zbar library\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "rosbuild/hector_vision/hector_qrcode_detection/Makefile" : {
      "ObjectId" : "eb6d3f7ba52e73deddb72e5f45905fe2761d5f3d",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "rosbuild/hector_vision/hector_qrcode_detection/src/CMakeFiles/CMakeDirectoryInformation.cmake" : {
      "ObjectId" : "f0f187b80f291e3ed29eed324d08add16afc03f3",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMAKE generated file: DO NOT EDIT!\n\n# Generated by \"Unix Makefiles\" Generator, CMake Version 2.8\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Relative path conversion top directories.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Force unix paths in dependencies.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The C and CXX include file search paths:\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The C and CXX include file regular expressions for this directory.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "rosbuild/hector_vision/hector_qrcode_detection/src/CMakeFiles/qrcode_detection.dir/DependInfo.cmake" : {
      "ObjectId" : "fbb7bddba041e9d0a592b403943e56219bbe5e60",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The set of languages for which implicit dependencies are needed:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The set of files for implicit dependencies of each language:\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Preprocessor definitions for this target.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Targets to which this target links.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "rosbuild/hector_vision/hector_qrcode_detection/src/CMakeFiles/qrcode_detection.dir/cmake_clean.cmake" : {
      "ObjectId" : "44b7e032fb463354abd176730557a196396ee55b",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Per-language clean rules from dependency scanning.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "rosbuild/hector_vision/hector_qrcode_detection/src/CMakeFiles/qrcode_detection_node.dir/DependInfo.cmake" : {
      "ObjectId" : "e42cde76cbe2058ecfcd2b094bedab5422320ac6",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The set of languages for which implicit dependencies are needed:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The set of files for implicit dependencies of each language:\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Preprocessor definitions for this target.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Targets to which this target links.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "rosbuild/hector_vision/hector_qrcode_detection/src/CMakeFiles/qrcode_detection_node.dir/cmake_clean.cmake" : {
      "ObjectId" : "b5c2964056a8c660d846775ed07d64ef2816faad",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Per-language clean rules from dependency scanning.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "rosbuild/hector_vision/hector_qrcode_detection/src/CMakeFiles/qrcode_detection_nodelet.dir/DependInfo.cmake" : {
      "ObjectId" : "6f1adca8f4fa6318feb5db770089e110c6fa80cd",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The set of languages for which implicit dependencies are needed:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The set of files for implicit dependencies of each language:\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Preprocessor definitions for this target.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Targets to which this target links.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "rosbuild/hector_vision/hector_qrcode_detection/src/CMakeFiles/qrcode_detection_nodelet.dir/cmake_clean.cmake" : {
      "ObjectId" : "d4afd6d7e09acdcf13a473e71c9af7f21516c10b",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Per-language clean rules from dependency scanning.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "rosbuild/hector_vision/hector_qrcode_detection/src/CMakeLists.txt" : {
      "ObjectId" : "9aff1f94d3841288d9e89db7f8893085e21e9b3f",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "rosbuild/hector_vision/hector_qrcode_detection/src/Makefile" : {
      "ObjectId" : "1e93f6de0bdb3a8d2967dbd0bcc52a318ca0fd2f",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# CMAKE generated file: DO NOT EDIT!\n\n# Generated by \"Unix Makefiles\" Generator, CMake Version 2.8\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Default target executed when no arguments are given to make.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Special targets provided by cmake.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Disable implicit rules so canonical targets will work.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Remove some rules from gmake that .SUFFIXES does not remove.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Suppress display of executed commands.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# A target that is always out of date.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#=============================================================================\n\n# Set environment variables for the build.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# The shell in which to execute make rules.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# The CMake executable.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# The command to remove a file.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# The top-level source directory on which CMake was run.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# The top-level build directory on which CMake was run.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#=============================================================================\n\n# Targets provided globally by CMake.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Special rule for the target edit_cache\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Special rule for the target edit_cache\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Special rule for the target install\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Special rule for the target install\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Special rule for the target install/local\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Special rule for the target install/local\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Special rule for the target install/strip\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Special rule for the target install/strip\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Special rule for the target list_install_components\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Special rule for the target list_install_components\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Special rule for the target rebuild_cache\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Special rule for the target rebuild_cache\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# The main all target\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# The main clean target\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# The main clean target\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Prepare targets for installation.\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Prepare targets for installation.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# clear depends\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Convenience name for target.\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Convenience name for target.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# fast build rule for target.\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Convenience name for target.\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Convenience name for target.\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# fast build rule for target.\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Convenience name for target.\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Convenience name for target.\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# fast build rule for target.\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# target to build an object file\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# target to build an object file\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# target to build an object file\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# target to preprocess a source file\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# target to generate assembly for a file\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# Help Target\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#=============================================================================\n\n# Special targets to cleanup operation of make.\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Special rule to run CMake to check the build system integrity.\n\n# No rule that depends on this can have commands that come from listfiles\n\n# because they might be regenerated.\n",
        "Line" : 284,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 53
    },
    "rosbuild/hector_vision/hector_qrcode_detection/src/cmake_install.cmake" : {
      "ObjectId" : "2fbefa5884893e6ce4200d04e2e73dde3dd7772c",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Install script for directory: /home/jakob/workspace/rosbuild/hector_vision/hector_qrcode_detection/src\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the install prefix\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the install configuration name.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the component getting installed.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Install shared libraries without execute permission?\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "rosbuild/hector_vision/hector_thermal_self_filter/CMakeLists.txt" : {
      "ObjectId" : "d92f0cdcc73f5528d211d64735738bd4b5546789",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set the build type.  Options are:\n\n#  Coverage       : w/ debug symbols, w/o optimization, w/ code-coverage\n\n#  Debug          : w/ debug symbols, w/o optimization\n\n#  Release        : w/o debug symbols, w/ optimization\n\n#  RelWithDebInfo : w/ debug symbols, w/ optimization\n\n#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries\n\n#set(ROS_BUILD_TYPE RelWithDebInfo)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set the default path for built executables to the \"bin\" directory\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set the default path for built libraries to the \"lib\" directory\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#uncomment if you have defined messages\n\n#rosbuild_genmsg()\n\n#uncomment if you have defined services\n\n#rosbuild_gensrv()\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#common commands for building c++ executables and libraries\n\n#rosbuild_add_library(${PROJECT_NAME} src/example.cpp)\n\n#target_link_libraries(${PROJECT_NAME} another_library)\n\n#rosbuild_add_boost_directories()\n\n#rosbuild_link_boost(${PROJECT_NAME} thread)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#target_link_libraries(example ${PROJECT_NAME})\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "rosbuild/hector_vision/hector_thermal_self_filter/Makefile" : {
      "ObjectId" : "b75b928f20ef9ea4f509a17db62e4e31b422c27f",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "rosbuild/razor_imu_9dof/CMakeLists.txt" : {
      "ObjectId" : "5891795e10b54cac14d1574f13c761c539515d0b",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set the build type.  Options are:\n\n#  Coverage       : w/ debug symbols, w/o optimization, w/ code-coverage\n\n#  Debug          : w/ debug symbols, w/o optimization\n\n#  Release        : w/o debug symbols, w/ optimization\n\n#  RelWithDebInfo : w/ debug symbols, w/ optimization\n\n#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries\n\n#set(ROS_BUILD_TYPE RelWithDebInfo)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set the default path for built executables to the \"bin\" directory\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set the default path for built libraries to the \"lib\" directory\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#uncomment if you have defined messages\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#uncomment if you have defined services\n\n#rosbuild_gensrv()\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#common commands for building c++ executables and libraries\n\n#rosbuild_add_library(${PROJECT_NAME} src/example.cpp)\n\n#target_link_libraries(${PROJECT_NAME} another_library)\n\n#rosbuild_add_boost_directories()\n\n#rosbuild_link_boost(${PROJECT_NAME} thread)\n\n#rosbuild_add_executable(example examples/example.cpp)\n\n#target_link_libraries(example ${PROJECT_NAME})\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "rosbuild/robot_self_filter/CMakeLists.txt" : {
      "ObjectId" : "8bca34a23af0c0cb8380e01198c82369e273f59b",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set the build type.  Options are:\n\n#  Coverage       : w/ debug symbols, w/o optimization, w/ code-coverage\n\n#  Debug          : w/ debug symbols, w/o optimization\n\n#  Release        : w/o debug symbols, w/ optimization\n\n#  RelWithDebInfo : w/ debug symbols, w/ optimization\n\n#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# most likely not\n",
        "Line" : 45,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 2
    },
    "rosbuild/robot_self_filter/Makefile" : {
      "ObjectId" : "b75b928f20ef9ea4f509a17db62e4e31b422c27f",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "rosbuild/robot_self_filter/cmake/FindEigen.cmake" : {
      "ObjectId" : "2666481cc15650bcbb323ec89cb90fafa3369dd1",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN_FOUND - system has eigen lib with correct version\n\n#  EIGEN_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "rosbuild/thermaleye_msgs/CMakeLists.txt" : {
      "ObjectId" : "f57cd14f805036b013a5f75d40c9a784fc192c40",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set the build type.  Options are:\n\n#  Coverage       : w/ debug symbols, w/o optimization, w/ code-coverage\n\n#  Debug          : w/ debug symbols, w/o optimization\n\n#  Release        : w/o debug symbols, w/ optimization\n\n#  RelWithDebInfo : w/ debug symbols, w/ optimization\n\n#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries\n\n#set(ROS_BUILD_TYPE RelWithDebInfo)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set the default path for built executables to the \"bin\" directory\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set the default path for built libraries to the \"lib\" directory\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#uncomment if you have defined messages\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#uncomment if you have defined services\n\n#rosbuild_gensrv()\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#common commands for building c++ executables and libraries\n\n#rosbuild_add_library(${PROJECT_NAME} src/example.cpp)\n\n#target_link_libraries(${PROJECT_NAME} another_library)\n\n#rosbuild_add_boost_directories()\n\n#rosbuild_link_boost(${PROJECT_NAME} thread)\n\n#rosbuild_add_executable(example examples/example.cpp)\n\n#target_link_libraries(example ${PROJECT_NAME})",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "rosbuild/thermaleye_msgs/Makefile" : {
      "ObjectId" : "b75b928f20ef9ea4f509a17db62e4e31b422c27f",
      "LastModified" : "2015-03-18T05:39:54Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 108,
    "MAKEFILE" : 10
  },
  "ElapsedTime" : 1612
}