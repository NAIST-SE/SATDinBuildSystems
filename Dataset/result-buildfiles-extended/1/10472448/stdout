{
  "Repository" : "10472448",
  "Revision" : "HEAD",
  "ObjectId" : "87e42117d5045671b5b23653ef5f8bb451a3f3d3",
  "CommitTime" : "2017-07-15T21:29:19Z",
  "Files" : {
    "pom.xml" : {
      "ObjectId" : "b53149c0c235cc9f7562a6c84671b69d71863ff0",
      "LastModified" : "2016-05-19T20:14:48Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " files overwrite each other and geotools does not function without this.\n   \t             http://docs.geotools.org/latest/userguide/faq.html#how-do-i-create-an-executable-jar-for-my-geotools-app ",
        "Line" : 48,
        "CharPositionInLine" : 126
      },
      "1" : {
        "Text" : " signature files from included jars cause problems: http://stackoverflow.com/questions/999489 ",
        "Line" : 52,
        "CharPositionInLine" : 112
      },
      "2" : {
        "Text" : "\n              If you'd like to tell the plugin where your .git directory is,\n              use this setting, otherwise we'll perform a search trying to\n              figure out the right directory. It's better to add it explicite IMHO.\n          ",
        "Line" : 85,
        "CharPositionInLine" : 14
      },
      "3" : {
        "Text" : " that's the default value, you don't have to set it ",
        "Line" : 88,
        "CharPositionInLine" : 70
      },
      "4" : {
        "Text" : " that's the default value ",
        "Line" : 91,
        "CharPositionInLine" : 44
      },
      "5" : {
        "Text" : " false is default here, it prints some more information during the build ",
        "Line" : 94,
        "CharPositionInLine" : 91
      },
      "6" : {
        "Text" : " ALTERNATE SETUP - GENERATE FILE ",
        "Line" : 97,
        "CharPositionInLine" : 51
      },
      "7" : {
        "Text" : "\n              If you want to keep git information, even in your WAR file etc,\n              use this mode, which will generate a properties file (with filled out values)\n              which you can then normally read using new Properties().load(/**/)\n          ",
        "Line" : 102,
        "CharPositionInLine" : 14
      },
      "8" : {
        "Text" : " this is false by default, forces the plugin to generate the git.properties file ",
        "Line" : 104,
        "CharPositionInLine" : 99
      },
      "9" : {
        "Text" : " The path for the to be generated properties file, it's relative to ${project.basedir} ",
        "Line" : 107,
        "CharPositionInLine" : 105
      },
      "10" : {
        "Text" : " Denotes the format to save properties in. Valid options are \"properties\" (default) and \"json\". Properties will be saved to the generateGitPropertiesFilename if generateGitPropertiesFile is set to `true`. ",
        "Line" : 110,
        "CharPositionInLine" : 223
      },
      "11" : {
        "Text" : "\n              this is true by default; You may want to set this to false, if the plugin should run inside a\n              <packaging>pom</packaging> project. Most projects won't need to override this property.\n\n              For an use-case for this kind of behaviour see: https://github.com/ktoso/maven-git-commit-id-plugin/issues/21\n          ",
        "Line" : 118,
        "CharPositionInLine" : 14
      },
      "12" : {
        "Text" : " @since 2.1.4 ",
        "Line" : 121,
        "CharPositionInLine" : 32
      },
      "13" : {
        "Text" : "\n              Tell maven-git-commit-id to inject the git properties into all reactor projects not just the current one.\n              For details about why you might want to skip this, read this issue: https://github.com/ktoso/maven-git-commit-id-plugin/pull/65\n              The property is set to ``false`` by default to prevent the overriding of properties that may be unrelated to the project.\n          ",
        "Line" : 126,
        "CharPositionInLine" : 14
      },
      "14" : {
        "Text" : " @since 2.0.4 ",
        "Line" : 129,
        "CharPositionInLine" : 32
      },
      "15" : {
        "Text" : " true by default, controls whether the plugin will fail when no .git directory is found, when set to false the plugin will just skip execution ",
        "Line" : 130,
        "CharPositionInLine" : 161
      },
      "16" : {
        "Text" : " @since 2.1.5 ",
        "Line" : 133,
        "CharPositionInLine" : 32
      },
      "17" : {
        "Text" : " true by default, controls whether the plugin will fail if it was unable to obtain enough data for a complete run, if you don't care about this, you may want to set this value to false. ",
        "Line" : 134,
        "CharPositionInLine" : 204
      },
      "18" : {
        "Text" : " @since 2.1.8 ",
        "Line" : 137,
        "CharPositionInLine" : 32
      },
      "19" : {
        "Text" : "\n              skip the plugin execution completely. This is useful for e.g. profile activated plugin invocations or\n              to use properties to enable / disable pom features. Default value is 'false'.\n          ",
        "Line" : 141,
        "CharPositionInLine" : 14
      },
      "20" : {
        "Text" : " @since 2.1.12 ",
        "Line" : 144,
        "CharPositionInLine" : 33
      },
      "21" : {
        "Text" : "\n             Use with caution!\n\n             In a multi-module build, only run once. This means that the plugins effects will only execute once, for the parent project.\n             This probably won't \"do the right thing\" if your project has more than one git repository.\n\n             Important: If you're using `generateGitPropertiesFile`, setting `runOnlyOnce` will make the plugin\n             only generate the file in the directory where you started your build (!).\n\n             The `git.*` maven properties are available in all modules.\n             Default value is `false`.\n          ",
        "Line" : 156,
        "CharPositionInLine" : 14
      },
      "22" : {
        "Text" : " @since 2.1.9 ",
        "Line" : 159,
        "CharPositionInLine" : 32
      },
      "23" : {
        "Text" : "\n              Can be used to exclude certain properties from being emited into the resulting file.\n              May be useful when you want to hide {@code git.remote.origin.url} (maybe because it contains your repo password?),\n              or the email of the committer etc.\n\n              Each value may be globbing, that is, you can write {@code git.commit.user.*} to exclude both, the {@code name},\n              as well as {@code email} properties from being emitted into the resulting files.\n\n              Please note that the strings here are Java regexes ({@code .*} is globbing, not plain {@code *}).\n          ",
        "Line" : 169,
        "CharPositionInLine" : 14
      },
      "24" : {
        "Text" : " <excludeProperty>git.user.*</excludeProperty> ",
        "Line" : 171,
        "CharPositionInLine" : 67
      },
      "25" : {
        "Text" : " @since 2.1.14 ",
        "Line" : 174,
        "CharPositionInLine" : 33
      },
      "26" : {
        "Text" : "\n              Can be used to include only certain properties into the resulting file.\n              Will be overruled by the exclude properties.\n\n              Each value may be globbing, that is, you can write {@code git.commit.user.*} to include both, the {@code name},\n              as well as {@code email} properties into the resulting files.\n\n              Please note that the strings here are Java regexes ({@code .*} is globbing, not plain {@code *}).\n          ",
        "Line" : 183,
        "CharPositionInLine" : 14
      },
      "27" : {
        "Text" : " <includeOnlyProperty>^git.commit.id.full$</includeOnlyProperty> ",
        "Line" : 185,
        "CharPositionInLine" : 85
      },
      "28" : {
        "Text" : " @since 2.1.10 ",
        "Line" : 188,
        "CharPositionInLine" : 33
      },
      "29" : {
        "Text" : "\n            false is default here, if set to true it uses native `git` excutable for extracting all data.\n            This usually has better performance than the default (jgit) implemenation, but requires you to\n            have git available as executable for the build as well as *might break unexpectedly* when you\n            upgrade your system-wide git installation.\n\n            As rule of thumb - stay on `jgit` (keep this `false`) until you notice performance problems.\n          ",
        "Line" : 196,
        "CharPositionInLine" : 14
      },
      "30" : {
        "Text" : " @since v2.0.4 ",
        "Line" : 199,
        "CharPositionInLine" : 33
      },
      "31" : {
        "Text" : "\n               Controls the length of the abbreviated git commit it (git.commit.id.abbrev)\n\n               Defaults to `7`.\n               `0` carries the special meaning.\n               Maximum value is `40`, because of max SHA-1 length.\n           ",
        "Line" : 206,
        "CharPositionInLine" : 15
      },
      "32" : {
        "Text" : " @since 2.1.0 ",
        "Line" : 209,
        "CharPositionInLine" : 32
      },
      "33" : {
        "Text" : "\n              read up about git-describe on the in man, or it's homepage - it's a really powerful versioning helper\n              and the recommended way to use git-commit-id-plugin. The configuration bellow is optional,\n              by default describe will run \"just like git-describe on the command line\", even though it's a JGit reimplementation.\n          ",
        "Line" : 214,
        "CharPositionInLine" : 14
      },
      "34" : {
        "Text" : " don't generate the describe property ",
        "Line" : 217,
        "CharPositionInLine" : 58
      },
      "35" : {
        "Text" : "\n                if no tag was found \"near\" this commit, just print the commit's id instead,\n                helpful when you always expect this field to be not-empty\n            ",
        "Line" : 223,
        "CharPositionInLine" : 16
      },
      "36" : {
        "Text" : "\n                 how many chars should be displayed as the commit object id?\n                 7 is git's default,\n                 0 has a special meaning (see end of this README.md),\n                 and 40 is the maximum value here\n            ",
        "Line" : 230,
        "CharPositionInLine" : 16
      },
      "37" : {
        "Text" : " use lightweight tags ",
        "Line" : 233,
        "CharPositionInLine" : 42
      },
      "38" : {
        "Text" : " when the build is triggered while the repo is in \"dirty state\", append this suffix ",
        "Line" : 236,
        "CharPositionInLine" : 104
      },
      "39" : {
        "Text" : " Only consider tags matching the given pattern. This can be used to avoid leaking private tags from the repository. ",
        "Line" : 239,
        "CharPositionInLine" : 136
      },
      "40" : {
        "Text" : "\n                 always print using the \"tag-commits_from_tag-g_commit_id-maybe_dirty\" format, even if \"on\" a tag.\n                 The distance will always be 0 if you're \"on\" the tag.\n            ",
        "Line" : 245,
        "CharPositionInLine" : 16
      },
      "41" : {
        "Text" : " commons imaging ",
        "Line" : 262,
        "CharPositionInLine" : 29
      },
      "42" : {
        "Text" : " GTFS Lib includes an SLF4j backend but we're using Logback ",
        "Line" : 282,
        "CharPositionInLine" : 74
      },
      "43" : {
        "Text" : " the core, which includes Streaming API, shared low-level abstractions (but NOT data-binding) ",
        "Line" : 302,
        "CharPositionInLine" : 106
      },
      "44" : {
        "Text" : " Just the annotations; use this dependency if you want to attach annotations\n         to classes without connecting them to the code. ",
        "Line" : 310,
        "CharPositionInLine" : 61
      },
      "45" : {
        "Text" : " databinding; ObjectMapper, JsonNode and related classes are here ",
        "Line" : 317,
        "CharPositionInLine" : 78
      },
      "46" : {
        "Text" : " use logback for logging so we can set up a LogEntries appender if so desired ",
        "Line" : 336,
        "CharPositionInLine" : 90
      },
      "47" : {
        "Text" : " exclude the slf4j-simple logging backend ",
        "Line" : 360,
        "CharPositionInLine" : 56
      },
      "48" : {
        "Text" : " file upload support ",
        "Line" : 369,
        "CharPositionInLine" : 33
      },
      "49" : {
        "Text" : " OTP depends on an old protobuf library. exclude it from the build ",
        "Line" : 381,
        "CharPositionInLine" : 81
      },
      "50" : {
        "Text" : " Authentication and user management ",
        "Line" : 433,
        "CharPositionInLine" : 48
      },
      "CommentCount" : 51
    }
  },
  "FileTypes" : {
    "MAVEN" : 1
  },
  "ElapsedTime" : 736
}