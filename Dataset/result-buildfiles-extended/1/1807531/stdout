{
  "Repository" : "1807531",
  "Revision" : "HEAD",
  "ObjectId" : "de9dce97b61b2f8c532a1eb8b1473a428edf0489",
  "CommitTime" : "2019-03-13T10:17:29Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "e6073f36b9c71224de898afb62389f3d8c0c2736",
      "LastModified" : "2019-01-18T08:58:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Find Boost\n\n#----------------------------------------------------------------------------\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Builtin backend\n\n#----------------------------------------------------------------------------\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Common compile options and definitions\n\n#----------------------------------------------------------------------------\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Compiler is GNU (g++):\n",
        "Line" : 74,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Compiler is Clang:\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Compiler is MSVC:\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Compiler is MSVC:\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Enable asynchronous setup?\n\n#----------------------------------------------------------------------------\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Eigen backend\n\n#----------------------------------------------------------------------------\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Find Blaze\n\n#----------------------------------------------------------------------------\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Find VexCL\n\n#----------------------------------------------------------------------------\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Find ViennaCL\n\n#----------------------------------------------------------------------------\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Find CUDA\n\n#----------------------------------------------------------------------------\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Find MPI\n\n#----------------------------------------------------------------------------\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Need this to comply with CMP004 policy:\n",
        "Line" : 184,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Find Pastix\n\n#----------------------------------------------------------------------------\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Build Fortran example\n\n#----------------------------------------------------------------------------\n",
        "Line" : 257,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Build Python example\n\n#----------------------------------------------------------------------------\n",
        "Line" : 265,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 18
    },
    "cmake/FindMetis.cmake" : {
      "ObjectId" : "378cd74d4acadb39bc2c5301a45877437c4be1c6",
      "LastModified" : "2019-01-18T08:58:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Metis library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindNumPy.cmake" : {
      "ObjectId" : "eafed165eb62d66bad5e105a88d4fe9cf79b5fb6",
      "LastModified" : "2014-08-21T19:18:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the NumPy libraries\r\n\n# This module finds if NumPy is installed, and sets the following variables\r\n\n# indicating where it is.\r\n\n#\r\n\n# TODO: Update to provide the libraries and paths for linking npymath lib.\r\n\n#\r\n\n#  NUMPY_FOUND               - was NumPy found\r\n\n#  NUMPY_VERSION             - the version of NumPy found as a string\r\n\n#  NUMPY_VERSION_MAJOR       - the major version number of NumPy\r\n\n#  NUMPY_VERSION_MINOR       - the minor version number of NumPy\r\n\n#  NUMPY_VERSION_PATCH       - the patch version number of NumPy\r\n\n#  NUMPY_VERSION_DECIMAL     - e.g. version 1.6.1 is 10601\r\n\n#  NUMPY_INCLUDE_DIRS        - path to the NumPy include files\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#============================================================================\r\n\n# Copyright 2012 Continuum Analytics, Inc.\r\n\n#\r\n\n# MIT License\r\n\n#\r\n\n# Permission is hereby granted, free of charge, to any person obtaining\r\n\n# a copy of this software and associated documentation files\r\n\n# (the \"Software\"), to deal in the Software without restriction, including\r\n\n# without limitation the rights to use, copy, modify, merge, publish,\r\n\n# distribute, sublicense, and/or sell copies of the Software, and to permit\r\n\n# persons to whom the Software is furnished to do so, subject to\r\n\n# the following conditions:\r\n\n#\r\n\n# The above copyright notice and this permission notice shall be included\r\n\n# in all copies or substantial portions of the Software.\r\n\n#\r\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\r\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR\r\n\n# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\r\n\n# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\r\n\n# OTHER DEALINGS IN THE SOFTWARE.\r\n\n#\r\n\n#============================================================================\r\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Finding NumPy involves calling the Python interpreter\r\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Convert the process output into a list\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Just in case there is unexpected output from the Python command.\r\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The output from Python was unexpected. Raise an error always\r\n\n# here, because we found NumPy, but it appears to be corrupted somehow.\r\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Make sure all directory separators are '/'\r\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Get the major and minor version numbers\r\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/FindPastix.cmake" : {
      "ObjectId" : "5ddee83c44ab8842318fb8545ccef5df47025303",
      "LastModified" : "2014-08-21T19:18:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Pastix lib requires linking to a blas library.\n\n# It is up to the user of this module to find a BLAS and link to it.\n\n# Pastix requires SCOTCH or METIS (partitioning and reordering tools) as well\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindScotch.cmake" : {
      "ObjectId" : "ec60187f32b57c2e44e4a2227e0215d9c70ca94e",
      "LastModified" : "2014-12-14T08:23:48Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Pastix requires SCOTCH or METIS (partitioning and reordering tools)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/opencl/FindOpenCL.cmake" : {
      "ObjectId" : "f85a8ce804c2ae19c0b9f1958d2dd50510c8c065",
      "LastModified" : "2017-04-23T13:08:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find OpenCL\n\n# This module tries to find an OpenCL implementation on your system. It supports\n\n# AMD / ATI, Apple and NVIDIA implementations.\n\n#\n\n# To set the paths manually, define these environment variables:\n\n# OpenCL_INCPATH    - Include path (e.g. OpenCL_INCPATH=/opt/cuda/4.0/cuda/include)\n\n# OpenCL_LIBPATH    - Library path (e.h. OpenCL_LIBPATH=/usr/lib64/nvidia)\n\n#\n\n# Once done this will define\n\n#  OpenCL_FOUND         - system has OpenCL\n\n#  OpenCL_INCLUDE_DIRS  - the OpenCL include directory\n\n#  OpenCL_LIBRARIES     - link these to use OpenCL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The AMD SDK currently installs both x86 and x86_64 libraries\n\n# This is only a hack to find out architecture\n",
        "Line" : 30,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# On Win32 search relative to the library\n",
        "Line" : 43,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Unix style platforms\n",
        "Line" : 51,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# The AMD SDK currently does not place its headers\n\n# in /usr/include, therefore also search relative\n\n# to the library\n",
        "Line" : 59,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# This is often the same, so clean up\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "docs/CMakeLists.txt" : {
      "ObjectId" : "5c67b3aa6051299e0f075ec90b67dd0d536c4ef8",
      "LastModified" : "2017-04-23T13:08:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "a73c515790087d219e6e42c26133c5ac3d8331c3",
      "LastModified" : "2019-01-18T08:58:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# The HPX backend example\n\n#----------------------------------------------------------------------------\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/mpi/CMakeLists.txt" : {
      "ObjectId" : "13d2abf5cb16957eda00d824bd20fe8a3a8aa556",
      "LastModified" : "2019-01-18T08:58:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "fortran/CMakeLists.txt" : {
      "ObjectId" : "e655304d8f1acc1d5630be1e472652e82b382610",
      "LastModified" : "2017-04-23T13:08:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/CMakeLists.txt" : {
      "ObjectId" : "4e7b28057cd187728d30618411220980bdc87b4b",
      "LastModified" : "2017-04-24T06:58:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pyamgcl/CMakeLists.txt" : {
      "ObjectId" : "17085b8088e9622b661c3776fa1e68a26ad373df",
      "LastModified" : "2017-05-02T11:26:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "750bdf0e5e52f14af3c1f2857a59c9aa3a87eeca",
      "LastModified" : "2017-10-21T13:37:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Test coverage\n\n#----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Resets coverage statistics\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Converts accumulated coverage statistics into coverage/index.html\n\n# Run `make tests` after `make coverage_reset` and before `make coverage`.\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# The tests\n\n#----------------------------------------------------------------------------\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    }
  },
  "FileTypes" : {
    "CMAKE" : 13
  },
  "ElapsedTime" : 1211
}