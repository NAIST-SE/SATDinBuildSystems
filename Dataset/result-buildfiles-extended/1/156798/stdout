{
  "Repository" : "156798",
  "Revision" : "HEAD",
  "ObjectId" : "44fdfd0970dd0d8896e2b78004f574feaba95e8c",
  "CommitTime" : "2019-04-02T23:03:38Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "b078839ce0f8c1d7620322a85eb982fbfb36c0c0",
      "LastModified" : "2019-03-27T13:36:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Project definition\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# By default, do not warn when built on machines using only VS Express:\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Define variables and cmake parameters, and display some information\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Common build options/settings\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Common build options/settings\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Check Mandatory Dependencies\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Check Optional Dependencies\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Debug, Cpack and Ctest settings\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Code coverage\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Custom command/targets depending on the cmake generator\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Add subdirectories\n\n#------------------------------------------------------------------------------\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Examples\n\n#------------------------------------------------------------------------------\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Install settings\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Unzip and install topology Look up Tables.\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "cmake/BuildExamples.cmake" : {
      "ObjectId" : "1767faaaa76fac8ee578a146b28c12b94fee663c",
      "LastModified" : "2013-10-18T17:29:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/CheckCPP11.cmake" : {
      "ObjectId" : "29adbb325b8428376baddb5d5c9664778f193ca2",
      "LastModified" : "2016-12-21T21:45:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Test some c++11 functionalities\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/CheckCoverage.cmake" : {
      "ObjectId" : "6f149d4fba8fcf8d8ecc9e7598c312d2e84d9620",
      "LastModified" : "2014-08-22T20:44:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Coverage brute-froce discovery\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/CheckDGtalDependencies.cmake" : {
      "ObjectId" : "2cf0902a86c739c8993c1a6f21593bf87e91e176",
      "LastModified" : "2017-11-11T10:06:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Check Mandatory Dependencies\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Looking for boost\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# SYSTEM to avoid warnings from boost.\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Looking for zlib\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Check some CPP11 features in the compiler\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# C++11...\n",
        "Line" : 43,
        "CharPositionInLine" : 33
      },
      "6" : {
        "Text" : "#...is required...\n",
        "Line" : 44,
        "CharPositionInLine" : 42
      },
      "7" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Fixing Catch issue for C++11 and old GCC\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# require at least gcc 4.7\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Setting librt dependency on Linux\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/CheckDGtalOptionalDependencies.cmake" : {
      "ObjectId" : "f342a588f9992c5529160f957f9b0738048f2007",
      "LastModified" : "2018-07-28T18:22:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Check Optional Dependencies\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Global options\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#----------------------------------\n\n# Removing -frounding-math compile flag for clang\n\n#----------------------------------\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---------------------------------\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Look for GMP (The GNU Multiple Precision Arithmetic Library)\n\n# (They are not compulsory).\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Look for GraphicsMagic\n\n# (They are not compulsory).\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Look for ITK\n\n# (They are not compulsory).\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## We test if ITK build accepts cpp11 compilers\n",
        "Line" : 214,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# -------------------------------------------------------------------------\n\n# This test is for instance used for ITK v3.x. ITK forces a limited\n\n# template depth. We remove this option.\n\n# --------------------------------------------------------------------------\n",
        "Line" : 228,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Look for Cairo (2D graphics library)\n\n# (They are not compulsory).\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 246,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Look for HDF5 (data model and file format for storing and managing data)\n\n# (They are not compulsory).\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Look for Qt (needed by libqglviewer visualization).\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Look for QGLViewer for 3D display.\n\n# (They are not compulsory).\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Look for OpenMP\n\n# (They are not compulsory).\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Look for Eigen3\n\n# (They are not compulsory).\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Look for CGAL\n\n# (They are not compulsory).\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 406,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Making sure that CGAL got the Eigen3 flag\n",
        "Line" : 425,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Look for Patate\n\n# http://patate.gforge.inria.fr/html/index.html\n\n# (they Are not compulsory).\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 431,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Look for Google Benchmark\n\n# (They are not compulsory).\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 456,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Look for FFTW3.\n\n# (They are not compulsory).\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 474,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "cmake/Common.cmake" : {
      "ObjectId" : "bf25e6be4d736904ef3ab43d548479fe02517b1b",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# -- Messages\n\n#------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Offer the user the choice of overriding the installation directories\n\n#------------------------------------------------------------------------------\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Make relative paths absolute (needed later on)\n\n#------------------------------------------------------------------------------\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Visual Studio : to distinguish between debug and release lib\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Doxygen targets\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# uninstall target\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Parsing cmake options\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Benchmark target\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Some directories and files should also be cleaned when invoking 'make clean'\n\n#------------------------------------------------------------------------------\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Configuration of the Config.h\n\n#------------------------------------------------------------------------------\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Building in the source tree is forbidden\n\n#------------------------------------------------------------------------------\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# Debug specific options\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "cmake/CpackCtest.cmake" : {
      "ObjectId" : "1e8eb46f2ca22dfb115aa07ad023d9f0d119bd06",
      "LastModified" : "2015-08-19T13:43:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# CPack Configurations\n\n#------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for other generator set specific backend information\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##SET(CPACK_STRIP_FILES \"bin/main\") ??\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# -----------------------------------------------------------------------------\n\n# CTest/Debug options\n\n# -----------------------------------------------------------------------------\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/DGtalConfigGenerator.cmake" : {
      "ObjectId" : "732dc8b41af9b803f8a6a62f437a47435af3ef03",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Export the package for use from the build-tree\n\n# (this registers the build-tree with a global CMake-registry)\n\n# export(PACKAGE DGtal)\n\n# Not working on cmake 2.6, I remove this option but keep the codeline (DC)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create a DGtalConfig.cmake file for the use from the build tree\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Copy also the cpp11_check.cpp for the build tree.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Install the export set for use with the install-tree\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Create a DGtalConfig.cmake file for the use from the install tree\n\n# and install it\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindBenchmark.cmake" : {
      "ObjectId" : "51b3f6a1e5424a64c5a6f85b5882d65877d94afd",
      "LastModified" : "2014-04-02T20:46:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the Google Benchmark Library and headers.\n\n#  BENCHMARK_FOUND - system has BENCHMARK lib\n\n#  BENCHMARK_INCLUDE_DIR - the BENCHMARK include directory\n\n#  BENCHMARK_LIBRARIES - Libraries needed to use BENCHMARK\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2014, David Coeurjolly <david.coeurjolly@liris.cnrs.fr>\n\n#\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/FindCOIN3D.cmake" : {
      "ObjectId" : "602050d9ab18f2e781aad4d0f607425bc6389619",
      "LastModified" : "2014-04-02T20:46:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find Coin3D\n\n# Once done this will define\n\n#\n\n# COIN3D_FOUND        - system has Coin3D - Open Inventor\n\n# COIN3D_INCLUDE_DIR  - where the Inventor include directory can be found\n\n# COIN3D_LIBRARY      - Link this to use Coin3D\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set COIN3D_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindCairo.cmake" : {
      "ObjectId" : "7098d451c22b07e552f253e0561557a23b50362b",
      "LastModified" : "2014-04-02T20:46:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate cairo\n\n# This module defines\n\n# CAIRO_INCLUDE_DIRS, where to find the headers\n\n# CAIRO_LIBRAIRIES cairo libraires\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MT\n",
        "Line" : 15,
        "CharPositionInLine" : 23
      },
      "2" : {
        "Text" : "#brew, manual\n",
        "Line" : 16,
        "CharPositionInLine" : 29
      },
      "3" : {
        "Text" : "# Fink\n",
        "Line" : 17,
        "CharPositionInLine" : 16
      },
      "4" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 18,
        "CharPositionInLine" : 23
      },
      "5" : {
        "Text" : "# DarwinPorts # MT\n",
        "Line" : 19,
        "CharPositionInLine" : 29
      },
      "6" : {
        "Text" : "# Blastwave\n",
        "Line" : 20,
        "CharPositionInLine" : 21
      },
      "CommentCount" : 7
    },
    "cmake/FindDoxygen.cmake" : {
      "ObjectId" : "fdd3a9276c295d75ab69daaa7c210700148ed388",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nFindDoxygen\n-----------\n\nDoxygen is a documentation generation tool (see http://www.doxygen.org).\nThis module looks for Doxygen and some optional tools it supports. These\ntools are enabled as components in the :command:`find_package` command:\n\n``dot``\n  `Graphviz <http://graphviz.org>`_ ``dot`` utility used to render various\n  graphs.\n``mscgen``\n  `Message Chart Generator <http://www.mcternan.me.uk/mscgen/>`_ utility used\n  by Doxygen's ``\\msc`` and ``\\mscfile`` commands.\n``dia``\n  `Dia <https://wiki.gnome.org/Apps/Dia>`_ the diagram editor used by Doxygen's\n  ``\\diafile`` command.\n\nExamples:\n\n.. code-block:: cmake\n\n  # Require dot, treat the other components as optional\n  find_package(Doxygen\n               REQUIRED dot\n               OPTIONAL_COMPONENTS mscgen dia)\n\nThe following variables are defined by this module:\n\n.. variable:: DOXYGEN_FOUND\n\n  True if the ``doxygen`` executable was found.\n\n.. variable:: DOXYGEN_VERSION\n\n  The version reported by ``doxygen --version``.\n\nThe module defines ``IMPORTED`` targets for Doxygen and each component found.\nThese can be used as part of custom commands, etc. and should be preferred over\nold-style (and now deprecated) variables like ``DOXYGEN_EXECUTABLE``. The\nfollowing import targets are defined if their corresponding executable could be\nfound (the component import targets will only be defined if that component was\nrequested):\n\n::\n\n  Doxygen::doxygen\n  Doxygen::dot\n  Doxygen::mscgen\n  Doxygen::dia\n\n\nFunctions\n^^^^^^^^^\n\n.. command:: doxygen_add_docs\n\n  This function is intended as a convenience for adding a target for generating\n  documentation with Doxygen. It aims to provide sensible defaults so that\n  projects can generally just provide the input files and directories and that\n  will be sufficient to give sensible results. The function supports the\n  ability to customize the Doxygen configuration used to build the\n  documentation.\n\n  ::\n\n    doxygen_add_docs(targetName\n        [filesOrDirs...]\n        [ALL]\n        [WORKING_DIRECTORY dir]\n        [COMMENT comment])\n\n  The function constructs a ``Doxyfile`` and defines a custom target that runs\n  Doxygen on that generated file. The listed files and directories are used as\n  the ``INPUT`` of the generated ``Doxyfile`` and they can contain wildcards.\n  Any files that are listed explicitly will also be added as ``SOURCES`` of the\n  custom target so they will show up in an IDE project's source list.\n\n  So that relative input paths work as expected, by default the working\n  directory of the Doxygen command will be the current source directory (i.e.\n  :variable:`CMAKE_CURRENT_SOURCE_DIR`). This can be overridden with the\n  ``WORKING_DIRECTORY`` option to change the directory used as the relative\n  base point. Note also that Doxygen's default behavior is to strip the working\n  directory from relative paths in the generated documentation (see the\n  ``STRIP_FROM_PATH`` `Doxygen config option\n  <http://www.doxygen.org/manual/config.html>`_ for details).\n\n  If provided, the optional ``comment`` will be passed as the ``COMMENT`` for\n  the :command:`add_custom_target` command used to create the custom target\n  internally.\n\n  If ALL is set, the target will be added to the default build target.\n\n  The contents of the generated ``Doxyfile`` can be customized by setting CMake\n  variables before calling ``doxygen_add_docs()``. Any variable with a name of\n  the form ``DOXYGEN_<tag>`` will have its value substituted for the\n  corresponding ``<tag>`` configuration option in the ``Doxyfile``. See the\n  `Doxygen documentation <http://www.doxygen.org/manual/config.html>`_ for the\n  full list of supported configuration options.\n\n  Some of Doxygen's defaults are overridden to provide more appropriate\n  behavior for a CMake project. Each of the following will be explicitly set\n  unless the variable already has a value before ``doxygen_add_docs()`` is\n  called (with some exceptions noted):\n\n  .. variable:: DOXYGEN_HAVE_DOT\n\n    Set to ``YES`` if the ``dot`` component was requested and it was found,\n    ``NO`` otherwise. Any existing value of ``DOXYGEN_HAVE_DOT`` is ignored.\n\n  .. variable:: DOXYGEN_DOT_MULTI_TARGETS\n\n    Set to ``YES`` by this module (note that this requires a ``dot`` version\n    newer than 1.8.10). This option is only meaningful if ``DOXYGEN_HAVE_DOT``\n    is also set to ``YES``.\n\n  .. variable:: DOXYGEN_GENERATE_LATEX\n\n    Set to ``NO`` by this module.\n\n  .. variable:: DOXYGEN_WARN_FORMAT\n\n    For Visual Studio based generators, this is set to the form recognized by\n    the Visual Studio IDE: ``$file($line) : $text``. For all other generators,\n    Doxygen's default value is not overridden.\n\n  .. variable:: DOXYGEN_PROJECT_NAME\n\n    Populated with the name of the current project (i.e.\n    :variable:`PROJECT_NAME`).\n\n  .. variable:: DOXYGEN_PROJECT_NUMBER\n\n    Populated with the version of the current project (i.e.\n    :variable:`PROJECT_VERSION`).\n\n  .. variable:: DOXYGEN_PROJECT_BRIEF\n\n    Populated with the description of the current project (i.e.\n    :variable:`PROJECT_DESCRIPTION`).\n\n  .. variable:: DOXYGEN_INPUT\n\n    Projects should not set this variable. It will be populated with the set of\n    files and directories passed to ``doxygen_add_docs()``, thereby providing\n    consistent behavior with the other built-in commands like\n    :command:`add_executable`, :command:`add_library` and\n    :command:`add_custom_target`. If a variable named ``DOXYGEN_INPUT`` is set\n    by the project, it will be ignored and a warning will be issued.\n\n  .. variable:: DOXYGEN_RECURSIVE\n\n    Set to ``YES`` by this module.\n\n  .. variable:: DOXYGEN_EXCLUDE_PATTERNS\n\n    If the set of inputs includes directories, this variable will specify\n    patterns used to exclude files from them. The following patterns are added\n    by ``doxygen_add_docs()`` to ensure CMake-specific files and directories\n    are not included in the input. If the project sets\n    ``DOXYGEN_EXCLUDE_PATTERNS``, those contents are merged with these\n    additional patterns rather than replacing them:\n\n    ::\n\n      */.git/*\n      */.svn/*\n      */.hg/*\n      */CMakeFiles/*\n      */_CPack_Packages/*\n      DartConfiguration.tcl\n      CMakeLists.txt\n      CMakeCache.txt\n\n  .. variable:: DOXYGEN_OUTPUT_DIRECTORY\n\n    Set to :variable:`CMAKE_CURRENT_BINARY_DIR` by this module. Note that if\n    the project provides its own value for this and it is a relative path, it\n    will be converted to an absolute path relative to the current binary\n    directory. This is necessary because doxygen will normally be run from a\n    directory within the source tree so that relative source paths work as\n    expected. If this directory does not exist, it will be recursively created\n    prior to executing the doxygen commands.\n\nTo change any of these defaults or override any other Doxygen config option,\nset relevant variables before calling ``doxygen_add_docs()``. For example:\n\n  .. code-block:: cmake\n\n    set(DOXYGEN_GENERATE_HTML NO)\n    set(DOXYGEN_GENERATE_MAN YES)\n\n    doxygen_add_docs(\n        doxygen\n        ${PROJECT_SOURCE_DIR}\n        COMMENT \"Generate man pages\"\n    )\n\nA number of Doxygen config options accept lists of values, but Doxygen requires\nthem to be separated by whitespace. CMake variables hold lists as a string with\nitems separated by semi-colons, so a conversion needs to be performed. The\n``doxygen_add_docs()`` command specifically checks the following Doxygen config\noptions and will convert their associated CMake variable's contents into the\nrequired form if set.\n\n::\n\n  ABBREVIATE_BRIEF\n  ALIASES\n  CITE_BIB_FILES\n  DIAFILE_DIRS\n  DOTFILE_DIRS\n  DOT_FONTPATH\n  ENABLED_SECTIONS\n  EXAMPLE_PATH\n  EXAMPLE_PATTERNS\n  EXCLUDE\n  EXCLUDE_PATTERNS\n  EXCLUDE_SYMBOLS\n  EXPAND_AS_DEFINED\n  EXTENSION_MAPPING\n  EXTRA_PACKAGES\n  EXTRA_SEARCH_MAPPINGS\n  FILE_PATTERNS\n  FILTER_PATTERNS\n  FILTER_SOURCE_PATTERNS\n  HTML_EXTRA_FILES\n  HTML_EXTRA_STYLESHEET\n  IGNORE_PREFIX\n  IMAGE_PATH\n  INCLUDE_FILE_PATTERNS\n  INCLUDE_PATH\n  INPUT\n  LATEX_EXTRA_FILES\n  LATEX_EXTRA_STYLESHEET\n  MATHJAX_EXTENSIONS\n  MSCFILE_DIRS\n  PLANTUML_INCLUDE_PATH\n  PREDEFINED\n  QHP_CUST_FILTER_ATTRS\n  QHP_SECT_FILTER_ATTRS\n  STRIP_FROM_INC_PATH\n  STRIP_FROM_PATH\n  TAGFILES\n  TCL_SUBST\n\nThe following single value Doxygen options will be quoted automatically\nif they contain at least one space:\n\n::\n\n  CHM_FILE\n  DIA_PATH\n  DOCBOOK_OUTPUT\n  DOCSET_FEEDNAME\n  DOCSET_PUBLISHER_NAME\n  DOT_FONTNAME\n  DOT_PATH\n  EXTERNAL_SEARCH_ID\n  FILE_VERSION_FILTER\n  GENERATE_TAGFILE\n  HHC_LOCATION\n  HTML_FOOTER\n  HTML_HEADER\n  HTML_OUTPUT\n  HTML_STYLESHEET\n  INPUT_FILTER\n  LATEX_FOOTER\n  LATEX_HEADER\n  LATEX_OUTPUT\n  LAYOUT_FILE\n  MAN_OUTPUT\n  MAN_SUBDIR\n  MATHJAX_CODEFILE\n  MSCGEN_PATH\n  OUTPUT_DIRECTORY\n  PERL_PATH\n  PLANTUML_JAR_PATH\n  PROJECT_BRIEF\n  PROJECT_LOGO\n  PROJECT_NAME\n  QCH_FILE\n  QHG_LOCATION\n  QHP_CUST_FILTER_NAME\n  QHP_VIRTUAL_FOLDER\n  RTF_EXTENSIONS_FILE\n  RTF_OUTPUT\n  RTF_STYLESHEET_FILE\n  SEARCHDATA_FILE\n  USE_MDFILE_AS_MAINPAGE\n  WARN_FORMAT\n  WARN_LOGFILE\n  XML_OUTPUT\n\nThere are situations where it may be undesirable for a particular config option\nto be automatically quoted by ``doxygen_add_docs()``, such as ``ALIASES`` which\nmay need to include its own embedded quoting.  The ``DOXYGEN_VERBATIM_VARS``\nvariable can be used to specify a list of Doxygen variables (including the\nleading ``DOXYGEN_`` prefix) which should not be quoted.  The project is then\nresponsible for ensuring that those variables' values make sense when placed\ndirectly in the Doxygen input file.  In the case of list variables, list items\nare still separated by spaces, it is only the automatic quoting that is\nskipped.  For example, the following allows ``doxygen_add_docs()`` to apply\nquoting to ``DOXYGEN_PROJECT_BRIEF``, but not each item in the\n``DOXYGEN_ALIASES`` list (:ref:`bracket syntax <Bracket Argument>` can also\nbe used to make working with embedded quotes easier):\n\n.. code-block:: cmake\n\n  set(DOXYGEN_PROJECT_BRIEF \"String with spaces\")\n  set(DOXYGEN_ALIASES\n      [[somealias=\"@some_command param\"]]\n      \"anotherAlias=@foobar\"\n  )\n  set(DOXYGEN_VERBATIM_VARS DOXYGEN_ALIASES)\n\nThe resultant ``Doxyfile`` will contain the following lines:\n\n.. code-block:: text\n\n  PROJECT_BRIEF = \"String with spaces\"\n  ALIASES       = somealias=\"@some_command param\" anotherAlias=@foobar\n\n\nDeprecated Result Variables\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nFor compatibility with previous versions of CMake, the following variables\nare also defined but they are deprecated and should no longer be used:\n\n.. variable:: DOXYGEN_EXECUTABLE\n\n  The path to the ``doxygen`` command. If projects need to refer to the\n  ``doxygen`` executable directly, they should use the ``Doxygen::doxygen``\n  import target instead.\n\n.. variable:: DOXYGEN_DOT_FOUND\n\n  True if the ``dot`` executable was found.\n\n.. variable:: DOXYGEN_DOT_EXECUTABLE\n\n  The path to the ``dot`` command. If projects need to refer to the ``dot``\n  executable directly, they should use the ``Doxygen::dot`` import target\n  instead.\n\n.. variable:: DOXYGEN_DOT_PATH\n\n  The path to the directory containing the ``dot`` executable as reported in\n  ``DOXYGEN_DOT_EXECUTABLE``. The path may have forward slashes even on Windows\n  and is not suitable for direct substitution into a ``Doxyfile.in`` template.\n  If you need this value, get the :prop_tgt:`IMPORTED_LOCATION` property of the\n  ``Doxygen::dot`` target and use :command:`get_filename_component` to extract\n  the directory part of that path. You may also want to consider using\n  :command:`file(TO_NATIVE_PATH)` to prepare the path for a Doxygen\n  configuration file.\n\n\nDeprecated Hint Variables\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. variable:: DOXYGEN_SKIP_DOT\n\n  This variable has no effect for the component form of ``find_package``.\n  In backward compatibility mode (i.e. without components list) it prevents\n  the finder module from searching for Graphviz's ``dot`` utility.\n\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# if IN_LIST\n",
        "Line" : 374,
        "CharPositionInLine" : 30
      },
      "3" : {
        "Text" : "# For backwards compatibility support\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ===== Rationale for OS X AppBundle mods below =====\n\n#  With the OS X GUI version, Doxygen likes to be installed to /Applications\n\n#  and it contains the doxygen executable in the bundle. In the versions I've\n\n#  seen, it is located in Resources, but in general, more often binaries are\n\n#  located in MacOS.\n\n#\n\n#  NOTE: The official Doxygen.app distributed for OS X uses non-standard\n\n#  conventions. Instead of the command-line \"doxygen\" tool being placed in\n\n#  Doxygen.app/Contents/MacOS, \"Doxywizard\" is placed there instead and\n\n#  \"doxygen\" is placed in Contents/Resources.  This is most likely done\n\n#  so that something happens when people double-click on the Doxygen.app\n\n#  package. Unfortunately, CMake gets confused by this as when it sees the\n\n#  bundle it uses \"Doxywizard\" as the executable to use instead of\n\n#  \"doxygen\". Therefore to work-around this issue we temporarily disable\n\n#  the app-bundle feature, just for this CMake module:\n\n#\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Save the old setting\n",
        "Line" : 398,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Disable the App-bundle detection feature\n",
        "Line" : 400,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# FYI:\n\n# In older versions of OS X Doxygen, dot was included with the Doxygen bundle,\n\n# but newer versions require you to download Graphviz.app which contains \"dot\"\n\n# or use something like homebrew.\n\n# ============== End OSX stuff ================\n",
        "Line" : 403,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\n\n# Find Doxygen...\n\n#\n",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Create an imported target for Doxygen\n",
        "Line" : 437,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "#\n\n# Find Diagram Editor...\n\n#\n",
        "Line" : 447,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# The Doxyfile wants the path to the utility, not the entire path\n\n# including file name\n",
        "Line" : 463,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Create an imported target for component\n",
        "Line" : 472,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "#\n\n# Find Graphviz Dot...\n\n#\n",
        "Line" : 484,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# The Doxyfile wants the path to the utility, not the entire path\n\n# including file name\n",
        "Line" : 519,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Create an imported target for component\n",
        "Line" : 528,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "#\n\n# Find Message Sequence Chart...\n\n#\n",
        "Line" : 540,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# The Doxyfile wants the path to the utility, not the entire path\n\n# including file name\n",
        "Line" : 556,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# Create an imported target for component\n",
        "Line" : 565,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# Make sure `doxygen` is one of the components to find\n",
        "Line" : 577,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Search at least for `doxygen` executable\n",
        "Line" : 580,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Preserve backward compatibility:\n\n# search for `dot` also if `DOXYGEN_SKIP_DOT` is not explicitly disable this.\n",
        "Line" : 582,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "#\n\n# Find all requested components of Doxygen...\n\n#\n",
        "Line" : 592,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Verify find results\n",
        "Line" : 618,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\n\n# Backwards compatibility...\n\n#\n",
        "Line" : 627,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Restore the old app-bundle setting\n",
        "Line" : 631,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# Maintain the _FOUND variables as \"YES\" or \"NO\" for backwards\n\n# compatibility. This allows people to substitute them directly into\n\n# Doxyfile with configure_file().\n",
        "Line" : 635,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# For backwards compatibility support for even older CMake versions\n",
        "Line" : 650,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# No need to keep any backward compatibility for `DOXYGEN_MSCGEN_XXX`\n\n# and `DOXYGEN_DIA_XXX` since they were not supported before component\n\n# support was added\n",
        "Line" : 654,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "#\n\n# Allow full control of Doxygen from CMakeLists.txt\n\n#\n",
        "Line" : 660,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Prepare a template Doxyfile and Doxygen's default values CMake file\n",
        "Line" : 664,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# If doxygen was found, use it to generate a minimal default Doxyfile.\n\n# We will delete this file after we have finished using it below to\n\n# generate the other files that doxygen_add_docs() will use.\n",
        "Line" : 666,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# Write a do-not-edit header to files we are going to generate...\n",
        "Line" : 683,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# We only need one copy of these across the whole build, since their\n\n# content is only dependent on the version of Doxygen being used. Therefore\n\n# we always put them at the top of the build tree so that they are in a\n\n# predictable location.\n",
        "Line" : 692,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Get strings containing a configuration key from the template Doxyfile\n\n# we obtained from this version of Doxygen. Because some options are split\n\n# across multiple lines by ending lines with backslashes, we cannot just\n\n# use file(STRINGS...) with a REGEX. Instead, read lines without a REGEX\n\n# so that file(STRINGS...) handles the trailing backslash as a line\n\n# continuation. It stores multi-lines as lists, so we then have to replace\n\n# the \";\" list separator with backslashed newlines again so that we get the\n\n# original content stored back as the value part.\n",
        "Line" : 702,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# Build up a Doxyfile that provides @configVar@ substitutions for each\n\n# Doxygen config option as well as a separate CMake script which provides\n\n# the default value for each of those options if the project doesn't supply\n\n# them. Each config option will support substitution of a CMake variable\n\n# of the same name except with DOXYGEN_ prepended.\n",
        "Line" : 721,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# Ok, this is a config key with a value\n",
        "Line" : 728,
        "CharPositionInLine" : 12
      },
      "37" : {
        "Text" : "# Remove the backslashes we had to preserve to handle newlines\n",
        "Line" : 732,
        "CharPositionInLine" : 16
      },
      "38" : {
        "Text" : "# Ok, this is a config key with empty default value\n",
        "Line" : 739,
        "CharPositionInLine" : 12
      },
      "39" : {
        "Text" : "# Ok, dumped defaults are not needed anymore...\n",
        "Line" : 753,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# Quote a value of the given variable if:\n\n# - VARIABLE parameter was really given\n\n# - the variable it names is defined and is not present in the list\n\n#   specified by DOXYGEN_VERBATIM_VARS (if set)\n\n# - the value of the named variable isn't already quoted\n\n# - the value has spaces\n",
        "Line" : 764,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# Have to test if list items should be treated as verbatim here\n\n# because we lose the variable name when we pass just one list item\n\n# to doxygen_quote_value() below\n",
        "Line" : 783,
        "CharPositionInLine" : 8
      },
      "42" : {
        "Text" : "# If not already defined, set some relevant defaults based on the\n\n# assumption that the documentation is for the whole project. Details\n\n# specified in the project() command will be used to populate a number of\n\n# these defaults.\n",
        "Line" : 831,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# The PROJECT_NAME tag is a single word (or a sequence of words\n\n# surrounded by double-quotes, unless you are using Doxywizard) that\n\n# should identify the project for which the documentation is generated.\n\n# This name is used in the title of most generated pages and in a few\n\n# other places. The default value is: My Project.\n",
        "Line" : 837,
        "CharPositionInLine" : 8
      },
      "44" : {
        "Text" : "# The PROJECT_NUMBER tag can be used to enter a project or revision\n\n# number. This could be handy for archiving the generated documentation\n\n# or if some version control system is used.\n",
        "Line" : 846,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : "# Using the PROJECT_BRIEF tag one can provide an optional one line\n\n# description for a project that appears at the top of each page and\n\n# should give viewer a quick idea about the purpose of the project.\n\n# Keep the description short.\n",
        "Line" : 853,
        "CharPositionInLine" : 8
      },
      "46" : {
        "Text" : "# The RECURSIVE tag can be used to specify whether or not\n\n# subdirectories should be searched for input files as well. CMake\n\n# projects generally evolve to span multiple directories, so it makes\n\n# more sense for this to be on by default. Doxygen's default value\n\n# has this setting turned off, so we override it.\n",
        "Line" : 861,
        "CharPositionInLine" : 8
      },
      "47" : {
        "Text" : "# The OUTPUT_DIRECTORY tag is used to specify the (relative or\n\n# absolute) path into which the generated documentation will be\n\n# written. If a relative path is used, Doxygen will interpret it as\n\n# being relative to the location where doxygen was started, but we need\n\n# to run Doxygen in the source tree so that relative input paths work\n\n# intuitively. Therefore, we ensure that the output directory is always\n\n# an absolute path and if the project provided a relative path, we\n\n# treat it as relative to the current BINARY directory so that output\n\n# is not generated inside the source tree.\n",
        "Line" : 870,
        "CharPositionInLine" : 8
      },
      "48" : {
        "Text" : "# If you set the HAVE_DOT tag to YES then doxygen will assume the dot\n\n# tool is available from the path. This tool is part of Graphviz (see:\n\n# http://www.graphviz.org/), a graph visualization toolkit from AT&T\n\n# and Lucent Bell Labs. The other options in this section have no\n\n# effect if this option is set to NO.\n\n# Doxygen's default value is: NO.\n",
        "Line" : 888,
        "CharPositionInLine" : 8
      },
      "49" : {
        "Text" : "# Set the DOT_MULTI_TARGETS tag to YES to allow dot to generate\n\n# multiple output files in one run (i.e. multiple -o and -T options on\n\n# the command line). This makes dot run faster, but since only newer\n\n# versions of dot (>1.8.10) support this, Doxygen disables this feature\n\n# by default.\n\n# This tag requires that the tag HAVE_DOT is set to YES.\n",
        "Line" : 902,
        "CharPositionInLine" : 8
      },
      "50" : {
        "Text" : "# If the GENERATE_LATEX tag is set to YES, doxygen will generate LaTeX\n\n# output. We only want the HTML output enabled by default, so we turn\n\n# this off if the project hasn't specified it.\n",
        "Line" : 912,
        "CharPositionInLine" : 8
      },
      "51" : {
        "Text" : "# The WARN_FORMAT tag determines the format of the warning messages\n\n# that doxygen can produce. The string should contain the $file,\n\n# $line and $text tags, which will be replaced by the file and line\n\n# number from which the warning originated and the warning text.\n\n# Optionally, the format may contain $version, which will be\n\n# replaced by the version of the file (if it could be obtained via\n\n# FILE_VERSION_FILTER).\n\n# Doxygen's default value is: $file:$line: $text\n",
        "Line" : 920,
        "CharPositionInLine" : 12
      },
      "52" : {
        "Text" : "# The WARN_LOGFILE tag can be used to specify a file to which warning and error\n\n# messages should be written. If left blank the output is written to standard\n\n# error (stderr).\n",
        "Line" : 933,
        "CharPositionInLine" : 8
      },
      "53" : {
        "Text" : "# Any files from the INPUT that match any of the EXCLUDE_PATTERNS will be\n\n# excluded from the set of input files. We provide some additional patterns\n\n# to prevent commonly unwanted things from CMake builds being pulled in.\n\n#\n\n# Note that the wildcards are matched against the file with absolute path,\n\n# so to exclude all test directories for example use the pattern */test/*\n",
        "Line" : 942,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# Now bring in Doxgen's defaults for those things the project has not\n\n# already set and we have not provided above\n",
        "Line" : 961,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# Cleanup built HTMLs on \"make clean\"\n\n# TODO Any other dirs?\n",
        "Line" : 965,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# Build up a list of files we can identify from the inputs so we can list\n\n# them as SOURCES in the custom target (makes them display in IDEs). We\n\n# must do this before we transform the various DOXYGEN_... variables below\n\n# because we need to process DOXYGEN_INPUT as a list first.\n",
        "Line" : 978,
        "CharPositionInLine" : 4
      },
      "57" : {
        "Text" : "# Transform known list type options into space separated strings.\n",
        "Line" : 996,
        "CharPositionInLine" : 4
      },
      "58" : {
        "Text" : "# Transform known single value variables which may contain spaces, such as\n\n# paths or description strings.\n",
        "Line" : 1041,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "# Store the unmodified value of DOXYGEN_OUTPUT_DIRECTORY prior to invoking\n\n# doxygen_quote_value() below. This will mutate the string specifically for\n\n# consumption by Doxygen's config file, which we do not want when we use it\n\n# later in the custom target's commands.\n",
        "Line" : 1088,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "# Prepare doxygen configuration file\n",
        "Line" : 1098,
        "CharPositionInLine" : 4
      },
      "61" : {
        "Text" : "# Add the target\n",
        "Line" : 1108,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 62
    },
    "cmake/FindEigen3.cmake" : {
      "ObjectId" : "9c546a05d859b18c49554d7ee7221cc486b7760e",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/FindFFTW3.cmake" : {
      "ObjectId" : "4cbb184a4f3e0cb5816e619d6132a9d138d91879",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the FFTW3 librairies\n\n#  FFTW3_FOUND        - True if FFTW3 is found for at least one precision.\n\n#  FFTW3_FLOAT_FOUND  - True if FFTW3 is found for float precision.\n\n#  FFTW3_DOUBLE_FOUND - True if FFTW3 is found for double precicion.\n\n#  FFTW3_LONG_FOUND   - True if FFTW3 is found for long double precision.\n\n#  FFTW3_INCLUDE_DIR  - The FFTW3 include directory.\n\n#  FFTW3_LIBRARIES    - FFTW3 libraries.\n\n#  FFTW3_DEP_LIBRARIES - Libraries needed by FFTW3.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Searching for all supported FFT precisions.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Gathering FFTW3 libraries\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Telling which FFT precisions are found.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Adding threaded version of FFTW3\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/FindGMP.cmake" : {
      "ObjectId" : "e7cb8b3d23b719d12ff1cbc776ff341035ef5d0f",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the GMP librairies\n\n#  GMP_FOUND - system has GMP lib\n\n#  GMP_INCLUDE_DIR - the GMP include directory\n\n#  GMP_LIBRARIES - Libraries needed to use GMP\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Laurent Montel, <montel@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/FindMagick.cmake" : {
      "ObjectId" : "53766687f0761c7312a7a94d3df849884598ba39",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-*-cmake-*-\n\n#\n\n# Test for GraphicsMagick libraries, unlike CMake's FindGraphicsMagick.cmake which\n\n# tests for GraphicsMagick's binary utilities\n\n#\n\n# Once loaded this will define\n\n#  MAGICK_FOUND        - system has GraphicsMagick\n\n#  MAGICK_INCLUDE_DIR  - include directory for GraphicsMagick\n\n#  MAGICK_LIBRARY_DIR  - library directory for GraphicsMagick\n\n#  MAGICK_LIBRARIES    - libraries you need to link to\n\n#\n\n#  MAGICK++_FOUND        - system has GraphicsMagick\n\n#  MAGICK++_INCLUDE_DIR  - include directory for GraphicsMagick\n\n#  MAGICK++_LIBRARY_DIR  - library directory for GraphicsMagick\n\n#  MAGICK++_LIBRARIES    - libraries you need to link to\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# make FIND_PACKAGE friendly\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#####\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "1722d6aafbf072b08b96272e83d8cae4a1cefaa6",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#[=======================================================================[.rst:\nFindPackageHandleStandardArgs\n-----------------------------\n\nThis module provides a function intended to be used in :ref:`Find Modules`\nimplementing :command:`find_package(<PackageName>)` calls.  It handles the\n``REQUIRED``, ``QUIET`` and version-related arguments of ``find_package``.\nIt also sets the ``<PackageName>_FOUND`` variable.  The package is\nconsidered found if all variables listed contain valid results, e.g.\nvalid filepaths.\n\n.. command:: find_package_handle_standard_args\n\n  There are two signatures::\n\n    find_package_handle_standard_args(<PackageName>\n      (DEFAULT_MSG|<custom-failure-message>)\n      <required-var>...\n      )\n\n    find_package_handle_standard_args(<PackageName>\n      [FOUND_VAR <result-var>]\n      [REQUIRED_VARS <required-var>...]\n      [VERSION_VAR <version-var>]\n      [HANDLE_COMPONENTS]\n      [CONFIG_MODE]\n      [FAIL_MESSAGE <custom-failure-message>]\n      )\n\n  The ``<PackageName>_FOUND`` variable will be set to ``TRUE`` if all\n  the variables ``<required-var>...`` are valid and any optional\n  constraints are satisfied, and ``FALSE`` otherwise.  A success or\n  failure message may be displayed based on the results and on\n  whether the ``REQUIRED`` and/or ``QUIET`` option was given to\n  the :command:`find_package` call.\n\n  The options are:\n\n  ``(DEFAULT_MSG|<custom-failure-message>)``\n    In the simple signature this specifies the failure message.\n    Use ``DEFAULT_MSG`` to ask for a default message to be computed\n    (recommended).  Not valid in the full signature.\n\n  ``FOUND_VAR <result-var>``\n    Obsolete.  Specifies either ``<PackageName>_FOUND`` or\n    ``<PACKAGENAME>_FOUND`` as the result variable.  This exists only\n    for compatibility with older versions of CMake and is now ignored.\n    Result variables of both names are always set for compatibility.\n\n  ``REQUIRED_VARS <required-var>...``\n    Specify the variables which are required for this package.\n    These may be named in the generated failure message asking the\n    user to set the missing variable values.  Therefore these should\n    typically be cache entries such as ``FOO_LIBRARY`` and not output\n    variables like ``FOO_LIBRARIES``.\n\n  ``VERSION_VAR <version-var>``\n    Specify the name of a variable that holds the version of the package\n    that has been found.  This version will be checked against the\n    (potentially) specified required version given to the\n    :command:`find_package` call, including its ``EXACT`` option.\n    The default messages include information about the required\n    version and the version which has been actually found, both\n    if the version is ok or not.\n\n  ``HANDLE_COMPONENTS``\n    Enable handling of package components.  In this case, the command\n    will report which components have been found and which are missing,\n    and the ``<PackageName>_FOUND`` variable will be set to ``FALSE``\n    if any of the required components (i.e. not the ones listed after\n    the ``OPTIONAL_COMPONENTS`` option of :command:`find_package`) are\n    missing.\n\n  ``CONFIG_MODE``\n    Specify that the calling find module is a wrapper around a\n    call to ``find_package(<PackageName> NO_MODULE)``.  This implies\n    a ``VERSION_VAR`` value of ``<PackageName>_VERSION``.  The command\n    will automatically check whether the package configuration file\n    was found.\n\n  ``FAIL_MESSAGE <custom-failure-message>``\n    Specify a custom failure message instead of using the default\n    generated message.  Not recommended.\n\nExample for the simple signature:\n\n.. code-block:: cmake\n\n  find_package_handle_standard_args(LibXml2 DEFAULT_MSG\n    LIBXML2_LIBRARY LIBXML2_INCLUDE_DIR)\n\nThe ``LibXml2`` package is considered to be found if both\n``LIBXML2_LIBRARY`` and ``LIBXML2_INCLUDE_DIR`` are valid.\nThen also ``LibXml2_FOUND`` is set to ``TRUE``.  If it is not found\nand ``REQUIRED`` was used, it fails with a\n:command:`message(FATAL_ERROR)`, independent whether ``QUIET`` was\nused or not.  If it is found, success will be reported, including\nthe content of the first ``<required-var>``.  On repeated CMake runs,\nthe same message will not be printed again.\n\nExample for the full signature:\n\n.. code-block:: cmake\n\n  find_package_handle_standard_args(LibArchive\n    REQUIRED_VARS LibArchive_LIBRARY LibArchive_INCLUDE_DIR\n    VERSION_VAR LibArchive_VERSION)\n\nIn this case, the ``LibArchive`` package is considered to be found if\nboth ``LibArchive_LIBRARY`` and ``LibArchive_INCLUDE_DIR`` are valid.\nAlso the version of ``LibArchive`` will be checked by using the version\ncontained in ``LibArchive_VERSION``.  Since no ``FAIL_MESSAGE`` is given,\nthe default messages will be printed.\n\nAnother example for the full signature:\n\n.. code-block:: cmake\n\n  find_package(Automoc4 QUIET NO_MODULE HINTS /opt/automoc4)\n  find_package_handle_standard_args(Automoc4  CONFIG_MODE)\n\nIn this case, a ``FindAutmoc4.cmake`` module wraps a call to\n``find_package(Automoc4 NO_MODULE)`` and adds an additional search\ndirectory for ``automoc4``.  Then the call to\n``find_package_handle_standard_args`` produces a proper success/failure\nmessage.\n#]=======================================================================]",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# internal helper macro\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# internal helper macro to generate the failure message when used in CONFIG_MODE:\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# <PackageName>_CONFIG is set, but FOUND is false, this means that some other of the REQUIRED_VARS was not found:\n",
        "Line" : 148,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# If _CONSIDERED_CONFIGS is set, the config-file has been found, but no suitable version.\n\n# List them all in the error message:\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Simple case: No Config-file was found at all:\n",
        "Line" : 169,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Set up the arguments for `cmake_parse_arguments`.\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Check whether we are in 'simple' or 'extended' mode:\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# In config-mode, we rely on the variable <PackageName>_CONFIG, which is set by find_package()\n\n# when it successfully found the config-file, including version checking:\n",
        "Line" : 202,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# now that we collected all arguments, process them\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# collect all variables which were not found, so they can be printed, so the\n\n# user knows better what went wrong (#6375)\n",
        "Line" : 236,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# check if all passed variables are valid\n",
        "Line" : 240,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# component handling\n",
        "Line" : 258,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# version handling:\n",
        "Line" : 289,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# check with DEFINED here as the requested or found version may be \"0\"\n",
        "Line" : 293,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# exact version required\n",
        "Line" : 298,
        "CharPositionInLine" : 44
      },
      "17" : {
        "Text" : "# count the dots in the version string\n",
        "Line" : 299,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# add one dot because there is one dot more than there are components\n",
        "Line" : 301,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# Because of the C++ implementation of find_package() ${_NAME}_FIND_VERSION_COUNT\n\n# is at most 4 here. Therefore a simple lookup table is used.\n",
        "Line" : 304,
        "CharPositionInLine" : 10
      },
      "20" : {
        "Text" : "# minimum version specified:\n",
        "Line" : 334,
        "CharPositionInLine" : 17
      },
      "21" : {
        "Text" : "# if the package was not found, but a version was given, add that to the output:\n",
        "Line" : 345,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "# Check with DEFINED as the found version may be 0.\n",
        "Line" : 354,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# print the result:\n",
        "Line" : 367,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 24
    },
    "cmake/FindPackageMessage.cmake" : {
      "ObjectId" : "a0349d3db99a3b446c421d9bdc14142ab278e72f",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindPackageMessage\n\n# ------------------\n\n#\n\n#\n\n#\n\n# FIND_PACKAGE_MESSAGE(<name> \"message for user\" \"find result details\")\n\n#\n\n# This macro is intended to be used in FindXXX.cmake modules files.  It\n\n# will print a message once for each unique find result.  This is useful\n\n# for telling the user where a package was found.  The first argument\n\n# specifies the name (XXX) of the package.  The second argument\n\n# specifies the message to display.  The third argument lists details\n\n# about the find result so that if they change the message will be\n\n# displayed again.  The macro also obeys the QUIET argument to the\n\n# find_package command.\n\n#\n\n# Example:\n\n#\n\n# ::\n\n#\n\n#   if(X11_FOUND)\n\n#     FIND_PACKAGE_MESSAGE(X11 \"Found X11: ${X11_X11_LIB}\"\n\n#       \"[${X11_X11_LIB}][${X11_INCLUDE_DIR}]\")\n\n#   else()\n\n#    ...\n\n#   endif()\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2008-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Avoid printing a message repeatedly for the same find result.\n",
        "Line" : 43,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# The message has not yet been printed.\n",
        "Line" : 48,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Save the find details in the cache to avoid printing the same\n\n# message again.\n",
        "Line" : 51,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "cmake/FindPatate.cmake" : {
      "ObjectId" : "4c67b9d4da27ace0ca35e76bc143aede25ef443f",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Patate lib\n\n#\n\n# http://patate.gforge.inria.fr/html/index.html\n\n#\n\n# Once done this will define\n\n#\n\n#  PATATE_FOUND - system has patate lib with correct version\n\n#  PATATE_INCLUDE_DIR - the patate include directory\n\n#  PATATE_VERSION - patate version\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindQGLVIEWER.cmake" : {
      "ObjectId" : "b4f2a64d830e5b5ef09b7c52d18ff02b7258e0ce",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find QGLViewer\n\n# Once done this will define\n\n#\n\n#  QGLVIEWER_FOUND - system has QGLViewer\n\n#  QGLVIEWER_INCLUDE_DIR - the QGLViewer include directory\n\n#  QGLVIEWER_LIBRARIES - Link these to use QGLViewer\n\n#  QGLVIEWER_DEFINITIONS - Compiler switches required for using QGLViewer\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#MESSAGE(STATUS \"Found QGLViewer: ${QGLVIEWER_LIBRARIES}\")\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake/FindSOQT.cmake" : {
      "ObjectId" : "b4ff426e5b5967eafaf965f879dd0a304bab4670",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find SoQt\n\n# Once done this will define\n\n#\n\n# SOQT_FOUND        - system has SOQT - needs Coin3D - Open Inventor\n\n# SOQT_INCLUDE_DIR  - where the SoQt include directory can be found\n\n# SOQT_LIBRARY      - Link this to use SoQt\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set SOQT_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/GeneratorSpecific.cmake" : {
      "ObjectId" : "e1c5a58c053ffcf9c0f9b001a99278e4b566585f",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n#--- Headers for IDE Generators\n\n#\n\n# The following lines add fake targets to register the .h and .ih files in the\n\n# overall project.\n\n# For IDE generators (Xcode, ...), all H and IH will be recognized as project\n\n# headers and will thus be parsed and analyzed correctly (e.g. follow declaration\n\n#/implementation, ...)\n\n#\n\n#------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Install.cmake" : {
      "ObjectId" : "37be2e73d9dce8f70801c7b9fc46505887fce2da",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# DGtal Configuration file for the install target\n\n#------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#--- Headers installation\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-- specific install for Config.h.in\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/NeighborhoodTablesConfig.cmake" : {
      "ObjectId" : "454fdfa11b203361ed96a839fd5b2f1e2adba6f7",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# DGtal Configuration file for LookUpTables\n\n#------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TABLE_DIR is the variable that NeighborhoodTables.h.in read.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ------ Build Tree ------ #\n\n#--- Configuration of the src/topology/tables/NeighborhoodTables.h.in\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ------ Install Tree ------ #\n\n#--- Configuration of the src/topology/tables/NeighborhoodTables.h.in for the install tree. Save to tmp file.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#--- Install compressed tables and the header pointing to them ---#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#--- Install header pointing to tables. ---#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#--- Select all the tables and install ---#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/OSDependentSettings.cmake" : {
      "ObjectId" : "0ca51209c01fd1422f27326add15ee8d79ed1001",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# -- Environement variables\n\n#------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# -- Removing some strange warnings when compiling with VS Express\n\n#------------------------------------------------------------------------------\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Remove some MS Visual c++ flags\n\n#------------------------------------------------------------------------------\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# for GMP / MPIR (MT)\n\n#------------------------------------------------------------------------------\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Specific compiler options\n\n#------------------------------------------------------------------------------\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/TargetDistclean.cmake" : {
      "ObjectId" : "a3ba8ca15c947a171eb22ae5085ee34b2cd46066",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/TargetDoxygenDoc.cmake" : {
      "ObjectId" : "d15f3c7f90d3c2bab6351c52609980e0fa65a966",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# click+jump in Emacs and Visual Studio (for doxy.config) (jw)\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# we need latex for doxygen because of the formulas\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# use (configured) doxy.config from (out of place) BUILD tree:\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# use static hand-edited doxy.config from SOURCE tree:\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# using template doxy.config.in\n",
        "Line" : 38,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# failed completely...\n",
        "Line" : 45,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# use (configured) doxy.config.Board from (out of place) BUILD tree:\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# use static hand-edited doxy.config.Board from SOURCE tree:\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# using template doxy.config.Board.in\n",
        "Line" : 67,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# failed completely...\n",
        "Line" : 74,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "#  ADD_CUSTOM_TARGET(doc)\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# create a windows help .chm file using hhc.exe\n\n# HTMLHelp DLL must be in path!\n\n# fallback: use hhw.exe interactively\n",
        "Line" : 89,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# MESSAGE(SEND_ERROR \"DBG  HHP_FILE=${HHP_FILE}\")\n",
        "Line" : 97,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# install windows help?\n\n# determine useful name for output file\n\n# should be project and version unique to allow installing\n\n# multiple projects into one global directory\n",
        "Line" : 102,
        "CharPositionInLine" : 6
      },
      "14" : {
        "Text" : "# default\n",
        "Line" : 110,
        "CharPositionInLine" : 35
      },
      "15" : {
        "Text" : "# keep suffix\n",
        "Line" : 121,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "#MESSAGE(\"DBG ${PROJECT_BINARY_DIR}/Doc/html/index.chm \\n${OUT}\")\n\n# create target used by install and package commands\n",
        "Line" : 124,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# MESSAGE(SEND_ERROR \"HTML_HELP_COMPILER=${HTML_HELP_COMPILER}\")\n",
        "Line" : 134,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 18
    },
    "cmake/TargetDoxygenDox.cmake" : {
      "ObjectId" : "8c85e95eef8749eb3d8f0742dd3ef82299261b73",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#make dox target\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# click+jump in Emacs and Visual Studio (for doxy.config) (jw)\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# we need latex for doxygen because of the formulas\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# use (configured) doxy.config from (out of place) BUILD tree:\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# use static hand-edited doxy.config from SOURCE tree:\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# using template doxy.config.dox.in\n",
        "Line" : 41,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# failed completely...\n",
        "Line" : 48,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# create a windows help .chm file using hhc.exe\n\n# HTMLHelp DLL must be in path!\n\n# fallback: use hhw.exe interactively\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# MESSAGE(SEND_ERROR \"DBG  HHP_FILE=${HHP_FILE}\")\n",
        "Line" : 67,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# install windows help?\n\n# determine useful name for output file \n\n# should be project and version unique to allow installing \n\n# multiple projects into one global directory      \n",
        "Line" : 72,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# default\n",
        "Line" : 80,
        "CharPositionInLine" : 35
      },
      "11" : {
        "Text" : "# keep suffix\n",
        "Line" : 91,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "#MESSAGE(\"DBG ${PROJECT_BINARY_DIR}/Doc/html/index.chm \\n${OUT}\")\n\n# create target used by install and package commands \n",
        "Line" : 94,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# MESSAGE(SEND_ERROR \"HTML_HELP_COMPILER=${HTML_HELP_COMPILER}\")\n",
        "Line" : 104,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 14
    },
    "cmake/doxygen.cmake" : {
      "ObjectId" : "f10090e597a76c7807c00a0bc3d663ef674bdefa",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generate doc only if Doxygen is present.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Installation target\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/src/ITKcpp11Bug/CMakeLists.txt" : {
      "ObjectId" : "fea00fc0a6f67ec3864cbc23f036d367d687994a",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#David Coeurjolly - it03/2012\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "752570fdfa138f00b0a4e2012e1518c434d60b1b",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#CMakeLists associated to the examples subdir\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make sure the compiler can find include files.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make sure the compiler can find include files.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure the linker can find the Hello library once it is built.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ConfigExamples.h instanciation.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#------Examples subdirectories ------\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "examples/arithmetic/CMakeLists.txt" : {
      "ObjectId" : "db0dc209f9f1b8b5ed776e9d1970387153482ed9",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/base/CMakeLists.txt" : {
      "ObjectId" : "ff310decb961fd15ce3767bc18b8857df245984e",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/dec/CMakeLists.txt" : {
      "ObjectId" : "ed9490f3acfe0d16346d57e220f3c47476a34a6f",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/doc-examples/CMakeLists.txt" : {
      "ObjectId" : "edcd318b96c5a3b86571f060f63134fad2ae4069",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/geometry/CMakeLists.txt" : {
      "ObjectId" : "09066151c75d36a6c5b4a7b449025e2b791ffd27",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/geometry/curves/CMakeLists.txt" : {
      "ObjectId" : "3be328e98ea5ee72eff51bf6f2837d4ec413d0d9",
      "LastModified" : "2019-03-22T07:33:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### Test with QGLViewer\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/geometry/curves/estimation/CMakeLists.txt" : {
      "ObjectId" : "ff81402536d4160b21a5a9801444c9834ba8c54e",
      "LastModified" : "2019-03-22T07:33:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/geometry/surfaces/CMakeLists.txt" : {
      "ObjectId" : "b92720d9177790e50c2281a48e0cd116ce373710",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### with QGLViewer\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/geometry/tools/CMakeLists.txt" : {
      "ObjectId" : "d03fea54efeb5057d11a874c8df1d861ef22c327",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/geometry/tools/determinant/CMakeLists.txt" : {
      "ObjectId" : "52d748e65920c06233bc9d9efb409c4b23b11a72",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/geometry/volumes/CMakeLists.txt" : {
      "ObjectId" : "d3d75e56e034e7b7fcfab769d83abe097d860882",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/geometry/volumes/distance/CMakeLists.txt" : {
      "ObjectId" : "a1bfcf664ee5d5613f683f7a9c23bcc51c705819",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/graph/CMakeLists.txt" : {
      "ObjectId" : "004a4e823429ed52d78b17da200780740c4be4d8",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/images/CMakeLists.txt" : {
      "ObjectId" : "c173d4c956122c2fd0bd8e1491f2a9189bc3da0e",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/io/CMakeLists.txt" : {
      "ObjectId" : "6ad576fa46969b1394e80eef6247bd58345bbb61",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/io/boards/CMakeLists.txt" : {
      "ObjectId" : "3ef2bcd7c6b108593aa56ee976db852545f478d1",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/io/viewers/CMakeLists.txt" : {
      "ObjectId" : "4bc568a63cbc4d62f5dadeae97b1cc9cdd6cdaca",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/kernel/CMakeLists.txt" : {
      "ObjectId" : "508ee2f678e8cde4d177eb883d111e2e25dea15a",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/math/CMakeLists.txt" : {
      "ObjectId" : "04b842ae5b1a5ce3e162dd1a41ea29bc4186a42d",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/shapes/CMakeLists.txt" : {
      "ObjectId" : "97b43e849bb3fffc346e7f7627b2a6c7cc61746c",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### with QGLViewer\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/topology/CMakeLists.txt" : {
      "ObjectId" : "73bcd33217dc188f4472a1c1805ef64832bd6114",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/tutorial-examples/CMakeLists.txt" : {
      "ObjectId" : "728798129529c91ad788c6117c2dc79e95183464",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "ca5435f53ab1574ceaae0865e31fad8017832575",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Include CPP files to add to the library target\n\n#\n\n# each subdir can contain a ModuleSRC.txt file\n\n# with a set command on the variable ${DGTAL_SRC}\n\n#\n\n#------------------------------------------------------------------------------\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Board dependency\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Boost Add-ons\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# DGtal Target\n\n#------------------------------------------------------------------------------\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# IMPORTANT: Add the DGtal library to the \"export-set\"\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#PUBLIC_HEADER DESTINATION \"${INSTALL_INCLUDE_DIR}/DGtal\"\n",
        "Line" : 38,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#------------------------------------------------------------------------------\n\n# Misc\n\n#------------------------------------------------------------------------------\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "6849824145d61b68696ed811a0d4231c59b0019b",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#CMakeLists associated to the tests subdir\n\n#David Coeurjolly <david.coeurjolly@liris.cnrs.fr>\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Make sure the compiler can find include files.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make sure the compiler can find include files.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure the linker can find the Hello library once it is built.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ConfigTest.h instanciation.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If google-benchmark is enabled, we have a specific target\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#------TESTS subdirectories ------\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "tests/arithmetic/CMakeLists.txt" : {
      "ObjectId" : "7462c2cc749bc941f6cd5523d771745205c0a118",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-----------------------\n\n#GMP based tests\n\n#----------------------\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -O3 -qstrict\")\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Benchmark target\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/base/CMakeLists.txt" : {
      "ObjectId" : "8f2cc639aa06ac59dbdbe513eb8d01cd52bb69cb",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#--- Benchmark specific\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/dec/CMakeLists.txt" : {
      "ObjectId" : "bd60ac5f7d9751cdf524e102ba57bf321a65125c",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_test(testDiscreteExteriorCalculusExtended testDiscreteExteriorCalculusExtended)\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "tests/geometry/CMakeLists.txt" : {
      "ObjectId" : "fe3f901120ed01abaf8289d7f2a8e964ae347792",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/geometry/curves/CMakeLists.txt" : {
      "ObjectId" : "33deb8049c56bd26ca462eda27f5d2075faf7a42",
      "LastModified" : "2019-03-22T07:33:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/geometry/curves/estimation/CMakeLists.txt" : {
      "ObjectId" : "2a9a25c7cd320652ef8f50fef6b7a11f09536246",
      "LastModified" : "2019-03-22T07:33:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/geometry/surfaces/CMakeLists.txt" : {
      "ObjectId" : "2c4433a71b858596837f3dfd838b1f3b76b436d8",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##testVoronoiCovarianceMeasureOnSurface\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#-----------------------\n\n#GMP based tests\n\n#----------------------\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Benchmark target\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/geometry/tools/CMakeLists.txt" : {
      "ObjectId" : "df22ee0f6de9dce2d366cf927e4322df35efdd38",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/geometry/tools/determinant/CMakeLists.txt" : {
      "ObjectId" : "d680911a5ab7f81bdc255c797008cdd0673302f6",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Benchmark target\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/geometry/volumes/CMakeLists.txt" : {
      "ObjectId" : "579768d9f9abf720bf786f1f3c7f4fa73d62dacf",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/geometry/volumes/distance/CMakeLists.txt" : {
      "ObjectId" : "bbf8a319cf641557cd06dffbdc063779e4268f72",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Benchmark target\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "tests/geometry/volumes/estimation/CMakeLists.txt" : {
      "ObjectId" : "1d7c30a639e7009177c210415fb1059019701393",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/graph/CMakeLists.txt" : {
      "ObjectId" : "3b7f7dcbfd83962896809bb6f13ebae699f2d79d",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# testDigitalSurfaceBoostGraphInterface\n",
        "Line" : 4,
        "CharPositionInLine" : 3
      },
      "1" : {
        "Text" : "#Benchmark target\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/helpers/CMakeLists.txt" : {
      "ObjectId" : "2f04c42de4c2ab7d84e152766a4531bda88c90fc",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/images/CMakeLists.txt" : {
      "ObjectId" : "b4eb111119f567a930684ed56f101e9c5586b290",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  testImageContainerByHashTree\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Benchmark target\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#-----------------------\n\n#ITK based tests\n\n#----------------------\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "tests/io/CMakeLists.txt" : {
      "ObjectId" : "a473705322b1126cc2acbc22cdc2bd385d0b516c",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/io/boards/CMakeLists.txt" : {
      "ObjectId" : "b8fde5289cfc3c61bcfe5084176e570116be28d3",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/io/colormaps/CMakeLists.txt" : {
      "ObjectId" : "8c998263a6196880cf301982437e52e2b2e741c3",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/io/readers/CMakeLists.txt" : {
      "ObjectId" : "8cbad8e51f7e5b01db4de0f4fa7f1df23f004e1f",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/io/viewers/CMakeLists.txt" : {
      "ObjectId" : "4266b36b72c9e74a8891d36a0800f3b3c47b258c",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### Visu QGLViewer\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/io/writers/CMakeLists.txt" : {
      "ObjectId" : "798a1b9ee83d75082a1dba502ade8141dd5be733",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/kernel/CMakeLists.txt" : {
      "ObjectId" : "4bbcf094478df92f11d985c78c2f446c88624440",
      "LastModified" : "2019-03-22T07:33:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Benchmark target\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#-----------------------\n\n#GMP based tests\n\n#----------------------\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tests/math/CMakeLists.txt" : {
      "ObjectId" : "588ae67c09b474f29ad72612a4efb02097f9cd7c",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/math/linalg/CMakeLists.txt" : {
      "ObjectId" : "f2d3a2cb38d96615ab72f9b4fc1ac274585c4608",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tests/shapes/CMakeLists.txt" : {
      "ObjectId" : "7d97c4ca1b3b508022ff98f91be63ca3fff99844",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### Visu QGLViewer\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_test(${FILE} ${FILE})\n\n#not a test since IHM\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "##### Shapes with viewer.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#  testPolynomial\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "tests/topology/CMakeLists.txt" : {
      "ObjectId" : "1977180ed48212c22818a27639ef76c969768559",
      "LastModified" : "2019-02-28T07:29:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Benchmark target\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 82
  },
  "ElapsedTime" : 6723
}