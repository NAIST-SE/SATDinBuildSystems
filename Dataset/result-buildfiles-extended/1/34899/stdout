{
  "Repository" : "34899",
  "Revision" : "HEAD",
  "ObjectId" : "bdc23ef92c083ab2f7dee60925aa61750699432c",
  "CommitTime" : "2017-09-18T16:58:40Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "2c8336483c4bfd78a5e1cb513383ae4e2ba9ea02",
      "LastModified" : "2015-06-05T17:52:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The version number.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These will make cmake use clang and clang++ instead of gcc and g++\n\n#SET (CMAKE_C_COMPILER             \"/usr/bin/clang\")\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#looks like on OSX the c++ clang compiler is also clang, not clang++\n\n#SET (CMAKE_CXX_COMPILER             \"/usr/bin/clang\")\n\n#SET (CMAKE_CXX_COMPILER             \"/opt/local/bin/clang++-mp-3.1\")\n\n#SET (CMAKE_CXX_FLAGS                \"-Wall -static\")\n\n#SET (CMAKE_CXX_FLAGS                \"-Wall -Wl,-Bstatic -lopencv \")\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#SET (CMAKE_AR      \"/usr/bin/llvm-ar\")\n\n#SET (CMAKE_LINKER  \"/usr/bin/llvm-ld\")\n\n#SET (CMAKE_NM      \"/usr/bin/llvm-nm\")\n\n#SET (CMAKE_OBJDUMP \"/usr/bin/llvm-objdump\")\n\n#SET (CMAKE_RANLIB  \"/usr/bin/llvm-ranlib\")\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#set(PLATFORM 64)\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#This may need to be updated or Linux/Windows\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#This will look for the undvc_common library, which should be in the\n\n#same directory as TAO. It should be compiled in the ../undvc_common/build\n\n#directory\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#add addiitonal paths here if undvc_common is in a different directory\n",
        "Line" : 45,
        "CharPositionInLine" : 28
      },
      "8" : {
        "Text" : "#add additional paths here if undvc_common is in a different directory\n\n#or if it has been build in a different directory\n",
        "Line" : 52,
        "CharPositionInLine" : 40
      },
      "9" : {
        "Text" : "#UNDVC_COMMON has the FindBOINC.cmake and FindMYSQL.cmake files\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#add_subdirectory(client)\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "boinc_daemons/CMakeLists.txt" : {
      "ObjectId" : "4656a3ba7488c495e5da7cf238e4ef5a71645ad3",
      "LastModified" : "2017-03-04T15:28:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The version number.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These will make cmake use clang and clang++ instead of gcc and g++\n\n#SET (CMAKE_C_COMPILER             \"/usr/bin/clang\")\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#This may need to be updated or Linux/Windows\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#this adds the undvc_common FindX.cmake modules to look for BOINC and OpenCV\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#This will look for the undvc_common library, which should be in the\n\n#same directory as TAO. It should be compiled in the ../undvc_common/build\n\n#directory\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#add addiitonal paths here if undvc_common is in a different directory\n",
        "Line" : 28,
        "CharPositionInLine" : 31
      },
      "6" : {
        "Text" : "#add additional paths here if undvc_common is in a different directory\n",
        "Line" : 35,
        "CharPositionInLine" : 43
      },
      "7" : {
        "Text" : "#or if it has been build in a different directory\n",
        "Line" : 36,
        "CharPositionInLine" : 40
      },
      "8" : {
        "Text" : "#UNDVC_COMMON has the FindBOINC.cmake and FindMYSQL.cmake files\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#find_package(OpenCV REQUIRED videostab nonfree)\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#MESSAGE(STATUS \"OpenCV_LIBRARIES: \" ${OpenCV_LIBRARIES})\n\n#MESSAGE(STATUS \"OpenCV_INCLUDES: \" ${OpenCV_INCLUDE_DIR})\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#find_package(CURL REQUIRED)\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#add_executable(wildlife_validator\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#    ${BOINC_INCLUDE_DIR}/sched/validator\n\n#    ${BOINC_INCLUDE_DIR}/sched/validate_util\n\n#    ${BOINC_INCLUDE_DIR}/sched/validate_util2\n\n#    wildlife_validation_policy)\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#target_link_libraries(wildlife_validator undvc_common ${BOINC_SERVER_LIBRARIES} ${MYSQL_LIBRARIES})\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#add_executable(wildlife_surf_collect_validator\n\n#    ${BOINC_INCLUDE_DIR}/sched/validator\n\n#    ${BOINC_INCLUDE_DIR}/sched/validate_util\n\n#    ${BOINC_INCLUDE_DIR}/sched/validate_util2\n\n#    ${PROJECT_SOURCE_DIR}/../source/EventType\n\n#    wildlife_surf_collect_validation_policy)\n\n#target_link_libraries(wildlife_surf_collect_validator undvc_common ${BOINC_SERVER_LIBRARIES} ${MYSQL_LIBRARIES} ${OpenCV_LIBRARIES})\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#add_executable(wildlife_assimilator\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#    ${BOINC_INCLUDE_DIR}/sched/assimilator\n\n#    ${BOINC_INCLUDE_DIR}/sched/validate_util\n\n#    wildlife_assimilation_policy)\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#target_link_libraries(wildlife_assimilator undvc_common ${BOINC_SERVER_LIBRARIES} ${MYSQL_LIBRARIES} ${Boost_LIBRARIES})\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#add_executable(wildlife_surf_collect_assimilator\n\n#    ${BOINC_INCLUDE_DIR}/sched/assimilator\n\n#    ${BOINC_INCLUDE_DIR}/sched/validate_util\n\n#    ${PROJECT_SOURCE_DIR}/../source/EventType\n\n#    wildlife_surf_collect_assimilation_policy)\n\n#target_link_libraries(wildlife_surf_collect_assimilator undvc_common ${BOINC_SERVER_LIBRARIES} ${MYSQL_LIBRARIES} ${Boost_LIBRARIES} ${OpenCV_LIBRARIES})\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#add_executable(wildlife_bgsub_validator\n\n#    ${BOINC_INCLUDE_DIR}/sched/validator\n\n#    ${BOINC_INCLUDE_DIR}/sched/validate_util\n\n#    ${BOINC_INCLUDE_DIR}/sched/validate_util2\n\n#    wildlife_bgsub_validation_policy)\n\n#target_link_libraries(wildlife_bgsub_validator ${UNDVC_COMMON_LIBRARY} ${BOINC_SERVER_LIBRARIES} ${MYSQL_LIBRARIES})\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#add_executable(wildlife_bgsub_assimilator\n\n#    ${BOINC_INCLUDE_DIR}/sched/assimilator\n\n#    ${BOINC_INCLUDE_DIR}/sched/validate_util\n\n#    wildlife_bgsub_assimilation_policy)\n\n#target_link_libraries(wildlife_bgsub_assimilator ${UNDVC_COMMON_LIBRARY} ${BOINC_SERVER_LIBRARIES} ${MYSQL_LIBRARIES})\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#add_executable(wildlife_work_generator wildlife_work_generator)\n\n#target_link_libraries(wildlife_work_generator ${UNDVC_COMMON_LIBRARY} ${BOINC_SERVER_LIBRARIES} ${MYSQL_LIBRARIES} ${OPENSSL_LIBRARIES} ${Boost_LIBRARIES})\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "client/CMakeLists.txt" : {
      "ObjectId" : "da16b0f3ce107ec42c4617d02bcfbbca7fe8394d",
      "LastModified" : "2015-06-05T17:52:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(OpenCV_DIR)\n",
        "Line" : 13,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# Executables\n\n#add_executable(wildlife_surf_collect wildlife_surf_collect)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#find_package(OpenCV REQUIRED COMPONENTS nonfree core)\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#include_directories(\"${PROJECT_SOURCE_DIR}/../include/\" ${OpenCV_INCLUDE_DIRS} ${BOINC_INCLUDE_DIR})\n\n#target_link_libraries(wildlife_surf_collect pthread ${OpenCV_LIBS} ${BOINC_APP_LIBRARIES})\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#add_executable(wildlife_surf_collect wildlife_surf_collect2)\n\n#include_directories(\"${PROJECT_SOURCE_DIR}/../include/\" ${OpenCV_INCLUDE_DIR} ${BOINC_INCLUDE_DIR})\n\n#target_link_libraries(wildlife_surf_collect ${OpenCV_LIBS} ${BOINC_API_LIBRARY} ${BOINC_APP_LIBRARIES})\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "client/cmake/Modules/FindBOINC.cmake" : {
      "ObjectId" : "6a87cf17b848d692d476ef70dd316149137e63ad",
      "LastModified" : "2015-06-05T17:52:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find BOINC\n\n# Find the native BOINC includes and libraries\n\n#\n\n#  BOINC_INCLUDE_DIR        - where to find boinc.h, etc.\n\n#  BOINC_SERVER_FOUND       - true if libraries required for compiling boinc server code are found\n\n#  BOINC_SERVER_LIBRARIES   - all the libraries required for compiling boinc server code\n\n#  BOINC_APP_FOUND          - true if libraries required for compiling boinc apps are found \n\n#  BOINC_APP_LIBRARIES      - all the libraries required for compiling boinc apps\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "client/cmake/Modules/FindFTGL.cmake" : {
      "ObjectId" : "cbcb806a691f08a248b18bccac92c55887aabd78",
      "LastModified" : "2015-06-05T17:52:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Locate FTGL library\n\n# This module defines\n\n#  FTGL_LIBRARIES, the library to link against\n\n#  FTGL_FOUND, if false, do not try to link to FTGL\n\n#  FTGL_INCLUDE_DIRS, where to find headers.\n\n#\n\n# $FTGL_DIR is an environment variable that points to the main ftgl directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Richard Ulrich.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Created by Richard Ulrich.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set the user variables\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED\n\n# arguments and set FTGL_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "client/cmake/Modules/FindFreetype.cmake" : {
      "ObjectId" : "509c12c629c3526210490ed6753932da02d04d7e",
      "LastModified" : "2015-06-05T17:52:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 6
  },
  "ElapsedTime" : 2111
}