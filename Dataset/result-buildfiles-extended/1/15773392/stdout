{
  "Repository" : "15773392",
  "Revision" : "HEAD",
  "ObjectId" : "be7fac89218a84b75f7598e3d76625ece99296f2",
  "CommitTime" : "2016-12-17T07:27:07Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "d20b2747117a45d7dd1eaeadf9bfe0ac36343be4",
      "LastModified" : "2016-08-19T20:54:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Enable C++11\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO solve 'Enable C++ exceptions' to 'NO' and I got warning: warning C4530: C++ exception handler used, \n\n#             but unwind semantics are not enabled. Specify /EHsc'\n\n# Solution: http://stackoverflow.com/questions/552695/how-can-i-switch-off-exception-handling-in-msvc\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# make sure CMAKE_PREFIX_PATH is set\n\n# if(NOT CMAKE_PREFIX_PATH)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set(CMAKE_PREFIX_PATH \"E:/Kodi/adsp_addons/asplib_depends\")\n\n# list(APPEND CMAKE_PREFIX_PATH \"E:/Kodi/adsp_addons/asplib_depends/include\")\n\n# list(APPEND CMAKE_PREFIX_PATH \"E:/Kodi/adsp_addons/asplib_depends/lib\")\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# else()\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# endif()\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# project defines vars such as PROJECT_NAME, PROJECT_VERSION, ...\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Enable the orginization of projects with folders\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Pkgconfig\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# config mode\n\n#configure_file(cmake/asplib-config.cmake.in\n\n#               asplib-config.cmake @ONLY)\n\n#install(FILES ${CMAKE_CURRENT_BINARY_DIR}/asplib-config.cmake\n\n#        DESTINATION ${CMAKE_INSTALL_LIBDIR_NOARCH}/asplib)\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Generate and install a CMake config, version and target file\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#PATH_VARS INCLUDE_INSTALL_DIR)\n",
        "Line" : 98,
        "CharPositionInLine" : 30
      },
      "12" : {
        "Text" : "# Print project configuration\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "asplib_modules/AudioInterfaces/CMakeLists.txt" : {
      "ObjectId" : "f3e5de8c455109b679b7f1219882723c5a11898f",
      "LastModified" : "2016-08-19T20:54:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# install all specific module files\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "asplib_modules/Biquad/CMakeLists.txt" : {
      "ObjectId" : "de392d76e37ccae0531bbc19e715bf7f1fed6cc0",
      "LastModified" : "2016-08-19T20:54:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# install all specific module files\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "asplib_modules/CMakeLists.txt" : {
      "ObjectId" : "1b1f70bc621f8a155c7904e11691772ac69d1b99",
      "LastModified" : "2016-08-19T20:54:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# if ASPLIB_DEPENDS_SRC_PREFIX is defined use this directory for depenencies\n",
        "Line" : 1,
        "CharPositionInLine" : 30
      },
      "1" : {
        "Text" : "# OR NOT ${ASPLIB_MODULES_TO_BUILD})\n",
        "Line" : 19,
        "CharPositionInLine" : 91
      },
      "2" : {
        "Text" : "# only define this ASPLIB_PortAudio_BUILD once to determine if PortAudio is build by asplib or not\n",
        "Line" : 50,
        "CharPositionInLine" : 33
      },
      "3" : {
        "Text" : "#set(PA_USE_ASIO ON)\n",
        "Line" : 63,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "#include(../cmake/cmake_helpers/importURLProject.cmake)\n\n#importURLProject(PROJECT portaudio\n\n#                 URL \"http://www.portaudio.com/archives\"\n\n#                 DOWNLOAD_NAME \"pa_stable_v19_20140130.tgz\")\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# only define this ASPLIB_KissFFT_BUILD once to determine if KissFFT is build by asplib or not\n",
        "Line" : 105,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 6
    },
    "asplib_modules/ComputeDeviceInfo/CMakeLists.txt" : {
      "ObjectId" : "598dcb1ad4f192521d376e378ad04bb35e7b7a8a",
      "LastModified" : "2016-08-19T20:54:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# install all specific module files\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "asplib_modules/Core/CMakeLists.txt" : {
      "ObjectId" : "b4641d4577be5e37b8c1695b8fb608ec9aea4f2e",
      "LastModified" : "2016-08-19T20:54:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# install all specific module files\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "asplib_modules/FFT/CMakeLists.txt" : {
      "ObjectId" : "abf8dca7cc0383d2a3795eca7c34bbeca617d7e5",
      "LastModified" : "2016-08-19T20:54:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# install all specific module files\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "asplib_modules/IIR/CMakeLists.txt" : {
      "ObjectId" : "3f39fe831f33e9be55699ad439ce304585df487a",
      "LastModified" : "2016-08-19T20:54:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# install all specific module files\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "asplib_modules/Logger/CMakeLists.txt" : {
      "ObjectId" : "6051e773c814f0f5e307e513ec33811c304665a9",
      "LastModified" : "2016-08-19T20:54:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# install all specific module files\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "asplib_modules/Signals/CMakeLists.txt" : {
      "ObjectId" : "7ebed04402faf1784a36187b2213cd42a0f546bc",
      "LastModified" : "2016-08-19T20:54:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# install all specific module files\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "asplib_modules/SpectrumVisProcessor/CMakeLists.txt" : {
      "ObjectId" : "b0f1220de815fa0a889d9a1c5f52a87196e32d55",
      "LastModified" : "2016-08-19T20:54:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# install all specific module files\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "asplib_modules/Timer/CMakeLists.txt" : {
      "ObjectId" : "4ff8b6bf52baddab2e12dd31eb04bf08a7d2d6d8",
      "LastModified" : "2016-08-19T20:54:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# install all specific module files\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/PkgConfigHandler.cmake" : {
      "ObjectId" : "52c28df3eddca4a19aefc1825e42f0023134ff6e",
      "LastModified" : "2016-08-19T20:54:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# translate a list of libraries into a command-line that can be passed to the\n\n# compiler/linker. first parameter is the name of the variable that will\n\n# receive this list, the rest is considered the list of libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if we are going to put these in regexps, we must escape period\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# CMake loves absolute paths, whereas libtool won't have any of it!\n\n# (you get an error message about argument not parsed). translate each\n\n# of the libraries into a linker option\n",
        "Line" : 11,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# starts with a hyphen already? then just add it\n",
        "Line" : 16,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# otherwise, parse the name into a directory and a name\n",
        "Line" : 21,
        "CharPositionInLine" : 10
      },
      "5" : {
        "Text" : "# directory and name each on their own; this is somewhat\n\n# unsatisfactory because it may be that a system dir is specified\n\n# by an earlier directory and you start picking up libraries from\n\n# there instead of the \"closest\" path here. also, the soversion\n\n# is more or less lost. remove system default path, to lessen the\n\n# chance that we pick the wrong library\n",
        "Line" : 36,
        "CharPositionInLine" : 10
      },
      "6" : {
        "Text" : "# if there was no translation of the name, the library is named\n\n# unconventionally (.so.3gf, I'm looking at you), so pass this\n\n# name unmodified to the linker switch\n",
        "Line" : 47,
        "CharPositionInLine" : 10
      },
      "7" : {
        "Text" : "# caller determines whether we want it returned as a list or a string\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# convert a list back to a command-line string\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# wrapper to set variables in pkg-config file\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# escape set of standard strings\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# necessary to make these variables visible to configure_file\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "cmake/UseMultiArch.cmake" : {
      "ObjectId" : "29230a776d41ad9c4336bbdf41cd849a7b6f12e7",
      "LastModified" : "2016-08-19T20:54:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#FIXME: You can use https://cmake.org/cmake/help/latest/module/GNUInstallDirs.html instead\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Multiarch support in object code library directories\n\n#\n\n# This module sets the following variable\n\n#\tCMAKE_INSTALL_LIBDIR\t     to lib, lib64 or lib/x86_64-linux-gnu\n\n#\t                             depending on the platform; use this path\n\n#\t                             for platform-specific binaries.\n\n#\n\n#\tCMAKE_INSTALL_LIBDIR_NOARCH  to lib or lib64 depending on the platform;\n\n#\t                             use this path for architecture-independent\n\n#\t                             files.\n\n#\n\n# Note that it will override the results of GNUInstallDirs if included after\n\n# that module.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fedora uses lib64/ for 64-bit systems, Debian uses lib/x86_64-linux-gnu;\n\n# Fedora put module files in lib64/ too, but Debian uses lib/ for that\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Debian or Ubuntu?\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# 64-bit system?\n",
        "Line" : 29,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# let the user override if somewhere else is desirable\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/asplib_helpers.cmake" : {
      "ObjectId" : "b590f1fa3cf401d424f4fd569fb795e5d0037652",
      "LastModified" : "2016-08-19T20:54:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#file(RELATIVE_PATH relFile ${CMAKE_CURRENT_SOURCE_DIR} ${_FILE})\n",
        "Line" : 5,
        "CharPositionInLine" : 6
      },
      "1" : {
        "Text" : "#message(STATUS \"FILEDIRECTORY=${FILEDIRECTORY}\")\n",
        "Line" : 7,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "#message(STATUS \"FILEDIRECTORY=${FILEDIRECTORY}\")\n",
        "Line" : 10,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "#message(STATUS \"_FILE=${_FILE}\")\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#message(STATUS \"Filename: ${FILENAME}, Directory: ${FILEDIRECTORY}, Group: ${FILE_FILEGROUP}\")\n",
        "Line" : 24,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# remove absolute path to this module\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "cmake/cmake_helpers/importURLProject.cmake" : {
      "ObjectId" : "475fb657448669f19554fa2033a5742bafa8e989",
      "LastModified" : "2016-08-19T20:54:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Prevent the following from being passed through\n",
        "Line" : 16,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# Hide output if requested\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Set up where we will put our temporary CMakeLists.txt file and also\n\n# the base point below which the default source and binary dirs will be\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Ensure the caller can know where to find the source and build directories\n",
        "Line" : 44,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Create and build a separate CMake project to carry out the download.\n\n# If we've already previously done these steps, they will not cause\n\n# anything to be updated, so extra rebuilds of the project won't occur.\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "cmake/depends/KissFFT/CMakeLists.txt" : {
      "ObjectId" : "196c73eb63b7d5fd63cc2ae370d7543c503a77dc",
      "LastModified" : "2016-08-19T20:54:20Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/depends/KissFFT/add_KissFFT.cmake" : {
      "ObjectId" : "ca75c51d8d9b68bdb4a4db6b1f825452d4187ce1",
      "LastModified" : "2016-08-19T20:54:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#INSTALL_DIR     ${CMAKE_BINARY_DIR}/depends/include\n\n#SOURCE_DIR      ${ASPLIB_DEPENDS_SRC_PREFIX}/KissFFT\n",
        "Line" : 29,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 1
    },
    "cmake/gitCloneProject.cmake" : {
      "ObjectId" : "2af05ef27f3b0ed728269d5035da0236050d750d",
      "LastModified" : "2016-08-19T20:54:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# NOTE: This is a modified version of https://github.com/Crascit/DownloadProject\n\n#\n\n# Many thanks to audiofanatic for the initial work and idea\n\n#\n\n# MODULE:   DownloadProject\n\n#\n\n# PROVIDES:\n\n#   download_project( PROJ projectName\n\n#                    [PREFIX prefixDir]\n\n#                    [DOWNLOAD_DIR downloadDir]\n\n#                    [SOURCE_DIR srcDir]\n\n#                    [BINARY_DIR binDir]\n\n#                    [QUIET]\n\n#                    ...\n\n#   )\n\n#\n\n#       Provides the ability to download and unpack a tarball, zip file, git repository,\n\n#       etc. at configure time (i.e. when the cmake command is run). How the downloaded\n\n#       and unpacked contents are used is up to the caller, but the motivating case is\n\n#       to download source code which can then be included directly in the build with\n\n#       add_subdirectory() after the call to download_project(). Source and build\n\n#       directories are set up with this in mind.\n\n#\n\n#       The PROJ argument is required. The projectName value will be used to construct\n\n#       the following variables upon exit (obviously replace projectName with its actual\n\n#       value):\n\n#\n\n#           projectName_SOURCE_DIR\n\n#           projectName_BINARY_DIR\n\n#\n\n#       The SOURCE_DIR and BINARY_DIR arguments are optional and would not typically\n\n#       need to be provided. They can be specified if you want the downloaded source\n\n#       and build directories to be located in a specific place. The contents of\n\n#       projectName_SOURCE_DIR and projectName_BINARY_DIR will be populated with the\n\n#       locations used whether you provide SOURCE_DIR/BINARY_DIR or not.\n\n#\n\n#       The DOWNLOAD_DIR argument does not normally need to be set. It controls the\n\n#       location of the temporary CMake build used to perform the download.\n\n#\n\n#       The PREFIX argument can be provided to change the base location of the default\n\n#       values of DOWNLOAD_DIR, SOURCE_DIR and BINARY_DIR. If all of those three arguments\n\n#       are provided, then PREFIX will have no effect. The default value for PREFIX is\n\n#       CMAKE_BINARY_DIR.\n\n#\n\n#       The QUIET option can be given if you do not want to show the output associated\n\n#       with downloading the specified project.\n\n#\n\n#       In addition to the above, any other options are passed through unmodified to\n\n#       ExternalProject_Add() to perform the actual download, patch and update steps.\n\n#       The following ExternalProject_Add() options are explicitly prohibited (they\n\n#       are reserved for use by the download_project() command):\n\n#\n\n#           CONFIGURE_COMMAND\n\n#           BUILD_COMMAND\n\n#           INSTALL_COMMAND\n\n#           TEST_COMMAND\n\n#\n\n#       Only those ExternalProject_Add() arguments which relate to downloading, patching\n\n#       and updating of the project sources are intended to be used. Also note that at\n\n#       least one set of download-related arguments are required.\n\n#\n\n#       If using CMake 3.2 or later, the UPDATE_DISCONNECTED option can be used to\n\n#       prevent a check at the remote end for changes every time CMake is run\n\n#       after the first successful download. See the documentation of the ExternalProject\n\n#       module for more information. It is likely you will want to use this option if it\n\n#       is available to you.\n\n#\n\n# EXAMPLE USAGE:\n\n#\n\n#   include(download_project.cmake)\n\n#   download_project(PROJ                googletest\n\n#                    GIT_REPOSITORY      https://github.com/google/googletest.git\n\n#                    GIT_TAG             master\n\n#                    UPDATE_DISCONNECTED 1\n\n#                    QUIET\n\n#   )\n\n#\n\n#   add_subdirectory(${googletest_SOURCE_DIR} ${googletest_BINARY_DIR})\n\n#\n\n#========================================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prevent the following from being passed through\n",
        "Line" : 96,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Hide output if requested\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Set up where we will put our temporary CMakeLists.txt file and also\n\n# the base point below which the default source and binary dirs will be\n",
        "Line" : 114,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Ensure the caller can know where to find the source and build directories\n",
        "Line" : 123,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Create and build a separate CMake project to carry out the download.\n\n# If we've already previously done these steps, they will not cause\n\n# anything to be updated, so extra rebuilds of the project won't occur.\n",
        "Line" : 133,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    }
  },
  "FileTypes" : {
    "CMAKE" : 19
  },
  "ElapsedTime" : 552
}