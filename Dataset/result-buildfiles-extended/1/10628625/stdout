{
  "Repository" : "10628625",
  "Revision" : "HEAD",
  "ObjectId" : "b16abf8ce1e78d0c77bcd6e458afe6048c855b6a",
  "CommitTime" : "2019-04-08T23:08:25Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "a992437985581f480a7cd6ec99c64e43ad4a8574",
      "LastModified" : "2019-03-23T20:03:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# vim: et ts=4 sts=4 sw=4 tw=0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ==== Define cmake build policies that affect compilation and linkage default behaviors\n\n#\n\n# Set the JSONCPP_NEWEST_VALIDATED_POLICIES_VERSION string to the newest cmake version\n\n# policies that provide successful builds. By setting JSONCPP_NEWEST_VALIDATED_POLICIES_VERSION\n\n# to a value greater than the oldest policies, all policies between\n\n# JSONCPP_OLDEST_VALIDATED_POLICIES_VERSION and CMAKE_VERSION (used for this build)\n\n# are set to their NEW behaivor, thereby suppressing policy warnings related to policies\n\n# between the JSONCPP_OLDEST_VALIDATED_POLICIES_VERSION and CMAKE_VERSION.\n\n#\n\n# CMake versions greater than the JSONCPP_NEWEST_VALIDATED_POLICIES_VERSION policies will\n\n# continue to generate policy warnings \"CMake Warning (dev)...Policy CMP0XXX is not set:\"\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set and use the newest available cmake policies that are validated to work\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#\n\n# Now enumerate specific policies newer than JSONCPP_NEWEST_VALIDATED_POLICIES_VERSION\n\n# that may need to be individually set to NEW/OLD\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Currently Empty\n",
        "Line" : 29,
        "CharPositionInLine" : 17
      },
      "5" : {
        "Text" : "# Currently Empty\n",
        "Line" : 34,
        "CharPositionInLine" : 17
      },
      "6" : {
        "Text" : "# ==== Define language standard configurations requiring at least c++11 standard\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#####\n\n##  Set the default target properties\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Supported values are ``11``, ``14``, and ``17``.\n",
        "Line" : 48,
        "CharPositionInLine" : 31
      },
      "9" : {
        "Text" : "# ====\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Ensures that CMAKE_BUILD_TYPE has a default value\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# <major>[.<minor>[.<patch>[.<tweak>]]]\n",
        "Line" : 66,
        "CharPositionInLine" : 22
      },
      "12" : {
        "Text" : "# Enable runtime search path support for dynamic libraries on OSX\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Adhere to GNU filesystem layout conventions\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Set variable named ${VAR_NAME} to value ${VALUE}\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# File version.h is only regenerated on CMake configure step\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Only enabled in debug because some old versions of VS STL generate\n\n# warnings when compiled in release configuration.\n",
        "Line" : 108,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Include our configuration header\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Only enabled in debug because some old versions of VS STL generate\n\n# unreachable code warning when compiled in release configuration.\n",
        "Line" : 123,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# using regular Clang or AppleClang\n",
        "Line" : 129,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# using GCC\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# not yet ready for -Wsign-conversion\n",
        "Line" : 134,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "#Â using Intel compiler\n",
        "Line" : 143,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Build the different applications\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#install the includes\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "b8fc6d55b2a387bfcc56bf8284f650c25e729426",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## This file should be placed in the root directory of your project.\n\n## Then modify the CMakeLists.txt file in the root directory of your\n\n## project to incorporate the testing dashboard.\n\n##\n\n## # The following are required to submit to the CDash dashboard:\n\n##   ENABLE_TESTING()\n\n##   INCLUDE(CTest)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "include/CMakeLists.txt" : {
      "ObjectId" : "7f1cb9822116cdcc85c2b45ff7d8a1335b2598b9",
      "LastModified" : "2018-12-30T21:32:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "0f82a74633121e40eb403103bc18ddb31c7bd5c8",
      "LastModified" : "2018-12-30T21:32:57Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/jsontestrunner/CMakeLists.txt" : {
      "ObjectId" : "4ca09094d8f0674b40d25a9f4f12e3cd10609785",
      "LastModified" : "2019-01-14T22:12:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Run end to end parser/writer tests\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Run unit tests in post-build\n\n# (default cmake workflow hides away the test result into a file, resulting in poor dev workflow?!?)\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "## Create tests for dashboard submission, allows easy review of CI results https://my.cdash.org/index.php?project=jsoncpp\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "src/lib_json/CMakeLists.txt" : {
      "ObjectId" : "fc4e7a08f2423bbded048b66a5bb8dd060d007e1",
      "LastModified" : "2019-01-14T22:12:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Get compiler version.\n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#-Werror=* was introduced -after- GCC 4.1.2\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# The \"LANGUAGE CXX\" parameter is not supported in CMake versions below 3,\n\n# so the C compiler and header has to be used.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Install instructions for this target\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set library's runtime search path on OSX\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Specify compiler features required when compiling a given target.\n\n# See https://cmake.org/cmake/help/v3.1/prop_gbl/CMAKE_CXX_KNOWN_FEATURES.html#prop_gbl:CMAKE_CXX_KNOWN_FEATURES\n\n# for complete list of features available\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Compiler mode is aware of C++ 11.\n",
        "Line" : 90,
        "CharPositionInLine" : 19
      },
      "7" : {
        "Text" : "#MSVC 1900 cxx_alignas # Alignment control alignas, as defined in N2341.\n\n#MSVC 1900 cxx_alignof # Alignment control alignof, as defined in N2341.\n\n#MSVC 1900 cxx_attributes # Generic attributes, as defined in N2761.\n",
        "Line" : 91,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Automatic type deduction, as defined in N1984.\n",
        "Line" : 94,
        "CharPositionInLine" : 22
      },
      "9" : {
        "Text" : "#MSVC 1900 cxx_constexpr # Constant expressions, as defined in N2235.\n",
        "Line" : 95,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Decltype, as defined in N2343.\n",
        "Line" : 96,
        "CharPositionInLine" : 21
      },
      "11" : {
        "Text" : "# Default template arguments for function templates, as defined in DR226\n",
        "Line" : 97,
        "CharPositionInLine" : 43
      },
      "12" : {
        "Text" : "# Defaulted functions, as defined in N2346.\n",
        "Line" : 98,
        "CharPositionInLine" : 32
      },
      "13" : {
        "Text" : "#MSVC 1900 cxx_defaulted_move_initializers # Defaulted move initializers, as defined in N3053.\n",
        "Line" : 99,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Delegating constructors, as defined in N1986.\n",
        "Line" : 100,
        "CharPositionInLine" : 36
      },
      "15" : {
        "Text" : "#MSVC 1900 cxx_deleted_functions # Deleted functions, as defined in N2346.\n",
        "Line" : 101,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "# Enum forward declarations, as defined in N2764.\n",
        "Line" : 102,
        "CharPositionInLine" : 38
      },
      "17" : {
        "Text" : "# Explicit conversion operators, as defined in N2437.\n",
        "Line" : 103,
        "CharPositionInLine" : 33
      },
      "18" : {
        "Text" : "# Extended friend declarations, as defined in N1791.\n",
        "Line" : 104,
        "CharPositionInLine" : 41
      },
      "19" : {
        "Text" : "# Extern templates, as defined in N1987.\n",
        "Line" : 105,
        "CharPositionInLine" : 29
      },
      "20" : {
        "Text" : "# Override control final keyword, as defined in N2928, N3206 and N3272.\n",
        "Line" : 106,
        "CharPositionInLine" : 18
      },
      "21" : {
        "Text" : "#MSVC 1900 cxx_func_identifier # Predefined __func__ identifier, as defined in N2340.\n\n#MSVC 1900 cxx_generalized_initializers # Initializer lists, as defined in N2672.\n\n#MSVC 1900 cxx_inheriting_constructors # Inheriting constructors, as defined in N2540.\n\n#MSVC 1900 cxx_inline_namespaces # Inline namespaces, as defined in N2535.\n",
        "Line" : 107,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# Lambda functions, as defined in N2927.\n",
        "Line" : 111,
        "CharPositionInLine" : 20
      },
      "23" : {
        "Text" : "#MSVC 1900 cxx_local_type_template_args # Local and unnamed types as template arguments, as defined in N2657.\n",
        "Line" : 112,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# long long type, as defined in N1811.\n",
        "Line" : 113,
        "CharPositionInLine" : 27
      },
      "25" : {
        "Text" : "#MSVC 1900 cxx_noexcept # Exception specifications, as defined in N3050.\n\n#MSVC 1900 cxx_nonstatic_member_init # Non-static data member initialization, as defined in N2756.\n",
        "Line" : 114,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "# Null pointer, as defined in N2431.\n",
        "Line" : 116,
        "CharPositionInLine" : 20
      },
      "27" : {
        "Text" : "# Override control override keyword, as defined in N2928, N3206 and N3272.\n",
        "Line" : 117,
        "CharPositionInLine" : 21
      },
      "28" : {
        "Text" : "# Range-based for, as defined in N2930.\n",
        "Line" : 118,
        "CharPositionInLine" : 22
      },
      "29" : {
        "Text" : "# Raw string literals, as defined in N2442.\n",
        "Line" : 119,
        "CharPositionInLine" : 32
      },
      "30" : {
        "Text" : "#MSVC 1900 cxx_reference_qualified_functions # Reference qualified functions, as defined in N2439.\n",
        "Line" : 120,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# Right angle bracket parsing, as defined in N1757.\n",
        "Line" : 121,
        "CharPositionInLine" : 33
      },
      "32" : {
        "Text" : "# R-value references, as defined in N2118.\n",
        "Line" : 122,
        "CharPositionInLine" : 30
      },
      "33" : {
        "Text" : "#MSVC 1900 cxx_sizeof_member # Size of non-static data members, as defined in N2253.\n",
        "Line" : 123,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# Static assert, as defined in N1720.\n",
        "Line" : 124,
        "CharPositionInLine" : 26
      },
      "35" : {
        "Text" : "# Strongly typed enums, as defined in N2347.\n",
        "Line" : 125,
        "CharPositionInLine" : 25
      },
      "36" : {
        "Text" : "#MSVC 1900 cxx_thread_local # Thread-local variables, as defined in N2659.\n",
        "Line" : 126,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# Automatic function return type, as defined in N2541.\n",
        "Line" : 127,
        "CharPositionInLine" : 34
      },
      "38" : {
        "Text" : "#MSVC 1900 cxx_unicode_literals # Unicode string literals, as defined in N2442.\n",
        "Line" : 128,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : "# Uniform initialization, as defined in N2640.\n",
        "Line" : 129,
        "CharPositionInLine" : 35
      },
      "40" : {
        "Text" : "#MSVC 1900 cxx_unrestricted_unions # Unrestricted unions, as defined in N2544.\n\n#MSVC 1900 cxx_user_literals # User-defined literals, as defined in N2765.\n",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "41" : {
        "Text" : "# Variadic macros, as defined in N1653.\n",
        "Line" : 132,
        "CharPositionInLine" : 28
      },
      "42" : {
        "Text" : "# Variadic templates, as defined in N2242.\n",
        "Line" : 133,
        "CharPositionInLine" : 31
      },
      "CommentCount" : 43
    },
    "src/test_lib_json/CMakeLists.txt" : {
      "ObjectId" : "8a3970fc0791a986f27ffb78a95c1bd441b47b44",
      "LastModified" : "2019-01-14T22:12:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# vim: et ts=4 sts=4 sw=4 tw=0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# another way to solve issue #90\n\n#set_target_properties(jsoncpp_test PROPERTIES COMPILE_FLAGS -ffloat-store)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Run unit tests in post-build\n\n# (default cmake workflow hides away the test result into a file, resulting in poor dev workflow?!?)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# First, copy the shared lib, for Microsoft.\n\n# Then, run the test executable.\n",
        "Line" : 22,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Just run the test executable.\n",
        "Line" : 29,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "## Create tests for dashboard submission, allows easy review of CI results https://my.cdash.org/index.php?project=jsoncpp\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    }
  },
  "FileTypes" : {
    "CMAKE" : 7
  },
  "ElapsedTime" : 945
}