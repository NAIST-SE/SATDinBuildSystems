{
  "Repository" : "6613024",
  "Revision" : "HEAD",
  "ObjectId" : "38fa5795da395bd15b0ea6f10860d56a71ff3271",
  "CommitTime" : "2019-04-05T11:03:58Z",
  "Files" : {
    "byte-buddy-agent/pom.xml" : {
      "ObjectId" : "ac801c128cbcf1ea14d8bef0a94519817885e070",
      "LastModified" : "2019-03-26T21:57:15Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n      The Unix socket dependency can be excluded safely. Byte Buddy will safely discover the\n      non-availability and not use the corresponding virtual machine implementation. The\n      implementation requires Java 7+ and is deactivated on Java 6 VMs.\n    ",
        "Line" : 29,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : " Include last version of Byte Buddy manually. ",
        "Line" : 60,
        "CharPositionInLine" : 62
      },
      "2" : {
        "Text" : " Create manifest file which is required for creating an OSGi bundle. ",
        "Line" : 71,
        "CharPositionInLine" : 89
      },
      "3" : {
        "Text" : " Specify OSGi packaging and agent manifest headers. ",
        "Line" : 82,
        "CharPositionInLine" : 72
      },
      "4" : {
        "Text" : " Create a module-info.class file. ",
        "Line" : 111,
        "CharPositionInLine" : 54
      },
      "CommentCount" : 5
    },
    "byte-buddy-android-test/pom.xml" : {
      "ObjectId" : "09673fe216c48804ba58ed1f16fb6bcdfa2ca9c4",
      "LastModified" : "2018-09-30T18:13:17Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " The version number is not updated by the release plugin as this artifact is not released! ",
        "Line" : 10,
        "CharPositionInLine" : 107
      },
      "1" : {
        "Text" : "\n      Be aware that not all IDEs automatically add all dependencies and their transitive dependencies to the\n      build path of the built APK. Therefore, the dx.jar dependency sometimes needs to be added explicitly\n      to the project build. This is further described here:\n      http://stackoverflow.com/questions/14765910/could-not-find-class-xxx-referenced-from-method-xxx-yyy\n\n      This module is activated by the 'android' Maven profile.\n    ",
        "Line" : 32,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : " Build Android application from Maven. ",
        "Line" : 56,
        "CharPositionInLine" : 59
      },
      "3" : {
        "Text" : " This artifact should not be deployed. ",
        "Line" : 72,
        "CharPositionInLine" : 59
      },
      "4" : {
        "Text" : " Mutation testing is not required for this example project. ",
        "Line" : 81,
        "CharPositionInLine" : 80
      },
      "CommentCount" : 5
    },
    "byte-buddy-android/pom.xml" : {
      "ObjectId" : "0259cfd1022507c00a6beb588e0495f33fc7ee09",
      "LastModified" : "2019-03-26T21:57:15Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Newer versions require Java 7 ",
        "Line" : 15,
        "CharPositionInLine" : 47
      },
      "CommentCount" : 1
    },
    "byte-buddy-benchmark/pom.xml" : {
      "ObjectId" : "507f393b8e8066b5c54c32d57cf9f6daa8e80f5e",
      "LastModified" : "2019-03-26T21:57:15Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n        The benchmarks of this module should be changed with care, especially in relation to recommendations for\n        code optimizations by IDEs or 'find bugs'. When changing the benchmarks, it is advisable to analyze the\n        tests' assembly code for validating what iis measured.\n\n        For running the benchmarks, build the project with the 'extras' profile and execute 'target/byte-buddy-benchmarks.jar'\n        from the command line. Running the benchmarks should happen on an idle machine and requires several hours of runtime.\n    ",
        "Line" : 23,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : " Newer versions require Java 7. ",
        "Line" : 27,
        "CharPositionInLine" : 48
      },
      "2" : {
        "Text" : " Newer versions are not Java 6 compatible as they reference the MethodHandle class. ",
        "Line" : 30,
        "CharPositionInLine" : 100
      },
      "3" : {
        "Text" : " Mutation testing is not adding information on benchmarking quality. ",
        "Line" : 71,
        "CharPositionInLine" : 89
      },
      "4" : {
        "Text" : " For micro-benchmarks, a static code analysis is of no value. ",
        "Line" : 80,
        "CharPositionInLine" : 82
      },
      "5" : {
        "Text" : " Shade the benchmark artifact. ",
        "Line" : 93,
        "CharPositionInLine" : 47
      },
      "6" : {
        "Text" : " Do not run tests on JDK 11 or later as the benchmark currently requires sun.misc.Unsafe::defineClass. ",
        "Line" : 124,
        "CharPositionInLine" : 119
      },
      "CommentCount" : 7
    },
    "byte-buddy-dep/pom.xml" : {
      "ObjectId" : "e35f45553488271a6812f3a0b1db21aa19a41e91",
      "LastModified" : "2019-03-26T21:57:15Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Create hashCode/equals method and cache some expensive properties. ",
        "Line" : 86,
        "CharPositionInLine" : 88
      },
      "CommentCount" : 1
    },
    "byte-buddy-gradle-plugin/pom.xml" : {
      "ObjectId" : "b9e9ad5126b36c880a08c54c9117fa59d5c0dcdd",
      "LastModified" : "2019-03-26T21:57:15Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n        This sub project is built by Gradle as the Gradle plugin API requires a Gradle build. This POM\n        triggers the Gradle build via a Gradle execution plugin in order to keep the build seamless. The\n        built artifacts are then attached to this Maven project once the build completed successfully.\n\n        IDEs are typically confused by this setup and this sub project should be directly imported as\n        a Gradle project to avoid errors. Alternatively, this project should be ignored.\n    ",
        "Line" : 22,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : " The Gradle plugin must be built by Gradle; therefore the compilation is skipped. ",
        "Line" : 41,
        "CharPositionInLine" : 102
      },
      "2" : {
        "Text" : " Gradle is also responsible for creating javadoc such that this task is skipped here. ",
        "Line" : 50,
        "CharPositionInLine" : 106
      },
      "3" : {
        "Text" : " Tie Maven executions into the Gradle life-cycle. ",
        "Line" : 60,
        "CharPositionInLine" : 70
      },
      "4" : {
        "Text" : " Copies the artifact created by Gradle back to the Maven target folder. ",
        "Line" : 105,
        "CharPositionInLine" : 92
      },
      "5" : {
        "Text" : " If the javadoc artifact is built by Gradle, we copy it back to the Maven target. ",
        "Line" : 145,
        "CharPositionInLine" : 110
      },
      "6" : {
        "Text" : " As the javadoc artifact is built by Gradle, it needs to be attached to Maven manually. ",
        "Line" : 165,
        "CharPositionInLine" : 116
      },
      "CommentCount" : 7
    },
    "byte-buddy-maven-plugin/pom.xml" : {
      "ObjectId" : "716288afffb419cd7c0914f906bbe74b7555a80f",
      "LastModified" : "2019-03-26T21:57:15Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Newer Maven versions require Java 1.7. ",
        "Line" : 17,
        "CharPositionInLine" : 56
      },
      "CommentCount" : 1
    },
    "byte-buddy/pom.xml" : {
      "ObjectId" : "3a7119053ee7b3125a141d5ac42ebd27450097c3",
      "LastModified" : "2019-03-26T21:57:15Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n      Because of the Shade plugin, the variables of this POM are resolved with the current work station's values the\n      dependency reduced POM. The POM that is presented to the Shade plugin is already resolved which is why it is\n      not possible to prevent this behavior as the profiles are not removed form the POM. This does not effect the\n      usability of the POM for a dependency but might confuse users that read the POM. The Shade plugin also removes\n      this comment from deployment such that there is no easy way to explain this in the deployed POM.\n    ",
        "Line" : 26,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "\n      IDEs might complain about the following dependency not being OSGI compatible. While this is true, it does not\n      matter as the dependency is repackaged by the Shade plugin and becomes part of this module's jar artifact.\n    ",
        "Line" : 74,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : " Shade the ASM dependency. ",
        "Line" : 86,
        "CharPositionInLine" : 47
      },
      "3" : {
        "Text" : " Disable pitest as it fails for empty modules ",
        "Line" : 145,
        "CharPositionInLine" : 66
      },
      "4" : {
        "Text" : " Skip spotbugs as it fails for empty modules. ",
        "Line" : 154,
        "CharPositionInLine" : 66
      },
      "5" : {
        "Text" : " Create manifest file which is required for creating an OSGi bundle. ",
        "Line" : 163,
        "CharPositionInLine" : 89
      },
      "6" : {
        "Text" : "&lt;!&ndash; Configure OSGi bundle. Due to interaction with the shade plugin, IDEs might identify the following configuration as illegal. &ndash;&gt;",
        "Line" : 174,
        "CharPositionInLine" : 169
      },
      "7" : {
        "Text" : " Cannot use wildcards because of use of the shade plugin which imports from 'byte-buddy-dep'. ",
        "Line" : 190,
        "CharPositionInLine" : 126
      },
      "8" : {
        "Text" : " Inject a module-info.class file into the shaded jar. ",
        "Line" : 195,
        "CharPositionInLine" : 74
      },
      "9" : {
        "Text" : " The shadowed source files of this module need to be included explicitly to create a javadoc artifact.",
        "Line" : 238,
        "CharPositionInLine" : 130
      },
      "CommentCount" : 10
    },
    "pom.xml" : {
      "ObjectId" : "57c3d12e501c30bb3e754eb86f0baa09b49aaa1d",
      "LastModified" : "2019-03-26T21:57:15Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n      There are several build profiles available:\n      - extras: Creates additional artifacts containing source files and javadoc. (activated on release)\n      - gpg: Sign all artifacts using gpg. (activated on release)\n      - checks: Applies style checks to the source files. (activated by default, activated on release)\n      - integration: Runs additional unit tests and executes static code analysis (activated on CI server)\n      - android: Builds an Android test application. An Android SDK is required for doing so. (excluded from release)\n\n      It is also possible to build Byte Buddy against a specific byte code level. By default, Byte Buddy is Java 5 compatible\n      but requires Java 6 to build and to run tests: By activating a profile javaX where X is a specific version number,\n      tests and source are compiled to a differing byte code level.\n\n      Additionally, the following reports are available via Maven:\n      - jacoco:prepare-agent verify jacoco:report - Computes coverage for test suite (all modules)\n      - org.pitest:pitest-maven:mutationCoverage - Runs mutation tests (all modules)\n      - spotbugs:spotbugs spotbugs:gui - Runs spotbugs and shows a report in a graphical interface (module specific)\n      - com.github.ferstl:jitwatch-jarscan-maven-plugin:scan - Finds all methods above HotSpot's inlining threshold\n      - clirr:check - Checks for binary changes in the API\n    ",
        "Line" : 37,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : " Allows the suppression of spotbugs false-positives by annotations without adding an actual dependency. ",
        "Line" : 131,
        "CharPositionInLine" : 120
      },
      "2" : {
        "Text" : " Define release properties. ",
        "Line" : 142,
        "CharPositionInLine" : 48
      },
      "3" : {
        "Text" : " Enable mutation testing. ",
        "Line" : 154,
        "CharPositionInLine" : 46
      },
      "4" : {
        "Text" : " Configure Jacoco support for evaluating test case coverage. ",
        "Line" : 168,
        "CharPositionInLine" : 81
      },
      "5" : {
        "Text" : " Avoid adding synthetic members to test classes as test assert class members.  ",
        "Line" : 180,
        "CharPositionInLine" : 111
      },
      "6" : {
        "Text" : " Generate coveralls reports from CI server. ",
        "Line" : 186,
        "CharPositionInLine" : 64
      },
      "7" : {
        "Text" : " Also allow for manual spotbugs execution. Note that the generated warnings do not always apply for Byte Buddy's use case. ",
        "Line" : 197,
        "CharPositionInLine" : 143
      },
      "8" : {
        "Text" : " Enable scanning for methods above the inlining threshold (JDK 7+) ",
        "Line" : 211,
        "CharPositionInLine" : 87
      },
      "9" : {
        "Text" : " Enable scanning for binary changes between releases ",
        "Line" : 217,
        "CharPositionInLine" : 73
      },
      "10" : {
        "Text" : " Resolve the current year. ",
        "Line" : 223,
        "CharPositionInLine" : 47
      },
      "11" : {
        "Text" : " Add license headers to all files. ",
        "Line" : 243,
        "CharPositionInLine" : 55
      },
      "12" : {
        "Text" : " Define explicit version to overcome problem with generated reports. ",
        "Line" : 358,
        "CharPositionInLine" : 81
      },
      "13" : {
        "Text" : " Runs the build with compatibility for Java 6 JVMs. ",
        "Line" : 377,
        "CharPositionInLine" : 68
      },
      "14" : {
        "Text" : " Runs the build with compatibility for Java 7 JVMs. ",
        "Line" : 395,
        "CharPositionInLine" : 68
      },
      "15" : {
        "Text" : " Runs the build with compatibility for Java 9 JVMs. ",
        "Line" : 407,
        "CharPositionInLine" : 68
      },
      "16" : {
        "Text" : " Runs the build with compatibility for Java 10 JVMs. ",
        "Line" : 421,
        "CharPositionInLine" : 69
      },
      "17" : {
        "Text" : " Runs the build with compatibility for Java 11 JVMs. ",
        "Line" : 435,
        "CharPositionInLine" : 69
      },
      "18" : {
        "Text" : " Runs the build with compatibility for Java 12 JVMs. ",
        "Line" : 450,
        "CharPositionInLine" : 69
      },
      "19" : {
        "Text" : " Runs the build with compatibility for Java 13 JVMs. ",
        "Line" : 466,
        "CharPositionInLine" : 69
      },
      "20" : {
        "Text" : " Builds using a byte code target for Java 6. ",
        "Line" : 482,
        "CharPositionInLine" : 61
      },
      "21" : {
        "Text" : " Builds using a byte code target for Java 7. ",
        "Line" : 492,
        "CharPositionInLine" : 61
      },
      "22" : {
        "Text" : " Builds using a byte code target for Java 8. ",
        "Line" : 503,
        "CharPositionInLine" : 61
      },
      "23" : {
        "Text" : " Builds using a byte code target for Java 9. ",
        "Line" : 514,
        "CharPositionInLine" : 61
      },
      "24" : {
        "Text" : " Builds using a byte code target for Java 10. ",
        "Line" : 525,
        "CharPositionInLine" : 62
      },
      "25" : {
        "Text" : " Builds using a byte code target for Java 11. ",
        "Line" : 537,
        "CharPositionInLine" : 62
      },
      "26" : {
        "Text" : " Builds using a byte code target for Java 12. ",
        "Line" : 549,
        "CharPositionInLine" : 62
      },
      "27" : {
        "Text" : " Builds using a byte code target for Java 13. ",
        "Line" : 561,
        "CharPositionInLine" : 62
      },
      "28" : {
        "Text" : " Creates additional artifacts that are required for deployment. ",
        "Line" : 573,
        "CharPositionInLine" : 80
      },
      "29" : {
        "Text" : " Create source code artifact. ",
        "Line" : 584,
        "CharPositionInLine" : 58
      },
      "30" : {
        "Text" : " Create javadoc artifact. ",
        "Line" : 597,
        "CharPositionInLine" : 54
      },
      "31" : {
        "Text" : " Additionally to the regular jar file specified above, create an aggregated jar. ",
        "Line" : 609,
        "CharPositionInLine" : 117
      },
      "32" : {
        "Text" : " Fails due to repacking of ASM by the Shade plugin. ",
        "Line" : 618,
        "CharPositionInLine" : 96
      },
      "33" : {
        "Text" : " Sign any created artifact. (Requires configuration of gpg on the executing machine.) ",
        "Line" : 633,
        "CharPositionInLine" : 102
      },
      "34" : {
        "Text" : " Sign artifacts. ",
        "Line" : 641,
        "CharPositionInLine" : 45
      },
      "35" : {
        "Text" : " Basic checks that are not requiring too much runtime. ",
        "Line" : 658,
        "CharPositionInLine" : 71
      },
      "36" : {
        "Text" : " Check style on build. ",
        "Line" : 666,
        "CharPositionInLine" : 51
      },
      "37" : {
        "Text" : " Check API compatibility. ",
        "Line" : 686,
        "CharPositionInLine" : 54
      },
      "38" : {
        "Text" : " Make sure that Byte Buddy does never depend on ASM's tree API. ",
        "Line" : 707,
        "CharPositionInLine" : 92
      },
      "39" : {
        "Text" : " Integration profile that executes long-running tasks and additional static code analysis. ",
        "Line" : 739,
        "CharPositionInLine" : 107
      },
      "40" : {
        "Text" : " Run spotbugs if not specified differently in a module.",
        "Line" : 750,
        "CharPositionInLine" : 83
      },
      "41" : {
        "Text" : " Only build the Android test application on demand as it requires Android SDK installation. ",
        "Line" : 774,
        "CharPositionInLine" : 108
      },
      "CommentCount" : 42
    }
  },
  "FileTypes" : {
    "MAVEN" : 9
  },
  "ElapsedTime" : 1672
}