{
  "Repository" : "30893902",
  "Revision" : "HEAD",
  "ObjectId" : "f0a7e8a8407ca508d76f077dd1f3fa4fec65051d",
  "CommitTime" : "2019-04-17T00:28:57Z",
  "Files" : {
    "Build/CMakeFeatureDetect.cmake" : {
      "ObjectId" : "130eaff30e1cb2ff6a35196c0cf4dff5a8b5da10",
      "LastModified" : "2016-12-21T16:21:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------------------------------\n\n# Copyright (C) Microsoft. All rights reserved.\n\n# Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.\n\n#-------------------------------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# by default this is disabled for osx\n\n# enable temporarily\n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# by default this is disabled for osx\n\n# disable back\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "CMakeLists.txt" : {
      "ObjectId" : "750292f30ccc13c2062a0da520ab573044caa018",
      "LastModified" : "2018-03-15T17:12:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Keep CMake from caching static/shared library\n\n# option. Otherwise, CMake fails to update cached\n\n# references\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# todo: create a sub cmake file to take care of _SH uncaching...\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Enable Valgrind is not needed for x86 builds. Already <= 32Gb address space\n",
        "Line" : 66,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# In a default install, ICU header files are all in ICU_ROOT/include\n\n# However, for Node, the include/ folder is never generated, so we have to look\n\n# in NODE/deps/icu/source/{common|i18n} for headers\n",
        "Line" : 145,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# in case ICU path was given but it doesn't exist, build script will fail.\n\n# so, fallback only if ICU path wasn't given\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# reduce link time memory usage\n",
        "Line" : 214,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# OSX 10.12 Clang deprecates libstdc++ [See GH #1599]\n\n# So, -Werror is linux only for now\n\n# + Android ARM ABI shows ld warnings\n\n# xplat-todo: Do we need this ?\n",
        "Line" : 227,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Color diagnostics for g++ and clang++\n",
        "Line" : 262,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# CC WARNING FLAGS\n",
        "Line" : 295,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# todo: fix general visibility of the interface\n\n# do not set to `fvisibility=hidden` as it is going to\n\n# prevent the required interface is being exported\n\n# clang by default sets fvisibility=default\n",
        "Line" : 300,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# CXX WARNING FLAGS\n",
        "Line" : 305,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# notes..\n\n# -Wno-address-of-temporary  # vtinfo.h, VirtualTableInfo<T>::RegisterVirtualTable\n\n# -Wno-null-conversion # Check shmemory.cpp and cs.cpp here...\n\n# -Wno-return-type # switch unreachable code\n\n# -Wno-switch # switch values not handled\n\n# -W-enum-compare-switch # throws warning on enum1 == enum2 where both\n\n# enums represent same value but do not share the type. ie. we use both AsmJsType\n\n# and AsmJsRetType interchangably and filter things out by `default:` case.\n\n# -W-tautological-constant-compare throws warning for checks known at compile time.\n\n# Some of those checks are optimized out during compile / lto time, and others\n\n# are platform / compiler dependent.\n\n# -Wno-unknown-warning-option ... well, some of the new switches are not\n\n# recognized by older compilers and they fail. So, put this one and not fail\n",
        "Line" : 337,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# CXX / CC COMPILER FLAGS\n",
        "Line" : 359,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Treat signed integer overflow as two's complement\n",
        "Line" : 363,
        "CharPositionInLine" : 16
      },
      "14" : {
        "Text" : "# Only disable RTTI in release builds so that TrackAlloc works for debug and test builds\n\n# Also disable RTTI when building a shared library\n\n# TODO: why does the shared library break with rtti disabled?\n",
        "Line" : 366,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# for PAL\n",
        "Line" : 402,
        "CharPositionInLine" : 19
      },
      "16" : {
        "Text" : "# don't cache\n\n# also clear it just in case\n",
        "Line" : 426,
        "CharPositionInLine" : 32
      },
      "17" : {
        "Text" : "# don't cache\n",
        "Line" : 435,
        "CharPositionInLine" : 40
      },
      "18" : {
        "Text" : "#don't cache\n",
        "Line" : 440,
        "CharPositionInLine" : 37
      },
      "19" : {
        "Text" : "################# Write-barrier check/analyze ##################\n",
        "Line" : 451,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# don't cache\n",
        "Line" : 459,
        "CharPositionInLine" : 32
      },
      "21" : {
        "Text" : "# don't cache\n",
        "Line" : 466,
        "CharPositionInLine" : 32
      },
      "22" : {
        "Text" : "# don't cache\n",
        "Line" : 479,
        "CharPositionInLine" : 29
      },
      "23" : {
        "Text" : "# detect features\n",
        "Line" : 498,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# this should be after `detect feature` to not to affect feature detection\n\n# Clang -fsanitize.\n",
        "Line" : 502,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# don't cache\n",
        "Line" : 507,
        "CharPositionInLine" : 40
      },
      "26" : {
        "Text" : "# build the rest with NO_PAL_MINMAX and PAL_STDCPP_COMPAT\n",
        "Line" : 512,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 27
    },
    "bin/CMakeLists.txt" : {
      "ObjectId" : "f6bbbb44cf56cccf5f5ff7e4f237586a8d270a25",
      "LastModified" : "2017-04-28T12:04:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "bin/ChakraCore/CMakeLists.txt" : {
      "ObjectId" : "f4ec55181c83d933380b84502005faaf0c3d57c3",
      "LastModified" : "2018-02-17T06:51:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Link step for the ChakraCore shared library\n\n#\n\n# External libraries we link with are the following:\n\n#  pthread: For threading\n\n#  stdc++/gcc_s: C++ runtime code\n\n#  dl: For shared library loading related functions\n\n#\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# common link deps\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Post build step to copy the built shared library\n\n# to out/{BUILD_TYPE}/ (or whatever the CMakeBuildDir is)\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "bin/GCStress/CMakeLists.txt" : {
      "ObjectId" : "8a6d31ffe3d690f31c5ffdf6a0ebb17048dbf36e",
      "LastModified" : "2017-01-30T20:29:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# common link deps\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "bin/ch/CMakeLists.txt" : {
      "ObjectId" : "7e495f210411f7903ecac9241cca40701ba6dfb1",
      "LastModified" : "2018-03-15T17:12:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# do not embed libstdc++ statically on Android\n",
        "Line" : 45,
        "CharPositionInLine" : 28
      },
      "1" : {
        "Text" : "# common link deps\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# // shared library below\n",
        "Line" : 82,
        "CharPositionInLine" : 7
      },
      "3" : {
        "Text" : "# osx clang sets this by default\n",
        "Line" : 86,
        "CharPositionInLine" : 67
      },
      "4" : {
        "Text" : "# Link explicitly to ICU to support u_getVersion\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Add a post build event to the ch target\n\n# which executes a command to copy ch to\n\n# out/{BUILD_TYPE}/ for convenience\n",
        "Line" : 119,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "bin/rl/CMakeLists.txt" : {
      "ObjectId" : "d993bb14fdce2736970b289f370fc7a5781bba94",
      "LastModified" : "2016-04-19T15:58:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/Backend/CMakeLists.txt" : {
      "ObjectId" : "6825144d4eb97af45717e36c35f5827f885be1ca",
      "LastModified" : "2018-05-08T21:14:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#    arm64/EncoderMD.cpp\n\n#    arm64/LowerMD.cpp\n\n#    arm/EncoderMD.cpp\n\n#    arm/LegalizeMD.cpp\n\n#    arm/LinearScanMD.cpp\n\n#    arm/LowerMD.cpp\n\n#    arm/PeepsMD.cpp\n\n#    arm/UnwindInfoManager.cpp\n\n#    i386/EncoderMD.cpp\n\n#    i386/LinearScanMD.cpp\n\n#    i386/LowererMDArch.cpp\n\n#    i386/PeepsMD.cpp\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "lib/CMakeLists.txt" : {
      "ObjectId" : "0cbeec680c4cf0d9908207ede1cdd1e2a8fdf2f5",
      "LastModified" : "2019-02-08T00:04:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/Common/CMakeLists.txt" : {
      "ObjectId" : "21b187fa0b428e3638a514b4554057f6d9eec396",
      "LastModified" : "2016-02-18T04:23:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/Common/Codex/CMakeLists.txt" : {
      "ObjectId" : "14b961f64d4b30574d4d33ac1a4099792c07bebb",
      "LastModified" : "2016-12-21T16:21:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CH has a direct dependency to this project\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "lib/Common/Common/CMakeLists.txt" : {
      "ObjectId" : "d034ecd2a6869694cdf0ee131bcb0996269ea9e2",
      "LastModified" : "2016-12-21T16:21:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/Common/Core/CMakeLists.txt" : {
      "ObjectId" : "626df8974f2bf6defa7a821199574bb6438e7789",
      "LastModified" : "2019-02-26T17:57:21Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/Common/DataStructures/CMakeLists.txt" : {
      "ObjectId" : "ac2854f2c3cac7b51b5a20f8f8203da6dad90d8a",
      "LastModified" : "2019-02-08T00:04:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/Common/Exceptions/CMakeLists.txt" : {
      "ObjectId" : "a88758c4abc6b3b5b4c054d369ae77e1474801d5",
      "LastModified" : "2016-07-13T18:37:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CommonExceptionsPch.cpp\n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "lib/Common/Memory/CMakeLists.txt" : {
      "ObjectId" : "7d141d2eca8871ae9c0418f8eaf1105c63707f5b",
      "LastModified" : "2019-02-08T00:04:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/Common/Util/CMakeLists.txt" : {
      "ObjectId" : "f04155290ed1aa9ad72a98ab67aeccd6c7e4cba2",
      "LastModified" : "2016-07-13T18:37:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/Jsrt/CMakeLists.txt" : {
      "ObjectId" : "222fd88cdaf85866f635787fcd712fd7e86224e6",
      "LastModified" : "2019-02-08T00:04:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/Jsrt/Core/CMakeLists.txt" : {
      "ObjectId" : "b707163adefd7cb79b1f0f8a69daa17f7b3998de",
      "LastModified" : "2019-02-08T00:04:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/Parser/CMakeLists.txt" : {
      "ObjectId" : "668ef2d56b40469c552dff0f31f8c43e56f3320a",
      "LastModified" : "2019-02-08T00:04:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/Runtime/Base/CMakeLists.txt" : {
      "ObjectId" : "0a9523ddc647808a17b433da2b57375790c0f0a6",
      "LastModified" : "2019-02-08T00:04:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# DelayLoadLibrary.cpp\n\n# Entropy.cpp\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# WindowsFoundationAdapter.cpp\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "lib/Runtime/ByteCode/CMakeLists.txt" : {
      "ObjectId" : "3be475ce89309f9ac5d69e7694d3841ee8d3562c",
      "LastModified" : "2019-02-08T00:04:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/Runtime/CMakeLists.txt" : {
      "ObjectId" : "f0a250f1df33f7414f7b5e3945bec2efd13b83d7",
      "LastModified" : "2019-02-08T00:04:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/Runtime/Debug/CMakeLists.txt" : {
      "ObjectId" : "d0bbc22300e499198ce227d45176b676993f9fba",
      "LastModified" : "2019-02-08T00:04:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/Runtime/Language/CMakeLists.txt" : {
      "ObjectId" : "20a2a254b74fa9999b99c876680640100ddd5980",
      "LastModified" : "2019-02-08T00:04:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/Runtime/Library/CMakeLists.txt" : {
      "ObjectId" : "ed36db9f02dbc9f9a6b5a945b9737956422c530e",
      "LastModified" : "2019-02-28T17:51:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# JavascriptErrorDebug.cpp\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "lib/Runtime/Math/CMakeLists.txt" : {
      "ObjectId" : "a93baeeb812fd26673ddc1dec2a10ef8748d7cad",
      "LastModified" : "2019-02-08T00:04:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/Runtime/PlatformAgnostic/CMakeLists.txt" : {
      "ObjectId" : "b244ac4df421c0a41c922fba8bbd2d4c96a5c6e3",
      "LastModified" : "2016-07-13T18:37:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/Runtime/PlatformAgnostic/Platform/CMakeLists.txt" : {
      "ObjectId" : "4560cf56696e9449956e57334c33635d81a27677",
      "LastModified" : "2019-02-08T00:04:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Linux/PerfTrace.cpp # TODO : implement for OSX?\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# CH has a direct dependency to this project\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "lib/Runtime/Types/CMakeLists.txt" : {
      "ObjectId" : "7c1b6fd663df1517d02668e9523596a3b53f03f5",
      "LastModified" : "2019-02-28T17:51:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/SCACore/CMakeLists.txt" : {
      "ObjectId" : "3eebc41cf562fe31e537e440fcc44dad7c411243",
      "LastModified" : "2019-02-08T00:04:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/WasmReader/CMakeLists.txt" : {
      "ObjectId" : "2aba07b776ce72b469fef1330fbb8332245825ad",
      "LastModified" : "2019-02-08T00:04:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "lib/wabt/CMakeLists.txt" : {
      "ObjectId" : "8d1fd41b98eec8afdbe7d7577e36da31e465afa7",
      "LastModified" : "2019-02-08T00:04:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2016 WebAssembly Community Group participants\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# disable -Wunused-parameter: this is really common when implementing\n\n#   interfaces, etc.\n\n# disable -Wpointer-arith: this is a GCC extension, and doesn't work in MSVC.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Mingw won't define format (e.g. PRIu64) or limit (e.g. UINT32_MAX) macros\n\n# in C++ without these.\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# disable -Wclobbered: it seems to be guessing incorrectly about a local\n\n# variable being clobbered by longjmp.\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# yyerror passes a non-string-literal to a printf-like function, which is a\n\n# warning.\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "pal/CMakeLists.txt" : {
      "ObjectId" : "8e2d32f84b12bd86c6982c08658b2896cf73fe82",
      "LastModified" : "2019-02-08T00:04:36Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pal/src/CMakeLists.txt" : {
      "ObjectId" : "bb73b14de3cc3bb58806eb8664062e71cad894f5",
      "LastModified" : "2019-02-08T00:04:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Include directories\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compile options\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# turn off capability to remove unused functions (which was enabled in debug build with sanitizers)\n\n# set(CMAKE_SHARED_LINKER_FLAGS_DEBUG \"${CMAKE_SHARED_LINKER_FLAGS_DEBUG} -Wl,--no-gc-sections\")\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "pal/src/configure.cmake" : {
      "ObjectId" : "1606bbc22f55711790a6810865407ede72641d12",
      "LastModified" : "2019-02-08T00:04:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# xplat-todo: Cleanup this file!\n\n# we have `feature detection` for direct compilation target and manual entries for cross-compilation below\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Anything else is Linux\n",
        "Line" : 903,
        "CharPositionInLine" : 7
      },
      "2" : {
        "Text" : "# ANDROID\n",
        "Line" : 922,
        "CharPositionInLine" : 7
      },
      "3" : {
        "Text" : "# -DHAVE_PTHREAD_RESUME_NP 1\n\n# -DHAVE_PTHREAD_CONTINUE_NP 1\n\n# -DHAVE_PTHREAD_ATTR_GET_NP 1\n",
        "Line" : 937,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# -DHAVE_TTRACE\n",
        "Line" : 961,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# -DHAVE_PT_REGS 1)\n\n# -DHAVE_GREGSET_T\n",
        "Line" : 965,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# -DUSER_H_DEFINES_DEBUG 1\n",
        "Line" : 974,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# -DREALPATH_SUPPORTS_NONEXISTENT_FILES\n\n# -DSSCANF_CANNOT_HANDLE_MISSING_EXPONENT\n\n# -DSSCANF_SUPPORT_ll\n\n# -DHAVE_LARGE_SNPRINTF_SUPPORT 1)\n\n# -DHAVE_BROKEN_FIFO_SELECT 1)\n\n# -DHAVE_BROKEN_FIFO_KEVENT 1)\n\n# -DHAS_FTRUNCATE_LENGTH_ISSUE\n\n# -DHAVE_SCHED_GET_PRIORITY 1)\n\n# -DHAVE_SCHED_GETCPU 1)\n",
        "Line" : 977,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# -DSTATVFS64_PROTOTYPE_BROKEN\n\n# -DHAVE_MMAP_DEV_ZERO\n\n# -DMMAP_IGNORES_HINT\n\n# -DMMAP_ANON_IGNORES_PROTECTION\n",
        "Line" : 992,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# -DONE_SHARED_MAPPING_PER_FILEREGION_PER_PROCESS\n\n# -DPTHREAD_CREATE_MODIFIES_ERRNO 1)\n\n# -DSEM_INIT_MODIFIES_ERRNO 1)\n\n# -DHAVE_PROCFS_CTL\n",
        "Line" : 997,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# -DGETPWUID_R_SETS_ERRNO\n\n# -DFILE_OPS_CHECK_FERROR_OF_PREVIOUS_CALL\n\n# -DPAL_THREAD_PRIORITY_MIN 0\n\n# -DPAL_THREAD_PRIORITY_MAX 0\n\n# -DDEADLOCK_WHEN_THREAD_IS_SUSPENDED_WHILE_BLOCKED_ON_MUTEX\n\n# -DSYNCHMGR_SUSPENSION_SAFE_CONDITION_SIGNALING\n\n# -DERROR_FUNC_FOR_GLOB_HAS_FIXED_PARAMS\n\n# -DHAS_FTRUNCATE_LENGTH_ISSUE\n\n# -DCHECK_TRACE_SPECIFIERS 0)\n\n# -DPROCFS_MEM_NAME=\"\"\n\n# -DHAVE_GETHRTIME 1)\n",
        "Line" : 1009,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# set(OPEN64_IS_USED_INSTEAD_OF_OPEN 0)\n",
        "Line" : 1025,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "tools/RecyclerChecker/CMakeLists.txt" : {
      "ObjectId" : "3c7904f2b9c26f9ef9d67d50029629426be31099",
      "LastModified" : "2019-02-08T00:04:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set(CMAKE_VERBOSE_MAKEFILE on)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# OSX requires following libs.\n\n# Ubuntu complains/fails if these libs specified.\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/RecyclerChecker/cmake/modules/FindClang.cmake" : {
      "ObjectId" : "7c889fe8ca218e8416e6e07633a162366bdc992f",
      "LastModified" : "2019-02-08T00:04:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Detect CLANG\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tools/RecyclerChecker/cmake/modules/FindLLVM.cmake" : {
      "ObjectId" : "f2ed6273b766621381e4961fac19e4f0e2b3eb63",
      "LastModified" : "2019-02-08T00:04:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Detect LLVM and set various variable to link against the different component of LLVM\n\n#\n\n# NOTE: This is a modified version of the module originally found in the OpenGTL project\n\n# at www.opengtl.org\n\n#\n\n# LLVM_BIN_DIR : directory with LLVM binaries\n\n# LLVM_LIB_DIR : directory with LLVM library\n\n# LLVM_INCLUDE_DIR : directory with LLVM include\n\n#\n\n# LLVM_COMPILE_FLAGS : compile flags needed to build a program using LLVM headers\n\n# LLVM_LDFLAGS : ldflags needed to link\n\n# LLVM_LIBS_CORE : ldflags needed to link against a LLVM core library\n\n# LLVM_LIBS_JIT : ldflags needed to link against a LLVM JIT\n\n# LLVM_LIBS_JIT_OBJECTS : objects you need to add to your source when using LLVM JIT\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ubuntu\n\n# Ubuntu\n\n# OSX brew install path\n",
        "Line" : 21,
        "CharPositionInLine" : 30
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 39
  },
  "ElapsedTime" : 13094
}