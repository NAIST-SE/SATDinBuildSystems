{
  "Repository" : "226600",
  "Revision" : "HEAD",
  "ObjectId" : "3100fcf52d161445a71c4738e8e9d387f3dbeae3",
  "CommitTime" : "2019-04-17T09:57:32Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "e331318c48b8bbfe9e77eeb4febe2958fc115f80",
      "LastModified" : "2019-04-11T14:26:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####################################################################\n\n# CONFIGURATION                                                    #\n\n####################################################################\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# where to look first for cmake modules, before ${CMAKE_ROOT}/Modules/ is checked\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# check if rpm contains a bundled berkeley db\n",
        "Line" : 224,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# should create config.h with #cmakedefine instead...\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The following components are regex's to match anywhere (unless anchored)\n\n# in absolute path + filename to find files or directories to be excluded\n\n# from source tarball.\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# temporary files\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# backup files\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# eclipse files\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# others\n",
        "Line" : 334,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# used before\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# cmake cache files\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "####################################################################\n\n# INCLUDES                                                         #\n\n####################################################################\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#SET (CMAKE_INCLUDE_DIRECTORIES_BEFORE ON)\n",
        "Line" : 366,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "####################################################################\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# set system libraries\n",
        "Line" : 383,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "####################################################################\n\n# RPM SPEC                                                         #\n\n####################################################################\n",
        "Line" : 429,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "VERSION.cmake" : {
      "ObjectId" : "80d0e039397653340f8d6a2336c1c2191827d439",
      "LastModified" : "2019-03-29T15:05:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ==================================================\n\n# Versioning\n\n# ==========\n\n#\n\n# MAJOR Major number for this branch.\n\n#\n\n# MINOR The most recent interface number this\n\n#     library implements.\n\n#\n\n# COMPATMINOR The latest binary compatible minor number\n\n#     this library implements.\n\n#\n\n# PATCH The implementation number of the current interface.\n\n#\n\n#\n\n# - The package VERSION will be MAJOR.MINOR.PATCH.\n\n#\n\n# - Libtool's -version-info will be derived from MAJOR, MINOR, PATCH\n\n#   and COMPATMINOR (see configure.ac).\n\n#\n\n# - Changing MAJOR always breaks binary compatibility.\n\n#\n\n# - Changing MINOR doesn't break binary compatibility by default.\n\n#   Only if COMPATMINOR is changed as well.\n\n#\n\n#\n\n# 1) After branching from TRUNK increment TRUNKs MAJOR and\n\n#    start with version `MAJOR.0.0' and also set COMPATMINOR to 0.\n\n#\n\n# 2) Update the version information only immediately before a public release\n\n#    of your software. More frequent updates are unnecessary, and only guarantee\n\n#    that the current interface number gets larger faster.\n\n#\n\n# 3) If the library source code has changed at all since the last update,\n\n#    then increment PATCH.\n\n#\n\n# 4) If any interfaces have been added, removed, or changed since the last\n\n#    update, increment MINOR, and set PATCH to 0.\n\n#\n\n# 5) If any interfaces have been added since the last public release, then\n\n#    leave COMPATMINOR unchanged. (binary compatible change)\n\n#\n\n# 6) If any interfaces have been removed since the last public release, then\n\n#    set COMPATMINOR to MINOR. (binary incompatible change)\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "bindings/CMakeLists.txt" : {
      "ObjectId" : "737cee4279e15788fbdffc4a31ec8b77e2d2c208",
      "LastModified" : "2016-11-08T12:39:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "bindings/perl/CMakeLists.txt" : {
      "ObjectId" : "49a3902b9f8b705ca896cf538bcb2b2afa088454",
      "LastModified" : "2016-11-08T12:39:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "bindings/python/CMakeLists.txt" : {
      "ObjectId" : "64ef528775a97441f2c11b612868527205f7f0cb",
      "LastModified" : "2017-07-24T10:08:15Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# if we build both for python2 and python3, make this the python2 build.\n\n# see comment in the python3 CMakeLists.txt file\n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "bindings/python3/CMakeLists.txt" : {
      "ObjectId" : "28e8e00dab5561bc603b1d9c571f949660e9f6c2",
      "LastModified" : "2017-05-30T12:37:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# used for building both python2 and python3 bindings\n\n# do not use if you want to build just one flavor, use the\n\n# standard python bindings file in that case.\n\n#\n\n# we cannot use FIND_PACKAGE PythonLibs here, as this would\n\n# clash with the python variables.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "bindings/ruby/CMakeLists.txt" : {
      "ObjectId" : "6c3bd50d79a433ed55e11ec29d892739b1c45400",
      "LastModified" : "2016-11-08T12:39:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "bindings/tcl/CMakeLists.txt" : {
      "ObjectId" : "f78de9f9cf73b75afff85b19d656c2da8d18259a",
      "LastModified" : "2016-11-08T12:39:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/modules/FindCheck.cmake" : {
      "ObjectId" : "8ed3739a4e2e3203248607373c2b048230215333",
      "LastModified" : "2016-11-08T12:39:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Look for the library.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set CHECK_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindEXPAT.cmake" : {
      "ObjectId" : "d48eef30b0464687d839e22715d330cdc1fdf887",
      "LastModified" : "2016-11-08T12:39:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find expat\n\n# Find the native EXPAT headers and libraries.\n\n#\n\n#  EXPAT_INCLUDE_DIRS - where to find expat.h, etc.\n\n#  EXPAT_LIBRARIES    - List of libraries when using expat.\n\n#  EXPAT_FOUND        - True if expat found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for the header file.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the library.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Copy the results to the output variables.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Report the results.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/modules/FindLZMA.cmake" : {
      "ObjectId" : "eb112dfff5a7aafdccd4854c06ea1bcd53ef5727",
      "LastModified" : "2016-11-08T12:39:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find lzma\n\n# Find the native LZMA headers and library\n\n#\n\n#  LZMA_INCLUDE_DIR    - where to find lzma.h, etc.\n\n#  LZMA_LIBRARIES      - List of libraries when using liblzma.\n\n#  LZMA_FOUND          - True if liblzma found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LZMA_FOUND to TRUE if \n\n# all listed variables are TRUE\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindLibSolv.cmake" : {
      "ObjectId" : "166e79dcd16202c369013027a81e6d47b4df481a",
      "LastModified" : "2016-11-08T12:39:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FindLibSolv - Find libsolv headers and libraries.\n\n#\n\n# Sample:\n\n#\n\n#   SET( LibSolv_USE_STATIC_LIBS OFF )\n\n#   FIND_PACKAGE( LibSolv REQUIRED ext )\n\n#   IF( LibSolv_FOUND )\n\n#      INCLUDE_DIRECTORIES( ${LibSolv_INCLUDE_DIRS} )\n\n#      TARGET_LINK_LIBRARIES( ... ${LibSolv_LIBRARIES} )\n\n#   ENDIF()\n\n#\n\n# Variables used by this module need to be set before calling find_package\n\n# (not that they are cmale cased like the modiulemane itself):\n\n#\n\n#   LibSolv_USE_STATIC_LIBS\tCan be set to ON to force the use of the static\n\n#\t\t\t\tlibsolv libraries. Defaults to OFF.\n\n#\n\n# Supported components:\n\n#\n\n#   ext\t\t\t\tAlso include libsolvext\n\n#\n\n# Variables provided by this module:\n\n#\n\n#   LibSolv_FOUND\t\tInclude dir, libsolv and all extra libraries\n\n#\t\t\t\tspecified in the COMPONENTS list were found.\n\n#\n\n#   LibSolv_LIBRARIES\t\tLink to these to use all the libraries you specified.\n\n#\n\n#   LibSolv_INCLUDE_DIRS\tInclude directories.\n\n#\n\n# For each component you specify in find_package(), the following (UPPER-CASE)\n\n# variables are set to pick and choose components instead of just using LibSolv_LIBRARIES:\n\n#\n\n#   LIBSOLV_FOUND\t\t\tTRUE if libsolv was found\n\n#   LIBSOLV_LIBRARY\t\t\tlibsolv libraries\n\n#\n\n#   LIBSOLV_${COMPONENT}_FOUND\t\tTRUE if the library component was found\n\n#   LIBSOLV_${COMPONENT}_LIBRARY\tThe libraries for the specified component\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Support preference of static libs by adjusting CMAKE_FIND_LIBRARY_SUFFIXES\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for the header files\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look for the core library\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Prepare return values and collectiong more components\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Look for components\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# restore CMAKE_FIND_LIBRARY_SUFFIXES\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake/modules/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "2fa8fbc014be7242f5d81c59121c7b30aaf59f42",
      "LastModified" : "2016-11-08T12:39:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(<name> ... )\n\n#\n\n# This function is intended to be used in FindXXX.cmake modules files.\n\n# It handles the REQUIRED, QUIET and version-related arguments to FIND_PACKAGE().\n\n# It also sets the <UPPERCASED_NAME>_FOUND variable.\n\n# The package is considered found if all variables <var1>... listed contain\n\n# valid results, e.g. valid filepaths.\n\n#\n\n# There are two modes of this function. The first argument in both modes is\n\n# the name of the Find-module where it is called (in original casing).\n\n#\n\n# The first simple mode looks like this:\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(<name> (DEFAULT_MSG|\"Custom failure message\") <var1>...<varN> )\n\n# If the variables <var1> to <varN> are all valid, then <UPPERCASED_NAME>_FOUND\n\n# will be set to TRUE.\n\n# If DEFAULT_MSG is given as second argument, then the function will generate\n\n# itself useful success and error messages. You can also supply a custom error message\n\n# for the failure case. This is not recommended.\n\n#\n\n# The second mode is more powerful and also supports version checking:\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME [REQUIRED_VARS <var1>...<varN>]\n\n#                                           [VERSION_VAR   <versionvar>]\n\n#                                           [HANDLE_COMPONENTS]\n\n#                                           [CONFIG_MODE]\n\n#                                           [FAIL_MESSAGE \"Custom failure message\"] )\n\n#\n\n# As above, if <var1> through <varN> are all valid, <UPPERCASED_NAME>_FOUND\n\n# will be set to TRUE.\n\n# After REQUIRED_VARS the variables which are required for this package are listed.\n\n# Following VERSION_VAR the name of the variable can be specified which holds\n\n# the version of the package which has been found. If this is done, this version\n\n# will be checked against the (potentially) specified required version used\n\n# in the find_package() call. The EXACT keyword is also handled. The default\n\n# messages include information about the required version and the version\n\n# which has been actually found, both if the version is ok or not.\n\n# If the package supports components, use the HANDLE_COMPONENTS option to enable\n\n# handling them. In this case, find_package_handle_standard_args() will report\n\n# which components have been found and which are missing, and the <NAME>_FOUND\n\n# variable will be set to FALSE if any of the required components (i.e. not the\n\n# ones listed after OPTIONAL_COMPONENTS) are missing.\n\n# Use the option CONFIG_MODE if your FindXXX.cmake module is a wrapper for\n\n# a find_package(... NO_MODULE) call.  In this case VERSION_VAR will be set\n\n# to <NAME>_VERSION and the macro will automatically check whether the\n\n# Config module was found.\n\n# Via FAIL_MESSAGE a custom failure message can be specified, if this is not\n\n# used, the default message will be displayed.\n\n#\n\n# Example for mode 1:\n\n#\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(LibXml2  DEFAULT_MSG  LIBXML2_LIBRARY LIBXML2_INCLUDE_DIR)\n\n#\n\n# LibXml2 is considered to be found, if both LIBXML2_LIBRARY and\n\n# LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.\n\n# If it is not found and REQUIRED was used, it fails with FATAL_ERROR,\n\n# independent whether QUIET was used or not.\n\n# If it is found, success will be reported, including the content of <var1>.\n\n# On repeated Cmake runs, the same message won't be printed again.\n\n#\n\n# Example for mode 2:\n\n#\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(BISON  REQUIRED_VARS BISON_EXECUTABLE\n\n#                                             VERSION_VAR BISON_VERSION)\n\n# In this case, BISON is considered to be found if the variable(s) listed\n\n# after REQUIRED_VAR are all valid, i.e. BISON_EXECUTABLE in this case.\n\n# Also the version of BISON will be checked by using the version contained\n\n# in BISON_VERSION.\n\n# Since no FAIL_MESSAGE is given, the default messages will be printed.\n\n#\n\n# Another example for mode 2:\n\n#\n\n#    FIND_PACKAGE(Automoc4 QUIET NO_MODULE HINTS /opt/automoc4)\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(Automoc4  CONFIG_MODE)\n\n# In this case, FindAutmoc4.cmake wraps a call to FIND_PACKAGE(Automoc4 NO_MODULE)\n\n# and adds an additional search directory for automoc4.\n\n# The following FIND_PACKAGE_HANDLE_STANDARD_ARGS() call produces a proper\n\n# success/error message.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2000-2009 Kitware, Inc., Insight Software Consortium\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# internal helper macro\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# internal helper macro to generate the failure message when used in CONFIG_MODE:\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# <name>_CONFIG is set, but FOUND is false, this means that some other of the REQUIRED_VARS was not found:\n",
        "Line" : 128,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# If _CONSIDERED_CONFIGS is set, the config-file has been found, but no suitable version.\n\n# List them all in the error message:\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Simple case: No Config-file was found at all:\n",
        "Line" : 146,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# set up the arguments for CMAKE_PARSE_ARGUMENTS and check whether we are in\n\n# new extended or in the \"old\" mode:\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# now that we collected all arguments, process them\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# In config-mode, we rely on the variable <package>_CONFIG, which is set by find_package()\n\n# when it successfully found the config-file, including version checking:\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# collect all variables which were not found, so they can be printed, so the\n\n# user knows better what went wrong (#6375)\n",
        "Line" : 203,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# check if all passed variables are valid\n",
        "Line" : 208,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# component handling\n",
        "Line" : 218,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# version handling:\n",
        "Line" : 249,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# exact version required\n",
        "Line" : 257,
        "CharPositionInLine" : 44
      },
      "15" : {
        "Text" : "# minimum version specified:\n",
        "Line" : 265,
        "CharPositionInLine" : 44
      },
      "16" : {
        "Text" : "# if the package was not found, but a version was given, add that to the output:\n",
        "Line" : 276,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# print the result:\n",
        "Line" : 297,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 18
    },
    "cmake/modules/FindRuby.cmake" : {
      "ObjectId" : "827a7a6530be1e3d4be74030eab4b0f4aff8af82",
      "LastModified" : "2016-11-08T12:39:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Ruby\n\n# This module finds if Ruby is installed and determines where the include files\n\n# and libraries are. Ruby 1.8 and 1.9 are supported.\n\n#\n\n# The minimum required version of Ruby can be specified using the\n\n# standard syntax, e.g. FIND_PACKAGE(Ruby 1.8)\n\n#\n\n# It also determines what the name of the library is. This\n\n# code sets the following variables:\n\n#\n\n#  RUBY_EXECUTABLE   = full path to the ruby binary\n\n#  RUBY_INCLUDE_DIRS = include dirs to be used when using the ruby library\n\n#  RUBY_LIBRARY      = full path to the ruby library\n\n#  RUBY_VERSION      = the version of ruby which was found, e.g. \"1.8.7\"\n\n#  RUBY_FOUND        = set to true if ruby ws found successfully\n\n#\n\n#  RUBY_INCLUDE_PATH = same as RUBY_INCLUDE_DIRS, only provided for compatibility reasons, don't use it\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2004-2009 Kitware, Inc.\n\n# Copyright 2008-2009 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#   RUBY_ARCHDIR=`$RUBY -r rbconfig -e 'printf(\"%s\",Config::CONFIG@<:@\"archdir\"@:>@)'`\n\n#   RUBY_SITEARCHDIR=`$RUBY -r rbconfig -e 'printf(\"%s\",Config::CONFIG@<:@\"sitearchdir\"@:>@)'`\n\n#   RUBY_SITEDIR=`$RUBY -r rbconfig -e 'printf(\"%s\",Config::CONFIG@<:@\"sitelibdir\"@:>@)'`\n\n#   RUBY_LIBDIR=`$RUBY -r rbconfig -e 'printf(\"%s\",Config::CONFIG@<:@\"libdir\"@:>@)'`\n\n#   RUBY_LIBRUBYARG=`$RUBY -r rbconfig -e 'printf(\"%s\",Config::CONFIG@<:@\"LIBRUBYARG_SHARED\"@:>@)'`\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# uncomment the following line to get debug output for this file\n\n# SET(_RUBY_DEBUG_OUTPUT TRUE)\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Determine the list of possible names of the ruby executable depending\n\n# on which version of ruby is required\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# if 1.9 is required, don't look for ruby18 and ruby1.8, default to version 1.8\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# if we want a version below 1.9, also look for ruby 1.8\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# query the ruby version\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# query the different directories\n",
        "Line" : 103,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "# site_ruby\n",
        "Line" : 110,
        "CharPositionInLine" : 3
      },
      "10" : {
        "Text" : "# vendor_ruby available ?\n",
        "Line" : 114,
        "CharPositionInLine" : 3
      },
      "11" : {
        "Text" : "# save the results in the cache so we don't have to run ruby the next time again\n",
        "Line" : 123,
        "CharPositionInLine" : 3
      },
      "12" : {
        "Text" : "# In case RUBY_EXECUTABLE could not be executed (e.g. cross compiling)\n\n# try to detect which version we found. This is not too good.\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# by default assume 1.8.0\n",
        "Line" : 157,
        "CharPositionInLine" : 3
      },
      "14" : {
        "Text" : "# check whether we found 1.9.x\n",
        "Line" : 161,
        "CharPositionInLine" : 3
      },
      "15" : {
        "Text" : "# if ruby > 1.8 is required or if ruby > 1.8 was found, search for the config.h dir\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Determine the list of possible names for the ruby library\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Set some variables for compatibility with previous version of this file\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "cmake/modules/_CMakeParseArguments.cmake" : {
      "ObjectId" : "712209469ffad6c105e3129bedceeecc7aabc6a2",
      "LastModified" : "2016-11-08T12:39:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMAKE_PARSE_ARGUMENTS(<prefix> <options> <one_value_keywords> <multi_value_keywords> args...)\n\n#\n\n# CMAKE_PARSE_ARGUMENTS() is intended to be used in macros or functions for\n\n# parsing the arguments given to that macro or function.\n\n# It processes the arguments and defines a set of variables which hold the\n\n# values of the respective options.\n\n#\n\n# The <options> argument contains all options for the respective macro,\n\n# i.e. keywords which can be used when calling the macro without any value\n\n# following, like e.g. the OPTIONAL keyword of the install() command.\n\n#\n\n# The <one_value_keywords> argument contains all keywords for this macro\n\n# which are followed by one value, like e.g. DESTINATION keyword of the\n\n# install() command.\n\n#\n\n# The <multi_value_keywords> argument contains all keywords for this macro\n\n# which can be followed by more than one value, like e.g. the TARGETS or\n\n# FILES keywords of the install() command.\n\n#\n\n# When done, CMAKE_PARSE_ARGUMENTS() will have defined for each of the\n\n# keywords listed in <options>, <one_value_keywords> and\n\n# <multi_value_keywords> a variable composed of the given <prefix>\n\n# followed by \"_\" and the name of the respective keyword.\n\n# These variables will then hold the respective value from the argument list.\n\n# For the <options> keywords this will be TRUE or FALSE.\n\n#\n\n# All remaining arguments are collected in a variable\n\n# <prefix>_UNPARSED_ARGUMENTS, this can be checked afterwards to see whether\n\n# your macro was called with unrecognized parameters.\n\n#\n\n# As an example here a my_install() macro, which takes similar arguments as the\n\n# real install() command:\n\n#\n\n#   function(MY_INSTALL)\n\n#     set(options OPTIONAL FAST)\n\n#     set(oneValueArgs DESTINATION RENAME)\n\n#     set(multiValueArgs TARGETS CONFIGURATIONS)\n\n#     cmake_parse_arguments(MY_INSTALL \"${options}\" \"${oneValueArgs}\" \"${multiValueArgs}\" ${ARGN} )\n\n#     ...\n\n#\n\n# Assume my_install() has been called like this:\n\n#   my_install(TARGETS foo bar DESTINATION bin OPTIONAL blub)\n\n#\n\n# After the cmake_parse_arguments() call the macro will have set the following\n\n# variables:\n\n#   MY_INSTALL_OPTIONAL = TRUE\n\n#   MY_INSTALL_FAST = FALSE (this option was not used when calling my_install()\n\n#   MY_INSTALL_DESTINATION = \"bin\"\n\n#   MY_INSTALL_RENAME = \"\" (was not used)\n\n#   MY_INSTALL_TARGETS = \"foo;bar\"\n\n#   MY_INSTALL_CONFIGURATIONS = \"\" (was not used)\n\n#   MY_INSTALL_UNPARSED_ARGUMENTS = \"blub\" (no value expected after \"OPTIONAL\"\n\n#\n\n# You can the continue and process these variables.\n\n#\n\n# Keywords terminate lists of values, e.g. if directly after a one_value_keyword\n\n# another recognized keyword follows, this is interpreted as the beginning of\n\n# the new option.\n\n# E.g. my_install(TARGETS foo DESTINATION OPTIONAL) would result in\n\n# MY_INSTALL_DESTINATION set to \"OPTIONAL\", but MY_INSTALL_DESTINATION would\n\n# be empty and MY_INSTALL_OPTIONAL would be set to TRUE therefor.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010 Alexander Neundorf <neundorf@kde.org>\n\n#\n\n# Copyright 2000-2009 Kitware, Inc., Insight Software Consortium\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n#   notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n#   notice, this list of conditions and the following disclaimer in the\n\n#   documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n#   nor the names of their contributors may be used to endorse or promote\n\n#   products derived from this software without specific prior written\n\n#   permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# first set all result variables to empty/FALSE\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# now iterate over all arguments and fill the result variables\n",
        "Line" : 120,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 122,
        "CharPositionInLine" : 57
      },
      "5" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 123,
        "CharPositionInLine" : 63
      },
      "6" : {
        "Text" : "# ... then this marks the end of the arguments belonging to this keyword\n",
        "Line" : 124,
        "CharPositionInLine" : 61
      },
      "7" : {
        "Text" : "# propagate the result variables to the caller:\n",
        "Line" : 154,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "ed38274ea5aa21f17d1efdecc9e2b9370fb97fd9",
      "LastModified" : "2019-03-30T17:08:22Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# prepend gen directory\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "703796cc47d43aa8fb529b4ad5055885824e3b33",
      "LastModified" : "2016-11-08T12:39:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/solv/CMakeLists.txt" : {
      "ObjectId" : "0f3bd4770de3b3f0c66e2a123341b6280e175f9f",
      "LastModified" : "2019-03-30T17:08:22Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "ext/CMakeLists.txt" : {
      "ObjectId" : "7c25535a7641261b262d878a356d74d172cc6ae6",
      "LastModified" : "2019-04-11T14:26:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# old cmake does not support parenthetical expressions...\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "f91c9c0ad391c92425bb8e6ceb787a2e2286fc64",
      "LastModified" : "2019-04-17T09:57:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "8a5cd8a5aa0b6726c6671999cfa2cd7eca26b4e3",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "tools/CMakeLists.txt" : {
      "ObjectId" : "f19030eb8c4a337a09a5d11dba9e4f184450983d",
      "LastModified" : "2019-04-11T14:26:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# CMakeLists.txt for tools\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "win32/CMakeLists.txt" : {
      "ObjectId" : "9a87af7bf36fd2dc07dfaeec56024ded00b0e3f0",
      "LastModified" : "2019-04-11T14:26:35Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 23
  },
  "ElapsedTime" : 2056
}