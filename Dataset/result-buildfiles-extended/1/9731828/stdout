{
  "Repository" : "9731828",
  "Revision" : "HEAD",
  "ObjectId" : "34e11c319eaedb7fc9b039ff86cf2dffb4f3b217",
  "CommitTime" : "2019-04-21T23:51:42Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "b19c961220486cdbb5e413a5244a4c34cce63547",
      "LastModified" : "2018-05-26T17:04:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# C for CheckIncludeFiles\n",
        "Line" : 2,
        "CharPositionInLine" : 24
      },
      "1" : {
        "Text" : "# for HAVE_MPROTECT, HAVE_SET_PRIORITY\n",
        "Line" : 5,
        "CharPositionInLine" : 29
      },
      "2" : {
        "Text" : "### options with safe-defaults (laid out like config.h.in)\n\n# Define if building universal (internal helper macro)\n\n# #undef AC_APPLE_UNIVERSAL_BUILD\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Compiling on BSD\n\n# #undef BSD\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TODO C_SDL_NET\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# set(PACKAGE \"dosbox-x\" CACHE STRING \"Name of package\")\n\n# set(PACKAGE_BUGREPORT \"https://github.com/joncampbell123/dosbox-x/issues\" CACHE STRING \"Define to the address where bug reports for this package should be sent\")\n\n# set(PACKAGE_NAME \"dosbox-x\" CACHE STRING \"Define to the full name of this package\")\n\n# set(PACKAGE_TARNAME \"dosbox-x\" CACHE STRING \"Define to the one symbol short name of this package\")\n\n# set(PACKAGE_URL \"http://dosbox-x.software\" CACHE STRING \"Define to the home page for this package\")\n\n# set(PACKAGE_VERSION \"0.821\" CACHE STRING \"Define to the version of this package\")\n\n# set(_FILE_OFFSET_BITS \"64\" CACHE STRING \"Number of bits in a file offset, on hosts where this is settable\")\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# solution filters in VS\n",
        "Line" : 161,
        "CharPositionInLine" : 45
      },
      "7" : {
        "Text" : "# suppresses default VS filters, desired but why official way fails ?\n",
        "Line" : 199,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# unistd.h, config.h\n",
        "Line" : 268,
        "CharPositionInLine" : 41
      },
      "9" : {
        "Text" : "# TODO fix dumb bios.cpp include syntax\n",
        "Line" : 269,
        "CharPositionInLine" : 25
      },
      "10" : {
        "Text" : "# TODO lazyflags in fpu_instructions.h\n",
        "Line" : 271,
        "CharPositionInLine" : 27
      },
      "11" : {
        "Text" : "# nasty hack (vcpkg-specific)\n",
        "Line" : 278,
        "CharPositionInLine" : 48
      },
      "12" : {
        "Text" : "# x86 intrinsic include in src/mt32/mmath.h fails on bare i686 target\n",
        "Line" : 281,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Always build static binaries on MinGW\n",
        "Line" : 286,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# create fake unistd.h\n",
        "Line" : 292,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# shim for _nhandle\n",
        "Line" : 299,
        "CharPositionInLine" : 33
      },
      "16" : {
        "Text" : "# DEBUG print what's going on inside CMake\n\n# get_cmake_property(_variableNames VARIABLES)\n\n# list (SORT _variableNames)\n\n# foreach (_variableName ${_variableNames})\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# message(STATUS \"${_variableName}=${${_variableName}}\")\n",
        "Line" : 373,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# endforeach()\n",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "Makefile.am" : {
      "ObjectId" : "27a9a9db6e1db48598e939b955d0cd57d94ac59f",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Main Makefile for DOSBox\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# this is where it gets ugly\r\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# and the libs too\r\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ----------\r\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# ----------\r\n",
        "Line" : 63,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# ----------\r\n",
        "Line" : 66,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 6
    },
    "chk/Makefile" : {
      "ObjectId" : "77e87f8a7b5a2e05886868b0064c0ff6107257ff",
      "LastModified" : "2014-05-20T15:24:07Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "experiments/iconv/Makefile" : {
      "ObjectId" : "f94ec6a2e40fdf1d9ea726382e52ea8c2f4eb881",
      "LastModified" : "2019-04-03T03:48:10Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "experiments/lua/Makefile" : {
      "ObjectId" : "5da276dc1e31dfb9b8e83d1f705e2add8d6b4b87",
      "LastModified" : "2019-03-18T01:32:32Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "include/CMakeLists.txt" : {
      "ObjectId" : "90f0fc0fdba40c982203d849819d5b8d7a46513c",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "include/Makefile.am" : {
      "ObjectId" : "8d986a315d666e2ff4f8104d3a13df82c8293f40",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "ref-static-makefiles/make_em/Makefile" : {
      "ObjectId" : "2328937ea4f308725d9840835c1ab810ec245b83",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# makefile for Emscripten SDL2\r\n\n# Emscripten version 1.38.12, clang version 6.0.1\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set it yourself if EMSCRIPTEN_ROOT not there\r\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#WebAssembly seemed to be a bit faster than asm.js\r\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Set maximum RAM that Emscripten use (in bytes).\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#TODO: make an EMTERPRETIFY_WHITELIST file.",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "ref-static-makefiles/make_mgw/Makefile" : {
      "ObjectId" : "3fe39144b45d0371bfa08246f6bc28f55e0683a9",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# makefile for mingw SDL2\r\n\n#   gcc version 6.3\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "0e78c178e90d55aed3ed574066488f82ff63a3c8",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \"${CMAKE_CURRENT_LIST_DIR}/Makefile.am\"\n",
        "Line" : 8,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/Makefile.am" : {
      "ObjectId" : "18d4fdba6355c4792e2d16ae6ccc997a5490a27d",
      "LastModified" : "2019-02-11T00:55:12Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/aviwriter/CMakeLists.txt" : {
      "ObjectId" : "2d8c0faf5db85e70e7bd4b92b288b99dcdd7b529",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \"${CMAKE_CURRENT_LIST_DIR}/Makefile.am\"\n",
        "Line" : 12,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/aviwriter/Makefile.am" : {
      "ObjectId" : "82816f7c30625e3f2ceab9f6d051a7443c19a273",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/builtin/CMakeLists.txt" : {
      "ObjectId" : "44eb581f6bf790772ba5f5b26cfd27100addb3d9",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \"${CMAKE_CURRENT_LIST_DIR}/Makefile.am\"\n",
        "Line" : 21,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/builtin/Makefile.am" : {
      "ObjectId" : "0ec939daea0451c542d8d88b41e89d7bf819ebad",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/cpu/CMakeLists.txt" : {
      "ObjectId" : "00627f70908dce36f8b72078a07f835b12d0d173",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \"${CMAKE_CURRENT_LIST_DIR}/Makefile.am\"\n",
        "Line" : 15,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/cpu/Makefile.am" : {
      "ObjectId" : "e7b0722c54ddd04422dd9e4d3926630cff417033",
      "LastModified" : "2019-04-11T03:24:22Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/cpu/core_dyn_x86/CMakeLists.txt" : {
      "ObjectId" : "1786d60f241af5166df7d2bc7d593205f4d4e1ad",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/cpu/core_dynrec/CMakeLists.txt" : {
      "ObjectId" : "129a617023fc99846540857cb1e5a08cda20a7ed",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \"${CMAKE_CURRENT_LIST_DIR}/Makefile\"\n\n# This is so that the solution folders appears in VS, delete it once done\n",
        "Line" : 3,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/cpu/core_dynrec/Makefile" : {
      "ObjectId" : "e6f54b29f87d37b6382677efeed3498531793573",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile.in generated by automake 1.13.1 from Makefile.am.\n\n# src/cpu/core_dynrec/Makefile.  Generated from Makefile.in by configure.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (C) 1994-2012 Free Software Foundation, Inc.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This Makefile.in is free software; the Free Software Foundation\n\n# gives unlimited permission to copy and/or distribute it,\n\n# with or without modifications, as long as this notice is preserved.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n\n# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n\n# PARTICULAR PURPOSE.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Read a list of newline-separated strings from the standard input,\n\n# and print each of them once, without duplicates.  Input order is\n\n# *not* preserved.\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Make sure the list of sources is unique.  This is necessary because,\n\n# e.g., the same source file might be shared among _SOURCES variables\n\n# for different programs/libraries.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -gt 0; then \\\n\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n\t      \"$$@\" $$unique; \\\n\t  else \\\n\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n\t      $$unique; \\\n\t  fi; \\\n\tfi\n",
        "Line" : 264,
        "CharPositionInLine" : 13
      },
      "7" : {
        "Text" : "# Tell versions [3.59,3.63) of GNU make to not export all variables.\n\n# Otherwise a system limit (for SysV at least) may be exceeded.\n",
        "Line" : 449,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/cpu/core_dynrec/Makefile.am" : {
      "ObjectId" : "f135543e8fc2a7e3ee72f7c1ea1bea680b66baf4",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/cpu/core_full/CMakeLists.txt" : {
      "ObjectId" : "7005621a4d4cef8bf5ab5f4c27601fa3478b8e22",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \"${CMAKE_CURRENT_LIST_DIR}/Makefile.am\"\n",
        "Line" : 6,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/cpu/core_full/Makefile.am" : {
      "ObjectId" : "f14506d1261ba32a8fb223f457d9b41c7c761db1",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/cpu/core_normal/CMakeLists.txt" : {
      "ObjectId" : "ef06a1e1b4466b1f7d00a8b07f381320ea95898f",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \"${CMAKE_CURRENT_LIST_DIR}/Makefile.am\"\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/cpu/core_normal/Makefile.am" : {
      "ObjectId" : "20c8ff4815d641a2ed80e45a2a75144c4e8a356a",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/debug/Makefile.am" : {
      "ObjectId" : "95cab04a1477217ac472b31f02f7e18c272d9850",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/dos/CMakeLists.txt" : {
      "ObjectId" : "58777582d68ab3f9694bb02bd3e6696d7c963f8e",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \"${CMAKE_CURRENT_LIST_DIR}/Makefile.am\"\n",
        "Line" : 34,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/dos/Makefile.am" : {
      "ObjectId" : "3bdfbf51bb59569bb882562676a5edcf68d2e5b9",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/fpu/CMakeLists.txt" : {
      "ObjectId" : "9299f033d2785b1098bfb2ac40acbf9c267d8271",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \"${CMAKE_CURRENT_LIST_DIR}/Makefile.am\"\n",
        "Line" : 5,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/fpu/Makefile.am" : {
      "ObjectId" : "a93f5d85eef5ff346004147648cda5ca46113cd2",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/gui/CMakeLists.txt" : {
      "ObjectId" : "40a3211759280fc39cc34f50abaa771ec9c6d27a",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \"${CMAKE_CURRENT_LIST_DIR}/Makefile.am\"\n",
        "Line" : 11,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/gui/Makefile.am" : {
      "ObjectId" : "f8763763b1dbf9a3dcf005cbbb6bef8bfedae159",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/hardware/CMakeLists.txt" : {
      "ObjectId" : "deecb0301f84ece99d62cbd945ddc199603cec1a",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \"${CMAKE_CURRENT_LIST_DIR}/Makefile.am\"\n",
        "Line" : 24,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/hardware/Makefile.am" : {
      "ObjectId" : "526f1e0b64e8588b8db2bba6f8bddbba4882ec3c",
      "LastModified" : "2019-03-11T07:07:30Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/hardware/parport/CMakeLists.txt" : {
      "ObjectId" : "f07194e1a3185c9346d51e48042f03d5a2833682",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \"${CMAKE_CURRENT_LIST_DIR}/Makefile.am\"\n",
        "Line" : 9,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/hardware/parport/Makefile.am" : {
      "ObjectId" : "e29e72bdf3b46c01a949acfac43b2caef14405da",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/hardware/reSID/CMakeLists.txt" : {
      "ObjectId" : "51a72b0bba0ac00938febf09a64ef2ecd6584f8d",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \"${CMAKE_CURRENT_LIST_DIR}/Makefile.am\"\n",
        "Line" : 9,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/hardware/reSID/Makefile.am" : {
      "ObjectId" : "a3562a3eea25d1dbc6579bb7d23e1e65cff39e7f",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/hardware/serialport/CMakeLists.txt" : {
      "ObjectId" : "10eb075cd9839d7940ffdcf585c22a66e4ca81c2",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \"${CMAKE_CURRENT_LIST_DIR}/Makefile.am\"\n",
        "Line" : 7,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/hardware/serialport/Makefile.am" : {
      "ObjectId" : "72d9b6306fc4715562c28c2b93e54e1bd36e9531",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/hardware/snd_pc98/cbus/CMakeLists.txt" : {
      "ObjectId" : "1332059425a622e8a41618b6f2ffbe367a5dca14",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \"${CMAKE_CURRENT_LIST_DIR}/amd98.c\"\n\n# \"${CMAKE_CURRENT_LIST_DIR}/amd98.h\"\n\n# \"${CMAKE_CURRENT_LIST_DIR}/board118.c\"\n\n# \"${CMAKE_CURRENT_LIST_DIR}/board118.h\"\n\n# \"${CMAKE_CURRENT_LIST_DIR}/board14.c\"\n\n# \"${CMAKE_CURRENT_LIST_DIR}/board14.h\"\n",
        "Line" : 2,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# \"${CMAKE_CURRENT_LIST_DIR}/boardpx.c\"\n\n# \"${CMAKE_CURRENT_LIST_DIR}/boardpx.h\"\n\n# \"${CMAKE_CURRENT_LIST_DIR}/boardspb.c\"\n\n# \"${CMAKE_CURRENT_LIST_DIR}/boardspb.h\"\n\n# \"${CMAKE_CURRENT_LIST_DIR}/boardx2.c\"\n\n# \"${CMAKE_CURRENT_LIST_DIR}/boardx2.h\"\n\n# \"${CMAKE_CURRENT_LIST_DIR}/cbuscore.c\"\n\n# \"${CMAKE_CURRENT_LIST_DIR}/cbuscore.h\"\n\n# \"${CMAKE_CURRENT_LIST_DIR}/CMakeLists.txt\"\n\n# \"${CMAKE_CURRENT_LIST_DIR}/cs4231io.c\"\n\n# \"${CMAKE_CURRENT_LIST_DIR}/cs4231io.h\"\n\n# \"${CMAKE_CURRENT_LIST_DIR}/pc9861k.c\"\n\n# \"${CMAKE_CURRENT_LIST_DIR}/pc9861k.h\"\n\n# \"${CMAKE_CURRENT_LIST_DIR}/pcm86io.c\"\n\n# \"${CMAKE_CURRENT_LIST_DIR}/pcm86io.h\"\n",
        "Line" : 12,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "src/hardware/snd_pc98/common/CMakeLists.txt" : {
      "ObjectId" : "298ef96cd8069fbacccfba62ab1112c9c53f7538",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/hardware/snd_pc98/generic/CMakeLists.txt" : {
      "ObjectId" : "9a7d21770a7f83ffa6b97c88cd5af893955afc4e",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/hardware/snd_pc98/sound/CMakeLists.txt" : {
      "ObjectId" : "ca7223a7ce1a59185ea91951de759ad271dada4b",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \"${CMAKE_CURRENT_LIST_DIR}/s98.c\"\n\n# \"${CMAKE_CURRENT_LIST_DIR}/s98.h\"\n\n# \"${CMAKE_CURRENT_LIST_DIR}/sndcsec.c\"\n\n# \"${CMAKE_CURRENT_LIST_DIR}/sndcsec.h\"\n",
        "Line" : 21,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/hardware/snd_pc98/sound/getsnd/CMakeLists.txt" : {
      "ObjectId" : "cb194e3f566ebc1c99f713d15132b667d4a44b4b",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \"${CMAKE_CURRENT_LIST_DIR}/getsndmn.mcr\"\n\n# \"${CMAKE_CURRENT_LIST_DIR}/getsndst.mcr\"\n",
        "Line" : 6,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/hardware/snd_pc98/x11/CMakeLists.txt" : {
      "ObjectId" : "9e148eedd39548606ec0e7eba70ad33e87af88f3",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ints/CMakeLists.txt" : {
      "ObjectId" : "4e323ab7df50eaef6caf05c055648641d4a5edaf",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \"${CMAKE_CURRENT_LIST_DIR}/Makefile.am\"\n",
        "Line" : 20,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/ints/Makefile.am" : {
      "ObjectId" : "86e8e7c118267f976e6b6bffd76014ad2ae19351",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/libs/CMakeLists.txt" : {
      "ObjectId" : "6aee6a99a0ffb3b45673704994ba41fe30b91dc2",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \"${CMAKE_CURRENT_LIST_DIR}/Makefile.am\"\n",
        "Line" : 3,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/libs/Makefile.am" : {
      "ObjectId" : "4b227a757005500746ea2b69b0c8885e59ed621d",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/libs/gui_tk/CMakeLists.txt" : {
      "ObjectId" : "4fde00aba65d8616a3e5106b91fb8a6cec398578",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \"${CMAKE_CURRENT_LIST_DIR}/Makefile.am\"\n",
        "Line" : 6,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/libs/gui_tk/Makefile.am" : {
      "ObjectId" : "e28160959848e569bde332339f4b980845204057",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/libs/porttalk/CMakeLists.txt" : {
      "ObjectId" : "ef644d0cbd2680916d80968b95f59727f8472592",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \"${CMAKE_CURRENT_LIST_DIR}/Makefile.am\"\n",
        "Line" : 3,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/libs/porttalk/Makefile.am" : {
      "ObjectId" : "c7f50aa483c24cd587bdf1e321bd1a35a6ad838f",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/libs/zmbv/CMakeLists.txt" : {
      "ObjectId" : "652cff22743221c8161f4467d2eda15a38a9c4fd",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \"${CMAKE_CURRENT_LIST_DIR}/Makefile.am\"\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# \"${CMAKE_CURRENT_LIST_DIR}/zmbv.cpp\"\n\n# \"${CMAKE_CURRENT_LIST_DIR}/zmbv.def\"\n",
        "Line" : 6,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# \"${CMAKE_CURRENT_LIST_DIR}/zmbv.inf\"\n\n# \"${CMAKE_CURRENT_LIST_DIR}/zmbv.sln\"\n\n# \"${CMAKE_CURRENT_LIST_DIR}/zmbv.vcproj\"\n",
        "Line" : 9,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# \"${CMAKE_CURRENT_LIST_DIR}/zmbv_vfw.rc\"\n",
        "Line" : 14,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "src/libs/zmbv/Makefile.am" : {
      "ObjectId" : "7715cf734b328f62befec3db11096b792578a3a3",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/misc/CMakeLists.txt" : {
      "ObjectId" : "8c67cc8e939c31af0aeab3c9b0cd72f01d555085",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \"${CMAKE_CURRENT_LIST_DIR}/Makefile.am\"\n",
        "Line" : 4,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/misc/Makefile.am" : {
      "ObjectId" : "1269d3c241c0529d0ba14fa6ca772fc4f8026308",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/mt32/CMakeLists.txt" : {
      "ObjectId" : "6a7aa79cea6545f585c92833ad9db8ea3a3aa0d8",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \"${CMAKE_CURRENT_LIST_DIR}/Makefile.am\"\n",
        "Line" : 21,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/mt32/Makefile.am" : {
      "ObjectId" : "d3d641e1cf19cf874d6e31729558fff0f2af353d",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/mt32/freeverb/CMakeLists.txt" : {
      "ObjectId" : "0a86511705ad27fdfd0b4a5772abbd76b4020b72",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/mt32/sha1/CMakeLists.txt" : {
      "ObjectId" : "46a7fef948b90a9f1e9633e6918e1623c7e59d43",
      "LastModified" : "2018-12-23T06:51:05Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/output/Makefile.am" : {
      "ObjectId" : "e2d08da87a21c924b3289eb915b916fe9dbf052b",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/output/direct3d/Makefile.am" : {
      "ObjectId" : "63cf1a569892fedc110f67ed0daf2a5b87a769eb",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/platform/CMakeLists.txt" : {
      "ObjectId" : "e1c9c139963806ad3e5d75917ada18cd37cbdff6",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \"${CMAKE_CURRENT_LIST_DIR}/Makefile.am\"\n",
        "Line" : 3,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/platform/Makefile.am" : {
      "ObjectId" : "6e3b2835293a820ac60b7a1270354056a317765b",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/shell/CMakeLists.txt" : {
      "ObjectId" : "74dd60e08d6898eed72accebafbaca1a05b01047",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \"${CMAKE_CURRENT_LIST_DIR}/Makefile.am\"\n",
        "Line" : 3,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/shell/Makefile.am" : {
      "ObjectId" : "772a0e9582f407dba3fbc1a66aedd2a1fabe95b6",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/xBRZ/Makefile.am" : {
      "ObjectId" : "6a5e0d179fb4d49a5c2acfc538e46384625fb223",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "vs2015/freetype/CMakeLists.txt" : {
      "ObjectId" : "ad8ded0bbdb4fa75f85f27ab4a949c0ea07e6c59",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Copyright 2013-2018 by\n\n# David Turner, Robert Wilhelm, and Werner Lemberg.\n\n#\n\n# Written originally by John Cary <cary@txcorp.com>\n\n#\n\n# This file is part of the FreeType project, and may only be used, modified,\n\n# and distributed under the terms of the FreeType project license,\n\n# LICENSE.TXT.  By continuing to use, modify, or distribute this file you\n\n# indicate that you have read the license and understand and accept it\n\n# fully.\n\n#\n\n#\n\n# The following will 1. create a build directory and 2. change into it and\n\n# call cmake to configure the build with default parameters as a static\n\n# library.\n\n#\n\n#   cmake -E make_directory build\n\n#   cmake -E chdir build cmake ..\n\n#\n\n# For a dynamic library, use\n\n#\n\n#   cmake -E chdir build cmake -D BUILD_SHARED_LIBS:BOOL=true ..\n\n#\n\n# For a framework on OS X, use\n\n#\n\n#   cmake -E chdir build cmake -G Xcode -D BUILD_FRAMEWORK:BOOL=true ..\n\n#\n\n# For an iOS static library, use\n\n#\n\n#   cmake -E chdir build cmake -G Xcode -D IOS_PLATFORM=OS ..\n\n#\n\n# or\n\n#\n\n#   cmake -E chdir build cmake -G Xcode -D IOS_PLATFORM=SIMULATOR ..\n\n#\n\n# Finally, build the project with:\n\n#\n\n#   cmake --build build\n\n#\n\n# Install it with\n\n#\n\n#   (sudo) cmake --build build --target install\n\n#\n\n# A binary distribution can be made with\n\n#\n\n#   cmake --build build --config Release --target package\n\n#\n\n# Please refer to the cmake manual for further options, in particular, how\n\n# to modify compilation and linking parameters.\n\n#\n\n# Some notes.\n\n#\n\n# . `cmake' creates configuration files in\n\n#\n\n#     <build-directory>/include/freetype/config\n\n#\n\n#   which should be further modified if necessary.\n\n#\n\n# . You can use `cmake' directly on a freshly cloned FreeType git\n\n#   repository.\n\n#\n\n# . `CMakeLists.txt' is provided as-is since it is normally not used by the\n\n#   developer team.\n\n#\n\n# . Set the `FT_WITH_ZLIB', `FT_WITH_BZIP2', `FT_WITH_PNG', and\n\n#   `FT_WITH_HARFBUZZ' CMake variables to `ON' to force using a dependency.\n\n#   Leave a variable undefined (which is the default) to use the dependency\n\n#   only if it is available.  Set `CMAKE_DISABLE_FIND_PACKAGE_HarfBuzz=TRUE' to\n\n#   disable a dependency completely (CMake package name, so `BZip2' instead of\n\n#   `BZIP2'). Example:\n\n#\n\n#     cmake -DFT_WITH_ZLIB=ON -DCMAKE_DISABLE_FIND_PACKAGE_HarfBuzz=TRUE [...]\n\n#\n\n# . Installation of FreeType can be controlled with the CMake variables\n\n#   `SKIP_INSTALL_HEADERS', `SKIP_INSTALL_LIBRARIES', and `SKIP_INSTALL_ALL'\n\n#   (this is compatible with the same CMake variables in zlib's CMake\n\n#   support).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FreeType explicitly marks the API to be exported and relies on the compiler\n\n# to hide all other symbols. CMake supports a C_VISBILITY_PRESET property\n\n# starting with 2.8.12.\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Allow symbol visibility settings also on static libraries. CMake < 3.3\n\n# only sets the propery on a shared library build.\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# CMAKE_TOOLCHAIN_FILE must be set before `project' is called, which\n\n# configures the base build environment and references the toolchain file\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# iOS only uses static libraries\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# SOVERSION scheme: CURRENT.AGE.REVISION\n\n#   If there was an incompatible interface change:\n\n#     Increment CURRENT. Set AGE and REVISION to 0\n\n#   If there was a compatible interface change:\n\n#     Increment AGE. Set REVISION to 0\n\n#   If the source code was changed, but there were no interface changes:\n\n#     Increment REVISION.\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# These options mean \"require x and complain if not found\". They'll get\n\n# optionally found anyway. Use `-DCMAKE_DISABLE_FIND_PACKAGE_x=TRUE` to disable\n\n# searching for a packge entirely (x is the CMake package name, so \"BZip2\"\n\n# instead of \"BZIP2\").\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Disallow in-source builds\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add local cmake modules\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Find dependencies\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Create the configuration file\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Create the options file\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Pick up ftconfig.h and ftoption.h generated above.\n",
        "Line" : 357,
        "CharPositionInLine" : 19
      },
      "13" : {
        "Text" : "# not BZIP2_INCLUDE_DIRS\n",
        "Line" : 390,
        "CharPositionInLine" : 68
      },
      "14" : {
        "Text" : "# Installation\n",
        "Line" : 406,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Note the trailing slash in the argument to `DIRECTORY'!\n",
        "Line" : 411,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Generate the pkg-config file\n",
        "Line" : 426,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# All libs support pkg-config\n",
        "Line" : 444,
        "CharPositionInLine" : 40
      },
      "18" : {
        "Text" : "# Packaging\n",
        "Line" : 470,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "vs2015/freetype/builds/cmake/FindHarfBuzz.cmake" : {
      "ObjectId" : "ee0d52e367e4519f3c7b244bfa2ccc3e9ca59692",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2012, Intel Corporation\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice, this\n\n#   list of conditions and the following disclaimer.\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n# * Neither the name of Intel Corporation nor the names of its contributors may\n\n#   be used to endorse or promote products derived from this software without\n\n#   specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n# Try to find Harfbuzz include and library directories.\n\n#\n\n# After successful discovery, this will set for inclusion where needed:\n\n# HARFBUZZ_INCLUDE_DIRS - containg the HarfBuzz headers\n\n# HARFBUZZ_LIBRARIES - containg the HarfBuzz library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Allows easy linking as in \n\n#   target_link_libraries(freetype PRIVATE Harfbuzz::Harfbuzz)\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "vs2015/freetype/builds/cmake/iOS.cmake" : {
      "ObjectId" : "c6da70c0c833c2e38ef36dbfa14d4da04dc0e60b",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# iOS.cmake\n\n#\n\n# Copyright 2014-2018 by\n\n# David Turner, Robert Wilhelm, and Werner Lemberg.\n\n#\n\n# Written by David Wimsey <david@wimsey.us>\n\n#\n\n# This file is part of the FreeType project, and may only be used, modified,\n\n# and distributed under the terms of the FreeType project license,\n\n# LICENSE.TXT.  By continuing to use, modify, or distribute this file you\n\n# indicate that you have read the license and understand and accept it\n\n# fully.\n\n#\n\n#\n\n# This file is derived from the files `Platform/Darwin.cmake' and\n\n# `Platform/UnixPaths.cmake', which are part of CMake 2.8.4.  It has been\n\n# altered for iOS development.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Options\n\n# -------\n\n#\n\n#   IOS_PLATFORM = OS | SIMULATOR\n\n#\n\n#     This decides whether SDKS are selected from the `iPhoneOS.platform' or\n\n#     `iPhoneSimulator.platform' folders.\n\n#\n\n#     OS - the default, used to build for iPhone and iPad physical devices,\n\n#       which have an ARM architecture.\n\n#     SIMULATOR - used to build for the Simulator platforms, which have an\n\n#       x86 architecture.\n\n#\n\n#   CMAKE_IOS_DEVELOPER_ROOT = /path/to/platform/Developer folder\n\n#\n\n#     By default, this location is automatically chosen based on the\n\n#     IOS_PLATFORM value above.  If you manually set this variable, it\n\n#     overrides the default location and forces the use of a particular\n\n#     Developer Platform.\n\n#\n\n#   CMAKE_IOS_SDK_ROOT = /path/to/platform/Developer/SDKs/SDK folder\n\n#\n\n#     By default, this location is automatically chosen based on the\n\n#     CMAKE_IOS_DEVELOPER_ROOT value.  In this case it is always the most\n\n#     up-to-date SDK found in the CMAKE_IOS_DEVELOPER_ROOT path.  If you\n\n#     manually set this variable, it forces the use of a specific SDK\n\n#     version.\n\n#\n\n#\n\n# Macros\n\n# ------\n\n#\n\n#   set_xcode_property (TARGET XCODE_PROPERTY XCODE_VALUE)\n\n#\n\n#     A convenience macro for setting Xcode specific properties on targets.\n\n#\n\n#     Example:\n\n#\n\n#       set_xcode_property(myioslib IPHONEOS_DEPLOYMENT_TARGET \"3.1\")\n\n#\n\n#   find_host_package (PROGRAM ARGS)\n\n#\n\n#     A macro to find executable programs on the host system, not within the\n\n#     iOS environment.  Thanks to the `android-cmake' project for providing\n\n#     the command.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# standard settings\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# required as of cmake 2.8.10\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# determine the cmake host system version so we know where to find the iOS\n\n# SDKs\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# skip the platform compiler checks for cross compiling\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# all iOS/Darwin specific settings - some may be redundant\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# hidden visibility is required for cxx on iOS\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# hack: If a new cmake (which uses CMAKE_INSTALL_NAME_TOOL) runs on an old\n\n#       build tree (where `install_name_tool' was hardcoded), and where\n\n#       CMAKE_INSTALL_NAME_TOOL isn't in the cache and still cmake didn't\n\n#       fail in `CMakeFindBinUtils.cmake' (because it isn't rerun), hardcode\n\n#       CMAKE_INSTALL_NAME_TOOL here to `install_name_tool' so it behaves as\n\n#       it did before.\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# set up iOS platform unless specified manually with IOS_PLATFORM\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# check the platform selection and setup for developer root\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# this causes the installers to properly locate the output libraries\n",
        "Line" : 152,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# this causes the installers to properly locate the output libraries\n",
        "Line" : 158,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# set up iOS developer location unless specified manually with\n\n# CMAKE_IOS_DEVELOPER_ROOT --\n\n# note that Xcode 4.3 changed the installation location; choose the most\n\n# recent one available\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# find and use the most recent iOS SDK unless specified manually with\n\n# CMAKE_IOS_SDK_ROOT\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# set the sysroot default to the most recent SDK\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# set the architecture for iOS --\n\n# note that currently both ARCHS_STANDARD_32_BIT and\n\n# ARCHS_UNIVERSAL_IPHONE_OS set armv7 only, so set both manually\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# set the find root to the iOS developer roots and to user defined paths\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# default to searching for frameworks first\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# set up the default search directories for frameworks\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# only search the iOS SDKs, not the remainder of the host filesystem\n",
        "Line" : 244,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# this little macro lets you set any Xcode specific property\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# this macro lets you find executable programs on the host system\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# eof\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "vs2015/libpng/CMakeLists.txt" : {
      "ObjectId" : "48c6fa2879503e2c3cb38d4c9ce3af21271dda6c",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (C) 2007,2009-2017 Glenn Randers-Pehrson\n\n# Written by Christian Ehrlicher, 2007\n\n# Revised by Roger Lowman, 2009-2010\n\n# Revised by Clifford Yapp, 2011-2012\n\n# Revised by Roger Leigh, 2016\n\n# Revised by Andreas Franek, 2016\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This code is released under the libpng license.\n\n# For conditions of distribution and use, see the disclaimer\n\n# and license in png.h\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set MacOSX @rpath usage globally.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use new variable expansion policy.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# needed packages\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Allow users to specify location of Zlib,\n\n# Useful if zlib is being built alongside this as a sub-project\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# not needed on windows\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# COMMAND LINE OPTIONS\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Many more configuration options could be added here\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# set definitions and sources for arm\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# set definitions and sources for powerpc\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# set definitions and sources for intel\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# set definitions and sources for MIPS\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# SET LIBNAME\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# to distinguish between debug and release lib\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Check if LD supports linker scripts.\n",
        "Line" : 198,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Find symbol prefix.  Likely obsolete and unnecessary with recent\n\n# toolchains (it's not done in many other projects).\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# No awk available to generate sources; use pre-built pnglibconf.h\n",
        "Line" : 266,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Dummy\n",
        "Line" : 269,
        "CharPositionInLine" : 30
      },
      "20" : {
        "Text" : "# Generate .chk from .out with awk\n\n# generate_chk(INPUT inputfile OUTPUT outputfile [DEPENDS dep1 [dep2...]])\n",
        "Line" : 272,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Generate .out from .c with awk\n\n# generate_out(INPUT inputfile OUTPUT outputfile [DEPENDS dep1 [dep2...]])\n",
        "Line" : 295,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Generate specific source file with awk\n\n# generate_source(OUTPUT outputfile [DEPENDS dep1 [dep2...]])\n",
        "Line" : 318,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Copy file\n",
        "Line" : 337,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Generate scripts/pnglibconf.h\n",
        "Line" : 346,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Generate pnglibconf.c\n",
        "Line" : 352,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Generate pnglibconf.h\n",
        "Line" : 369,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Generate pngprefix.h\n",
        "Line" : 384,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# A single target handles generation of all generated files.  If\n\n# they are dependend upon separately by multiple targets, this\n\n# confuses parallel make (it would require a separate top-level\n\n# target for each file to track the dependencies properly).\n",
        "Line" : 426,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# OUR SOURCES\n",
        "Line" : 446,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# NOW BUILD OUR TARGET\n",
        "Line" : 514,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# msvc does not append 'lib' - do it here to have consistent name\n",
        "Line" : 525,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# does not work without changing name\n",
        "Line" : 543,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# MSVC doesn't use a different file extension for shared vs. static\n\n# libs.  We are able to change OUTPUT_NAME to remove the _static\n\n# for all other platforms.\n",
        "Line" : 547,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# msvc does not append 'lib' - do it here to have consistent name\n",
        "Line" : 561,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# have generator expressions\n",
        "Line" : 613,
        "CharPositionInLine" : 36
      },
      "36" : {
        "Text" : "# old 2.x add_test; limited and won't work well on Windows\n",
        "Line" : 619,
        "CharPositionInLine" : 9
      },
      "37" : {
        "Text" : "# Note LIBPNG is a dummy value as there are no generator expressions\n",
        "Line" : 620,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Find test PNG files by globbing, but sort lists to ensure\n\n# consistency between different filesystems.\n",
        "Line" : 629,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# Should already be sorted, but sort anyway to be certain.\n",
        "Line" : 721,
        "CharPositionInLine" : 6
      },
      "40" : {
        "Text" : "# Set a variable with CMake code which:\n\n# Creates a symlink from src to dest (if possible) or alternatively\n\n# copies if different.\n",
        "Line" : 758,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# If we don't need to symlink something that's coming from a build target,\n\n# we can go ahead and symlink/copy at configure time.\n",
        "Line" : 776,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# We need to use generator expressions, which can be a bit tricky, so for\n\n# simplicity make the symlink a POST_BUILD step and use the TARGET\n\n# signature of add_custom_command.\n",
        "Line" : 793,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# Create source generation scripts.\n",
        "Line" : 811,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# libpng is a library so default to 'lib'\n",
        "Line" : 820,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# CREATE PKGCONFIG FILES\n\n# we use the same files like ./configure, so we have to set its vars\n\n# Only do this on Windows for Cygwin - the files don't make much sense outside\n\n# a UNIX look alike\n",
        "Line" : 825,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# SET UP LINKS\n",
        "Line" : 844,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#   VERSION 16.${PNGLIB_RELEASE}.1.6.34\n",
        "Line" : 847,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# If CMake > 2.4.x, we set a variable used below to export\n\n# targets to an export file.\n\n# TODO: Use VERSION_GREATER after our cmake_minimum_required >= 2.6.2\n",
        "Line" : 853,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# future proof\n",
        "Line" : 858,
        "CharPositionInLine" : 38
      },
      "50" : {
        "Text" : "# INSTALL\n",
        "Line" : 862,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Create a symlink for libpng.dll.a => libpng16.dll.a on Cygwin\n",
        "Line" : 872,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "# Install man pages\n",
        "Line" : 910,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# Install pkg-config files\n",
        "Line" : 916,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# On versions of CMake that support it, create an export file CMake\n\n# users can include() to import our targets\n",
        "Line" : 929,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# what's with libpng-manual.txt and all the extra files?\n",
        "Line" : 935,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# UNINSTALL\n\n# do we need this?\n",
        "Line" : 937,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# DIST\n\n# do we need this?\n",
        "Line" : 940,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# to create msvc import lib for mingw compiled shared lib\n\n# pexports libpng.dll > libpng.def\n\n# lib /def:libpng.def /machine:x86\n",
        "Line" : 943,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 59
    },
    "vs2015/libpng/Makefile.am" : {
      "ObjectId" : "08db3e5990940045df9c1c7f784c276e2f309fc5",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am, the source file for Makefile.in (and hence Makefile), is\n\n#\n\n# Copyright (c) 2004-2016 Glenn Randers-Pehrson\n\n# Last changed in libpng 1.6.25 [September 1, 2016]\n\n#\n\n# This code is released under the libpng license.\n\n# For conditions of distribution and use, see the disclaimer\n\n# and license in png.h\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# test programs - run on make check, make distcheck\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Utilities - installed\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This ensures that pnglibconf.h gets built at the start of 'make all' or\n\n# 'make check', but it does not add dependencies to the individual programs,\n\n# this is done below.\n\n#\n\n# IMPORTANT: always add the object modules of new programs to the list below\n\n# because otherwise the sequence 'configure; make new-program' will *sometimes*\n\n# result in the installed (system) pnglibconf.h being used and the result is\n\n# always wrong and always very confusing.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Generally these are single line shell scripts to run a test with a particular\n\n# set of parameters:\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# man pages\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# generate the -config scripts if required\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# rules to build libpng, only build the old library on request\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# EXTRA_LTLIBRARIES= libpng.la\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#   Versioned symbols and restricted exports\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#   Only restricted exports when possible\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#distribute headers in /usr/include/libpng/*\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# pkg-config stuff, note that libpng.pc is always required in order\n\n# to get the correct library\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Extra source distribution files, '${srcdir}' is used below to stop build files\n\n# from those directories being included.  This only works if the configure is\n\n# not done in the source directory!\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# PNG_COPTS give extra options for the C compiler to be used on all compilation\n\n# steps (unless targe_CFLAGS is specified; that will take precedence over\n\n# AM_CFLAGS)\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# DFNCPP is normally just CPP - the C preprocessor - but on Solaris and maybe\n\n# other operating systems (NeXT?) the C preprocessor selected by configure\n\n# checks input tokens for validity - effectively it performs part of the ANSI-C\n\n# parsing - and therefore fails with the .df files.  configure.ac has special\n\n# checks for this and sets DFNCPP appropriately.\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Rename functions in scripts/prefix.out with a PNG_PREFIX prefix.\n\n# Rename macros in scripts/macro.lst from PNG_PREFIXpng_ to PNG_ (the actual\n\n# implementation of the macro).\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# is empty\n",
        "Line" : 223,
        "CharPositionInLine" : 13
      },
      "18" : {
        "Text" : "# The following is necessary to ensure that the local pnglibconf.h is used, not\n\n# an installed one (this can happen immediately after on a clean system if\n\n# 'make test' is the first thing the user does.)  Only files which include\n\n# one of the png source files (typically png.h or pngpriv.h) need to be listed\n\n# here:\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# We must use -DPNG_NO_USE_READ_MACROS here even when the library may actually\n\n# be built with PNG_USE_READ_MACROS; this prevents the read macros from\n\n# interfering with the symbol file format.\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# The .c file for pnglibconf.h is machine generated\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Symbol checks (.def and .out files should match)\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# used on demand to regenerate the standard header, CPPFLAGS should\n\n# be empty - no non-standard defines\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Extra checks\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Don't distribute the generated script files\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Make links between installed files with release-specific names and the generic\n\n# file names.  If this install rule is run the generic names will be deleted and\n\n# recreated - this has obvious issues for systems with multiple installations.\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# EXT_LIST is a list of the possibly library directory extensions, this exists\n\n# because we can't find a good way of discovering the file extensions that are\n\n# actually installed on a given system, so instead we check for every extension\n\n# we have seen.\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# If --enable-unversioned-links is specified the header and lib file links\n\n# will be automatically made on a 'make install':\n",
        "Line" : 366,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Likewise, --install-pc causes libpng.pc to be constructed:\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# And --install-config:\n",
        "Line" : 383,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# The following addition ensures that 'make all' always builds the test programs\n\n# too.  It used to, but some change either in libpng or configure stopped this\n\n# working.\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "vs2015/sdl/src/main/macos/exports/Makefile" : {
      "ObjectId" : "5f37ae0760c14dd475d5cda17e4968a5b51554df",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "vs2015/sdl/src/video/ps3/spulibs/Makefile" : {
      "ObjectId" : "dc580d94360c1505db233f34165ec2862f16b52e",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This Makefile is for building the CELL BE SPU libs\n\n# libfb_writer_spu.so, libyuv2rgb_spu.so, libbilin_scaler_spu.so\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Toolchain\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Usually /usr/lib, depending on your distribution\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# fb_writer\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# yuv2rgb_converter\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# bilin_scaler\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "vs2015/sdl2/CMakeLists.txt" : {
      "ObjectId" : "0128c7ac7d3e6aaa5cd614f2305f43ab95ee77d2",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# !!! FIXME: this should probably do \"MACOSX_RPATH ON\" as a target property\n\n# !!! FIXME:  for the SDL2 shared library (so you get an\n\n# !!! FIXME:  install_name (\"soname\") of \"@rpath/libSDL-whatever.dylib\"\n\n# !!! FIXME:  instead of \"/usr/local/lib/libSDL-whatever.dylib\"), but I'm\n\n# !!! FIXME:  punting for now and leaving the existing behavior. Until this\n\n# !!! FIXME:  properly resolved, this line silences a warning in CMake 3.0+.\n\n# !!! FIXME:  remove it and this comment entirely once the problem is\n\n# !!! FIXME:  properly resolved.\n\n#cmake_policy(SET CMP0042 OLD)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# General settings\n\n# Edit include/SDL_version.h and change the version, then:\n\n#   SDL_MICRO_VERSION += 1;\n\n#   SDL_INTERFACE_AGE += 1;\n\n#   SDL_BINARY_AGE += 1;\n\n# if any functions have been added, set SDL_INTERFACE_AGE to 0.\n\n# if backwards compatibility has been broken,\n\n# set SDL_BINARY_AGE and SDL_INTERFACE_AGE to 0.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the following should match the versions in Xcode project file:\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set defaults preventing destination file conflicts\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Calculate a libtool-like version number\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# General settings & flags\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Check for 64 or 32 bit\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Get the platform\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# TODO: iOS?\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Don't mistake osx for unix\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# JavaScript does not yet have threading support, so disable pthreads when building for Emscripten.\n",
        "Line" : 142,
        "CharPositionInLine" : 40
      },
      "11" : {
        "Text" : "# Default option knobs\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Compiler info\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# VisualStudio 8.0+\n",
        "Line" : 165,
        "CharPositionInLine" : 34
      },
      "14" : {
        "Text" : "#set(CMAKE_C_FLAGS \"/ZI /WX- /\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Default flags, if not set otherwise\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Hackish, but does the trick on Win32\n",
        "Line" : 187,
        "CharPositionInLine" : 37
      },
      "17" : {
        "Text" : "# Make sure /RTC1 is disabled, otherwise it will use functions from the CRT\n",
        "Line" : 203,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Those are used for pkg-config and friends, so that the SDL2.pc, sdl2-config,\n\n# etc. are created correctly.\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# When building shared lib for Windows with MinGW,\n\n# avoid the DLL having a \"lib\" prefix\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Emscripten toolchain has a nonempty default value for this, and the checks\n\n# in this file need to change that, so remember the original value, and\n\n# restore back to that afterwards. For check_function_exists() to work in\n\n# Emscripten, this value must be at its default value.\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# We build SDL on cygwin without the UNIX emulation layer\n",
        "Line" : 229,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# General includes\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# All these ENABLED_BY_DEFAULT vars will default to ON if not specified, so\n\n#  you only need to have a platform override them if they are disabling.\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Set up default values for the currently supported set of subsystems:\n\n# Emscripten/Javascript does not have assembly support, a dynamic library\n\n# loading architecture, low-level CPU inspection or multithreading.\n",
        "Line" : 255,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "#set_option(DEPENDENCY_TRACKING \"Use gcc -MMD -MT dependency tracking\" ON)\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# TODO: We should (should we?) respect cmake's ${BUILD_SHARED_LIBS} flag here\n\n# The options below are for compatibility to configure's default behaviour.\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# General source files\n",
        "Line" : 355,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Do nada - use optimization settings to determine the assertion level\n",
        "Line" : 375,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Compiler option evaluation\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Check for -Wall first, so later things can override pieces of it.\n",
        "Line" : 391,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# TODO: Those all seem to be quite GCC specific - needs to be\n\n# reworked for better compiler support\n",
        "Line" : 472,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# if only HAVE_ALTIVEC_H_HDR is set\n",
        "Line" : 613,
        "CharPositionInLine" : 31
      },
      "33" : {
        "Text" : "# TODO: SDL_cpuinfo.h needs to support the user's configuration wish\n\n# for MSVC - right now it is always activated\n",
        "Line" : 622,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# TODO:\n\n#else()\n\n#  if(USE_GCC OR USE_CLANG)\n\n#    list(APPEND EXTRA_CFLAGS \"-mno-sse\" \"-mno-sse2\" \"-mno-sse3\" \"-mno-mmx\")\n\n#  endif()\n",
        "Line" : 633,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# TODO: Can't deactivate on FreeBSD? w/o LIBC, SDL_stdinc.h can't define\n\n# anything.\n",
        "Line" : 640,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# needed for M_PI\n",
        "Line" : 667,
        "CharPositionInLine" : 41
      },
      "37" : {
        "Text" : "# TODO: refine the mprotect check\n",
        "Line" : 683,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Enable/disable various subsystems of the SDL library\n",
        "Line" : 739,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Haptic requires some private functions from the joystick subsystem.\n",
        "Line" : 752,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# TODO: in configure.in, the test for LOADSO and SDL_DLOPEN is a bit weird:\n\n# if LOADSO is not wanted, SDL_LOADSO_DISABLED is set\n\n# If however on Unix or APPLE dlopen() is detected via CheckDLOPEN(),\n\n# SDL_LOADSO_DISABLED will not be set, regardless of the LOADSO settings\n",
        "Line" : 766,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# General SDL subsystem options, valid for all platforms\n",
        "Line" : 771,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# CheckDummyAudio/CheckDiskAudio - valid for all platforms\n",
        "Line" : 773,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# Relevant for Unix/Darwin only\n",
        "Line" : 789,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# SDL_spinlock.c Needs to be compiled in ARM mode.\n\n# There seems to be no better way currently to set the ARM mode.\n\n# see: https://issuetracker.google.com/issues/62264618\n\n# Another option would be to set ARM mode to all compiled files\n",
        "Line" : 809,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# Core stuff\n",
        "Line" : 875,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "#enable gles\n",
        "Line" : 882,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "# Platform-specific options and settings\n",
        "Line" : 913,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Hide noisy warnings that intend to aid mostly during initial stages of porting a new\n\n# project. Uncomment at will for verbose cross-compiling -I/../ path info.\n",
        "Line" : 915,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "#enable gles\n",
        "Line" : 958,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# Need to check for Raspberry PI first and add platform specific compiler flags, otherwise the test for GLES fails!\n",
        "Line" : 997,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# We've already found the header, so REQUIRE the lib to be present\n",
        "Line" : 1068,
        "CharPositionInLine" : 8
      },
      "52" : {
        "Text" : "# seems to be BSD specific - limit the test to BSD only?\n",
        "Line" : 1089,
        "CharPositionInLine" : 20
      },
      "53" : {
        "Text" : "# Prevent codegen that would use the VC runtime libraries.\n",
        "Line" : 1170,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# Check for DirectX\n",
        "Line" : 1177,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# xinput.h may need windows.h, but doesn't include it itself.\n",
        "Line" : 1190,
        "CharPositionInLine" : 6
      },
      "56" : {
        "Text" : "# TODO: change $ENV{DXSDL_DIR} to get the path from the include checks\n",
        "Line" : 1218,
        "CharPositionInLine" : 6
      },
      "57" : {
        "Text" : "# headers needed elsewhere ...\n",
        "Line" : 1226,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# requires SDL_LOADSO on Windows (IME, DX, etc.)\n",
        "Line" : 1251,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "# Libraries for Win32 native and MinGW\n",
        "Line" : 1294,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# TODO: in configure.in the check for timers is set on\n\n# cygwin | mingw32* - does this include mingw32CE?\n",
        "Line" : 1297,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# TODO: rework this all for proper MacOS X, iOS and Darwin support\n",
        "Line" : 1379,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# We always need these libs on macOS at the moment.\n\n# !!! FIXME: we need Carbon for some very old API calls in\n\n# !!! FIXME:  src/video/cocoa/SDL_cocoakeyboard.c, but we should figure out\n\n# !!! FIXME:  how to dump those.\n",
        "Line" : 1381,
        "CharPositionInLine" : 2
      },
      "63" : {
        "Text" : "# Requires the darwin file implementation\n",
        "Line" : 1390,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "# !!! FIXME: modern CMake doesn't need \"LANGUAGE C\" for Objective-C.\n",
        "Line" : 1394,
        "CharPositionInLine" : 4
      },
      "65" : {
        "Text" : "# !!! FIXME: why is COREVIDEO inside this if() block?\n",
        "Line" : 1397,
        "CharPositionInLine" : 4
      },
      "66" : {
        "Text" : "# !!! FIXME: modern CMake doesn't need \"LANGUAGE C\" for Objective-C.\n",
        "Line" : 1406,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "# !!! FIXME: modern CMake doesn't need \"LANGUAGE C\" for Objective-C.\n",
        "Line" : 1466,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "# Actually load the frameworks at the end so we don't duplicate include.\n",
        "Line" : 1472,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# iOS hack needed - http://code.google.com/p/ios-cmake/ ?\n",
        "Line" : 1502,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "# TODO: Use FIND_PACKAGE(OpenGL) instead\n",
        "Line" : 1547,
        "CharPositionInLine" : 6
      },
      "71" : {
        "Text" : "# Dummies\n\n# configure.in does it differently:\n\n# if not have X\n\n#   if enable_X {  SDL_X_DISABLED = 1 }\n\n#   [add dummy sources]\n\n# so it always adds a dummy, without checking, if it was actually requested.\n\n# This leads to missing internal references on building, since the\n\n# src/X/*.c does not get included.\n",
        "Line" : 1564,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# results in unresolved symbols on OSX\n",
        "Line" : 1574,
        "CharPositionInLine" : 33
      },
      "73" : {
        "Text" : "# We always need to have threads and timers around\n",
        "Line" : 1601,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Append the -MMD -MT flags\n\n# if(DEPENDENCY_TRACKING)\n\n#   if(COMPILER_IS_GNUCC)\n\n#     set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -MMD -MT \\$@\")\n\n#   endif()\n\n# endif()\n",
        "Line" : 1617,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Prepare the flags and remove duplicates\n",
        "Line" : 1627,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Compat helpers for the configuration files\n",
        "Line" : 1640,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# TODO: we need a Windows script, too\n",
        "Line" : 1642,
        "CharPositionInLine" : 2
      },
      "78" : {
        "Text" : "# Clean up the different lists\n",
        "Line" : 1665,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "# MESSAGE(STATUS \"SDL_LIBS: ${SDL_LIBS}\")\n\n# MESSAGE(STATUS \"SDL_STATIC_LIBS: ${SDL_STATIC_LIBS}\")\n",
        "Line" : 1674,
        "CharPositionInLine" : 2
      },
      "80" : {
        "Text" : "##### Info output #####\n",
        "Line" : 1687,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Longest option is VIDEO_X11_XSCREENSAVER = 22 characters\n\n# Get the padding\n",
        "Line" : 1704,
        "CharPositionInLine" : 2
      },
      "82" : {
        "Text" : "# Ensure that the extra cflags are used at compile time\n",
        "Line" : 1730,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Always build SDLmain\n",
        "Line" : 1733,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Don't try to link with the default set of libraries.\n",
        "Line" : 1759,
        "CharPositionInLine" : 4
      },
      "85" : {
        "Text" : "# Note: Apparently, OUTPUT_NAME must really be unique; even when\n\n# CMAKE_IMPORT_LIBRARY_SUFFIX or the like are given. Otherwise\n\n# the static build may race with the import lib and one will get\n\n# clobbered, when the suffix is realized via subsequent rename.\n",
        "Line" : 1777,
        "CharPositionInLine" : 4
      },
      "86" : {
        "Text" : "# TODO: Win32 platforms keep the same suffix .lib for import and static\n\n# libraries - do we need to consider this?\n",
        "Line" : 1788,
        "CharPositionInLine" : 2
      },
      "87" : {
        "Text" : "##### Tests #####\n",
        "Line" : 1798,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "##### Installation targets #####\n",
        "Line" : 1807,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "##### Export files #####\n",
        "Line" : 1813,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# \".so\", \".dylib\", etc.\n",
        "Line" : 1859,
        "CharPositionInLine" : 46
      },
      "91" : {
        "Text" : "# FreeBSD uses ${PREFIX}/libdata/pkgconfig\n",
        "Line" : 1870,
        "CharPositionInLine" : 4
      },
      "92" : {
        "Text" : "# TODO: what about the .spec file? Is it only needed for RPM creation?\n",
        "Line" : 1877,
        "CharPositionInLine" : 2
      },
      "93" : {
        "Text" : "##### Uninstall target #####\n",
        "Line" : 1881,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 94
    },
    "vs2015/sdl2/SDL2Config.cmake" : {
      "ObjectId" : "4a5f646020ef4c415e082c799932104c37ddaa3a",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vs2015/sdl2/android-project/app/proguard-rules.pro" : {
      "ObjectId" : "eaf0e916cdf0b2a92e4ad3c261f620b2f0f50dbb",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in [sdk]/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "vs2015/sdl2/cmake/macros.cmake" : {
      "ObjectId" : "96a7ce8b1406692acaf32a25d9c864da3f94cb45",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Message Output\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# prefix for each element\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Do not use string(REPLACE \";\" \" \") here to avoid messing up list\n\n# entries\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "vs2015/sdl2/cmake/sdlchecks.cmake" : {
      "ObjectId" : "4a2c3ed57856e3a43ab48f5f7cd40db9c4b7043b",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# reduce the library name for shared linking\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# resolves symlinks\n",
        "Line" : 9,
        "CharPositionInLine" : 69
      },
      "2" : {
        "Text" : "# Requires:\n\n# - n/a\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - ALSA_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - PULSEAUDIO_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - JACK_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - ESD_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - ARTS_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# TODO\n",
        "Line" : 243,
        "CharPositionInLine" : 10
      },
      "9" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - NAS_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# TODO: set include paths properly, so the NAS headers are found\n",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - SNDIO_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# TODO: set include paths properly, so the sndio headers are found\n",
        "Line" : 294,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - FUSIONSOUND_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Requires:\n\n# - LIBSAMPLERATE\n\n# Optional:\n\n# - LIBSAMPLERATE_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - X11_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Check for multitouch\n",
        "Line" : 510,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Requires:\n\n# - EGL\n\n# - PkgCheckModules\n\n# Optional:\n\n# - MIR_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Requires:\n\n# - EGL\n\n# - PkgCheckModules\n\n# Optional:\n\n# - WAYLAND_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 628,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# We have to generate some protocol interface code for some unstable Wayland features.\n",
        "Line" : 665,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# Requires:\n\n# - n/a\n\n#\n",
        "Line" : 702,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Apple always has Cocoa.\n",
        "Line" : 707,
        "CharPositionInLine" : 14
      },
      "22" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - DIRECTFB_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 720,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Requires:\n\n# - n/a\n",
        "Line" : 751,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Requires:\n\n# - nada\n",
        "Line" : 781,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Requires:\n\n# - nada\n",
        "Line" : 799,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Requires:\n\n# - nada\n\n# Optional:\n\n# - THREADS opt\n\n# Sets:\n\n# PTHREAD_CFLAGS\n\n# PTHREAD_LIBS\n",
        "Line" : 832,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# the android libc provides built-in support for pthreads, so no\n\n# additional linking or compile flags are necessary\n",
        "Line" : 842,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# causes Carbon.p complaints?\n\n# set(PTHREAD_CFLAGS \"-D_REENTRANT -D_THREAD_SAFE\")\n",
        "Line" : 852,
        "CharPositionInLine" : 6
      },
      "29" : {
        "Text" : "# Run some tests\n",
        "Line" : 884,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# Can be faked, if necessary\n\n# Can be faked, if necessary\n",
        "Line" : 951,
        "CharPositionInLine" : 65
      },
      "31" : {
        "Text" : "# Requires\n\n# - nada\n\n# Optional:\n\n# Sets:\n\n# USB_LIBS\n\n# USB_CFLAGS\n",
        "Line" : 968,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Requires:\n\n# - n/a\n",
        "Line" : 1108,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Requires:\n\n# - EGL\n\n# - PkgCheckModules\n\n# Optional:\n\n# - KMSDRM_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 1143,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 34
    },
    "vs2015/sdl2/include/SDL_config.h.cmake" : {
      "ObjectId" : "48dd2d41b785186e3eaced3092cefe6157f300e6",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\n  Simple DirectMedia Layer\n  Copyright (C) 1997-2018 Sam Lantinga <slouken@libsdl.org>\n\n  This software is provided 'as-is', without any express or implied\n  warranty.  In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely, subject to the following restrictions:\n\n  1. The origin of this software must not be misrepresented; you must not\n     claim that you wrote the original software. If you use this software\n     in a product, an acknowledgment in the product documentation would be\n     appreciated but is not required.\n  2. Altered source versions must be plainly marked as such, and must not be\n     misrepresented as being the original software.\n  3. This notice may not be removed or altered from any source distribution.\n*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/**\n *  \\file SDL_config.h.in\n *\n *  This is a set of defines to configure the SDL features\n */",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* General platform specific identifiers */",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* C language features */",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* C datatypes */\n/* Define SIZEOF_VOIDP for 64/32 architectures */",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Comment this if you want to build without any C library requirements */",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Useful headers */",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* C library functions */",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* We may need some replacement for stdarg.h here */",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* SDL internal assertion support */",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Allow disabling of core subsystems */",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Enable various audio drivers */",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Enable various input drivers */",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* Enable various sensor drivers */",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Enable various shared object loading systems */",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Enable various threading systems */",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Enable various timer systems */",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* Enable various video drivers */",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* Enable OpenGL support */",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* Enable Vulkan support */",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* Enable system power support */",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* Enable system filesystem support */",
        "Line" : 400,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* Enable assembly routines */",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/* Enable dynamic libsamplerate support */",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/* Platform specific definitions */",
        "Line" : 416,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "/* Older Visual C++ headers don't have the Win64-compatible typedefs... */",
        "Line" : 451,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "vs2015/sdl2/src/hidapi/Makefile.am" : {
      "ObjectId" : "3382a1f040bcd84e64b5b4d49f3bdd06df9d4604",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "vs2015/sdl2/src/hidapi/hidtest/Makefile.am" : {
      "ObjectId" : "d2786445a316ce0eb0e1033eb599ebf6fddd29d4",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Linux\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Other OS's\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "vs2015/sdl2/src/hidapi/ios/Makefile.am" : {
      "ObjectId" : "1f8f2cec66a275ecdb5a10322fc63a7c924da979",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "vs2015/sdl2/src/hidapi/libusb/Makefile.am" : {
      "ObjectId" : "13c9d355178815e6a3fb899501e30dbd1cd032ef",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "vs2015/sdl2/src/hidapi/linux/Makefile.am" : {
      "ObjectId" : "230eeb75a207745621b72a1a12bddf1c182cdade",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "vs2015/sdl2/src/hidapi/mac/Makefile.am" : {
      "ObjectId" : "23d96e08fb6c25a41e940a8dd0900353231dcf1c",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "vs2015/sdl2/src/hidapi/testgui/Makefile.am" : {
      "ObjectId" : "1c02f3f2c3559ba327db83c3d622221ef0c008ae",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Linux\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Other OS's\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Rules for copying the binary and its dependencies into the app bundle.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "vs2015/sdl2/src/hidapi/windows/Makefile.am" : {
      "ObjectId" : "97e261ac9ee1edaab169dbf068340240c823a257",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "vs2015/sdl2/test/CMakeLists.txt" : {
      "ObjectId" : "3c25c5c7c98790944cc22c408cec58152544b0e6",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Global settings for all of the test targets\n\n# FIXME: is this wrong?\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FIXME: Parent directory CMakeLists.txt only sets these for mingw/cygwin,\n\n# but we need them for VS as well.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# HACK: Dummy target to cause the resource files to be copied to the build directory.\n\n# Need to make it an executable so we can use the TARGET_FILE_DIR generator expression.\n\n# This is needed so they get copied to the correct Debug/Release subdirectory in Xcode.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO: Might be easier to make all targets depend on the resources...?\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "vs2015/sdlnet/Makefile.am" : {
      "ObjectId" : "df67ef9b6049504c44ea8e0fbeedf9ac288e161b",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am for the SDL sample image loading library and viewer\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Rule to build tar-gzipped distribution package\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Rule to build RPM distribution package\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "vs2015/zlib/CMakeLists.txt" : {
      "ObjectId" : "0fe939df689306f1d0c7c657cb64dd0f0dedc134",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Check to see if we have large file support\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\n\n# in CMake 2.4.x does not automatically do so and we want\n\n# compatibility with CMake 2.4.x.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clear variable\n",
        "Line" : 47,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "#\n\n# Check for fseeko\n\n#\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Check for unistd.h\n\n#\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\n\n# in their source tree...\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#============================================================================\n\n# zlib\n\n#============================================================================\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If present will override custom build rule below.\n",
        "Line" : 128,
        "CharPositionInLine" : 23
      },
      "8" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# This gets us DLL resource information when compiling on MinGW.\n",
        "Line" : 171,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# This property causes shared libraries on Linux to have the full version\n\n# encoded into their final filename.  We disable this on Cygwin because\n\n# it causes cygz-${ZLIB_FULL_VERSION}.dll to be created when cygz.dll\n\n# seems to be the default.\n\n#\n\n# This has no effect with MSVC, on that platform the version info for\n\n# the DLL comes from the resource file win32/zlib1.rc\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# On unix-like platforms the library is almost always called libz\n",
        "Line" : 203,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Creates zlib1.dll when building shared library version\n",
        "Line" : 209,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#============================================================================\n\n# Example binaries\n\n#============================================================================\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "vs2015/zlib/Makefile" : {
      "ObjectId" : "6bba86c73fca2abda416baa1a7cf883b3494fb29",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "vs2015/zlib/contrib/minizip/Makefile.am" : {
      "ObjectId" : "d343011ebc3b3fd78d2bc3a29801a083c038cf0c",
      "LastModified" : "2019-04-10T00:35:53Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 44,
    "CMAKESOURCE" : 1,
    "QMAKE" : 1,
    "MAKEFILE" : 9,
    "AUTOMAKE" : 40
  },
  "ElapsedTime" : 9941
}