{
  "Repository" : "4522379",
  "Revision" : "HEAD",
  "ObjectId" : "a95a9e1b0e224b49e124b4caa758ffdbc8736d2c",
  "CommitTime" : "2019-04-14T12:04:50Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "f82e8e8c473a0ebfd6187ce929a85362d5f272f1",
      "LastModified" : "2019-01-17T21:23:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Windows Config ##\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# cmake policies\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# find_library calls use $LIB_ROOT variables. Shouldn't affect us much/at all, but silences warnings\n",
        "Line" : 42,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "# Use C++11\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# http://stackoverflow.com/questions/5004858/stdmin-gives-error\n",
        "Line" : 94,
        "CharPositionInLine" : 29
      },
      "5" : {
        "Text" : "# 4244 - e.g. 'argument': conversion from 'const long double' to 'double' -- boost headers\n\n# 4100 - unreferenced formal parameter -- boost headers\n\n# 4172 - boost headers\n\n# 4611 - interaction between '_setjmp' and C++ object destruction is non-portable -- savepng.cpp\n\n# 4458 - shadow for class member -- librocket headers\n\n# 4459 - declaration of 'self' hides global declaration\n\n# 4127 - conditional expression is constant, could be useful to check that both branches compilable.\n\n# 4267 -  conversion from 'size_t' to 'int', possible loss of data -- too many such warnings in 64-bit build currently\n\n# 4800 - forcing value to bool, stupid warning\n",
        "Line" : 109,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# 4061 - not all enumerator values are handled by the switch statement\n",
        "Line" : 119,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# SCL - because current boost is too old and emits this warning\n\n# CRT - something in nuklear.h\n",
        "Line" : 121,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#TODO: get rid of this?\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# allow the user to specify extra include dirs and defines on the command line\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "apps/celview/CMakeLists.txt" : {
      "ObjectId" : "8e7d22af0d8753372d8e328cd5c1d9ee840520d9",
      "LastModified" : "2017-12-30T08:18:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "apps/exedump/CMakeLists.txt" : {
      "ObjectId" : "6b0e7f5aadbd7ad3843243096d3ab0915f7dc930",
      "LastModified" : "2017-10-19T19:44:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "apps/fontgenerator/CMakeLists.txt" : {
      "ObjectId" : "4f4d70fa7f2a78ce815635b51110d83cd5ed221e",
      "LastModified" : "2017-10-19T19:44:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "apps/freeablo/CMakeLists.txt" : {
      "ObjectId" : "88a96b0dd838def9d63c2e15814df92ae7d34c68",
      "LastModified" : "2019-03-30T18:04:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# split into a library so I can link to it from tests\n",
        "Line" : 1,
        "CharPositionInLine" : 25
      },
      "CommentCount" : 1
    },
    "apps/launcher/CMakeLists.txt" : {
      "ObjectId" : "5f1592b54fd95cc53b4cebc16673e9793e40b1c3",
      "LastModified" : "2017-12-30T08:18:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "apps/mpqtool/CMakeLists.txt" : {
      "ObjectId" : "a2a6bdf018559574e5bcc91f48c145f4c1798efa",
      "LastModified" : "2017-10-19T19:44:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindEnet.cmake" : {
      "ObjectId" : "c552c4bf79933d0601636e68d361b8b739fc9faa",
      "LastModified" : "2017-10-19T19:44:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Fink\n",
        "Line" : 10,
        "CharPositionInLine" : 19
      },
      "1" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 11,
        "CharPositionInLine" : 26
      },
      "2" : {
        "Text" : "# Blastwave\n",
        "Line" : 12,
        "CharPositionInLine" : 24
      },
      "3" : {
        "Text" : "# needs some libs on windows apparently\n",
        "Line" : 33,
        "CharPositionInLine" : 62
      },
      "CommentCount" : 4
    },
    "cmake/FindLibRocket.cmake" : {
      "ObjectId" : "9823d9c4c4995bfa5428bc75847e0a8d7f1a6f8f",
      "LastModified" : "2017-10-19T19:44:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Fink\n",
        "Line" : 9,
        "CharPositionInLine" : 6
      },
      "1" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 10,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : "# Blastwave\n",
        "Line" : 11,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 3
    },
    "cmake/FindSDL2.cmake" : {
      "ObjectId" : "4eac3a96cf1880be2a52e94147eed9da11a88626",
      "LastModified" : "2017-10-19T19:44:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate SDL2 library\n\n# This module defines\n\n# SDL2_LIBRARY, the name of the library to link against\n\n# SDL2_FOUND, if false, do not try to link to SDL2\n\n# SDL2_INCLUDE_DIR, where to find SDL.h\n\n#\n\n# This module responds to the the flag:\n\n# SDL2_BUILDING_LIBRARY\n\n# If this is defined, then no SDL2main will be linked in because\n\n# only applications need main().\n\n# Otherwise, it is assumed you are building an application and this\n\n# module will attempt to locate and set the the proper link flags\n\n# as part of the returned SDL2_LIBRARY variable.\n\n#\n\n# Don't forget to include SDLmain.h and SDLmain.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDL2main which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL2 library\n\n# (SDL2.dll, libsdl2.so, SDL2.framework, etc).\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2DIR\n\n# used in building SDL2.\n\n# l.e.galup  9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL guidelines.\n\n# Added a search for SDL2main which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL convention\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 73,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 74,
        "CharPositionInLine" : 13
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 75,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDL2main. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDL2main for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 96,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# SDL2 may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MinGW needs an additional library, mwindows\n\n# It's total link flags should look like -lmingw32 -lSDL2main -lSDL2 -lmwindows\n\n# (Actually on second look, I think it only needs one of the m* libraries.)\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# For SDL2main\n",
        "Line" : 126,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 143,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# For MinGW library\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 157,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 14
    },
    "cmake/FindSDL2_image.cmake" : {
      "ObjectId" : "a3f0721eb77e123f3d5edc9a50e9b3231c78d63d",
      "LastModified" : "2017-10-19T19:44:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate the SDL2_image library. This CMake module is a modified version\n\n# of the original FindSDL_image.cmake file\n\n# ###########################################################################\n\n# Locate SDL_image library\n\n# This module defines\n\n# SDL2IMAGE_LIBRARY, the name of the library to link against\n\n# SDLIMAGE_FOUND, if false, do not try to link to SDL\n\n# SDL2IMAGE_INCLUDE_DIR, where to find SDL/SDL.h\n\n#\n\n# $SDLDIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDLDIR\n\n# used in building SDL.\n\n#\n\n# Created by Eric Wing. This was influenced by the FindSDL.cmake \n\n# module, but with modifications to recognize OS X frameworks and \n\n# additional Unix paths (FreeBSD, etc).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 41,
        "CharPositionInLine" : 19
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 42,
        "CharPositionInLine" : 26
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 43,
        "CharPositionInLine" : 24
      },
      "CommentCount" : 5
    },
    "cmake/FindSDL2_mixer.cmake" : {
      "ObjectId" : "a84dc94af75f6da16ef6a7593913b3c6a78dbfd4",
      "LastModified" : "2017-10-19T19:44:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate the SDL2_mixer library. This CMake module is a modified version\n\n# of the original FindSDL_mixer.cmake file\n\n# ###########################################################################\n\n# Locate SDL_mixer library\n\n# This module defines\n\n# SDL2MIXER_LIBRARY, the name of the library to link against\n\n# SDLMIXER_FOUND, if false, do not try to link to SDL\n\n# SDL2MIXER_INCLUDE_DIR, where to find SDL/SDL.h\n\n#\n\n# $SDLDIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDLDIR\n\n# used in building SDL.\n\n#\n\n# Created by Eric Wing. This was influenced by the FindSDL.cmake \n\n# module, but with modifications to recognize OS X frameworks and \n\n# additional Unix paths (FreeBSD, etc).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 41,
        "CharPositionInLine" : 19
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 42,
        "CharPositionInLine" : 26
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 43,
        "CharPositionInLine" : 24
      },
      "CommentCount" : 5
    },
    "cmake/Hunter/config.cmake" : {
      "ObjectId" : "90c47e3bfc03cef4081b2e6cf6b8700240d233e5",
      "LastModified" : "2017-10-19T19:44:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#hunter_config(Qt VERSION 5.5.1-cvpixelbuffer-2-p9 CMAKE_ARGS -DCMAKE_CXX_FLAGS='-fpermissive')\n\n#hunter_config(JPEG VERSION 9b-p0)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Hunter/passwords.cmake" : {
      "ObjectId" : "0389b9b44065b510f164f07fd70f26ce17e45c53",
      "LastModified" : "2018-11-05T07:14:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# REPO_OWNER + REPO = https://github.com/wheybags/hunter-cache\r\n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# USERNAME = https://github.com/freeablo-bot\r\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# PASSWORD = GitHub token saved as a secure environment variable\r\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "cmake/HunterGate.cmake" : {
      "ObjectId" : "4e2bb71b03cadea87573c3161bb7abe439fa36bc",
      "LastModified" : "2018-11-05T07:14:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2013-2017, Ruslan Baratov\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright notice, this\n\n#   list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n\n# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is a gate file to Hunter package manager.\n\n# Include this file using `include` command and add package you need, example:\n\n#\n\n#     cmake_minimum_required(VERSION 3.0)\n\n#\n\n#     include(\"cmake/HunterGate.cmake\")\n\n#     HunterGate(\n\n#         URL \"https://github.com/path/to/hunter/archive.tar.gz\"\n\n#         SHA1 \"798501e983f14b28b10cda16afa4de69eee1da1d\"\n\n#     )\n\n#\n\n#     project(MyProject)\n\n#\n\n#     hunter_add_package(Foo)\n\n#     hunter_add_package(Boo COMPONENTS Bar Baz)\n\n#\n\n# Projects:\n\n#     * https://github.com/hunter-packages/gate/\n\n#     * https://github.com/ruslo/hunter\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# cmake_parse_arguments\n",
        "Line" : 53,
        "CharPositionInLine" : 29
      },
      "3" : {
        "Text" : "# Set HUNTER_GATE_ROOT cmake variable to suitable value.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check CMake variable\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Check environment variable\n",
        "Line" : 155,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Check HOME environment variable\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Check SYSTEMDRIVE and USERPROFILE environment variable (windows only)\n",
        "Line" : 171,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# while waiting for lock other instance can do all the job\n",
        "Line" : 253,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# check directory permissions\n",
        "Line" : 261,
        "CharPositionInLine" : 38
      },
      "10" : {
        "Text" : "# Disabling languages speeds up a little bit, reduces noise in the output\n\n# and avoids path too long windows error\n",
        "Line" : 263,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Need to add toolchain file too.\n\n# Otherwise on Visual Studio + MDD this will fail with error:\n\n# \"Could not find an appropriate version of the Windows 10 SDK installed on this machine\"\n",
        "Line" : 300,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# 'toolchain_arg' can't be empty\n",
        "Line" : 307,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Test case: remove Ninja from PATH but set it via CMAKE_MAKE_PROGRAM\n",
        "Line" : 315,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Must be a macro so master file 'cmake/Hunter' can\n\n# apply all variables easily just by 'include' command\n\n# (otherwise PARENT_SCOPE magic needed)\n",
        "Line" : 361,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# variable HUNTER_GATE_DONE set explicitly for external project\n\n# (see `hunter_download`)\n",
        "Line" : 366,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# First HunterGate command will init Hunter, others will be ignored\n",
        "Line" : 371,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Empty function to avoid error \"unknown function\"\n",
        "Line" : 375,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# set HUNTER_GATE_ROOT\n",
        "Line" : 462,
        "CharPositionInLine" : 30
      },
      "19" : {
        "Text" : "# Beautify path, fix probable problems with windows path slashes\n",
        "Line" : 464,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Hunter downloaded manually (e.g. by 'git clone')\n",
        "Line" : 502,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "# Check Hunter already downloaded by HunterGate\n",
        "Line" : 511,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 22
    },
    "components/CMakeLists.txt" : {
      "ObjectId" : "0c3fd288ffa12475fc4283217f241a4000b3989c",
      "LastModified" : "2019-03-30T18:04:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extern/CMakeLists.txt" : {
      "ObjectId" : "5694bc0cdfbd579f009fa7aeef5e97a5fd8c4ae2",
      "LastModified" : "2019-03-30T18:04:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# nuklear\n\n###################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# nativefiledialog\n\n###################\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#if(CMAKE_VERSION VERSION_LESS \"3.1\")\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#else()\n\n#    set_property(TARGET ${LIB} PROPERTY C_STANDARD 99)\n\n#endif()\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# simpleini\n\n###################\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "extern/nativefiledialog/build/gmake_linux/Makefile" : {
      "ObjectId" : "d62e743544c0e557e3fc6d203d2757ace68681b4",
      "LastModified" : "2018-11-05T07:14:24Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# GNU Make workspace makefile autogenerated by Premake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "extern/nativefiledialog/build/gmake_macosx/Makefile" : {
      "ObjectId" : "d62e743544c0e557e3fc6d203d2757ace68681b4",
      "LastModified" : "2018-11-05T07:14:24Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# GNU Make workspace makefile autogenerated by Premake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "extern/nativefiledialog/build/gmake_windows/Makefile" : {
      "ObjectId" : "d62e743544c0e557e3fc6d203d2757ace68681b4",
      "LastModified" : "2018-11-05T07:14:24Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# GNU Make workspace makefile autogenerated by Premake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "extern/nuklear/CMakeLists.txt" : {
      "ObjectId" : "fadd50c50fb12551cb9236e0754e4ab5afdb6007",
      "LastModified" : "2018-11-10T18:50:50Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extern/simpleini/Makefile" : {
      "ObjectId" : "a04b5e36e4835050f23746aca4efa58b473cb153",
      "LastModified" : "2019-01-01T15:45:50Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "2c00d2631d4fbd3acf330ab8605d1c5b5dc76efa",
      "LastModified" : "2019-03-30T18:04:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TODO: simplify this (and maybe travis?)\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "test/unit/CMakeLists.txt" : {
      "ObjectId" : "f6e70f71f2a39bdfe8f21d99197216229b4e99f3",
      "LastModified" : "2019-03-30T18:04:55Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 20,
    "MAKEFILE" : 4
  },
  "ElapsedTime" : 1722
}