{
  "Repository" : "13455786",
  "Revision" : "HEAD",
  "ObjectId" : "599e8b7decc4374f9c6c297aec28a6867f341d96",
  "CommitTime" : "2019-02-18T12:26:06Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "3e6e04b1656903b90657641bb8d9722b8a4bf906",
      "LastModified" : "2019-02-11T08:15:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## [START] DETERMINE COMPILER MAJOR VERSIONS\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## [END] DETERMINE COMPILER MAJOR VERSIONS\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#check for ZLIB (crc32)\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add compiler flags\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#PGCC C and C++ use builtin math functions, which are much more efficient than library calls.\n\n#http://www.cecalc.ula.ve/documentacion/tutoriales/HPF/pgiws_ug/pgi30u09.htm\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# to serialize src generation\n",
        "Line" : 284,
        "CharPositionInLine" : 54
      },
      "6" : {
        "Text" : "# to serialize src generation\n",
        "Line" : 292,
        "CharPositionInLine" : 43
      },
      "7" : {
        "Text" : "# to serialize src generation\n",
        "Line" : 298,
        "CharPositionInLine" : 43
      },
      "8" : {
        "Text" : "# to serialize mod generation\n",
        "Line" : 299,
        "CharPositionInLine" : 49
      },
      "9" : {
        "Text" : "# installable config\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# in tree config\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# set up exaples in build/examples/\n",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "CMakeScripts/AppendProperty.cmake" : {
      "ObjectId" : "61ede4292d1070fd18538c3b7344d343fd0ac710",
      "LastModified" : "2014-11-10T20:40:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# compatibility macro for cmake pre 2.8.6\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeScripts/FindLUSTREAPI.cmake" : {
      "ObjectId" : "ba72bb2eb6bf02c393ef8d84c7f648cb33d8f34d",
      "LastModified" : "2017-09-22T16:08:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Author: Kai Keller, 2017\n\n# Package to link the Lustre API\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sets variables:\n\n#    LUSTREAPI_FOUND\n\n#    LUSTREAPI_INCLUDE_DIRS\n\n#    LUSTREAPI_LIBRARIES\n\n#    LUSTREAPI_DEFINITIONS\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CMakeScripts/FindMPI.cmake" : {
      "ObjectId" : "775457e1883c9b5c73ad3c02e4deac043fb6e436",
      "LastModified" : "2017-09-22T16:08:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find a Message Passing Interface (MPI) implementation\n\n# The Message Passing Interface (MPI) is a library used to write\n\n# high-performance distributed-memory parallel applications, and\n\n# is typically deployed on a cluster. MPI is a standard interface\n\n# (defined by the MPI forum) for which many implementations are\n\n# available. All of them have somewhat different include paths,\n\n# libraries to link against, etc., and this module tries to smooth\n\n# out those differences.\n\n#\n\n# === Variables ===\n\n#\n\n# This module will set the following variables per language in your project,\n\n# where <lang> is one of C, CXX, or Fortran:\n\n#   MPI_FOUND                  TRUE if FindMPI found MPI flags for all <lang>\n\n#   MPI_<lang>_COMPILER        MPI Compiler wrapper for <lang>\n\n#   MPI_<lang>_COMPILE_FLAGS   Compilation flags for MPI programs\n\n#   MPI_<lang>_INCLUDE_PATH    Include path(s) for MPI header\n\n#   MPI_<lang>_LINK_FLAGS      Linking flags for MPI programs\n\n#   MPI_<lang>_LIBRARIES       All libraries to link MPI programs against\n\n# Additionally, FindMPI sets the following variables for running MPI\n\n# programs from the command line:\n\n#   MPIEXEC                    Executable for running MPI programs\n\n# === Usage ===\n\n#\n\n# To use this module, simply call FindMPI from a CMakeLists.txt file, or\n\n# run find_package(MPI), then run CMake.  If you are happy with the auto-\n\n# detected configuration for your language, then you're done.  If not, you\n\n# have two options:\n\n#   1. Set MPI_<lang>_COMPILER to the MPI wrapper (mpicc, etc.) of your\n\n#      choice and reconfigure.  FindMPI will attempt to determine all the\n\n#      necessary variables using THAT compiler's compile and link flags.\n\n#   2. If this fails, or if your MPI implementation does not come with\n\n#      a compiler wrapper, then set both MPI_<lang>_LIBRARIES and\n\n#      MPI_<lang>_INCLUDE_PATH.  You may also set any other variables\n\n#      listed above, but these two are required.  This will circumvent\n\n#      autodetection entirely.\n\n# When configuration is successful, MPI_<lang>_COMPILER will be set to the\n\n# compiler wrapper for <lang>, if it was found.  MPI_<lang>_FOUND and other\n\n# variables above will be set if any MPI implementation was found for <lang>,\n\n# regardless of whether a compiler was found.\n\n#\n\n# When using MPIEXEC to execute MPI applications, you should typically use\n\n# all of the MPIEXEC flags as follows:\n\n#   ${MPIEXEC} ${MPIEXEC_NUMPROC_FLAG} PROCS\n\n#     ${MPIEXEC_PREFLAGS} EXECUTABLE ${MPIEXEC_POSTFLAGS} ARGS\n\n# where PROCS is the number of processors on which to execute the program,\n\n# EXECUTABLE is the MPI program, and ARGS are the arguments to pass to the\n\n# MPI program.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2013 CEA, Julien Bigot <julien.bigot@cea.fr>\n\n# Copyright 2001-2011 Kitware, Inc.\n\n# Copyright 2010-2011 Todd Gamblin tgamblin@llnl.gov\n\n# Copyright 2001-2009 Dave Partyka\n\n#\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n# * Redistributions of source code must retain the above copyright notice,\n\n#   this list of conditions and the following disclaimer.\n\n# * Redistributions in binary form must reproduce the above copyright notice,\n\n#   this list of conditions and the following disclaimer in the documentation\n\n#   and/or other materials provided with the distribution.\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium, nor\n\n#   the names of their contributors may be used to endorse or promote products\n\n#   derived from this software without specific prior written  permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# include this to handle the QUIETLY and REQUIRED arguments\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# This part detects MPI compilers, attempting to wade through the mess of compiler names in\n\n# a sensible way.\n\n#\n\n# The compilers are detected in this order:\n\n#\n\n# 1. Try to find the most generic availble MPI compiler, as this is usually set up by\n\n#    cluster admins.  e.g., if plain old mpicc is available, we'll use it and assume it's\n\n#    the right compiler.\n\n#\n\n# 2. If a generic mpicc is NOT found, then we attempt to find one that matches\n\n#    CMAKE_<lang>_COMPILER_ID. e.g. if you are using XL compilers, we'll try to find mpixlc\n\n#    and company, but not mpiicc.  This hopefully prevents toolchain mismatches.\n\n#\n\n# If you want to force a particular MPI compiler other than what we autodetect (e.g. if you\n\n# want to compile regular stuff with GNU and parallel stuff with Intel), you can always set\n\n# your favorite MPI_<lang>_COMPILER explicitly and this stuff will be ignored.\n\n#\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Start out with the generic MPI compiler names, as these are most commonly used.\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# GNU compiler names\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Intel MPI compiler names\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# PGI compiler names\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# XLC MPI Compiler names\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# append vendor-specific compilers to the list if we either don't know the compiler id,\n\n# or if we know it matches the regular compiler.\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# clean up the namespace here\n",
        "Line" : 148,
        "CharPositionInLine" : 48
      },
      "11" : {
        "Text" : "# Names to try for MPI exec\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Grab the path to MPI from the registry if we're on windows.\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Build a list of prefixes to search for MPI.\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#\n\n# interrogate_mpi_compiler(lang try_libs)\n\n#\n\n# Attempts to extract compiler and linker args from an MPI compiler. The arguments set\n\n# by this function are:\n\n#\n\n#   MPI_<lang>_INCLUDE_PATH    MPI_<lang>_LINK_FLAGS     MPI_<lang>_FOUND\n\n#   MPI_<lang>_COMPILE_FLAGS   MPI_<lang>_LIBRARIES\n\n#\n\n# MPI_<lang>_COMPILER must be set beforehand to the absolute path to an MPI compiler for\n\n# <lang>.  Additionally, MPI_<lang>_INCLUDE_PATH and MPI_<lang>_LIBRARIES may be set\n\n# to skip autodetection.\n\n#\n\n# If try_libs is TRUE, this will also attempt to find plain MPI libraries in the usual\n\n# way.  In general, this is not as effective as interrogating the compilers, as it\n\n# ignores language-specific flags and libraries.  However, some MPI implementations\n\n# (Windows implementations) do not have compiler wrappers, so this approach must be used.\n\n#\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# MPI_${lang}_NO_INTERROGATE will be set to a compiler name when the *regular* compiler was\n\n# discovered to be the MPI compiler.  This happens on machines like the Cray XE6 that use\n\n# modules to set cc, CC, and ftn to the MPI compilers.  If the user force-sets another MPI\n\n# compiler, MPI_${lang}_COMPILER won't be equal to MPI_${lang}_NO_INTERROGATE, and we'll\n\n# inspect that compiler anew.  This allows users to set new compilers w/o rm'ing cache.\n",
        "Line" : 193,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# If MPI is set already in the cache, don't bother with interrogating the compiler.\n",
        "Line" : 200,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Check whether the -showme:compile option works. This indicates that we have either OpenMPI\n\n# or a newer version of LAM-MPI, and implies that -showme:link will also work.\n",
        "Line" : 203,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# If we appear to have -showme:compile, then we should\n\n# also have -showme:link. Try it.\n",
        "Line" : 212,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# We probably have -showme:incdirs and -showme:libdirs as well,\n\n# so grab that while we're at it.\n",
        "Line" : 221,
        "CharPositionInLine" : 10
      },
      "20" : {
        "Text" : "# reset things here if something went wrong.\n",
        "Line" : 234,
        "CharPositionInLine" : 10
      },
      "21" : {
        "Text" : "# Older versions of LAM-MPI have \"-showme\". Try to find that.\n",
        "Line" : 240,
        "CharPositionInLine" : 6
      },
      "22" : {
        "Text" : "# MVAPICH uses -compile-info and -link-info.  Try them.\n",
        "Line" : 249,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "# If we have compile-info, also have link-info.\n",
        "Line" : 257,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# make sure we got compile and link.  Reset vars if something's wrong.\n",
        "Line" : 266,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# MPICH just uses \"-show\". Try it.\n",
        "Line" : 273,
        "CharPositionInLine" : 6
      },
      "26" : {
        "Text" : "# We have our command lines, but we might need to copy MPI_COMPILE_CMDLINE\n\n# into MPI_LINK_CMDLINE, if we didn't find the link line.\n",
        "Line" : 283,
        "CharPositionInLine" : 8
      },
      "27" : {
        "Text" : "# Here, we're done with the interrogation part, and we'll try to extract args we care\n\n# about from what we learned from the compiler wrapper scripts.\n",
        "Line" : 294,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# If interrogation came back with something, extract our variable from the MPI command line\n",
        "Line" : 297,
        "CharPositionInLine" : 6
      },
      "29" : {
        "Text" : "# Extract compile flags from the compile command line.\n",
        "Line" : 299,
        "CharPositionInLine" : 8
      },
      "30" : {
        "Text" : "# Extract include paths from compile command line\n",
        "Line" : 311,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# try using showme:incdirs if extracting didn't work.\n",
        "Line" : 319,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# If all else fails, just search for mpi.h in the normal include paths.\n",
        "Line" : 325,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# Extract linker paths from the link command line\n",
        "Line" : 334,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# try using showme:libdirs if extracting didn't work.\n",
        "Line" : 343,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# add the compiler implicit directories because some compilers\n\n# such as the intel compiler have libraries that show up\n\n# in the show list that can only be found in the implicit\n\n# link directories of the compiler.\n",
        "Line" : 349,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# Extract linker flags from the link command line\n",
        "Line" : 357,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# Extract the set of libraries to link against from the link command\n\n# line\n",
        "Line" : 368,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "# Determine full path names for all of the libraries that one needs\n\n# to link against in an MPI program\n",
        "Line" : 372,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : "# MPI_LIB is cached by find_library, but we don't want that.  Clear it first.\n",
        "Line" : 378,
        "CharPositionInLine" : 10
      },
      "40" : {
        "Text" : "# Sanity check MPI_LIBRARIES to make sure there are enough libraries\n",
        "Line" : 393,
        "CharPositionInLine" : 8
      },
      "41" : {
        "Text" : "# If we didn't have an MPI compiler script to interrogate, attempt to find everything\n\n# with plain old find functions.  This is nasty because MPI implementations have LOTS of\n\n# different library names, so this section isn't going to be very generic.  We need to\n\n# make sure it works for MS MPI, though, since there are no compiler wrappers for that.\n",
        "Line" : 402,
        "CharPositionInLine" : 6
      },
      "42" : {
        "Text" : "# Decide between 32-bit and 64-bit libraries for Microsoft's MPI\n",
        "Line" : 411,
        "CharPositionInLine" : 6
      },
      "43" : {
        "Text" : "# Right now, we only know about the extra libs for C++.\n\n# We could add Fortran here (as there is usually libfmpich, etc.), but\n\n# this really only has to work with MS MPI on Windows.\n\n# Assume that other MPI's are covered by the compiler wrappers.\n",
        "Line" : 425,
        "CharPositionInLine" : 6
      },
      "44" : {
        "Text" : "# If we found MPI, set up all of the appropriate cache entries\n",
        "Line" : 478,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# clear out our temporary lib/header detectionv variable here.\n",
        "Line" : 485,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "# finally set a found variable for each MPI language\n",
        "Line" : 490,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# This function attempts to compile with the regular compiler, to see if MPI programs\n\n# work with it.  This is a last ditch attempt after we've tried interrogating mpicc and\n\n# friends, and after we've tried to find generic libraries.  Works on machines like\n\n# Cray XE6, where the modules environment changes what MPI version cc, CC, and ftn use.\n",
        "Line" : 499,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# End definitions, commence real work here.\n",
        "Line" : 540,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Most mpi distros have some form of mpiexec which gives us something we can reliably look for.\n",
        "Line" : 542,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# call get_filename_component twice to remove mpiexec and the directory it exists in (typically bin).\n\n# This gives us a fairly reliable base directory to search for /bin /lib and /include from.\n",
        "Line" : 549,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# This loop finds the compilers and sends them off for interrogation.\n",
        "Line" : 557,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# If the user supplies a compiler *name* instead of an absolute path, assume that we need to find THAT compiler.\n",
        "Line" : 560,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# Get rid of our default list of names and just search for the name the user wants.\n",
        "Line" : 564,
        "CharPositionInLine" : 8
      },
      "54" : {
        "Text" : "# If the user specifies a compiler, we don't want to try to search libraries either.\n",
        "Line" : 567,
        "CharPositionInLine" : 8
      },
      "55" : {
        "Text" : "# last ditch try -- if nothing works so far, just try running the regular compiler and\n\n# see if we can create an MPI executable.\n",
        "Line" : 580,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# unset these vars to cleanup namespace\n",
        "Line" : 592,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 57
    },
    "CMakeScripts/FindOPENSSL.cmake" : {
      "ObjectId" : "1209560d6087d66c61cb7676ddd5c2b1b945e1bd",
      "LastModified" : "2017-09-22T16:08:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Distributed under the OSI-approved BSD 3-Clause License.  See accompanying\n\n# file Copyright.txt or https://cmake.org/licensing for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#.rst:\n\n# FindOpenSSL\n\n# -----------\n\n#\n\n# Find the OpenSSL encryption library.\n\n#\n\n# Imported Targets\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following :prop_tgt:`IMPORTED` targets:\n\n#\n\n# ``OpenSSL::SSL``\n\n#   The OpenSSL ``ssl`` library, if found.\n\n# ``OpenSSL::Crypto``\n\n#   The OpenSSL ``crypto`` library, if found.\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module will set the following variables in your project:\n\n#\n\n# ``OPENSSL_FOUND``\n\n#   System has the OpenSSL library.\n\n# ``OPENSSL_INCLUDE_DIR``\n\n#   The OpenSSL include directory.\n\n# ``OPENSSL_CRYPTO_LIBRARY``\n\n#   The OpenSSL crypto library.\n\n# ``OPENSSL_SSL_LIBRARY``\n\n#   The OpenSSL SSL library.\n\n# ``OPENSSL_LIBRARIES``\n\n#   All OpenSSL libraries.\n\n# ``OPENSSL_VERSION``\n\n#   This is set to ``$major.$minor.$revision$patch`` (e.g. ``0.9.8s``).\n\n#\n\n# Hints\n\n# ^^^^^\n\n#\n\n# Set ``OPENSSL_ROOT_DIR`` to the root directory of an OpenSSL installation.\n\n# Set ``OPENSSL_USE_STATIC_LIBS`` to ``TRUE`` to look for static libraries.\n\n# Set ``OPENSSL_MSVC_STATIC_RT`` set ``TRUE`` to choose the MT version of the lib.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Support preference of static libs by adjusting CMAKE_FIND_LIBRARY_SUFFIXES\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# http://www.slproweb.com/products/Win32OpenSSL.html\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# /MD and /MDd are the standard values - if someone wants to use\n\n# others, the libnames have to change here too\n\n# use also ssl and ssleay32 in debug as fallback for openssl < 0.9.8b\n\n# enable OPENSSL_MSVC_STATIC_RT to get the libs build /MT (Multithreaded no-DLL)\n\n# In Visual C++ naming convention each of these four kinds of Windows libraries has it's standard suffix:\n\n#   * MD for dynamic-release\n\n#   * MDd for dynamic-debug\n\n#   * MT for static-release\n\n#   * MTd for static-debug\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Implementation details:\n\n# We are using the libraries located in the VC subdir instead of the parent directory eventhough :\n\n# libeay32MD.lib is identical to ../libeay32.lib, and\n\n# ssleay32MD.lib is identical to ../ssleay32.lib\n\n# enable OPENSSL_USE_STATIC_LIBS to use the static libs located in lib/VC/static\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Since OpenSSL 1.1, lib names are like libcrypto32MTd.lib and libssl32MTd.lib\n",
        "Line" : 124,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# same player, for MinGW\n",
        "Line" : 213,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Not sure what to pick for -say- intel, let's use the toplevel ones and hope someone report issues:\n",
        "Line" : 242,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# compat defines\n",
        "Line" : 299,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# The version number is encoded as 0xMNNFFPPS: major minor fix patch status\n\n# The status gives if this is a developer or prerelease and is ignored here.\n\n# Major, minor, and fix directly translate into the version numbers shown in\n\n# the string. The patch field translates to the single character suffix that\n\n# indicates the bug fix state, which 00 -> nothing, 01 -> a, 02 -> b and so\n\n# on.\n",
        "Line" : 341,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# 96 is the ASCII code of 'a' minus 1\n",
        "Line" : 359,
        "CharPositionInLine" : 6
      },
      "12" : {
        "Text" : "# Once anyone knows how OpenSSL would call the patch versions beyond 'z'\n\n# this should be updated to handle that, too. This has not happened yet\n\n# so it is simply ignored here for now.\n",
        "Line" : 362,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# Restore the original find library ordering\n",
        "Line" : 460,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "CMakeScripts/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "25d8df39fe98e553ca2659e038d0f06281f5c9c2",
      "LastModified" : "2017-09-22T16:08:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(<name> ... )\n\n#\n\n# This function is intended to be used in FindXXX.cmake modules files.\n\n# It handles the REQUIRED, QUIET and version-related arguments to find_package().\n\n# It also sets the <UPPERCASED_NAME>_FOUND variable.\n\n# The package is considered found if all variables <var1>... listed contain\n\n# valid results, e.g. valid filepaths.\n\n#\n\n# There are two modes of this function. The first argument in both modes is\n\n# the name of the Find-module where it is called (in original casing).\n\n#\n\n# The first simple mode looks like this:\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(<name> (DEFAULT_MSG|\"Custom failure message\") <var1>...<varN> )\n\n# If the variables <var1> to <varN> are all valid, then <UPPERCASED_NAME>_FOUND\n\n# will be set to TRUE.\n\n# If DEFAULT_MSG is given as second argument, then the function will generate\n\n# itself useful success and error messages. You can also supply a custom error message\n\n# for the failure case. This is not recommended.\n\n#\n\n# The second mode is more powerful and also supports version checking:\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME [REQUIRED_VARS <var1>...<varN>]\n\n#                                           [VERSION_VAR   <versionvar>]\n\n#                                           [HANDLE_COMPONENTS]\n\n#                                           [CONFIG_MODE]\n\n#                                           [FAIL_MESSAGE \"Custom failure message\"] )\n\n#\n\n# As above, if <var1> through <varN> are all valid, <UPPERCASED_NAME>_FOUND\n\n# will be set to TRUE.\n\n# After REQUIRED_VARS the variables which are required for this package are listed.\n\n# Following VERSION_VAR the name of the variable can be specified which holds\n\n# the version of the package which has been found. If this is done, this version\n\n# will be checked against the (potentially) specified required version used\n\n# in the find_package() call. The EXACT keyword is also handled. The default\n\n# messages include information about the required version and the version\n\n# which has been actually found, both if the version is ok or not.\n\n# If the package supports components, use the HANDLE_COMPONENTS option to enable\n\n# handling them. In this case, find_package_handle_standard_args() will report\n\n# which components have been found and which are missing, and the <NAME>_FOUND\n\n# variable will be set to FALSE if any of the required components (i.e. not the\n\n# ones listed after OPTIONAL_COMPONENTS) are missing.\n\n# Use the option CONFIG_MODE if your FindXXX.cmake module is a wrapper for\n\n# a find_package(... NO_MODULE) call.  In this case VERSION_VAR will be set\n\n# to <NAME>_VERSION and the macro will automatically check whether the\n\n# Config module was found.\n\n# Via FAIL_MESSAGE a custom failure message can be specified, if this is not\n\n# used, the default message will be displayed.\n\n#\n\n# Example for mode 1:\n\n#\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(LibXml2  DEFAULT_MSG  LIBXML2_LIBRARY LIBXML2_INCLUDE_DIR)\n\n#\n\n# LibXml2 is considered to be found, if both LIBXML2_LIBRARY and\n\n# LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.\n\n# If it is not found and REQUIRED was used, it fails with FATAL_ERROR,\n\n# independent whether QUIET was used or not.\n\n# If it is found, success will be reported, including the content of <var1>.\n\n# On repeated Cmake runs, the same message won't be printed again.\n\n#\n\n# Example for mode 2:\n\n#\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(BISON  REQUIRED_VARS BISON_EXECUTABLE\n\n#                                             VERSION_VAR BISON_VERSION)\n\n# In this case, BISON is considered to be found if the variable(s) listed\n\n# after REQUIRED_VAR are all valid, i.e. BISON_EXECUTABLE in this case.\n\n# Also the version of BISON will be checked by using the version contained\n\n# in BISON_VERSION.\n\n# Since no FAIL_MESSAGE is given, the default messages will be printed.\n\n#\n\n# Another example for mode 2:\n\n#\n\n#    find_package(Automoc4 QUIET NO_MODULE HINTS /opt/automoc4)\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(Automoc4  CONFIG_MODE)\n\n# In this case, FindAutmoc4.cmake wraps a call to find_package(Automoc4 NO_MODULE)\n\n# and adds an additional search directory for automoc4.\n\n# The following FIND_PACKAGE_HANDLE_STANDARD_ARGS() call produces a proper\n\n# success/error message.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# internal helper macro\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# internal helper macro to generate the failure message when used in CONFIG_MODE:\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# <name>_CONFIG is set, but FOUND is false, this means that some other of the REQUIRED_VARS was not found:\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# If _CONSIDERED_CONFIGS is set, the config-file has been found, but no suitable version.\n\n# List them all in the error message:\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Simple case: No Config-file was found at all:\n",
        "Line" : 129,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# set up the arguments for CMAKE_PARSE_ARGUMENTS and check whether we are in\n\n# new extended or in the \"old\" mode:\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# now that we collected all arguments, process them\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# In config-mode, we rely on the variable <package>_CONFIG, which is set by find_package()\n\n# when it successfully found the config-file, including version checking:\n",
        "Line" : 169,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# collect all variables which were not found, so they can be printed, so the\n\n# user knows better what went wrong (#6375)\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# check if all passed variables are valid\n",
        "Line" : 191,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# component handling\n",
        "Line" : 201,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# version handling:\n",
        "Line" : 232,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# exact version required\n",
        "Line" : 240,
        "CharPositionInLine" : 44
      },
      "15" : {
        "Text" : "# minimum version specified:\n",
        "Line" : 248,
        "CharPositionInLine" : 17
      },
      "16" : {
        "Text" : "# if the package was not found, but a version was given, add that to the output:\n",
        "Line" : 259,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# print the result:\n",
        "Line" : 280,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 18
    },
    "Makefile" : {
      "ObjectId" : "1ceb704cb7bcc39d8194135e57e037b08dce4ab0",
      "LastModified" : "2017-09-22T16:08:51Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "## * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\n##* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\n##=======================================================================\n\n##Copyright (C) 2010-2014 Leonardo A. BAUTISTA GOMEZ\n\n##This program is free software; you can redistribute it and/or modify\n\n##it under the terms of the GNU General Public License (GPL) as published\n\n##of the License, or (at your option) any later version.\n\n##\n\n##This program is distributed in the hope that it will be useful,\n\n##but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n##MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n##GNU General Public License for more details.\n\n##\n\n##To read the license please visit http://www.gnu.org/copyleft/gpl.html\n\n##=======================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##=======================================================================\n\n##   PLEASE SET THESE VARIABLES BEFORE COMPILING\n\n##=======================================================================\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##=======================================================================\n\n##   DIRECTORY TREE\n\n##=======================================================================\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##=======================================================================\n\n##   COMPILERS\n\n##=======================================================================\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# either Gnu, Intel, PGI or XL for now\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##=======================================================================\n\n##   FLAGS\n\n##=======================================================================\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##=======================================================================\n\n##   TARGETS\n\n##=======================================================================\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "deps/CMakeLists.txt" : {
      "ObjectId" : "b26bc83eec8c0dc3ad9cb64fea954fede9ae113a",
      "LastModified" : "2017-09-22T16:08:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/iniparser/CMakeLists.txt" : {
      "ObjectId" : "27b4cd0a7392646a03d9f300894f84fa25974870",
      "LastModified" : "2017-09-22T16:08:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/jerasure/CMakeLists.txt" : {
      "ObjectId" : "9def23b3f8c5dbeae7c207b41b0674f154474bd8",
      "LastModified" : "2018-06-13T08:29:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "deps/md5/CMakeLists.txt" : {
      "ObjectId" : "2d5e10ee5d7e96fd194775fe11e2faba672bf565",
      "LastModified" : "2017-09-22T16:08:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/Doxygen/CMakeLists.txt" : {
      "ObjectId" : "8ded7225762e661e1c1eaaa90c609481ccb56709",
      "LastModified" : "2018-06-13T08:29:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "1ce6ff6083a9b084d73c573040e81ae65420d30c",
      "LastModified" : "2018-06-13T08:29:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "intel.cmake" : {
      "ObjectId" : "d8e0244e9e259262a12978192bfe046a54c5cc62",
      "LastModified" : "2018-06-13T08:29:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "02be5469769e629791d36f04f0af8b3164aa804f",
      "LastModified" : "2019-01-31T16:15:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/ckptHierarchy/CMakeLists.txt" : {
      "ObjectId" : "40e2d05c06a35aeb2f0fcd17028da4d0ab041d6c",
      "LastModified" : "2018-06-13T08:29:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/cornerCases/CMakeLists.txt" : {
      "ObjectId" : "3956229791e342475206486f7e8abbc7eed3abdb",
      "LastModified" : "2018-06-13T08:29:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/cuda/CMakeLists.txt" : {
      "ObjectId" : "40c68dec055e051ab8b0f42f5f7d4b5c9d2b2bc7",
      "LastModified" : "2018-12-23T22:00:11Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/local/CMakeLists.txt" : {
      "ObjectId" : "42804d57f9590aca9dd6a0c590482a5fa5b53024",
      "LastModified" : "2019-02-11T15:43:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#  add_executable(check.exe checkAll.c cudaTest.cu)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/local/dCPGPU/CMakeLists.txt" : {
      "ObjectId" : "94bff70275a787ae9404336168ee16538e8b0557",
      "LastModified" : "2019-01-31T16:15:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/local/hdf5GPU/CMakeLists.txt" : {
      "ObjectId" : "85ee52bb73542c80bbb574a43517a73d64305550",
      "LastModified" : "2019-01-31T16:15:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "vendor/bpp/CMakeLists.txt" : {
      "ObjectId" : "bf749ca5e1b869fe796d6214da3835d06eb7152c",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##############################################################################\n\n# Copyright (c) 2013-2014, Julien Bigot - CEA (julien.bigot@cea.fr)\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\n# THE SOFTWARE.\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# protect the project call to workaround a cmake bug\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in tree config\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# installable config\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "vendor/bpp/cmake/Bpp.cmake" : {
      "ObjectId" : "8522c0a9b6baf389a9e65eb1f9e332fbb9895cfd",
      "LastModified" : "2019-01-29T09:45:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# Copyright (c) 2013-2014, Julien Bigot - CEA (julien.bigot@cea.fr)\n\n# All rights reserved.\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\n# THE SOFTWARE.\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# A function to generate the BPP config.bpp.sh file\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# A function to preprocess a source file with BPP\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# old function signature for compatibility\n",
        "Line" : 52,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "vendor/bpp/cmake/TestFortType.cmake" : {
      "ObjectId" : "f9c4a90fa54783e95de68c37f66792768ba831e2",
      "LastModified" : "2019-01-29T09:45:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# Copyright (c) 2013-2014, Julien Bigot - CEA (julien.bigot@cea.fr)\n\n# All rights reserved.\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\n# THE SOFTWARE.\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "vendor/bpp/examples/cmake_global/CMakeLists.txt" : {
      "ObjectId" : "66a572f0ef430ff9242782a576b9367cd27b14b9",
      "LastModified" : "2019-01-29T09:45:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# Copyright (c) 2013-2014, Julien Bigot - CEA (julien.bigot@cea.fr)\n\n# All rights reserved.\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\n# THE SOFTWARE.\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "vendor/bpp/examples/cmake_local/CMakeLists.txt" : {
      "ObjectId" : "ca160eba1b579caca92564744659766e36470a41",
      "LastModified" : "2019-01-29T09:45:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n# Copyright (c) 2013-2014, Julien Bigot - CEA (julien.bigot@cea.fr)\n\n# All rights reserved.\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\n# THE SOFTWARE.\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "vendor/bpp/examples/makefile_global/Makefile" : {
      "ObjectId" : "b538debaf24129dc6ecc15060aebd06dabc449e1",
      "LastModified" : "2019-01-29T09:45:56Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "################################################################################\n\n# Copyright (c) 2013-2014, Julien Bigot - CEA (julien.bigot@cea.fr)\n\n# All rights reserved.\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\n# THE SOFTWARE.\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# adapt to your installation path\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# for in-tree (no-install) usage\n\n#include ~/bpp_build/bpp.mk\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "vendor/bpp/examples/makefile_local/Makefile" : {
      "ObjectId" : "a114111dcf441ff96a52d6507f6e047e6d11b3a6",
      "LastModified" : "2019-01-29T09:45:56Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "################################################################################\n\n# Copyright (c) 2013-2014, Julien Bigot - CEA (julien.bigot@cea.fr)\n\n# All rights reserved.\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\n# THE SOFTWARE.\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 25,
    "MAKEFILE" : 3
  },
  "ElapsedTime" : 1570
}