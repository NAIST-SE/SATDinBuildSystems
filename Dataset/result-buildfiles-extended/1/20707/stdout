{
  "Repository" : "20707",
  "Revision" : "HEAD",
  "ObjectId" : "b32cc4eddef22f84ee6b92a821dad452b331650e",
  "CommitTime" : "2019-04-15T14:46:35Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "b446796214f2c6a7f6769fe0439cc42ab05994a4",
      "LastModified" : "2019-03-29T14:17:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Allow VERSION specifier in project()\n",
        "Line" : 2,
        "CharPositionInLine" : 32
      },
      "1" : {
        "Text" : "# short name, caps\n",
        "Line" : 6,
        "CharPositionInLine" : 24
      },
      "2" : {
        "Text" : "# short name lower case\n",
        "Line" : 7,
        "CharPositionInLine" : 47
      },
      "3" : {
        "Text" : "# \"dev\", \"betaX\", \"RCY\", \"\"\n",
        "Line" : 8,
        "CharPositionInLine" : 43
      },
      "4" : {
        "Text" : "# Prefer files from the CMake module directory when including from there.\n\n# Detect AppleClang for new CMake\n\n# Don't error on non-existent dependency in add_dependencies.\n",
        "Line" : 15,
        "CharPositionInLine" : 32
      },
      "5" : {
        "Text" : "# Alternate names\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# N.B./FIXME - after CMake 3.0 is our minimum, we should change many of the\n\n# add_definitions to add_compile_options. In newer cmake versions, the\n\n# former is designated for definitions (-Dblah) and the latter is for\n\n# compile flags (-Wno-foo).\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# All the C++ and compiler related options live here\n",
        "Line" : 62,
        "CharPositionInLine" : 21
      },
      "8" : {
        "Text" : "# Set the default namespace\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# We want CTest for testing\n\n# N.B. This needs to be added before any of the subdirectories, or\n\n# their add_test commands will not register.\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Tell CMake to process the sub-directories\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Add IO plugin directories -- if we are embedding plugins, we need to visit\n\n# these directories BEFORE the OpenImageIO target is established (in\n\n# src/libOpenImageIO). For each plugin, we append to the lists of source\n\n# files, format libs, include directories, and definitions, all of which\n\n# will be used by src/libOpenImageIO.\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# SPI only -- because of a workaround for a very weird linkage issue\n\n# specific to our system, we need to be sure libtiff is referenced first.\n",
        "Line" : 172,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Add IO plugin directories -- if we are not embedding plugins, we need to\n\n# do it AFTER the OpenImageIO target is established (in src/libOpenImageIO),\n\n# since each plugin needs libOpenImageIO to be a dependency.\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# install pkgconfig file\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Oddball: install the FindOpenImageIO.cmake file\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#########################################################################\n\n# Testing\n\n#\n\n# Just call oiio_add_tests(testname...) for each test.  Additional\n\n# optional arguments include:\n\n#     FOUNDVAR   specifies the name of a CMAKE variable; if not defined,\n\n#                    the test will not be added for 'make test' (helpful\n\n#                    for excluding tests for libraries not found).\n\n#     IMAGEDIR   specifies a directory for test images, one level higher\n\n#                    than where the oiio top level source lives -- a\n\n#                    message will be printed if not found.\n\n#     URL        URL where the test images can be found, will be\n\n#                    incorporated into the error message if the test\n\n#                    image directory is not found.\n\n#     LABEL      If set to \"broken\", will designate the test as one\n\n#                    that is known to be broken, so will only be run\n\n#                    for \"make testall\", but not \"make test\".\n\n#\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Make a build/platform/testsuite directory, and copy the master runtest.py\n\n# there. The rest is up to the tests themselves.\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Basic tests that apply even to continuous integration tests:\n\n#   Tests that require oiio-images:\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "## maketx & oiiotool-maketx depend on this\n",
        "Line" : 268,
        "CharPositionInLine" : 32
      },
      "20" : {
        "Text" : "#   Tests that require openexr-images:\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#   Remaining freestanding tests:\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Travis + old libjpeg seems to not catch an error in this test, skip it\n\n# for that case.\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Add tests that require the Python bindings if we built the Python\n\n# bindings. This is mostly the test that are specifically about testing\n\n# the Python bindings themselves, but also a handful of tests that are\n\n# mainly about other things but happen to use Python in order to perform\n\n# thee test.\n\n# We also exclude these tests if this is a sanitizer build on Linux,\n\n# because the Python interpreter itself won't be linked with the right asan\n\n# libraries to run correctly.\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Add tests that require OCIO\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Advanced tests that are done by hand and for releases:\n\n# FIXME -- at some point, try to fix these or provide new ref images\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# List testsuites which need special external reference images from the web\n\n# here:\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#########################################################################\n\n# Packaging\n",
        "Line" : 418,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# \"Vendor\" is only used in copyright notices, so we use the same thing that\n\n# the rest of the copyright notices say.\n",
        "Line" : 423,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#SET (CPACK_PACKAGE_INSTALL_DIRECTORY \"${PROJECT_SOURCE_DIR}\")\n",
        "Line" : 429,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#SET (CPACK_STRIP_FILES Do we need this?)\n",
        "Line" : 437,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#    set(CPACK_CREATE_DESCTOP_LINKS \"iv\" \"iv - Image Viewer\")\n",
        "Line" : 449,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#set (CPACK_SOURCE_STRIP_FILES Do we need this?)\n",
        "Line" : 454,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 33
    },
    "Makefile" : {
      "ObjectId" : "6b9941dd8108b7c8b9b6325b116ee66ef69497cb",
      "LastModified" : "2019-03-29T14:17:40Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#########################################################################\n\n#\n\n# This is the master makefile.\n\n# Here we put all the top-level make targets, platform-independent\n\n# rules, etc.\n\n#\n\n# Run 'make help' to list helpful targets.\n\n#\n\n#########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Figure out which architecture we're on\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Presence of make variables DEBUG and PROFILE cause us to make special\n\n# builds, which we put in their own areas.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Site-specific build instructions\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set up variables holding the names of platform-dependent directories --\n\n# set these after evaluating site-specific instructions\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Old names -- DEPRECATED (1.9)\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# N.B. when fixing, you don't want parallel jobs!\n",
        "Line" : 330,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#$(info MY_CMAKE_FLAGS = ${MY_CMAKE_FLAGS})\n\n#$(info MY_MAKE_FLAGS = ${MY_MAKE_FLAGS})\n",
        "Line" : 349,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#########################################################################\n",
        "Line" : 352,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#########################################################################\n\n# Top-level documented targets\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# 'make debug' is implemented via recursive make setting DEBUG\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# 'make profile' is implemented via recursive make setting PROFILE\n",
        "Line" : 366,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# 'make cmakesetup' constructs the build directory and runs 'cmake' there,\n\n# generating makefiles to build the project.  For speed, it only does this when\n\n# ${build_dir}/Makefile doesn't already exist, in which case we rely on the\n\n# cmake generated makefiles to regenerate themselves when necessary.\n",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# 'make cmake' does a basic build (after first setting it up)\n",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# 'make cmakeinstall' builds everthing and installs it in 'dist'.\n\n# Suppress pointless output from docs installation.\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# 'make package' builds everything and then makes an installable package\n\n# (platform dependent -- may be .tar.gz, .sh, .dmg, .rpm, .deb. .exe)\n",
        "Line" : 394,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# 'make package_source' makes an installable source package\n\n# (platform dependent -- may be .tar.gz, .sh, .dmg, .rpm, .deb. .exe)\n",
        "Line" : 399,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# 'make clang-format' runs clang-format on all source files (if it's installed)\n",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# 'make cmake' does a basic build (after first setting it up)\n",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# 'make cmakeinstall' builds everthing and installs it in 'dist'.\n\n# Suppress pointless output from docs installation.\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# 'make package' builds everything and then makes an installable package\n\n# (platform dependent -- may be .tar.gz, .sh, .dmg, .rpm, .deb. .exe)\n",
        "Line" : 419,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# 'make package_source' makes an installable source package\n\n# (platform dependent -- may be .tar.gz, .sh, .dmg, .rpm, .deb. .exe)\n",
        "Line" : 424,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# 'make clang-format' runs clang-format on all source files (if it's installed)\n",
        "Line" : 429,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# 'make dist' is just a synonym for 'make cmakeinstall'\n",
        "Line" : 435,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# 'make test' does a full build and then runs all tests\n",
        "Line" : 440,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# 'make testall' does a full build and then runs all tests (even the ones\n\n# that are expected to fail on some platforms)\n",
        "Line" : 451,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# 'make clean' clears out the build directory for this platform\n",
        "Line" : 457,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# 'make realclean' clears out both build and dist directories for this platform\n",
        "Line" : 461,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# 'make nuke' blows away the build and dist areas for all platforms\n",
        "Line" : 465,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#########################################################################\n",
        "Line" : 473,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# 'make help' prints important make targets\n",
        "Line" : 477,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 31
    },
    "src/bmp.imageio/CMakeLists.txt" : {
      "ObjectId" : "1fae40998082e8044b39e496f662155ddb6bde44",
      "LastModified" : "2010-01-12T09:26:26Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/cineon.imageio/CMakeLists.txt" : {
      "ObjectId" : "b4b3f3921a6689ff8d1957ba30608f66560f1235",
      "LastModified" : "2017-03-23T21:49:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/cmake/compiler.cmake" : {
      "ObjectId" : "c49cbc571726c786ad4ff29cc5d52844a0481fef",
      "LastModified" : "2019-01-15T22:15:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n# Compiler-related detection, options, and actions\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Eventually: want this to be: \"src/*.h;src/*.cpp\"\n",
        "Line" : 27,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Figure out which compiler we're using\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Figure out which compiler we're using, for tricky cases\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# If using any flavor of clang, set CMAKE_COMPILER_IS_CLANG. If it's\n\n# Apple's variety, set CMAKE_COMPILER_IS_APPLECLANG and\n\n# APPLECLANG_VERSION_STRING, otherwise for generic clang set\n\n# CLANG_VERSION_STRING.\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# turn on more detailed warnings and consider warnings as errors\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# N.B. Force CI builds (Travis defines $CI) to use -Werror, even if\n\n# STOP_ON_WARNING has been switched off by default, which we may do\n\n# in release branches.\n",
        "Line" : 81,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# cmake bug workaround -- on some platforms, cmake doesn't set\n\n# NDEBUG for RelWithDebInfo mode\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Options common to gcc and clang\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# CMake doesn't automatically know what do do with\n\n# include_directories(SYSTEM...) when using clang or gcc.\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Ensure this macro is set for stdint.h\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# this allows native instructions to be used for sqrtf instead of a function call\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Turn default symbol visibility to hidden\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Linux/FreeBSD/Hurd: also hide all the symbols of dependent\n\n# libraries to prevent clashes if an app using OIIO is linked\n\n# against other verions of our dependencies.\n",
        "Line" : 110,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Clang-specific options\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Disable some warnings for Clang, for some things that are too awkward\n\n# to change just for the sake of having no warnings.\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# disable warning about unused command line arguments\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Don't warn if we ask it not to warn about warnings it doesn't know\n",
        "Line" : 134,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Don't warn about using unknown preprocessor symbols in #if'set\n",
        "Line" : 141,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# gcc specific options\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Microsoft specific options\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Use ccache if found\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C++ >= 11 doesn't like 'register' keyword, which is in Qt headers\n",
        "Line" : 191,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# GCC 5+: honor build-time option for whether or not to use new string ABI.\n\n# FIXME: In theory, this should also be needed for clang, if compiling with\n\n# the gcc libstdc++ toolchain. In practice, I could not get things to build\n\n# with clang properly when using this option, and I haven't yet seen a case\n\n# where it's needed. We can return to this and fix for clang if it becomes a\n\n# legit problem later.\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# SIMD and machine architecture options\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# If fma is requested, for numerical accuracy sake, turn it\n\n# off by default except when we explicitly use madd. At some\n\n# future time, we should look at this again carefully and\n\n# see if we want to use it more widely by ffp-contract=fast.\n",
        "Line" : 232,
        "CharPositionInLine" : 16
      },
      "26" : {
        "Text" : "# Test for features\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Find out if it's safe for us to use std::regex or if we need boost.regex\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Code coverage options\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Sanitizer options\n",
        "Line" : 282,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# set (SANITIZE_LIBRARIES \"asan\" \"ubsan\")\n",
        "Line" : 303,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# turn on glibcxx extra annotations to find vector writes past end\n",
        "Line" : 306,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# clang-tidy options\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Hint: run with CLANG_TIDY_ARGS=-list-checks to list all the checks\n",
        "Line" : 338,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# clang-format\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Start with the list of files to include when formatting...\n",
        "Line" : 351,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "# ... then process any list of excludes we are given\n",
        "Line" : 353,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "#message (STATUS \"clang-format file list: ${FILES_TO_FORMAT}\")\n",
        "Line" : 358,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# On Linux, the lack of -fPIC when building static libraries seems\n\n# incompatible with the dynamic library needed for the Python bindings.\n",
        "Line" : 379,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : "# Use .a files if LINKSTATIC is enabled\n",
        "Line" : 387,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 40
    },
    "src/cmake/externalpackages.cmake" : {
      "ObjectId" : "9449269c50f58731b1b81e2995aa9aab1ff9158d",
      "LastModified" : "2019-03-29T14:17:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n# Find libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# When not in VERBOSE mode, try to make things as quiet as possible\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###########################################################################\n\n# TIFF\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "###########################################################################\n\n# Several packages need Zlib\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###########################################################################\n\n# PNG\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "###########################################################################\n\n# IlmBase & OpenEXR setup\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#OpenEXR 2.2 still has problems with importing ImathInt64.h unqualified\n\n#thus need for ilmbase/OpenEXR\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# OpenEXR setup\n\n###########################################################################\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "###########################################################################\n\n# Boost setup\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# N.B. For a custom version, the caller had better set up the variables\n\n# Boost_VERSION, Boost_INCLUDE_DIRS, Boost_LIBRARY_DIRS, Boost_LIBRARIES.\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# end Boost setup\n\n###########################################################################\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "###########################################################################\n\n# OpenGL setup\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# end OpenGL setup\n\n###########################################################################\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "###########################################################################\n\n# OpenColorIO Setup\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# If 'OCIO_PATH' not set, use the env variable of that name if available\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# end OpenColorIO setup\n\n###########################################################################\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "###########################################################################\n\n# Qt setup\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# end Qt setup\n\n###########################################################################\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "###########################################################################\n\n# BZIP2 - used by ffmped and freetype\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Used by ffmpeg\n",
        "Line" : 203,
        "CharPositionInLine" : 23
      },
      "20" : {
        "Text" : "###########################################################################\n\n# FFmpeg\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# end FFmpeg setup\n\n###########################################################################\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "###########################################################################\n\n# Field3d\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# N.B. For a custom version, the caller had better set up the\n\n# variables HDF5_INCLUDE_DIRS and HDF5_LIBRARIES.\n",
        "Line" : 238,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# end Field3d setup\n\n###########################################################################\n",
        "Line" : 290,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "###########################################################################\n\n# Intel TBB\n",
        "Line" : 294,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# 2017 min for VFX Platform 2018\n",
        "Line" : 300,
        "CharPositionInLine" : 32
      },
      "27" : {
        "Text" : "# end Intel TBB setup\n\n###########################################################################\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "###########################################################################\n\n# OpenVDB\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# 5.0 min for VFX Platform 2017\n",
        "Line" : 319,
        "CharPositionInLine" : 33
      },
      "30" : {
        "Text" : "# end OpenVDB setup\n\n###########################################################################\n",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "###########################################################################\n\n# JPEG\n",
        "Line" : 341,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Try to find the non-turbo version\n",
        "Line" : 351,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# end JPEG\n\n###########################################################################\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "###########################################################################\n\n# OpenJpeg\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# end OpenJpeg setup\n\n###########################################################################\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "###########################################################################\n\n# LibRaw\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# end LibRaw setup\n\n###########################################################################\n",
        "Line" : 396,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "###########################################################################\n\n# WebP setup\n",
        "Line" : 400,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# end Webp setup\n\n###########################################################################\n",
        "Line" : 427,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "###########################################################################\n\n# Pugixml setup.  Normally we just use the version bundled with oiio, but\n\n# some linux distros are quite particular about having separate packages so we\n\n# allow this to be overridden to use the distro-provided package if desired.\n",
        "Line" : 430,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# insert include path to pugixml first, to ensure that the external\n\n# pugixml is found, and not the one in OIIO's include directory.\n",
        "Line" : 436,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "###########################################################################\n\n# OpenCV setup\n",
        "Line" : 443,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# end OpenCV setup\n\n###########################################################################\n",
        "Line" : 457,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "###########################################################################\n\n# Freetype setup\n",
        "Line" : 461,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# end Freetype setup\n\n###########################################################################\n",
        "Line" : 479,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "###########################################################################\n\n# GIF\n",
        "Line" : 483,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# end GIF setup\n\n###########################################################################\n",
        "Line" : 488,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "###########################################################################\n\n# PTex\n",
        "Line" : 492,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# end PTEX setup\n\n###########################################################################\n",
        "Line" : 501,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "###########################################################################\n\n# DCMTK\n",
        "Line" : 505,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# end DCMTK setup\n\n###########################################################################\n",
        "Line" : 514,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "###########################################################################\n\n# HEIF\n",
        "Line" : 518,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# end HEIF setup\n\n###########################################################################\n",
        "Line" : 523,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "###########################################################################\n\n# pybind11\n",
        "Line" : 527,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# If we weren't told to force our own download/build of pybind11, look\n\n# for an installed version. Still prefer a copy that seems to be\n\n# locally installed in this tree.\n",
        "Line" : 537,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# Check the version -- if it's too old, download a local copy.\n",
        "Line" : 547,
        "CharPositionInLine" : 4
      },
      "57" : {
        "Text" : "# If an external copy wasn't found and we requested that missing\n\n# packages be built, or we we are forcing a local copy to be built, then\n\n# download and build it.\n",
        "Line" : 563,
        "CharPositionInLine" : 4
      },
      "58" : {
        "Text" : "###########################################################################\n\n# Tessil/robin-map\n",
        "Line" : 610,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# If we weren't told to force our own download/build of robin-map, look\n\n# for an installed version. Still prefer a copy that seems to be\n\n# locally installed in this tree.\n",
        "Line" : 619,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "# If an external copy wasn't found and we requested that missing\n\n# packages be built, or we we are forcing a local copy to be built, then\n\n# download and build it.\n\n# Download the headers from github\n",
        "Line" : 629,
        "CharPositionInLine" : 4
      },
      "61" : {
        "Text" : "###########################################################################\n",
        "Line" : 660,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 62
    },
    "src/cmake/install.cmake" : {
      "ObjectId" : "f280227e775e6fe8c15a54fc86ade8b1c3c55cbd",
      "LastModified" : "2018-10-13T21:29:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n# Rpath handling at the install step\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We need to disallow the user from truly setting CMAKE_SKIP_RPATH, since\n\n# we want to run the generated executables from the build tree in order to\n\n# generate the manual page documentation.  However, we make sure the\n\n# install rpath is unset so that the install tree is still free of rpaths\n\n# for linux packaging purposes.\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# add the automatically determined parts of the RPATH that\n\n# point to directories outside the build tree to the install RPATH\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "src/cmake/modules/FindDCMTK.cmake" : {
      "ObjectId" : "83f3956146264bf72672f929528c2e7c01ca7377",
      "LastModified" : "2018-10-13T21:29:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Module to find DCMTK\n\n#\n\n# This module will first look into the directories defined by the variables:\n\n#   - DCMTK_PATH, DCMTK_INCLUDE_PATH, DCMTK_LIBRARY_PATH\n\n#\n\n# This module defines the following variables:\n\n#\n\n# DCMTK_FOUND            True if DCMTK was found.\n\n# DCMTK_INCLUDES         Where to find DCMTK headers\n\n# DCMTK_LIBRARIES        List of libraries to link against when using DCMTK\n\n# DCMTK_VERSION          Version of DCMTK (e.g., 3.6.2)\n\n# DCMTK_VERSION_NUMBER   Int version of DCMTK (e.g., 362 for 3.6.2)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/cmake/modules/FindFFmpeg.cmake" : {
      "ObjectId" : "d069c0e3ad2e4c5ebfd6584ef151cf7fee2b20a6",
      "LastModified" : "2017-03-23T21:49:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find ffmpeg libraries (libavcodec, libavformat and libavutil)\n\n# Once done this will define\n\n#\n\n#  FFMPEG_FOUND - system has ffmpeg or libav\n\n#  FFMPEG_INCLUDE_DIR - the ffmpeg include directory\n\n#  FFMPEG_LIBRARIES - Link these to use ffmpeg\n\n#  FFMPEG_LIBAVCODEC\n\n#  FFMPEG_LIBAVFORMAT\n\n#  FFMPEG_LIBAVUTIL\n\n#\n\n#  Copyright (c) 2008 Andreas Schneider <mail@cynapses.org>\n\n#  Modified for other libraries by Lasse Kärkkäinen <tronic>\n\n#  Modified for Hedgewars by Stepik777\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "src/cmake/modules/FindJPEGTurbo.cmake" : {
      "ObjectId" : "727ecb37e52ddeb928379d3a6667cd7d9b90f884",
      "LastModified" : "2017-03-23T21:49:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libjpeg-turbo\n\n# Once done, this will define\n\n#\n\n#  JPEG_FOUND - system has libjpeg-turbo\n\n#  JPEG_INCLUDE_DIRS - the libjpeg-turbo include directories\n\n#  JPEG_LIBRARIES - link these to use libjpeg-turbo\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set JPEG_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/cmake/modules/FindLibRaw.cmake" : {
      "ObjectId" : "6829760667653e32d928b1a90137c5fd2ee13b0a",
      "LastModified" : "2018-10-13T21:29:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find LibRaw\n\n# Find the LibRaw library <http://www.libraw.org>\n\n# This module defines\n\n#  LibRaw_VERSION_STRING, the version string of LibRaw\n\n#  LibRaw_INCLUDE_DIR, where to find libraw.h\n\n#  LibRaw_LIBRARIES, the libraries needed to use LibRaw (non-thread-safe)\n\n#  LibRaw_r_LIBRARIES, the libraries needed to use LibRaw (thread-safe)\n\n#  LibRaw_DEFINITIONS, the definitions needed to use LibRaw (non-thread-safe)\n\n#  LibRaw_r_DEFINITIONS, the definitions needed to use LibRaw (thread-safe)\n\n#\n\n# Copyright (c) 2013, Pino Toscano <pino at kde dot org>\n\n# Copyright (c) 2013, Gilles Caulier <caulier dot gilles at gmail dot com>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/cmake/modules/FindLibheif.cmake" : {
      "ObjectId" : "af35e7d623984c1ef4563a1b34bf2a0353d7cb37",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Module to find LIBHEIF\n\n#\n\n# This module will first look into the directories defined by the variables:\n\n#   - LIBHEIF_PATH, LIBHEIF_INCLUDE_PATH, LIBHEIF_LIBRARY_PATH\n\n#\n\n# This module defines the following variables:\n\n#\n\n# LIBHEIF_FOUND            True if LIBHEIF was found.\n\n# LIBHEIF_INCLUDES         Where to find LIBHEIF headers\n\n# LIBHEIF_LIBRARIES        List of libraries to link against when using LIBHEIF\n\n# LIBHEIF_VERSION          Version of LIBHEIF (e.g., 3.6.2)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/cmake/modules/FindNuke.cmake" : {
      "ObjectId" : "b685362e8e0ba9d3ec7e00585fde1bcc6d7d673d",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - CMake find module for Nuke\n\n#\n\n# If requesting a specific release, the Nuke version string must be converted\n\n# to a CMake-compatible version number before being passed to `find_package`.\n\n# This should be done as follows:\n\n#  6.3v8      ->   6.3.8\n\n#  7.0v1b100  ->   7.0.1.100\n\n#\n\n# Input variables:\n\n#  Nuke_ROOT\n\n#\n\n# Output variables:\n\n#  NUKE_FOUND\n\n#  NUKE_EXECUTABLE\n\n#  NUKE_INCLUDE_DIRS\n\n#  NUKE_LIBRARY_DIRS\n\n#  NUKE_LIBRARIES\n\n#  NUKE_DDIMAGE_LIBRARY\n\n#  NUKE_VERSION_MAJOR\n\n#  NUKE_VERSION_MINOR\n\n#  NUKE_VERSION_RELEASE\n\n#\n\n#\n\n# Version table (for reference only)\n\n#    5.0v1 5.0v2\n\n#    5.1v1 5.1v2 5.1v3 5.1v4 5.1v5 5.1v6\n\n#    5.2v1 5.2v2 5.2v3\n\n#    6.0v1 6.0v2 6.0v3 6.0v4 6.0v5 6.0v6 6.0v7\n\n#    6.1v1 6.1v2 6.1v3 6.1v4 6.1v5\n\n#    6.2v1 6.2v2 6.2v3 6.2v4 6.2v5 6.2v6\n\n#    6.3v1 6.3v2 6.3v3 6.3v4 6.3v5 6.3v6 6.3v7 6.3v8 6.3v9\n\n#    7.0v1 7.0v2 7.0v3 7.0v4)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# List of Nuke-style strings (e.g. \"7.0v4\")\n",
        "Line" : 35,
        "CharPositionInLine" : 25
      },
      "2" : {
        "Text" : "# If Nuke_ROOT is set, don't even bother with anything else\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO: Macro for duplicated nested loop code? (to generate permutations)\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# An \"exact\" version was requested, but we weren't given a release.\n",
        "Line" : 46,
        "CharPositionInLine" : 16
      },
      "5" : {
        "Text" : "# Beta version\n",
        "Line" : 51,
        "CharPositionInLine" : 16
      },
      "6" : {
        "Text" : "# Partial version\n",
        "Line" : 57,
        "CharPositionInLine" : 16
      },
      "7" : {
        "Text" : "# E.g. 6\n",
        "Line" : 59,
        "CharPositionInLine" : 20
      },
      "8" : {
        "Text" : "# Go for highest 6.x version\n",
        "Line" : 62,
        "CharPositionInLine" : 20
      },
      "9" : {
        "Text" : "# E.g. 6.3\n",
        "Line" : 65,
        "CharPositionInLine" : 20
      },
      "10" : {
        "Text" : "# To avoid the need to keep this module up to date with the full Nuke\n\n# release list, we just build a list of possible releases for the\n\n# MAJOR.MINOR pair (currently using possible release versions v1-v13)\n\n# We don't try and auto-locate beta versions.\n",
        "Line" : 71,
        "CharPositionInLine" : 20
      },
      "11" : {
        "Text" : "# Full version or beta\n",
        "Line" : 85,
        "CharPositionInLine" : 16
      },
      "12" : {
        "Text" : "# Beta version\n",
        "Line" : 88,
        "CharPositionInLine" : 20
      },
      "13" : {
        "Text" : "# If we're just grabbing any available version, we want the *highest* one\n\n# we can find, so flip the known versions list.\n",
        "Line" : 95,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Linux\n",
        "Line" : 109,
        "CharPositionInLine" : 11
      },
      "15" : {
        "Text" : "# Base search around DDImage, since its name is unversioned\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Sanity-check to avoid a bunch of redundant errors.\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Pull version information from header\n\n# (We could pull the DDImage path apart instead, but this avoids dealing\n\n# with platform-specific naming.)\n",
        "Line" : 135,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Finalize search\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "src/cmake/modules/FindOpenCV.cmake" : {
      "ObjectId" : "8571ccc407a0f50f2d92f314f1daf413320fd963",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find OpenCV\n\n# Find the OpenCV library\n\n# This module defines\n\n#  OpenCV_VERSION, the version string of OpenCV\n\n#  OpenCV_INCLUDE_DIR, where to find header files\n\n#  OpenCV_LIBRARIES, the libraries needed to use OpenCV\n\n#  OpenCV_DEFINITIONS, the definitions needed to use OpenCV\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If that didn't work, try again with default paths\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "src/cmake/modules/FindOpenColorIO.cmake" : {
      "ObjectId" : "7fbe5d29120ee451b4f4f8cd83a54a9261b18c2b",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Module to find OpenColorIO\n\n#\n\n# This module will first look into the directories defined by the variables:\n\n#   - OCIO_PATH, OCIO_INCLUDE_PATH, OCIO_LIBRARY_PATH\n\n#\n\n# This module defines the following variables:\n\n#\n\n# OCIO_FOUND       - True if OpenColorIO was found.\n\n# OCIO_INCLUDES -    where to find OpenColorIO.h\n\n# OCIO_LIBRARIES   - list of libraries to link against when using OpenColorIO\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Other standarnd issue macros\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/cmake/modules/FindOpenEXR.cmake" : {
      "ObjectId" : "ec0d6bbad80624c071941b3c702fdd68a8fee43a",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Module to find OpenEXR.\n\n#\n\n# This module will set\n\n#   OPENEXR_FOUND          true, if found\n\n#   OPENEXR_INCLUDE_DIR    directory where headers are found\n\n#   OPENEXR_LIBRARIES      libraries for OpenEXR + IlmBase\n\n#   ILMBASE_LIBRARIES      libraries just IlmBase\n\n#   OPENEXR_VERSION        OpenEXR version (accurate for >= 2.0.0,\n\n#                              otherwise will just guess 1.6.1)\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Other standard issue macros\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Link with pthreads if required\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Attempt to find OpenEXR with pkgconfig\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# List of likely places to find the headers -- note priority override of\n\n# ${OPENEXR_ROOT_DIR}/include.\n\n# ILMBASE is needed in case ilmbase an openexr are installed in separate\n\n# directories, like NixOS does\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Find the include file locations. We call find_path twice -- first using\n\n# only the custom paths, then if that fails, try the default paths only.\n\n# This seems to be the most robust way I can find to not get confused when\n\n# both system and custom libraries are present.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Try to figure out version number\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Must be at least 2.0\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Assume an old one, predates 2.x that had versions\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# List of likely places to find the libraries -- note priority override of\n\n# ${OPENEXR_ROOT_DIR}/lib.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Handle request for static libs by altering CMAKE_FIND_LIBRARY_SUFFIXES.\n\n# We will restore it at the end of this file.\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Look for the libraries themselves, for all the components. Like with the\n\n# headers, we do two finds -- first for custom locations, then for default.\n\n# This is complicated because the OpenEXR libraries may or may not be\n\n# built with version numbers embedded.\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# First try with the version embedded\n",
        "Line" : 118,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Again, with no directory restrictions\n",
        "Line" : 123,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Try again without the version\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# One more time, with no restrictions\n",
        "Line" : 130,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Set the FOUND, INCLUDE_DIR, and LIBRARIES variables.\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Restore the original CMAKE_FIND_LIBRARY_SUFFIXES\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "src/cmake/modules/FindOpenImageIO.cmake" : {
      "ObjectId" : "4fab4f9814810926e1b8798e12c488f9dce9d64c",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n# OpenImageIO   https://www.openimageio.org\n\n# Copyright 2008-2018 Larry Gritz et al. All rights reserved.\n\n# BSD 3-clause license:\n\n#   https://github.com/OpenImageIO/oiio/blob/master/LICENSE\n\n# For an up-to-date version of this file, see:\n\n#   https://github.com/OpenImageIO/oiio/blob/master/src/cmake/Modules/FindOpenImageIO.cmake\n\n#\n\n###########################################################################\n\n#\n\n# CMake module to find OpenImageIO\n\n#\n\n# This module will set\n\n#   OPENIMAGEIO_FOUND          True, if found\n\n#   OPENIMAGEIO_INCLUDE_DIR    directory where headers are found\n\n#   OPENIMAGEIO_LIBRARIES      libraries for OIIO\n\n#   OPENIMAGEIO_LIBRARY_DIRS   library dirs for OIIO\n\n#   OPENIMAGEIO_VERSION        Version (\"major.minor.patch\")\n\n#   OPENIMAGEIO_VERSION_MAJOR  Version major number\n\n#   OPENIMAGEIO_VERSION_MINOR  Version minor number\n\n#   OPENIMAGEIO_VERSION_PATCH  Version minor patch\n\n#   OIIOTOOL_BIN               Path to oiiotool executable\n\n#\n\n# Special inputs:\n\n#   OPENIMAGEIO_ROOT_DIR - custom \"prefix\" location of OIIO installation\n\n#                          (expecting bin, lib, include subdirectories)\n\n#   OpenImageIO_FIND_QUIETLY - if set, print minimal console output\n\n#   OIIO_LIBNAME_SUFFIX - if set, optional nonstandard library suffix\n\n#\n\n###########################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If 'OPENIMAGE_HOME' not set, use the env variable of that name if available\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Try to figure out version number\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/cmake/modules/FindOpenJpeg.cmake" : {
      "ObjectId" : "b012d05b6aea2fdd10afdcaba9a222111e06972f",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Module to find OpenJpeg.\n\n#\n\n# This module will first look into the directories defined by the variables:\n\n#   - OPENJPEG_HOME\n\n#\n\n# This module defines the following variables:\n\n#\n\n# OPENJPEG_INCLUDE_DIR - where to find openjpeg.h\n\n# OPENJPEG_LIBRARIES   - list of libraries to link against when using OpenJpeg.\n\n# OPENJPEG_FOUND       - True if OpenJpeg was found.\n\n# OPENJPEG_VERSION     - Set to the OpenJPEG version found\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Properly define ${tmp_prefix}_LIBRARY (cached) and ${tmp_prefix}_LIBRARIES\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Add to the list of variables which should be reset\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Generic search paths\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Locate the header files\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If the headers were found, add its parent to the list of lib directories\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Search for opj_config.h -- it is only part of OpenJpeg >= 2.0, and will\n\n# contain symbols OPJ_VERSION_MAJOR and OPJ_VERSION_MINOR. If the file\n\n# doesn't exist, we're dealing with OpenJPEG 1.x.\n\n# Note that for OpenJPEG 2.x, the library is named libopenjp2, not\n\n# libopenjpeg (which is for 1.x)\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# 2.0 is the only one with this construct\n",
        "Line" : 126,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# 2.1 and beyond\n",
        "Line" : 130,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Guess OpenJPEG 1.5 -- older versions didn't have the version readily\n\n# apparent in the headers.\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Locate the OpenJpeg library\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Use the standard function to handle OPENJPEG_FOUND\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "src/cmake/modules/FindOpenVDB.cmake" : {
      "ObjectId" : "0d1146ed3f03e0457f41e31c56b58de943c16bc8",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find OPENVDB library\n\n# Find the native OPENVDB includes and library\n\n# This module defines\n\n#  OPENVDB_INCLUDE_DIRS, where to find openvdb.h, Set when\n\n#                            OPENVDB_INCLUDE_DIR is found.\n\n#  OPENVDB_LIBRARIES, libraries to link against to use OPENVDB.\n\n#  OPENVDB_ROOT_DIR, The base directory to search for OPENVDB.\n\n#                        This can also be an environment variable.\n\n#  OPENVDB_FOUND, If false, do not try to use OPENVDB.\n\n#\n\n# also defined, but not for general use are\n\n#  OPENVDB_LIBRARY, where to find the OPENVDB library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2015 Blender Foundation.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If OPENVDB_ROOT_DIR was defined in the environment, use it.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Fink\n",
        "Line" : 33,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 34,
        "CharPositionInLine" : 13
      },
      "5" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set OPENVDB_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/cmake/modules/FindPTex.cmake" : {
      "ObjectId" : "3456793ce3562f0753ecb4b9273bf161a8c82d5e",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Disney Enterprises, Inc.  All rights reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License\n\n# and the following modification to it: Section 6 Trademarks.\n\n# deleted and replaced with:\n\n#\n\n# 6. Trademarks. This License does not grant permission to use the\n\n# trade names, trademarks, service marks, or product names of the\n\n# Licensor and its affiliates, except as required for reproducing\n\n# the content of the NOTICE file.\n\n#\n\n# You may obtain a copy of the License at\n\n# http://www.apache.org/licenses/LICENSE-2.0\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/cmake/modules/FindPugiXML.cmake" : {
      "ObjectId" : "a54d8b0f1eed4a8366c6d2e43298991444849a4b",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find the pugixml XML parsing library.\n\n#\n\n# Sets the usual variables expected for find_package scripts:\n\n#\n\n# PUGIXML_INCLUDE_DIR - header location\n\n# PUGIXML_LIBRARIES - library to link against\n\n# PUGIXML_FOUND - true if pugixml was found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Support the REQUIRED and QUIET arguments, and set PUGIXML_FOUND if found.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/cmake/modules/FindTBB.cmake" : {
      "ObjectId" : "d541fc068a4196f3994b396535b4023eaec6ad8f",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c) 2015 Justus Calvin\n\n# \n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n# \n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# FindTBB\n\n# -------\n\n#\n\n# Find TBB include directories and libraries.\n\n#\n\n# Usage:\n\n#\n\n#  find_package(TBB [major[.minor]] [EXACT]\n\n#               [QUIET] [REQUIRED]\n\n#               [[COMPONENTS] [components...]]\n\n#               [OPTIONAL_COMPONENTS components...]) \n\n#\n\n# where the allowed components are tbbmalloc and tbb_preview. Users may modify \n\n# the behavior of this module with the following variables:\n\n#\n\n# * TBB_ROOT_DIR          - The base directory the of TBB installation.\n\n# * TBB_INCLUDE_DIR       - The directory that contains the TBB headers files.\n\n# * TBB_LIBRARY           - The directory that contains the TBB library files.\n\n# * TBB_<library>_LIBRARY - The path of the TBB the corresponding TBB library. \n\n#                           These libraries, if specified, override the \n\n#                           corresponding library search results, where <library>\n\n#                           may be tbb, tbb_debug, tbbmalloc, tbbmalloc_debug,\n\n#                           tbb_preview, or tbb_preview_debug.\n\n# * TBB_USE_DEBUG_BUILD   - The debug version of tbb libraries, if present, will\n\n#                           be used instead of the release version.\n\n#\n\n# Users may modify the behavior of this module with the following environment\n\n# variables:\n\n#\n\n# * TBB_INSTALL_DIR \n\n# * TBBROOT\n\n# * LIBRARY_PATH\n\n#\n\n# This module will set the following variables:\n\n#\n\n# * TBB_FOUND             - Set to false, or undefined, if we haven’t found, or\n\n#                           don’t want to use TBB.\n\n# * TBB_<component>_FOUND - If False, optional <component> part of TBB sytem is\n\n#                           not available.\n\n# * TBB_VERSION           - The full version string\n\n# * TBB_VERSION_MAJOR     - The major version\n\n# * TBB_VERSION_MINOR     - The minor version\n\n# * TBB_INTERFACE_VERSION - The interface version number defined in \n\n#                           tbb/tbb_stddef.h.\n\n# * TBB_<library>_LIBRARY_RELEASE - The path of the TBB release version of \n\n#                           <library>, where <library> may be tbb, tbb_debug,\n\n#                           tbbmalloc, tbbmalloc_debug, tbb_preview, or \n\n#                           tbb_preview_debug.\n\n# * TBB_<library>_LIBRARY_DEGUG - The path of the TBB release version of \n\n#                           <library>, where <library> may be tbb, tbb_debug,\n\n#                           tbbmalloc, tbbmalloc_debug, tbb_preview, or \n\n#                           tbb_preview_debug.\n\n#\n\n# The following varibles should be used to build and link with TBB:\n\n#\n\n# * TBB_INCLUDE_DIRS - The include directory for TBB.\n\n# * TBB_LIBRARIES    - The libraries to link against to use TBB.\n\n# * TBB_DEFINITIONS  - Definitions to use when compiling code that uses TBB.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##################################\n\n# Check the build type\n\n##################################\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "##################################\n\n# Set the TBB search directories\n\n##################################\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Define search paths based on user input and environment variables\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Define the search directories based on the current platform\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# TODO: Set the proper suffix paths based on compiler introspection.\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# OS X\n",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# TODO: Check to see which C++ library is being used by the compiler.\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# The default C++ library on OS X 10.9 and later is libc++\n",
        "Line" : 118,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Linux\n",
        "Line" : 124,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# TODO: Check compiler version to see the suffix should be <arch>/gcc4.1 or\n\n#       <arch>/gcc4.1. For now, assume that the compiler is more recent than\n\n#       gcc 4.4.x or later.\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "##################################\n\n# Find the TBB include dir\n\n##################################\n",
        "Line" : 137,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "##################################\n\n# Find TBB components\n\n##################################\n",
        "Line" : 146,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Find each component\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Search for the libraries\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Set the library to be used for the component\n",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Set the TBB library list and component found variables\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "##################################\n\n# Set compile flags\n\n##################################\n",
        "Line" : 189,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "##################################\n\n# Set version strings\n\n##################################\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 20
    },
    "src/cmake/oiio_macros.cmake" : {
      "ObjectId" : "cb6ffed859e611ae3cf417d169c18f24a2480805",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macro to install targets to the appropriate locations.  Use this instead of\n\n# the install(TARGETS ...) signature.\n\n#\n\n# Usage:\n\n#\n\n#    oiio_install_targets (target1 [target2 ...])\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Macro to add a build target for an IO plugin.\n\n#\n\n# Usage:\n\n#\n\n# add_oiio_plugin ( source1 [source2 ...]\n\n#                   [ INCLUDE_DIRS include_dir1 ... ]\n\n#                   [ LINK_LIBRARIES external_lib1 ... ]\n\n#                   [ DEFINITIONS -DFOO=bar ... ])\n\n#\n\n# The plugin name is deduced from the name of the current directory and the\n\n# source is automatically linked against OpenImageIO. Additional include\n\n# directories (just for this target) may be specified after the optional\n\n# INCLUDE_DIRS keyword. Additional libraries (for example, libpng) may be\n\n# specified after the optionl LINK_LIBRARIES keyword. Additional\n\n# preprocessor definitions may be specified after the optional DEFINITIONS\n\n# keyword.\n\n#\n\n# What goes on under the covers is quite different depending on whether\n\n# EMBEDPLUGINS is 0 or 1. If EMBEDPLUGINS is 0 (in which case this is\n\n# expected to be called *after* the OpenImageIO target is declared), it will\n\n# create a new target to build the full plugin. On the other hand, if\n\n# EMBEDPLUGINS is 1 (in which case this should be called *before* the\n\n# OpenImageIO target is declared), it will merely append the required\n\n# definitions, includs, and libraries to lists format_plugin_blah that will\n\n# be handed off too the setup of the later OpenImageIO target.\n\n#\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Arguments: <prefix> <options> <one_value_keywords> <multi_value_keywords> args...\n",
        "Line" : 43,
        "CharPositionInLine" : 7
      },
      "3" : {
        "Text" : "# Add each source file to the libOpenImageIO_srcs, but it takes some\n\n# bending over backwards to change it in the parent scope.\n",
        "Line" : 46,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Get the name of the current directory and use it as the target name.\n",
        "Line" : 57,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# oiio_set_testenv() - add environment variables to a test\n\n#\n\n# Usage:\n\n#   oiio_set_testenv ( testname\n\n#                      testsuite  - The root of all tests ${CMAKE_SOURCE_DIR}/testsuite\n\n#                      testsrcdir - Current test directory in ${CMAKE_SOURCE_DIR}\n\n#                      testdir    - Current test sandbox in ${CMAKE_BINARY_DIR}\n\n#                      IMAGEDIR   - Optional path to image reference/compare directory)\n\n#\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# oiio_add_tests() - add a set of test cases.\n\n#\n\n# Usage:\n\n#   oiio_add_tests ( test1 [ test2 ... ]\n\n#                    [ IMAGEDIR name_of_reference_image_directory ]\n\n#                    [ URL http://find.reference.cases.here.com ] )\n\n#\n\n# The optional argument IMAGEDIR is used to check whether external test images\n\n# (not supplied with OIIO) are present, and to disable the test cases if\n\n# they're not.  If IMAGEDIR is present, URL should also be included to tell\n\n# the user where to find such tests.\n\n#\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Arguments: <prefix> <options> <one_value_keywords> <multi_value_keywords> args...\n",
        "Line" : 105,
        "CharPositionInLine" : 7
      },
      "8" : {
        "Text" : "# If there was a FOUNDVAR param specified and that variable name is\n\n# not defined, mark the test as broken.\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# If the directory containig reference data (images) for the test\n\n# isn't found, point the user at the URL.\n",
        "Line" : 113,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Add the tests if all is well.\n",
        "Line" : 119,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# For texture tests, add a second test using batch mode as well.\n",
        "Line" : 146,
        "CharPositionInLine" : 12
      },
      "12" : {
        "Text" : "#if (VERBOSE)\n\n#    message (STATUS \"TEST ${_testname}: ${_runtest}\")\n\n#    # message (STATUS \"TEST ${_testname}: ${_runtest}\")\n\n#endif ()\n",
        "Line" : 155,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 13
    },
    "src/cmake/platform.cmake" : {
      "ObjectId" : "060fc131275d46f54d537aba857761a211fea94a",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################################################\n\n# Figure out what platform we're on, and set some variables appropriately\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMAKE_SYSTEM_PROCESSOR should not be used because it indicates the platform\n\n# we are building on, but when cross compiling or using a chroot this is not\n\n# what we want to use\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# minimum arch of i586 is needed for atomic cpu instructions\n",
        "Line" : 36,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 3
    },
    "src/dds.imageio/CMakeLists.txt" : {
      "ObjectId" : "345b2a95c806e429734723f92863b96fb123a72e",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/dicom.imageio/CMakeLists.txt" : {
      "ObjectId" : "6974274a83dd1733a30bec2079e4214b41473a5c",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/doc/CMakeLists.txt" : {
      "ObjectId" : "cd042562911f1f55b5228a7b909346b087f27af7",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# generate man pages using txt2man and a tiny python script to munge the\n\n# result of \"$tool --help\"\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# force man page build before install\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "src/doc/Makefile" : {
      "ObjectId" : "78a2de1b4962447cbcb4b8cd13f074a4540f2139",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# by default, just make the document\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# document making rule: use pdflatex\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# special command 'make index' to regenerate the index\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/dpx.imageio/CMakeLists.txt" : {
      "ObjectId" : "d3e6719eb068210ede7f23bbbfbe17c791d1b78c",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ffmpeg.imageio/CMakeLists.txt" : {
      "ObjectId" : "9248a7db60417049ebad6b7d01d5260b75637965",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make the build complete for newer ffmpeg versions (3.1.1+) that have\n\n# marked m_format_context->streams[i]->codec as deprecated.\n\n# FIXME -- at some point, come back and figure out how to fix for real\n\n# before the field disappears entirely.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/field3d.imageio/CMakeLists.txt" : {
      "ObjectId" : "5df851e518ec9666c9ce58ef2c9b0263a0160a60",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/fits.imageio/CMakeLists.txt" : {
      "ObjectId" : "912abf71165bbb86f672e465912ae10af94dce5a",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/fonts/CMakeLists.txt" : {
      "ObjectId" : "4912c81f5d8cc2e043939000e5cf4ded5b036698",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/gif.imageio/CMakeLists.txt" : {
      "ObjectId" : "67a70f22daf46f88495be99faac31658513390eb",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/hdr.imageio/CMakeLists.txt" : {
      "ObjectId" : "d6e8697c5e0e76c1c86501d54bc3f927da4e121a",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/heif.imageio/CMakeLists.txt" : {
      "ObjectId" : "f8e70c8217e2c6852f66a8e61b0c91da309e7714",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ico.imageio/CMakeLists.txt" : {
      "ObjectId" : "98375dfd74035db975ca0f610ccf57559042e150",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/iconvert/CMakeLists.txt" : {
      "ObjectId" : "79039346f558221d810028ac425f4e741cea40ec",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/idiff/CMakeLists.txt" : {
      "ObjectId" : "792ed31a4233357e8a7ae6916ee83ee18147feb1",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/iff.imageio/CMakeLists.txt" : {
      "ObjectId" : "aa404398ee90aff4f7da4d949f3899b187aebb8e",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/igrep/CMakeLists.txt" : {
      "ObjectId" : "1b5c0fec1713f9644f05886278a546b9f1af609f",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/iinfo/CMakeLists.txt" : {
      "ObjectId" : "386d3ad28e71e5627fabdf9767f45bc348afb086",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/include/CMakeLists.txt" : {
      "ObjectId" : "bad7aa3173f72bc5961f1d2c943229e0276cba15",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Mangle the SOVERSION so that it's a valid C++ identifier for the versioning\n\n# namespace defined in oiioversion.h\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Note: When our CMake minimum is at least 3.7, we can switch to less\n\n# complex statements with VERSION_GREATER_EQUAL.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/iv/CMakeLists.txt" : {
      "ObjectId" : "cb2f9e554021790bbffccf7c4c023e8c28e366c9",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/jpeg.imageio/CMakeLists.txt" : {
      "ObjectId" : "9dd7d5b45e098b18eb88d3356fa4c0821d85ee09",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/jpeg2000.imageio/CMakeLists.txt" : {
      "ObjectId" : "ee68aa2e39492e6cec5002ac9e44f9c31a347fba",
      "LastModified" : "2019-03-29T14:17:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Old OpenJpeg 1.5. Remove this eventually.\n\n#\n\n# For reasons I don't understand, OpenJPEG 1.5 fails imageinout_test\n\n# when we build in EMBEDPLUGINS=0 mode (works fine for\n\n# EMBEDPLUGINS=1). I don't care to do the work to figure out why,\n\n# for a rarely used build mode and an obsolete library version. So\n\n# for now, I'm just disabling jpeg2000 support for that combination.\n",
        "Line" : 3,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# OpenJpeg 2.x. Eventually this should be the only one we need.\n",
        "Line" : 17,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "src/libOpenImageIO/CMakeLists.txt" : {
      "ObjectId" : "802c6bf7f44a4a47829e351a9bc1e59048e8885c",
      "LastModified" : "2019-03-29T14:17:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make the build complete for newer ffmpeg versions (3.1.1+) that have\n\n# marked m_format_context->streams[i]->codec as deprecated.\n\n# FIXME -- at some point, come back and figure out how to fix for real\n\n# before the field disappears entirely.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If the 'EMBEDPLUGINS' option is set, we want to compile the source for\n\n# all the plugins into libOpenImageIO.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Organize the embedded plugins into source folders\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Source groups for libutil and libtexture\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# if (SANITIZE AND ${CMAKE_SYSTEM_NAME} STREQUAL \"Linux\")\n\n#     # target_link_libraries (OpenImageIO \"asan\" \"ubsan\")\n\n#     target_link_libraries (OpenImageIO ${SANITIZE_LIBRARIES})\n\n# endif ()\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add all the target link libraries from the plugins\n",
        "Line" : 116,
        "CharPositionInLine" : 45
      },
      "6" : {
        "Text" : "# Include OpenColorIO if using it\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Include OpenCV if using it\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Include Freetype if using it\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Include GDCM if using it\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# set_property(SOURCE dicominput.cpp APPEND_STRING PROPERTY COMPILE_FLAGS \" -Wno-macro-redefined \")\n",
        "Line" : 146,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# In some MSVC setups, the IBA functions with huge template expansions\n\n# can run into trouble if the /bigobj flag is not used. Turn it on for\n\n# these files most likely to use it.\n\n# FIXME: Does anybody know if there is an advantage to limiting it to\n\n# just the files that most need it? Or is it better to make it totally\n\n# foolproof by using /bigobj for all our modules on Windows?\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# For consistency with the linux SpComp2s, create Mac OS X SpComp2s\n\n# with a .so suffix instead of a .dylib suffix.\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Testing\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#add_test (imagespeed_test imagespeed_test)\n",
        "Line" : 245,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 15
    },
    "src/libutil/CMakeLists.txt" : {
      "ObjectId" : "743f4ce8bdad09b98ef38819453ab0fa1a29d068",
      "LastModified" : "2019-03-29T14:17:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For consistency with the linux SpComp2s, create Mac OS X SpComp2s\n\n# with a .so suffix instead of a .dylib suffix.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/maketx/CMakeLists.txt" : {
      "ObjectId" : "8cd5595285161548baf576998a9b1b095fb6eb3b",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/nuke/CMakeLists.txt" : {
      "ObjectId" : "daad0cfd897f6d79cebd590e0fa2f9c24a186cb6",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/nuke/txReader/CMakeLists.txt" : {
      "ObjectId" : "c36fbc0dce0546708b831ecf7d473083e0bc48bd",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ignore Nuke 10's use of deprecated auto_ptr\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/nuke/txWriter/CMakeLists.txt" : {
      "ObjectId" : "696123652494194673f889c94da5087467a3abe0",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Ignore Nuke 10's use of deprecated auto_ptr\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/null.imageio/CMakeLists.txt" : {
      "ObjectId" : "540fe4815beeafbda0572c9facc95b34b8ff8bf1",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/oiiotool/CMakeLists.txt" : {
      "ObjectId" : "4f2ee64853403b160d581566a9cc3840acd5b5b9",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/openexr.imageio/CMakeLists.txt" : {
      "ObjectId" : "614d3ce2bdd735f9f24156b1c0343cf274e1549c",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/openvdb.imageio/CMakeLists.txt" : {
      "ObjectId" : "ef1930d314987bc142941917c83f7a2dbf0ccb23",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/png.imageio/CMakeLists.txt" : {
      "ObjectId" : "6eabe340b272e18acac951488042a7c24bf90738",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/pnm.imageio/CMakeLists.txt" : {
      "ObjectId" : "4ef823afa8d116ccb7a08985f92d1b2acf49b98b",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/psd.imageio/CMakeLists.txt" : {
      "ObjectId" : "a0866ca9115f16c5ed2f2ea506dd16db3377b6fb",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/ptex.imageio/CMakeLists.txt" : {
      "ObjectId" : "933f9737b8d412e7ba792663db8d6de6a2d3f76c",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/python/CMakeLists.txt" : {
      "ObjectId" : "67aadb39ec1f56e3d59e494d5c1aa40d60776d71",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Attempt to find the desired version, but fall back to other\n\n# additional versions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The version that was found may not be the default or user\n\n# defined one.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Seems to be a problem on some systems, with pybind11 and python headers\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "src/raw.imageio/CMakeLists.txt" : {
      "ObjectId" : "e3608a24da7d94eaf7653eb84b998258f184a038",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/rla.imageio/CMakeLists.txt" : {
      "ObjectId" : "a3a0eef1ca485ccca2c1e051fb2eae244ee492c5",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/sgi.imageio/CMakeLists.txt" : {
      "ObjectId" : "c8d833b1801bf4977bf28267e231ce1afa68e2db",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/socket.imageio/CMakeLists.txt" : {
      "ObjectId" : "c920f96eaa392e2554ef69a8fd0cf22f8cff2745",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/softimage.imageio/CMakeLists.txt" : {
      "ObjectId" : "30b7b85a4efce55900f9402c6f2d61a3146f0d63",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/targa.imageio/CMakeLists.txt" : {
      "ObjectId" : "e713134d75825f41b3cfd8932db01a3ff7f61297",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/testtex/CMakeLists.txt" : {
      "ObjectId" : "3eea895a4af94a4cfd238c848ffc039e00ecefdb",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/tiff.imageio/CMakeLists.txt" : {
      "ObjectId" : "b61fec42f68847e9556883705be5a7d4c8978b7a",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/webp.imageio/CMakeLists.txt" : {
      "ObjectId" : "6e734e29e4156bd48c28c42bf779ebb7a11a7dfd",
      "LastModified" : "2019-03-29T14:17:40Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/zfile.imageio/CMakeLists.txt" : {
      "ObjectId" : "29583a626a8f7f96bb3bd63d965651f3394bf857",
      "LastModified" : "2019-01-24T21:23:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 69,
    "MAKEFILE" : 2
  },
  "ElapsedTime" : 10810
}