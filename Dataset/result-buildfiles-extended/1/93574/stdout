{
  "Repository" : "93574",
  "Revision" : "HEAD",
  "ObjectId" : "0f1a7fc99f8f91c9d3843495093f165f36275aaf",
  "CommitTime" : "2017-01-01T23:44:31Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "5c10bc1462cb2cc0dbcc719ef1f0eff9e4578248",
      "LastModified" : "2016-06-12T21:14:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# init\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# gcc minimum\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# optimization\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# standard\n",
        "Line" : 24,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# pedantic\n\n#set (CMAKE_C_FLAGS \"-Wall -Wextra -pedantic -ansi ${CMAKE_C_FLAGS}\")\n\n#set (CMAKE_CXX_FLAGS \"-Wall -Wextra -pedantic -ansi -std=c++11 ${CMAKE_CXX_FLAGS}\")\n",
        "Line" : 28,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# debug\n\n#set (CMAKE_C_FLAGS \"-Wall -Wextra -pedantic -ansi ${CMAKE_C_FLAGS}\")\n\n#set (CMAKE_CXX_FLAGS \"-Wall -Wextra -pedantic -ansi -std=c++11 -ggdb -pg ${CMAKE_CXX_FLAGS}\")\n",
        "Line" : 32,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# enable ASLR\n",
        "Line" : 42,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# disable console on windows mingw\n",
        "Line" : 45,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# set\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# sub dir\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# configure\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# install\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# uninstall\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "cmake/modules/FindLibraryWithDebug.cmake" : {
      "ObjectId" : "58cd730862aadbc7a6a4f6eae411b006eb76531d",
      "LastModified" : "2016-05-21T21:01:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#  FIND_LIBRARY_WITH_DEBUG\n\n#  -> enhanced FIND_LIBRARY to allow the search for an\n\n#     optional debug library with a WIN32_DEBUG_POSTFIX similar\n\n#     to CMAKE_DEBUG_POSTFIX when creating a shared lib\n\n#     it has to be the second and third argument\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2007, Christian Ehrlicher, <ch.ehrlicher@gmx.de>\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# no WIN32_DEBUG_POSTFIX -> simply pass all arguments to FIND_LIBRARY\n",
        "Line" : 16,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# on non-win32 we don't need to take care about WIN32_DEBUG_POSTFIX\n",
        "Line" : 27,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# 1. get all possible libnames\n",
        "Line" : 33,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# just one name\n",
        "Line" : 64,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# search the release lib\n",
        "Line" : 72,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# search the debug lib\n",
        "Line" : 78,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# both libs found\n",
        "Line" : 86,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# only release found\n",
        "Line" : 94,
        "CharPositionInLine" : 10
      },
      "10" : {
        "Text" : "# only debug (or nothing) found\n",
        "Line" : 99,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 11
    },
    "cmake/modules/FindQCA2-QT5.cmake" : {
      "ObjectId" : "e4a48887c7cf6cafe28aeaf17b68dc91377c0b15",
      "LastModified" : "2016-05-21T21:01:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find QCA2 (Qt Cryptography Architecture 2) for QT5\n\n# Once done this will define\n\n#\n\n#  QCA2-QT5_FOUND - system has QCA2-QT5\n\n#  QCA2-QT5_INCLUDE_DIR - the QCA2-QT5 include directory\n\n#  QCA2-QT5_LIBRARIES - the libraries needed to use QCA2-QT5\n\n#  QCA2-QT5_DEFINITIONS - Compiler switches required for using QCA2-QT5\n\n#\n\n# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Michael Larouche, <michael.larouche@kdemail.net>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#just to have any value as the real include dir is imported by linking to qca-qt5\n",
        "Line" : 22,
        "CharPositionInLine" : 56
      },
      "3" : {
        "Text" : "# in cache already\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindQCA2.cmake" : {
      "ObjectId" : "e2d8f2a5e819e330823c58abfb16ef4dc4a7d73c",
      "LastModified" : "2016-05-21T21:01:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find QCA2 (Qt Cryptography Architecture 2)\n\n# Once done this will define\n\n#\n\n#  QCA2_FOUND - system has QCA2\n\n#  QCA2_INCLUDE_DIR - the QCA2 include directory\n\n#  QCA2_LIBRARIES - the libraries needed to use QCA2\n\n#  QCA2_DEFINITIONS - Compiler switches required for using QCA2\n\n#\n\n# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Michael Larouche, <michael.larouche@kdemail.net>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "scc-config.h.cmake" : {
      "ObjectId" : "d8a2c0c05c71f3644ac8c6b3500fee47e97ca23d",
      "LastModified" : "2016-05-21T21:01:26Z",
      "FileType" : "CMAKESOURCE",
      "CommentCount" : 0
    },
    "scc.pro" : {
      "ObjectId" : "70e2af43c1815d382730fcbc1f2234d5f0496a82",
      "LastModified" : "2016-05-21T21:01:26Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# -------------------------------------------------\n\n# Project created by QtCreator 2009-08-13T02:50:42\n\n# -------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "42b27c371dd5f7290823a16eb9ed29359a9152d0",
      "LastModified" : "2016-06-12T21:14:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# kamerzysta\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# internal camera\n",
        "Line" : 269,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# winamp\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# qca2\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Tell CMake to run moc when necessary:\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# As moc files are generated in the binary dir, tell CMake\n\n# to always look for includes there:\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# qt\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# include qt qtnetwork\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# resources\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ui\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# moc\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# resource\n",
        "Line" : 353,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# link\n",
        "Line" : 358,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# mingw\n",
        "Line" : 359,
        "CharPositionInLine" : 11
      },
      "14" : {
        "Text" : "# linux\n",
        "Line" : 361,
        "CharPositionInLine" : 13
      },
      "15" : {
        "Text" : "# install\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "translations/CMakeLists.txt" : {
      "ObjectId" : "085f358fc03540798fd75542071c0dcc38ff95b3",
      "LastModified" : "2016-05-21T21:01:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# translation\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# translations\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# install\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "CMAKE" : 6,
    "CMAKESOURCE" : 1,
    "QMAKE" : 1
  },
  "ElapsedTime" : 3125
}