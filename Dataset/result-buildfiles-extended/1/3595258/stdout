{
  "Repository" : "3595258",
  "Revision" : "HEAD",
  "ObjectId" : "127151024e1c93f5afd25bb2ca7062977a31f80f",
  "CommitTime" : "2019-04-06T05:21:28Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "376dd9023c1be534f68a04d8b992f5b7f57cf0e1",
      "LastModified" : "2019-03-01T04:43:43Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This file is licensed under the Affero General Public License version 3 or\n\n# later. See the COPYING file.\n\n# @author Bernhard Posselt <dev@bernhard-posselt.com>\n\n# @copyright Bernhard Posselt 2016\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Generic Makefile for building and packaging an ownCloud app which uses npm and\n\n# Composer.\n\n#\n\n# Dependencies:\n\n# * make\n\n# * which\n\n# * curl: used if phpunit is not installed to fetch them from the web\n\n# * tar: for building the archive\n\n# * npm: for building and testing everything JS\n\n#\n\n# If no composer.json is in the app root directory, the Composer step\n\n# will be skipped. The same goes for the package.json which can be located in\n\n# the app root or the js/ directory.\n\n#\n\n# The npm command by launches the npm build script:\n\n#\n\n#    npm run build\n\n#\n\n# The npm test command launches the npm test script:\n\n#\n\n#    npm run test\n\n#\n\n# The idea behind this is to be completely testing and build tool agnostic. All\n\n# build tools and additional package managers should be installed locally in\n\n# your project, since this won't pollute people's global namespace.\n\n#\n\n# The following npm scripts in your package.json install and update the bower\n\n# and npm dependencies and use gulp as build system (notice how everything is\n\n# run from the node_modules folder):\n\n#\n\n#    \"scripts\": {\n\n#        \"test\": \"node node_modules/gulp-cli/bin/gulp.js karma\",\n\n#        \"prebuild\": \"npm install && node_modules/bower/bin/bower install && node_modules/bower/bin/bower update\",\n\n#        \"build\": \"node node_modules/gulp-cli/bin/gulp.js\"\n\n#    },\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# bin file definitions\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# start with displaying help\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Fetches the PHP and JS dependencies and compiles the JS. If no composer.json\n\n# is present, the composer step is skipped, if no package.json or js/package.json\n\n# is present, the npm step is skipped\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Installs and updates the composer dependencies.\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Installs npm dependencies\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Removes the appstore build\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Same as clean but also removes dependencies installed by composer, bower and\n\n# npm\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Builds the source and appstore package\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Builds the source package\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Builds the source package for the app store, ignores php and js tests\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Command for running JS and PHP tests. Works for package.json files in the js/\n\n# and root directory. If phpunit is not installed systemwide, a copy is fetched\n\n# from the internet\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# watch out for changes and rebuild\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "##\n\n## Tests\n\n##--------------------------------------\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "## Run php unit tests\n",
        "Line" : 209,
        "CharPositionInLine" : 27
      },
      "16" : {
        "Text" : "## Run php integration tests\n",
        "Line" : 213,
        "CharPositionInLine" : 34
      },
      "17" : {
        "Text" : "## Run php unit tests using phpdbg\n",
        "Line" : 217,
        "CharPositionInLine" : 27
      },
      "18" : {
        "Text" : "## Run php integration tests\n",
        "Line" : 221,
        "CharPositionInLine" : 38
      },
      "19" : {
        "Text" : "## Run php-cs-fixer and check owncloud code-style\n",
        "Line" : 225,
        "CharPositionInLine" : 27
      },
      "20" : {
        "Text" : "## Run php-cs-fixer and fix code style issues\n",
        "Line" : 230,
        "CharPositionInLine" : 27
      },
      "21" : {
        "Text" : "## Run phan\n",
        "Line" : 243,
        "CharPositionInLine" : 15
      },
      "22" : {
        "Text" : "## Run phpstan\n",
        "Line" : 248,
        "CharPositionInLine" : 18
      },
      "23" : {
        "Text" : "#\n\n# Dependency management\n\n#--------------------------------------\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "js/dav/Makefile" : {
      "ObjectId" : "4ef8d4ab9f031d0cc8cbe7ea96be2639655843eb",
      "LastModified" : "2016-02-18T15:39:26Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 2
  },
  "ElapsedTime" : 1026
}