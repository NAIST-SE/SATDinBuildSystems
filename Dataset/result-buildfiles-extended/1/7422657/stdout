{
  "Repository" : "7422657",
  "Revision" : "HEAD",
  "ObjectId" : "7beb33524a7afe64a4a20534c9f7b38b4657924c",
  "CommitTime" : "2019-03-20T12:09:14Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "50e0b53890fe53708de86c9ca1ed77708100d95f",
      "LastModified" : "2019-03-20T12:09:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# The name of our project is \"FairRoot\".  CMakeLists files in this project can\n\n# refer to the root source directory of the project as ${FAIRROOT_SOURCE_DIR} or\n\n# as ${CMAKE_SOURCE_DIR} and to the root binary directory of the project as\n\n# ${FAIRROOT_BINARY_DIR} or ${CMAKE_BINARY_DIR}.\n\n# This difference is important for the base classes which are in FAIRROOT\n\n# and the subproject (i.e: CbmRoot, Pandaroot,... etc).\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check if cmake has the required version\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set project version\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set name of our project to \"FAIRROOT\".\n\n# Has to be done after check of cmake version\n\n# This also sets ${FAIRROOT_VERSION} to the provided VERSION value, which would be empty if not set here explicitly\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# where to look first for cmake modules, before ${CMAKE_ROOT}/Modules/\n\n# is checked\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#set(CMAKE_MODULE_PATH \"${CMAKE_SOURCE_DIR}/cmake/cuda\" ${CMAKE_MODULE_PATH})\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Configure RPATH entries on macOS\n\n# https://cmake.org/Wiki/CMake_RPATH_handling#Always_full_RPATH\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Force colored warnings in Ninja's output, if the compiler has -fdiagnostics-color support.\n\n# Rationale in https://github.com/ninja-build/ninja/issues/814\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Check if the compiler support specific C++11 features\n\n# Up to now this is only a check since the code does not use\n\n# any of the features of the new standard\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# FairRoot only uses C++11 or later, so we need an compiler which supports C++11\n\n# Check if the used compiler support C++11. If not stop with an error message\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Load some basic macros which are needed later on\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#Check the compiler and set the compile and link flags\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Check also if FairSoft has been compiled with C++11 or C++14 support\n\n# If FairSoft is used the compiler flags provided by fairsoft-config\n\n# are added to the variable CMAKE_CXX_FLAGS.\n\n# If alibuild is used the compiler flags are passed on the command line\n\n# and are also added to CMAKE_CXX_FLAGS.\n\n# So check if CMAKE_CXX_FLAGS has the compiler flags -std=c++11 or -std=c++14\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Check if the user wants to build the project in the source\n\n# directory and if the install directory is different from the build\n\n# directory\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Check if we are on an UNIX system. If not stop with an error\n\n# message\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#Check if necessary environment variables are set\n\n#If not stop execution unless modular build is activated\n\n#Option(FAIRROOT_MODULAR_BUILD \"Modular build without environment variables\" OFF)\n\n#IF(NOT FAIRROOT_MODULAR_BUILD)\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Check if the external packages are installed into a separate install\n\n# directory\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# searches for needed packages\n\n# REQUIRED means that cmake will stop if this packages are not found\n\n# For example the framework can run without GEANT4, but ROOT is\n\n# mandatory\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# FairRoot only supports ROOT6, so check which version is available\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Geant3, Geant4 installed via cmake\n\n#Message(STATUS \"Looking for GEANT3...\")\n",
        "Line" : 166,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "#Message(STATUS \"Looking for GEANT4...\")\n",
        "Line" : 185,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "#  Message(STATUS \"Looking for GEANT4... - found ${GEANT4_LIBRARY_DIR}\")\n",
        "Line" : 193,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Checking for Genat4VMC has to be done in a better way.\n\n# In the moment the Geant4VMC version is hardcoded\n",
        "Line" : 200,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "#  Message(STATUS \"Looking for GEANT4VMC... - found ${GEANT4VMC_LIBRARY_DIR}\")\n",
        "Line" : 214,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "#find_package(CUDA)\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#Message(\"-- Looking for Boost ...\")\n\n# If an older version of boost is found both of the variables below are\n\n# cached and in a second cmake run, a good boost version is found even\n\n# if the version is to old.\n\n# To overcome this problem both variables are cleared before checking\n\n# for boost.\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#  If(FAIRROOT_MODULAR_BUILD)\n\n#    SET(FAIRROOT_LIBRARY_PROPERTIES ${FAIRROOT_LIBRARY_PROPERTIES}\n\n#        VERSION \"${FAIRROOT_VERSION}\"\n\n#        SOVERSION \"${FAIRROOT_MAJOR_VERSION}\"\n\n#    )\n\n#  Else()\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#  EndIf()\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Load the macro to generate the needed version info at compile time\n",
        "Line" : 317,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Set some useful variables\n",
        "Line" : 320,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Check C++11 availability\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Recurse into the given subdirectories.  This does not actually\n\n# cause another cmake executable to run.  The same process will walk through\n\n# the project's entire directory structure.\n",
        "Line" : 336,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#Message(\"Test_Model: ${CMAKE_BUILD_TYPE}\")\n",
        "Line" : 387,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Summary ######################################################################\n",
        "Line" : 454,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "################################################################################\n",
        "Line" : 479,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "################################################################################\n",
        "Line" : 568,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 37
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "b8a4dff7b58d2f310fac01b2b4e192706334d558",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Dashboard is opened for submissions for a 24 hour period starting at\n\n# the specified NIGHLY_START_TIME. Time is specified in 24 hour format.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "CTestCustom.cmake" : {
      "ObjectId" : "01730a95a7021f02400c3143a9af2c7b58b995e6",
      "LastModified" : "2017-12-12T13:53:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(\" -- Read CTestCustom.cmake --\")\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -----------------------------------------------------------\n\n# -- Number of warnings to display\n\n# -----------------------------------------------------------\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -----------------------------------------------------------\n\n# -- Number of errors to display\n\n# -----------------------------------------------------------\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -----------------------------------------------------------\n\n# -- Warning execptions\n\n# -----------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -- warnings from ubuntu systems which are a little to much\n\n# -- probably defined warn-unused-result. ignoring the result\n\n# -- of fgets is common practice. A work around would be to\n\n# -- store the return value in a dummy variable\n",
        "Line" : 32,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "# filter warnings from generated files\n",
        "Line" : 39,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# filter warnings from internal gtest headers\n",
        "Line" : 46,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# -----------------------------------------------------------\n\n# -- Warning addon's\n\n# -----------------------------------------------------------\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# -----------------------------------------------------------\n\n# -- Error execptions\n\n# -- Get rid of boost warnings which are misinterpreted as errors\n\n# -----------------------------------------------------------\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "FairBase_test.cmake" : {
      "ObjectId" : "312a888ffb7cc0681e158daac8f76f67c5aa3542",
      "LastModified" : "2019-01-28T10:04:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Copy CTestConfig.cmake to build directory.\n\n# When building with launchers send the results to the alternative cdash server.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "MbsAPI/CMakeLists.txt" : {
      "ObjectId" : "56c2274500179b270cc137c2a78cd41411ff2eec",
      "LastModified" : "2017-11-29T12:11:35Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Create a library called \"libBase\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of source files\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# list of header files\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "############### build the library #####################\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "############### install the library ###################\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "alignment/CMakeLists.txt" : {
      "ObjectId" : "22c3cf80cb7d5520e9898a142c47ed90e91e694f",
      "LastModified" : "2019-02-27T08:51:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Create a library called \"libBase\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of source files\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "base/CMakeLists.txt" : {
      "ObjectId" : "ad177f02cec71a58878c59f2b7d72c506c464b6c",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Create a library called \"libBase\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of source files\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "base/MQ/CMakeLists.txt" : {
      "ObjectId" : "edf4306e8fd350be0b13bc822413c852479f8f8e",
      "LastModified" : "2019-02-27T08:51:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# to copy src that are header-only files (e.g. c++ template) for FairRoot external installation\n\n# manual install (globbing add not recommended)\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "base/sim/fastsim/CMakeLists.txt" : {
      "ObjectId" : "d224d5c603416e78a3bc75ff5e767e3d8cfb2de0",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Create a library called \"libFairFastSim\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of source files\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/CMakeLists.txt" : {
      "ObjectId" : "ab8e9dc3b81d008cd36ab406d9cab761ba99a7cd",
      "LastModified" : "2019-02-27T08:51:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "cmake/checks/CMakeLists.txt" : {
      "ObjectId" : "c31ff7249d03edc6e2516eb230d2833ec46f8729",
      "LastModified" : "2019-02-27T08:51:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# GCC specifics\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Visual Studio specifics\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Warning Level 4 for Debug builds\n",
        "Line" : 23,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Clang\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#add_executable(testme \"demo.cpp\")\n\n#foreach(flag ${CXX11_FEATURE_LIST})\n\n#  set_property(TARGET testme\n\n#\tAPPEND PROPERTY COMPILE_DEFINITIONS ${flag}\n\n#\t)\n\n#endforeach()\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/cuda/FindCUDA.cmake" : {
      "ObjectId" : "ef6be68d31e595ee632ab9a3b85e34f1db154bb8",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# - Tools for building CUDA C files: libraries and build dependencies.\n\n# This script locates the NVIDIA CUDA C tools. It should work on linux, windows,\n\n# and mac and should be reasonably up to date with CUDA C releases.\n\n#\n\n# This script makes use of the standard find_package arguments of <VERSION>,\n\n# REQUIRED and QUIET.  CUDA_FOUND will report if an acceptable version of CUDA\n\n# was found.\n\n#\n\n# The script will prompt the user to specify CUDA_TOOLKIT_ROOT_DIR if the prefix\n\n# cannot be determined by the location of nvcc in the system path and REQUIRED\n\n# is specified to find_package(). To use a different installed version of the\n\n# toolkit set the environment variable CUDA_BIN_PATH before running cmake\n\n# (e.g. CUDA_BIN_PATH=/usr/local/cuda1.0 instead of the default /usr/local/cuda)\n\n# or set CUDA_TOOLKIT_ROOT_DIR after configuring.  If you change the value of\n\n# CUDA_TOOLKIT_ROOT_DIR, various components that depend on the path will be\n\n# relocated.\n\n#\n\n# It might be necessary to set CUDA_TOOLKIT_ROOT_DIR manually on certain\n\n# platforms, or to use a cuda runtime not installed in the default location. In\n\n# newer versions of the toolkit the cuda library is included with the graphics\n\n# driver- be sure that the driver version matches what is needed by the cuda\n\n# runtime version.\n\n#\n\n# The following variables affect the behavior of the macros in the script (in\n\n# alphebetical order).  Note that any of these flags can be changed multiple\n\n# times in the same directory before calling CUDA_ADD_EXECUTABLE,\n\n# CUDA_ADD_LIBRARY, CUDA_COMPILE, CUDA_COMPILE_PTX or CUDA_WRAP_SRCS.\n\n#\n\n#  CUDA_64_BIT_DEVICE_CODE (Default matches host bit size)\n\n#  -- Set to ON to compile for 64 bit device code, OFF for 32 bit device code.\n\n#     Note that making this different from the host code when generating object\n\n#     or C files from CUDA code just won't work, because size_t gets defined by\n\n#     nvcc in the generated source.  If you compile to PTX and then load the\n\n#     file yourself, you can mix bit sizes between device and host.\n\n#\n\n#  CUDA_ATTACH_VS_BUILD_RULE_TO_CUDA_FILE (Default ON)\n\n#  -- Set to ON if you want the custom build rule to be attached to the source\n\n#     file in Visual Studio.  Turn OFF if you add the same cuda file to multiple\n\n#     targets.\n\n#\n\n#     This allows the user to build the target from the CUDA file; however, bad\n\n#     things can happen if the CUDA source file is added to multiple targets.\n\n#     When performing parallel builds it is possible for the custom build\n\n#     command to be run more than once and in parallel causing cryptic build\n\n#     errors.  VS runs the rules for every source file in the target, and a\n\n#     source can have only one rule no matter how many projects it is added to.\n\n#     When the rule is run from multiple targets race conditions can occur on\n\n#     the generated file.  Eventually everything will get built, but if the user\n\n#     is unaware of this behavior, there may be confusion.  It would be nice if\n\n#     this script could detect the reuse of source files across multiple targets\n\n#     and turn the option off for the user, but no good solution could be found.\n\n#\n\n#  CUDA_BUILD_CUBIN (Default OFF)\n\n#  -- Set to ON to enable and extra compilation pass with the -cubin option in\n\n#     Device mode. The output is parsed and register, shared memory usage is\n\n#     printed during build.\n\n#\n\n#  CUDA_BUILD_EMULATION (Default OFF for device mode)\n\n#  -- Set to ON for Emulation mode. -D_DEVICEEMU is defined for CUDA C files\n\n#     when CUDA_BUILD_EMULATION is TRUE.\n\n#\n\n#  CUDA_GENERATED_OUTPUT_DIR (Default CMAKE_CURRENT_BINARY_DIR)\n\n#  -- Set to the path you wish to have the generated files placed.  If it is\n\n#     blank output files will be placed in CMAKE_CURRENT_BINARY_DIR.\n\n#     Intermediate files will always be placed in\n\n#     CMAKE_CURRENT_BINARY_DIR/CMakeFiles.\n\n#\n\n#  CUDA_GENERATE_DEPENDENCIES_DURING_CONFIGURE (Default ON)\n\n#  -- Instead of waiting until build time compute dependencies, do it during\n\n#     configure time.  Note that dependencies are still generated during\n\n#     build, so that if they change the build system can be updated.  This\n\n#     mainly removes the need for configuring once after the first build to\n\n#     load the dependies into the build system.\n\n#\n\n#  CUDA_HOST_COMPILATION_CPP (Default ON)\n\n#  -- Set to OFF for C compilation of host code.\n\n#\n\n#  CUDA_HOST_COMPILER (Default CMAKE_C_COMPILER, $(VCInstallDir)/bin for VS)\n\n#  -- Set the host compiler to be used by nvcc.  Ignored if -ccbin or\n\n#     --compiler-bindir is already present in the CUDA_NVCC_FLAGS or\n\n#     CUDA_NVCC_FLAGS_<CONFIG> variables.  For Visual Studio targets\n\n#     $(VCInstallDir)/bin is a special value that expands out to the path when\n\n#     the command is run from withing VS.\n\n#\n\n#  CUDA_NVCC_FLAGS\n\n#  CUDA_NVCC_FLAGS_<CONFIG>\n\n#  -- Additional NVCC command line arguments.  NOTE: multiple arguments must be\n\n#     semi-colon delimited (e.g. --compiler-options;-Wall)\n\n#\n\n#  CUDA_PROPAGATE_HOST_FLAGS (Default ON)\n\n#  -- Set to ON to propagate CMAKE_{C,CXX}_FLAGS and their configuration\n\n#     dependent counterparts (e.g. CMAKE_C_FLAGS_DEBUG) automatically to the\n\n#     host compiler through nvcc's -Xcompiler flag.  This helps make the\n\n#     generated host code match the rest of the system better.  Sometimes\n\n#     certain flags give nvcc problems, and this will help you turn the flag\n\n#     propagation off.  This does not affect the flags supplied directly to nvcc\n\n#     via CUDA_NVCC_FLAGS or through the OPTION flags specified through\n\n#     CUDA_ADD_LIBRARY, CUDA_ADD_EXECUTABLE, or CUDA_WRAP_SRCS.  Flags used for\n\n#     shared library compilation are not affected by this flag.\n\n#\n\n#  CUDA_VERBOSE_BUILD (Default OFF)\n\n#  -- Set to ON to see all the commands used when building the CUDA file.  When\n\n#     using a Makefile generator the value defaults to VERBOSE (run make\n\n#     VERBOSE=1 to see output), although setting CUDA_VERBOSE_BUILD to ON will\n\n#     always print the output.\n\n#\n\n# The script creates the following macros (in alphebetical order):\n\n#\n\n#  CUDA_ADD_CUFFT_TO_TARGET( cuda_target )\n\n#  -- Adds the cufft library to the target (can be any target).  Handles whether\n\n#     you are in emulation mode or not.\n\n#\n\n#  CUDA_ADD_CUBLAS_TO_TARGET( cuda_target )\n\n#  -- Adds the cublas library to the target (can be any target).  Handles\n\n#     whether you are in emulation mode or not.\n\n#\n\n#  CUDA_ADD_EXECUTABLE( cuda_target file0 file1 ...\n\n#                       [WIN32] [MACOSX_BUNDLE] [EXCLUDE_FROM_ALL] [OPTIONS ...] )\n\n#  -- Creates an executable \"cuda_target\" which is made up of the files\n\n#     specified.  All of the non CUDA C files are compiled using the standard\n\n#     build rules specified by CMAKE and the cuda files are compiled to object\n\n#     files using nvcc and the host compiler.  In addition CUDA_INCLUDE_DIRS is\n\n#     added automatically to include_directories().  Some standard CMake target\n\n#     calls can be used on the target after calling this macro\n\n#     (e.g. set_target_properties and target_link_libraries), but setting\n\n#     properties that adjust compilation flags will not affect code compiled by\n\n#     nvcc.  Such flags should be modified before calling CUDA_ADD_EXECUTABLE,\n\n#     CUDA_ADD_LIBRARY or CUDA_WRAP_SRCS.\n\n#\n\n#  CUDA_ADD_LIBRARY( cuda_target file0 file1 ...\n\n#                    [STATIC | SHARED | MODULE] [EXCLUDE_FROM_ALL] [OPTIONS ...] )\n\n#  -- Same as CUDA_ADD_EXECUTABLE except that a library is created.\n\n#\n\n#  CUDA_BUILD_CLEAN_TARGET()\n\n#  -- Creates a convience target that deletes all the dependency files\n\n#     generated.  You should make clean after running this target to ensure the\n\n#     dependency files get regenerated.\n\n#\n\n#  CUDA_COMPILE( generated_files file0 file1 ... [STATIC | SHARED | MODULE]\n\n#                [OPTIONS ...] )\n\n#  -- Returns a list of generated files from the input source files to be used\n\n#     with ADD_LIBRARY or ADD_EXECUTABLE.\n\n#\n\n#  CUDA_COMPILE_PTX( generated_files file0 file1 ... [OPTIONS ...] )\n\n#  -- Returns a list of PTX files generated from the input source files.\n\n#\n\n#  CUDA_INCLUDE_DIRECTORIES( path0 path1 ... )\n\n#  -- Sets the directories that should be passed to nvcc\n\n#     (e.g. nvcc -Ipath0 -Ipath1 ... ). These paths usually contain other .cu\n\n#     files.\n\n#\n\n#\n\n#  CUDA_LINK_SEPERABLE_COMPILATION_OBJECTS( output_file_var cuda_target\n\n#                                           nvcc_flags object_files)\n\n#\n\n#  -- Generates the link object required by separable compilation from the given\n\n#     object files.  This is called automatically for CUDA_ADD_EXECUTABLE and\n\n#     CUDA_ADD_LIBRARY, but can be called manually when using CUDA_WRAP_SRCS\n\n#     directly.  When called from CUDA_ADD_LIBRARY or CUDA_ADD_EXECUTABLE the\n\n#     nvcc_flags passed in are the same as the flags passed in via the OPTIONS\n\n#     argument.  The only nvcc flag added automatically is the bitness flag as\n\n#     specified by CUDA_64_BIT_DEVICE_CODE.  Note that this is a function\n\n#     instead of a macro.\n\n#\n\n#  CUDA_WRAP_SRCS ( cuda_target format generated_files file0 file1 ...\n\n#                   [STATIC | SHARED | MODULE] [OPTIONS ...] )\n\n#  -- This is where all the magic happens.  CUDA_ADD_EXECUTABLE,\n\n#     CUDA_ADD_LIBRARY, CUDA_COMPILE, and CUDA_COMPILE_PTX all call this\n\n#     function under the hood.\n\n#\n\n#     Given the list of files (file0 file1 ... fileN) this macro generates\n\n#     custom commands that generate either PTX or linkable objects (use \"PTX\" or\n\n#     \"OBJ\" for the format argument to switch).  Files that don't end with .cu\n\n#     or have the HEADER_FILE_ONLY property are ignored.\n\n#\n\n#     The arguments passed in after OPTIONS are extra command line options to\n\n#     give to nvcc.  You can also specify per configuration options by\n\n#     specifying the name of the configuration followed by the options.  General\n\n#     options must preceed configuration specific options.  Not all\n\n#     configurations need to be specified, only the ones provided will be used.\n\n#\n\n#        OPTIONS -DFLAG=2 \"-DFLAG_OTHER=space in flag\"\n\n#        DEBUG -g\n\n#        RELEASE --use_fast_math\n\n#        RELWITHDEBINFO --use_fast_math;-g\n\n#        MINSIZEREL --use_fast_math\n\n#\n\n#     For certain configurations (namely VS generating object files with\n\n#     CUDA_ATTACH_VS_BUILD_RULE_TO_CUDA_FILE set to ON), no generated file will\n\n#     be produced for the given cuda file.  This is because when you add the\n\n#     cuda file to Visual Studio it knows that this file produces an object file\n\n#     and will link in the resulting object file automatically.\n\n#\n\n#     This script will also generate a separate cmake script that is used at\n\n#     build time to invoke nvcc.  This is for several reasons.\n\n#\n\n#       1. nvcc can return negative numbers as return values which confuses\n\n#       Visual Studio into thinking that the command succeeded.  The script now\n\n#       checks the error codes and produces errors when there was a problem.\n\n#\n\n#       2. nvcc has been known to not delete incomplete results when it\n\n#       encounters problems.  This confuses build systems into thinking the\n\n#       target was generated when in fact an unusable file exists.  The script\n\n#       now deletes the output files if there was an error.\n\n#\n\n#       3. By putting all the options that affect the build into a file and then\n\n#       make the build rule dependent on the file, the output files will be\n\n#       regenerated when the options change.\n\n#\n\n#     This script also looks at optional arguments STATIC, SHARED, or MODULE to\n\n#     determine when to target the object compilation for a shared library.\n\n#     BUILD_SHARED_LIBS is ignored in CUDA_WRAP_SRCS, but it is respected in\n\n#     CUDA_ADD_LIBRARY.  On some systems special flags are added for building\n\n#     objects intended for shared libraries.  A preprocessor macro,\n\n#     <target_name>_EXPORTS is defined when a shared library compilation is\n\n#     detected.\n\n#\n\n#     Flags passed into add_definitions with -D or /D are passed along to nvcc.\n\n#\n\n# The script defines the following variables:\n\n#\n\n#  CUDA_VERSION_MAJOR    -- The major version of cuda as reported by nvcc.\n\n#  CUDA_VERSION_MINOR    -- The minor version.\n\n#  CUDA_VERSION\n\n#  CUDA_VERSION_STRING   -- CUDA_VERSION_MAJOR.CUDA_VERSION_MINOR\n\n#\n\n#  CUDA_TOOLKIT_ROOT_DIR -- Path to the CUDA Toolkit (defined if not set).\n\n#  CUDA_SDK_ROOT_DIR     -- Path to the CUDA SDK.  Use this to find files in the\n\n#                           SDK.  This script will not directly support finding\n\n#                           specific libraries or headers, as that isn't\n\n#                           supported by NVIDIA.  If you want to change\n\n#                           libraries when the path changes see the\n\n#                           FindCUDA.cmake script for an example of how to clear\n\n#                           these variables.  There are also examples of how to\n\n#                           use the CUDA_SDK_ROOT_DIR to locate headers or\n\n#                           libraries, if you so choose (at your own risk).\n\n#  CUDA_INCLUDE_DIRS     -- Include directory for cuda headers.  Added automatically\n\n#                           for CUDA_ADD_EXECUTABLE and CUDA_ADD_LIBRARY.\n\n#  CUDA_LIBRARIES        -- Cuda RT library.\n\n#  CUDA_CUFFT_LIBRARIES  -- Device or emulation library for the Cuda FFT\n\n#                           implementation (alternative to:\n\n#                           CUDA_ADD_CUFFT_TO_TARGET macro)\n\n#  CUDA_CUBLAS_LIBRARIES -- Device or emulation library for the Cuda BLAS\n\n#                           implementation (alterative to:\n\n#                           CUDA_ADD_CUBLAS_TO_TARGET macro).\n\n#  CUDA_curand_LIBRARY   -- CUDA Random Number Generation library.\n\n#                           Only available for CUDA version 3.2+.\n\n#  CUDA_cusparse_LIBRARY -- CUDA Sparse Matrix library.\n\n#                           Only available for CUDA version 3.2+.\n\n#  CUDA_npp_LIBRARY      -- NVIDIA Performance Primitives library.\n\n#                           Only available for CUDA version 4.0+.\n\n#  CUDA_nvcuvenc_LIBRARY -- CUDA Video Encoder library.\n\n#                           Only available for CUDA version 3.2+.\n\n#                           Windows only.\n\n#  CUDA_nvcuvid_LIBRARY  -- CUDA Video Decoder library.\n\n#                           Only available for CUDA version 3.2+.\n\n#                           Windows only.\n\n#\n\n#\n\n#  James Bigler, NVIDIA Corp (nvidia.com - jbigler)\n\n#  Abe Stephens, SCI Institute -- http://www.sci.utah.edu/~abe/FindCuda.html\n\n#\n\n#  Copyright (c) 2008 - 2009 NVIDIA Corporation.  All rights reserved.\n\n#\n\n#  Copyright (c) 2007-2009\n\n#  Scientific Computing and Imaging Institute, University of Utah\n\n#\n\n#  This code is licensed under the MIT License.  See the FindCUDA.cmake script\n\n#  for the text of the license.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The MIT License\n\n#\n\n# License for the specific language governing rights and limitations under\n\n# Permission is hereby granted, free of charge, to any person obtaining a\n\n# copy of this software and associated documentation files (the \"Software\"),\n\n# to deal in the Software without restriction, including without limitation\n\n# the rights to use, copy, modify, merge, publish, distribute, sublicense,\n\n# and/or sell copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\n# DEALINGS IN THE SOFTWARE.\n\n#\n\n###############################################################################\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# FindCUDA.cmake\n\n#Message(STATUS \"Looking for CUDA...\")\n\n# We need to have at least this version to support the VERSION_LESS argument to 'if' (2.6.2) and unset (2.6.3)\n",
        "Line" : 301,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This macro helps us find the location of helper files we will need the full path to\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# CMAKE_CURRENT_LIST_FILE contains the full path to the file currently being\n\n# processed.  Using this variable, we can pull out the current path, and\n\n# provide a way to get access to the other files we need local to here.\n",
        "Line" : 311,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Set this variable as internal, so the user isn't bugged with it.\n",
        "Line" : 326,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#####################################################################\n\n## CUDA_INCLUDE_NVCC_DEPENDENCIES\n\n##\n",
        "Line" : 330,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# So we want to try and include the dependency file if it exists.  If\n\n# it doesn't exist then we need to create an empty one, so we can\n\n# include it.\n",
        "Line" : 334,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# If it does exist, then we need to check to see if all the files it\n\n# depends on exist.  If they don't then we should clear the dependency\n\n# file and regenerate it later.  This covers the case where a header\n\n# file has disappeared or moved.\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Include the dependency file.  Create it first if it doesn't exist .  The\n\n# INCLUDE puts a dependency that will force CMake to rerun and bring in the\n\n# new info when it changes.  DO NOT REMOVE THIS (as I did and spent a few\n\n# hours figuring out why it didn't work.\n",
        "Line" : 348,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Always include this file to force CMake to run again next\n\n# invocation and rebuild the dependencies.\n\n#message(\"including dependency_file = ${dependency_file}\")\n",
        "Line" : 355,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Now we need to verify the existence of all the included files\n\n# here.  If they aren't there we need to just blank this variable and\n\n# make the file regenerate again.\n",
        "Line" : 360,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#   if(DEFINED CUDA_NVCC_DEPEND)\n\n#     message(\"CUDA_NVCC_DEPEND set\")\n\n#   else()\n\n#     message(\"CUDA_NVCC_DEPEND NOT set\")\n\n#   endif()\n",
        "Line" : 363,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#message(\"CUDA_NVCC_DEPEND found\")\n",
        "Line" : 369,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# message(\"searching for ${f}\")\n",
        "Line" : 371,
        "CharPositionInLine" : 6
      },
      "16" : {
        "Text" : "#message(\"file ${f} not found\")\n",
        "Line" : 373,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "#message(\"CUDA_NVCC_DEPEND false\")\n\n# No dependencies, so regenerate the file.\n",
        "Line" : 378,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "#message(\"CUDA_NVCC_DEPEND_REGENERATE = ${CUDA_NVCC_DEPEND_REGENERATE}\")\n\n# No incoming dependencies, so we need to generate them.  Make the\n\n# output depend on the dependency file itself, which should cause the\n\n# rule to re-run.\n",
        "Line" : 383,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "#message(\"Generating an empty dependency_file: ${dependency_file}\")\n",
        "Line" : 389,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# Setup variables' defaults\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 395,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Allow the user to specify if the device code is supposed to be 32 or 64 bit.\n",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Attach the build rule to the source file in VS.  This option\n",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Prints out extra information about the cuda file during compilation\n",
        "Line" : 412,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Set whether we are using emulation or device mode.\n",
        "Line" : 415,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Where to put the generated output.\n",
        "Line" : 418,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Parse HOST_COMPILATION mode.\n",
        "Line" : 423,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Extra user settable flags\n",
        "Line" : 426,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Propagate the host flags to the host compiler via -Xcompiler\n",
        "Line" : 435,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Specifies whether the commands used when compiling the .cu file will be printed out.\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Makefile and similar generators don't define CMAKE_CONFIGURATION_TYPES, so we\n\n# need to add another entry for the CMAKE_BUILD_TYPE.  We also need to add the\n\n# standerd set of 4 build types (Debug, MinSizeRel, Release, and RelWithDebInfo)\n\n# for completeness.  We need run this loop in order to accomodate the addition\n\n# of extra configuration types.  Duplicate entries will be removed by\n\n# REMOVE_DUPLICATES.\n",
        "Line" : 450,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# Locate CUDA, Set Build Type, etc.\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 464,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Check to see if the CUDA_TOOLKIT_ROOT_DIR and CUDA_SDK_ROOT_DIR have changed,\n\n# if they have then clear the cache variables, so that will be detected again.\n",
        "Line" : 470,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Make sure you run this before you unset CUDA_VERSION.\n",
        "Line" : 476,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# This only existed in the 3.0 version of the CUDA toolkit\n",
        "Line" : 478,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# No specific variables to catch.  Use this kind of code before calling\n\n# find_package(CUDA) to clean up any variables that may depend on this path.\n",
        "Line" : 495,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "#   unset(MY_SPECIAL_CUDA_SDK_INCLUDE_DIR CACHE)\n\n#   unset(MY_SPECIAL_CUDA_SDK_LIBRARY CACHE)\n",
        "Line" : 498,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# Search for the cuda distribution.\n",
        "Line" : 502,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Search in the CUDA_BIN_PATH first.\n",
        "Line" : 505,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# Now search default paths\n",
        "Line" : 515,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# We need to force this back into the cache.\n",
        "Line" : 525,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# CUDA_NVCC_EXECUTABLE\n",
        "Line" : 537,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Search default search paths, after we search our own set of paths.\n",
        "Line" : 546,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Compute the version.\n",
        "Line" : 551,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# Need to set these based off of the cached value\n",
        "Line" : 558,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# Always set this convenience variable\n",
        "Line" : 563,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Here we need to determine if the version we found is acceptable.  We will\n\n# assume that is unless CUDA_FIND_VERSION_EXACT or CUDA_FIND_VERSION is\n\n# specified.  The presence of either of these options checks the version\n\n# string and signals if the version is acceptable or not.\n",
        "Line" : 566,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#\n",
        "Line" : 571,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#\n",
        "Line" : 575,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "#\n",
        "Line" : 579,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# CUDA_TOOLKIT_INCLUDE\n",
        "Line" : 589,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Header included in toolkit\n",
        "Line" : 591,
        "CharPositionInLine" : 21
      },
      "52" : {
        "Text" : "# Search default search paths, after we search our own set of paths.\n",
        "Line" : 598,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Set the user list of include dir to nothing to initialize it.\n",
        "Line" : 602,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# CUDA 3.2+ on Windows moved the library directories, so we need the new\n\n# and old paths.\n",
        "Line" : 608,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# CUDA 3.2+ on Windows moved the library directories, so we need to new\n\n# (lib/Win32) and the old path (lib).\n",
        "Line" : 612,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# Search default search paths, after we search our own set of paths.\n",
        "Line" : 623,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# CUDA_LIBRARIES\n",
        "Line" : 627,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# The cudartemu library only existed for the 3.0 version of CUDA.\n",
        "Line" : 630,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# If we are using emulation mode and we found the cudartemu library then use\n\n# that one instead of cudart.\n",
        "Line" : 636,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# We need to add the path to cudart to the linker using rpath, since the\n\n# library name for the cuda libraries is prepended with @rpath.\n",
        "Line" : 644,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# 1.1 toolkit on linux doesn't appear to have a separate library on\n\n# some platforms.\n",
        "Line" : 656,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# Add cuda library to the link line only if it is found.\n",
        "Line" : 660,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "#######################\n\n# Look for some of the toolkit helper libraries\n",
        "Line" : 670,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "#######################\n\n# Disable emulation for v3.1 onward\n",
        "Line" : 677,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Search for additional CUDA toolkit libraries.\n",
        "Line" : 685,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Emulation libraries aren't available in version 3.1 onward.\n",
        "Line" : 687,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "# cusparse showed up in version 3.2\n",
        "Line" : 694,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "########################\n\n# Look for the SDK stuff.  As of CUDA 3.0 NVSDKCUDA_ROOT has been replaced with\n\n# NVSDKCOMPUTE_ROOT with the old CUDA C contents moved into the C subdirectory\n",
        "Line" : 714,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Keep the CUDA_SDK_ROOT_DIR first in order to be able to override the\n\n# environment variables.\n",
        "Line" : 726,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Example of how to find an include file from the CUDA_SDK_ROOT_DIR\n",
        "Line" : 738,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# find_path(CUDA_CUT_INCLUDE_DIR\n\n#   cutil.h\n\n#   PATHS ${CUDA_SDK_SEARCH_PATH}\n\n#   PATH_SUFFIXES \"common/inc\"\n\n#   DOC \"Location of cutil.h\"\n\n#   NO_DEFAULT_PATH\n\n#   )\n\n# # Now search system paths\n\n# find_path(CUDA_CUT_INCLUDE_DIR cutil.h DOC \"Location of cutil.h\")\n",
        "Line" : 740,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# mark_as_advanced(CUDA_CUT_INCLUDE_DIR)\n",
        "Line" : 750,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# Example of how to find a library in the CUDA_SDK_ROOT_DIR\n",
        "Line" : 753,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# # cutil library is called cutil64 for 64 bit builds on windows.  We don't want\n\n# # to get these confused, so we are setting the name based on the word size of\n\n# # the build.\n",
        "Line" : 755,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# if(CMAKE_SIZEOF_VOID_P EQUAL 8)\n\n#   set(cuda_cutil_name cutil64)\n\n# else()\n\n#   set(cuda_cutil_name cutil32)\n\n# endif()\n",
        "Line" : 759,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# find_library(CUDA_CUT_LIBRARY\n\n#   NAMES cutil ${cuda_cutil_name}\n\n#   PATHS ${CUDA_SDK_SEARCH_PATH}\n\n#   # The new version of the sdk shows up in common/lib, but the old one is in lib\n\n#   PATH_SUFFIXES \"common/lib\" \"lib\"\n\n#   DOC \"Location of cutil library\"\n\n#   NO_DEFAULT_PATH\n\n#   )\n\n# # Now search system paths\n\n# find_library(CUDA_CUT_LIBRARY NAMES cutil ${cuda_cutil_name} DOC \"Location of cutil library\")\n\n# mark_as_advanced(CUDA_CUT_LIBRARY)\n\n# set(CUDA_CUT_LIBRARIES ${CUDA_CUT_LIBRARY})\n",
        "Line" : 765,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "#############################\n\n# Check for required components\n",
        "Line" : 780,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# Macros\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 810,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "###############################################################################\n\n# Add include directories to pass to the nvcc command.\n",
        "Line" : 816,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "##############################################################################\n",
        "Line" : 825,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "##############################################################################\n\n# Separate the OPTIONS out from the sources\n\n#\n",
        "Line" : 830,
        "CharPositionInLine" : 0
      },
      "82" : {
        "Text" : "# Assume this is a file\n",
        "Line" : 854,
        "CharPositionInLine" : 8
      },
      "83" : {
        "Text" : "##############################################################################\n\n# Parse the OPTIONS from ARGN and set the variables prefixed by _option_prefix\n\n#\n",
        "Line" : 861,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Determine if we are dealing with a perconfiguration flag\n",
        "Line" : 867,
        "CharPositionInLine" : 4
      },
      "85" : {
        "Text" : "# Set arg to nothing to keep it from being processed further\n",
        "Line" : 872,
        "CharPositionInLine" : 8
      },
      "86" : {
        "Text" : "##############################################################################\n\n# Helper to add the include directory for CUDA only once\n",
        "Line" : 883,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# If SHARED, MODULE, or STATIC aren't already in the list of arguments, then\n\n# add SHARED or STATIC based on the value of BUILD_SHARED_LIBS.\n",
        "Line" : 902,
        "CharPositionInLine" : 2
      },
      "88" : {
        "Text" : "##############################################################################\n\n# Helper to avoid clashes of files with the same basename but different paths.\n\n# This doesn't attempt to do exactly what CMake internals do, which is to only\n\n# add this path when there is a conflict, since by the time a second collision\n\n# in names is detected it's already too late to fix the first one.  For\n\n# consistency sake the relative path will be added to all files.\n",
        "Line" : 921,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "#message(\"CUDA_COMPUTE_BUILD_PATH([${path}] ${build_path})\")\n\n# Only deal with CMake style paths from here on out\n",
        "Line" : 928,
        "CharPositionInLine" : 2
      },
      "90" : {
        "Text" : "# Absolute paths are generally unnessary, especially if something like\n\n# file(GLOB_RECURSE) is used to pick up the files.\n",
        "Line" : 932,
        "CharPositionInLine" : 4
      },
      "91" : {
        "Text" : "# This recipie is from cmLocalGenerator::CreateSafeUniqueObjectFileName in the\n\n# CMake source.\n",
        "Line" : 937,
        "CharPositionInLine" : 2
      },
      "92" : {
        "Text" : "# Remove leading /\n",
        "Line" : 940,
        "CharPositionInLine" : 2
      },
      "93" : {
        "Text" : "# Avoid absolute paths by removing ':'\n",
        "Line" : 942,
        "CharPositionInLine" : 2
      },
      "94" : {
        "Text" : "# Avoid relative paths that go up the tree\n",
        "Line" : 944,
        "CharPositionInLine" : 2
      },
      "95" : {
        "Text" : "# Avoid spaces\n",
        "Line" : 946,
        "CharPositionInLine" : 2
      },
      "96" : {
        "Text" : "# Strip off the filename.  I wait until here to do it, since removin the\n\n# basename can make a path that looked like path/../basename turn into\n\n# path/.. (notice the trailing slash).\n",
        "Line" : 949,
        "CharPositionInLine" : 2
      },
      "97" : {
        "Text" : "#message(\"${build_path} = ${bpath}\")\n",
        "Line" : 955,
        "CharPositionInLine" : 2
      },
      "98" : {
        "Text" : "##############################################################################\n\n# This helper macro populates the following variables and setups up custom\n\n# commands and targets to invoke the nvcc compiler to generate C or PTX source\n\n# dependent upon the format parameter.  The compiler is invoked once with -M\n\n# to generate a dependency file and a second time with -cuda or -ptx to generate\n\n# a .cpp or .ptx file.\n\n# INPUT:\n\n#   cuda_target         - Target name\n\n#   format              - PTX or OBJ\n\n#   FILE1 .. FILEN      - The remaining arguments are the sources to be wrapped.\n\n#   OPTIONS             - Extra options to NVCC\n\n# OUTPUT:\n\n#   generated_files     - List of generated files\n\n##############################################################################\n\n##############################################################################\n",
        "Line" : 958,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# Set up all the command line flags here, so that they can be overridden on a per target basis.\n",
        "Line" : 976,
        "CharPositionInLine" : 2
      },
      "100" : {
        "Text" : "# Emulation if the card isn't present.\n",
        "Line" : 980,
        "CharPositionInLine" : 2
      },
      "101" : {
        "Text" : "# Emulation.\n",
        "Line" : 982,
        "CharPositionInLine" : 4
      },
      "102" : {
        "Text" : "# Device mode.  No flags necessary.\n",
        "Line" : 985,
        "CharPositionInLine" : 4
      },
      "103" : {
        "Text" : "# This needs to be passed in at this stage, because VS needs to fill out the\n\n# value of VCInstallDir from within VS.  Note that CCBIN is only used if\n\n# -ccbin or --compiler-bindir isn't used and CUDA_HOST_COMPILER matches\n\n# $(VCInstallDir)/bin.\n",
        "Line" : 1007,
        "CharPositionInLine" : 2
      },
      "104" : {
        "Text" : "# Figure out which configure we will use and pass that in as an argument to\n\n# the script.  We need to defer the decision until compilation time, because\n\n# for VS projects we won't know if we are making a debug or release build\n\n# until build time.\n",
        "Line" : 1017,
        "CharPositionInLine" : 2
      },
      "105" : {
        "Text" : "# Initialize our list of includes with the user ones followed by the CUDA system ones.\n",
        "Line" : 1027,
        "CharPositionInLine" : 2
      },
      "106" : {
        "Text" : "# Get the include directories for this directory and use them for our nvcc command.\n",
        "Line" : 1029,
        "CharPositionInLine" : 2
      },
      "107" : {
        "Text" : "# Reset these variables\n",
        "Line" : 1037,
        "CharPositionInLine" : 2
      },
      "108" : {
        "Text" : "# Figure out if we are building a shared library.  BUILD_SHARED_LIBS is\n\n# respected in CUDA_ADD_LIBRARY.\n",
        "Line" : 1047,
        "CharPositionInLine" : 2
      },
      "109" : {
        "Text" : "# SHARED, MODULE\n",
        "Line" : 1050,
        "CharPositionInLine" : 2
      },
      "110" : {
        "Text" : "# STATIC\n",
        "Line" : 1056,
        "CharPositionInLine" : 2
      },
      "111" : {
        "Text" : "# CUDA_HOST_FLAGS\n",
        "Line" : 1062,
        "CharPositionInLine" : 2
      },
      "112" : {
        "Text" : "# If we are setting up code for a shared library, then we need to add extra flags for\n\n# compiling objects for shared libraries.\n",
        "Line" : 1064,
        "CharPositionInLine" : 4
      },
      "113" : {
        "Text" : "# Only add the CMAKE_{C,CXX}_FLAGS if we are propagating host flags.  We\n\n# always need to set the SHARED_FLAGS, though.\n",
        "Line" : 1070,
        "CharPositionInLine" : 2
      },
      "114" : {
        "Text" : "# Loop over all the configuration types to generate appropriate flags for run_nvcc.cmake\n",
        "Line" : 1079,
        "CharPositionInLine" : 2
      },
      "115" : {
        "Text" : "# CMAKE_FLAGS are strings and not lists.  By not putting quotes around CMAKE_FLAGS\n\n# we convert the strings to lists (like we want).\n",
        "Line" : 1082,
        "CharPositionInLine" : 4
      },
      "116" : {
        "Text" : "# nvcc chokes on -g3 in versions previous to 3.0, so replace it with -g\n",
        "Line" : 1086,
        "CharPositionInLine" : 6
      },
      "117" : {
        "Text" : "# Note that if we ever want CUDA_NVCC_FLAGS_<CONFIG> to be string (instead of a list\n\n# like it is currently), we can remove the quotes around the\n\n# ${CUDA_NVCC_FLAGS_${config_upper}} variable like the CMAKE_HOST_FLAGS_<CONFIG> variable.\n",
        "Line" : 1106,
        "CharPositionInLine" : 4
      },
      "118" : {
        "Text" : "# Get the list of definitions from the directory property\n",
        "Line" : 1112,
        "CharPositionInLine" : 2
      },
      "119" : {
        "Text" : "# Reset the output variable\n",
        "Line" : 1124,
        "CharPositionInLine" : 2
      },
      "120" : {
        "Text" : "# Iterate over the macro arguments and create custom\n\n# commands for all the .cu files.\n",
        "Line" : 1127,
        "CharPositionInLine" : 2
      },
      "121" : {
        "Text" : "# Ignore any file marked as a HEADER_FILE_ONLY\n",
        "Line" : 1130,
        "CharPositionInLine" : 4
      },
      "122" : {
        "Text" : "# Allow per source file overrides of the format.\n",
        "Line" : 1134,
        "CharPositionInLine" : 6
      },
      "123" : {
        "Text" : "# Don't use any of the host compilation flags for PTX targets.\n",
        "Line" : 1150,
        "CharPositionInLine" : 8
      },
      "124" : {
        "Text" : "# Determine output directory\n",
        "Line" : 1158,
        "CharPositionInLine" : 6
      },
      "125" : {
        "Text" : "# Add a custom target to generate a c or ptx file. ######################\n",
        "Line" : 1171,
        "CharPositionInLine" : 6
      },
      "126" : {
        "Text" : "# Set all of our file names.  Make sure that whatever filenames that have\n\n# generated_file_path in them get passed in through as a command line\n\n# argument, so that the ${CMAKE_CFG_INTDIR} gets expanded at run time\n\n# instead of configure time.\n",
        "Line" : 1189,
        "CharPositionInLine" : 6
      },
      "127" : {
        "Text" : "# Setup properties for obj files:\n",
        "Line" : 1199,
        "CharPositionInLine" : 6
      },
      "128" : {
        "Text" : "# This is an object file not to be compiled, but only be linked.\n",
        "Line" : 1203,
        "CharPositionInLine" : 31
      },
      "129" : {
        "Text" : "# Don't add CMAKE_CURRENT_SOURCE_DIR if the path is already an absolute path.\n",
        "Line" : 1211,
        "CharPositionInLine" : 6
      },
      "130" : {
        "Text" : "# Convience string for output ###########################################\n",
        "Line" : 1219,
        "CharPositionInLine" : 6
      },
      "131" : {
        "Text" : "# Build the NVCC made dependency file ###################################\n",
        "Line" : 1226,
        "CharPositionInLine" : 6
      },
      "132" : {
        "Text" : "# Configure the build script\n",
        "Line" : 1234,
        "CharPositionInLine" : 6
      },
      "133" : {
        "Text" : "# So if a user specifies the same cuda file as input more than once, you\n\n# can have bad things happen with dependencies.  Here we check an option\n\n# to see if this is the behavior they want.\n",
        "Line" : 1237,
        "CharPositionInLine" : 6
      },
      "134" : {
        "Text" : "# Create up the comment string\n",
        "Line" : 1254,
        "CharPositionInLine" : 6
      },
      "135" : {
        "Text" : "# Bring in the dependencies.  Creates a variable CUDA_NVCC_DEPEND #######\n",
        "Line" : 1262,
        "CharPositionInLine" : 6
      },
      "136" : {
        "Text" : "# Check to see if the build script is newer than the dependency file.  If\n\n# it is, regenerate it.\n\n# message(\"CUDA_GENERATE_DEPENDENCIES_DURING_CONFIGURE  = ${CUDA_GENERATE_DEPENDENCIES_DURING_CONFIGURE}\")\n\n# message(\"CUDA_NVCC_DEPEND_REGENERATE = ${CUDA_NVCC_DEPEND_REGENERATE}\")\n\n# execute_process(COMMAND ls -lTtr \"${custom_target_script}\" \"${cmake_dependency_file}\" \"${NVCC_generated_dependency_file}\")\n",
        "Line" : 1265,
        "CharPositionInLine" : 6
      },
      "137" : {
        "Text" : "# Note that NVCC_generated_dependency_file is always generated.\n",
        "Line" : 1271,
        "CharPositionInLine" : 6
      },
      "138" : {
        "Text" : "# If the two files were generated about the same time then reversing the\n\n# comparison will also be true, so check the CUDA_NVCC_DEPEND_REGENERATE\n\n# flag.\n",
        "Line" : 1274,
        "CharPositionInLine" : 8
      },
      "139" : {
        "Text" : "# message(\"************************************************************************\")\n\n# message(\"Same modification time: ${custom_target_script} ${NVCC_generated_dependency_file}\")\n",
        "Line" : 1278,
        "CharPositionInLine" : 10
      },
      "140" : {
        "Text" : "# The timestep check is valid\n",
        "Line" : 1284,
        "CharPositionInLine" : 10
      },
      "141" : {
        "Text" : "# message(\"_cuda_generate_dependencies = ${_cuda_generate_dependencies}\")\n",
        "Line" : 1288,
        "CharPositionInLine" : 6
      },
      "142" : {
        "Text" : "# If we needed to regenerate the dependency file, do so now.\n",
        "Line" : 1290,
        "CharPositionInLine" : 6
      },
      "143" : {
        "Text" : "# message(\"CUDA_HOST_COMPILER = ${CUDA_HOST_COMPILER}\")\n",
        "Line" : 1294,
        "CharPositionInLine" : 8
      },
      "144" : {
        "Text" : "#message(\"CUDA_VS_DIR = ${CUDA_VS_DIR}\")\n",
        "Line" : 1306,
        "CharPositionInLine" : 10
      },
      "145" : {
        "Text" : "# The CUDA_HOST_COMPILER is set to something interesting, so use the\n\n# ccbin_flags as-is.\n",
        "Line" : 1311,
        "CharPositionInLine" : 10
      },
      "146" : {
        "Text" : "# message(\"_cuda_dependency_ccbin = ${_cuda_dependency_ccbin}\")\n",
        "Line" : 1315,
        "CharPositionInLine" : 8
      },
      "147" : {
        "Text" : "# Only do this if we have some kind of host compiler defined in\n\n# _cuda_dependency_ccbin or ccbin_flags isn't set.\n",
        "Line" : 1317,
        "CharPositionInLine" : 10
      },
      "148" : {
        "Text" : "# Try and reload the dependies\n",
        "Line" : 1337,
        "CharPositionInLine" : 12
      },
      "149" : {
        "Text" : "# Build the generated file and dependency file ##########################\n",
        "Line" : 1343,
        "CharPositionInLine" : 6
      },
      "150" : {
        "Text" : "# These output files depend on the source_file and the contents of cmake_dependency_file\n",
        "Line" : 1346,
        "CharPositionInLine" : 8
      },
      "151" : {
        "Text" : "# Make sure the output directory exists before trying to write to it.\n",
        "Line" : 1350,
        "CharPositionInLine" : 8
      },
      "152" : {
        "Text" : "# Make sure the build system knows the file is generated.\n",
        "Line" : 1363,
        "CharPositionInLine" : 6
      },
      "153" : {
        "Text" : "# Don't add the object file to the list of generated files if we are using\n\n# visual studio and we are attaching the build rule to the cuda file.  VS\n\n# will add our object file to the linker automatically for us.\n",
        "Line" : 1366,
        "CharPositionInLine" : 6
      },
      "154" : {
        "Text" : "# Visual Studio 8 crashes when you close the solution when you don't add the object file.\n",
        "Line" : 1372,
        "CharPositionInLine" : 8
      },
      "155" : {
        "Text" : "#message(\"Not adding ${generated_file}\")\n",
        "Line" : 1374,
        "CharPositionInLine" : 10
      },
      "156" : {
        "Text" : "# Add the other files that we want cmake to clean on a cleanup ##########\n",
        "Line" : 1383,
        "CharPositionInLine" : 6
      },
      "157" : {
        "Text" : "# Set the return parameter\n",
        "Line" : 1391,
        "CharPositionInLine" : 2
      },
      "158" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# Separable Compilation Link\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1396,
        "CharPositionInLine" : 0
      },
      "159" : {
        "Text" : "# For now we are ignoring all the configuration specific flags.\n",
        "Line" : 1405,
        "CharPositionInLine" : 4
      },
      "160" : {
        "Text" : "# This is an object file not to be compiled, but only be linked.\n",
        "Line" : 1420,
        "CharPositionInLine" : 27
      },
      "161" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# ADD LIBRARY\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1429,
        "CharPositionInLine" : 0
      },
      "162" : {
        "Text" : "# Separate the sources from the options\n",
        "Line" : 1438,
        "CharPositionInLine" : 2
      },
      "163" : {
        "Text" : "# Create custom commands and targets for each file.\n",
        "Line" : 1441,
        "CharPositionInLine" : 2
      },
      "164" : {
        "Text" : "# Add a link phase for the separable compilation if it has been enabled.  If\n\n# it has been enabled then the ${cuda_target}_SEPARABLE_COMPILATION_OBJECTS\n\n# variable will have been defined.\n",
        "Line" : 1446,
        "CharPositionInLine" : 2
      },
      "165" : {
        "Text" : "# Add the library.\n",
        "Line" : 1451,
        "CharPositionInLine" : 2
      },
      "166" : {
        "Text" : "# We need to set the linker language based on what the expected generated file\n\n# would be. CUDA_C_OR_CXX is computed based on CUDA_HOST_COMPILATION_CPP.\n",
        "Line" : 1461,
        "CharPositionInLine" : 2
      },
      "167" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# ADD EXECUTABLE\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1470,
        "CharPositionInLine" : 0
      },
      "168" : {
        "Text" : "# Separate the sources from the options\n",
        "Line" : 1479,
        "CharPositionInLine" : 2
      },
      "169" : {
        "Text" : "# Create custom commands and targets for each file.\n",
        "Line" : 1481,
        "CharPositionInLine" : 2
      },
      "170" : {
        "Text" : "# Add a link phase for the separable compilation if it has been enabled.  If\n\n# it has been enabled then the ${cuda_target}_SEPARABLE_COMPILATION_OBJECTS\n\n# variable will have been defined.\n",
        "Line" : 1484,
        "CharPositionInLine" : 2
      },
      "171" : {
        "Text" : "# Add the library.\n",
        "Line" : 1489,
        "CharPositionInLine" : 2
      },
      "172" : {
        "Text" : "# We need to set the linker language based on what the expected generated file\n\n# would be. CUDA_C_OR_CXX is computed based on CUDA_HOST_COMPILATION_CPP.\n",
        "Line" : 1500,
        "CharPositionInLine" : 2
      },
      "173" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA COMPILE\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1510,
        "CharPositionInLine" : 0
      },
      "174" : {
        "Text" : "# Separate the sources from the options\n",
        "Line" : 1517,
        "CharPositionInLine" : 2
      },
      "175" : {
        "Text" : "# Create custom commands and targets for each file.\n",
        "Line" : 1519,
        "CharPositionInLine" : 2
      },
      "176" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA COMPILE PTX\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1528,
        "CharPositionInLine" : 0
      },
      "177" : {
        "Text" : "# Separate the sources from the options\n",
        "Line" : 1535,
        "CharPositionInLine" : 2
      },
      "178" : {
        "Text" : "# Create custom commands and targets for each file.\n",
        "Line" : 1537,
        "CharPositionInLine" : 2
      },
      "179" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA ADD CUFFT TO TARGET\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1545,
        "CharPositionInLine" : 0
      },
      "180" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA ADD CUBLAS TO TARGET\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1558,
        "CharPositionInLine" : 0
      },
      "181" : {
        "Text" : "###############################################################################\n\n###############################################################################\n\n# CUDA BUILD CLEAN TARGET\n\n###############################################################################\n\n###############################################################################\n",
        "Line" : 1571,
        "CharPositionInLine" : 0
      },
      "182" : {
        "Text" : "# Call this after you add all your CUDA targets, and you will get a convience\n\n# target.  You should also make clean after running this target to get the\n\n# build system to generate all the code again.\n",
        "Line" : 1577,
        "CharPositionInLine" : 2
      },
      "183" : {
        "Text" : "# Clear out the variable, so the next time we configure it will be empty.\n\n# This is useful so that the files won't persist in the list after targets\n\n# have been removed.\n",
        "Line" : 1588,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 184
    },
    "cmake/cuda/FindCUDA/make2cmake.cmake" : {
      "ObjectId" : "9a69f9f5747a490bf0860ecf692cfdb41aab657b",
      "LastModified" : "2019-02-27T08:51:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "#  James Bigler, NVIDIA Corp (nvidia.com - jbigler)\n\n#  Abe Stephens, SCI Institute -- http://www.sci.utah.edu/~abe/FindCuda.html\n\n#\n\n#  Copyright (c) 2008 - 2009 NVIDIA Corporation.  All rights reserved.\n\n#\n\n#  Copyright (c) 2007-2009\n\n#  Scientific Computing and Imaging Institute, University of Utah\n\n#\n\n#  This code is licensed under the MIT License.  See the FindCUDA.cmake script\n\n#  for the text of the license.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The MIT License\n\n#\n\n# License for the specific language governing rights and limitations under\n\n# Permission is hereby granted, free of charge, to any person obtaining a\n\n# copy of this software and associated documentation files (the \"Software\"),\n\n# to deal in the Software without restriction, including without limitation\n\n# the rights to use, copy, modify, merge, publish, distribute, sublicense,\n\n# and/or sell copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\n# DEALINGS IN THE SOFTWARE.\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#######################################################################\n\n# This converts a file written in makefile syntax into one that can be included\n\n# by CMake.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# message(\"FOUND DEPENDS\")\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Remember, four backslashes is escaped to one backslash in the string.\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# This works for the nvcc -M generated dependency files.\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# OK, now if we had a UNC path, nvcc has a tendency to only output the first '/'\n\n# instead of '//'.  Here we will test to see if the file exists, if it doesn't then\n\n# try to prepend another '/' to the path and test again.  If it still fails remove the\n\n# path.\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# If softlinks start to matter, we should change this to REALPATH.  For now we need\n\n# to flatten paths, because nvcc can generate stuff like /bin/../include instead of\n\n# just /include.\n",
        "Line" : 79,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# message(\"FOUND NO DEPENDS\")\n",
        "Line" : 89,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Remove the duplicate entries and sort them.\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "cmake/cuda/FindCUDA/parse_cubin.cmake" : {
      "ObjectId" : "2ddd91524427a34afc560c3270050c9bbd94546c",
      "LastModified" : "2019-02-27T08:51:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "#  James Bigler, NVIDIA Corp (nvidia.com - jbigler)\n\n#  Abe Stephens, SCI Institute -- http://www.sci.utah.edu/~abe/FindCuda.html\n\n#\n\n#  Copyright (c) 2008 - 2009 NVIDIA Corporation.  All rights reserved.\n\n#\n\n#  Copyright (c) 2007-2009\n\n#  Scientific Computing and Imaging Institute, University of Utah\n\n#\n\n#  This code is licensed under the MIT License.  See the FindCUDA.cmake script\n\n#  for the text of the license.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The MIT License\n\n#\n\n# License for the specific language governing rights and limitations under\n\n# Permission is hereby granted, free of charge, to any person obtaining a\n\n# copy of this software and associated documentation files (the \"Software\"),\n\n# to deal in the Software without restriction, including without limitation\n\n# the rights to use, copy, modify, merge, publish, distribute, sublicense,\n\n# and/or sell copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\n# DEALINGS IN THE SOFTWARE.\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#######################################################################\n\n# Parses a .cubin file produced by nvcc and reports statistics about the file.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Remember, four backslashes is escaped to one backslash in the string.\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Only look at \"code { }\" blocks.\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Break into individual lines.\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Extract kernel names.\n",
        "Line" : 65,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# Check to see if the kernel name starts with \"_\"\n",
        "Line" : 69,
        "CharPositionInLine" : 10
      },
      "9" : {
        "Text" : "# if (${entry} MATCHES \"^_\")\n",
        "Line" : 71,
        "CharPositionInLine" : 10
      },
      "10" : {
        "Text" : "# Skip the rest of this block.\n\n# message(\"Skipping ${entry}\")\n\n# set(skip TRUE)\n",
        "Line" : 72,
        "CharPositionInLine" : 12
      },
      "11" : {
        "Text" : "# else ()\n",
        "Line" : 75,
        "CharPositionInLine" : 10
      },
      "12" : {
        "Text" : "# endif ()\n",
        "Line" : 77,
        "CharPositionInLine" : 10
      },
      "13" : {
        "Text" : "# Skip the rest of the block if necessary\n",
        "Line" : 81,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Registers\n",
        "Line" : 84,
        "CharPositionInLine" : 10
      },
      "15" : {
        "Text" : "# Local memory\n",
        "Line" : 90,
        "CharPositionInLine" : 10
      },
      "16" : {
        "Text" : "# Shared memory\n",
        "Line" : 96,
        "CharPositionInLine" : 10
      },
      "17" : {
        "Text" : "# message(\"FOUND NO DEPENDS\")\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 18
    },
    "cmake/cuda/FindCUDA/run_nvcc.cmake" : {
      "ObjectId" : "a71f45aba2352db419580a32ac2f9d01a08e4ecd",
      "LastModified" : "2019-02-27T08:51:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "#  James Bigler, NVIDIA Corp (nvidia.com - jbigler)\n\n#\n\n#  Copyright (c) 2008 - 2009 NVIDIA Corporation.  All rights reserved.\n\n#\n\n#  This code is licensed under the MIT License.  See the FindCUDA.cmake script\n\n#  for the text of the license.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The MIT License\n\n#\n\n# License for the specific language governing rights and limitations under\n\n# Permission is hereby granted, free of charge, to any person obtaining a\n\n# copy of this software and associated documentation files (the \"Software\"),\n\n# to deal in the Software without restriction, including without limitation\n\n# the rights to use, copy, modify, merge, publish, distribute, sublicense,\n\n# and/or sell copies of the Software, and to permit persons to whom the\n\n# Software is furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\n# DEALINGS IN THE SOFTWARE.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##########################################################################\n\n# This file runs the nvcc commands to produce the desired output file along with\n\n# the dependency file needed by CMake to compute dependencies.  In addition the\n\n# file checks the output of each command and if the command fails it deletes the\n\n# output files.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Input variables\n\n#\n\n# verbose:BOOL=<>          OFF: Be as quiet as possible (default)\n\n#                          ON : Describe each step\n\n#\n\n# build_configuration:STRING=<> Typically one of Debug, MinSizeRel, Release, or\n\n#                               RelWithDebInfo, but it should match one of the\n\n#                               entries in CUDA_HOST_FLAGS. This is the build\n\n#                               configuration used when compiling the code.  If\n\n#                               blank or unspecified Debug is assumed as this is\n\n#                               what CMake does.\n\n#\n\n# generated_file:STRING=<> File to generate.  This argument must be passed in.\n\n#\n\n# generated_cubin_file:STRING=<> File to generate.  This argument must be passed\n\n#                                                   in if build_cubin is true.\n\n# generate_dependency_only:BOOL=<> Only generate the dependency file.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set these up as variables to make reading the generated file easier\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# path\n",
        "Line" : 66,
        "CharPositionInLine" : 37
      },
      "7" : {
        "Text" : "# path\n",
        "Line" : 67,
        "CharPositionInLine" : 33
      },
      "8" : {
        "Text" : "# path\n",
        "Line" : 68,
        "CharPositionInLine" : 71
      },
      "9" : {
        "Text" : "# path\n",
        "Line" : 69,
        "CharPositionInLine" : 53
      },
      "10" : {
        "Text" : "# path\n",
        "Line" : 70,
        "CharPositionInLine" : 41
      },
      "11" : {
        "Text" : "# path\n",
        "Line" : 71,
        "CharPositionInLine" : 43
      },
      "12" : {
        "Text" : "# bool\n",
        "Line" : 72,
        "CharPositionInLine" : 31
      },
      "13" : {
        "Text" : "# bool\n",
        "Line" : 73,
        "CharPositionInLine" : 47
      },
      "14" : {
        "Text" : "# We won't actually use these variables for now, but we need to set this, in\n\n# order to force this file to be run again if it changes.\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# path\n",
        "Line" : 76,
        "CharPositionInLine" : 49
      },
      "16" : {
        "Text" : "# path\n",
        "Line" : 77,
        "CharPositionInLine" : 48
      },
      "17" : {
        "Text" : "# path\n",
        "Line" : 78,
        "CharPositionInLine" : 60
      },
      "18" : {
        "Text" : "# path\n",
        "Line" : 80,
        "CharPositionInLine" : 51
      },
      "19" : {
        "Text" : "# list\n",
        "Line" : 81,
        "CharPositionInLine" : 72
      },
      "20" : {
        "Text" : "# list\n",
        "Line" : 83,
        "CharPositionInLine" : 29
      },
      "21" : {
        "Text" : "# list (needs to be in quotes to handle spaces properly).\n",
        "Line" : 84,
        "CharPositionInLine" : 55
      },
      "22" : {
        "Text" : "# string\n",
        "Line" : 85,
        "CharPositionInLine" : 33
      },
      "23" : {
        "Text" : "# This is the list of host compilation flags.  It C or CXX should already have\n\n# been chosen by FindCUDA.cmake.\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Take the compiler flags and package them up to be sent to the compiler via -Xcompiler\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# If we weren't given a build_configuration, use Debug.\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#message(\"CUDA_NVCC_HOST_COMPILER_FLAGS = ${CUDA_NVCC_HOST_COMPILER_FLAGS}\")\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Extra quotes are added around each flag to help nvcc parse out flags with spaces.\n",
        "Line" : 104,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "#message(\"nvcc_host_compiler_flags = \\\"${nvcc_host_compiler_flags}\\\"\")\n\n# Add the build specific configuration flags\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Any -ccbin existing in CUDA_NVCC_FLAGS gets highest priority\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# cuda_execute_process - Executes a command with optional command echo and status message.\n\n#\n\n#   status  - Status message to print if verbose is true\n\n#   command - COMMAND argument from the usual execute_process argument structure\n\n#   ARGN    - Remaining arguments are the command with arguments\n\n#\n\n#   CUDA_result - return value from running the command\n\n#\n\n# Make this a macro instead of a function, so that things like RESULT_VARIABLE\n\n# and other return variables are present after executing the process.\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Now we need to build up our command string.  We are accounting for quotes\n\n# and spaces, anything else is left up to the user to fix if they want to\n\n# copy and paste a runnable command line.\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# If there are quotes, excape them, so they come through.\n",
        "Line" : 147,
        "CharPositionInLine" : 6
      },
      "33" : {
        "Text" : "# Args with spaces need quotes around them to get them to be parsed as a single argument.\n",
        "Line" : 149,
        "CharPositionInLine" : 6
      },
      "34" : {
        "Text" : "# Echo the command\n",
        "Line" : 156,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# Run the command\n",
        "Line" : 159,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# Delete the target file\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# For CUDA 2.3 and below, -G -M doesn't work, so remove the -G flag\n\n# for dependency generation and hope for the best.\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# CMake policy 0007 NEW states that empty list elements are not\n\n# ignored.  I'm just setting it to avoid the warning that's printed.\n",
        "Line" : 175,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# Note that this will remove all occurances of -G.\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# nvcc doesn't define __CUDACC__ for some reason when generating dependency files.  This\n\n# can cause incorrect dependencies when #including files based on this macro which is\n\n# defined in the generating passes of nvcc invokation.  We will go ahead and manually\n\n# define this for now until a future version fixes this bug.\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Generate the dependency file\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Generate the cmake readable dependency file to a temp file.  Don't put the\n\n# quotes just around the filenames for the input_file and output_file variables.\n\n# CMake will pass the quotes through and not be able to find the file.\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Copy the file if it is different\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Delete the temporary file\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Generate the code\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Since nvcc can sometimes leave half done files make sure that we delete the output file.\n",
        "Line" : 263,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# Cubin resource report commands.\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Run with -cubin to produce resource usage report.\n",
        "Line" : 277,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# Execute the parser script.\n",
        "Line" : 292,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 50
    },
    "cmake/modules/CheckCXX11Features.cmake" : {
      "ObjectId" : "4bd061fe6d8c3ccd3bdbf954131d74bbaf7d2743",
      "LastModified" : "2019-02-27T08:51:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# - Check which parts of the C++11 standard the compiler supports\n\n#\n\n# When found it will set the following variables\n\n#\n\n#  CXX11_COMPILER_FLAGS         - the compiler flags needed to get C++11 features\n\n#\n\n#  HAS_CXX11_AUTO               - auto keyword\n\n#  HAS_CXX11_AUTO_RET_TYPE      - function declaration with deduced return types\n\n#  HAS_CXX11_CLASS_OVERRIDE     - override and final keywords for classes and methods\n\n#  HAS_CXX11_CONSTEXPR          - constexpr keyword\n\n#  HAS_CXX11_CSTDINT_H          - cstdint header\n\n#  HAS_CXX11_DECLTYPE           - decltype keyword\n\n#  HAS_CXX11_FUNC               - __func__ preprocessor constant\n\n#  HAS_CXX11_INITIALIZER_LIST   - initializer list\n\n#  HAS_CXX11_LAMBDA             - lambdas\n\n#  HAS_CXX11_LIB_REGEX          - regex library\n\n#  HAS_CXX11_LONG_LONG          - long long signed & unsigned types\n\n#  HAS_CXX11_NULLPTR            - nullptr\n\n#  HAS_CXX11_RVALUE_REFERENCES  - rvalue references\n\n#  HAS_CXX11_SIZEOF_MEMBER      - sizeof() non-static members\n\n#  HAS_CXX11_STATIC_ASSERT      - static_assert()\n\n#  HAS_CXX11_VARIADIC_TEMPLATES - variadic templates\n\n#  HAS_CXX11_SHAREDPOINTER      - shared pointer \n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011,2012 Rolf Eike Beer <eike@sf-mail.de>\n\n# Copyright 2012 Andreas Weis\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Each feature may have up to 3 checks, every one of them in it's own file\n\n# FEATURE.cpp              - example that must build and return 0 when run\n\n# FEATURE_fail.cpp         - example that must build, but may not return 0 when run\n\n# FEATURE_fail_compile.cpp - example that must fail compilation\n\n#\n\n# The first one is mandatory, the latter 2 are optional and do not depend on\n\n# each other (i.e. only one may be present).\n\n#\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n### Check for needed compiler flags\n\n#\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/modules/CheckCompiler.cmake" : {
      "ObjectId" : "15565e61df39b23e927755ef56ea090cad68d642",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Set a default build type for single-configuration\n\n# CMake generators if no build type is set.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check for the existence of fairsoft-config\n\n# This program only exist in newer versions of fairsoft. If the file exist extract information about\n\n# the compiler and compiler flags used to install fairsoft.\n\n# Compare compiler and compiler flags used to compile fairsoft with the compiler and flags used now\n\n# In case of differences print a warning\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Strip whitespaces, otherwise readlink and comparison don't work\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Configure build types\n",
        "Line" : 116,
        "CharPositionInLine" : 5
      },
      "5" : {
        "Text" : "#     set(CMAKE_C_FLAGS_DEBUG            \"-g -O2 -fno-reorder-blocks -fno-schedule-insns -fno-inline\")\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Select flags.\n",
        "Line" : 141,
        "CharPositionInLine" : 3
      },
      "7" : {
        "Text" : "# Get the directory where to find libimf. The only way I found is to get the install dir from icpc and\n\n# from there one knows where the the libraries are installed\n",
        "Line" : 152,
        "CharPositionInLine" : 5
      },
      "8" : {
        "Text" : "# Select flags.\n",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Check for Xcode version 7.3.0\n",
        "Line" : 187,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Do not use -flat_namespace flag for Xcode 7.3.0\n",
        "Line" : 199,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "#      MESSAGE(\"C_FLAGS: ${CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS}\")\n\n#      MESSAGE(\"CXX_FLAGS: ${CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS}\")\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Configure build types\n",
        "Line" : 216,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "#MESSAGE(\"--- Build Type: ${CMAKE_BUILD_TYPE}\")\n\n#MESSAGE(\"--- Compiler Flags: ${CMAKE_CXX_FLAGS}  ${${CMAKE_BUILD_TYPE_CXXFLAGS_KEY}}\")\n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "cmake/modules/CheckFortran.cmake" : {
      "ObjectId" : "04209d494d196013862faea6857739b858539a81",
      "LastModified" : "2019-02-27T08:51:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# FFLAGS depend on the compiler\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# gfortran\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# gfortran\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# g77\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# g77\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "cmake/modules/FairMacros.cmake" : {
      "ObjectId" : "6fb94f3edc0dcf2f0dc09f7277f17a2ad0c6feee",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Defines some variables with console color escape sequences\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\n\n#Sets CMake policies.\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Find more details to each policy with cmake-- help - policy CMPXXXX\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Compiler id for Apple Clang is now AppleClang.\n\n# Double colon in target name means ALIAS or IMPORTED target.\n\n# MACOSX_RPATH is enabled by default.\n\n# The ``project()`` command manages VERSION variables.\n\n# Only interpret ``if()`` arguments as variables or keywords when unquoted.\n",
        "Line" : 35,
        "CharPositionInLine" : 14
      },
      "5" : {
        "Text" : "################################################################################\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "################################################################################\n\n#\n\n#Exchange file extention of LIST from\n\n#FILE_EXT1 to FILE_EXT2 and assign the\n\n#newly created list to OUTVAR.The input\n\n#list LIST is not changed at all\n\n#Ex : CHANGE_FILE_EXTENSION(*.cxx *.h TRD_HEADERS \"${TRD_SRCS}\")\n\n#\n\n################################################################################\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "################################################################################\n\n#\n\n# Macro get string with a colon seperated string of\n\n# pathes or any other colon sperated list.\n\n# First the string is seperated  and the entries are\n\n# filled into a list.\n\n# Loop over the list and searches for the occurence\n\n# of keywords which are provided as a list.\n\n# If the keyword occurs this path (entry) is\n\n# deleted from the list. Returns the list of pathes\n\n# (entries) wich survives the loop.\n\n#\n\n# PATH: colon separated string of pathes or other\n\n#       input entries\n\n# LIST_OF_KEYWORDS: list of the keywords which\n\n#                   should be excluded in the output\n\n# OUTVAR: name of the variable which should be filled\n\n#         with the resulting output list\n\n#\n\n################################################################################\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#################################################################################\n\n# The macro checks if the user wants to build the project\n\n# in the source directory and if so stop the execution\n\n# of cmake with an error message.\n\n#\n\n################################################################################\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#################################################################################\n\n# The macro checks if the build directory is different from the\n\n# installation directory. In case both are the same\n\n# stop the execution of cmake with an error message.\n\n#\n\n################################################################################\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "################################################################################\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "################################################################################\n\n# Make the given list have only one instance of each unique element and\n\n# store it in var_name.\n\n################################################################################\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "################################################################################\n\n# Creates a variable which stores the intersection\n\n# between two lists\n\n################################################################################\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Store the intersection between the two given lists in var_name.\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "################################################################################\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Remove elements in list2 from list1 and store the result in var_name.\n",
        "Line" : 193,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "################################################################################\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "################################################################################\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "################################################################################\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "################################################################################\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "################################################################################\n",
        "Line" : 339,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "################################################################################\n",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "################################################################################\n",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "################################################################################\n",
        "Line" : 418,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "cmake/modules/FindCERNLIB.cmake" : {
      "ObjectId" : "529cad87a6264e726683354ec40f9cecefd3d39e",
      "LastModified" : "2019-02-27T08:51:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# - Try to find CERNLIB\n\n# Once done this will define\n\n#\n\n#  CERNLIB_FOUND - system has CERNLIB\n\n#### (not needed)  CERNLIB_INCLUDE_DIR - the CERNLIB include directory\n\n#  CERNLIB_LIBRARIES - The libraries needed to use CERNLIB\n\n#### (not needed)  CERNLIB_DEFINITIONS - Compiler switches required for using CERNLIB\n\n#\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindFairRoot.cmake" : {
      "ObjectId" : "581cc069190c6881ff68d6369f84907c0eabcb30",
      "LastModified" : "2019-02-27T08:51:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Find FairRoot installation \n\n# Check the environment variable \"FAIRROOTPATH\"\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# look for exported FairMQ targets and include them\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindFlatBuffers.cmake" : {
      "ObjectId" : "31483e80ef7dd7ec88931e341940d22e19f974e9",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#MESSAGE(STATUS \"Looking for FlatBuffers...\")\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#  message(STATUS \"Looking for FlatBuffers ... found at ${FLATBUFFERS_INCLUDE_DIR}\")\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindGSL.cmake" : {
      "ObjectId" : "a64cc3928cdcef5aaf6ba62707634f647dd41092",
      "LastModified" : "2019-02-27T08:51:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Try to find gnu scientific library GSL\n\n# See\n\n# http://www.gnu.org/software/gsl/  and\n\n# http://gnuwin32.sourceforge.net/packages/gsl.htm\n\n#\n\n# Based on a script of Felix Woelk and Jan Woetzel\n\n# (www.mip.informatik.uni-kiel.de)\n\n#\n\n# It defines the following variables:\n\n#  GSL_FOUND - system has GSL lib\n\n#  GSL_INCLUDE_DIRS - where to find headers\n\n#  GSL_LIBRARIES - full path to the libraries\n\n#  GSL_LIBRARY_DIRS, the directory where the PLplot library is found.\n\n#  GSL_CFLAGS, additional c (c++) required\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Windows, but not for Cygwin and MSys where gsl-config is available\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# look for headers\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# look for gsl library\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# look for gsl cblas library\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# run the gsl-config program to get cxxflags\n",
        "Line" : 78,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# parse definitions from cflags; drop -D* from CFLAGS\n",
        "Line" : 89,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# parse include dirs from cflags; drop -I prefix\n",
        "Line" : 95,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# run the gsl-config program to get the libs\n",
        "Line" : 106,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# extract linkdirs (-L) for rpath (i.e., LINK_DIRECTORIES)\n",
        "Line" : 117,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 11
    },
    "cmake/modules/FindGo.cmake" : {
      "ObjectId" : "c02dd7792566b23113d6776bd7549a6163cf3042",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This Source Code Form is subject to the terms of the Mozilla Public\n\n# License, v. 2.0. If a copy of the MPL was not distributed with this\n\n# file, You can obtain one at http://mozilla.org/MPL/2.0/.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The module defines the following variables:\n\n#   GO_FOUND - true if the Go was found\n\n#   GO_EXECUTABLE - path to the executable\n\n#   GO_VERSION - Go version number\n\n#   GO_PLATFORM - i.e. linux\n\n#   GO_ARCH - i.e. amd64\n\n# Example usage:\n\n#   find_package(Go 1.2 REQUIRED)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#MESSAGE(STATUS \"Looking for Go...\")\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# build_go_package build/installs a Go package 'pkg'.\n\n# if 'gopath' is empty \"\", the environment variable $GOPATH will be used a/nd passed to\n\n# 'go get'.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindHEPMC.cmake" : {
      "ObjectId" : "ba78db9c75d673c8331776c321a8a8de437ca8d8",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# - Try to find HEPMC instalation\n\n# Once done this will define\n\n#\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#MESSAGE(STATUS \"Looking for HepMC ...\")\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindIWYU.cmake" : {
      "ObjectId" : "0a9b34f76a84bc6e1a19e476be7e42f4655da043",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# - Try to find the include-what-you-use (IWYU) instalation\n\n# - This tool is based on llvm and will check the #include statements\n\n# - Once done this will define\n\n#\n\n# - Define macros to run the tool\n\n#\n\n#  IWYU_FOUND - system has include-what-you-use\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Message(STATUS \"Looking for IWYU...\")\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#string(REPLACE \"include\" \" \" ${IWYU_VERSION_STRING} IWYU_VERSION_S)\n\n#MESSAGE(STATUS \"Looking for IWYU... - found ${IWYU_VERSION_STRING}\")\n\n#MESSAGE(STATUS \"Looking for IWYU... - found ${IWYU_VERSION_S}\")\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#MESSAGE(STATUS \"Looking for IWYU... - found ${IWYU_BINARY}\")\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#########\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#  Message(\"Create Header Checker for ${HEADER_RULE_NAME}\")\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#     COMMAND /bin/bash ${CMAKE_CURRENT_SOURCE_DIR}/cmake/scripts/iwyu.sh ${outfile} ${_current_FILE} ${headerfile}\n",
        "Line" : 72,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 8
    },
    "cmake/modules/FindMYSQL.cmake" : {
      "ObjectId" : "db95ccea5e015733e7d528eb8061accc94856db8",
      "LastModified" : "2019-02-27T08:51:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find mysqlclient\n\n# Find the native MySQL includes and library\n\n#\n\n#  MYSQL_INCLUDE_DIRS - where to find mysql.h, etc.\n\n#  MYSQL_LIBRARIES   - mysqlclient library.\n\n#  MYSQL_FOUND       - True if mysqlclient is found.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# <D.Bertini> : \n\n#    Date: 11.08.2014 -- Changes to favor user local installation\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindOracle.cmake" : {
      "ObjectId" : "21d5630b391f7b24a3653dadbd59e4640385ae73",
      "LastModified" : "2019-02-27T08:51:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# TOra: Configure Oracle libraries\n\n#\n\n# ORACLE_FOUND - system has Oracle OCI\n\n# ORACLE_INCLUDES - where to find oci.h\n\n# ORACLE_LIBRARIES - the libraries to link against to use Oracle OCI\n\n#\n\n# copyright (c) 2007 Petr Vanek <petr@scribus.info>\n\n# Redistribution and use is allowed according to the terms of the GPLv2 license.\n\n#\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#  set(INCLUDE_DIRS \"\n\n#      include=${ORACLE_HOME}/precomp/public\n\n#      include=${ORACLE_HOME}/rdbms/public\n\n#      include=${ORACLE_HOME}/rdbms/demo\n\n#      include=${ORACLE_HOME}/plsql/public\n\n#      include=${ORACLE_HOME}/network/public\n\n#  \")\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#  MESSAGE(\"PROCFLAGS: ${PROCFLAGS}\")\n\n#  MESSAGE(\"INCLUDE_DIRS: ${INCLUDE_DIRS}\")\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindPGSQL.cmake" : {
      "ObjectId" : "19a651e0defd9d9671ef8abf2451202833563b20",
      "LastModified" : "2019-02-27T08:51:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Macro to search for Postgresql installation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  POSTGRESQL_INCLUDE_DIR - where to find mysql.h, etc.\n\n#  POSTGRESQL_LIBRARY_DIR   - mysqlclient library directory\n\n#  POSTGRESQL_LIBRARIES    - mysqlclient library.\n\n#  POSTGRESQL_FOUND       - True if mysqlclient is found.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# <D.Bertini> : \n\n#    Date: 05.08.2014 -- Remark: for PgSQL 9.2 on MacOSX the libpq.dylib \n\n#                        is named libpd.5.dylib. The following script will\n\n#                         not find the corresponding soft link to /Library. \n\n#                         You need to set the link to libpq.so in /usr/lib.\n\n#                         Issue solved in PgSQL 9.3   \n\n#    Date: 11.08.2014 -- Changes to favor user local installation\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindPLUTO.cmake" : {
      "ObjectId" : "4312c1a994b4feeb559bfca3f02426b70359b64c",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# - Try to find PLUTO instalation\n\n# Once done this will define\n\n#\n\n#  PLUTO_FOUND - system has GEANT3\n\n#  PLUTO_INCLUDE_DIR - the GEANT3 include directory\n\n#  PLUTO_LIBRARIES - The libraries needed to use GEANT3\n\n#  PLUTO_DEFINITIONS - Compiler switches required for using GEANT3\n\n#\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindPythia6.cmake" : {
      "ObjectId" : "e967844470c03132085efce552cd70a9e3a977cc",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# - Try to find PLUTO instalation\n\n# Once done this will define\n\n#\n\n#  Pythia6_FOUND - system has Pythia6\n\n#  Pythia6_LIBRARY_DIR - The libraries directory for Pythia6\n\n#\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#MESSAGE(STATUS \"Looking for Pythia6...\")\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindPythia8.cmake" : {
      "ObjectId" : "4c6e60a336070f2ee4dccd7d7d51b2fca8a1219b",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# - Try to find PYTHIA8 instalation\n\n# Once done this will define\n\n# PYTHIA8_INCLUDE_DIR     where to locate Pythia.h file\n\n# PYTHIA8_LIBRARY         where to find the libpythia8 library\n\n# PYTHIA8_<lib>_LIBRARY   Addicional libraries\n\n# PYTHIA8_LIBRARIES       (not cached) the libraries to link against to use Pythia8\n\n# PYTHIA8_FOUND           if false, you cannot build anything that requires Pythia8\n\n# PYTHIA8_VERSION         version of Pythia8 if found\n\n################################################################################\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PYTHIA8_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindROOT.cmake" : {
      "ObjectId" : "471c3f0c11e00fbf2e3026cb7f12a72c55763720",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# - Find ROOT instalation\n\n# This module tries to find the ROOT installation on your system.\n\n# It tries to find the root-config script which gives you all the needed\n\n# information.\n\n# If the system variable ROOTSYS is set this is straight forward.\n\n# If not the module uses the pathes given in ROOT_CONFIG_SEARCHPATH.\n\n# If you need an other path you should add this path to this varaible.\n\n# The root-config script is then used to detect basically everything else.\n\n# This module defines a number of key variables and macros.\n\n#\n\n# Variables defined by this module:\n\n#\n\n#   ROOT_FOUND               System has ROOT, this means the root-config\n\n#                            executable was found.\n\n#\n\n#   ROOT_INCLUDE_DIR         ROOT include directories: not cached\n\n#\n\n#   ROOT_INCLUDES            Same as above,\n\n#\n\n#   ROOT_LIBRARIES           Link to these to use the ROOT libraries, not cached\n\n#\n\n#   ROOT_LIBRARY_DIR         The path to where the ROOT library files are.\n\n#\n\n#   ROOT_VERSION_STRING      The version string of the ROOT libraries which\n\n#                            is reported by root-config\n\n#\n\n#   ROOT_VERSION_MAJOR       Major version number of ROOT\n\n#   ROOT_VERSION_MINOR       Minor version number of ROOT\n\n#   ROOT_VERSION_PATCH       Patch version number of ROOT\n\n#\n\n#   ROOT_VERSION_NUMBER      A unique version number which is calculated from\n\n#                            major, minor and patch version found\n\n#\n\n#   ROOT_CINT_EXECUTABLE     The rootcint executable.\n\n#\n\n#   RLIBMAP_EXECUTABLE       The rlibmap executable.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Message(STATUS \"Looking for Root...\")\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# MESSAGE(STATUS \"Looking for Root... - Found ${ROOT_INSTALL_DIR}/bin/root\")\n\n# MESSAGE(STATUS \"Looking for Root... - Found version is ${ROOT_VERSION_STRING} \")\n",
        "Line" : 74,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# extract major, minor, and patch versions from\n\n# the version string given by root-config\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# compute overall version numbers which can be compared at once\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# ask root-config for the library dir\n\n# Set ROOT_LIBRARY_DIR\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# ask root-config for the binary dir\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# ask root-config for the include dir\n",
        "Line" : 121,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# ask root-config for the library varaibles\n",
        "Line" : 127,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Make variables changeble to the advanced user\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Set ROOT_INCLUDES\n",
        "Line" : 136,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#######################################\n\n#\n\n#       Check the executables of ROOT\n\n#          ( rootcint )\n\n#\n\n#######################################\n",
        "Line" : 141,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 13
    },
    "cmake/modules/FindSQLITE.cmake" : {
      "ObjectId" : "692f29df5c31e0da2c1100d8120de526ca5150c3",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the sqlite library\n\n# Once done this will define\n\n#\n\n#  SQLITE_FOUND - system has sqlite\n\n#  SQLITE_INCLUDE_DIR - the sqlite include directory\n\n#  SQLITE_LIBRARY_DIR\n\n#  SQLITE_LIBRARIES - Link these to use sqlite\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# <D.Bertini> :\n\n#    Date: 11.08.2014 -- Changes to favor user local installation\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindSSE.cmake" : {
      "ObjectId" : "d9ee9da928c4ead431f57836e6cf03801010186a",
      "LastModified" : "2019-02-27T08:51:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Check if SSE instructions are available on the machine where \n\n# the project is compiled.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindTBB.cmake" : {
      "ObjectId" : "ce9c3a6f76faaedbc2d3899f004b34e72e18c5d5",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Locate Intel Threading Building Blocks include paths and libraries\n\n# TBB can be found at http://www.threadingbuildingblocks.org/\n\n# Written by Hannes Hofmann, hannes.hofmann _at_ informatik.uni-erlangen.de\n\n# Adapted by Gino van den Bergen gino _at_ dtecta.com\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GvdB: This module uses the environment variable TBB_ARCH_PLATFORM which defines architecture and compiler.\n\n#   e.g. \"ia32/vc8\" or \"em64t/cc4.1.0_libc2.4_kernel2.6.16.21\"\n\n#   TBB_ARCH_PLATFORM is set by the build script tbbvars[.bat|.sh|.csh], which can be found\n\n#   in the TBB installation directory (TBB_INSTALL_DIR).\n\n#\n\n# For backwards compatibility, you may explicitely set the CMake variables TBB_ARCHITECTURE and TBB_COMPILER.\n\n# TBB_ARCHITECTURE     [ ia32 | em64t | itanium ]\n\n#   which architecture to use\n\n# TBB_COMPILER         e.g. vc9 or cc3.2.3_libc2.3.2_kernel2.4.21 or cc4.0.1_os10.4.9\n\n#   which compiler to use (detected automatically on Windows)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This module respects\n\n# TBB_INSTALL_DIR or $ENV{TBB21_INSTALL_DIR} or $ENV{TBB_INSTALL_DIR}\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This module defines\n\n# TBB_INCLUDE_DIRS, where to find task_scheduler_init.h, etc.\n\n# TBB_LIBRARY_DIRS, where to find libtbb, libtbbmalloc\n\n# TBB_INSTALL_DIR, the base TBB install directory\n\n# TBB_LIBRARIES, the libraries to link against to use TBB.\n\n# TBB_DEBUG_LIBRARIES, the libraries to link against to use TBB with debug symbols.\n\n# TBB_FOUND, If false, don't try to use TBB.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#MESSAGE(STATUS \"Looking for TBB...\")\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# has em64t/vc8   em64t/vc9\n\n# has ia32/vc7.1  ia32/vc8   ia32/vc9\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# MAC\n",
        "Line" : 62,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# libs: libtbb.dylib, libtbbmalloc.dylib, *_debug\n",
        "Line" : 64,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# has only one flavor: ia32/cc4.0.1_os10.4.9\n",
        "Line" : 69,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# LINUX\n",
        "Line" : 73,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# has em64t/cc3.2.3_libc2.3.2_kernel2.4.21  em64t/cc3.3.3_libc2.3.3_kernel2.6.5  em64t/cc3.4.3_libc2.3.4_kernel2.6.9  em64t/cc4.1.0_libc2.4_kernel2.6.16.21\n\n# has ia32/*\n\n# has itanium/*\n",
        "Line" : 79,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# SUN\n\n# not yet supported\n\n# has em64t/cc3.4.3_kernel5.10\n\n# has ia32/*\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-- Clear the public variables\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#-- Find TBB install dir and set ${_TBB_INSTALL_DIR} and cached ${TBB_INSTALL_DIR}\n\n# first: use CMake variable TBB_INSTALL_DIR\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# second: use environment variable\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Intel recommends setting TBB21_INSTALL_DIR\n",
        "Line" : 109,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# third: try to find path automatically\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# sanity check\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# finally: set the cached CMake variable TBB_INSTALL_DIR\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#-- A macro to rewrite the paths of the library. This is necessary, because\n\n#   find_library() always found the em64t/vc9 version of the TBB libs\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#    if (NOT \"${_TBB_ARCHITECTURE}\" STREQUAL \"em64t\")\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#    endif (NOT \"${_TBB_ARCHITECTURE}\" STREQUAL \"em64t\")\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#-- Look for include directory and set ${TBB_INCLUDE_DIR}\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#-- Look for libraries\n\n# GvdB: $ENV{TBB_ARCH_PLATFORM} is set by the build script tbbvars[.bat|.sh|.csh]\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# HH: deprecated\n",
        "Line" : 168,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "#Extract path from TBB_LIBRARY name\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#TBB_CORRECT_LIB_DIR(TBB_LIBRARY)\n\n#TBB_CORRECT_LIB_DIR(TBB_MALLOC_LIBRARY)\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#-- Look for debug libraries\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#TBB_CORRECT_LIB_DIR(TBB_LIBRARY_DEBUG)\n\n#TBB_CORRECT_LIB_DIR(TBB_MALLOC_LIBRARY_DEBUG)\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# do only throw fatal, if this pkg is REQUIRED\n",
        "Line" : 206,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 31
    },
    "cmake/modules/FindVGM.cmake" : {
      "ObjectId" : "c9dd9667688395ac7fc1753a6d7047eabe36e6cc",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n\n# - Try to find VGM\n\n# Once done this will define\n\n#\n\n#  VGM_FOUND - system has VGM\n\n#  VGM_INCLUDE_DIR - the VGM include directory\n\n#  VGM_LIBRARIES - The libraries needed to use VGM\n\n#  VGM_DEFINITIONS - Compiler switches required for using VGM\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#MESSAGE(STATUS \"Looking for VGM...\")\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/Findglpk.cmake" : {
      "ObjectId" : "d36251096110f9ffea82996834d2bff311093117",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# - Try to find GLPK instalation\n\n# Once done this will define\n\n#\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#MESSAGE(STATUS \"Looking for GLPK ...\")\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#    message(STATUS \"Found PLUTO: ${PLUTO_LIBRARY_DIR}\")\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/modules/GenerateVersionInfo.cmake" : {
      "ObjectId" : "d50f7dc358d473a676e0b3d08d821705f0842f62",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n\n# Configure FairVersion.h\n\n# ------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "cmake/modules/ROOTMacros.cmake" : {
      "ObjectId" : "8e777dcf2376d0f207373e9832f5a99dc8a42b95",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# DevNotes - input should be put in quotes or the complete list does not get passed to the function\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###########################################\n\n#\n\n#       Macros for building ROOT dictionary\n\n#\n\n###########################################\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Macro to switch between the old implementation with parameters\n\n# and the new implementation without parameters.\n\n# For the new implementation some CMake variables has to be defined\n\n# before calling the macro.\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#    Message(\"New Version\")\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#      Message(\"Old Version\")\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All Arguments needed for this new version of the macro are defined\n\n# in the parent scope, namely in the CMakeLists.txt of the submodule\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Convert the values of the variable to a semi-colon separated list\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Format neccesary arguments\n\n# Add -I and -D to include directories and definitions\n",
        "Line" : 76,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#---call rootcint / cling --------------------------------\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# We need some environment variables which are present when running cmake at the\n\n# time we run make. To pass the variables a script is created containing the\n\n# correct values for the needed variables\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#EXEC_PROGRAM(/bin/chmod ARGS \"u+x ${CMAKE_CURRENT_BINARY_DIR}/generate_dictionary_${script_name}.sh\")\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "#  Message(\"Definitions: ${DEFINITIONS}\")\n\n#  MESSAGE(\"INFILES: ${INFILES}\")\n\n#  MESSAGE(\"OutFILE: ${OUTFILE}\")\n\n#  MESSAGE(\"LINKDEF_FILE: ${LINKDEF_FILE}\")\n\n#  MESSAGE(\"INCLUDE_DIRS: ${INCLUDE_DIRS}\")\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#  MESSAGE(\"BLA: ${bla}\")\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#MESSAGE(\"PATH: ${path_name}\")\n\n#MESSAGE(\"Ext: ${file_extension}\")\n\n#MESSAGE(\"Name: ${file_name}\")\n\n#MESSAGE(\"Shell Name: ${shell_script_name}\")\n",
        "Line" : 184,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "#MESSAGE(\"New PATH: ${new_path}\")\n",
        "Line" : 193,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# All Arguments needed for this new version of the macro are defined\n\n# in the parent scope, namely in the CMakeLists.txt of the submodule\n",
        "Line" : 221,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#---Install the rootmap file------------------------------------\n\n#install(FILES ${Int_OUTFILE} DESTINATION lib COMPONENT libraries)\n",
        "Line" : 254,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "############### build the library #####################\n",
        "Line" : 322,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "############### install the library ###################\n",
        "Line" : 331,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "#  If(IWYU_FOUND)\n\n#    Set(HeaderRuleName \"${EXE_NAME}_HEADER_RULES\")\n\n#    CHECK_HEADERS(\"${SRCS}\" \"${INCLUDE_DIRECTORIES}\" ${HeaderRuleName})\n\n#  EndIf(IWYU_FOUND)\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "############### build the library #####################\n",
        "Line" : 352,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "############### install the library ###################\n",
        "Line" : 356,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 23
    },
    "cmake/modules/WriteConfigFile.cmake" : {
      "ObjectId" : "e0f44cdbf262e883d09f860e4073a4c99712c14a",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "#    SET(VMCWORKDIR ${CMAKE_INSTALL_PREFIX}/share/fairbase)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#    SET(VMCWORKDIR ${CMAKE_SOURCE_DIR})\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#  Set(VMCWORKDIR ${C})\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/modules_old/FindCLHEP.cmake" : {
      "ObjectId" : "2cf3825c8a5482bab1c48558df214c2358d6aa31",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# - Try to find CLHEP\n\n# Once done this will define\n\n#\n\n#  CLHEP_FOUND - system has CLHEP\n\n#  CLHEP_INCLUDE_DIR - the CLHEP include directory\n\n#  CLHEP_LIBRARIES - The libraries needed to use CLHEP\n\n#  CLHEP_DEFINITIONS - Compiler switches required for using CLHEP\n\n#\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#MESSAGE(STATUS \"Looking for CLHEP...\")\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If we find the new clhep-config executable use it, otherwise search in the path\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use clhep-config to find libs and includes\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# clean the variables because they are of the form -I/<dir> or -L/<dir> -l<lib>\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# If it's a library path, add it to the list\n",
        "Line" : 45,
        "CharPositionInLine" : 7
      },
      "7" : {
        "Text" : "# check if clhep is available in Geant4\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#    MESSAGE(STATUS \"Looking for CLHEP... - found ${CLHEP_LIBRARY_DIR}\")\n\n#    message(STATUS \"Found CLHEP: ${CLHEP_LIBRARY_DIR}\")\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/modules_old/FindGEANT3.cmake" : {
      "ObjectId" : "f080454844da13e3078af069534b538638a35afc",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# - Try to find GEANT3\n\n# Once done this will define\n\n#\n\n#  GEANT3_FOUND - system has GEANT3\n\n#  GEANT3_INCLUDE_DIR - the GEANT3 include directory\n\n#  GEANT_LIBRARIES - The libraries needed to use GEANT3\n\n#  GEANT_DEFINITIONS - Compiler switches required for using GEANT3\n\n#  GEANT3_SYSTEM_DIR - Base directory of the GEANT3 installation, needed for GCALOR\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check if SetCUTS from TGeant3 has 11 or 16 parameters\n\n# According to this test the g3Config file is choosen\n\n# As a test cmake tries to compile a small program with\n\n# a function only present in the new Geant3 version.\n\n# If the compilation succed the library has the new version,\n\n# if not the library has the old version.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#MESSAGE(STATUS \"Looking for GEANT3...\")\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#  TEST_GEANT3_VERSION()\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/modules_old/FindGEANT4.cmake" : {
      "ObjectId" : "eefd67089a1af3145b97607f3fc153628a4aa320",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# - Try to find GEANT4\n\n# Once done this will define\n\n#\n\n#  GEANT4_FOUND - system has GEANT4\n\n#  GEANT4_INCLUDE_DIR - the GEANT4 include directory\n\n#  GEANT4_LIBRARIES - The libraries needed to use GEANT4\n\n#  GEANT4_DEFINITIONS - Compiler switches required for using GEANT4\n\n#\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#MESSAGE(STATUS \"Looking for GEANT4...\")\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# MESSAGE(STATUS \"Looking for GEANT4... - found ${GEANT4_LIBRARY_DIR}\")\n",
        "Line" : 79,
        "CharPositionInLine" : 3
      },
      "4" : {
        "Text" : "#    message(STATUS \"Found ${GEANT4_LIBRARY_DIR}\")\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/modules_old/FindGEANT4DATA.cmake" : {
      "ObjectId" : "d5a6328b2839dc1856039c84f56bb0175b4534c7",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# - Try to find GEANT4 data files\n\n#\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n#MESSAGE(STATUS \"Looking for GEANT4 DATA files...\")\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#   Message(STATUS \"NOT Found G4EMLOW data\")\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#  Message(STATUS \"Found PhotonEvaporation data\")\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Message(STATUS \"Found G4NDL data\")\n",
        "Line" : 52,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#  Message(STATUS \"Found G4NEUTRONXS data\")\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Message(STATUS \"Found G4PARTICLEXSDATA data\")\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Message(STATUS \"Found G4PII data\")\n",
        "Line" : 92,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# Message(STATUS \"Found RadioactiveDecay data\")\n",
        "Line" : 104,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Message(STATUS \"Found RealSurface data\")\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Message(STATUS \"Found G4SAID data\")\n",
        "Line" : 127,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Message(STATUS \"Found G4ENSDFSTATE data\")\n",
        "Line" : 139,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 13
    },
    "cmake/modules_old/FindGEANT4VMC.cmake" : {
      "ObjectId" : "299c3aeb2cd4bf7858345664dad2e6c4edd135ee",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# - Try to find GEANT4VMC\n\n# Once done this will define\n\n#\n\n#  GEANT4VMC_FOUND - system has GEANT4VMC\n\n#  GEANT4VMC_INCLUDE_DIR - the GEANT4VMC include directory\n\n#  GEANT4VMC_LIBRARIES - The libraries needed to use GEANT4VMC\n\n#  GEANT4VMC_DEFINITIONS - Compiler switches required for using GEANT4VMC\n\n#\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#MESSAGE(STATUS \"Looking for GEANT4VMC...\")\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# check for existence of header file, which is needed in FairRunConfiguration\n\n# The file is only present in old versions of VMC\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/modules_old/FindGENERATORS.cmake" : {
      "ObjectId" : "9b0b0495682e86157ab0c434bee80a1a657ed669",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find PLUTO instalation\n\n# Once done this will define\n\n#\n\n#  GENERATORS_FOUND - system has PYTHIA6\n\n#  GENERATORS_LIBRARY_DIR - The libraries directory for PYTHIA6\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#MESSAGE(STATUS \"Looking for Pythia6...\")\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cuda/CMakeLists.txt" : {
      "ObjectId" : "4991548c485824e9088de05511efd9056241bc08",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "cuda/cuda_imp/CMakeLists.txt" : {
      "ObjectId" : "72bc1bd35179bed3611092100528c48a9b4bfbee",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "##############################################################################\n\n# There are two ways to add include directories to the NVCC command\n\n# line:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(CUDA_PROPAGATE_HOST_FLAGS OFF)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The cuda_include_directories adds paths to only cuda compilation.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The include_directories adds paths to both C/C++ compilation in the native\n\n# compiler and cuda compilation in NVCC.  Note that CUDA_INCLUDE_DIRS is added\n\n# automatically by CUDA_ADD_EXECUTABLE and CUDA_ADD_LIBRARY.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# INCLUDE_DIRECTORIES(\n\n#   ${CUDA_INCLUDE_DIRS}\n\n#   )\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##############################################################################\n\n# There are four ways to compile source files with NVCC. \n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Set CUDA_ATTACH_VS_BUILD_RULE_TO_CUDA_FILE when you want to add the same .cu\n\n# file to multiple targets.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Use one executable only.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#set(CUDA_ATTACH_VS_BUILD_RULE_TO_CUDA_FILE ON)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#CUDA_ADD_EXECUTABLE(test-conflict\n\n#  \"${CMAKE_CURRENT_SOURCE_DIR}/path with spaces/conflict.cpp\"\n\n#  \"${CMAKE_CURRENT_SOURCE_DIR}/path with spaces/conflict.cu\"\n\n#  \"${CMAKE_CURRENT_SOURCE_DIR}/path with spaces/no-conflict.cpp\"\n\n#  \"${CMAKE_CURRENT_SOURCE_DIR}/path with spaces/no-conflict.cu\"\n\n#  ${CMAKE_CURRENT_SOURCE_DIR}/conflict-main.cpp\n\n#  ${CMAKE_CURRENT_SOURCE_DIR}/conflict.cpp\n\n#  ${CMAKE_CURRENT_SOURCE_DIR}/conflict.cu\n\n#  )\n\n# Or compile the cuda code into a shared library.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Anything other than -D or /D is not passed along to nvcc.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# You can set BUILD_SHARED_LIBS or you can pass STATIC, SHARED, or MODULE to\n\n# CUDA_ADD_LIBRARY.  Remember that BUILD_SHARED_LIBS is only respected by\n\n# CUDA_ADD_LIBRARY.  If you use CUDA_COMPILE or CUDA_WRAP_SRCS you must specify\n\n# SHARED or STATIC as a parameter.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#include_directories(\"path with spaces\")\n\n#add_executable(test_with_spaces test_with_spaces.cpp)\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#  external_dependency.h\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# STATIC\n\n#OPTIONS -DSTUFF=\"blah blah\"\n\n#RELEASE --use_fast_math -DNDEBUG\n\n#DEBUG -g -DDEBUG\n",
        "Line" : 77,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Then link the shared library to another executable.\n\n#ADD_EXECUTABLE(lib_example\n\n#  main_for_lib.cc\n\n#  )\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Specify the dependency.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Using the CUDA_COMPILE macro\n\n#set(CUDA_ATTACH_VS_BUILD_RULE_TO_CUDA_FILE OFF)\n\n#set(source_files test_bin.cu)\n\n#CUDA_COMPILE(CUDA_FILES test_bin.cu)\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#ADD_EXECUTABLE(cuda_compile_example\n\n#  ${CUDA_FILES}\n\n#  ${source_files}\n\n#  main.cc\n\n#  external_dependency.h\n\n#  )\n\n#TARGET_LINK_LIBRARIES(cuda_compile_example\n\n# ${CUDA_LIBRARIES}\n\n# )\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#set(CUDA_ATTACH_VS_BUILD_RULE_TO_CUDA_FILE ON)\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Generating PTX files.\n\n#set(CUDA_GENERATED_OUTPUT_DIR \"${CMAKE_CURRENT_BINARY_DIR}\")\n\n#CUDA_COMPILE_PTX(ptx_files test_ptx.cu)\n\n#add_executable(test_ptx\n\n#  main-ptx.cpp\n\n#  ${ptx_files}\n\n#  test_ptx.cu\n\n#  )\n\n#target_link_libraries(test_ptx\n\n#  ${CUDA_CUDA_LIBRARY}\n\n#  )\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Add a special target to clean nvcc generated files.\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 23
    },
    "cuda/interface/CMakeLists.txt" : {
      "ObjectId" : "aa11a342df67dfed0272947a61913e6bdc6440ea",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "############### build the library #####################\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "############### install the library #############\n\n######\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "datamatch/CMakeLists.txt" : {
      "ObjectId" : "06094c6a0ffa9b395ae65f14d62a75e887a6b877",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Create a library called \"libFairDataMatch\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#    FairTools ParBase GeoBase \n\n#    Proof GeomPainter Geom VMC EG MathCore Physics \n\n#    Matrix Tree Hist RIO Core\n\n#)\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "doxygen/CMakeLists.txt" : {
      "ObjectId" : "134f6b50c0ffe40fe996253b9aaca7936f17c4a8",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Build the documentation\n\n#\n\n# INCLUDE (Documentation)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Configure the script and the doxyfile, then add target\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "eventdisplay/CMakeLists.txt" : {
      "ObjectId" : "a5d5c9b6162db99050e1f0f3bf04b26a0cc29b65",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Create a library called \"libEventDisplay\" \n\n# 06.12.07  M. Al-Turany\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "de03945e47ffcca5d92d0fb0eb5a5ff450f81beb",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 2,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "examples/MQ/Lmd/CMakeLists.txt" : {
      "ObjectId" : "d1b2bd77fbb922f53e694b5ed0c22fdad7205eb4",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "examples/MQ/histogramServer/CMakeLists.txt" : {
      "ObjectId" : "7da85ded186845877f98860708660f280dfebed2",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "examples/MQ/parameters/CMakeLists.txt" : {
      "ObjectId" : "11e7d802c4553da92b1e4becedb16084c717e1e5",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "examples/MQ/pixelAlternative/CMakeLists.txt" : {
      "ObjectId" : "c0d1ab72ce241afcee655c5c00a2921d443ff3ff",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "examples/MQ/pixelAlternative/run/CMakeLists.txt" : {
      "ObjectId" : "98ce9bd58ba23cf959e319524b757e72e560b500",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "examples/MQ/pixelAlternative/src/CMakeLists.txt" : {
      "ObjectId" : "3ab4b79c9759ab6729addf7e45b84c0525fcacfd",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Create a library called \"libPixel\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/MQ/pixelDetector/CMakeLists.txt" : {
      "ObjectId" : "48d6bab75b7b9c374982b2bfddd0753f4e284fd7",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "examples/MQ/pixelDetector/macros/CMakeLists.txt" : {
      "ObjectId" : "2a51bdfb343a0a1fb6afcdea34e78fbf8c1e2328",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "examples/MQ/pixelDetector/param/CMakeLists.txt" : {
      "ObjectId" : "1da1b93174b8844e14aa0d9de8f7406158127c32",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "examples/MQ/pixelDetector/run/CMakeLists.txt" : {
      "ObjectId" : "d8234adc7efe8f46e3c3aba21d9428f11dc7e5a0",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "examples/MQ/pixelDetector/src/CMakeLists.txt" : {
      "ObjectId" : "beac85f5ba6c91864ce949f0b09b87cd274c90fc",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Create a library called \"libPixel\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/MQ/serialization/CMakeLists.txt" : {
      "ObjectId" : "bad809e9b991df71035c9a6454b4c3635e7f0545",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Create a library called \"libSerializationExample\"\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Data generator\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# start MQ chains\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# test scripts\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create a default directory that will hold root input/output data file\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# set(DEPENDENCIES SerializationExample ${UBUNTU_GREATERTHAN_v11_LINKER_FLAG})\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "examples/advanced/GoTutorial/CMakeLists.txt" : {
      "ObjectId" : "72e07dd144516bcefdc9a27cca16f35b1e13c2b0",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(GOPATH $ENV{GOPATH})\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/advanced/MbsTutorial/CMakeLists.txt" : {
      "ObjectId" : "5691743757fad430e8e3877a0e3a4a1e6884022f",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Create a library called \"libMbsTutorial\"\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/advanced/MbsTutorial/macros/CMakeLists.txt" : {
      "ObjectId" : "d6c07d7e9179faa53563328682a254fe5ad4789e",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/advanced/Tutorial3/CMakeLists.txt" : {
      "ObjectId" : "74fc3c4d0e945b85e964d606f16254cb4fa290bd",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "examples/advanced/Tutorial3/macro/CMakeLists.txt" : {
      "ObjectId" : "acd7091610c51dd1815590316ad6103706852f57",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "examples/common/mcstack/CMakeLists.txt" : {
      "ObjectId" : "9d37984128398c470d9c58e99db90575c73da50c",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Create a library called \"libBase\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/common/passive/CMakeLists.txt" : {
      "ObjectId" : "2a223316fa08fc1f30c241f66587d23071ab4d13",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Create a library called \"libPassive\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/simulation/Tutorial1/CMakeLists.txt" : {
      "ObjectId" : "dd19a824d3b4c6ce73cd425e56ac69401415915e",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "examples/simulation/Tutorial1/macros/CMakeLists.txt" : {
      "ObjectId" : "4eb1c75d4d060c1d302957212cf3cbc66fe3fd74",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "examples/simulation/Tutorial1/src/CMakeLists.txt" : {
      "ObjectId" : "eb3052ea9edd6e9d1ec3be9c3c48579500a66755",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Create a library called \"libTutorial1\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "examples/simulation/Tutorial2/CMakeLists.txt" : {
      "ObjectId" : "470110db52410ea2ba78cd2d98743d46ab5da848",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "examples/simulation/Tutorial2/macros/CMakeLists.txt" : {
      "ObjectId" : "5b4914d9afc6bceb25545c347b6a603dcdaf6398",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "examples/simulation/Tutorial2/src/CMakeLists.txt" : {
      "ObjectId" : "706532861fc309acfd89339a61010b62adb5e752",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Create a library called \"libTutorial2\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GeoBase ParBase VMC Physics Core)\n",
        "Line" : 42,
        "CharPositionInLine" : 30
      },
      "CommentCount" : 3
    },
    "examples/simulation/Tutorial4/CMakeLists.txt" : {
      "ObjectId" : "f6904c822a02225318cf1939ef4411d4e236e4f5",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "examples/simulation/Tutorial4/macros/CMakeLists.txt" : {
      "ObjectId" : "997044ea4f0fbdcb91ce5726916e00403947a79f",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "examples/simulation/Tutorial4/src/CMakeLists.txt" : {
      "ObjectId" : "d710c24f8f29d41e67169af748a712de6c419f17",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Create a library called \"libTutorial1\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Put here your sourcefiles\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "examples/simulation/rutherford/CMakeLists.txt" : {
      "ObjectId" : "dd19a824d3b4c6ce73cd425e56ac69401415915e",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "examples/simulation/rutherford/macros/CMakeLists.txt" : {
      "ObjectId" : "5cdc7361d1c6f2c363922b1996e6a40842887a28",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "examples/simulation/rutherford/src/CMakeLists.txt" : {
      "ObjectId" : "ac647cb0393f2c5c1bce9086980b915dfdbc9981",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Create a library called \"libFairRutherford\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "fairtools/CMakeLists.txt" : {
      "ObjectId" : "c73a5c371215c752a80a30498f3d96edd9c9ff97",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Create a library called \"libFairTools\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of source files\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "fairtools/MCStepLogger/CMakeLists.txt" : {
      "ObjectId" : "768cb27a87618f4981b7cfa165c32defebfa52fa",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# @author Sandro Wenzel\n\n# @brief  cmake setup for module Utilities/MCStepLogger\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "geane/CMakeLists.txt" : {
      "ObjectId" : "8d7ea1787c8d944b8d5324b765c040f198105346",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Create a library called \"libBase\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "generators/CMakeLists.txt" : {
      "ObjectId" : "4dcdbc6d82cb00feb529fba3c9b15b2d6b648a4e",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Create a library called \"libBase\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "geobase/CMakeLists.txt" : {
      "ObjectId" : "c2905830c134d7dd4ffff41ed1b312a5090874e9",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Create a library called \"libBase\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "parbase/CMakeLists.txt" : {
      "ObjectId" : "c739114e53f1a1b450d2c375f040635c58f359ed",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Create a library called \"libParbase\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "parmq/CMakeLists.txt" : {
      "ObjectId" : "bd98bfc2e148490298d3475aeae234338ac3f096",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "templates/CMakeLists.txt" : {
      "ObjectId" : "6f281f54be9c3819588b7211a0ea45892f728682",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "templates/NewDetector_root_containers/CMakeLists.txt" : {
      "ObjectId" : "bd156c46365e2b01017741f90a0b851645028586",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Create a library called \"libNewDetector\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#put here all directories where header files are located\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#${CMAKE_SOURCE_DIR}/<directory which contains the DetectorList>\n\n#${CMAKE_SOURCE_DIR}/<directory which contains the stack>\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Put here your sourcefiles\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "templates/NewDetector_stl_containers/CMakeLists.txt" : {
      "ObjectId" : "bd156c46365e2b01017741f90a0b851645028586",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Create a library called \"libNewDetector\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#put here all directories where header files are located\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#${CMAKE_SOURCE_DIR}/<directory which contains the DetectorList>\n\n#${CMAKE_SOURCE_DIR}/<directory which contains the stack>\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Put here your sourcefiles\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "templates/project_root_containers/CMakeLists.txt" : {
      "ObjectId" : "a30ae2882c58fa5a6ae3581c05ea043386a4dc14",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of our project is “MYPROJ”.  CMakeLists files in this project can\n\n# refer to the root source directory of the project as ${MYPROJ_SOURCE_DIR}\n\n# or as ${CMAKE_SOURCE_DIR} and to the root binary directory of the project as\n\n# ${MYPROJ_BINARY_DIR} or ${CMAKE_BINARY_DIR}.\n\n# This difference is important for the base classes which are in FAIRROOT\n\n# and the experiment part.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check if cmake has the required version\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set name of our project to “MYPROJ\". Has to be done\n\n# after check of cmake version since this is a new feature\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#In case you need Fortran\n\n#ENABLE_LANGUAGE(Fortran)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check for needed environment variables\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# where to look first for cmake modules, before ${CMAKE_ROOT}/Modules/\n\n# is checked\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Load some basic macros which are needed later on\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#include(CheckFortran)\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Check the compiler and set the compile and link flags\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Check if the user wants to build the project in the source\n\n# directory\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Check if we are on an UNIX system. If not stop with an error\n\n# message\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Check if the external packages are installed into a separate install\n\n# directory\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# searches for needed packages\n\n# REQUIRED means that cmake will stop if this packages are not found\n\n# For example the framework can run without GEANT4, but ROOT is\n\n# mandatory\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# set a variable which should be used in all CMakeLists.txt\n\n# Defines all basic include directories from fairbase\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Set the library version in the main CMakeLists.txt\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Check if the compiler support specific C++11 features\n\n# Up to now this is only a check since the code does not use\n\n# any of the features of the new standard\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Recurse into the given subdirectories.  This does not actually\n\n# cause another cmake executable to run.  The same process will walk through\n\n# the project's entire directory structure.\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Summary ######################################################################\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "################################################################################\n",
        "Line" : 215,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 19
    },
    "templates/project_root_containers/CTestConfig.cmake" : {
      "ObjectId" : "a913106cef71fc54a0c4c19d6dd194bdbdb52b77",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Dashboard is opened for submissions for a 24 hour period starting at\n\n# the specified NIGHLY_START_TIME. Time is specified in 24 hour format.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "templates/project_root_containers/CTestCustom.cmake" : {
      "ObjectId" : "8440f90b3431f93e9d7cd5b65a3917bfe5535254",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(\" -- Read CTestCustom.cmake --\")\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -----------------------------------------------------------\n\n# -- Number of warnings to display\n\n# -----------------------------------------------------------\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -----------------------------------------------------------\n\n# -- Number of errors to display\n\n# -----------------------------------------------------------\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -----------------------------------------------------------\n\n# -- Warning execptions\n\n# -----------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -- doxygen warnings\n",
        "Line" : 31,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# \t\"of command \\@param is not found in the argument list of\" \n\n#\t\"for \\\\link command\"\n\n#\t\"for \\\\ref command\"\n\n#\t\"\\\\class statement\"\n\n#\t\"\\\\file statement\"\n\n#\t\"are not documented:\"\n\n#\t\"Skipping documentation\"\n\n#\t\"has a brief description\"\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# -- CLHEP and Pluto warnings\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# -- warnings from ubuntu systems which are a little to much\n\n# -- probably defined warn-unused-result. ignoring the result\n\n# -- of fgets is common practice. A work around would be to\n\n# -- store the return value in a dummy variable\n",
        "Line" : 50,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# -- boost warnings\n",
        "Line" : 57,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# -- Root warnings when installed in installation dir\n",
        "Line" : 63,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# -- Root warnings which should not show up in the test setup\n",
        "Line" : 65,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# -- Geant3 warnings\n",
        "Line" : 106,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# -- Errors which are filtered for the time being\n\n# -- MbsAPI is only a copy from elsewhere so don't know what to do\n",
        "Line" : 110,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# -----------------------------------------------------------\n\n# -- Warning addon's\n\n# -----------------------------------------------------------\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# -----------------------------------------------------------\n\n# -- Error execptions\n\n# -- Get rid of boost warnings which are misinterpreted as errors\n\n# -----------------------------------------------------------\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "templates/project_root_containers/MyProjData/CMakeLists.txt" : {
      "ObjectId" : "a3de0af514666878ee74a198803be43b233b5629",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create a library called \"libMyProjData\" \n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "templates/project_root_containers/MyProjGenerators/CMakeLists.txt" : {
      "ObjectId" : "fd0cef8f838648e75a4b060d33ad312e9b603714",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create a library called \"libGen\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "templates/project_root_containers/NewDetector/CMakeLists.txt" : {
      "ObjectId" : "7e36794321c840290e860c5daa05627fe9cae13e",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Create a library called \"libNewDetector\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#put here all directories where header files are located\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Put here your sourcefiles\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "templates/project_root_containers/field/CMakeLists.txt" : {
      "ObjectId" : "1a9633b15c8692b796527d45886f6e41d09c63ee",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create a library called \"libField” which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "templates/project_root_containers/passive/CMakeLists.txt" : {
      "ObjectId" : "fecbd94b1fab65d91c7233acc3ce12a1a1872fd0",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create a library called \"libPassive\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "templates/project_stl_containers/CMakeLists.txt" : {
      "ObjectId" : "a30ae2882c58fa5a6ae3581c05ea043386a4dc14",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The name of our project is “MYPROJ”.  CMakeLists files in this project can\n\n# refer to the root source directory of the project as ${MYPROJ_SOURCE_DIR}\n\n# or as ${CMAKE_SOURCE_DIR} and to the root binary directory of the project as\n\n# ${MYPROJ_BINARY_DIR} or ${CMAKE_BINARY_DIR}.\n\n# This difference is important for the base classes which are in FAIRROOT\n\n# and the experiment part.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check if cmake has the required version\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set name of our project to “MYPROJ\". Has to be done\n\n# after check of cmake version since this is a new feature\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#In case you need Fortran\n\n#ENABLE_LANGUAGE(Fortran)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check for needed environment variables\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# where to look first for cmake modules, before ${CMAKE_ROOT}/Modules/\n\n# is checked\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Load some basic macros which are needed later on\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#include(CheckFortran)\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#Check the compiler and set the compile and link flags\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Check if the user wants to build the project in the source\n\n# directory\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Check if we are on an UNIX system. If not stop with an error\n\n# message\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Check if the external packages are installed into a separate install\n\n# directory\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# searches for needed packages\n\n# REQUIRED means that cmake will stop if this packages are not found\n\n# For example the framework can run without GEANT4, but ROOT is\n\n# mandatory\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# set a variable which should be used in all CMakeLists.txt\n\n# Defines all basic include directories from fairbase\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Set the library version in the main CMakeLists.txt\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Check if the compiler support specific C++11 features\n\n# Up to now this is only a check since the code does not use\n\n# any of the features of the new standard\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Recurse into the given subdirectories.  This does not actually\n\n# cause another cmake executable to run.  The same process will walk through\n\n# the project's entire directory structure.\n",
        "Line" : 175,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Summary ######################################################################\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "################################################################################\n",
        "Line" : 215,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 19
    },
    "templates/project_stl_containers/CTestConfig.cmake" : {
      "ObjectId" : "a913106cef71fc54a0c4c19d6dd194bdbdb52b77",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Dashboard is opened for submissions for a 24 hour period starting at\n\n# the specified NIGHLY_START_TIME. Time is specified in 24 hour format.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "templates/project_stl_containers/CTestCustom.cmake" : {
      "ObjectId" : "8440f90b3431f93e9d7cd5b65a3917bfe5535254",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(\" -- Read CTestCustom.cmake --\")\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# -----------------------------------------------------------\n\n# -- Number of warnings to display\n\n# -----------------------------------------------------------\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# -----------------------------------------------------------\n\n# -- Number of errors to display\n\n# -----------------------------------------------------------\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -----------------------------------------------------------\n\n# -- Warning execptions\n\n# -----------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# -- doxygen warnings\n",
        "Line" : 31,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# \t\"of command \\@param is not found in the argument list of\" \n\n#\t\"for \\\\link command\"\n\n#\t\"for \\\\ref command\"\n\n#\t\"\\\\class statement\"\n\n#\t\"\\\\file statement\"\n\n#\t\"are not documented:\"\n\n#\t\"Skipping documentation\"\n\n#\t\"has a brief description\"\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# -- CLHEP and Pluto warnings\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# -- warnings from ubuntu systems which are a little to much\n\n# -- probably defined warn-unused-result. ignoring the result\n\n# -- of fgets is common practice. A work around would be to\n\n# -- store the return value in a dummy variable\n",
        "Line" : 50,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# -- boost warnings\n",
        "Line" : 57,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# -- Root warnings when installed in installation dir\n",
        "Line" : 63,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# -- Root warnings which should not show up in the test setup\n",
        "Line" : 65,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# -- Geant3 warnings\n",
        "Line" : 106,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# -- Errors which are filtered for the time being\n\n# -- MbsAPI is only a copy from elsewhere so don't know what to do\n",
        "Line" : 110,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# -----------------------------------------------------------\n\n# -- Warning addon's\n\n# -----------------------------------------------------------\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# -----------------------------------------------------------\n\n# -- Error execptions\n\n# -- Get rid of boost warnings which are misinterpreted as errors\n\n# -----------------------------------------------------------\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "templates/project_stl_containers/MyProjData/CMakeLists.txt" : {
      "ObjectId" : "a3de0af514666878ee74a198803be43b233b5629",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create a library called \"libMyProjData\" \n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "templates/project_stl_containers/MyProjGenerators/CMakeLists.txt" : {
      "ObjectId" : "fd0cef8f838648e75a4b060d33ad312e9b603714",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create a library called \"libGen\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "templates/project_stl_containers/NewDetector/CMakeLists.txt" : {
      "ObjectId" : "7e36794321c840290e860c5daa05627fe9cae13e",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Create a library called \"libNewDetector\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#put here all directories where header files are located\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Put here your sourcefiles\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "templates/project_stl_containers/field/CMakeLists.txt" : {
      "ObjectId" : "1a9633b15c8692b796527d45886f6e41d09c63ee",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create a library called \"libField” which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "templates/project_stl_containers/passive/CMakeLists.txt" : {
      "ObjectId" : "fecbd94b1fab65d91c7233acc3ce12a1a1872fd0",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create a library called \"libPassive\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "855497f9d086d969d8173907ada2157b1ab1dae5",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Create a library called \"libFairTest\" which includes the source files\n\n# given in the array .\n\n# The extension is already found.  Any number of sources could be listed\n\n# here.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Add_Subdirectory(mock)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Add_Subdirectory(mock)\n\n#Add_Subdirectory(base/sim)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "test/base/sim/CMakeLists.txt" : {
      "ObjectId" : "a28f01346aafa22fae3b629b2eb624bf45d19976",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "############### build the test #####################\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/fairtools/CMakeLists.txt" : {
      "ObjectId" : "48b9ac440be87e769059351a8d884d5b57ed3a0b",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             #\n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #\n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Create a library called \"libFairTools\" which includes the source files\n\n# given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed\n\n# here.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#  Set(Exe_Names\n\n#    _CoverageFairLoggerFatal\n\n#  )\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#  Set(Exe_Source\n\n#    _CoverageFairLoggerFatal.cxx\n\n#  )\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#  List(LENGTH Exe_Names _length)\n\n#  Math(EXPR _length ${_length}-1)\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#  ForEach(_file RANGE 0 ${_length})\n\n#    List(GET Exe_Names ${_file} _name)\n\n#    List(GET Exe_Source ${_file} _src)\n\n#    Set(EXE_NAME ${_name})\n\n#    Set(SRCS ${_src})\n\n#    Set(DEPENDENCIES ${ROOT_LIBRARIES} FairTools)\n\n#    GENERATE_EXECUTABLE()\n\n#    add_test(${_name} ${CMAKE_BINARY_DIR}/bin/${_name})\n\n#  EndForEach(_file RANGE 0 ${_length})\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "test/mock/CMakeLists.txt" : {
      "ObjectId" : "13dda675159f9bde1daacf8acd9ad2ed8b9cd5fe",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Create a library called \"libFairTest\" which includes the source files\n\n# given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed\n\n# here.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "test/testlib/CMakeLists.txt" : {
      "ObjectId" : "54a07ce59e3fa3fac6b9ae4c311a2a31680cb69c",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Create a library called \"libFairTest\" which includes the source files\n\n# given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed\n\n# here.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Boost is needed for the regular expression handling\n\n# Need static boost libraries to link executable with path to library\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "############### build the library #####################\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "trackbase/CMakeLists.txt" : {
      "ObjectId" : "71fd47d55260d699841d7227a083d4442ca61008",
      "LastModified" : "2019-03-15T12:42:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#    Copyright (C) 2014 GSI Helmholtzzentrum fuer Schwerionenforschung GmbH    #\n\n#                                                                              #\n\n#              This software is distributed under the terms of the             # \n\n#              GNU Lesser General Public Licence (LGPL) version 3,             #  \n\n#                  copied verbatim in the file \"LICENSE\"                       #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Create a library called \"libBase\" which includes the source files given in\n\n# the array .\n\n# The extension is already found.  Any number of sources could be listed here.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set(DEPENDENCIES Base Physics Matrix Core)\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "CMAKE" : 117
  },
  "ElapsedTime" : 3181
}