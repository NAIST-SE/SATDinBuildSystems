{
  "Repository" : "6335766",
  "Revision" : "HEAD",
  "ObjectId" : "faac89ad2cd97ba07fc035f99b38b17e18874185",
  "CommitTime" : "2019-04-15T00:28:29Z",
  "Files" : {
    "airdcpp-webapi/CMakeLists.txt" : {
      "ObjectId" : "b7f2184249e6e5e2c34f1ab99bb738eb0a6a7178",
      "LastModified" : "2018-03-11T11:27:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ######### General setup ##########\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "airdcpp/CMakeLists.txt" : {
      "ObjectId" : "dd68d231a89b1c509ad2986ae4603c8795105adf",
      "LastModified" : "2018-03-11T11:27:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# WINDOWS\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# APPLE\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# OPTIONAL LIBRARIES\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#if (SNAPPY_FOUND)\n\n#  list (APPEND airdcpp_extra_libs ${SNAPPY_LIBRARIES})\n\n#endif (SNAPPY_FOUND)\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# GENERIC COMPILING PROPERTIES\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# LINKING\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#if (WIN32)\n\n#   set_property(TARGET airdcpp PROPERTY COMPILE_FLAGS)\n\n#else(WIN32)\n\n#   set_property(TARGET airdcpp PROPERTY COMPILE_FLAGS -fPIC)\n\n#endif (WIN32)\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# INSTALLATION\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "boost/boost/safe_numerics/CMakeLists.txt" : {
      "ObjectId" : "cd94725f5d96d4d1477ec4772e1ade6ea783400f",
      "LastModified" : "2019-01-15T16:10:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####################\n\n# add include headers to IDE\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# end headers in IDE\n\n####################\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "boost/boost/safe_numerics/concept/CMakeLists.txt" : {
      "ObjectId" : "dd2832baecb8287613b8cbf78581a1003bba1e3c",
      "LastModified" : "2019-01-15T16:10:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "####################\n\n# add include headers to IDE\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# end headers in IDE\n\n####################\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "boost/libs/regex/test/profile/Makefile" : {
      "ObjectId" : "a460b3b5e6f9108b43d0555c54eb4279ccc4e5e3",
      "LastModified" : "2019-01-15T16:10:36Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# copyright John Maddock 2003\r\n\n# Distributed under the Boost Software License, Version 1.0. \r\n\n# (See accompanying file LICENSE_1_0.txt or copy at \r\n\n# http://www.boost.org/LICENSE_1_0.txt.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "leveldb/CMakeLists.txt" : {
      "ObjectId" : "1eaf48e4fee08562cf7115288bb4579fde9038b3",
      "LastModified" : "2019-03-30T07:30:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright 2017 The LevelDB Authors. All rights reserved.\n\n# Use of this source code is governed by a BSD-style license that can be\n\n# found in the LICENSE file. See the AUTHORS file for names of contributors.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This project can use C11, but will gracefully decay down to C89.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This project requires C++11.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO(cmumford): Make UNICODE configurable for Windows.\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Using check_cxx_symbol_exists() instead of check_c_symbol_exists() because\n\n# we're including the header from C++, and feature detection should use the same\n\n# compiler language that the project will use later. Principles aside, some\n\n# versions of do not expose fdatasync() in <unistd.h> in standard C mode\n\n# (-std=c11), but do expose the function in standard C++ mode (-std=c++11).\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Test whether -Wthread-safety is available. See\n\n# https://clang.llvm.org/docs/ThreadSafetyAnalysis.html\n\n# -Werror is necessary because unknown attributes only generate warnings.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Test whether C++17 __has_include is available.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Only export LEVELDB_EXPORT symbols from the shared library.\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Only CMake 3.3+ supports PUBLIC sources in targets exported by \"install\".\n",
        "Line" : 171,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# MemEnv is not part of the interface and could be pulled to a separate library.\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Used by include/export.h when building shared libraries.\n",
        "Line" : 218,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Used by port/port.h.\n",
        "Line" : 220,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Used by include/export.h.\n",
        "Line" : 233,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# Needed by port_stdcxx.h\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# TODO(costan): This test also uses\n\n#               \"${PROJECT_SOURCE_DIR}/util/env_{posix|windows}_test_helper.h\"\n",
        "Line" : 331,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# check_library_exists is insufficient here because the library names have\n\n# different manglings when compiled with clang or gcc, at least when installed\n\n# with Homebrew on Mac.\n",
        "Line" : 381,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 16
    },
    "leveldb/Makefile" : {
      "ObjectId" : "2bd2cadcddeb9ba912c241fed604f5d4d2136886",
      "LastModified" : "2019-03-30T07:30:16Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n\n# Use of this source code is governed by a BSD-style license that can be\n\n# found in the LICENSE file. See the AUTHORS file for names of contributors.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-----------------------------------------------\n\n# Uncomment exactly one of the lines labelled (A), (B), and (C) below\n\n# to switch between compilation modes.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# (A) Production use (optimized mode)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# (B) Debug mode, w/ full line-level debugging symbols\n\n# OPT ?= -g2\n\n# (C) Profiling mode: opt, but w/debugging symbols\n\n# OPT ?= -O2 -g2 -DNDEBUG\n\n#-----------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# detect what platform we're building on\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# this file is generated by the previous line to set build flags and sources\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Note: iOS should probably be using libtool, not ar.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Should we build shared libraries?\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Update db.h if you change these.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# PLATFORM_SHARED_EXT\n",
        "Line" : 98,
        "CharPositionInLine" : 7
      },
      "10" : {
        "Text" : "# For iOS, create universal object files to be used on both the simulator and\n\n# a device.\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "leveldb/cmake/leveldbConfig.cmake" : {
      "ObjectId" : "eea6e5c4776bbe6838d323b9e0ea554bc8ec4b32",
      "LastModified" : "2019-03-30T07:30:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "websocketpp/CMakeLists.txt" : {
      "ObjectId" : "3ea8cc1c4e66a8bf34278d90c941f3f6cd06c2b0",
      "LastModified" : "2019-03-30T07:30:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 7,
    "MAKEFILE" : 2
  },
  "ElapsedTime" : 7333
}