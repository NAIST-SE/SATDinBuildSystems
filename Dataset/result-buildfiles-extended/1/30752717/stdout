{
  "Repository" : "30752717",
  "Revision" : "HEAD",
  "ObjectId" : "7efed2161e330d856677c901d9b7d93b27b29a2f",
  "CommitTime" : "2018-11-22T11:52:00Z",
  "Files" : {
    "c/CMakeLists.txt" : {
      "ObjectId" : "42d498ce784d67d0b726f7e58ada281576e1f620",
      "LastModified" : "2017-10-03T11:00:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "c/pom.xml" : {
      "ObjectId" : "fc627a85865a4ad25a81012fbf609897ace4dfd4",
      "LastModified" : "2018-11-22T11:52:00Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "c/vdmclib/CMakeLists.txt" : {
      "ObjectId" : "76b100acc0241859b048857f2018d47cb2011c3c",
      "LastModified" : "2017-10-03T11:00:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#include(CheckCXXCompilerFlag)\n\n#CHECK_CXX_COMPILER_FLAG(\"-std=c++11\" COMPILER_SUPPORTS_CXX11)\n\n#CHECK_CXX_COMPILER_FLAG(\"-std=c++0x\" COMPILER_SUPPORTS_CXX0X)\n\n#if(COMPILER_SUPPORTS_CXX11)\n\n#    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11\")\n\n#elseif(COMPILER_SUPPORTS_CXX0X)\n\n#    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++0x\")\n\n#else()\n\n#        message(STATUS \"The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.\")\n\n#endif()\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CMAKE_C_FLAGS_DEBUG \" -O0 -g3 -Wall\")\n\n#set(CMAKE_CXX_FLAGS_DEBUG \" -O0 -g3 -Wall\")\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add_test(AllTestsIn-c-examples ${PROJECT_NAME})\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "c/vdmclib/pom.xml" : {
      "ObjectId" : "4daeb49a041ae1e5ee021627bbb67827c8746ddb",
      "LastModified" : "2018-11-22T11:52:00Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "c/vdmclibdist/CMakeLists.txt" : {
      "ObjectId" : "c413b6ec12b0734a9ec7b16222b4ebdfa2bce9e3",
      "LastModified" : "2017-10-03T11:00:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#include(CheckCXXCompilerFlag)\n\n#CHECK_CXX_COMPILER_FLAG(\"-std=c++11\" COMPILER_SUPPORTS_CXX11)\n\n#CHECK_CXX_COMPILER_FLAG(\"-std=c++0x\" COMPILER_SUPPORTS_CXX0X)\n\n#if(COMPILER_SUPPORTS_CXX11)\n\n#    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11\")\n\n#elseif(COMPILER_SUPPORTS_CXX0X)\n\n#    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++0x\")\n\n#else()\n\n#        message(STATUS \"The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.\")\n\n#endif()\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CMAKE_C_FLAGS_DEBUG \" -O0 -g3 -Wall\")\n\n#set(CMAKE_CXX_FLAGS_DEBUG \" -O0 -g3 -Wall\")\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#include_directories(${gtest_SOURCE_DIR}/include)\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "c/vdmclibdist/pom.xml" : {
      "ObjectId" : "621c5eff99f83da16f21f5d8c9ace42ed3716cd2",
      "LastModified" : "2018-11-22T11:52:00Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "core/pom.xml" : {
      "ObjectId" : "b81b5f9b841a60315193d2a1dbb3d0b7ff51145c",
      "LastModified" : "2018-11-22T11:52:00Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "core/vdm2c/pom.xml" : {
      "ObjectId" : "96994e2d7f3031e27580cac47284fd30edcb457e",
      "LastModified" : "2018-11-22T11:52:00Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " the tests use std out a lot so we dont want that in the console ",
        "Line" : 111,
        "CharPositionInLine" : 78
      },
      "1" : {
        "Text" : "This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. ",
        "Line" : 172,
        "CharPositionInLine" : 131
      },
      "CommentCount" : 2
    },
    "core/vdm2c/src/test/resources/CMakeLists.txt" : {
      "ObjectId" : "3c3982ec8d404f3d163a599ae1b79e9b922e3d5a",
      "LastModified" : "2017-10-03T11:00:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##PROJECT_NAME## C CXX)\n",
        "Line" : 2,
        "CharPositionInLine" : 9
      },
      "1" : {
        "Text" : "## valgrind\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## google test download\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#include(DownloadProject.cmake)\n\n#download_project(PROJ                googletest\n\n#                 GIT_REPOSITORY      https://github.com/google/googletest.git\n\n#                 GIT_TAG             master\n\n#                 ${UPDATE_DISCONNECTED_IF_AVAILABLE}\n\n#)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Prevent GoogleTest from overriding our compiler/linker options\n\n# when building with Visual Studio\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## INSERT_GOOGLE_TEST_SUB_DIRECTORY ##\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# When using CMake 2.8.11 or later, header path dependencies\n\n# are automatically added to the gtest and gmock targets.\n\n# For earlier CMake versions, we have to explicitly add the\n\n# required directories to the header search path ourselves.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## end google test download\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#include(CheckCXXCompilerFlag)\n\n#CHECK_CXX_COMPILER_FLAG(\"-std=c++11\" COMPILER_SUPPORTS_CXX11)\n\n#CHECK_CXX_COMPILER_FLAG(\"-std=c++0x\" COMPILER_SUPPORTS_CXX0X)\n\n#if(COMPILER_SUPPORTS_CXX11)\n\n#    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11\")\n\n#elseif(COMPILER_SUPPORTS_CXX0X)\n\n#    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++0x\")\n\n#else()\n\n#        message(STATUS \"The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.\")\n\n#endif()\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##PROJECT_NAME## COMMAND ${PROJECT_NAME} \"--gtest_output=xml:report.xml\")\n",
        "Line" : 89,
        "CharPositionInLine" : 25
      },
      "CommentCount" : 10
    },
    "core/vdm2c/src/test/resources/DownloadProject.cmake" : {
      "ObjectId" : "7f67d3a2794d03c43da36fe2beaec0fd5655d1a2",
      "LastModified" : "2017-10-03T11:00:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# MODULE:   DownloadProject\n\n#\n\n# PROVIDES:\n\n#   download_project( PROJ projectName\n\n#                    [SOURCE_DIR srcDir]\n\n#                    [BINARY_DIR binDir]\n\n#                    [QUIET]\n\n#                    ...\n\n#   )\n\n#\n\n#       Provides the ability to download and unpack a tarball, zip file, git repository,\n\n#       etc. at configure time (i.e. when the cmake command is run). How the downloaded\n\n#       and unpacked contents are used is up to the caller, but the motivating case is\n\n#       to download source code which can then be included directly in the build with\n\n#       add_subdirectory() after the call to download_project(). Source and build\n\n#       directories are set up with this in mind.\n\n#\n\n#       The PROJ argument is required. The projectName value will be used to construct\n\n#       the following variables upon exit (obviously replace projectName with its actual\n\n#       value):\n\n#\n\n#           projectName_SOURCE_DIR\n\n#           projectName_BINARY_DIR\n\n#\n\n#       The SOURCE_DIR and BINARY_DIR arguments are optional and would not typically\n\n#       need to be provided. They can be specified if you want the downloaded source\n\n#       and build directories to be located in a specific place. The contents of\n\n#       projectName_SOURCE_DIR and projectName_BINARY_DIR will be populated with the\n\n#       locations used whether you provide SOURCE_DIR/BINARY_DIR or not.\n\n#\n\n#       The QUIET option can be given if you do not want to show the output associated\n\n#       with downloading the specified project.\n\n#\n\n#       In addition to the above, any other options are passed through unmodified to\n\n#       ExternalProject_Add() to perform the actual download, patch and update steps.\n\n#       The following ExternalProject_Add() options are explicitly prohibited (they\n\n#       are reserved for use by the download_project() command):\n\n#\n\n#           CONFIGURE_COMMAND\n\n#           BUILD_COMMAND\n\n#           INSTALL_COMMAND\n\n#           TEST_COMMAND\n\n#\n\n#       Only those ExternalProject_Add() arguments which relate to downloading, patching\n\n#       and updating of the project sources are intended to be used. Also note that at\n\n#       least one set of download-related arguments are required.\n\n#\n\n#       If using CMake 3.2 or later, the UPDATE_DISCONNECTED option can be used to\n\n#       prevent a check at the remote end for changes every time CMake is run\n\n#       after the first successful download. See the documentation of the ExternalProject\n\n#       module for more information. It is likely you will want to use this option if it\n\n#       is available to you.\n\n#\n\n# EXAMPLE USAGE:\n\n#\n\n#   include(download_project.cmake)\n\n#   download_project(PROJ                googletest\n\n#                    GIT_REPOSITORY      https://github.com/google/googletest.git\n\n#                    GIT_TAG             master\n\n#                    UPDATE_DISCONNECTED 1\n\n#                    QUIET\n\n#   )\n\n#\n\n#   add_subdirectory(${googletest_SOURCE_DIR} ${googletest_BINARY_DIR} EXCLUDE_FROM_ALL)\n\n#\n\n#========================================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Prevent the following from being passed through\n",
        "Line" : 80,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Hide output if requested\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Ensure the caller can know where to find the source and build directories\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Create and build a separate CMake project to carry out the download.\n\n# If we've already previously done these steps, they will not cause\n\n# anything to be updated, so extra rebuilds of the project won't occur.\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "core/vdm2c/src/test/resources/distribution/test1/cpu1/CMakeLists.txt" : {
      "ObjectId" : "5c980857acb0991b8f59e0ff6c5c88b3bbe83dd5",
      "LastModified" : "2017-10-03T11:00:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Include the sources\n\n#file(GLOB HEADERS1 \"include1/*.h\")\n\n#file(GLOB HEADERS2 \"include2/*.h\")\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Include headers\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "core/vdm2c/src/test/resources/distribution/test1/cpu2/CMakeLists.txt" : {
      "ObjectId" : "a00325610032b9585239e73726258197d4e314d6",
      "LastModified" : "2017-10-03T11:00:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Include the sources\n\n#file(GLOB HEADERS1 \"include1/*.h\")\n\n#file(GLOB HEADERS2 \"include2/*.h\")\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Include headers\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "core/vdm2c/src/test/resources/distribution/testAsn/cpu1/CMakeLists.txt" : {
      "ObjectId" : "0148b8e6f3d483e29205990ea297d591ed358748",
      "LastModified" : "2017-10-03T11:00:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Include headers\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Include the sources\n\n#Include the sources\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "core/vdm2c/src/test/resources/distribution/testAsn/cpu2/CMakeLists.txt" : {
      "ObjectId" : "11fd3607387e766fc800eaaa7f51f5b645923ee6",
      "LastModified" : "2017-10-03T11:00:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Include headers\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Include the sources\n\n#Include the sources\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "core/vdm2c/src/test/resources/distribution/testAsnProd/cpu1/CMakeLists.txt" : {
      "ObjectId" : "0148b8e6f3d483e29205990ea297d591ed358748",
      "LastModified" : "2017-10-03T11:00:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Include headers\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Include the sources\n\n#Include the sources\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "core/vdm2c/src/test/resources/distribution/testAsnProd/cpu2/CMakeLists.txt" : {
      "ObjectId" : "11fd3607387e766fc800eaaa7f51f5b645923ee6",
      "LastModified" : "2017-10-03T11:00:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Include headers\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Include the sources\n\n#Include the sources\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "core/vdm2c/src/test/resources/distribution/testQuotesBool/cpu1/CMakeLists.txt" : {
      "ObjectId" : "0148b8e6f3d483e29205990ea297d591ed358748",
      "LastModified" : "2017-10-03T11:00:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Include headers\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Include the sources\n\n#Include the sources\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "core/vdm2c/src/test/resources/distribution/testQuotesBool/cpu2/CMakeLists.txt" : {
      "ObjectId" : "11fd3607387e766fc800eaaa7f51f5b645923ee6",
      "LastModified" : "2017-10-03T11:00:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Include headers\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Include the sources\n\n#Include the sources\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "core/vdm2c/src/test/resources/distribution/testSysConsInitMethod/cpu1/CMakeLists.txt" : {
      "ObjectId" : "0148b8e6f3d483e29205990ea297d591ed358748",
      "LastModified" : "2017-10-03T11:00:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Include headers\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Include the sources\n\n#Include the sources\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "core/vdm2c/src/test/resources/distribution/testSysConsInitMethod/cpu2/CMakeLists.txt" : {
      "ObjectId" : "11fd3607387e766fc800eaaa7f51f5b645923ee6",
      "LastModified" : "2017-10-03T11:00:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Include headers\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Include the sources\n\n#Include the sources\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "ide/cgen/pom.xml" : {
      "ObjectId" : "04bb851b7ea5c220e8ee31f51d561640d644c88c",
      "LastModified" : "2018-11-22T11:52:00Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "  appenders ",
        "Line" : 92,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 1
    },
    "ide/features/cgen/pom.xml" : {
      "ObjectId" : "b0e88b088e5204e0262f92afb592855d41a992cd",
      "LastModified" : "2018-11-22T11:52:00Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "ide/features/pom.xml" : {
      "ObjectId" : "4c84debcf8cf0795c24e900ad6174b8e36cea73d",
      "LastModified" : "2018-11-22T11:52:00Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "ide/pom.xml" : {
      "ObjectId" : "29b67ef47fa854e2fd2dc0b939841ce204648aff",
      "LastModified" : "2018-11-22T11:52:00Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Put all child Eclipse Plugin projects(modules) here ",
        "Line" : 24,
        "CharPositionInLine" : 63
      },
      "1" : {
        "Text" : " never deploy/release/publish this module ",
        "Line" : 32,
        "CharPositionInLine" : 53
      },
      "2" : {
        "Text" : " never test the IDE ",
        "Line" : 41,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : " Use the below to update the version numbers of the poms,\n\t\t\t\t\t\t manifests, and feature.xml files with the commandline:\n\n$ mvn -Dtycho.mode=maven tycho-versions:set-version -DnewVersion=2.0.2\n\nDon't commit the changes to the export-packages lines in\nthe manifests, though.\n\t\t\t\t",
        "Line" : 100,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : " These next five profiles will autodetect which OS maven is\n\t\t\t\t being executed on and then build the matching version of\n\t\t\t\t Overture for that OS.\t-jwc/23Jan2014\n\t\t",
        "Line" : 177,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : " Use this profile to build Overture for all platforms, but you\n\t\t\t\t may need to add -P\\!linux (or whichever os) to disable the\n\t\t\t\t autodetected profile (per above), otherwise the autodetected\n\t\t\t\t profile may take precedence over the command-line specified\n\t\t\t\t profile.\t -jwc/23Jan2014\n\t\t",
        "Line" : 345,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 6
    },
    "ide/repository/pom.xml" : {
      "ObjectId" : "62969cdf2c1776b7ca0d347ffcdda8c326716a3a",
      "LastModified" : "2018-11-22T11:52:00Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "pom.xml" : {
      "ObjectId" : "c0341b45c019f0f0889198a070ad69053081a532",
      "LastModified" : "2018-11-22T11:52:00Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Needed to make deployment work ",
        "Line" : 5,
        "CharPositionInLine" : 41
      },
      "1" : {
        "Text" : " only execute these in the parent ",
        "Line" : 66,
        "CharPositionInLine" : 77
      },
      "2" : {
        "Text" : "\n\t\t\t\t\t\tThis plugin allows you to run\n\n$ mvn versions:set -Dtycho.mode=maven -PWith-IDE -DnewVersion=2.0.4\n\nand get all the version numbers updated nearly for free.\nThe tycho bit on the end just tells tycho (used in the\neclipse plugin build) to piss off.\n\nNote that the versions in MANIFEST.MF files, etc, still\nneed to be set.\n\nMore details on the versions-maven-plugin are at\nhttp://mojo.codehaus.org/versions-maven-plugin/\n\t\t\t\t",
        "Line" : 152,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : " Version control obviates the need for this. ",
        "Line" : 156,
        "CharPositionInLine" : 58
      },
      "4" : {
        "Text" : " Configuration of plugins for inheriting pom.xml files should\n\t\t\t\t be in the pluginManagement tag\n\t\t",
        "Line" : 203,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : " Configure the compiler for all Overture Projects ",
        "Line" : 206,
        "CharPositionInLine" : 62
      },
      "6" : {
        "Text" : " Attatch sources to all installed jars ",
        "Line" : 217,
        "CharPositionInLine" : 51
      },
      "7" : {
        "Text" : " <executions> ",
        "Line" : 222,
        "CharPositionInLine" : 27
      },
      "8" : {
        "Text" : "\t <execution> ",
        "Line" : 223,
        "CharPositionInLine" : 27
      },
      "9" : {
        "Text" : "\t\t <id>attach-sources</id> ",
        "Line" : 224,
        "CharPositionInLine" : 40
      },
      "10" : {
        "Text" : "\t\t <goals> ",
        "Line" : 225,
        "CharPositionInLine" : 24
      },
      "11" : {
        "Text" : "\t\t\t <goal>jar</goal> ",
        "Line" : 226,
        "CharPositionInLine" : 34
      },
      "12" : {
        "Text" : "\t\t </goals> ",
        "Line" : 227,
        "CharPositionInLine" : 25
      },
      "13" : {
        "Text" : "\t </execution> ",
        "Line" : 228,
        "CharPositionInLine" : 28
      },
      "14" : {
        "Text" : " </executions> ",
        "Line" : 229,
        "CharPositionInLine" : 28
      },
      "15" : {
        "Text" : " Enable JavaDoc but dont fail on error. This must be disabled for\n\t\t\t\t\t\t the Eclipse project in the IDE ",
        "Line" : 236,
        "CharPositionInLine" : 42
      },
      "16" : {
        "Text" : " Disable the maven enforcer warning in Eclipse ",
        "Line" : 361,
        "CharPositionInLine" : 59
      },
      "CommentCount" : 17
    }
  },
  "FileTypes" : {
    "CMAKE" : 15,
    "MAVEN" : 11
  },
  "ElapsedTime" : 1370
}