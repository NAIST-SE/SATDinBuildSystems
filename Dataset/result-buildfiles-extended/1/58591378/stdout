{
  "Repository" : "58591378",
  "Revision" : "HEAD",
  "ObjectId" : "1091c729084b2ef44d67eacb83891721ee2f5e61",
  "CommitTime" : "2019-04-16T20:26:25Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "56536c21462d8cdc908321896a678e29c08fb121",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# CMakeLists.txt\n\n#\n\n# Top level CMakeLists.txt file for the roottest directory.\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the name of the project.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Check, if roottest is built out of source.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# You need to tell CMake where to find the ROOT installation. This can be done in a number of ways:\n\n#   - ROOT built with classic configure/make use the provided $ROOTSYS/etc/cmake/FindROOT.cmake\n\n#   - ROOT built with CMake. Add in CMAKE_PREFIX_PATH the installation prefix for ROOT\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check, if ROOTSYS is set.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If ROOT_SOURCE_DIR is set, roottest is built as part of the root build.\n\n# If ROOT_SOURCE_DIR is not set, search for an installation.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# testing using an installation\n",
        "Line" : 54,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "#---If ROOT was built with the classic configure/make---\n",
        "Line" : 57,
        "CharPositionInLine" : 37
      },
      "8" : {
        "Text" : "# Synchronizing default compression algorithm used for ROOT.\n\n# We need to have it for CMake settings for switching tests references.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Detect bitness.\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Setup environment.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Resolve symbolic links for the ROOTTEST_DIR variable.\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Set some variables that customizes the behaviour of the ROOT macros\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Set the CMake module path. Here are all the custom CMake modules.\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Find python.\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#---Set flag for PyROOT tests that are expected to fail in experimental\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Find OpenGL\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Setup standard includes / links.\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# use RPATH for MacOSX\n",
        "Line" : 133,
        "CharPositionInLine" : 42
      },
      "19" : {
        "Text" : "# Enable and setup CTest.\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 20
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "ae4fc8d0f6f9ebe90cb8a0c9c30858368e8cf128",
      "LastModified" : "2011-12-21T10:20:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## This file should be placed in the root directory of your project.\n\n## Then modify the CMakeLists.txt file in the root directory of your\n\n## project to incorporate the testing dashboard.\n\n## # The following are required to uses Dart and the Cdash dashboard\n\n##   ENABLE_TESTING()\n\n##   INCLUDE(CTest)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CTestCustom.cmake" : {
      "ObjectId" : "cf8d85f75aa944cc04fc2f5df7314b16bc37b829",
      "LastModified" : "2017-08-31T06:41:24Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# CTestCustom.cmake\n\n#\n\n# This file enables customization of CTest.\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Specify tests that will be ignored.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ABI mismatch between our clang and external clang\n",
        "Line" : 27,
        "CharPositionInLine" : 38
      },
      "CommentCount" : 3
    },
    "Makefile" : {
      "ObjectId" : "3c05f80ebb21f0d03d0c3fd1577eed5212b54403",
      "LastModified" : "2017-03-14T16:15:29Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "cling/CMakeLists.txt" : {
      "ObjectId" : "9a26f3f797c4400008f8fc5ba2e2a5728739c7ff",
      "LastModified" : "2014-06-24T09:00:48Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/Makefile" : {
      "ObjectId" : "05d74d4f83e0b7e5350b71d91e1421a1bbbf294e",
      "LastModified" : "2014-09-03T00:25:10Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# %ROOTTEST-duration%:3\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cling/array/CMakeLists.txt" : {
      "ObjectId" : "223c6b809a74532871639218e8bb85957902dd4d",
      "LastModified" : "2018-10-06T12:36:42Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/array/Makefile" : {
      "ObjectId" : "5077820ea6841e38563625f6b5dd2c04d124ea06",
      "LastModified" : "2014-09-03T00:25:10Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust the location of Rules.mk as needed.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n# from runsometest.C\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cling/autoauto/CMakeLists.txt" : {
      "ObjectId" : "899c48b5ad3307d78c44fdcff9cff2644cb496f9",
      "LastModified" : "2017-03-14T16:15:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/bytecode/CMakeLists.txt" : {
      "ObjectId" : "5b829c07463813eef65a847e55566a31b6d16b20",
      "LastModified" : "2017-03-14T16:15:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/bytecode/Makefile" : {
      "ObjectId" : "2eee3915bc313af9365d229d7621e2cee3b2e3fe",
      "LastModified" : "2017-03-14T16:15:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cling/cintex/CMakeLists.txt" : {
      "ObjectId" : "5ff2b35d8f1720868370d36149df8e80f83c64b4",
      "LastModified" : "2017-03-14T16:15:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#--- ROOT_SOURCE_DIR is required-----------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cling/cintex/Makefile" : {
      "ObjectId" : "1375825886e6e287e1f7a6ba22b8c9ba2f54e229",
      "LastModified" : "2017-03-14T16:15:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# also in Rules.mk, but that needs TEST_TARGETS to be defined first.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# trigger creation of cintex/test directory if out-of-source\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cling/const/CMakeLists.txt" : {
      "ObjectId" : "42679fa34f531c87c6611db07d8fd28464deb134",
      "LastModified" : "2017-03-14T16:15:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/const/Makefile" : {
      "ObjectId" : "371af3bacc834b9cd65644690b57232020b618ab",
      "LastModified" : "2017-03-14T16:15:29Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "cling/controls/CMakeLists.txt" : {
      "ObjectId" : "9e5c841225b5f19d5a86db5e6bff59d24c2377da",
      "LastModified" : "2017-03-14T16:15:29Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/controls/Makefile" : {
      "ObjectId" : "ece949e5a60a46c9730defa53e8f719a12fb75a6",
      "LastModified" : "2017-03-14T16:15:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n# from runsometest.C\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cling/dict/CMakeLists.txt" : {
      "ObjectId" : "cb2d9927dc3e9ee7b13d8e090abe81fd10de7aef",
      "LastModified" : "2017-09-05T11:50:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/dict/Makefile" : {
      "ObjectId" : "148bf5a0380bfdf36deeeb1460650fc125f72e0a",
      "LastModified" : "2017-03-14T16:15:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cling/dict/ROOT-7879/CMakeLists.txt" : {
      "ObjectId" : "ff78661d154c970a7d8eb1e920af6f2886ff25ba",
      "LastModified" : "2017-03-14T16:15:29Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ROOT-7879\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cling/dict/ROOT-8096/CMakeLists.txt" : {
      "ObjectId" : "536aa0af9da7bdd6102f629a3b6b72b076a40164",
      "LastModified" : "2017-12-22T13:44:05Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ROOT-8096\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#                                  --target  ${targetname_libgen}${fast})\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cling/dict/ROOT-8739/CMakeLists.txt" : {
      "ObjectId" : "980868b03cdee502b97bb3b1fe776a27fac35fe1",
      "LastModified" : "2017-09-05T11:50:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/dict/ROOT-9110/CMakeLists.txt" : {
      "ObjectId" : "e8d05ddf91365c172dc13861942473a958141aeb",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/dict/ROOT-9185/CMakeLists.txt" : {
      "ObjectId" : "5213208551e33e9984692b26e2350cd25ad9104e",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/dict/fwd-decl-param-pack/CMakeLists.txt" : {
      "ObjectId" : "5b47c9b8c208df79e9b849ff8679bc7f8d95c04b",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/dict/fwd-decl-stdless/CMakeLists.txt" : {
      "ObjectId" : "cbff6505b59e595a78cbc265e93f2aa7b95e025b",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/dict/typedefs/CMakeLists.txt" : {
      "ObjectId" : "30a95e943dd8c5f265540bf8fdaaeb63e9854c5c",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/dict/typedefs/Makefile" : {
      "ObjectId" : "2fe78e81639a131282a74a7ed334dbeb8cba20a5",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cling/exception/CMakeLists.txt" : {
      "ObjectId" : "199e1ad4d15aa6f5c3c25c59e6ed7029166b58f6",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/function/CMakeLists.txt" : {
      "ObjectId" : "adddb797bf872f9c6ddf454af5f6763d2bdb16e3",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# OUTCNV staticfunc_convert.sh\n",
        "Line" : 28,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 1
    },
    "cling/function/Makefile" : {
      "ObjectId" : "e895558727a0083eb3c18a43ddaeb3ab168ed487",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#privateConstructor\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This will skip the test (if there is a known failure)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cling/functionTemplate/CMakeLists.txt" : {
      "ObjectId" : "f20497e8297cf19c5f6388af78e505f1ce04993c",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/functionTemplate/Makefile" : {
      "ObjectId" : "f17f6a12e0c376910e5cc86fc3ad89ef38d8a17a",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Which tests to run depends on availability of cintex / python:\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# also in Rules.mk, but that needs TEST_TARGETS to be defined first.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cling/offset/CMakeLists.txt" : {
      "ObjectId" : "66ea4cebe3987cb2ab9609d3ffb215c419a5fb2e",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/offset/Makefile" : {
      "ObjectId" : "a82e1eb1172751e5b3ff09b0d581fcf4aa81ec6d",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "cling/operator/CMakeLists.txt" : {
      "ObjectId" : "09449c15e21935ae755d7042144d2a73b3f05c06",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/operator/Makefile" : {
      "ObjectId" : "448e2913ab560e5ea670aaff9c140871b7171dc8",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust the location of Rules.mk as needed.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n# from runsometest.C\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# see ConversionOp.C for the skipped, failing tests\n",
        "Line" : 56,
        "CharPositionInLine" : 17
      },
      "6" : {
        "Text" : "# Don't verify this test until both the printf issue and the unloading are fixed/implemented.\n",
        "Line" : 58,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 7
    },
    "cling/other/CMakeLists.txt" : {
      "ObjectId" : "38e65d36c447ea5d0a481cb030e95fadce92cd46",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/other/Makefile" : {
      "ObjectId" : "8ae68d15c821dfab32cebb359009c4e9181342b4",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust the location of Rules.mk as needed.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cling/parsing/CMakeLists.txt" : {
      "ObjectId" : "ee9204a739a3875ce115fdd95a6240d68432230e",
      "LastModified" : "2019-03-11T17:30:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/parsing/Makefile" : {
      "ObjectId" : "3a024ebb0e6e45414974c9c564397c8113455487",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust the location of Rules.mk as needed.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n# from runsometest.C\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cling/preproc/CMakeLists.txt" : {
      "ObjectId" : "bbe874688f18546a949d9e28582932d84b5a701f",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/preproc/Makefile" : {
      "ObjectId" : "b1deab2e3397ea07848dbb1055650b699c0f5e46",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cling/printf/CMakeLists.txt" : {
      "ObjectId" : "54ad22baccac5e1ea0ebe769d48d5b09c3fa340c",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/printf/Makefile" : {
      "ObjectId" : "2628c0fb5e7fbdb100ed8bf8616e194db8717b99",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cling/reflex/CMakeLists.txt" : {
      "ObjectId" : "374514855ca45963ba6a3318fc418c440797fef7",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cling/reflex/Makefile" : {
      "ObjectId" : "b3c2947437507965ce8ab94987a8527f7f67ec39",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Tools\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# and the actual test, building and \"running\" the library\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cling/reload/CMakeLists.txt" : {
      "ObjectId" : "e6595d1c5aa474e37cc146d6960605cf5b67d93e",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ROOTTEST_ADD_TEST(reloadvector\n\n#                  MACRO runreloadvector.C\n\n#                  OUTREF reloadvector.ref\n\n#                  LABELS roottest regression cling)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cling/reload/Makefile" : {
      "ObjectId" : "44b8f90d429a953eaf7c90ee8f9760a3d08bca1c",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust the location of Rules.mk as needed.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n# from runsometest.C\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cling/return/CMakeLists.txt" : {
      "ObjectId" : "c45a6c6f16810c14ff1db0417287ddfed52af875",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/return/Makefile" : {
      "ObjectId" : "025cd341ed5d99b62b980ca6893abfae94ee8333",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust the location of Rules.mk as needed.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Test the exit code of running a script with return value\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Test the printout of running a script with return value\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cling/specialobj/CMakeLists.txt" : {
      "ObjectId" : "5d5663787c8170527af92acc870209613cdc74fb",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/specialobj/Makefile" : {
      "ObjectId" : "7d509dbb1e66964cab9337ca8686554ebd0f2aca",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "cling/stack/CMakeLists.txt" : {
      "ObjectId" : "09937571a5f14d4cc2b849d7a3c23912a3695451",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/stack/Makefile" : {
      "ObjectId" : "87782b56aa119de2d12b8a84288e3e3f51642346",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cling/staticConstTreatment/CMakeLists.txt" : {
      "ObjectId" : "8477bd167b1ef780792e0e8b99f8863c8d40e1ac",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/staticConstTreatment/Makefile" : {
      "ObjectId" : "cd965cd4bfb40c8ed957faead9bec531fb020d7c",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is there to let cling know the symbols within the lib\n\n# it can be removed once the feature is added\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cling/staticinit/CMakeLists.txt" : {
      "ObjectId" : "b6473d7f4f755fb794d0d75705c258f06c3dd615",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/staticinit/Makefile" : {
      "ObjectId" : "5c908f50c7012a36bb129f8d549ce1903fa862f1",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "cling/stl/CMakeLists.txt" : {
      "ObjectId" : "9a26f3f797c4400008f8fc5ba2e2a5728739c7ff",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/stl/Makefile" : {
      "ObjectId" : "5a3ec797a9a6d44db440b595d7e5c9d74e1adc4c",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#tests: $(TEST_TARGETS)\n\n#\t$(CMDECHO)echo \"All test succeeded\"\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#clean: $(CLEAN_TARGETS)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#$(TEST_TARGETS): %.test:\n\n#\t$(CMDECHO)(cd $*; gmake --no-print-directory test)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#$(CLEAN_TARGETS): %.clean:\n\n#\t$(CMDECHO)(cd $*; gmake --no-print-directory clean)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cling/stl/default/CMakeLists.txt" : {
      "ObjectId" : "a97bc740cdc3c9f2719b81f10ad768b8623621fe",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# OUTCNV VectorSort_convert.sh\n",
        "Line" : 17,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 1
    },
    "cling/stl/default/Makefile" : {
      "ObjectId" : "9fa98b0146e3d2c8b8cc1b19681b2957ba844457",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\t$(CMDECHO)echo Running 'mytest' in `pwd`\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cling/stl/dicts/CMakeLists.txt" : {
      "ObjectId" : "d9381a943a896765cb502927fc7e9852926d72a2",
      "LastModified" : "2019-03-11T17:30:24Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/stl/dicts/Makefile" : {
      "ObjectId" : "8f17ecae581de23ade54fdf5a88f2f2a5fb4314f",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust the location of Rules.mk as needed.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cling/stl/list/CMakeLists.txt" : {
      "ObjectId" : "0c54f6d604a72cee61304c74c528205244db4fc0",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/stl/list/Makefile" : {
      "ObjectId" : "b9a715afc6762a3f68b21ff28c6d512f6daedb16",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust the location of Rules.mk as needed.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cling/stl/map/CMakeLists.txt" : {
      "ObjectId" : "131fe48279a67c04880e27c593c8028a959d6d40",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/stl/map/Makefile" : {
      "ObjectId" : "4baaccf5e800392368c8a27c78c5470b24a064c9",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cling/stl/string/CMakeLists.txt" : {
      "ObjectId" : "5e031a58089371ac76966a6fa90671a172ffe11f",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/stl/string/Makefile" : {
      "ObjectId" : "63962c563bbef45595a1a06d9aaa04a657b34a5c",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cling/stl/vector/CMakeLists.txt" : {
      "ObjectId" : "fc3182b02a64963a69787b0d627348fdb759028b",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/template/CMakeLists.txt" : {
      "ObjectId" : "b09112838c33ebf0af91384b69ebd20400336ff5",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/template/Makefile" : {
      "ObjectId" : "9694e581f94a26ba96ddf540dd36a8c3ccdae579",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cling/template/separateDict/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cling/template/separateDict/Makefile" : {
      "ObjectId" : "87f181b7a5d435ecc70673a8b19d71bc85e33523",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\t$(CMDECHO) diff -b -w sepDictLibs.ref sepDictLibs.log\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cling/template/separateDictNamespace/CMakeLists.txt" : {
      "ObjectId" : "374514855ca45963ba6a3318fc418c440797fef7",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cling/template/separateDictNamespace/Makefile" : {
      "ObjectId" : "cf30d3143f3f29f8a1cd697227821a5ad70141de",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "cling/templateMembers/CMakeLists.txt" : {
      "ObjectId" : "3068dc6686923d60135ea7805198713ca3c79b06",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/templateMembers/Makefile" : {
      "ObjectId" : "1fb33b9d77cb3e7cc78f19ebcddb65f43be5e1cb",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# templateMembers\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# adjust the location of Rules.mk as needed.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cling/threading/CMakeLists.txt" : {
      "ObjectId" : "cf3f9d807c17b2f8612f1ed66445c52e1849f190",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/typedef/CMakeLists.txt" : {
      "ObjectId" : "2e2df18b54887ab5b1249e55d7473c4f13057a9d",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/typedef/Makefile" : {
      "ObjectId" : "d070a9d1191b1f3fa02ae808878c69ba68ec131e",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# adjust the location of Rules.mk as needed.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cling/typedef_global/CMakeLists.txt" : {
      "ObjectId" : "06edeef934b773cb197ea9aa3847a3cbab017d33",
      "LastModified" : "2019-04-16T19:47:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cling/typedef_global/Makefile" : {
      "ObjectId" : "fa0d4b2ca4e1b58b36f01db2518293f57a54115d",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "cmake/modules/RootCTestMacros.cmake" : {
      "ObjectId" : "ea6d43281411774c806677bdc1efa74d6d4ba2ad",
      "LastModified" : "2019-04-16T19:47:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# RootCTestMacros.cmake\n\n#\n\n# Macros for adding tests to CTest.\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# macro ROOTTEST_SETUP_MACROTEST()\n\n#\n\n# A helper macro to define the command to run a ROOT macro (.C, .C+ or .py)\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Compile macro, then add to CTest.\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Add interpreted macro to CTest.\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Add python script to CTest.\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Check for assert prefix -- only log stderr.\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# macro ROOTTEST_SETUP_EXECTEST()\n\n#\n\n# A helper macro to define the command to run an executable\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If no program was found, take it as is.\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# function ROOTTEST_ADD_TEST(testname \n\n#                            MACRO|EXEC macro_or_command   \n\n#                            [MACROARG args1 arg2 ...]\n\n#                            [INPUT infile]\n\n#                            [ENABLE_IF root-feature]\n\n#                            [DISABLE_IF root-feature]\n\n#                            [WILLFAIL]\n\n#                            [OUTREF stdout_reference]\n\n#                            [ERRREF stderr_reference]\n\n#                            [WORKING_DIR dir]\n\n#                            [COPY_TO_BUILDDIR file1 file2 ...])\n\n#\n\n# This function defines a roottest test. It adds a number of additional\n\n# options on top of the ROOT defined ROOT_ADD_TEST.\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Test name\n",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Turn the output into a cmake list which is easier to work with.\n",
        "Line" : 133,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Setup macro test.\n",
        "Line" : 158,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Setup executable test.\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Reference output given?\n",
        "Line" : 176,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Get the real path to the output conversion script.\n",
        "Line" : 213,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Setup the output conversion command.\n",
        "Line" : 219,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Mark the test as known to fail.\n",
        "Line" : 224,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Add ownership and test labels.\n",
        "Line" : 229,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Test will pass for a custom return value.\n",
        "Line" : 248,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Pass options to the command.\n",
        "Line" : 253,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Execute a custom command before executing the test.\n",
        "Line" : 258,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Copy files into the build directory first.\n",
        "Line" : 263,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Execute a custom command after executing the test.\n",
        "Line" : 272,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# Add dependencies. If the test depends on a macro file, the macro\n\n# will be compiled and the dependencies are set accordingly.\n",
        "Line" : 277,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# It takes up to 30seconds to get the back trace!\n\n# And we want the backtrace before CTest sends kill -9.\n",
        "Line" : 341,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# function ROOTTEST_ADD_UNITTEST_DIR(libraries...)\n\n#\n\n# This function defines a roottest unit test using Google Test.\n\n# All files in this directory will end up in a unit test binary and run as a\n\n# single test.\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Test name\n",
        "Line" : 393,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Mark the test as known to fail.\n",
        "Line" : 412,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Add ownership and test labels.\n",
        "Line" : 428,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Copy files into the build directory first.\n",
        "Line" : 447,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Add dependencies. If the test depends on a macro file, the macro\n\n# will be compiled and the dependencies are set accordingly.\n",
        "Line" : 456,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 31
    },
    "cmake/modules/RootMacros.cmake" : {
      "ObjectId" : "9e53f5e16b649dccd70a9cef5eb8fc69974bd893",
      "LastModified" : "2019-04-16T19:47:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n#  RootMacros.cmake\n\n#\n\n#  Macros and definitions regarding ROOT components.\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n#  function ROOTTEST_ADD_TESTDIRS([EXCLUDED_DIRS] dir)\n\n#\n\n#  Scans all subdirectories for CMakeLists.txt files. Each subdirectory that\n\n#  contains a CMakeLists.txt file is then added as a subdirectory.\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If there are excluded directories through EXCLUDED_DIRS,\n\n# add_subdirectory() for them will not be applied\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# create .rootrc in binary directory to avoid filling $HOME/.root_hist\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n#  function ROOTTEST_SET_TESTOWNER(owner)\n\n#\n\n#  Specify the owner of the tests in the current directory. Note, that the owner\n\n#  can be specified for each test individually, as well.\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# function ROOTTEEST_TARGETNAME_FROM_FILE(<resultvar> <filename>)\n\n#\n\n# Construct a target name for a given file <filename> and store its name into\n\n# <resultvar>. The target name is of the form:\n\n#\n\n#   roottest-<directorypath>-<filename_WE>\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# function ROOTTEST_ADD_AUTOMACROS(DEPENDS [dependencies ...])\n\n#\n\n# Automatically adds all macros in the current source directory to the list of\n\n# tests that follow the naming scheme:\n\n#\n\n#   run*.C, run*.cxx, assert*.C, assert*.cxx, exec*.C, exec*.cxx\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# macro ROOTTEST_COMPILE_MACRO(<filename> [BUILDOBJ object] [BUILDLIB lib]\n\n#                                         [DEPENDS dependencies...])\n\n#\n\n# This macro creates and loads a shared library containing the code from\n\n# the file <filename>. A test that performs the compilation is created.\n\n# The target name of the created test is stored in the variable\n\n# COMPILE_MACRO_TEST which can be accessed by the calling CMakeLists.txt in\n\n# order to manage dependencies.\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add defines to root_compile_macro, in order to have out-of-source builds\n\n# when using the scripts/build.C macro.\n",
        "Line" : 178,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# macro ROOTTEST_GENERATE_DICTIONARY(<dictname>\n\n#                                    [LINKDEF linkdef]\n\n#                                    [DEPENDS deps]\n\n#                                    [OPTIONS opts]\n\n#                                    [files ...]      )\n\n#\n\n# This macro generates a dictionary <dictname> from the provided <files>.\n\n# A test that performs the dictionary generation is created.  The target name of\n\n# the created test is stored in the variable GENERATE_DICTIONARY_TEST which can\n\n# be accessed by the calling CMakeLists.txt in order to manage dependencies.\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# roottest dictionaries do not need to be relocatable. Instead, allow\n\n# dictionaries to find the input headers even from the source directory\n\n# - without ROOT_INCLUDE_PATH - by passing the full path to rootcling:\n",
        "Line" : 261,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# macro ROOTTEST_GENERATE_REFLEX_DICTIONARY(<targetname> <dictionary>\n\n#                                              [SELECTION sel...]\n\n#                                              [headerfiles...]     )\n\n#\n\n# This macro generates a reflexion dictionary and creates a shared library.\n\n# A test that performs the dictionary generation is created.  The target name of\n\n# the created test is stored in the variable GENERATE_REFLEX_TEST which can\n\n# be accessed by the calling CMakeLists.txt in order to manage dependencies.\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# targetname_dictgen is the targetname constructed by the\n\n# REFLEX_GENERATE_DICTIONARY macro and is used as a dependency.\n",
        "Line" : 341,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# macro ROOTTEST_GENERATE_EXECUTABLE(<executable>\n\n#                                    [LIBRARIES lib1 lib2 ...]\n\n#                                    [COMPILE_FLAGS flag1 flag2 ...]\n\n#                                    [DEPENDS ...]  )\n\n# This macro generates an executable the the building of it becames a test\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 390,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# function ROOTTEST_ADD_OLDTEST()\n\n#\n\n# This function defines a single tests in the current directory that calls the legacy\n\n# make system to run the defined tests.\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 443,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "cmake/modules/RoottestCTest.cmake" : {
      "ObjectId" : "33c6d5959263cfa99c336cce9b006653a81ece1c",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n#  RootCTest.cmake\n\n#\n\n#  Setup file for CTest.\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the CTest build name.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(\"-- Set CTest build name to: ${CTEST_BUILD_NAME}\")\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Enable the creation and submission of dashboards.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable testing for CTest.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Copy the CTestCustom.cmake file into the build directory.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Cling workaround support.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Set CINT_VERSION analog to the existing make build system.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Cling workaround defines.\n\n# Set of macros to avoid using features not yet implemented by cling.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Variables to be used in CMakeLists.txt files.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# set ROOTTEST_OS_ID\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "cmake/modules/SearchInstalledSoftwareRoottest.cmake" : {
      "ObjectId" : "94cce0ab595e5ce79842b2e93dd3d1b8f8b10c9a",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---Download googletest--------------------------------------------------------------\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TIMEOUT 10\n\n# # Force separate output paths for debug and release builds to allow easy\n\n# # identification of correct lib in subsequent TARGET_LINK_LIBRARIES commands\n\n# CMAKE_ARGS -DCMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG:PATH=DebugLibs\n\n#            -DCMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE:PATH=ReleaseLibs\n\n#            -Dgtest_force_shared_crt=ON\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Disable install step\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Wrap download, configure and build steps in a script to log output\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Specify include dirs for gtest and gmock\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Libraries\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Register gtest, gtest_main, gmock, gmock_main\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#---Find timeout binary---------------------------------------------------------\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "python/CMakeLists.txt" : {
      "ObjectId" : "9a26f3f797c4400008f8fc5ba2e2a5728739c7ff",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "python/JsMVA/CMakeLists.txt" : {
      "ObjectId" : "f0a4643200af4f278c06f4a2669deadb4b5c869c",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#if (ROOT_python_FOUND AND NOT ROOT_CLASSIC_BUILD) # Do not run with classic build\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(NBDIFFUTIL ${CMAKE_CURRENT_SOURCE_DIR}/nbdiff.py )\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# List of notebook files\n\n#set(NOTEBOOKS ${CMAKE_CURRENT_SOURCE_DIR}/EnableJsMVA.ipynb\n\n#              ${CMAKE_CURRENT_SOURCE_DIR}/UserInterface.ipynb\n\n#              ${CMAKE_CURRENT_SOURCE_DIR}/NewMethods.ipynb)\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#find_python_module(IPython QUIET)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#if(PY_IPYTHON_FOUND)\n\n#  # Test all notebooks available\n\n#  foreach(NOTEBOOK ${NOTEBOOKS})\n\n#    get_filename_component(NOTEBOOKBASE ${NOTEBOOK} NAME_WE)\n\n#    ROOTTEST_ADD_TEST(${NOTEBOOKBASE}\n\n#                      COMMAND ${PYTHON_EXECUTABLE} ${NBDIFFUTIL} ${NOTEBOOK}\n\n#                      RUN_SERIAL)\n\n#  endforeach()\n\n#endif()\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#endif()\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "python/JupyROOT/CMakeLists.txt" : {
      "ObjectId" : "b3e0dc2ee9ffb6618e7ba8bf974bc1284c3dc936",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Do not run with classic build\n",
        "Line" : 1,
        "CharPositionInLine" : 50
      },
      "1" : {
        "Text" : "# List of notebook files\n\n# TODO: To be extended with the list of downloaded notebooks used in the\n\n# documentation and as tutorials.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include cpp notebooks if metakernel is present\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Test all modules with doctest. All new tests will be automatically picked up\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Test all notebooks available\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "python/Makefile" : {
      "ObjectId" : "9598d4a5be34e7af6172aba5402ca834cd68aca5",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# %ROOTTEST-duration%:1\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# prevent spurious printout of control characters that occur with certain\n\n# combinations of readline and ncurses (e.g. 5.2 and 5.6, respectively)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "python/basic/CMakeLists.txt" : {
      "ObjectId" : "3fe7b4268ad64a0a7d4d3eb95a8f3734d91bfb2a",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "python/basic/Makefile" : {
      "ObjectId" : "0da474c9b491115a7f1e9487ed617e4f96b16650",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-----\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#-----\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "python/cling/CMakeLists.txt" : {
      "ObjectId" : "32c0187c3c18b809600517cbea415f4c019a6c3a",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "python/cling/Makefile" : {
      "ObjectId" : "8f085f8878a18dc85f81c87ef211e45b0dbfc52c",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "python/cmdLineUtils/CMakeLists.txt" : {
      "ObjectId" : "85192980eb3663576b8cd4ca80a7c791a03d54ce",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Do not run with classic build\n",
        "Line" : 1,
        "CharPositionInLine" : 50
      },
      "1" : {
        "Text" : "############################## PATTERN TESTS ############################\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#########################################################################\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "############################## ROOLS TESTS ##############################\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#########################################################################\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "############################## ROORM TESTS ##############################\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#########################################################################\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "############################# ROOMKDIR TESTS ############################\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#########################################################################\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "############################# ROOCP TESTS ############################\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#########################################################################\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "############################# ROOMV TESTS ############################\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#########################################################################\n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# these tests are not run with the classic build\n",
        "Line" : 357,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 14
    },
    "python/cpp/CMakeLists.txt" : {
      "ObjectId" : "6009a53949745e269ae894aabe9667ff0bad41f8",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "python/cpp/Makefile" : {
      "ObjectId" : "c2dce57e4407e4f1bd97e77bcd3b17121652cda3",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The creation of shadow classes in rootcint does not support\n\n# Microsoft's implementation of virtual function overriding \n\n# when coming from a virtual base class (It would require the\n\n# Shadow class to also override that virtual function).\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "python/function/CMakeLists.txt" : {
      "ObjectId" : "4f95e030b708ca7872e4bb5537c09e3dffda2851",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "python/function/Makefile" : {
      "ObjectId" : "09cb7a169a526141f1774e55c0b4b33899081224",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "python/memory/CMakeLists.txt" : {
      "ObjectId" : "529933a448c1871f1bdd0d5fb6dd875d59754eeb",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "python/memory/Makefile" : {
      "ObjectId" : "99bd9c4ed9484918f399ec9661af21a853fb5829",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "python/pickle/CMakeLists.txt" : {
      "ObjectId" : "5be0e04fe6b7575f3ef53601c01ddeb231242e00",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "python/pickle/Makefile" : {
      "ObjectId" : "e8a84654acf5df5eb0655d64c11adbe685dc2418",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "python/pythonizations/CMakeLists.txt" : {
      "ObjectId" : "dc76b8c1ebc79553e29423ceef8b17daa23cb4b6",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "python/pythonizations/Makefile" : {
      "ObjectId" : "8988ef3babcd76e218b13b301c215f00c7b235fb",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "python/regression/CMakeLists.txt" : {
      "ObjectId" : "e2ff603bf3e18e747daa2fa8e885c59a3fd41988",
      "LastModified" : "2019-04-16T19:47:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "python/regression/Makefile" : {
      "ObjectId" : "2444eacded7949b9055bf23e7b7ff37d2a8ab343",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# special case for Scott.C: link with python library\n\n#Scott_C.$(DllSuf): Scott.C $(ROOTCORELIBS) $(ROOTCINT) $(ROOTV)\n\n#\t$(CMDECHO) $(CALLROOTEXEBUILD) -q -l -b $(ROOTTEST_HOME)/scripts/build.C\\(\\\"$<\\\",\\\"$(pylib)\\\"\\) > Scott_C.build.log 2>&1 || handleError.sh --cmd='Call to build.C' --result=$$? --log=Scott_C.build.log\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Scott_C.$(DllSuf)\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# don't run the python file; it doesn't work on Windows:\n\n# WEXITSTATUS not known on windows\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "python/stl/CMakeLists.txt" : {
      "ObjectId" : "63a3838c8472ae69cce44cfcc6ea412231f6e20b",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "python/stl/Makefile" : {
      "ObjectId" : "28debabc2608ba1ba52cc0e5de4623aa2dd2ba5d",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "python/ttree/CMakeLists.txt" : {
      "ObjectId" : "9fd3f31461c3c79bad5d1b516ba5db1651b4e7f8",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "python/ttree/Makefile" : {
      "ObjectId" : "65cfc876b5a31355ba97e804d2d55a477d03ffe0",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "root/CMakeLists.txt" : {
      "ObjectId" : "9a26f3f797c4400008f8fc5ba2e2a5728739c7ff",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/Makefile" : {
      "ObjectId" : "e70c1c27322d509cdef3edf71dc063d865f92e9c",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# %ROOTTEST-duration%:9\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/aclic/CMakeLists.txt" : {
      "ObjectId" : "8e6d94f5c5981d478b05c6b8a423a0f16b6d3636",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Define the test from parent directory since add_test() seems to ignore it when is defined there\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/aclic/Makefile" : {
      "ObjectId" : "6fcaaa255e0e53fd7cc364735ac9df5363e2c111",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# %ROOTTEST-duration%:0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/aclic/global/CMakeLists.txt" : {
      "ObjectId" : "5c89fb806ddf7a4edef8a9126008d3e5a62100be",
      "LastModified" : "2019-04-16T19:47:34Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/aclic/global/Makefile" : {
      "ObjectId" : "5e873a829760ddde4e74a13bf0874d754afbeb7e",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\t$(CMDECHO) $(CALLROOTEXE) -l -b -q buildId.C > id.log 2&1\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/aclic/load/CMakeLists.txt" : {
      "ObjectId" : "2100644ea27f99b9766270bc65cf176c15741ead",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/aclic/load/Makefile" : {
      "ObjectId" : "1d49563e73ad43948089177fc63cdebaab485eef",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# No point in testing reloading ..\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/aclic/misc/CMakeLists.txt" : {
      "ObjectId" : "f59cf7bfd990a6aba2fa14f0f03d8e338a8e04e7",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/aclic/misc/Makefile" : {
      "ObjectId" : "b6801156cc9e4a1a0e4e657337e5d5d467646b80",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/aclic/nolinkdep/CMakeLists.txt" : {
      "ObjectId" : "ee4abc1cf1d626a67459c98dd3ce40184f988e5b",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ROOTTEST_ADD_TEST(link MACRO link.C MACROARG 1)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/aclic/offset/CMakeLists.txt" : {
      "ObjectId" : "ad0d8ac3717f98f5b34d5d083bc4af73bfff5962",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/aclic/offset/Makefile" : {
      "ObjectId" : "f961b37571c11cced30054453814a6d4b44056b5",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/aclic/with space/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/aclic/with space/Makefile" : {
      "ObjectId" : "b03422d30c26772d404a48048ee0650fb5fe13a3",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/collection/CMakeLists.txt" : {
      "ObjectId" : "fe6c066efd8fe9a74ea069600820891673817f9a",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---Copy from source to binary some of the files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/collection/Makefile" : {
      "ObjectId" : "d1a61dd4ffd0975d8642cb483ee271629508eaed",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# %ROOTTEST-duration%:0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/core/CMakeLists.txt" : {
      "ObjectId" : "9443c827edbe095aee4314fd126317e818c0a0fd",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/dataframe/CMakeLists.txt" : {
      "ObjectId" : "ae69ccc12558fd30f9fd9bf3a517f3f90a303960",
      "LastModified" : "2019-04-16T19:47:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Workaround (k)ubuntu bug: runtime issue when using pthread and gcc48\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ROOT-9674\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Linked to ROOT-9773: train cache with TTreeReader\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ROOT-9628\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ROOT-9366\n\n# We use this to write something like the FCC data model, dictionaries done with aclic\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We build and run an executable that reads the file created above without dictionaries\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ROOT-9116\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# too slow otherwise\n",
        "Line" : 55,
        "CharPositionInLine" : 50
      },
      "8" : {
        "Text" : "# CMAKE_SIZEOF_VOID_P EQUAL 4\n",
        "Line" : 214,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 9
    },
    "root/fit/CMakeLists.txt" : {
      "ObjectId" : "9a26f3f797c4400008f8fc5ba2e2a5728739c7ff",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/fit/Makefile" : {
      "ObjectId" : "6374be2cbce932a972c607573af2d49888bfdc9a",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# %ROOTTEST-duration%:0\n\n# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/fit/linear/CMakeLists.txt" : {
      "ObjectId" : "c4f2a717a359680da567491ada92b43c9cc40155",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/fit/linear/Makefile" : {
      "ObjectId" : "b99030ed03f4703aaa99035a14085385049f0527",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/graf/CMakeLists.txt" : {
      "ObjectId" : "9f3139f7116c79cde5c5ba8be196b8cbe38a15ea",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/hist/CMakeLists.txt" : {
      "ObjectId" : "c1315ccf28f4eba0216ad99a874eb2894e39a8b8",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/hist/Makefile" : {
      "ObjectId" : "89b316bb0311f19ced38c92dbbd85523ac9809c8",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# %ROOTTEST-duration%:1\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/hist/chain/CMakeLists.txt" : {
      "ObjectId" : "8ec06e47ed4b2c3b7b239ca760c9bcdb86c5bd27",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/hist/division/CMakeLists.txt" : {
      "ObjectId" : "69502660e835da8cc008fab85f92b01f92d7fa35",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/hist/division/Makefile" : {
      "ObjectId" : "9afd92c9c2451436dac24d731846109eb38ef73f",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/hist/formula/CMakeLists.txt" : {
      "ObjectId" : "6e42b494568a30cce71c4af99bc5353c9ef91658",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/hist/formula/Makefile" : {
      "ObjectId" : "433396d0215d19806dcef0bd19a937a74a2ab22e",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/hist/misc/CMakeLists.txt" : {
      "ObjectId" : "8e470e976b58f8a68e34ea9126dfa7b7aaa51312",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/hist/misc/Makefile" : {
      "ObjectId" : "1871986802bc544aecc54c752614989f974be3d5",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/hist/operator/CMakeLists.txt" : {
      "ObjectId" : "9f5c53c02edf86b3eccaeaa1ff8836aad57a658e",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/hist/operator/Makefile" : {
      "ObjectId" : "97a576af71d8768c42f0305d05d65b60623d5878",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/hist/profile/CMakeLists.txt" : {
      "ObjectId" : "f6085fcb7c0ac93b91907a9a084218a31a046f89",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/hist/profile/Makefile" : {
      "ObjectId" : "4760c2169d13d3a402a1a8b72028e6fb08a05ef2",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/hist/unit/CMakeLists.txt" : {
      "ObjectId" : "d1fda39b5095cacc9c02957c0737f46d444fc3ab",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/html/CMakeLists.txt" : {
      "ObjectId" : "51f6723546c75dbbda98c374197153328bef5fb3",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/html/Makefile" : {
      "ObjectId" : "0dc649e6e44bad0497f4e6b0552ae4f135e313ca",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# %ROOTTEST-duration%:0\n\n# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#TEST_TARGETS += FindSource ClassInModule\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "root/io/CMakeLists.txt" : {
      "ObjectId" : "7694d0d5ad249dcec04a23bb0ffc7ba0fe6904da",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: Temporary workaround for runtime_cxxmodules\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/Makefile" : {
      "ObjectId" : "6e79c618d5dc39effcc8bd6ce27d0fc7e381c58f",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# %ROOTTEST-duration%:9\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/TFile/Makefile" : {
      "ObjectId" : "2ba4d122d264d8df2f9277662b580086fc95800b",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/io/abstractclass/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/abstractclass/Makefile" : {
      "ObjectId" : "0bd443142540f874cb39065e5fc5168356f81013",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# ROOT includes\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#include $(ROOTSYS)/test/Makefile.arch\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# LIBS should contain general libraries needed to compile programs. \n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Default compiler and preprocessor flags\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define some rules.\n\n#.SUFFIXES : .inc .cxx .cc\n\n#\n\n#.cc.$(ObjSuf):\n\n#\t$(CXX) -c -o $@ $(CXXFLAGS) $(CPPFLAGS) $<\n\n#\n\n#.cxx.$(ObjSuf):\n\n#\t$(CXX) -c -o $@ $(CXXFLAGS) $(CPPFLAGS) $<\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\t$(CMDECHO)echo \"Generating DataCint dictionary ...\" $(CXXSORUCE)\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\t$(CMDECHO)$(SOCMD) $(SOFLAGS) $(CXXOBJS) $(OutPutOpt)$(CXXSO) $(EXPLLINKLIBS)\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# DO NOT DELETE\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "root/io/alloc/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/alloc/Makefile" : {
      "ObjectId" : "9d8b9d0935b5632d3af66e7bcc266fdc944b57c6",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/io/arrayobject/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/arrayobject/Makefile" : {
      "ObjectId" : "6635f3f78a04ad6681a0a478e9045dd4a73455b0",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# we expect the test to fail!\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#main: main.C fooDict.C barDict.C foo.C bar.C\n\n#\tg++ -g -o $@ $^ -I. `root-config --cflags --libs` -lTreePlayer -lProof\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#libFoo.so: main.C fooDict.C barDict.C foo.C bar.C\n\n#\tg++ -g -shared -o $@ $^ -I. `root-config --cflags --libs`\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "root/io/bigevent/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/bigevent/Makefile" : {
      "ObjectId" : "fd1434f46af36309a84ca59118e4d20837e77289",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#.SUFFIXES: .cxx .o .so\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#all: bigeventTest\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "root/io/buffer/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/buffer/Makefile" : {
      "ObjectId" : "414c05716160d6334aeb50c4eafdb6fc9e4b60e4",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/io/clones/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/clones/Makefile" : {
      "ObjectId" : "c10ce4892a7de5e877afe8d638a166dd5fe23f73",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/io/complex/CMakeLists.txt" : {
      "ObjectId" : "437ae9fdf89b8d470f6e1c9d197213aeebeb927d",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/io/complex/Makefile" : {
      "ObjectId" : "95a37359a79ddb222d017446c99156aef2902522",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#TEST_TARGETS +=\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/compression/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/compression/Makefile" : {
      "ObjectId" : "c05d99f8375db09a0086a284be975cd2770a02f9",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#.SUFFIXES: .cxx .o .so\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/const/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/const/Makefile" : {
      "ObjectId" : "8503ef896266407741ef58760a8c9988eec74983",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust the location of Rules.mk as needed.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "root/io/constmembers/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/constmembers/Makefile" : {
      "ObjectId" : "5fff7005b88e321ea199a6d395b37f75ec2c4c66",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#test:\n\n#\t$(CMDECHO)echo $(CURDIR) has a failing test FileInfoTest\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/cpp11Containers/CMakeLists.txt" : {
      "ObjectId" : "e5f62e7a5bd7888a273e37c24f77855deddd7ed1",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/io/cpp11Containers/Makefile" : {
      "ObjectId" : "38788294d4b4d68fbde7495c446bcd6ae5435350",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#TEST_TARGETS +=\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/customCollection/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/customCollection/Makefile" : {
      "ObjectId" : "26401d31d2605bb0c8220b536fc36348be15e650",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/io/customStreamer/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/customStreamer/Makefile" : {
      "ObjectId" : "2a0363c67320cbf52fa019f4df0fd70a08d2498d",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "root/io/datamodelevolution/00/Makefile" : {
      "ObjectId" : "fc6db96cadd730d2892ed8564619fc15e53e8d31",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/io/datamodelevolution/01/Makefile" : {
      "ObjectId" : "3fbe1b6d508edd89f58d08e91995fcc2bdd15e92",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/io/datamodelevolution/CMakeLists.txt" : {
      "ObjectId" : "374514855ca45963ba6a3318fc418c440797fef7",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/datamodelevolution/Makefile" : {
      "ObjectId" : "2b5502fdfec1f73ffde94cea7bbfb216b86ddfce",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n\n# CLEAN_TARGETS += $(ALL_LIBRARIES) *.log *.clog\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TEST_TARGETS += \n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Note that not-yet release test directory are listed in\n\n# SpecialDirs\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "root/io/datamodelevolution/cms-00/Makefile" : {
      "ObjectId" : "27e12770e6c3941dfaf859bba6bce6b6fde135d0",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/io/datamodelevolution/misc/Makefile" : {
      "ObjectId" : "253c417710d403bbf559991e0be7d98a941ec0f4",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/io/datamodelevolution/stl/Makefile" : {
      "ObjectId" : "4de685964cfb2735021dd8e31a7d3b036910c130",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/io/dirdelete/CMakeLists.txt" : {
      "ObjectId" : "374514855ca45963ba6a3318fc418c440797fef7",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/dirdelete/Makefile" : {
      "ObjectId" : "ac6a98bbbb1ce6471afcb793119fea81123981f1",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "root/io/directory/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/directory/Makefile" : {
      "ObjectId" : "61a715f1aceaf4a3ab06ba72a026dac4d7fac2c6",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/io/double32/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/double32/Makefile" : {
      "ObjectId" : "5c04a0d53bcd1757e56c65455c533cc19350b65e",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/io/emulated/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/emulated/Makefile" : {
      "ObjectId" : "360dff80f298c2c0318e930b1c65e6acae4e0c4e",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/io/event/CMakeLists.txt" : {
      "ObjectId" : "9ca640d5d53aabecf33c61d2d25ffb61c6d3e8d2",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/event/Makefile" : {
      "ObjectId" : "afa3e3c20062e3b5fc2d09c3646c1396ac8dbbcc",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#.SUFFIXES: .cxx .o .so\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#all: bigeventTest\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "root/io/evolution/CMakeLists.txt" : {
      "ObjectId" : "374514855ca45963ba6a3318fc418c440797fef7",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/evolution/Makefile" : {
      "ObjectId" : "47da53359850f45934dfa8d4884c285e2a9115c9",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/io/evolution/array/Makefile" : {
      "ObjectId" : "f0ca2a0b0c6d44c0ad9d197f96a06fdc2e4be7a5",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/io/evolution/pragma_read/Makefile" : {
      "ObjectId" : "62930017312cf7b33025406d5450eedcc6ef3569",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "root/io/evolution/v5names/CMakeLists.txt" : {
      "ObjectId" : "ee22facc10e478de19d35a31bcb77affd5c19581",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/io/evolution/v5names/Makefile" : {
      "ObjectId" : "aec158391bc801593035f4b86cf5c980793979dc",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/io/evolution/versions/Makefile" : {
      "ObjectId" : "00fd601d48b22380e2b9db74f8bfd5907b18667b",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "root/io/evolution/versions/lhcb/Makefile" : {
      "ObjectId" : "3d3b522409c1ff36c76745ca2d786a780ce0cb01",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/io/fakeClass/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/fakeClass/Makefile" : {
      "ObjectId" : "71b831e0c3f24727c89a3bfab56f5a7f33e84b68",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust the location of Rules.mk as needed.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "root/io/filemerger/CMakeLists.txt" : {
      "ObjectId" : "d23988d6ba1b33f8cc8c0910711d25b6253451db",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: Should be CTEST fixtures\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#TBD: add file generation as test fixture\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "root/io/float16/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/float16/Makefile" : {
      "ObjectId" : "82166f67c2d03b4d1a7c207348791d0bd84cc9f0",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/io/geo/CMakeLists.txt" : {
      "ObjectId" : "d067458d34613d52ffc6f202598faa036b009b74",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/geo/Makefile" : {
      "ObjectId" : "50edd0e37561c4cc3924c3ed86911c64c41cb415",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#  TEST_TARGETS := $(filter-out execParse,$(TEST_TARGETS))\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "root/io/heritstl/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/heritstl/Makefile" : {
      "ObjectId" : "78f78808a56d58628de7d009839432fc89d664f1",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n# from runsometest.C\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "root/io/ignoretobject/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/ignoretobject/Makefile" : {
      "ObjectId" : "2e144bd1f30a8a088c40ad8ad081b94a661e3e24",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/io/interface/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/interface/Makefile" : {
      "ObjectId" : "20cca480c69e8256112d91b6039f82c76f86119e",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#currentFileKey\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "root/io/json/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/json/Makefile" : {
      "ObjectId" : "6a99656c19118c792eb43e771c3b6ba3c710a273",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/io/longlong/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/longlong/Makefile" : {
      "ObjectId" : "b950544dfe21db27e5668d98c4c34203d46a2d70",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "root/io/multipleInherit/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/multipleInherit/Makefile" : {
      "ObjectId" : "8f0cb9ef77ed11e3bbbf5f4ac5851d77fbf5c89c",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/io/multizip/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/multizip/Makefile" : {
      "ObjectId" : "30626bb6443c5f237f0d30142f4a9c3b0f068d65",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/io/namespacedict/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/namespacedict/Makefile" : {
      "ObjectId" : "98c0823a1396990140b98465374d6107c8363d3d",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/io/newClassDef/CMakeLists.txt" : {
      "ObjectId" : "374514855ca45963ba6a3318fc418c440797fef7",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/newClassDef/Makefile" : {
      "ObjectId" : "8fbbdfa7772914036aeeb405bd33db2c322e22ec",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/io/newClassDef/current/Makefile" : {
      "ObjectId" : "1620b6b91eb777b62c230d67f6638e1fc6822ed9",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/io/newClassDef/featuretest/Makefile" : {
      "ObjectId" : "8a18c9787b0b693c6271aeb884220e2191c677ab",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/io/newClassDef/new/Makefile" : {
      "ObjectId" : "a32d818e40127dc90a945ce8d8969af662f40374",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#leave here\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\techo $(CXX)\n\n#\techo $(CXXFLAGS)\n\n#\techo $(SHARED_LIBS)\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#@echo \"All test succeeded in `pwd`\"\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "root/io/newClassDef/noclassdef/Makefile" : {
      "ObjectId" : "c972bbc34ed46df3cd0a634d6dfe1eb8f8382333",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#include $(ROOTSYS)/test/Makefile.arch\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#arch := $(shell grep arch `which root-config` | head -1 | cut -d'=' -f2-)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Make sure the failing code is excluded\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Make sure the failing code is included\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\t@echo \"All test succeeded in `pwd`\"\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#driver: main.cc mydict.cc RootCaloHit.h  RootData.h  RootPCellID.h $(ROOT_LOC)/include/Rtypes.h\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# due to a bug in cxx/ld under osf3.xx, one cannot use cxx to generate\n\n# a shared library. One must use ld instead.\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# We need to make both the .dylib and the .so\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\t$(CXX) -g -o driver $(CXXFLAGS) main.cc mydict.cc $(LIBS) \n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# mydict.log should only have one or two line!\n",
        "Line" : 151,
        "CharPositionInLine" : 85
      },
      "10" : {
        "Text" : "#\t$(CMDECHO)bindexplib $* $^ > libIotest.def\n\n#\t$(CMDECHO)lib -nologo -MACHINE:IX86 $^ -def:libIotest.def \\\n#                  $(OutPutOpt)libIotest.lib\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\t$(CMDECHO)$(LD) $(SOFLAGS) $(LDFLAGS) $^ libIotest.exp $(LIBS) \\\n#                   $(OutPutOpt)$@\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "root/io/newClassDef/showmember/sm_test/Makefile" : {
      "ObjectId" : "d82270fd89f83b153ccbca0cb096d3d8af4ea04d",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/io/newClassDef/showmember/t01/Makefile" : {
      "ObjectId" : "d82270fd89f83b153ccbca0cb096d3d8af4ea04d",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/io/newClassDef/showmember/t02/Makefile" : {
      "ObjectId" : "3c6f4dd436dfc28a44ad4ceac5e477b77f8126b0",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for the ROOT test programs.\n\n# This Makefile shows nicely how to compile and link applications\n\n# using the ROOT libraries on all supported platforms.\n\n#\n\n# Copyright (c) 2000 Rene Brun and Fons Rademakers\n\n#\n\n# Author: Fons Rademakers, 29/2/2000\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# HP-UX with CC\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# HP-UX 10.x with aCC\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# HP-UX 11i 1.5 (IA-64) with aCC\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# HP-UX 10.x with g++\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# GNU/Hurd\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# IBM AIX xlC 4.x\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# IBM AIX xlC 5.x\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# IBM AIX with GCC\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Solaris CC\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Solaris CC 5.0\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Solaris egcs\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Solaris gcc\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Solaris kcc\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Solaris CC on Intel\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# SGI\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# SGI 6.x with EGCS\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# SGI 6.x with EGCS for n32 ABI\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# SGI with GCC\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# SGI with KCC\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Alpha/OSF with g++\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Alpha/OSF with egcs\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Alpha/OSF with kai compiler (not yet valid)\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Alpha/OSF with cxx6\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Alpha/OSF with cxx5\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Linux with gcc 2.7.2.x\n",
        "Line" : 252,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Linux with gcc 2.7.2.x (RedHat 4.2)\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Linux with gcc 2.7.2.x\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Linux with gcc 2.7.2.x\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Linux with gcc 2.7.2.x\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Linux with egcs, gcc 2.9x, gcc 3.x (>= RedHat 5.2)\n",
        "Line" : 297,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Linux with the KAI compiler\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Linux with Intel icc compiler\n",
        "Line" : 315,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# MkLinux with egcs/glibc\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Itanium Linux with gcc 2.9x\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Itanium Linux with sgiCC\n",
        "Line" : 342,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Itanium Linux with Intel ecc\n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Alpha Linux with egcs\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# ARM Linux with egcs\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# MkLinux with libc5\n",
        "Line" : 378,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# FreeBSD with libc5\n",
        "Line" : 387,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# FreeBSD with glibc\n",
        "Line" : 396,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# MacOS X with cc (GNU cc 2.95.2)\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# The SOFLAGS will be used to create the .dylib; the .so will\n\n# be created separately\n",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Hitachi HIUX\n",
        "Line" : 417,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Windows with the VC++ compiler\n",
        "Line" : 427,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#CXXOPT        = -Z7\n",
        "Line" : 435,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#LDOPT         = -debug\n",
        "Line" : 440,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#------------------------------------------------------------------------------\n",
        "Line" : 459,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "#------------------------------------------------------------------------------\n",
        "Line" : 555,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# due to a bug in cxx/ld under osf3.xx, one cannot use cxx to generate\n\n# a shared library. One must use ld instead.\n",
        "Line" : 570,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# We need to make both the .dylib and the .so\n",
        "Line" : 578,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# due to a bug in cxx/ld under osf3.xx, one cannot use cxx to generate\n\n# a shared library. One must use ld instead.\n",
        "Line" : 668,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# We need to make both the .dylib and the .so\n",
        "Line" : 676,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# due to a bug in cxx/ld under osf3.xx, one cannot use cxx to generate\n\n# a shared library. One must use ld instead.\n",
        "Line" : 700,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# We need to make both the .dylib and the .so\n",
        "Line" : 708,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# due to a bug in cxx/ld under osf3.xx, one cannot use cxx to generate\n\n# a shared library. One must use ld instead.\n",
        "Line" : 732,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# We need to make both the .dylib and the .so\n",
        "Line" : 740,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# due to a bug in cxx/ld under osf3.xx, one cannot use cxx to generate\n\n# a shared library. One must use ld instead.\n",
        "Line" : 763,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# We need to make both the .dylib and the .so\n",
        "Line" : 771,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "###\n",
        "Line" : 796,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 61
    },
    "root/io/newdelete/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/newdelete/Makefile" : {
      "ObjectId" : "8cbdb314b94096cdeb5e131fad7c21803f81c903",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/io/newstl/CMakeLists.txt" : {
      "ObjectId" : "374514855ca45963ba6a3318fc418c440797fef7",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/newstl/Makefile" : {
      "ObjectId" : "289301afa06341522e0a04661f5be4ee2f6ee53e",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# adjust the location of Rules.mk as needed.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#debug := $(shell echo $(PLATFORM) $(NOLINK_PWD) 1>&2 )\n\n#debug := $(shell echo $(LIBDIR) 1>&2 )\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# We intentionally do not delete the output file in $(FILEDIR) so that \n\n# we can keep the historic versions.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#stlNoLibTest\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#debug := $(shell echo $(TEST_DLL) 1>&2 )\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#debug := $(shell echo $(DEPENDENCY_FILES) 1>&2 )\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#-include $(DEPENDENCY_FILES)\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#.PRECIOUS :  $(addprefix $(LIBDIR),$(subst .C,o.$(DllSuf),$(HOLDER) $(FTEST) $(LIBDIR)TestHelpers_C))\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# debug := $(shell echo $(FTEST_DLL) 1>&2 ) \n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#$(LIBDIR)%.o: %.C\n\n#\t@touch $@\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\t$(CMDECHO)touch $@\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#\t$(CMDECHO)touch $@\n\n#\t$(CMDECHO) echo '.x $(RULES_DIR)/build.C(\"$<\")' | $(CALLROOTEXE) -l -b -n\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Cancel default rule\n",
        "Line" : 226,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# DO NOT DELETE\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "root/io/perf/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/perf/Makefile" : {
      "ObjectId" : "b2ae2bb4246ddbf077c3ef3207754bceb5f8aaf0",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust the location of Rules.mk as needed.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "root/io/perf/slowreading/Makefile" : {
      "ObjectId" : "5b322aecf4e8180c45739f598cfb5ffd7d9bcabf",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/io/pointers/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/pointers/Makefile" : {
      "ObjectId" : "a89ec4a1a16c5d2386bc1afb2c85cca70507f744",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/io/prefetching/CMakeLists.txt" : {
      "ObjectId" : "374514855ca45963ba6a3318fc418c440797fef7",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/prefetching/Makefile" : {
      "ObjectId" : "2c04f2262663d24e68fab702524e90928c808010",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Disable for pthread version older than 2.3.5 (we know ROOT thread do not work well with pthread 2.3.4)\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#pthreadCheck not empty\n\n#has ldd\n",
        "Line" : 86,
        "CharPositionInLine" : 6
      },
      "9" : {
        "Text" : "# We should really generate a .d file\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10,
      "Errorlog" : "line 82:89 token recognition error at: '\\1'\nline 82:114 token recognition error at: '\\2'\nline 82:119 token recognition error at: '\\3'\n"
    },
    "root/io/recover/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/recover/Makefile" : {
      "ObjectId" : "6f0e678eebfb09d04cdfd56e3e1674e27e1d1393",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/io/references/CMakeLists.txt" : {
      "ObjectId" : "374514855ca45963ba6a3318fc418c440797fef7",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/references/Makefile" : {
      "ObjectId" : "52b0ba64c48530ed6cc77b4d401f0fb70b8a3ecb",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust the location of Rules.mk as needed.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "root/io/references/actions/Makefile" : {
      "ObjectId" : "294aea6d6b7fbdb006c9026abd00d40e8b1236f3",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/io/rootcint/CMakeLists.txt" : {
      "ObjectId" : "374514855ca45963ba6a3318fc418c440797fef7",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/rootcint/Makefile" : {
      "ObjectId" : "9830c74c1731d3049110087eb614b6ae19341b57",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "root/io/rootcint/doubleconst/Makefile" : {
      "ObjectId" : "f5aab11813f9a65c6938624b4896329ce2567c23",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/io/rootcint/stl/Makefile" : {
      "ObjectId" : "fdf1997fa56fae6d67f67728809b79d03b49c854",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust the location of Rules.mk as needed.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "root/io/set/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/set/Makefile" : {
      "ObjectId" : "3194514d934310aa493a4d867c2adfd018926a83",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust the location of Rules.mk as needed.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "root/io/simple/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/simple/Makefile" : {
      "ObjectId" : "ec9bd79f5e49105a517d568d1b278496fccfe502",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the only target added.  If\n\n#  the name of the target is changed in the rules then the name should be changed accordingly in\n\n#  this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Searched for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the ROOTTEST_HOME\n\n#  variable for use by the SUBDIRECTORIES variable and is exported to eliminate the \n\n#  overhead of findding the path again during recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by 'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from the home\n\n#  directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to unix 'diff' with some options passed to it in Rules.mk.\n\n#  To run a diff and ignore whitespacing the -w options should be specified before the files are\n\n#  listed.\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/io/stdarray/CMakeLists.txt" : {
      "ObjectId" : "6e3a83f382220fddf01035341ed00acb662d765b",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# More coverage for ROOT-8736\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ROOTTEST_ADD_TEST(colWiseWrite_5\n\n#                  MACRO colWiseWrite_5.C+)\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ROOTTEST_ADD_TEST(colWiseRead_51\n\n#                  MACRO colWiseRead_51.C+\n\n#                  DEPENDS colWiseWrite_5)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#ROOTTEST_ADD_TEST(colWiseRead_52\n\n#                  MACRO colWiseRead_52.C+\n\n#                  DEPENDS colWiseWrite_5)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ROOTTEST_ADD_TEST(modelReadDict2TXMLFile\n\n#                   MACRO  modelReadDict2.C\n\n#                   MACROARG \"\\\"model.xml\\\"\"\n\n#                   OUTREF modelReadDict2.ref\n\n#                   DEPENDS aclicModelWrite)\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The dependency is there not to compile the macros simultaneously\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ROOTTEST_ADD_TEST(modelReadNoDictTXMLFile\n\n#                   MACRO  modelReadNoDict.C\n\n#                   MACROARG \"\\\"model.xml\\\"\"\n\n#                   OUTREF modelReadNoDict.ref\n\n#                   DEPENDS aclicModelWrite)\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/io/tclass/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/tclass/Makefile" : {
      "ObjectId" : "33ffa77600e8a85144a5b5ac80b03901254af0e7",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust the location of Rules.mk as needed.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "root/io/transient/CMakeLists.txt" : {
      "ObjectId" : "b240bcaab2ccc496feddc5c370175ba59a251879",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/io/transient/Makefile" : {
      "ObjectId" : "5e7dcc770df4fc04636d229a49f4a5612b07c7fd",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust the location of Rules.mk as needed.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Having a data member whose ClassDef version is zero leads to a questionable warning message\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "root/io/transient/base/CMakeLists.txt" : {
      "ObjectId" : "67c86923d71d4ba23429d0ea90cfb6aec1027016",
      "LastModified" : "2019-04-16T19:47:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Adding a ; to avoid the output is complicated\n",
        "Line" : 7,
        "CharPositionInLine" : 54
      },
      "CommentCount" : 1
    },
    "root/io/transient/base/Makefile" : {
      "ObjectId" : "877803d8856c21bc9d61a65aa7aabf2ef1b3c305",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/io/tree/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/tree/Makefile" : {
      "ObjectId" : "5de3752cfbd2b433331a7260e23d105e1db155d1",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust the location of Rules.mk as needed.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#################################\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "root/io/treeForeign/CMakeLists.txt" : {
      "ObjectId" : "9cb42d630ba931f1d265ca582850f29c5889f1e9",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/io/treeForeign/Makefile" : {
      "ObjectId" : "e1f82c49bfe555a68926a09bd11032d5ecefd2b7",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust the location of Rules.mk as needed.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "root/io/treeproblem/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/treeproblem/Makefile" : {
      "ObjectId" : "94428726d2d3855c1da6c3b4eba70b7edc41ac8b",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#clean:\n\n#\t$(CMDECHO)rm -f *.root *~ *.o *Dict.cxx *Dict.h *.$(DllSuf) reader writer\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "root/io/tuple/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/tuple/Makefile" : {
      "ObjectId" : "4c6457ce031fd058bba3c0b55e455ab0560d6b46",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "root/io/uniquePointer/CMakeLists.txt" : {
      "ObjectId" : "1e4cba73ef5eea650770da92e62cbaa27ca20ee5",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Cross-compatibility of unique_ptr and ptr\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# END Cross-compatibility of unique_ptr and ptr\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "root/io/unordered_set/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/unordered_set/Makefile" : {
      "ObjectId" : "3194514d934310aa493a4d867c2adfd018926a83",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust the location of Rules.mk as needed.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "root/io/vararyobj/CMakeLists.txt" : {
      "ObjectId" : "374514855ca45963ba6a3318fc418c440797fef7",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/vararyobj/Makefile" : {
      "ObjectId" : "516aefb73cad60e3df4a6fdf5d4ed3c8e9f19847",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# We do it this way so that if make -j is used the Read test\n\n# does not run until the Write test has finished.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We do it this way so that if make -j is used the Read test\n\n# does not run until the Write test has finished.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We do it this way so that if make -j is used the Read test\n\n# does not run until the Write test has finished.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "root/io/webfile/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/webfile/Makefile" : {
      "ObjectId" : "c4e891b1362fbd934c15eb971eab9245ca77e926",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/io/withoutDictionaries/CMakeLists.txt" : {
      "ObjectId" : "c217b9281847ed6516d1b1f97b0b09946fc10fd1",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ROOT-8478\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/withoutDictionaries/Makefile" : {
      "ObjectId" : "e5031549188a713192f89cf16ecac34918da8147",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/io/xml/CMakeLists.txt" : {
      "ObjectId" : "1364fa82c6d42b4791661cee83bef6b6f4018316",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/io/xml/Makefile" : {
      "ObjectId" : "627073a1a7047c8ea2afaf75ee506378b6a3070c",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/math/CMakeLists.txt" : {
      "ObjectId" : "9a26f3f797c4400008f8fc5ba2e2a5728739c7ff",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/math/Makefile" : {
      "ObjectId" : "a1d07612b5ff9532a21ff4f17357980604a91957",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# %ROOTTEST-duration%:1\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/math/genvector/CMakeLists.txt" : {
      "ObjectId" : "f385b361a565dfccb602253e59eebc49666c0fa5",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/math/genvector/Makefile" : {
      "ObjectId" : "68310f6dbc73f000b52e7857141b1ed542cd2dd8",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##skip tests on Windows \n\n##ifneq ($(PLATFORM),win32)\n\n##endif\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#this suppress check in log file\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "root/math/mathcore/CMakeLists.txt" : {
      "ObjectId" : "ca9a6a6fc113d811bb3898eb8f888d779683aaf9",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ROOTTEST_ADD_TEST(testRootFinder\n\n#                 MACRO ${ROOT_SOURCE_DIR}/math/mathcore/test/testRootFinder.cxx+)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ROOTTEST_ADD_TEST(testSpecFuncSiCi\n\n#                  MACRO ${ROOT_SOURCE_DIR}/math/mathcore/test/testSpecFuncSiCi.cxx+)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "root/math/mathcore/Makefile" : {
      "ObjectId" : "d2f93389495628c0f7707e148287f343536b8413",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#%.h: $(ROOT_SRCDIRDEP)/math/mathcore/test/%.h\n\n#\t@cp $< $@\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#$(addsuffix _cxx.$(DllSuf),$(MATHCORETESTS)): AnyDependentHeaders.h\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "root/math/mathmore/CMakeLists.txt" : {
      "ObjectId" : "dcd20e606daed0ef081f77574a84613a5b522447",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/math/matrix/CMakeLists.txt" : {
      "ObjectId" : "f425e2e02da56f638daa1e0b2459d6d84a58694f",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/math/smatrix/CMakeLists.txt" : {
      "ObjectId" : "822936d2270178e440d65fe97add22ddda602a59",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/math/smatrix/Makefile" : {
      "ObjectId" : "67d96ef6830b42e85a5b200c758eb9fae949858b",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#skip tests on Windows \n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/math/unuran/CMakeLists.txt" : {
      "ObjectId" : "624db5dd4e02beb351ae5ebefa5d6e262a795a06",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/math/unuran/Makefile" : {
      "ObjectId" : "48d8b17883746b24b493d3edb1fe5a0bd20d7558",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/math/vdt/CMakeLists.txt" : {
      "ObjectId" : "312127a53dd9033223d37adc63ddcd88ee5b528d",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# for \"too slow\" and \"too inaccurate\" :)\n",
        "Line" : 15,
        "CharPositionInLine" : 34
      },
      "CommentCount" : 1
    },
    "root/meta/CMakeLists.txt" : {
      "ObjectId" : "49ec3c59cdacfdcb1fc13656ceeea3f998a51977",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIXME: Temporary workaround for runtime_cxxmodules;\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ROOT-6752\n\n# This test checks that the payload is properly printed in case of errors for\n\n# debugging reasons. With modules, the concept of payload is not really valid and\n\n# the test has no reason to run.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---Copy from source to binary some of the files\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# FIXME: Temporary workaround for runtime_cxxmodules;\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "root/meta/MakeProject/CMakeLists.txt" : {
      "ObjectId" : "e2f09e9d9eb7b19d13bf84bbd5f27a8e6bd1acee",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/MakeProject/Makefile" : {
      "ObjectId" : "55f5b6f3199fef93c352b94fc30d517d21bcc5ff",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Takes >1GB of RAM when building; disable for quick builds:\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "root/meta/Makefile" : {
      "ObjectId" : "7548d083103e67ca17449f36dce65b934bfe3a1e",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# %ROOTTEST-duration%:35\n\n# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/meta/ROOT-5694/CMakeLists.txt" : {
      "ObjectId" : "ad5783f84f94b65dfce0bb9eaed25617fed6487c",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/ROOT-5694/Makefile" : {
      "ObjectId" : "a0e1a11c46ccf0120c8b2d83bc5b89b82427f4e7",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/meta/ROOT-7181/CMakeLists.txt" : {
      "ObjectId" : "182629f9610bba9ceaf6b6dae6974ddd07ce0c49",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/meta/ROOT-7181/Makefile" : {
      "ObjectId" : "841f438f1a3830d8883a3f5581aaa46c6776d795",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/meta/ROOT-7462/CMakeLists.txt" : {
      "ObjectId" : "182629f9610bba9ceaf6b6dae6974ddd07ce0c49",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/meta/ROOT-7462/Makefile" : {
      "ObjectId" : "8e9bdd5744f07871917834a201a6b370e9d66091",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#runInvalidDeclRecoveryCI.success\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Custom rule required here, as we must make *sure* that there is no rootmap\n\n# file generated/left over.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#runInvalidDeclRecoveryCI.success: runInvalidDeclRecoveryCI.C $(UTILS_PREREQ) $(ROOTCORELIBS) $(ROOTCINT) $(ROOTV)\n\n#\t$(CMDECHO) $(CALLROOTEXE) -q -l -b $< > runInvalidDeclRecoveryCI.log 2>runInvalidDeclRecoveryCI.ign.elog || handleError.sh --cmd='Execution of $<' --result=$$? --log=runInvalidDeclRecoveryCI.ign.elog --test=runInvalidDeclRecoveryCI.C && touch $@\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "root/meta/autoloading/CMakeLists.txt" : {
      "ObjectId" : "33b94d97137be86bd3306258f26c60cff593e555",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---Copy from source to binary some of the files\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#--With ACLiC---------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "root/meta/autoloading/Makefile" : {
      "ObjectId" : "1202cb9d63bff3a9c9962a6b9aeb4e7f79a60683",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Sed-away the line number. A different number of new-style rootmap files (i.e.\n\n# with forward declarations) for example on different platforms can result in a\n\n# different line number.\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "root/meta/autoloading/NestedClasses/CMakeLists.txt" : {
      "ObjectId" : "8c568b44fedcad5345a5a27f2eceb8f4cf00cf30",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/autoloading/NestedClasses/Makefile" : {
      "ObjectId" : "89bee143e142916cee7554eef5dca335798c0de7",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "root/meta/autoloading/ROOT-8432/CMakeLists.txt" : {
      "ObjectId" : "5e5b97d243fb7bf2f78e6efbc867024f697bbcd9",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/autoloading/classInNamespace/CMakeLists.txt" : {
      "ObjectId" : "68a4f6d7607f926ef1d95cb24022298c5b8fc3d2",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---Copy from source to binary some of the files\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/meta/autoloading/classInNamespace/Makefile" : {
      "ObjectId" : "7482e7a51e5c079c6033d1fe81a917c3cfa18cc4",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/meta/autoloading/headerParsingOnDemand/CMakeLists.txt" : {
      "ObjectId" : "29a7c180992e54234e31618d1f928092b9b26afa",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We need to be able to specify the name of the library fully, no\n\n# suffixes/prefixes automatically added, if we want compatibility\n\n# with roottest. Indeed roottest does not allow\n\n# dynamic rootmap creation: you have to commit one in the repository. If ctest\n\n# creates another rootmap with the same keys but a different library name the\n\n# system will complain at startup, making the test fail. Clearly for backwards\n\n# compatibility reasons the current behaviour should be preserved :)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/meta/autoloading/headerParsingOnDemand/Makefile" : {
      "ObjectId" : "e945225c28244533e0f7a15b21bacbc5740c836b",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The greps are there to find a common denominator among all platforms for \n\n# system headers.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# We chase the Autoparsing message\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "root/meta/autoloading/templates/CMakeLists.txt" : {
      "ObjectId" : "a49cb61c4e71c76cbcb2e5d072bb203105d56157",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---Copy from source to binary some of the files\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/meta/autoloading/templates/Makefile" : {
      "ObjectId" : "14a4328eba847d0c26f96f543da063c81b197a97",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/meta/callfunc/CMakeLists.txt" : {
      "ObjectId" : "be8e4ae6be0ae821246331d30f4d6b4d862b6abd",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/callfunc/Makefile" : {
      "ObjectId" : "4ec688736211f0378052398255df99673778e6f0",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/meta/cmsUnload/CMakeLists.txt" : {
      "ObjectId" : "182629f9610bba9ceaf6b6dae6974ddd07ce0c49",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/meta/cmsUnload/Makefile" : {
      "ObjectId" : "f60b473f6d2fa6cd468afb839f8f7f1dab716d00",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# case4\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# SiStripCluster\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ClusterTotals\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "root/meta/dictSelection/CMakeLists.txt" : {
      "ObjectId" : "66bd1b248658c0665f194a5527b02a7449af96cf",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/dictSelection/Makefile" : {
      "ObjectId" : "7aaa03fbbbdd718564bf85713ecbfc1167d6c53f",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "root/meta/enumPayloadManipulation/CMakeLists.txt" : {
      "ObjectId" : "2a96ead5887f9044950317454babc30746e1b8fc",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This particular test has to be put in a separate directory, otherwise, for a reason\n\n# which I cannot figure out, CMake will pass multiple times the \"-D\"s relative to the\n\n# cling workarounds to genreflex. Given that other tests check some properties of the\n\n# fwd declaration payload in the dictionaries, this \"feature\" makes them fail.\n\n# In a sense, this is a workaround to have a sane reproducer of ROOT-9660 which does \n\n# not interfere with the other tests.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ROOT-9660\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "root/meta/enums/CMakeLists.txt" : {
      "ObjectId" : "f934260f0860d34ecd542e4b1d42518f84bda02a",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/enums/Makefile" : {
      "ObjectId" : "e84f32369bde9a0b4cad8b35553d0fdad953daa7",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/meta/evolution/CMakeLists.txt" : {
      "ObjectId" : "6f2fefe0235ded784bb125ee3add582be813e48a",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/evolution/Makefile" : {
      "ObjectId" : "f23d876a7c29c388a2b7357c7a0af94384193912",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "root/meta/evolution/version5/CMakeLists.txt" : {
      "ObjectId" : "361ac6ad6c2f1d5d4f04b7119b7d90df4376b4e0",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/evolution/version5/Makefile" : {
      "ObjectId" : "c912542305311941a1ded83bdf82b7ac7a36eb14",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/meta/fwdDecls/CMakeLists.txt" : {
      "ObjectId" : "4546d3ae1bcab9c014c849524380737b66c00b1b",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ROOTTEST_GENERATE_REFLEX_DICTIONARY(clingFwdDeclExample clingFwdDeclExample.h SELECTION clingFwdDeclExample_selection.xml NO_ROOTMAP)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/meta/fwdDecls/Makefile" : {
      "ObjectId" : "c98aa570fbd57f7cd994f25e9604946028a65116",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/meta/genreflex/CMakeLists.txt" : {
      "ObjectId" : "3930ec53a9bd5bd5d8416140ab2d9bdd76d81c27",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ROOT-9872\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ROOT-8509\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ROOT-8380\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ROOT-8381\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ROOT-3745\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#ROOT-7760\n\n# This test runs only on apple platforms as it probes a platform specific feature.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#ROOT-7676\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ROOT-7450\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ROOT-7450\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# ROOT-7643\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# These 3 tests will fail because a pragma once will be found in the inlined header\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "root/meta/genreflex/Makefile" : {
      "ObjectId" : "b1ab7c9828932c46016fa726f54ee01fa74c2938",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# check sanity of pcm name\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# escape quotes test\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "root/meta/genreflex/ROOT-5594/CMakeLists.txt" : {
      "ObjectId" : "6a05752d8463fe2b2c010de88215874e471418ca",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ROOTTEST_GENERATE_REFLEX_DICTIONARY(AliaODPid AliAODPid.h SELECTION AliAODPid_selection.xml)\n\n#\n\n#ROOTTEST_ADD_TEST(execdummy\n\n#                  MACRO execdummy.C\n\n#                  OUTREF execdummy.ref\n\n#                  DEPENDS ${GENERATE_REFLEX_TEST})\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/meta/genreflex/ROOT-5594/Makefile" : {
      "ObjectId" : "bdf103d51c73472dbd5301e449b97250d54f9c01",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Create the dict source\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/meta/genreflex/ROOT-5626/CMakeLists.txt" : {
      "ObjectId" : "6edffe16a710deaffcd89e6fdac51964140cc8ac",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#ROOTTEST_GENERATE_REFLEX_DICTIONARY(classes_rflx classes.h SELECTION classes_selection.xml)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ROOTTEST_ADD_TEST(execdummy\n\n#                  MACRO execdummy.C\n\n#                  OUTREF execdummy.ref\n\n#                  DEPENDS ${GENERATE_REFLEX_TEST})\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "root/meta/genreflex/ROOT-5626/Makefile" : {
      "ObjectId" : "13cb8e57829b3aff36e8ba1aa86c8a32c42f1237",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Create the dict source\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/meta/genreflex/ROOT-5627/CMakeLists.txt" : {
      "ObjectId" : "194a6452286b55585007507706f9b8c00ee1c5e6",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/genreflex/ROOT-5627/Makefile" : {
      "ObjectId" : "3ade63bfa81b5f484fd54801b685fd35ad32f1de",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which\n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is\n\n#  exported to eliminate the overhead of findding the path again during\n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by\n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.\n\n# Issues:  This algorithm will fail if a makefile is called from outside the\n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from\n\n#  the home directory.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/meta/genreflex/ROOT-5657/CMakeLists.txt" : {
      "ObjectId" : "dce962726f87b723d83fba7acca3ddd0c42a6ea2",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/genreflex/ROOT-5657/Makefile" : {
      "ObjectId" : "4f0f49cdf251a09457a1ab4ae3b6963551b508da",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Create the dict source\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/meta/genreflex/ROOT-5690/CMakeLists.txt" : {
      "ObjectId" : "1b1cb3164800f1c65b9414472fa7119ca074ff0a",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/genreflex/ROOT-5690/Makefile" : {
      "ObjectId" : "bff9320da1eebda007ce1f538cce667da8207581",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Create the dict source\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/meta/genreflex/ROOT-5696/CMakeLists.txt" : {
      "ObjectId" : "07aae889ae99120ea4ab52a9535bef86470eb999",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/genreflex/ROOT-5696/Makefile" : {
      "ObjectId" : "4e4eacd2aff55239da4330aaa674313bcd151fb7",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which\n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is\n\n#  exported to eliminate the overhead of findding the path again during\n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by\n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.\n\n# Issues:  This algorithm will fail if a makefile is called from outside the\n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from\n\n#  the home directory.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/meta/genreflex/ROOT-5709/CMakeLists.txt" : {
      "ObjectId" : "3048deb0cd7d7d69808907c5fe2d2bd0940d954a",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/genreflex/ROOT-5709/Makefile" : {
      "ObjectId" : "6853f8d3adbdae119db360d964a098c3f3f1e9ee",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/meta/genreflex/ROOT-5756/CMakeLists.txt" : {
      "ObjectId" : "84379572148723638830a4da01e96a68104540ff",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/genreflex/ROOT-5756/Makefile" : {
      "ObjectId" : "c5e909863499b13ccf659b2c1f7deeb4708b218d",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/meta/genreflex/ROOT-5764/CMakeLists.txt" : {
      "ObjectId" : "84379572148723638830a4da01e96a68104540ff",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/genreflex/ROOT-5764/Makefile" : {
      "ObjectId" : "c5e909863499b13ccf659b2c1f7deeb4708b218d",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/meta/genreflex/ROOT-5768/Makefile" : {
      "ObjectId" : "21ab127e923b55d139f97912d2e30a1cd998a51a",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#Disable until boost is not present in the headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#CLEAN_TARGETS += *.log dummy* *pcm *o *rflx.* $(ALL_LIBRARIES)\n\n#TEST_TARGETS += execLibLoad\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#ifeq ($(strip $(ROOTTEST_HOME)),)\n\n#   export ROOTTEST_HOME := $(shell git rev-parse --show-toplevel)/\n\n#   ifeq ($(strip $(ROOTTEST_HOME)),)\n\n#      export ROOTTEST_HOME := $(shell expr $(CURDIR) : '\\(.*/roottest/\\)')\n\n#   endif\n\n#   ifeq ($(strip $(ROOTTEST_HOME)),)\n\n#      $(error The head of roottest was not found.  Set ROOTTEST_HOME)\n\n#   endif\n\n#endif\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#include $(ROOTTEST_HOME)/scripts/Rules.mk\n\n#include $(ROOTTEST_HOME)/scripts/Reflex.mk\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#GENREFLEXCXXFLAGS += --interpreteronly -I ./ -I CoralBase\n\n#CXXFLAGS += -I ./ -I CoralBase \n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#execLibLoad.log: PyCool_rflx.$(ObjSuf)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "root/meta/genreflex/ROOT-5881/Makefile" : {
      "ObjectId" : "86320c9511b9a876932195218be05b74f466b8c7",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Disable until a portable and minimal way to express the test is found\n\n# indeed this formulation would fail on windows and actually fail on OSx10.8\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DICTNAME=stringIO_allClasses_rflx.cpp\n\n# OFILENAME=stringTree.root\n\n# LIBBASENAME=StringDict\n\n# LIBNAME=lib$(LIBBASENAME).$(DllSuf)\n\n# EXENAME=writeTree\n\n# CXXCOMPILER=$(shell root-config --cxx)\n\n# \n\n# CLEAN_TARGETS += *.log *.so *.d *pcm *rflx* dummy*.C *.root *success $(OFILENAME) $(EXENAME)\n\n# TEST_TARGETS += execstringI\n\n# \n\n# ifeq ($(strip $(ROOTTEST_HOME)),)\n\n#   export ROOTTEST_HOME := $(shell git rev-parse --show-toplevel)/\n\n#   ifeq ($(strip $(ROOTTEST_HOME)),)\n\n#      export ROOTTEST_HOME := $(shell expr $(CURDIR) : '\\(.*/roottest/\\)')\n\n#   endif\n\n#   ifeq ($(strip $(ROOTTEST_HOME)),)\n\n#      $(error The head of roottest was not found.  Set ROOTTEST_HOME)\n\n#   endif\n\n# endif\n\n# \n\n# include $(ROOTTEST_HOME)/scripts/Rules.mk\n\n# include $(ROOTTEST_HOME)/scripts/Reflex.mk\n\n# \n\n# #$(LIBNAME): $(DICTNAME)\n\n# #\t$(CMDECHO) $(CXXCOMPILER) -shared -fPIC $(shell root-config --cflags) $(DICTNAME) -o $@ >$@.log 2>&1\n\n# # Strategy from root/io/alloc/Makefile\n\n# $(DICTNAME) : stringIO_allClasses.h stringIO_allClasses_selection.xml $(ROOTCINT)\n\n#\t$(CMDECHO) genreflex stringIO_allClasses -s stringIO_allClasses_selection.xml\n\n#\n\n# dictObject.$(ObjSuf): $(DICTNAME)\n\n#\n\n# $(LIBNAME): dictObject.$(ObjSuf)\n\n#\t$(BuildFromObjs)\n\n#\n\n# # We need a way to build the exe in a portable way\n\n# $(EXENAME): $(LIBNAME)\n\n# \t$(CMDECHO) $(CXXCOMPILER) $@.cpp -fPIC -o $@ $(shell root-config --cflags --libs) -l $(LIBBASENAME) -L ./ > $@_compilation.log 2>&1\n\n# \n\n# $(OFILENAME): $(EXENAME)\n\n# \t$(CMDECHO) ./$(EXENAME) > $(EXENAME)_execution.log 2>&1\n\n# \n\n# execstringI.log: $(OFILENAME)",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "root/meta/genreflex/ROOT-5952/CMakeLists.txt" : {
      "ObjectId" : "a5d5439a39e02d88863b4b30b1d764b09c671efb",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/genreflex/ROOT-5952/Makefile" : {
      "ObjectId" : "fe4003de80f976eacc70f7e45fe102e1d13c1e6d",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/meta/genreflex/ROOT-6640/CMakeLists.txt" : {
      "ObjectId" : "370f1d52e42a48df7886de0463c51f791b102a35",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/genreflex/ROOT-6640/Makefile" : {
      "ObjectId" : "332c5a5b00e6bb2c421c607970a437e970ef1b54",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "root/meta/genreflex/ROOT-6796/CMakeLists.txt" : {
      "ObjectId" : "3b67b6a8f83b9a2cf1749670c0b6e2bb01b4fa78",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/genreflex/ROOT-6796/Makefile" : {
      "ObjectId" : "e738478f6717f06103aef9d390263be9eafb66da",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/meta/genreflex/TClass/CMakeLists.txt" : {
      "ObjectId" : "0a0138f986cc04b378f5c0efd1bfcbac23def187",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/genreflex/TClass/Makefile" : {
      "ObjectId" : "47fd498a024b6a7eab1b94b515929db7e4974c2f",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Basic test -------------------------------------------------------------------\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# End of Basic test ------------------------------------------------------------\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "root/meta/genreflex/XMLParsing/CMakeLists.txt" : {
      "ObjectId" : "9e703f0ee418127591fff766f96956d6b93e5ef2",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add tests for XML parsing. The files are divided in bunches of 30\n\n# selection xmls. One bunch is analysed per test.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/meta/genreflex/XMLParsing/Makefile" : {
      "ObjectId" : "fc169b8857cea0b6914accced68b81578fa1a0c1",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which\n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is\n\n#  exported to eliminate the overhead of findding the path again during\n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by\n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.\n\n# Issues:  This algorithm will fail if a makefile is called from outside the\n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from\n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "root/meta/genreflex/headersDuplicateKeys/CMakeLists.txt" : {
      "ObjectId" : "ce1346f4230ed0a23ecdfb91a86ac9f4f5c3114e",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/genreflex/iorules/CMakeLists.txt" : {
      "ObjectId" : "7a49cdd8436eda920c5b459e1601275f0f694a14",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/genreflex/iorules/Makefile" : {
      "ObjectId" : "09800ea6babcd3ee2d1fba622f8f910f0d3fa9fb",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/meta/genreflex/noStreamer_noInputOperator/CMakeLists.txt" : {
      "ObjectId" : "b0acbbd71d0c59a98c46a280d9a391c2542f750f",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n# noStreamer tests\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#   invalid noStreamer attribute\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#   custom streamer\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#   generated streamer\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n# noInputOperator tests\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#   invalid noInputOperator attribute\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#   noInputOperator = true\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#   noInputOperator = false\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "root/meta/genreflex/noStreamer_noInputOperator/Makefile" : {
      "ObjectId" : "c0028c1dd4227b1fe6b4a9702c5db02449e6eed5",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Create the dict source\n\n# execdummy.log:  foo_rflx.cpp\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/meta/genreflex/rootPCMs/CMakeLists.txt" : {
      "ObjectId" : "cd50077ebec7898cd543c7e0251b73a1b3ce208e",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/genreflex/rootPCMs/Makefile" : {
      "ObjectId" : "ff3ac85e3745809936c9ff7f9a2114b3935e09bb",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/meta/iotypeioname/CMakeLists.txt" : {
      "ObjectId" : "c77a80a8a1d90844ae145cc1d89ff1bfa0434f80",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---Copy from source to binary some of the files\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/meta/iotypeioname/Makefile" : {
      "ObjectId" : "de2d0320cb343c997d7e2e0c09150be1fe2a91bf",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Here we use true since diff returns 1 if the files are different. Here we expect them to be different!\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/meta/loadAllLibs/CMakeLists.txt" : {
      "ObjectId" : "bc936c7ebf54243aecfa77926c9e875c0d4637dc",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/loadAllLibs/Makefile" : {
      "ObjectId" : "75a95765dccfaa5d3418fd01021e9d94e9dfe8f4",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# TEST_TARGETS += cleanloadAllLibs\n\n#execloadAllLibsAZ execloadAllLibsZA\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# runloadAllLibs: libtest_dictrflx.$(DllSuf)\n\n#\n\n# cleanloadAllLibs.log: runloadAllLibs\n\n# \t$(CMDECHO) cat loadAllLibs.log|grep -v Wouter|grep -v NIKHEF|grep -v sourceforge\n\n#\n\n# cleanloadAllLibs: cleanloadAllLibs.log\n\n# \t$(TestDiff)\n\n#\n\n# #execloadAllLibsAZ.log: libdummy_dictrflx.$(DllSuf)\n\n#\n\n# #cleanloadAllLibsAZ.log: execloadAllLibsAZ.log\n\n# #\t$(CMDECHO) cat execloadAllLibsAZ.log|grep -v Wouter|grep -v NIKHEF|grep -v sourceforge\n\n#\n\n# #cleanloadAllLibsAZ: cleanloadAllLibsAZ.log\n\n# #\t$(TestDiff)\n\n#\n\n# #cleanloadAllLibsZA.log: execloadAllLibsZA.log\n\n# #\t$(CMDECHO) cat execloadAllLibsZA.log|grep -v Wouter|grep -v NIKHEF|grep -v sourceforge\n\n#\n\n# #cleanloadAllLibsZA: cleanloadAllLibsZA.log\n\n# #\t$(TestDiff)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "root/meta/method/CMakeLists.txt" : {
      "ObjectId" : "05f396b409ae361f578f3c481bcba0978a903e70",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/method/Makefile" : {
      "ObjectId" : "995a0435ae695b315eaf798e56b6e8d946a9c2e2",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/meta/method/offset/CMakeLists.txt" : {
      "ObjectId" : "3274773e7103012522f892d0674a4eafe9402b12",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/method/offset/Makefile" : {
      "ObjectId" : "7c15f788fc70efe2dd826fc72a0f5dc49a91d178",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/meta/naming/CMakeLists.txt" : {
      "ObjectId" : "9f847b599862fe9da9083d084b3a5e7c601fef19",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/naming/Makefile" : {
      "ObjectId" : "4d578a968b20ffe814c96c24d405aa7f368fcda8",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "root/meta/rootcling-modules/CMakeLists.txt" : {
      "ObjectId" : "ec44fecfabc789a448e4aefc507a46b608911f44",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/rootcling-modules/module-dep-order/CMakeLists.txt" : {
      "ObjectId" : "9ee0a15d55db8ca94da3e0858e0f3f05989b16c3",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/rootcling/CMakeLists.txt" : {
      "ObjectId" : "5135d8ddbd38dfcfafe2007c5b49169546b4050a",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# ROOT-9335\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ROOT-7765\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ROOT-8492\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "root/meta/rootcling/Makefile" : {
      "ObjectId" : "e70c1c27322d509cdef3edf71dc063d865f92e9c",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# %ROOTTEST-duration%:9\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/meta/rootcling/ROOT-7695/CMakeLists.txt" : {
      "ObjectId" : "336b149c53f72138cbcd74dade21c7764b0a4564",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/rootcling/ROOT-7695/Makefile" : {
      "ObjectId" : "4e06190825f17a407149bf5efcde12f55e69b3a0",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Create the dict source\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/meta/rootmap/CMakeLists.txt" : {
      "ObjectId" : "52c7eed82fc0b3edd8d279006eac6d26f06607d8",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/rootmap/Makefile" : {
      "ObjectId" : "8af424f781145be09fd2d1ff59eddf1fd627b87e",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/meta/tclass/CMakeLists.txt" : {
      "ObjectId" : "1dca629fae6cf66827e56a9f9a7591f33d673ed6",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/tclass/Makefile" : {
      "ObjectId" : "4bb3cce60e2f2b69277230ad2648718091700fe4",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "root/meta/tclass/regression/CMakeLists.txt" : {
      "ObjectId" : "89a629178bd84c39c09bba8665fece89d764b383",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/meta/tclass/regression/Makefile" : {
      "ObjectId" : "66b05e73fe7bf5323da5326749f7366818c7d436",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/meta/unit/CMakeLists.txt" : {
      "ObjectId" : "5deb3a9edb047efb50ff4f4668158d7ab134817d",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/multicore/CMakeLists.txt" : {
      "ObjectId" : "57d4a2a4cdfa930e3d170fc26d9189642663a6a8",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Workaround (k)ubuntu bug: runtime issue when using pthread and gcc48\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ROOT-8850\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Workaround for gcc 5.x (x<4) bug in optimized mode\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ROOTTEST_GENERATE_EXECUTABLE(tformula tformula.cpp LIBRARIES Core Hist Thread)\n\n#\n\n# ROOTTEST_ADD_TEST(tformula\n\n#                   EXEC ./tformula\n\n#                   DEPENDS ${GENERATE_EXECUTABLE_TEST})\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Re-Enabled Disable test: see ROOT-7158\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "### Keep this test for debugging purposes: even if ttree_read_imt makes it redundant, it can be useful to\n\n### debug issues that are hard to reproduce locally but can eventually be observed on the test machines.\n\n#   ROOTTEST_GENERATE_EXECUTABLE(ttree_read_imt_allpar ttree_read_imt_allpar.cpp LIBRARIES Core Thread Tree)\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#   ROOTTEST_ADD_TEST(ttree_read_imt_allpar\n\n#                     COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/ttree_read_imt_allpar.sh\n\n#                     FAILREGEX \"ERROR\"\n\n#                     OUTREF ttree_read_imt_allpar.ref\n\n#                     DEPENDS ${GENERATE_EXECUTABLE_TEST})\n",
        "Line" : 196,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/multicore/Makefile" : {
      "ObjectId" : "fcfc5a09df6fd2af076d6e09d79d0cb46367d962",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/rint/CMakeLists.txt" : {
      "ObjectId" : "1c8613bdf9ff490f49353fc973c9f77ecb617f8b",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/rint/Makefile" : {
      "ObjectId" : "476ca4eb0989333009b9a1f73dd98f1327d619fd",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/roofitstats/CMakeLists.txt" : {
      "ObjectId" : "7c81287c2c614b52eebf9592b4f0a6eb6aae9d65",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/selector/CMakeLists.txt" : {
      "ObjectId" : "9a26f3f797c4400008f8fc5ba2e2a5728739c7ff",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/selector/Makefile" : {
      "ObjectId" : "f88173256b0081ea6a16b196164dba5c7db31ae3",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# %ROOTTEST-duration%:0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/selector/simple/CMakeLists.txt" : {
      "ObjectId" : "09b1dfc96ac7f98aaf81dde9449f92193b862dea",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/selector/simple/Makefile" : {
      "ObjectId" : "9121463fa5c2c0f9c952e211e7567711f54c392d",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n# from runsometest.C\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ..... | sed -s/$(CURDIR)//g > testLoadingSelector.log\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "root/stress/Makefile" : {
      "ObjectId" : "47b356e38fc626abf65af409447a8393e3721e0c",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# %ROOTTEST-duration%:5\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# we don't run stressHepix for now; it's simply calling all the other stress tests\n\n# anyway, making it and the directly called ones stumble over their feet.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#### disabled tests\n\n# Run all tests in interpreted mode except for those that CINT\n\n# cannot interpret - these are run in compiled mode instead.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Fast means all compiled and skipping the 'long' test like TMVA\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# run all compiled except for those that are run interpreted:\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ...and those that are known to fail: none!\n\n# STRESSTESTSCOMP_VETO := \n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Every tests consists of running the test in compiled and\n\n# interpreted mode\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# .log: output of running the test\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# rule for compiled tests\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# rule for interpreted tests\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# tests to skip\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# tag file to ensure that all files have been copied from $(ROOT_LOC)/test\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# To run a compiled test we need the binary, then we call it using\n\n# $(CALLROOTEXE) so it works with valgrind.\n\n# $(STRESSFLAGS) can be a target-specific variable holding optional\n\n# arguments to the test; see below for stress-ctest.log\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# support for perftrack and valgrind is 'broken' when FixCling is set.\n\n# and CALLROOTEXE has too much stuff (-e ....)\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# To run an interpreted test we need the source + includes. We don't know\n\n# the exact dependencies, to we trust the binary: if we have it we have\n\n# all that CINT needs to interpret the source in test/.\n\n# $(STRESSFLAGS) can be a target-specific variable holding optional\n\n# arguments to the test; see below for stress-itest.log\n\n# Add %-ctest.log as dependency so they don't stumble over one\n\n# another's feet (e.g. by both interpreted and compiled version\n\n# opening the same file)\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# If we need a file in test/ we just copy all files from $(ROOT_LOC)/test.\n\n# Once we have them in test/, we run make in there.\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# make sure $@ is newer than $(STRESSFILESCOPIEDTAG)\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Copy files from $(ROOT_LOC)/test to ./test/\n\n# so we don't build within $(ROOT_LOC)\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# returns a TFile*, so root.exe's return code is not very helpful\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#### Extra parameters for some tests ####\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#### Extra dependencies for some tests ####\n",
        "Line" : 236,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# In principle, binaries' dependency on libEvent are handled by test/Makefile.\n\n# But we have several \"smart\" stress tests (e.g. stress) that invoke make themselves\n\n# to generate libEvent, causing make stepping on its own feet. Instead, make sure\n\n# libEvent exists before running *any* test.\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24,
      "Errorlog" : "line 75:61 token recognition error at: '\\1'\n"
    },
    "root/tree/CMakeLists.txt" : {
      "ObjectId" : "f300ab28419e042f6860662ea3242c1eed8567af",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/tree/Makefile" : {
      "ObjectId" : "18e83eb13d8df7d082492254df421bc88cd12a09",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# %ROOTTEST-duration%:3\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/tree/addresses/CMakeLists.txt" : {
      "ObjectId" : "e22041d8e3fd95189318c07ce170bd1846729958",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/tree/addresses/Makefile" : {
      "ObjectId" : "b30919312f59786eae4675bb2f92e115131cb3aa",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing \n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust the location of Rules.mk as needed.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "root/tree/addresses/converterIssues/Makefile" : {
      "ObjectId" : "11a853ef2449b675be5812c9cb61534890eb75d6",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/tree/array/CMakeLists.txt" : {
      "ObjectId" : "182629f9610bba9ceaf6b6dae6974ddd07ce0c49",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/tree/array/Makefile" : {
      "ObjectId" : "57cd3a39adccce5ac544e5f97f7db8c224af2c6c",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust the location of Rules.mk as needed.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "root/tree/basket/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/tree/basket/Makefile" : {
      "ObjectId" : "47a3f3916205a8548597ab6958355b67503f7388",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/tree/branches/CMakeLists.txt" : {
      "ObjectId" : "374514855ca45963ba6a3318fc418c440797fef7",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/tree/branches/Makefile" : {
      "ObjectId" : "d87c3791ced32f193d17c9b6bd9723270f8956fd",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/tree/cache/CMakeLists.txt" : {
      "ObjectId" : "7753fe5ab353fff6b45f0795c7d99c4b96286469",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/tree/cache/Makefile" : {
      "ObjectId" : "42002f8e671561e557edd69d99244d29f7bb7d96",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#execperfstattest_cxx.$(DllSuf): ./libEvent.$(DllSuf)\n\n#execperfstattest_cxx.$(DllSuf): CALLROOTEXEBUILD += -e 'gSystem->Load(\"libEvent\");'\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "root/tree/chain/CMakeLists.txt" : {
      "ObjectId" : "182629f9610bba9ceaf6b6dae6974ddd07ce0c49",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/tree/chain/Makefile" : {
      "ObjectId" : "7f06cfbccfceb7d393e137f2e4ccf490af53c158",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/tree/cloning/CMakeLists.txt" : {
      "ObjectId" : "a4dd5a5cf2c06d87bef7574e6de9380d681a7beb",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generating dataset from roottest-treeformula-event-make test\n\n# FIXME: it will be nice to move roottest-treeformula-event to CMake and add it as dependency\n\n# To fix runtime_cxxmodules, we need to use already build artefacts.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/tree/cloning/Makefile" : {
      "ObjectId" : "f434ee332e1445f5e5363b5322fabfb1ebe34d56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust the location of Rules.mk as needed.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "root/tree/entrylist/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/tree/entrylist/Makefile" : {
      "ObjectId" : "8b5e8267728055da076a4d163bb0552b4acf5fe1",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "root/tree/evolution/CMakeLists.txt" : {
      "ObjectId" : "374514855ca45963ba6a3318fc418c440797fef7",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/tree/evolution/Makefile" : {
      "ObjectId" : "b1842618db9d5fdb7b32e8b143cb682171b54722",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# cloning.root: CALLROOTEXE += -e 'gROOT->ProcessLine(\".L cloningOne.C+\");'\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "root/tree/evolution/split/Makefile" : {
      "ObjectId" : "b985ee48e6f38510037402394b56889fad0d3495",
      "LastModified" : "2019-02-13T18:40:19Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/tree/fastcloning/CMakeLists.txt" : {
      "ObjectId" : "d9c3f7039138444513aa01fd5a4c42ed5d014b0f",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# 32 bits\n",
        "Line" : 3,
        "CharPositionInLine" : 6
      },
      "1" : {
        "Text" : "# 64 bits\n",
        "Line" : 8,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 2
    },
    "root/tree/fastcloningeventtree/CMakeLists.txt" : {
      "ObjectId" : "da069360f22a49b6954c098660376a3e225e8a78",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Generating dataset from roottest-treeformula-event-make test\n\n# FIXME: it will be nice to move roottest-treeformula-event to CMake and add it as dependency\n\n# To fix runtime_cxxmodules, we need to use already build artefacts.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/tree/fastcloningeventtree/Makefile" : {
      "ObjectId" : "4099f560c0b0bef597eec76352e9a54c3cc43f63",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# to prevent any potential re-build by -f $(EVENTDIR)/dt_Makefile\n",
        "Line" : 35,
        "CharPositionInLine" : 40
      },
      "2" : {
        "Text" : "#dt_MakeRef.C dt_DrawTest.C libEvent.$(DllSuf) Event.h Event.new.split9.root\n\n#        @$(CALLROOTEXE) -l -b -q 'dt_MakeRef.C(\"Event.new.split9.root\",0);' $(OUTPUT) && \\\n#        echo \"$@ made\"\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TChain::Merge does not currently work with old.split.root\n\n# Event.old.split.root\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\t$(CMDECHO) $(CALLROOTEXE) -q -b -l 'mtrans.C(\"Event.new.split9.root\")' && touch $@\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "root/tree/friend/CMakeLists.txt" : {
      "ObjectId" : "374514855ca45963ba6a3318fc418c440797fef7",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/tree/friend/Makefile" : {
      "ObjectId" : "1e79f5408b6bb267879e50a90d6b6dd7c7cc55f2",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\t$(CMDECHO) $(CALLROOTEXE) -q -b -l Run.C > run.out 2>&1\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/tree/index/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/tree/index/Makefile" : {
      "ObjectId" : "302bf4726ceff76a527b18e4de440e69deaab6e4",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/tree/interpreted/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/tree/interpreted/Makefile" : {
      "ObjectId" : "e2f30c05f0314b6f1c55b6626c94cddc9940ef71",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust the location of Rules.mk as needed.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n# from runsometest.C\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "root/tree/leaves/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/tree/leaves/Makefile" : {
      "ObjectId" : "9f241e80a92fc227131cb67deff33ac707071d14",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/tree/query/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/tree/query/Makefile" : {
      "ObjectId" : "a07fa38d547a61fd6b951312dfb51adb72c63b02",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/tree/readcin/CMakeLists.txt" : {
      "ObjectId" : "8e62534bccdd1ca2acefe0ac46ea37dc6b373963",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/tree/readcin/Makefile" : {
      "ObjectId" : "cf232ebb38f9170e7bbb56bf35f0a7addddcca49",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/tree/reader/CMakeLists.txt" : {
      "ObjectId" : "5678ef29932d712c9233ca0d8e87c5819a68857d",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ROOT-10046\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ROOT-9757\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "root/tree/reader/Makefile" : {
      "ObjectId" : "79661f79f9e58da2b08c6185b1c49948d75527f4",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/tree/readfile/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/tree/readfile/Makefile" : {
      "ObjectId" : "367644a16f6f1775abf563d9227128241ae9bbd4",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/tree/selector/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/tree/selector/Makefile" : {
      "ObjectId" : "30045db29bcad51163bf774b787f213537281c56",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/tree/selectorreader/CMakeLists.txt" : {
      "ObjectId" : "e022f2120292b191ce19af7fb0ef6b3652af13c6",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#execute_process(COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_CURRENT_BINARY_DIR}/generated_selectors)\n\n#execute_process(COMMAND ${CMAKE_COMMAND} -E create_symlink ${CMAKE_CURRENT_SOURCE_DIR}/trees ${CMAKE_CURRENT_BINARY_DIR}/trees)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#ROOTTEST_COMPILE_MACRO(SampleClasses.h)\n\n#ROOTTEST_ADD_TEST(Classes\n\n#                  COPY_TO_BUILDDIR  SampleClasses.h\n\n#                  MACRO runClasses.C\n\n#                  OUTREF Classes.ref\n\n#                  DEPENDS ${COMPILE_MACRO_TEST})\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# It relies very heavily that these tests are run in the source directory\n\n# so using the old method....\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "root/tree/selectorreader/Makefile" : {
      "ObjectId" : "958eab72d38505fd128fd715580207ec41b0f80e",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which\n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is\n\n#  exported to eliminate the overhead of findding the path again during\n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by\n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.\n\n# Issues:  This algorithm will fail if a makefile is called from outside the\n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from\n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#Simple.log: SampleClasses_h.$(DllSuf)\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "root/tree/split/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/tree/split/Makefile" : {
      "ObjectId" : "9f8cafeaab7fc8db5623b15d7853a6a16bca8920",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust the location of Rules.mk as needed.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "root/tree/stl/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/tree/stl/Makefile" : {
      "ObjectId" : "a17fa005a1b728bfabf8b421885053915dd0ac8d",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "root/tree/string/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/tree/string/Makefile" : {
      "ObjectId" : "ae6acd46bf95f265be5140a02ce6401961b33bb3",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/tree/tcut/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/tree/tcut/Makefile" : {
      "ObjectId" : "c0beb252318622da7b1f746440444f8b7c3d9ba9",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/tree/treeproblem/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/tree/treeproblem/Makefile" : {
      "ObjectId" : "79d3299a38f8eecafa6446f8a585fc789aa85059",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#all:\tFoo.$(DllSuf) reader$(ExeSuf) writer$(ExeSuf)\n\n#test: check\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Foo.$(DllSuf): Foo.$(ObjSuf)\n\n#\t$(BuildFromObjs)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\tg++ -shared -Wl,-soname,Foo.$(DllSuf) -o Foo.$(DllSuf) Foo.$(ObjSuf) FooDict.$(ObjSuf)\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#g++ -o $@ reader.$(ObjSuf) `root-config --libs` \\\n#\t-Wl,-rpath,`root-config --libdir`\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "root/treedraw/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/treedraw/Makefile" : {
      "ObjectId" : "e78a1f4b712e9185633a65918d51a7e293f5a7c4",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# %ROOTTEST-duration%:0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#The test\n\n#   simple\n\n# does not work because the poscript generated on windows and on linux\n\n# are slightly different due to font differences.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "root/treeformula/CMakeLists.txt" : {
      "ObjectId" : "9a26f3f797c4400008f8fc5ba2e2a5728739c7ff",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "root/treeformula/Makefile" : {
      "ObjectId" : "df621b6fd734cd887dea4b97ecedea8225428801",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# %ROOTTEST-duration%:2\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/treeformula/array/CMakeLists.txt" : {
      "ObjectId" : "374514855ca45963ba6a3318fc418c440797fef7",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/treeformula/array/Makefile" : {
      "ObjectId" : "d24e10aa11ed954d2ce2c498907e78b53ca6f81d",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust the location of Rules.mk as needed.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#force re-execution in the fail case\n",
        "Line" : 24,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 5
    },
    "root/treeformula/casting/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/treeformula/casting/Makefile" : {
      "ObjectId" : "bafefbcb467c0d14301ec2ecbcdee906a66ab880",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/treeformula/clones/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/treeformula/clones/Makefile" : {
      "ObjectId" : "a93754f0344a7ea1e5572b915d6c2e015d151c25",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust the location of Rules.mk as needed.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# one of the reason of the failure is the fact that the first\t\n\n# clones array is empty!\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "root/treeformula/depth/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/treeformula/depth/Makefile" : {
      "ObjectId" : "d01d89c86bad5b643715248f07faf68a7273cbba",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "root/treeformula/event/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/treeformula/event/Makefile" : {
      "ObjectId" : "74c8fd9f9cab8f4cb0e035998ce31595f23a8a21",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#.SUFFIXES: .cxx .o .so\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#all: bigeventTest\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\t$(CMDECHO)echo Warning this is due to the problem with loading libraries with stl containers after opening a file\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "root/treeformula/evolution/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/treeformula/evolution/Makefile" : {
      "ObjectId" : "b55040047b9d63f6616a57e8a452a5f901896297",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/treeformula/formulaio/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/treeformula/formulaio/Makefile" : {
      "ObjectId" : "165f8b8cec6b07f699dac957b2d4db944dc89564",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "root/treeformula/function/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/treeformula/function/Makefile" : {
      "ObjectId" : "84d015713d258823480714134b35d11c2eea97e7",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust the location of Rules.mk as needed.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "root/treeformula/morrison/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/treeformula/morrison/Makefile" : {
      "ObjectId" : "59b6b11eab6b5f6a04c1b08dd027f0f4b08cfbb7",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#ArraySyntax: Event.root\n\n#\t@echo built\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#main$(ExeSuf) $(ROOT_LOC)/lib/libTreePlayer.$(DllSuf)\n\n#\t$(CMDECHO) ./main\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "root/treeformula/ntuple/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/treeformula/ntuple/Makefile" : {
      "ObjectId" : "b1ca47bb97d2e4e6eace73ab3be323e34af8c66c",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/treeformula/operator/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/treeformula/operator/Makefile" : {
      "ObjectId" : "998b2d9831b4f2614b813a29d44b6c003ac2ff88",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/treeformula/parse/CMakeLists.txt" : {
      "ObjectId" : "e22041d8e3fd95189318c07ce170bd1846729958",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/treeformula/parse/Makefile" : {
      "ObjectId" : "157c99c301d6661de1d7b4f181b58253e8f188b8",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust the location of Rules.mk as needed.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#BoolOrder.log: runBoolOrder.C BoolOrder.ref $(ROOT_LOC)/lib/libTreePlayer.$(LibSuf)\n\n#\t$(CMDECHO) $(CALLROOTEXE) -q -b -l runBoolOrder.C 2>&1 | grep -v -e LorentzVector -e TVector3 > $@\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "root/treeformula/references/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/treeformula/references/Makefile" : {
      "ObjectId" : "814e8dbb44f01e97ee37fb25aadbd935e7130e49",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# General indication for the size of the files\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use compression or not\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For writing of the files\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "root/treeformula/retobj/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/treeformula/retobj/Makefile" : {
      "ObjectId" : "870d2040b1e13920e16b83b525ea1654a11b8266",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#retobjTest: Event.new.split0.root\n\n#\t$(CMDECHO)$(CALLROOTEXE) -q -l -b run.C > result 2>&1 && diff -bw result result.good\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\t$(CMDECHO)echo creating Event.new.split0.root\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "root/treeformula/scan/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/treeformula/scan/Makefile" : {
      "ObjectId" : "0f58aa7baf215aeacbcb057abca2bb743cc9f8a1",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/treeformula/schemaEvolution/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/treeformula/schemaEvolution/Makefile" : {
      "ObjectId" : "033c14f8491e5e16f7ace023c10f93717b60ea66",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefile.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be delete by clean:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Set the list of target to make while testing\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# adjust the location of Rules.mk as needed.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#debug := $(shell echo $(LOGFILES_TEST) 1>&2)\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\t$(CMDECHO)echo \"Generating dictionary $@...\"\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\t$(CMDECHO)echo \"Generating dictionary $@...\"\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\t\t$(CMDECHO)echo \"$@ done\"\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#\t\t$(CMDECHO)echo \"$@ done\"\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# We need to make both the .dylib and the .so\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\t\t$(CMDECHO)echo \"$@ done\"\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\t$(CMDECHO)echo \"$@ done\"\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12,
      "Errorlog" : "line 50:51 token recognition error at: '\\1'\nline 62:51 token recognition error at: '\\1'\n"
    },
    "root/treeformula/stl/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/treeformula/stl/Makefile" : {
      "ObjectId" : "dc441663b7605273331bdbe02bcf4354dfeb66ff",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the only target added.  If\n\n#  the name of the target is changed in the rules then the name should be changed accordingly in\n\n#  this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#stlBrowse\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Searched for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the ROOTTEST_HOME\n\n#  variable for use by the SUBDIRECTORIES variable and is exported to eliminate the \n\n#  overhead of findding the path again during recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by 'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from the home\n\n#  directory.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to unix 'diff' with some options passed to it in Rules.mk.\n\n#  To run a diff and ignore whitespacing the -w options should be specified before the files are\n\n#  listed.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "root/treeformula/string/CMakeLists.txt" : {
      "ObjectId" : "227297c2402a247bf7658d13913e55a628cf6f56",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/treeformula/string/Makefile" : {
      "ObjectId" : "acbcf2b2fd329d524c47f69c099d8bac632fb377",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/treeformula/sync/CMakeLists.txt" : {
      "ObjectId" : "460c755834d52f4d9e6b17bd0937b489c16de6ac",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/treeformula/sync/Makefile" : {
      "ObjectId" : "e36b3291b72ea2adc1de8ffbf96922c0727aa71b",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "root/treeproxy/CMakeLists.txt" : {
      "ObjectId" : "374514855ca45963ba6a3318fc418c440797fef7",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n#\n\n# Placeholder file to translate the tests to the new CTest system. Meanwhile we\n\n# define a CTest test that calls 'make' in ${CMAKE_CURRENT_SOURCE_DIR}\n\n#\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "root/treeproxy/Makefile" : {
      "ObjectId" : "b0835ddfb864171a1d0ecc064ae2afdf420be50f",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# %ROOTTEST-duration%:8\n\n# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# see include file in createvaldim3.C\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#vectorintSel_h.$(DllSuf): vectorintSel.h dude.h dude.C vec.root\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#vectorintEmuSel_h.$(DllSuf): dude.h dude.cxx\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "root/treeproxy/split/Makefile" : {
      "ObjectId" : "f501f65bae74975e4b64c88d34f750288015923e",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/treeproxy/stlvec/Makefile" : {
      "ObjectId" : "6bdb5dcfeccb5a0f9d1f15800784f9260d7c20bf",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "root/tutorials/Makefile" : {
      "ObjectId" : "45b3e5a69f40f80d04fcd445064bdc0cf365ac0e",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# %ROOTTEST-duration%:2\n\n# Run ROOTSYS/tutorials. Don't check for valid output, just\n\n# check that CINT can run it without (unhandled) error.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the list of files to be deleted by clean\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This is a default value, it can be over-ridden\n\n# by passing FIXCLING= as a command line argument.\n\n#\n\n# So, fixing cling is on by default and is disabled\n\n# if FIXCLING is explicitly set to empty or is set\n\n# to: no\n\n# \n\n# We need to repeat this here (in addition to Rules.mk)\n\n# because we need it before we can include Rules.mk.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# don't run these, they will fail and need to be fixed.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# I believe these fail due to CINT bugs:\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# exlude rose_image until we know how to set the iconpath in batch\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# exlude some eve tutorials\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# get the list of macros to run\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# hsimple must be first\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# stubs to execute the tutorial macro, preventing ROOT returning\n\n# non-zero return codes even if no error was encountered\n\n# (value of final expression)\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# TMVA tutorials have mutual dependencies:\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#$(addsuffix .log,$(filter tmva/%,$(TUTORIALSTESTS))): weights/TMVARegression_BDTG.weights.xml\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#weights/TMVARegression_BDTG.weights.xml: $(TUTDIR)/tmva/weights/TMVARegression_BDTG.weights.xml\n\n#\t$(CMDECHO) mkdir -p $(dir $@)\n\n#\t$(CMDECHO) cp -f $< $@\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16
    },
    "scripts/CMakeLists.txt" : {
      "ObjectId" : "f354632dcf28dfed0327f4958ca12c4dc42f00a6",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "scripts/Makefile" : {
      "ObjectId" : "f9c86fdd06aa9554a86d5df87cb1449819a36e4b",
      "LastModified" : "2019-04-16T20:26:25Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# This is a template for all makefiles.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Set the list of files to be deleted by clean (Targets can also be specified).:\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set the list of target to make while testing.  By default, mytest is the\n\n# only target added.  If the name of the target is changed in the rules then\n\n# the name should be changed accordingly in this list.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for Rules.mk in roottest/scripts\n\n# Algorithm:  Find the current working directory and remove everything after\n\n#  '*roottest/'.  Append the path for Rules.mk from within roottest, which \n\n#  should be 'scripts/Rules.mk'.  The roottest path is saved in the\n\n#  ROOTTEST_HOME variable for use by the SUBDIRECTORIES variable and is \n\n#  exported to eliminate the overhead of findding the path again during \n\n#  recursive calls of gmake.\n\n# Since all makefiles should be under roottest or one of its\n\n#  subdirectories and all recursions of gmake are called by \n\n#    'cd [DIR]; gmake ...'\n\n#  this algorithm should not fail in finding /roottest/ in the\n\n#  current working directory.  \n\n# Issues:  This algorithm will fail if a makefile is called from outside the \n\n#  roottest folder, as in executing 'gmake -f ~/roottest/Makefile' from \n\n#  the home directory.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The name of this target should be changed according to the test being run.  Any name changes\n\n#  should also be reflected in the TEST_TARGETS variable above.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Outputs a message if the FAIL variable is null\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Remember that sometest.log can be made automatically from\n\n#  from runsometest.C\n\n# This target attempts to create a log file (which should be the output of running the test), and\n\n#  compares its output with a prebuilt reference file.  The reference file should be copied from\n\n#  the log files produced during what is considered a successful run of the test.  The testWithDiff\n\n#  files should be renamed according to the test being run.\n\n# By default the TestDiff variable is set to compare the .log and .ref files\n\n# To run a diff and ignore whitespacing use $(TestDiffW)\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    }
  },
  "FileTypes" : {
    "CMAKE" : 263,
    "MAKEFILE" : 252
  },
  "ElapsedTime" : 5584
}