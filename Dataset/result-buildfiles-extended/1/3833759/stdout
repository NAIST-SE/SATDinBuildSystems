{
  "Repository" : "3833759",
  "Revision" : "HEAD",
  "ObjectId" : "ffe4293be039b6de6c8a1a37e26dee410595e552",
  "CommitTime" : "2019-03-23T00:33:08Z",
  "Files" : {
    "CMake/FindDCMTK.cmake" : {
      "ObjectId" : "8749ce3ee46a98ca5fe980717319baab95816b1d",
      "LastModified" : "2013-09-30T00:04:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - find DCMTK libraries and applications\n\n#\n\n#  DCMTK_INCLUDE_DIRS   - Directories to include to use DCMTK\n\n#  DCMTK_LIBRARIES     - Files to link against to use DCMTK\n\n#  DCMTK_FOUND         - If false, don't try to use DCMTK\n\n#  DCMTK_DIR           - (optional) Source directory for DCMTK\n\n#\n\n# DCMTK_DIR can be used to make it simpler to find the various include\n\n# directories and compiled libraries if you've just compiled it in the\n\n# source tree. Just set it to the root of the tree where you extracted\n\n# the source (default to /usr/include/dcmtk/)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2000-2009 Kitware, Inc., Insight Software Consortium.\n\n# Copyright 2009-2010 Mathieu Malaterre <mathieu.malaterre@gmail.com>\n\n# Copyright 2010 Thomas Sondergaard <ts@medical-insight.com>\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n# Redistributions of source code must retain the above copyright notice, this\n\n# list of conditions and the following disclaimer.\n\n# Redistributions in binary form must reproduce the above copyright notice,\n\n# this list of conditions and the following disclaimer in the documentation\n\n# and/or other materials provided with the distribution.\n\n# Neither the names of Kitware, Inc., the Insight Software Consortium, nor the\n\n# names of their contributors may be used to endorse or promote products\n\n# derived from this software without specific prior written permission.\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n\n#\n\n# Written for VXL by Amitha Perera.\n\n# Upgraded for GDCM by Mathieu Malaterre.\n\n# Modified for EasyViz by Thomas Sondergaard.\n\n# Upgraded for DCMTK 3.6 by David Gobbi\n\n#\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Compatibility: This variable is deprecated\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "CMake/vtkWrapHierarchy.cmake" : {
      "ObjectId" : "512cbd37bd668dfd4b6411d53764e342ba9db56e",
      "LastModified" : "2018-02-16T19:45:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# a cmake macro to generate a text file with the class hierarchy\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# collect the common wrapper-tool arguments\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# write wrapper-tool arguments to a file\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# all the include directories\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# write wrapper-tool arguments to a file\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# list of all files to wrap\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# list of used files\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# For each class\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# file properties to include in the hierarchy file\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# what is the filename without the extension\n",
        "Line" : 64,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# get the absolute path to the file\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# get the directory\n",
        "Line" : 70,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# assume header file is in the same directory\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# include all non-private headers in the hierarchy files\n",
        "Line" : 76,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# ensure that header exists (assume it exists if it is marked as wrapped)\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Exclude this huge generated header file\n",
        "Line" : 90,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# add to the INPUT_FILES\n",
        "Line" : 96,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# add the info to the init file\n",
        "Line" : 99,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# finish the data file for the init file\n",
        "Line" : 124,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# search through the deps to find modules we depend on\n",
        "Line" : 131,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Don't use ${module_name}_DEPENDS. That list also includes COMPILE_DEPENDS,\n\n# which aren't library dependencies, merely dependencies for generators and\n\n# such. The dependecies specified under \"DEPENDS\" in the vtk_module(..) macro\n\n# call are located under _LINK_DEPENDS.\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 21
    },
    "CMakeLists.txt" : {
      "ObjectId" : "8b4b43d950a9ff0b4474daf449107ce8f1457c1f",
      "LastModified" : "2019-02-18T01:34:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# for CMake 3, add VERSION X.Y.Z to set the version here\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMake version requirements\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Allow custom cmake overrides\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Use ctest for dashboard submissions\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Project version\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Generic project version variables (forwards compatibility with CMake 3)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Include directories\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# When building as a remote module for VTK 9 (or VTK 8.90+)\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Clear VTK_LIBS, linking will be handled by modular build\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# To set DICOM_USE_VTKZLIB in vtkDICOMConfig.h\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# When building as a remote module for older versions of VTK\n",
        "Line" : 49,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Clear VTK_LIBS, linking will be handled by modular build\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# To set DICOM_USE_VTKZLIB in vtkDICOMConfig.h\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# We are being built as a stand-alone package\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# When CMake 3.0.0 is required, remove this block (see CMP0042).\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Which parts of the package to build\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# backwards compatibility pre VTK 9.x\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Wrap Python option\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Wrap Tcl option\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Wrap Java option\n",
        "Line" : 118,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Set up our directory structure for output libraries and binaries\n\n# (Note: these are the build locations, not the install locations)\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# Check if VTK set VTK_ZLIB_LIBRARIES\n",
        "Line" : 149,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# VTK 6 doesn't set it, so search for vtkzlib directly\n",
        "Line" : 151,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Look for zlib\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# GDCM or DCMTK are required for reading compressed DICOM images\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# To avoid conflicts, we might want to use ITK's GDCM\n",
        "Line" : 177,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# Check for sqlite3 for reading OsiriX databases\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Store the git hash of the current head\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Store the build date\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#  execute_process(COMMAND \"cmd\" \" /c date /t\" OUTPUT_VARIABLE DATE)\n\n#  string(REGEX REPLACE \"[^0-9]*(..).*\" \"\\\\1\" MONTH \"${DATE}\")\n\n#  set(MONTHS \"\"\n\n#    \"Jan\" \"Feb\" \"Mar\" \"Apr\" \"May\" \"Jun\" \"Jul\" \"Aug\" \"Sep\" \"Oct\" \"Nov\" \"Dec\")\n\n#  list(GET MONTHS \"${MONTH}\" MONTH)\n\n#  string(REGEX REPLACE \"[^/]*/(..)/(....).*\" \"\\\\1 ${MONTH} \\\\2\"\n\n#    DICOM_BUILD_DATE \"${DATE}\")\n\n#  execute_process(COMMAND \"cmd\" \" /c echo %TIME%\" OUTPUT_VARIABLE TIME)\n\n#  string(REGEX REPLACE \"[^0-9]*(..:..:..).*\" \"\\\\1\"\n\n#    DICOM_BUILD_TIME \"${TIME}\")\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Set up our target directory structure for \"make install\"\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# for executables and \".dll\" libraries\n",
        "Line" : 266,
        "CharPositionInLine" : 25
      },
      "32" : {
        "Text" : "# for unix/linux/osx shared libraries\n",
        "Line" : 268,
        "CharPositionInLine" : 27
      },
      "33" : {
        "Text" : "# for static or \".lib\" libraries\n",
        "Line" : 271,
        "CharPositionInLine" : 40
      },
      "34" : {
        "Text" : "# for header files\n",
        "Line" : 274,
        "CharPositionInLine" : 31
      },
      "35" : {
        "Text" : "# Set the full paths to the install tree\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Libraries\n",
        "Line" : 300,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# The library dependencies\n",
        "Line" : 303,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# required libraries\n",
        "Line" : 310,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# factory libraries (only needed if present)\n",
        "Line" : 314,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# VTK 5.x\n",
        "Line" : 322,
        "CharPositionInLine" : 69
      },
      "41" : {
        "Text" : "# For the python wrappers\n",
        "Line" : 329,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# For the tcl wrappers\n",
        "Line" : 337,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# For the java wrappers\n",
        "Line" : 343,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# NOT Module_vtkDICOM)\n",
        "Line" : 372,
        "CharPositionInLine" : 8
      },
      "45" : {
        "Text" : "# Disable C and C++ deprecation warnings for MSVC 2005 and later\n",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# The main library\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Subdirectories\n",
        "Line" : 384,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Install files\n",
        "Line" : 401,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "#---------------------------------------------------\n\n# Export information for other projects\n",
        "Line" : 408,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# Add all targets to the build-tree export set\n",
        "Line" : 411,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# Export the package for use from the build-tree\n\n# (this registers the build-tree with a global CMake-registry)\n",
        "Line" : 416,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# Create the DICOMConfig.cmake and DICOMConfigVersion.cmake files\n\n# ... for the build tree\n",
        "Line" : 420,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# ... for the install tree\n",
        "Line" : 426,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "# ... for both\n",
        "Line" : 436,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# Install the DICOMConfig.cmake and DICOMConfigVersion.cmake\n",
        "Line" : 440,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "# Install the Use file in the build and install directories\n",
        "Line" : 446,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# Install the export set for use with the install-tree\n",
        "Line" : 453,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 58
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "df6158aee11355026aae1ec3bc2fcb06a912f682",
      "LastModified" : "2014-04-12T23:19:52Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "DicomCli/CMakeLists.txt" : {
      "ObjectId" : "facb4aba6975ea24be56575cee5e88cdc2e20f4d",
      "LastModified" : "2019-02-17T18:04:03Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Examples/CMakeLists.txt" : {
      "ObjectId" : "302a164d3aa646e63f090805b253887726f4058a",
      "LastModified" : "2019-02-17T18:04:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# VTK 5.x\n",
        "Line" : 20,
        "CharPositionInLine" : 39
      },
      "CommentCount" : 1
    },
    "Programs/CMakeLists.txt" : {
      "ObjectId" : "7834d8e2e09bb8a9fdbbdf87e549184b3e2b0e32",
      "LastModified" : "2019-02-17T18:04:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# VTK 5.x\n",
        "Line" : 30,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 1
    },
    "Source/CMakeLists.txt" : {
      "ObjectId" : "34d70c75451b907e1dcae47f59b8cea15c7fb755",
      "LastModified" : "2019-02-17T18:04:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configuration header\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include directories\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create the main library\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Sources in the current directory (library sources only!)\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Headers without a matching .cxx file are listed here\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Internal headers (not installed)\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Sources that are abstract\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Sources that are not vtkObjects\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# When building as a remote module for VTK 9 (or VTK 8.90+)\n",
        "Line" : 140,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# When building as a remote module for older versions of VTK\n",
        "Line" : 153,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Automatically find the header for each cxx file\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Create the hierarchy file\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# _LINK_DEPENDS is a variable suffix from the VTK 6 module macros\n",
        "Line" : 177,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Set the library name suffix for VTK 6 libraries\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Create the library\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Wrappers\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Tell vtkWrapPython to locate the python libraries for us.\n",
        "Line" : 219,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# do things the old way, with PythonD libraries\n",
        "Line" : 229,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Get python version, e.g. 27 for python 2.7\n",
        "Line" : 230,
        "CharPositionInLine" : 12
      },
      "19" : {
        "Text" : "# On Win32 and Mac, link python library non-private\n",
        "Line" : 259,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# do things the new way, without PythonD libraries\n",
        "Line" : 273,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# create the pkgIndex.tcl file\n",
        "Line" : 316,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# Set the install rules for the library\n",
        "Line" : 401,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# else MODULE_vtkDICOM\n",
        "Line" : 423,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 24
    },
    "Testing/CMakeLists.txt" : {
      "ObjectId" : "3e8054a5ae61282a20847ac40e7db1ba6123626d",
      "LastModified" : "2019-02-12T04:32:56Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# When building as a remote module for VTK 9 (or VTK 8.90+)\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# When building as a remote module for older versions of VTK\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# fall back to using python rather than vtkpython\n",
        "Line" : 46,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# fall back to using tclsh\n",
        "Line" : 67,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 4
    },
    "module.cmake" : {
      "ObjectId" : "89335d4418a5b103b688ee283b03c1fc07d5ec5c",
      "LastModified" : "2019-03-15T12:49:43Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 10
  },
  "ElapsedTime" : 1762
}