{
  "Repository" : "42120112",
  "Revision" : "HEAD",
  "ObjectId" : "38c70fb869c01228f82fd844a8c420860b5131c1",
  "CommitTime" : "2019-04-09T21:14:34Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "8ada2d2623b23eb6d3ef99cf637151d50326a1f1",
      "LastModified" : "2018-09-12T06:41:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Versions prior to 3.1.0 on Unix platforms built archive libraries\n\n# incorrectly.  Require at least that version if necessary.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This has to be defined after Packages is included, because it relies on the\n\n# discovered path to the python executable.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CXXDefaults will set a variety of variables for the project.\n\n# Consume them here. This is an effort to keep the most common\n\n# build files readable.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Ensure we have doxygen+graphviz available\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/defaults/CXXDefaults.cmake" : {
      "ObjectId" : "4b56546c4fc7792fbfe11193a8009fcf740ccff9",
      "LastModified" : "2018-02-23T10:12:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2016 Pixar\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"Apache License\")\n\n# with the following modification; you may not use this file except in\n\n# compliance with the Apache License and the following modification to it:\n\n# Section 6. Trademarks. is deleted and replaced with:\n\n#\n\n# 6. Trademarks. This License does not grant permission to use the trade\n\n#    names, trademarks, service marks, or product names of the Licensor\n\n#    and its affiliates, except as required to comply with Section 4(c) of\n\n#    the License and to reproduce the content of the NOTICE file.\n\n#\n\n# You may obtain a copy of the Apache License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the Apache License with the above modification is\n\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied. See the Apache License for the specific\n\n# language governing permissions and limitations under the Apache License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Python bindings for tf require this define.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Maya seems to require this\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set plugin path environment variable name\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# CMake list to string.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set namespace configuration.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set Python configuration\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# XXX: This is a workaround for an issue in which Python headers unequivocally\n\n# redefine macros defined in standard library headers. This behavior \n\n# prevents users from running strict builds with PXR_STRICT_BUILD_MODE\n\n# as the redefinition warnings would cause build failures.\n\n#\n\n# The python official docs call this out here:\n\n# https://docs.python.org/2/c-api/intro.html#include-files\n\n#\n\n# The long term plan is to adhere to the required behavior.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/defaults/CXXHelpers.cmake" : {
      "ObjectId" : "b5670659aa7fbf276db46ed6f2106e517dff56fc",
      "LastModified" : "2017-01-04T20:02:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2016 Pixar\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"Apache License\")\n\n# with the following modification; you may not use this file except in\n\n# compliance with the Apache License and the following modification to it:\n\n# Section 6. Trademarks. is deleted and replaced with:\n\n#\n\n# 6. Trademarks. This License does not grant permission to use the trade\n\n#    names, trademarks, service marks, or product names of the Licensor\n\n#    and its affiliates, except as required to comply with Section 4(c) of\n\n#    the License and to reproduce the content of the NOTICE file.\n\n#\n\n# You may obtain a copy of the Apache License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the Apache License with the above modification is\n\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied. See the Apache License for the specific\n\n# language governing permissions and limitations under the Apache License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/defaults/Options.cmake" : {
      "ObjectId" : "94fc9c589e7f1085da3ede017cec5144b4eaa71a",
      "LastModified" : "2019-01-29T19:47:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2016 Pixar\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"Apache License\")\n\n# with the following modification; you may not use this file except in\n\n# compliance with the Apache License and the following modification to it:\n\n# Section 6. Trademarks. is deleted and replaced with:\n\n#\n\n# 6. Trademarks. This License does not grant permission to use the trade\n\n#    names, trademarks, service marks, or product names of the Licensor\n\n#    and its affiliates, except as required to comply with Section 4(c) of\n\n#    the License and to reproduce the content of the NOTICE file.\n\n#\n\n# You may obtain a copy of the Apache License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the Apache License with the above modification is\n\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied. See the Apache License for the specific\n\n# language governing permissions and limitations under the Apache License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Precompiled headers are a win on Windows, not on gcc.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Resolve options that depend on one another so that subsequent .cmake scripts\n\n# all have the final value for these options.\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/defaults/Packages.cmake" : {
      "ObjectId" : "ae2751a5704f18639b985516ae1ce2f77cb3e1dc",
      "LastModified" : "2019-01-29T19:47:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2016 Pixar\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"Apache License\")\n\n# with the following modification; you may not use this file except in\n\n# compliance with the Apache License and the following modification to it:\n\n# Section 6. Trademarks. is deleted and replaced with:\n\n#\n\n# 6. Trademarks. This License does not grant permission to use the trade\n\n#    names, trademarks, service marks, or product names of the Licensor\n\n#    and its affiliates, except as required to comply with Section 4(c) of\n\n#    the License and to reproduce the content of the NOTICE file.\n\n#\n\n# You may obtain a copy of the Apache License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the Apache License with the above modification is\n\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied. See the Apache License for the specific\n\n# language governing permissions and limitations under the Apache License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Save the current value of BUILD_SHARED_LIBS and restore it at\n\n# the end of this file, since some of the Find* modules invoked\n\n# below may wind up stomping over this value.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Core USD Package Requirements \n\n# ----------------------------------------------\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Threads.  Save the libraries needed in PXR_THREAD_LIBS;  we may modify\n\n# them later.  We need the threads package because some platforms require\n\n# it when using C++ functions from #include <thread>.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# --Python.  We are generally but not completely 2.6 compliant.\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# --Boost\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# --Jinja2\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# --Boost\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# --TBB\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# --math\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Math functions are linked automatically by including math.h on Windows.\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Developer Options Package Requirements\n\n# ----------------------------------------------\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Flex 2.5.39+ is required, generated API is generated incorrectly in\n\n# 2.5.35, at least. scan_bytes generates with (..., int len, ...) instead of\n\n# the correct (..., yy_size_t len, ...).  Lower at your own peril.\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Imaging Components Package Requirements\n\n# ----------------------------------------------\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# --OpenEXR\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# --OpenImageIO\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# --OpenColorIO\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# --OpenGL\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# --Opensubdiv\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# --Ptex\n",
        "Line" : 119,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# --X11\n",
        "Line" : 124,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# --Embree\n",
        "Line" : 128,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# --PySide\n",
        "Line" : 135,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# --PyOpenGL\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Third Party Plugin Package Requirements\n\n# ----------------------------------------------\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# ----------------------------------------------\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "cmake/defaults/ProjectDefaults.cmake" : {
      "ObjectId" : "8ff64321a57908510a0b48be7e3cb85c825ac37a",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2016 Pixar\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"Apache License\")\n\n# with the following modification; you may not use this file except in\n\n# compliance with the Apache License and the following modification to it:\n\n# Section 6. Trademarks. is deleted and replaced with:\n\n#\n\n# 6. Trademarks. This License does not grant permission to use the trade\n\n#    names, trademarks, service marks, or product names of the Licensor\n\n#    and its affiliates, except as required to comply with Section 4(c) of\n\n#    the License and to reproduce the content of the NOTICE file.\n\n#\n\n# You may obtain a copy of the Apache License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the Apache License with the above modification is\n\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied. See the Apache License for the specific\n\n# language governing permissions and limitations under the Apache License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Windows specific set up\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Allow local includes from source directory.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Turn on folder usage\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Default build type\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Enable CTest\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "cmake/defaults/Version.cmake" : {
      "ObjectId" : "899efd2794156a25631a80deb55cc3bbdf5aa294",
      "LastModified" : "2019-02-13T21:29:08Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2016 Pixar\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"Apache License\")\n\n# with the following modification; you may not use this file except in\n\n# compliance with the Apache License and the following modification to it:\n\n# Section 6. Trademarks. is deleted and replaced with:\n\n#\n\n# 6. Trademarks. This License does not grant permission to use the trade\n\n#    names, trademarks, service marks, or product names of the Licensor\n\n#    and its affiliates, except as required to comply with Section 4(c) of\n\n#    the License and to reproduce the content of the NOTICE file.\n\n#\n\n# You may obtain a copy of the Apache License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the Apache License with the above modification is\n\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied. See the Apache License for the specific\n\n# language governing permissions and limitations under the Apache License.\n\n#\n\n# Versioning information\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/defaults/clangdefaults.cmake" : {
      "ObjectId" : "0cba9b992777d4c4616ecb0e94a41db0afc9d954",
      "LastModified" : "2017-11-09T00:09:14Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2016 Pixar\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"Apache License\")\n\n# with the following modification; you may not use this file except in\n\n# compliance with the Apache License and the following modification to it:\n\n# Section 6. Trademarks. is deleted and replaced with:\n\n#\n\n# 6. Trademarks. This License does not grant permission to use the trade\n\n#    names, trademarks, service marks, or product names of the Licensor\n\n#    and its affiliates, except as required to comply with Section 4(c) of\n\n#    the License and to reproduce the content of the NOTICE file.\n\n#\n\n# You may obtain a copy of the Apache License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the Apache License with the above modification is\n\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied. See the Apache License for the specific\n\n# language governing permissions and limitations under the Apache License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# clang annoyingly warns about the -pthread option if it's only linking.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/defaults/gccclangshareddefaults.cmake" : {
      "ObjectId" : "bf64fd4c5309ca84cc0a242fd9299f492eb65c26",
      "LastModified" : "2017-05-19T18:21:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2016 Pixar\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"Apache License\")\n\n# with the following modification; you may not use this file except in\n\n# compliance with the Apache License and the following modification to it:\n\n# Section 6. Trademarks. is deleted and replaced with:\n\n#\n\n# 6. Trademarks. This License does not grant permission to use the trade\n\n#    names, trademarks, service marks, or product names of the Licensor\n\n#    and its affiliates, except as required to comply with Section 4(c) of\n\n#    the License and to reproduce the content of the NOTICE file.\n\n#\n\n# You may obtain a copy of the Apache License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the Apache License with the above modification is\n\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied. See the Apache License for the specific\n\n# language governing permissions and limitations under the Apache License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file contains a set of flags/settings shared between our \n\n# GCC and Clang configs. This allows clangdefaults and gccdefaults\n\n# to remain minimal, marking the points where divergence is required.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Turn on C++11; pxr won't build without it. \n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Enable all warnings.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Errors are warnings in strict build mode.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# We use hash_map, suppress deprecation warning.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Suppress unused typedef warnings emanating from boost.\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If using pthreads then tell the compiler.  This should automatically cause\n\n# the linker to pull in the pthread library if necessary so we also clear\n\n# PXR_THREAD_LIBS.\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake/defaults/gccdefaults.cmake" : {
      "ObjectId" : "ce7789a2c5b9bcbc004f5021398c813215fb2a74",
      "LastModified" : "2017-01-04T20:02:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2016 Pixar\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"Apache License\")\n\n# with the following modification; you may not use this file except in\n\n# compliance with the Apache License and the following modification to it:\n\n# Section 6. Trademarks. is deleted and replaced with:\n\n#\n\n# 6. Trademarks. This License does not grant permission to use the trade\n\n#    names, trademarks, service marks, or product names of the Licensor\n\n#    and its affiliates, except as required to comply with Section 4(c) of\n\n#    the License and to reproduce the content of the NOTICE file.\n\n#\n\n# You may obtain a copy of the Apache License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the Apache License with the above modification is\n\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied. See the Apache License for the specific\n\n# language governing permissions and limitations under the Apache License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/defaults/msvcdefaults.cmake" : {
      "ObjectId" : "9024c5d3e8cdafd94274d22fc234afea9c01f5ad",
      "LastModified" : "2018-09-12T06:41:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2016 Pixar\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"Apache License\")\n\n# with the following modification; you may not use this file except in\n\n# compliance with the Apache License and the following modification to it:\n\n# Section 6. Trademarks. is deleted and replaced with:\n\n#\n\n# 6. Trademarks. This License does not grant permission to use the trade\n\n#    names, trademarks, service marks, or product names of the Licensor\n\n#    and its affiliates, except as required to comply with Section 4(c) of\n\n#    the License and to reproduce the content of the NOTICE file.\n\n#\n\n# You may obtain a copy of the Apache License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the Apache License with the above modification is\n\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied. See the Apache License for the specific\n\n# language governing permissions and limitations under the Apache License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Enable exception handling.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Standards compliant.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Turn on all but informational warnings.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Warnings are errors in strict build mode.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# truncation from 'double' to 'float' due to matrix and vector classes in `Gf`\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# conversion from size_t to int. While we don't want this enabled\n\n# it's in the Python headers. So all the Python wrap code is affected.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# no definition for inline function\n\n# this affects Glf only\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# 'typedef ': ignored on left of '' when no variable is declared\n\n# XXX:figure out why we need this\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# c:\\python27\\include\\pymath.h(22): warning C4273: 'round': inconsistent dll linkage \n\n# XXX:figure out real fix\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# qualifier applied to function type has no meaning; ignored\n\n# tbb/parallel_for_each.h\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# '<<': result of 32-bit shift implicitly converted to 64 bits\n\n# tbb/enumerable_thread_specific.h\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Disable warning C4996 regarding fopen(), strcpy(), etc.\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Disable warning C4996 regarding unchecked iterators for std::transform,\n\n# std::copy, std::equal, et al.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Make sure WinDef.h does not define min and max macros which\n\n# will conflict with std::min() and std::max().\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Needed to prevent YY files trying to include unistd.h\n\n# (which doesn't exist on Windows)\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Forces all libraries that have separate source to be linked as\n\n# DLL's rather than static libraries on Microsoft Windows, unless\n\n# explicitly told otherwise.\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Need half::_toFloat and half::_eLut.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# These files require /bigobj compiler flag\n\n#   Vt/arrayPyBuffer.cpp\n\n#   Usd/crateFile.cpp\n\n#   Usd/stage.cpp\n\n# Until we can set the flag on a per file basis, we'll have to enable it\n\n# for all translation units.\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Enable PDB generation.\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Enable multiprocessor builds.\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Ignore LNK4221.  This happens when making an archive with a object file\n\n# with no symbols in it.  We do this a lot because of a pattern of having\n\n# a C++ source file for many header-only facilities, e.g. tf/bitUtils.cpp.\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "cmake/macros/Private.cmake" : {
      "ObjectId" : "e0ebcc6f1099a674cd70431f565b37107d92a23b",
      "LastModified" : "2019-03-21T16:58:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2016 Pixar\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"Apache License\")\n\n# with the following modification; you may not use this file except in\n\n# compliance with the Apache License and the following modification to it:\n\n# Section 6. Trademarks. is deleted and replaced with:\n\n#\n\n# 6. Trademarks. This License does not grant permission to use the trade\n\n#    names, trademarks, service marks, or product names of the Licensor\n\n#    and its affiliates, except as required to comply with Section 4(c) of\n\n#    the License and to reproduce the content of the NOTICE file.\n\n#\n\n# You may obtain a copy of the Apache License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the Apache License with the above modification is\n\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied. See the Apache License for the specific\n\n# language governing permissions and limitations under the Apache License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copy headers to the build tree.  In the source tree we find headers in\n\n# paths like pxr/base/lib/tf but we #include using paths like pxr/base/tf,\n\n# i.e. without 'lib/'.  So we copy the headers (public and private) into\n\n# the build tree under paths of the latter scheme.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add a headers target.\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Make sure headers are installed before building the library.\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# _copy_headers\n",
        "Line" : 73,
        "CharPositionInLine" : 14
      },
      "5" : {
        "Text" : "# Converts a library name, such as _tf.so to the internal module name given\n\n# our naming conventions, e.g. Tf\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Library names are either something like tf.so for shared libraries\n\n# or _tf.so for Python module libraries. We want to strip the leading\n\n# \"_\" off.\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# _get_python_module_name\n",
        "Line" : 89,
        "CharPositionInLine" : 14
      },
      "8" : {
        "Text" : "# _plugInfo_subst\n",
        "Line" : 101,
        "CharPositionInLine" : 14
      },
      "9" : {
        "Text" : "# Generate a doxygen config file\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Install compiled python files alongside the python object,\n\n# e.g. lib/python/pxr/Ar/__init__.pyc\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Only attempt to compile .py files. Files like plugInfo.json may also\n\n# be in this list\n",
        "Line" : 132,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Preserve any directory prefix, just strip the extension. This\n\n# directory needs to exist in the binary dir for the COMMAND below\n\n# to work.\n",
        "Line" : 137,
        "CharPositionInLine" : 12
      },
      "13" : {
        "Text" : "# XXX -- Allow anything or allow nothing?\n",
        "Line" : 160,
        "CharPositionInLine" : 12
      },
      "14" : {
        "Text" : "# Note that we always install under lib/python/pxr, even if we are in\n\n# the third_party project. This means the import will always look like\n\n# 'from pxr import X'. We need to do this per-loop iteration because\n\n# the installDest may be different due to the presence of subdirs.\n",
        "Line" : 166,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "# Add the target.\n",
        "Line" : 178,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "#_install_python\n",
        "Line" : 189,
        "CharPositionInLine" : 14
      },
      "17" : {
        "Text" : "# Resource files install into a structure that looks like:\n\n# lib/\n\n#     usd/\n\n#         ${NAME}/\n\n#             resources/\n\n#                 resourceFileA\n\n#                 subdir/\n\n#                     resourceFileB\n\n#                     resourceFileC\n\n#                 ...\n\n#\n",
        "Line" : 192,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# A resource file may be specified like <src file>:<dst file> to\n\n# indicate that it should be installed to a different location in\n\n# the resources area. Check if this is the case.\n",
        "Line" : 206,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# plugInfo.json go through an initial template substitution step files\n\n# install it from the binary (gen) directory specified by the full\n\n# path. Otherwise, use the original relative path which is relative to\n\n# the source directory.\n",
        "Line" : 224,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# _install_resource_files\n",
        "Line" : 239,
        "CharPositionInLine" : 14
      },
      "21" : {
        "Text" : "# Add the target.\n",
        "Line" : 258,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# _install_pyside_ui_files\n",
        "Line" : 278,
        "CharPositionInLine" : 14
      },
      "23" : {
        "Text" : "# Install headers to build or install prefix\n",
        "Line" : 281,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# If both get set, fall back to public.\n",
        "Line" : 289,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Should the classes have an argument name?\n",
        "Line" : 300,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# _classes\n",
        "Line" : 310,
        "CharPositionInLine" : 14
      },
      "27" : {
        "Text" : "# get_install_dir\n",
        "Line" : 318,
        "CharPositionInLine" : 14
      },
      "28" : {
        "Text" : "# _get_resources_dir_name\n",
        "Line" : 324,
        "CharPositionInLine" : 14
      },
      "29" : {
        "Text" : "# _get_resources_dir\n",
        "Line" : 331,
        "CharPositionInLine" : 14
      },
      "30" : {
        "Text" : "# XXX -- Shouldn't we set PXR_PREFIX everywhere?\n",
        "Line" : 334,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# XXX -- Need better list joining.\n",
        "Line" : 351,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# XXX -- Need better list joining.\n",
        "Line" : 363,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# Ignore if disabled.\n",
        "Line" : 388,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# Header to precompile.  SOURCE_NAME falls back to\n\n# ${PXR_PRECOMPILED_HEADER_NAME}.\n",
        "Line" : 409,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# Emergency backup name is \"pch.h\".\n",
        "Line" : 415,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# Name of file to precompile in the build directory.  The client can\n\n# specify a prefix for this file, allowing multiple binaries/libraries\n\n# in a single subdirectory to use unique precompiled headers, meaning\n\n# each can have different compile options.\n",
        "Line" : 421,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# Precompiled header file name.  We choose the name that matches the\n\n# convention for the compiler.  That isn't necessary since we give\n\n# this name explicitly wherever it's needed.\n",
        "Line" : 428,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Silently ignore unknown compiler.\n",
        "Line" : 438,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : "# Headers live in subdirectories.\n",
        "Line" : 442,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# Additional compile flags to use precompiled header.  This will be\n",
        "Line" : 447,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# Build with precompiled header (/Yu, /Fp) and automatically\n\n# include the header (/FI).\n",
        "Line" : 450,
        "CharPositionInLine" : 8
      },
      "42" : {
        "Text" : "# Automatically include the header (-include) and warn if there's\n\n# a problem with the precompiled header.\n",
        "Line" : 454,
        "CharPositionInLine" : 8
      },
      "43" : {
        "Text" : "# Use FALSE if we have an external precompiled header we can use.\n",
        "Line" : 459,
        "CharPositionInLine" : 4
      },
      "44" : {
        "Text" : "# Copy the header to precompile.\n",
        "Line" : 462,
        "CharPositionInLine" : 12
      },
      "45" : {
        "Text" : "# Make an empty trigger file.  We need a source file to do the\n\n# precompilation.  This file only needs to include the header to\n\n# precompile but we're implicitly including that header so this\n\n# file can be empty.\n",
        "Line" : 470,
        "CharPositionInLine" : 12
      },
      "46" : {
        "Text" : "# The trigger file gets a special compile flag (/Yc).\n",
        "Line" : 480,
        "CharPositionInLine" : 12
      },
      "47" : {
        "Text" : "# Add the header file to the target.\n",
        "Line" : 487,
        "CharPositionInLine" : 12
      },
      "48" : {
        "Text" : "# Add the trigger file to the target.\n",
        "Line" : 490,
        "CharPositionInLine" : 12
      },
      "49" : {
        "Text" : "# Exclude the trigger.\n",
        "Line" : 493,
        "CharPositionInLine" : 12
      },
      "50" : {
        "Text" : "# Copy the header to precompile.\n",
        "Line" : 496,
        "CharPositionInLine" : 12
      },
      "51" : {
        "Text" : "# CMake has no simple way of invoking the compiler with additional\n\n# arguments so we must make a custom command and pass the compiler\n\n# arguments we collect here.\n\n#\n\n# $<JOIN:...> is available starting with 2.8.12.  In later\n\n# cmake versions getting the target properties may not\n\n# report all values (in particular, some include directories\n\n# may not be reported).\n",
        "Line" : 504,
        "CharPositionInLine" : 12
      },
      "52" : {
        "Text" : "# Command to generate the precompiled header.\n",
        "Line" : 527,
        "CharPositionInLine" : 16
      },
      "53" : {
        "Text" : "# Ideally we'd just put have generator expressions in the\n\n# COMMAND in add_custom_command().  However that will\n\n# write the result of the JOINs as single strings (escaping\n\n# spaces) and we want them as individual options.\n\n#\n\n# So we use file(GENERATE) which doesn't suffer from that\n\n# problem and execute the generated cmake script as the\n\n# COMMAND.\n",
        "Line" : 542,
        "CharPositionInLine" : 16
      },
      "54" : {
        "Text" : "# Command to generate the precompiled header.\n",
        "Line" : 555,
        "CharPositionInLine" : 16
      },
      "55" : {
        "Text" : "# Update every C++ source in the target to implicitly include and\n\n# depend on the precompiled header.\n",
        "Line" : 566,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# All target C++ sources not in EXCLUDE list.\n",
        "Line" : 570,
        "CharPositionInLine" : 8
      },
      "57" : {
        "Text" : "# Initialize a variable to accumulate an rpath.  The origin is the\n\n# RUNTIME DESTINATION of the target.  If not absolute it's appended\n\n# to CMAKE_INSTALL_PREFIX.\n",
        "Line" : 581,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Add a relative target path to the rpath.  If target is absolute compute\n\n# and add a relative path from the origin to the target.\n",
        "Line" : 592,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Make target relative to $ORIGIN (which is the first element in\n\n# rpath when initialized with _pxr_init_rpath()).\n",
        "Line" : 596,
        "CharPositionInLine" : 8
      },
      "60" : {
        "Text" : "# Get and remove the origin.\n",
        "Line" : 615,
        "CharPositionInLine" : 4
      },
      "61" : {
        "Text" : "# Canonicalize and uniquify paths.\n",
        "Line" : 620,
        "CharPositionInLine" : 4
      },
      "62" : {
        "Text" : "# Absolutize on Mac.  SIP disallows relative rpaths.\n",
        "Line" : 623,
        "CharPositionInLine" : 8
      },
      "63" : {
        "Text" : "# Replace with origin path.\n",
        "Line" : 626,
        "CharPositionInLine" : 16
      },
      "64" : {
        "Text" : "# Simplify.\n",
        "Line" : 629,
        "CharPositionInLine" : 16
      },
      "65" : {
        "Text" : "# Strip trailing slashes.\n",
        "Line" : 634,
        "CharPositionInLine" : 8
      },
      "66" : {
        "Text" : "# Ignore paths we already have.\n",
        "Line" : 637,
        "CharPositionInLine" : 8
      },
      "67" : {
        "Text" : "# Split the library (target) names in libs into internal-to-the-monolithic-\n\n# library and external-of-it lists.\n",
        "Line" : 650,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Helper functions for _pxr_transitive_internal_libraries.\n",
        "Line" : 666,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# Handle library ${lib} only if it hasn't been seen yet.\n",
        "Line" : 670,
        "CharPositionInLine" : 8
      },
      "70" : {
        "Text" : "# Add to result.\n",
        "Line" : 672,
        "CharPositionInLine" : 12
      },
      "71" : {
        "Text" : "# Get the implicit link libraries.\n",
        "Line" : 675,
        "CharPositionInLine" : 12
      },
      "72" : {
        "Text" : "# Discard the external libraries.\n",
        "Line" : 678,
        "CharPositionInLine" : 12
      },
      "73" : {
        "Text" : "# Recurse on the internal libraries.\n",
        "Line" : 681,
        "CharPositionInLine" : 12
      },
      "74" : {
        "Text" : "# Get the transitive libs in some order.\n",
        "Line" : 689,
        "CharPositionInLine" : 4
      },
      "75" : {
        "Text" : "# Get the transitive libs in build order.\n",
        "Line" : 693,
        "CharPositionInLine" : 4
      },
      "76" : {
        "Text" : "# Reverse the order to get the link order.\n",
        "Line" : 701,
        "CharPositionInLine" : 4
      },
      "77" : {
        "Text" : "# This function is equivalent to target_link_libraries except it does\n\n# a few extra things:\n\n#\n\n#   1) We can't call target_link_libraries() on a target that's an OBJECT\n\n#      library but we do need the transitive definitions and include\n\n#      directories so we manually add them.  We also manually set the\n\n#      INTERFACE_LINK_LIBRARIES so we can use it for targets that want to\n\n#      \"link\" the OBJECT library.  And we manually add a dependency.\n\n#      This would all be a lot easier if cmake treated OBJECT libraries\n\n#      like a STATIC or SHARED library in target_link_libraries().\n\n#\n\n#   2) If the target is not an OBJECT library and this is a monolithic\n\n#      build and we're linking to core libraries then link against the\n\n#      monolithic library instead.\n\n#\n\n#   3) If the target is not an OBJECT library and this is not a monolithic\n\n#      build and we're not building shared libraries and we're linking\n\n#      with core libraries then we must link the static libraries using\n\n#      whole-archive functionality.  Without this any object file in a\n\n#      static library that doesn't have any symbols used from it will not\n\n#      be linked at all.  If the object file has global constructors with\n\n#      side effects then those constructors and side effects will not\n\n#      run.  We depend on these constructs (e.g. TF_REGISTRY_FUNCTION).\n\n#\n\n#   4) We link against PXR_MALLOC_LIBRARY and PXR_THREAD_LIBS because we\n\n#      always want those.\n\n#\n",
        "Line" : 706,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# Split core libraries from non-core libraries.\n",
        "Line" : 734,
        "CharPositionInLine" : 4
      },
      "79" : {
        "Text" : "# Collect the definitions and include directories.\n",
        "Line" : 739,
        "CharPositionInLine" : 8
      },
      "80" : {
        "Text" : "# Collect libraries.  We must convert debug/optimized/general\n\n# link-type keywords to generator expressions in order to add\n\n# them to the INTERFACE_LINK_LIBRARIES.\n",
        "Line" : 758,
        "CharPositionInLine" : 8
      },
      "81" : {
        "Text" : "# Record the definitions, include directories and \"linked\" libraries.\n",
        "Line" : 784,
        "CharPositionInLine" : 8
      },
      "82" : {
        "Text" : "# Depend on core libraries we use.\n",
        "Line" : 794,
        "CharPositionInLine" : 8
      },
      "83" : {
        "Text" : "# If we use any internal libraries then just link against the\n\n# monolithic library.\n",
        "Line" : 799,
        "CharPositionInLine" : 8
      },
      "84" : {
        "Text" : "# Indicate that all symbols should be pulled in from internal\n\n# static libraries.  This ensures we don't drop unused symbols\n\n# with dynamic initialization side effects.  The exceptions are\n\n# any libraries explicitly static;  not only does that explicitly\n\n# say we don't have to worry about the dynamic initialization, but\n\n# also would maybe cause multiple symbol definitions if we tried\n\n# to get all symbols.\n\n#\n\n# On gcc use: --whole_archive LIB --no-whole-archive.\n\n# On clang use: -force_load LIB\n\n# On Windows use: /WHOLEARCHIVE:LIB\n\n#\n\n# A final complication is that we must also process transitive\n\n# link libraries since any transitively linked internal libraries\n\n# need the same treatment.\n",
        "Line" : 810,
        "CharPositionInLine" : 12
      },
      "85" : {
        "Text" : "# The library is explicitly static.\n",
        "Line" : 829,
        "CharPositionInLine" : 20
      },
      "86" : {
        "Text" : "# The syntax here is -WHOLEARCHIVE[:lib] but CMake will\n\n# treat that as a link flag and not \"see\" the library.\n\n# As a result it won't replace a target with the path\n\n# to the built target and it won't add a dependency.\n\n#\n\n# We can't simply link against the full path to the\n\n# library because we CMake will not add a dependency\n\n# and won't use interface link libraries and flags\n\n# from the targets.  Rather than trying to add those\n\n# things manually we instead link against the target\n\n# and link against the full path to the built target\n\n# with WHOLEARCHIVE.\n\n#\n\n# This ends up with the library on the link line twice.\n\n# That's okay, though, because the linker will read\n\n# the WHOLEARCHIVE one first and will use none of the\n\n# (duplicate) symbols from the second since they're\n\n# all provided by the first.  The order doesn't really\n\n# matter; we pull in the whole archive first.\n\n#\n",
        "Line" : 832,
        "CharPositionInLine" : 20
      },
      "87" : {
        "Text" : "# Unknown platform.\n",
        "Line" : 859,
        "CharPositionInLine" : 20
      },
      "88" : {
        "Text" : "# Add a python module for the target named NAME.  It implicitly links\n\n# against the library named NAME (or the monolithic library if\n\n# PXR_BUILD_MONOLITHIC is enabled).\n",
        "Line" : 874,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# If we can't build Python modules then do nothing.\n",
        "Line" : 896,
        "CharPositionInLine" : 4
      },
      "90" : {
        "Text" : "# Install .py files.\n",
        "Line" : 904,
        "CharPositionInLine" : 4
      },
      "91" : {
        "Text" : "# Install .ui files.\n",
        "Line" : 911,
        "CharPositionInLine" : 4
      },
      "92" : {
        "Text" : "# If no C++ files then we're done.\n",
        "Line" : 916,
        "CharPositionInLine" : 4
      },
      "93" : {
        "Text" : "# Add the module target.\n",
        "Line" : 921,
        "CharPositionInLine" : 4
      },
      "94" : {
        "Text" : "# Convert the name of the library into the python module name\n\n# , e.g. _tf.so -> Tf. This is later used to determine the eventual\n\n# install location as well as for inclusion into the __init__.py's\n\n# __all__ list.\n",
        "Line" : 934,
        "CharPositionInLine" : 4
      },
      "95" : {
        "Text" : "# Accumulate Python module names.\n",
        "Line" : 940,
        "CharPositionInLine" : 4
      },
      "96" : {
        "Text" : "# Always install under the 'pxr' module, rather than base on the\n\n# project name. This makes importing consistent, e.g.\n\n# 'from pxr import X'. Additionally, python libraries always install\n\n# into the default lib install, not into the third_party subdirectory\n\n# or similar.\n",
        "Line" : 945,
        "CharPositionInLine" : 4
      },
      "97" : {
        "Text" : "# Python modules need to be able to access their corresponding\n\n# wrapped library and the install lib directory.\n",
        "Line" : 952,
        "CharPositionInLine" : 4
      },
      "98" : {
        "Text" : "# Python modules must be suffixed with .pyd on Windows.\n",
        "Line" : 967,
        "CharPositionInLine" : 8
      },
      "99" : {
        "Text" : "# Python modules must be suffixed with .so on Mac.\n",
        "Line" : 973,
        "CharPositionInLine" : 8
      },
      "100" : {
        "Text" : "# All Python modules require support code from tf.  Linking with the\n\n# monolithic library will (deliberately) not pick up the dependency\n\n# on tf.\n",
        "Line" : 992,
        "CharPositionInLine" : 4
      },
      "101" : {
        "Text" : "# Include headers from the build directory.\n",
        "Line" : 997,
        "CharPositionInLine" : 4
      },
      "102" : {
        "Text" : "# pxr_python_module\n",
        "Line" : 1037,
        "CharPositionInLine" : 14
      },
      "103" : {
        "Text" : "# Add a library target named NAME.\n",
        "Line" : 1039,
        "CharPositionInLine" : 0
      },
      "104" : {
        "Text" : "# Argument parsing.\n",
        "Line" : 1041,
        "CharPositionInLine" : 4
      },
      "105" : {
        "Text" : "#\n\n# Set up the target.\n\n#\n",
        "Line" : 1068,
        "CharPositionInLine" : 4
      },
      "106" : {
        "Text" : "# Note OBJECT and PLUGIN types.\n",
        "Line" : 1072,
        "CharPositionInLine" : 4
      },
      "107" : {
        "Text" : "# We need to distinguish core libraries.  We keep track of them here.\n",
        "Line" : 1083,
        "CharPositionInLine" : 8
      },
      "108" : {
        "Text" : "# Keep track of core OBJECT libraries.\n",
        "Line" : 1088,
        "CharPositionInLine" : 8
      },
      "109" : {
        "Text" : "# Add the target.  We also add the headers because that's the easiest\n\n# way to get them to appear in IDE projects.\n",
        "Line" : 1096,
        "CharPositionInLine" : 4
      },
      "110" : {
        "Text" : "# When building a monolithic library we don't build individual\n\n# static or shared libraries.  Instead we build OBJECT libraries\n\n# which simply compile the sources.\n\n#\n\n# These can't be linked like other libraries and as a result we\n\n# don't automatically get transitive compiler definitions,\n\n# include directories or link libraries.  We have to do that\n\n# manually.  See pxr_monolithic_epilogue().\n",
        "Line" : 1099,
        "CharPositionInLine" : 8
      },
      "111" : {
        "Text" : "# Building an explicitly static library.\n",
        "Line" : 1115,
        "CharPositionInLine" : 8
      },
      "112" : {
        "Text" : "# Building an explicitly shared library or plugin.\n",
        "Line" : 1124,
        "CharPositionInLine" : 8
      },
      "113" : {
        "Text" : "#\n\n# Compute names and paths.\n\n#\n",
        "Line" : 1133,
        "CharPositionInLine" : 4
      },
      "114" : {
        "Text" : "# Where do we install to?\n",
        "Line" : 1137,
        "CharPositionInLine" : 4
      },
      "115" : {
        "Text" : "# XXX -- Why this difference?\n",
        "Line" : 1143,
        "CharPositionInLine" : 12
      },
      "116" : {
        "Text" : "# A plugin embedded in the monolithic library is found in\n\n# the usual library location, otherwise plugin libraries\n\n# are in the plugin install location.\n",
        "Line" : 1147,
        "CharPositionInLine" : 12
      },
      "117" : {
        "Text" : "# Return libInstallPrefix to caller.\n",
        "Line" : 1159,
        "CharPositionInLine" : 4
      },
      "118" : {
        "Text" : "# Names and paths passed to the compile via macros.  Paths should be\n\n# relative to facilitate relocating the build.\n",
        "Line" : 1164,
        "CharPositionInLine" : 4
      },
      "119" : {
        "Text" : "# API macros.\n",
        "Line" : 1173,
        "CharPositionInLine" : 4
      },
      "120" : {
        "Text" : "# Final name.\n",
        "Line" : 1180,
        "CharPositionInLine" : 4
      },
      "121" : {
        "Text" : "# Figure out the relative path from this library's plugin location\n\n# (in the libplug sense, which applies even to non-plugins, and is\n\n# where we can find external resources for the library) to the\n\n# library's location.  This can be embedded into resource files.\n\n#\n\n# If we're building a monolithic library or individual static libraries,\n\n# these libraries are not separately loadable at runtime. In these cases,\n\n# we don't need to specify the library's location, so we leave\n\n# pluginToLibraryPath empty.\n",
        "Line" : 1184,
        "CharPositionInLine" : 4
      },
      "122" : {
        "Text" : "#\n\n# Set up the compile/link.\n\n#\n",
        "Line" : 1202,
        "CharPositionInLine" : 4
      },
      "123" : {
        "Text" : "# PIC is required by shared libraries. It's on for static libraries\n\n# because we'll likely link them into a shared library.\n\n#\n\n# We set PUBLIC_HEADER so we install directly from the source tree.\n\n# We don't want to install the headers copied to the build tree\n\n# because they have #line directives embedded to aid in debugging.\n",
        "Line" : 1206,
        "CharPositionInLine" : 4
      },
      "124" : {
        "Text" : "# Copy headers to the build directory and include from there and from\n\n# external packages.\n",
        "Line" : 1241,
        "CharPositionInLine" : 4
      },
      "125" : {
        "Text" : "# XXX -- May want some plugins to be baked into monolithic.\n",
        "Line" : 1258,
        "CharPositionInLine" : 4
      },
      "126" : {
        "Text" : "# Rpath has libraries under the third party prefix and the install prefix.\n\n# The former is for helper libraries for a third party application and\n\n# the latter for core USD libraries.\n",
        "Line" : 1261,
        "CharPositionInLine" : 4
      },
      "127" : {
        "Text" : "#\n\n# Set up the install.\n\n#\n",
        "Line" : 1269,
        "CharPositionInLine" : 4
      },
      "128" : {
        "Text" : "#\n\n# Set up precompiled headers.\n\n#\n",
        "Line" : 1323,
        "CharPositionInLine" : 4
      },
      "129" : {
        "Text" : "# _pxr_library\n",
        "Line" : 1334,
        "CharPositionInLine" : 14
      },
      "CommentCount" : 130
    },
    "cmake/macros/Public.cmake" : {
      "ObjectId" : "dea9e6bf53d8a85a22567731af5abbbb0b584843",
      "LastModified" : "2019-02-22T23:54:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2016 Pixar\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"Apache License\")\n\n# with the following modification; you may not use this file except in\n\n# compliance with the Apache License and the following modification to it:\n\n# Section 6. Trademarks. is deleted and replaced with:\n\n#\n\n# 6. Trademarks. This License does not grant permission to use the trade\n\n#    names, trademarks, service marks, or product names of the Licensor\n\n#    and its affiliates, except as required to comply with Section 4(c) of\n\n#    the License and to reproduce the content of the NOTICE file.\n\n#\n\n# You may obtain a copy of the Apache License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the Apache License with the above modification is\n\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied. See the Apache License for the specific\n\n# language governing permissions and limitations under the Apache License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If we can't build Python modules then do nothing.\n",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Source file.\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Destination file.\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# /pxrpythonsubst will be replaced with the full path to the configured\n\n# python executable. This doesn't use the CMake ${...} or @...@ syntax\n\n# for backwards compatibility with other build systems.\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Windows by default cannot execute Python files so here\n\n# we create a batch file wrapper that invokes the python\n\n# files.\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Add the target.\n",
        "Line" : 102,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# pxr_python_bin\n",
        "Line" : 113,
        "CharPositionInLine" : 14
      },
      "8" : {
        "Text" : "# Turn PIC ON otherwise ArchGetAddressInfo() on Linux may yield\n\n# unexpected results.\n",
        "Line" : 132,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Install and include headers from the build directory.\n",
        "Line" : 141,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# If python support is enabled, merge the python specific categories\n\n# with the more general before setting up compilation.\n",
        "Line" : 204,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Collect libraries.\n",
        "Line" : 224,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Note if this library is explicitly STATIC.\n",
        "Line" : 229,
        "CharPositionInLine" : 8
      },
      "13" : {
        "Text" : "# Expand classes into filenames.\n",
        "Line" : 235,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# If building a core plugin for a monolithic build then treat it almost\n\n# like any other library and include it in the monolithic library.\n",
        "Line" : 239,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Custom tweaks.\n",
        "Line" : 245,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# We can't build plugins if we're not building shared libraries.\n",
        "Line" : 247,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Katana plugins install into a specific sub directory structure.\n\n# In particular, shared objects install into plugin/Libs\n",
        "Line" : 256,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# Maya plugins require the .mll suffix on Windows and .bundle on OSX.\n",
        "Line" : 262,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# If the caller didn't specify the library type then choose the\n\n# type now.\n",
        "Line" : 271,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# A new list where each python module is quoted\n",
        "Line" : 341,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "# Join these with a ', '\n",
        "Line" : 347,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Install a pxr __init__.py with an appropriate __all__\n",
        "Line" : 350,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# pxr_setup_python\n",
        "Line" : 361,
        "CharPositionInLine" : 14
      },
      "24" : {
        "Text" : "# If we can't build Python modules then do nothing.\n",
        "Line" : 364,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# Look specifically for an __init__.py and a plugInfo.json prefixed by the\n\n# module name. These will be installed without the module prefix.\n",
        "Line" : 379,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# XXX -- We shouldn't have to install to run tests.\n",
        "Line" : 384,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# pxr_create_test_module\n",
        "Line" : 405,
        "CharPositionInLine" : 14
      },
      "28" : {
        "Text" : "# Find libraries under the install prefix, which has the core USD\n\n# libraries.\n",
        "Line" : 429,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "# XXX -- We shouldn't have to install to run tests.\n",
        "Line" : 455,
        "CharPositionInLine" : 12
      },
      "30" : {
        "Text" : "# We always want this test to build after the package it's under, even if\n\n# it doesn't link directly. This ensures that this test is able to include\n\n# headers from its parent package.\n",
        "Line" : 461,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# Test libraries can include the private headers of their parent PXR_PACKAGE\n\n# library\n",
        "Line" : 466,
        "CharPositionInLine" : 8
      },
      "32" : {
        "Text" : "# XXX -- We shouldn't have to install to run tests.\n",
        "Line" : 472,
        "CharPositionInLine" : 8
      },
      "33" : {
        "Text" : "# pxr_build_test_shared_lib\n",
        "Line" : 480,
        "CharPositionInLine" : 14
      },
      "34" : {
        "Text" : "# Turn PIC ON otherwise ArchGetAddressInfo() on Linux may yield\n\n# unexpected results.\n",
        "Line" : 494,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# Find libraries under the install prefix, which has the core USD\n\n# libraries.\n",
        "Line" : 509,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# XXX -- We shouldn't have to install to run tests.\n",
        "Line" : 515,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# pxr_build_test\n",
        "Line" : 520,
        "CharPositionInLine" : 14
      },
      "38" : {
        "Text" : "# If we can't build Python modules then do nothing.\n",
        "Line" : 523,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# XXX -- We shouldn't have to install to run tests.\n",
        "Line" : 534,
        "CharPositionInLine" : 8
      },
      "40" : {
        "Text" : "# pxr_test_scripts\n",
        "Line" : 541,
        "CharPositionInLine" : 14
      },
      "41" : {
        "Text" : "# XXX -- We shouldn't have to install to run tests.\n",
        "Line" : 552,
        "CharPositionInLine" : 8
      },
      "42" : {
        "Text" : "# pxr_install_test_dir\n",
        "Line" : 558,
        "CharPositionInLine" : 14
      },
      "43" : {
        "Text" : "# Discard tests that required shared libraries.\n",
        "Line" : 569,
        "CharPositionInLine" : 8
      },
      "44" : {
        "Text" : "# Explicit requirement.  This is for C++ tests that dynamically\n\n# load libraries linked against USD code.  These tests will have\n\n# multiple copies of symbols and will likely re-execute\n\n# ARCH_CONSTRUCTOR and registration functions, which will almost\n\n# certainly cause problems.\n",
        "Line" : 571,
        "CharPositionInLine" : 12
      },
      "45" : {
        "Text" : "# Implicit requirement.  Python modules require shared USD\n\n# libraries.  If the test runs python it's certainly going\n\n# to load USD modules.  If the test uses C++ to load USD\n\n# modules it tells us via REQUIRES_PYTHON_MODULES.\n",
        "Line" : 583,
        "CharPositionInLine" : 12
      },
      "46" : {
        "Text" : "# This harness is a filter which allows us to manipulate the test run, \n\n# e.g. by changing the environment, changing the expected return code, etc.\n",
        "Line" : 593,
        "CharPositionInLine" : 8
      },
      "47" : {
        "Text" : "# Not all tests will have testenvs, but if they do let the wrapper know so\n\n# it can copy the testenv contents into the run directory. By default,\n\n# assume the testenv has the same name as the test but allow it to be\n\n# overridden by specifying TESTENV.\n",
        "Line" : 621,
        "CharPositionInLine" : 8
      },
      "48" : {
        "Text" : "# For now the baseline directory is assumed by convention from the test\n\n# name. There may eventually be cases where we'd want to specify it by\n\n# an argument though.\n",
        "Line" : 636,
        "CharPositionInLine" : 12
      },
      "49" : {
        "Text" : "# If we're building static libraries, the C++ tests that link against\n\n# these libraries will look for resource files in the \"usd\" subdirectory\n\n# relative to where the tests are installed. However, the build installs\n\n# these files in the \"lib\" directory where the libraries are installed. \n\n#\n\n# We don't want to copy these resource files for each test, so instead\n\n# we set the PXR_PLUGINPATH_NAME env var to point to the \"lib/usd\"\n\n# directory where these files are installed.\n",
        "Line" : 685,
        "CharPositionInLine" : 8
      },
      "50" : {
        "Text" : "# Ensure that Python imports the Python files built by this build.\n\n# On Windows convert backslash to slash and don't change semicolons\n\n# to colons.\n",
        "Line" : 702,
        "CharPositionInLine" : 8
      },
      "51" : {
        "Text" : "# Ensure we run with the appropriate python executable.\n",
        "Line" : 712,
        "CharPositionInLine" : 8
      },
      "52" : {
        "Text" : "# But in some cases, we need to pass cmake properties directly to cmake\n\n# run_test, rather than configuring the environment\n",
        "Line" : 727,
        "CharPositionInLine" : 8
      },
      "53" : {
        "Text" : "# pxr_register_test\n",
        "Line" : 733,
        "CharPositionInLine" : 14
      },
      "54" : {
        "Text" : "# Install a top-level plugInfo.json in the shared area and into the \n\n# top-level plugin area\n",
        "Line" : 736,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# Add extra plugInfo.json include paths to the top-level plugInfo.json,\n\n# relative to that top-level file.\n",
        "Line" : 740,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# pxr_setup_plugins\n",
        "Line" : 770,
        "CharPositionInLine" : 14
      },
      "57" : {
        "Text" : "# Install a top-level plugInfo.json in the given plugin areas.\n",
        "Line" : 773,
        "CharPositionInLine" : 4
      },
      "58" : {
        "Text" : "# pxr_setup_third_plugins\n",
        "Line" : 791,
        "CharPositionInLine" : 14
      },
      "59" : {
        "Text" : "# Install a __init__.py that imports all the known node types\n",
        "Line" : 809,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "# pxr_katana_nodetypes\n",
        "Line" : 817,
        "CharPositionInLine" : 14
      },
      "61" : {
        "Text" : "# Generate a namespace declaration header, pxr.h, at the top level of\n\n# pxr at configuration time.\n",
        "Line" : 820,
        "CharPositionInLine" : 4
      },
      "62" : {
        "Text" : "# Create a monolithic shared library target if we should import one\n\n# or create one.\n",
        "Line" : 830,
        "CharPositionInLine" : 4
      },
      "63" : {
        "Text" : "# Gather the export information for usd_ms.\n",
        "Line" : 834,
        "CharPositionInLine" : 12
      },
      "64" : {
        "Text" : "# If the import wasn't found then create it and import it.\n\n# This ensures that the build files will be regenerated if\n\n# the file's contents change.  If this isn't desired or\n\n# write permissions aren't granted the client can configure\n\n# first without PXR_MONOLITHIC_IMPORT, build the 'monolithic'\n\n# target, build their own shared library and export file,\n\n# then configure again with PXR_MONOLITHIC_IMPORT.\n",
        "Line" : 837,
        "CharPositionInLine" : 12
      },
      "65" : {
        "Text" : "# If there's an IMPORTED_LOCATION then its parent must be\n\n# the install directory ${CMAKE_INSTALL_PREFIX}.  If it\n\n# isn't then we won't be able to find plugInfo.json files\n\n# at runtime because they're found relative to the library\n\n# that contains pxr/base/lib/plug/initConfig.cpp.  The\n\n# exception is if ${PXR_INSTALL_LOCATION} is set;  in that\n\n# case we assume the files will be found there regardless\n\n# of IMPORTED_LOCATION.  Note, however, that the install\n\n# cannot be relocated in this case.\n",
        "Line" : 849,
        "CharPositionInLine" : 12
      },
      "66" : {
        "Text" : "# Remove filename and directory.\n",
        "Line" : 861,
        "CharPositionInLine" : 20
      },
      "67" : {
        "Text" : "# Note that we ignore BUILD_SHARED_LIBS when building monolithic\n\n# when PXR_MONOLITHIC_IMPORT isn't set:  we always build an\n\n# archive library from the core libraries and then build a\n\n# shared library from that.  BUILD_SHARED_LIBS is still used\n\n# for libraries outside of the core.\n",
        "Line" : 873,
        "CharPositionInLine" : 12
      },
      "68" : {
        "Text" : "# We need at least one source file for the library so we\n\n# create an empty one.\n",
        "Line" : 879,
        "CharPositionInLine" : 12
      },
      "69" : {
        "Text" : "# Our shared library.\n",
        "Line" : 886,
        "CharPositionInLine" : 12
      },
      "70" : {
        "Text" : "# Create a target for shared libraries.  We currently use this only\n\n# to test its existence.\n",
        "Line" : 911,
        "CharPositionInLine" : 4
      },
      "71" : {
        "Text" : "# Create a target for targets that require Python.  Each should add\n\n# itself as a dependency to the \"python\" target.\n",
        "Line" : 917,
        "CharPositionInLine" : 4
      },
      "72" : {
        "Text" : "# pxr_toplevel_prologue\n",
        "Line" : 922,
        "CharPositionInLine" : 14
      },
      "73" : {
        "Text" : "# If we're building a shared monolithic library then link it against\n\n# usd_m.\n",
        "Line" : 925,
        "CharPositionInLine" : 4
      },
      "74" : {
        "Text" : "# We need to use whole-archive to get all the symbols.  Also note\n\n# that we carefully avoid adding the usd_m target itself by using\n\n# TARGET_FILE.  Linking the usd_m target would link usd_m and\n\n# everything it links to.\n",
        "Line" : 928,
        "CharPositionInLine" : 8
      },
      "75" : {
        "Text" : "# Since we didn't add a dependency to usd_ms on usd_m above, we\n\n# manually add it here along with compile definitions, include\n\n# directories, etc\n",
        "Line" : 949,
        "CharPositionInLine" : 8
      },
      "76" : {
        "Text" : "# Add the stuff we didn't get because we didn't link against the\n\n# usd_m target.\n",
        "Line" : 954,
        "CharPositionInLine" : 8
      },
      "77" : {
        "Text" : "# Setup the plugins in the top epilogue to ensure that everybody has had a\n\n# chance to update PXR_EXTRA_PLUGINS with their plugin paths.\n",
        "Line" : 983,
        "CharPositionInLine" : 4
      },
      "78" : {
        "Text" : "# pxr_toplevel_epilogue\n",
        "Line" : 986,
        "CharPositionInLine" : 14
      },
      "79" : {
        "Text" : "# When building a monolithic library we want all API functions to be\n\n# exported.  So add FOO_EXPORTS=1 for every library in PXR_OBJECT_LIBS,\n\n# where FOO is the uppercase version of the library name, to every\n\n# library in PXR_OBJECT_LIBS.\n",
        "Line" : 989,
        "CharPositionInLine" : 4
      },
      "80" : {
        "Text" : "# Collect all of the objects for all of the core libraries to add to\n\n# the monolithic library.\n",
        "Line" : 1003,
        "CharPositionInLine" : 4
      },
      "81" : {
        "Text" : "# Add the monolithic library.  This has to be delayed until now\n\n# because $<TARGET_OBJECTS> isn't a real generator expression\n\n# in that it can only appear in the sources of add_library() or\n\n# add_executable();  it can't appear in target_sources().  We\n\n# need at least one source file so we create an empty one\n",
        "Line" : 1010,
        "CharPositionInLine" : 4
      },
      "82" : {
        "Text" : "# Adding $<TARGET_OBJECTS:foo> will not bring along compile\n\n# definitions, include directories, etc.  Since we'll want those\n\n# attached to usd_m we explicitly add them.\n",
        "Line" : 1029,
        "CharPositionInLine" : 4
      },
      "83" : {
        "Text" : "# Manual export targets.  We can't use install(EXPORT) because usd_m\n\n# depends on OBJECT libraries which cannot be exported yet must be\n\n# in order to export usd_m.  We also have boilerplate for usd_ms, the\n\n# externally built monolithic shared library containing usd_m.  The\n\n# client should replace the FIXMEs with the appropriate paths or\n\n# use the usd_m export to build against and generate a usd_ms export.\n",
        "Line" : 1049,
        "CharPositionInLine" : 4
      },
      "84" : {
        "Text" : "# Convenient name for building the monolithic library.\n",
        "Line" : 1081,
        "CharPositionInLine" : 4
      },
      "85" : {
        "Text" : "# pxr_monolithic_epilogue\n",
        "Line" : 1094,
        "CharPositionInLine" : 14
      },
      "86" : {
        "Text" : "# pxr_core_prologue\n",
        "Line" : 1101,
        "CharPositionInLine" : 14
      },
      "87" : {
        "Text" : "# pxr_core_epilogue\n",
        "Line" : 1114,
        "CharPositionInLine" : 14
      },
      "CommentCount" : 88
    },
    "cmake/macros/copyHeaderForBuild.cmake" : {
      "ObjectId" : "b987d99978bd99f08c7f2a114b61f4e095f0d17c",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2018 Pixar\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"Apache License\")\n\n# with the following modification; you may not use this file except in\n\n# compliance with the Apache License and the following modification to it:\n\n# Section 6. Trademarks. is deleted and replaced with:\n\n#\n\n# 6. Trademarks. This License does not grant permission to use the trade\n\n#    names, trademarks, service marks, or product names of the Licensor\n\n#    and its affiliates, except as required to comply with Section 4(c) of\n\n#    the License and to reproduce the content of the NOTICE file.\n\n#\n\n# You may obtain a copy of the Apache License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the Apache License with the above modification is\n\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied. See the Apache License for the specific\n\n# language governing permissions and limitations under the Apache License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindAlembic.cmake" : {
      "ObjectId" : "ab39ed320411bc155d0fc0cf51e9a1eb7c5bceb4",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011, Ivan Busquets.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#     * Redistributions of source code must retain the above copyright\n\n#       notice, this list of conditions and the following disclaimer.\n\n#\n\n#     * Redistributions in binary form must reproduce the above copyright\n\n#       notice, this list of conditions and the following disclaimer in the\n\n#       documentation and/or other materials provided with the distribution.\n\n#\n\n#     * Neither the name of Ivan Busquets nor the names of any\n\n#       other contributors to this software may be used to endorse or\n\n#       promote products derived from this software without specific prior\n\n#       written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n\n# IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n\n# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\n# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\n# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\n# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\n# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n\n# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\n# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\n# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#=============================================================================\n\n#\n\n# The module defines the following variables:\n\n#   ALEMBIC_INCLUDE_DIR - path to Alembic headers\n\n#   ALEMBIC_LIBRARY_DIR - path to Alembic static libs\n\n#       ALEMBIC_FOUND       - true if the Alembic was found\n\n#\n\n# Example usage:\n\n#   find_package(ALEMBIC)\n\n#   if(ALEMBIC_FOUND)\n\n#     message(\"ALEMBIC found: ${ALEMBIC_LIBRARY_DIR}\")\n\n#   endif()\n\n#\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find Alembic libs\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# First look for single Alembic library,\n\n# as shipped in versions >= 1.6.0\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# If single library is not found, look for legacy Alembic libraries.\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find Alembic include dir\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/modules/FindEmbree.cmake" : {
      "ObjectId" : "a5350a7a7a15a16eedda4a16dfce5831f7b5cd12",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2017 Pixar\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"Apache License\")\n\n# with the following modification; you may not use this file except in\n\n# compliance with the Apache License and the following modification to it:\n\n# Section 6. Trademarks. is deleted and replaced with:\n\n#\n\n# 6. Trademarks. This License does not grant permission to use the trade\n\n#    names, trademarks, service marks, or product names of the Licensor\n\n#    and its affiliates, except as required to comply with Section 4(c) of\n\n#    the License and to reproduce the content of the NOTICE file.\n\n#\n\n# You may obtain a copy of the Apache License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the Apache License with the above modification is\n\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied. See the Apache License for the specific\n\n# language governing permissions and limitations under the Apache License.\n\n#\n\n#=============================================================================\n\n#\n\n# The module defines the following variables:\n\n#   EMBREE_INCLUDE_DIR - path to embree header directory\n\n#   EMBREE_LIBRARY     - path to embree library file\n\n#       EMBREE_FOUND   - true if embree was found\n\n#\n\n# Example usage:\n\n#   find_package(EMBREE)\n\n#   if(EMBREE_FOUND)\n\n#     message(\"EMBREE found: ${EMBREE_LIBRARY}\")\n\n#   endif()\n\n#\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindGLEW.cmake" : {
      "ObjectId" : "b1b5eb2c66430407dc2448ccfae173f28ac4029d",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2016 Pixar\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"Apache License\")\n\n# with the following modification; you may not use this file except in\n\n# compliance with the Apache License and the following modification to it:\n\n# Section 6. Trademarks. is deleted and replaced with:\n\n#\n\n# 6. Trademarks. This License does not grant permission to use the trade\n\n#    names, trademarks, service marks, or product names of the Licensor\n\n#    and its affiliates, except as required to comply with Section 4(c) of\n\n#    the License and to reproduce the content of the NOTICE file.\n\n#\n\n# You may obtain a copy of the Apache License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the Apache License with the above modification is\n\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied. See the Apache License for the specific\n\n# language governing permissions and limitations under the Apache License.\n\n#\n\n# Try to find GLEW library and include path.\n\n# Once done this will define\n\n#\n\n# GLEW_FOUND\n\n# GLEW_INCLUDE_DIR\n\n# GLEW_LIBRARY\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindHoudini.cmake" : {
      "ObjectId" : "cb19b8b94f418b54e37bde8201c2218c119c4a3f",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2017 Pixar\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"Apache License\")\n\n# with the following modification; you may not use this file except in\n\n# compliance with the Apache License and the following modification to it:\n\n# Section 6. Trademarks. is deleted and replaced with:\n\n#\n\n# 6. Trademarks. This License does not grant permission to use the trade\n\n#    names, trademarks, service marks, or product names of the Licensor\n\n#    and its affiliates, except as required to comply with Section 4(c) of\n\n#    the License and to reproduce the content of the NOTICE file.\n\n#\n\n# You may obtain a copy of the Apache License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the Apache License with the above modification is\n\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied. See the Apache License for the specific\n\n# language governing permissions and limitations under the Apache License.\n\n#\n\n# - Find Houdini Development Kit\n\n#\n\n# Finds an installed Houdini Development Kit\n\n#\n\n# Variables that will be defined:\n\n# HOUDINI_FOUND            Defined if HDK installation has been detected\n\n# HOUDINI_BASE_DIR         Path to the root of the Houdini installation \n\n# HOUDINI_INCLUDE_DIRS      Path to the HDK include directories\n\n# HOUDINI_LIB_DIRS          Path to the HDK libraray directories\n\n# HOUDINI_VERSION           Full Houdini version, 16.0.596 for example\n\n# HOUDINI_MAJOR_VERSION\n\n# HOUDINI_MINOR_VERSION     \n\n# HOUDINI_BUILD_VERSION     \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# In:\n\n#  HOUDINI_ROOT\n\n#\n\n# Out:\n\n#  HOUDINI_FOUND\n\n#  HOUDINI_VERSION\n\n#  HOUDINI_BUILD_VERSION\n\n#  HOUDINI_INCLUDE_DIRS\n\n#  HOUDINI_LIBRARY_DIRS\n\n#  HOUDINI_LIBRARIES\n\n#  HOUDINI_APPS1_LIBRARY\n\n#  HOUDINI_APPS2_LIBRARY\n\n#  HOUDINI_APPS3_LIBRARY\n\n#  HOUDINI_DEVICE_LIBRARY\n\n#  HOUDINI_GEO_LIBRARY\n\n#  HOUDINI_OP1_LIBRARY\n\n#  HOUDINI_OP2_LIBRARY\n\n#  HOUDINI_OP3_LIBRARY\n\n#  HOUDINI_OPZ_LIBRARY\n\n#  HOUDINI_PRM_LIBRARY\n\n#  HOUDINI_RAY_LIBRARY\n\n#  HOUDINI_SIM_LIBRARY\n\n#  HOUDINI_UI_LIBRARY\n\n#  HOUDINI_UT_LIBRARY\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindJinja2.cmake" : {
      "ObjectId" : "820b19af71d618a7450ba52f7d1e59e2a30bd17b",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2016 Pixar\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"Apache License\")\n\n# with the following modification; you may not use this file except in\n\n# compliance with the Apache License and the following modification to it:\n\n# Section 6. Trademarks. is deleted and replaced with:\n\n#\n\n# 6. Trademarks. This License does not grant permission to use the trade\n\n#    names, trademarks, service marks, or product names of the Licensor\n\n#    and its affiliates, except as required to comply with Section 4(c) of\n\n#    the License and to reproduce the content of the NOTICE file.\n\n#\n\n# You may obtain a copy of the Apache License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the Apache License with the above modification is\n\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied. See the Apache License for the specific\n\n# language governing permissions and limitations under the Apache License.\n\n#\n\n# Jinja2 is a python library, ensure that it is available for use with our\n\n# specified version of Python.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindKatanaAPI.cmake" : {
      "ObjectId" : "af7efa151519ab8a0286b77065eb584f989df247",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2016 Pixar\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"Apache License\")\n\n# with the following modification; you may not use this file except in\n\n# compliance with the Apache License and the following modification to it:\n\n# Section 6. Trademarks. is deleted and replaced with:\n\n#\n\n# 6. Trademarks. This License does not grant permission to use the trade\n\n#    names, trademarks, service marks, or product names of the Licensor\n\n#    and its affiliates, except as required to comply with Section 4(c) of\n\n#    the License and to reproduce the content of the NOTICE file.\n\n#\n\n# You may obtain a copy of the Apache License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the Apache License with the above modification is\n\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied. See the Apache License for the specific\n\n# language governing permissions and limitations under the Apache License.\n\n#\n\n# - Find Katana API\n\n#\n\n# Finds an installed Katana plugin API\n\n#\n\n# Variables that will be defined:\n\n# KATANA_API_FOUND         Defined if a Katana installation has been detected\n\n# KATANA_API_INCLUDE_DIR   Path to the Katana API include directories\n\n# KATANA_API_SOURCE_DIR    Path to the Katana API source directories\n\n# KATANA_API_VERSION       Katana API version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sub-system API versions\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindMaterialX.cmake" : {
      "ObjectId" : "3e8777909bc83868612494d4e6498cc2e76d1162",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2018 Pixar\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"Apache License\")\n\n# with the following modification; you may not use this file except in\n\n# compliance with the Apache License and the following modification to it:\n\n# Section 6. Trademarks. is deleted and replaced with:\n\n#\n\n# 6. Trademarks. This License does not grant permission to use the trade\n\n#    names, trademarks, service marks, or product names of the Licensor\n\n#    and its affiliates, except as required to comply with Section 4(c) of\n\n#    the License and to reproduce the content of the NOTICE file.\n\n#\n\n# You may obtain a copy of the Apache License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the Apache License with the above modification is\n\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied. See the Apache License for the specific\n\n# language governing permissions and limitations under the Apache License.\n\n#\n\n# - Find MaterialX Development Kit\n\n#\n\n# Finds an installed MaterialX Development Kit\n\n#\n\n# Variables that will be defined:\n\n# MATERIALX_FOUND            Defined if MaterialX has been detected\n\n# MATERIALX_BASE_DIR         Path to the root of the MaterialX installation \n\n# MATERIALX_INCLUDE_DIRS     Path to the MaterialX include directories\n\n# MATERIALX_LIB_DIRS         Path to the MaterialX libraray directories\n\n# MATERIALX_STDLIB_DIR       Path to the MaterialX standard library directory\n\n# MATERIALX_LIBRARIES        List of MaterialX libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# In:\n\n#  MATERIALX_ROOT\n\n#\n\n# Out:\n\n#  MATERIALX_FOUND\n\n#  MATERIALX_INCLUDE_DIRS\n\n#  MATERIALX_LIB_DIRS\n\n#  MATERIALX_LIBRARIES\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindMaya.cmake" : {
      "ObjectId" : "0944e9bb263186d8cecf36c71b1d1eec16e54491",
      "LastModified" : "2019-02-22T23:54:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Maya finder module\n\n# This module searches for a valid Maya instalation.\n\n# It searches for Maya's devkit, libraries, executables\n\n# and related paths (scripts)\n\n#\n\n# Variables that will be defined:\n\n# MAYA_FOUND          Defined if a Maya installation has been detected\n\n# MAYA_EXECUTABLE     Path to Maya's executable\n\n# MAYA_<lib>_FOUND    Defined if <lib> has been found\n\n# MAYA_<lib>_LIBRARY  Path to <lib> library\n\n# MAYA_INCLUDE_DIRS   Path to the devkit's include directories\n\n# MAYA_API_VERSION    Maya version (6-8 digits)\n\n#\n\n# IMPORTANT: Currently, there's only support for OSX platform and Maya version 2017 because of ABI issues with libc++.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011-2012 Francisco Requena <frarees@gmail.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NO_CMAKE_SYSTEM_PATH needed to avoid conflicts between\n\n# Maya's Foundation library and OSX's framework.\n",
        "Line" : 168,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Tease the MAYA_API_VERSION numbers from the lib headers\n",
        "Line" : 207,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set MAYA_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/modules/FindOSL.cmake" : {
      "ObjectId" : "ebeea4866665aa6453d920f6eff5adb4748bde30",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2018 Pixar\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"Apache License\")\n\n# with the following modification; you may not use this file except in\n\n# compliance with the Apache License and the following modification to it:\n\n# Section 6. Trademarks. is deleted and replaced with:\n\n#\n\n# 6. Trademarks. This License does not grant permission to use the trade\n\n#    names, trademarks, service marks, or product names of the Licensor\n\n#    and its affiliates, except as required to comply with Section 4(c) of\n\n#    the License and to reproduce the content of the NOTICE file.\n\n#\n\n# You may obtain a copy of the Apache License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the Apache License with the above modification is\n\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied. See the Apache License for the specific\n\n# language governing permissions and limitations under the Apache License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find OSL header.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Parse OSL version.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find libraries and binaries\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindOpenColorIO.cmake" : {
      "ObjectId" : "26b8229a1f731985837704b243bc14c5b9bcf518",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2019 Pixar\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"Apache License\")\n\n# with the following modification; you may not use this file except in\n\n# compliance with the Apache License and the following modification to it:\n\n# Section 6. Trademarks. is deleted and replaced with:\n\n#\n\n# 6. Trademarks. This License does not grant permission to use the trade\n\n#    names, trademarks, service marks, or product names of the Licensor\n\n#    and its affiliates, except as required to comply with Section 4(c) of\n\n#    the License and to reproduce the content of the NOTICE file.\n\n#\n\n# You may obtain a copy of the Apache License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the Apache License with the above modification is\n\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied. See the Apache License for the specific\n\n# language governing permissions and limitations under the Apache License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set OCIO_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindOpenEXR.cmake" : {
      "ObjectId" : "2d71428ed8cc9bb11f6d730498371a3369896335",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2016 Pixar\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"Apache License\")\n\n# with the following modification; you may not use this file except in\n\n# compliance with the Apache License and the following modification to it:\n\n# Section 6. Trademarks. is deleted and replaced with:\n\n#\n\n# 6. Trademarks. This License does not grant permission to use the trade\n\n#    names, trademarks, service marks, or product names of the Licensor\n\n#    and its affiliates, except as required to comply with Section 4(c) of\n\n#    the License and to reproduce the content of the NOTICE file.\n\n#\n\n# You may obtain a copy of the Apache License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the Apache License with the above modification is\n\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied. See the Apache License for the specific\n\n# language governing permissions and limitations under the Apache License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# OpenEXR libraries may be suffixed with the version number, so we search\n\n# using both versioned and unversioned names.\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# So #include <half.h> works\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindOpenImageIO.cmake" : {
      "ObjectId" : "9df47ff23f57a0381000e99f442b043696e491ca",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2016 Pixar\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"Apache License\")\n\n# with the following modification; you may not use this file except in\n\n# compliance with the Apache License and the following modification to it:\n\n# Section 6. Trademarks. is deleted and replaced with:\n\n#\n\n# 6. Trademarks. This License does not grant permission to use the trade\n\n#    names, trademarks, service marks, or product names of the Licensor\n\n#    and its affiliates, except as required to comply with Section 4(c) of\n\n#    the License and to reproduce the content of the NOTICE file.\n\n#\n\n# You may obtain a copy of the Apache License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the Apache License with the above modification is\n\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied. See the Apache License for the specific\n\n# language governing permissions and limitations under the Apache License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set OIIO_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindOpenSubdiv.cmake" : {
      "ObjectId" : "686af9b16c69d2e189e5eeadb03776b8e5ae3e75",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find OpenSubdiv library\n\n# Find the native OpenSubdiv includes and library\n\n# This module defines\n\n#  OPENSUBDIV_INCLUDE_DIRS, where to find OpenSubdiv headers, Set when\n\n#                           OPENSUBDIV_INCLUDE_DIR is found.\n\n#  OPENSUBDIV_LIBRARIES, libraries to link against to use OpenSubdiv.\n\n#  OPENSUBDIV_ROOT_DIR, the base directory to search for OpenSubdiv.\n\n#                        This can also be an environment variable.\n\n#  OPENSUBDIV_FOUND, if false, do not try to use OpenSubdiv.\n\n#\n\n# also defined, but not for general use are\n\n#  OPENSUBDIV_LIBRARY, where to find the OpenSubdiv library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2013 Blender Foundation.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If OPENSUBDIV_ROOT_DIR was defined in the environment, use it.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Fink\n",
        "Line" : 43,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 44,
        "CharPositionInLine" : 15
      },
      "5" : {
        "Text" : "# Blastwave\n",
        "Line" : 45,
        "CharPositionInLine" : 13
      },
      "6" : {
        "Text" : "# install_deps.sh\n",
        "Line" : 47,
        "CharPositionInLine" : 17
      },
      "7" : {
        "Text" : "# Find available compute controllers that USD may want to use.\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set OPENSUBDIV_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/modules/FindPTex.cmake" : {
      "ObjectId" : "22c8c298c7023efa0e146e103ce8aec6145b2af3",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright Disney Enterprises, Inc.  All rights reserved.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License\n\n# and the following modification to it: Section 6 Trademarks.\n\n# deleted and replaced with:\n\n#\n\n# 6. Trademarks. This License does not grant permission to use the\n\n# trade names, trademarks, service marks, or product names of the\n\n# Licensor and its affiliates, except as required for reproducing\n\n# the content of the NOTICE file.\n\n#\n\n# You may obtain a copy of the License at\n\n# http://www.apache.org/licenses/LICENSE-2.0\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindPyOpenGL.cmake" : {
      "ObjectId" : "03aec92b81f0169e8ff1939403575b8b307e4952",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2016 Pixar\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"Apache License\")\n\n# with the following modification; you may not use this file except in\n\n# compliance with the Apache License and the following modification to it:\n\n# Section 6. Trademarks. is deleted and replaced with:\n\n#\n\n# 6. Trademarks. This License does not grant permission to use the trade\n\n#    names, trademarks, service marks, or product names of the Licensor\n\n#    and its affiliates, except as required to comply with Section 4(c) of\n\n#    the License and to reproduce the content of the NOTICE file.\n\n#\n\n# You may obtain a copy of the Apache License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the Apache License with the above modification is\n\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied. See the Apache License for the specific\n\n# language governing permissions and limitations under the Apache License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindPySide.cmake" : {
      "ObjectId" : "d114629162faeefed2a13f1645b832e3ccb29daa",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2016 Pixar\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"Apache License\")\n\n# with the following modification; you may not use this file except in\n\n# compliance with the Apache License and the following modification to it:\n\n# Section 6. Trademarks. is deleted and replaced with:\n\n#\n\n# 6. Trademarks. This License does not grant permission to use the trade\n\n#    names, trademarks, service marks, or product names of the Licensor\n\n#    and its affiliates, except as required to comply with Section 4(c) of\n\n#    the License and to reproduce the content of the NOTICE file.\n\n#\n\n# You may obtain a copy of the Apache License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the Apache License with the above modification is\n\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied. See the Apache License for the specific\n\n# language governing permissions and limitations under the Apache License.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Pyside is preferred over PySide2 since PySide2 support is still experimental.\n\n# If this changes, be sure that the Usdviewq.qt module has the same behavior.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindRenderman.cmake" : {
      "ObjectId" : "4ea2cd3a4cc19d4de69a0f1e93780991acf222f0",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Copyright 2018 Pixar\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"Apache License\")\n\n# with the following modification; you may not use this file except in\n\n# compliance with the Apache License and the following modification to it:\n\n# Section 6. Trademarks. is deleted and replaced with:\n\n#\n\n# 6. Trademarks. This License does not grant permission to use the trade\n\n#    names, trademarks, service marks, or product names of the Licensor\n\n#    and its affiliates, except as required to comply with Section 4(c) of\n\n#    the License and to reproduce the content of the NOTICE file.\n\n#\n\n# You may obtain a copy of the Apache License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the Apache License with the above modification is\n\n# distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n\n# KIND, either express or implied. See the Apache License for the specific\n\n# language governing permissions and limitations under the Apache License.\n\n#\n\n#=============================================================================\n\n#\n\n# The module defines the following variables:\n\n#   RENDERMAN_INCLUDE_DIR - path to renderman header directory\n\n#   RENDERMAN_LIBRARY     - path to renderman library files\n\n#       RENDERMAN_FOUND   - true if renderman was found\n\n#\n\n# Example usage:\n\n#   find_package(RENDERMAN)\n\n#   if(RENDERMAN_FOUND)\n\n#     message(\"RENDERMAN found: ${RENDERMAN_LIBRARY}\")\n\n#   endif()\n\n#\n\n#=============================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Use libloadprman.a to handle runtime loading of prman.\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Parse version\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# will set RENDERMAN_FOUND\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindTBB.cmake" : {
      "ObjectId" : "4c2d7f1ff37d3b51181630e83ad85bd524cbfef1",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The MIT License (MIT)\n\n#\n\n# Copyright (c) 2015 Justus Calvin\n\n# \n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n# \n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# FindTBB\n\n# -------\n\n#\n\n# Find TBB include directories and libraries.\n\n#\n\n# Usage:\n\n#\n\n#  find_package(TBB [major[.minor]] [EXACT]\n\n#               [QUIET] [REQUIRED]\n\n#               [[COMPONENTS] [components...]]\n\n#               [OPTIONAL_COMPONENTS components...]) \n\n#\n\n# where the allowed components are tbbmalloc and tbb_preview. Users may modify \n\n# the behavior of this module with the following variables:\n\n#\n\n# * TBB_ROOT_DIR          - The base directory the of TBB installation.\n\n# * TBB_INCLUDE_DIR       - The directory that contains the TBB headers files.\n\n# * TBB_LIBRARY           - The directory that contains the TBB library files.\n\n# * TBB_<library>_LIBRARY - The path of the TBB the corresponding TBB library. \n\n#                           These libraries, if specified, override the \n\n#                           corresponding library search results, where <library>\n\n#                           may be tbb, tbb_debug, tbbmalloc, tbbmalloc_debug,\n\n#                           tbb_preview, or tbb_preview_debug.\n\n# * TBB_USE_DEBUG_BUILD   - The debug version of tbb libraries, if present, will\n\n#                           be used instead of the release version.\n\n#\n\n# Users may modify the behavior of this module with the following environment\n\n# variables:\n\n#\n\n# * TBB_INSTALL_DIR \n\n# * TBBROOT\n\n# * LIBRARY_PATH\n\n#\n\n# This module will set the following variables:\n\n#\n\n# * TBB_FOUND             - Set to false, or undefined, if we haven’t found, or\n\n#                           don’t want to use TBB.\n\n# * TBB_<component>_FOUND - If False, optional <component> part of TBB sytem is\n\n#                           not available.\n\n# * TBB_VERSION           - The full version string\n\n# * TBB_VERSION_MAJOR     - The major version\n\n# * TBB_VERSION_MINOR     - The minor version\n\n# * TBB_INTERFACE_VERSION - The interface version number defined in \n\n#                           tbb/tbb_stddef.h.\n\n# * TBB_<library>_LIBRARY_RELEASE - The path of the TBB release version of \n\n#                           <library>, where <library> may be tbb, tbb_debug,\n\n#                           tbbmalloc, tbbmalloc_debug, tbb_preview, or \n\n#                           tbb_preview_debug.\n\n# * TBB_<library>_LIBRARY_DEGUG - The path of the TBB release version of \n\n#                           <library>, where <library> may be tbb, tbb_debug,\n\n#                           tbbmalloc, tbbmalloc_debug, tbb_preview, or \n\n#                           tbb_preview_debug.\n\n#\n\n# The following varibles should be used to build and link with TBB:\n\n#\n\n# * TBB_INCLUDE_DIRS - The include directory for TBB.\n\n# * TBB_LIBRARIES    - The libraries to link against to use TBB.\n\n# * TBB_DEFINITIONS  - Definitions to use when compiling code that uses TBB.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##################################\n\n# Check the build type\n\n##################################\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "##################################\n\n# Set the TBB search directories\n\n##################################\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Define search paths based on user input and environment variables\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Define the search directories based on the current platform\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# TODO: Set the proper suffix paths based on compiler introspection.\n",
        "Line" : 110,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# OS X\n",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# TODO: Check to see which C++ library is being used by the compiler.\n",
        "Line" : 116,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# The default C++ library on OS X 10.9 and later is libc++\n",
        "Line" : 118,
        "CharPositionInLine" : 6
      },
      "10" : {
        "Text" : "# Linux\n",
        "Line" : 124,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# TODO: Check compiler version to see the suffix should be <arch>/gcc4.1 or\n\n#       <arch>/gcc4.1. For now, assume that the compiler is more recent than\n\n#       gcc 4.4.x or later.\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "##################################\n\n# Find the TBB include dir\n\n##################################\n",
        "Line" : 137,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "##################################\n\n# Find TBB components\n\n##################################\n",
        "Line" : 146,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# Find each component\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Search for the libraries\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Set the library to be used for the component\n",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Set the TBB library list and component found variables\n",
        "Line" : 175,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "##################################\n\n# Set compile flags\n\n##################################\n",
        "Line" : 189,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "##################################\n\n# Set version strings\n\n##################################\n",
        "Line" : 197,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 20
    },
    "extras/CMakeLists.txt" : {
      "ObjectId" : "04a5ba93c409a2c51bcb06f797cbc88436d5b522",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extras/usd/CMakeLists.txt" : {
      "ObjectId" : "e4503686dd1a8a8b41bf3a598dff609c9e1c5458",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extras/usd/examples/CMakeLists.txt" : {
      "ObjectId" : "51782b9f736beb1b3339146a953376f2b47cde10",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extras/usd/examples/usdMakeFileVariantModelAsset/CMakeLists.txt" : {
      "ObjectId" : "18a1e7d21e7ea483dea933b4c6cf02f2f80a6a5c",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extras/usd/examples/usdObj/CMakeLists.txt" : {
      "ObjectId" : "6840c7aa86ea1fa8dfdd46f881c3d1e6607ba094",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extras/usd/examples/usdSchemaExamples/CMakeLists.txt" : {
      "ObjectId" : "0f471627d8a18f4606902b1fe95604bf14a26ad7",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extras/usd/tutorials/CMakeLists.txt" : {
      "ObjectId" : "cb8a3333e36a4d1c708e19814950d444790974e2",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extras/usd/tutorials/authoringProperties/CMakeLists.txt" : {
      "ObjectId" : "4af77420761bd0b034a3d9b84c5211b58841fd3d",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extras/usd/tutorials/authoringVariants/CMakeLists.txt" : {
      "ObjectId" : "231aaad99fc311c7b664745ba72dd54fbf5f883f",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extras/usd/tutorials/convertingLayerFormats/CMakeLists.txt" : {
      "ObjectId" : "f847dde99bd57aca565b5b48bd019f9eff9d153e",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extras/usd/tutorials/endToEnd/CMakeLists.txt" : {
      "ObjectId" : "1716105fa5d483e9dc5df751d3d6f802fc05e32b",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extras/usd/tutorials/exampleModelingVariantsKatana/CMakeLists.txt" : {
      "ObjectId" : "c5176441f264e4cb02d6705580d5c00e37ecb2c7",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extras/usd/tutorials/helloWorld/CMakeLists.txt" : {
      "ObjectId" : "750527cbf8cd63423803064061aa2a1ea2e8bdf8",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extras/usd/tutorials/referencingLayers/CMakeLists.txt" : {
      "ObjectId" : "7dc829a4a3ea0ca506ce8780d7f1ded019a2533b",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "extras/usd/tutorials/traversingStage/CMakeLists.txt" : {
      "ObjectId" : "2b22f60ffc8716600fe6df556bb8dd6233b43bed",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/CMakeLists.txt" : {
      "ObjectId" : "952eefe85230e511b48108b63df14bed06850c52",
      "LastModified" : "2019-03-18T17:05:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/base/CMakeLists.txt" : {
      "ObjectId" : "c68b5e5d471a945451d8a5cf103d82534ac9c1a8",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#    bin\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "pxr/base/lib/CMakeLists.txt" : {
      "ObjectId" : "25c10a2846f4feff3a23ee64a33d4ac3edb5bf81",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/base/lib/arch/CMakeLists.txt" : {
      "ObjectId" : "bd43aa4b3e1f1bd3b53c73c34bc8145486cc5fc5",
      "LastModified" : "2019-03-18T17:05:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# It's important to not include the wrong math.h here.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "pxr/base/lib/gf/CMakeLists.txt" : {
      "ObjectId" : "46cf2fc817ed64e5de8f448065db91651043039c",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Don't get the wrong half.h!\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# gfGenCode --validate ensures that the generated GfVec, GfMatrix, GfRange, etc.\n\n# source files are up to date with the contents of the templates used to\n\n# generate them. If not, a diff displaying the difference will be printed to\n\n# stdout and the build will fail.\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "pxr/base/lib/js/CMakeLists.txt" : {
      "ObjectId" : "fc5279ebaee0b8d4c79fbe1244b542c1a0c3a1bd",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/base/lib/plug/CMakeLists.txt" : {
      "ObjectId" : "4129cd9831c7e5c75cf471ce7364c06547e7a278",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This library helps test behavior when a plugin is unloadable,\n\n# but some linkers by default will error out when building this due\n\n# to the references to undefined symbols. So we need to specify a\n\n# link flag to force these symbols to be looked up at runtime.\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This forces the link to complete but the linker will still\n\n# report the missing symbol as an error and will also emit a\n\n# warning that the link was forced.  This is unfortunate as\n\n# it causes confusion.  There doesn't appear to be any way to\n\n# suppress either the warning or the error, though.  Rest\n\n# assured that the unresolved external symbol error is okay\n\n# for this target.\n",
        "Line" : 109,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "pxr/base/lib/tf/CMakeLists.txt" : {
      "ObjectId" : "f9293c75fb50d660ede9883de0cea4a3a7085631",
      "LastModified" : "2019-02-22T23:54:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make sure not to get the wrong semaphore.h\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# These tests will depend on downstream libraries when built monolithic.\n\n# We don't want changes to those libraries to affect test results so we\n\n# simply disable these tests in that case.\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# These tests will depend on downstream libraries when built monolithic.\n\n# We don't want changes to those libraries to affect test results so we\n\n# simply disable these tests in that case.\n",
        "Line" : 427,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "pxr/base/lib/trace/CMakeLists.txt" : {
      "ObjectId" : "540af7e7f6490bf917ab88299fe8c91a880633b1",
      "LastModified" : "2019-03-29T16:58:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Temporaily disable this test, currently can take 10 to 20 minutes \n\n# or more depending on the OS.\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "pxr/base/lib/vt/CMakeLists.txt" : {
      "ObjectId" : "3f5a0dc94dc7883af71f1c68b0a6f0ad63c2c452",
      "LastModified" : "2019-03-29T16:58:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/base/lib/work/CMakeLists.txt" : {
      "ObjectId" : "b8b60aa5a5affde70c468cccd5a956b482945df4",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/imaging/CMakeLists.txt" : {
      "ObjectId" : "22074aae56a805b24a0cdb846bff5000d47cd130",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/imaging/lib/CMakeLists.txt" : {
      "ObjectId" : "8625852489519c179fb9d252fdb71a0825724e81",
      "LastModified" : "2019-02-22T23:54:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/imaging/lib/cameraUtil/CMakeLists.txt" : {
      "ObjectId" : "83e1a6b891658da0b7fad8ab0ff3ef2a956f63c3",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/imaging/lib/garch/CMakeLists.txt" : {
      "ObjectId" : "c8f618ffff1a17e8e2e96275ef9a4892891b0f47",
      "LastModified" : "2019-01-29T19:47:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/imaging/lib/glf/CMakeLists.txt" : {
      "ObjectId" : "11acf609e2fb839057aebfce24e879d69e78b3fc",
      "LastModified" : "2019-02-22T23:54:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/imaging/lib/hd/CMakeLists.txt" : {
      "ObjectId" : "3f878efee28e79d6065860ef52316a96dfe619f9",
      "LastModified" : "2019-03-29T16:58:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/imaging/lib/hdSt/CMakeLists.txt" : {
      "ObjectId" : "3c6ec440c0d1202402619d5b279163bd24259818",
      "LastModified" : "2019-02-22T23:54:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/imaging/lib/hdx/CMakeLists.txt" : {
      "ObjectId" : "ab6edb31747c28112c3713f63e5ea71cb41f4631",
      "LastModified" : "2019-03-29T16:58:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/imaging/lib/hf/CMakeLists.txt" : {
      "ObjectId" : "2ecfba721fa457182fb0705e434beca7c6e4e43a",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/imaging/lib/hio/CMakeLists.txt" : {
      "ObjectId" : "04bea9c1c39973422801370b62aacde41726037c",
      "LastModified" : "2019-02-22T23:54:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/imaging/lib/pxOsd/CMakeLists.txt" : {
      "ObjectId" : "ea27f1fa4a4901eb58e5ebe75b599483ce807d64",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/imaging/plugin/CMakeLists.txt" : {
      "ObjectId" : "6dba8036591255f9ce42301715ee00d87422530a",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/imaging/plugin/hdEmbree/CMakeLists.txt" : {
      "ObjectId" : "8c1cc9fd48223658bd080f3e95200a9042ab49e7",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/imaging/plugin/hdStream/CMakeLists.txt" : {
      "ObjectId" : "365e49c78ba3bbee090a41ae47c476b73b6ecabc",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usd/CMakeLists.txt" : {
      "ObjectId" : "c894cca37bb3843af477b66770c8acbfb894902a",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usd/bin/CMakeLists.txt" : {
      "ObjectId" : "50cff2b3f95be792bac4725db89e92a9d6286975",
      "LastModified" : "2019-02-22T23:54:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usd/bin/sdfdump/CMakeLists.txt" : {
      "ObjectId" : "bccbd90936aa7052fffc988f1bd90e283396a0b8",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usd/bin/sdffilter/CMakeLists.txt" : {
      "ObjectId" : "3b5dfcd8cd6de80695e02c0616fb2fc6fa9fe586",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usd/bin/usdcat/CMakeLists.txt" : {
      "ObjectId" : "1322a1a0bb6b81e978c2159d157b059996aca9a6",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usd/bin/usdchecker/CMakeLists.txt" : {
      "ObjectId" : "173f584a57bc3ef46d252e45b7dec6a255a63e4a",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usd/bin/usddiff/CMakeLists.txt" : {
      "ObjectId" : "b1020f8c663ce91f2a932650ef05d004976e76c6",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usd/bin/usddumpcrate/CMakeLists.txt" : {
      "ObjectId" : "6fee23e4008171f490f8da11bf0378c1964c722b",
      "LastModified" : "2019-01-29T19:47:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usd/bin/usdedit/CMakeLists.txt" : {
      "ObjectId" : "c9f6c8e8fa7bc111cd068919d0449e3c7e19c23a",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Look up programs needed for testing\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "pxr/usd/bin/usdresolve/CMakeLists.txt" : {
      "ObjectId" : "e3df1f1be7dd202e2e01cf6dc239138adf318ed8",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# XXX:\n\n# Temporarily disable this test on Windows; the output contains\n\n# a file path but the specified regex isn't stripping off the\n\n# directory as expected.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "pxr/usd/bin/usdstitch/CMakeLists.txt" : {
      "ObjectId" : "43e414163fef0c124b2a7a49097c98eea0252c08",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usd/bin/usdstitchclips/CMakeLists.txt" : {
      "ObjectId" : "36588a9c0d0fffde0b135c582b3e0f3adc0ef231",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usd/bin/usdtree/CMakeLists.txt" : {
      "ObjectId" : "34a4fceecb045c0986978b25caafbdfb62075d47",
      "LastModified" : "2019-02-22T23:54:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usd/bin/usdzip/CMakeLists.txt" : {
      "ObjectId" : "dad156d9fbcd7ba6f12ba9dfb66ce9922ffa6205",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usd/lib/CMakeLists.txt" : {
      "ObjectId" : "dcc20536a54f646155288cd492c307925d00a326",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usd/lib/ar/CMakeLists.txt" : {
      "ObjectId" : "de7a01b29f0a8140f2a4053f77cca1b312d8c469",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usd/lib/kind/CMakeLists.txt" : {
      "ObjectId" : "9a2dc06aef78c784707e948060b5d5af7612b4fe",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usd/lib/ndr/CMakeLists.txt" : {
      "ObjectId" : "83df3a6f7546a84294b1ae0d06d61ed36ca7b832",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usd/lib/pcp/CMakeLists.txt" : {
      "ObjectId" : "e5203f9a038f7845d5c22a91c4dfc7cfc438c597",
      "LastModified" : "2019-02-22T23:54:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usd/lib/sdf/CMakeLists.txt" : {
      "ObjectId" : "8780cb62b1fa9b2f8ebbf4d4738cae79dac6943a",
      "LastModified" : "2019-03-29T16:58:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Flex/Bison generated code\n",
        "Line" : 74,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# Flex/Bison generated code\n",
        "Line" : 117,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Validate that the checked in generated code matches the sources. This requires\n\n# a specific version of bison/flex to get the same results\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "pxr/usd/lib/sdr/CMakeLists.txt" : {
      "ObjectId" : "d1dd6cb9e511052827b6262c3be1e296fc6ece08",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usd/lib/usd/CMakeLists.txt" : {
      "ObjectId" : "cc8d32b0de38cf3a00f307dd55c9f5a915621014",
      "LastModified" : "2019-03-29T16:58:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This test runs the same test script as testUsdValueClips\n\n# but uses a different set of test assets that are installed above.\n",
        "Line" : 527,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "pxr/usd/lib/usdGeom/CMakeLists.txt" : {
      "ObjectId" : "b3e23d83aa541620c744d17b6b89957c5c6e9d0b",
      "LastModified" : "2019-02-22T23:54:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This tests functionality when usdGeom has not been loaded.  That isn't\n\n# possible with a monolithic library.\n",
        "Line" : 265,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "pxr/usd/lib/usdHydra/CMakeLists.txt" : {
      "ObjectId" : "ce1ce5518d856952ab301b207d08a33e194ba0db",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usd/lib/usdLux/CMakeLists.txt" : {
      "ObjectId" : "d0b4e0abb156937d5ae044cd05eec14d6871584e",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usd/lib/usdRi/CMakeLists.txt" : {
      "ObjectId" : "65d4f8ff085eac5b3ea7d9c7f0e2639504e2d38b",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usd/lib/usdShade/CMakeLists.txt" : {
      "ObjectId" : "624e5523025eabca3ef39313ce52cf3c00fa09e5",
      "LastModified" : "2019-01-29T19:47:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usd/lib/usdSkel/CMakeLists.txt" : {
      "ObjectId" : "4b3794baa6730d8587d0a67766f99396e9b625be",
      "LastModified" : "2019-02-22T23:54:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usd/lib/usdUI/CMakeLists.txt" : {
      "ObjectId" : "8b6522c6cbff6212f3a6cb088d33aa8f84d4ee02",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usd/lib/usdUtils/CMakeLists.txt" : {
      "ObjectId" : "c08d57f67c40a9e07311a7c7d0096ff5f32508ea",
      "LastModified" : "2019-03-29T16:58:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usd/lib/usdVol/CMakeLists.txt" : {
      "ObjectId" : "7b41a55de456fe9eac490f9eb93cad924ae8a842",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usd/plugin/CMakeLists.txt" : {
      "ObjectId" : "9fde683ff217d67b230e0f8d1b47c2295f571362",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usd/plugin/sdrOsl/CMakeLists.txt" : {
      "ObjectId" : "d37eb8374aa8736597974f361c7834c5b46bfffe",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usd/plugin/usdAbc/CMakeLists.txt" : {
      "ObjectId" : "3d1852787352de847c60ec25d51ce7c6265bf82a",
      "LastModified" : "2019-02-22T23:54:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usd/plugin/usdMtlx/CMakeLists.txt" : {
      "ObjectId" : "18d9e0ac6d626f2ac888992324ef166b81b00964",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usdImaging/CMakeLists.txt" : {
      "ObjectId" : "6325b1e4f5c6ec59e0a2c980ed391a20f948da8d",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usdImaging/bin/CMakeLists.txt" : {
      "ObjectId" : "866210e0728b30084d728aa64f91c5cc552aaa33",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usdImaging/bin/testusdview/CMakeLists.txt" : {
      "ObjectId" : "d845621c57899fba997b16cf574f1f9c7b4b3a18",
      "LastModified" : "2019-03-29T16:58:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usdImaging/bin/usdview/CMakeLists.txt" : {
      "ObjectId" : "443d7d25be556a7aeffeb19d282872686f689ad7",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usdImaging/lib/CMakeLists.txt" : {
      "ObjectId" : "357106f2d464c204592d412ff12a07680dd7353d",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usdImaging/lib/usdImaging/CMakeLists.txt" : {
      "ObjectId" : "d75a77481a0e3c706f07b514fd30b0fa32cadae6",
      "LastModified" : "2019-02-22T23:54:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usdImaging/lib/usdImagingGL/CMakeLists.txt" : {
      "ObjectId" : "191f660aebd44c26d3c5825ae47a095329ceb97c",
      "LastModified" : "2019-02-22T23:54:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Note: both python include directives are included for compatibility.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "pxr/usdImaging/lib/usdShaders/CMakeLists.txt" : {
      "ObjectId" : "0e1f636e4a895e6673b3e922fae766f85492cca3",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usdImaging/lib/usdSkelImaging/CMakeLists.txt" : {
      "ObjectId" : "81e71d6e51ff262dcc384012f8d3cd8ad7e0708c",
      "LastModified" : "2019-02-22T23:54:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usdImaging/lib/usdVolImaging/CMakeLists.txt" : {
      "ObjectId" : "33620ec8259cd9b758de4ac2d95803239d693bd0",
      "LastModified" : "2019-01-29T19:47:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "pxr/usdImaging/lib/usdviewq/CMakeLists.txt" : {
      "ObjectId" : "d738d42fefeebc0e6a3b77a6cb483dc22675e015",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/houdini/CMakeLists.txt" : {
      "ObjectId" : "50cf37e911784b2c4b6f5af05d422fec8c9ee49c",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Note that most of these extra definitions come from running hcustom\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "third_party/houdini/lib/CMakeLists.txt" : {
      "ObjectId" : "c0de4cd26233aa43bdd944f3b52114a2276e3495",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/houdini/lib/gusd/CMakeLists.txt" : {
      "ObjectId" : "8b3a784860cd6f5af3713f55204c4de6f4799d26",
      "LastModified" : "2019-02-22T23:54:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The library names on Windows don't match the linux ones, so we have a \n\n# higher level CMakeLists.txt that links in all the Houdini libraries always\n\n# on Windows.  Future work on this would be to consolidate these two\n\n# mechanisms.\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Disabling temporarily: need to resolve tbb link errors.\n\n#pxr_build_test(testGusdErrors\n\n#    LIBRARIES\n\n#        gusd\n\n#        tf\n\n#        ${HOUDINI_UT_LIBRARY}\n\n#    CPPFILES\n\n#        testenv/testGusdErrors.cpp\n\n#)\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#pxr_register_test(testGusdErrors\n\n#    COMMAND \"${CMAKE_INSTALL_PREFIX}/tests/testGusdErrors\"\n\n#    EXPECTED_RETURN_CODE 0\n\n#)\n",
        "Line" : 139,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "third_party/houdini/plugin/CMakeLists.txt" : {
      "ObjectId" : "65ac0efe2fe471409ad16ceae63a1b50d1b542c0",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/houdini/plugin/OP_gusd/CMakeLists.txt" : {
      "ObjectId" : "8b81360ad298c63d4a1556bf257aab64b28e21ff",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/katana/CMakeLists.txt" : {
      "ObjectId" : "4eef157a8bd5411b966da6e96a2567d85fe69120",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Transform the KATANA_API versions into defines to be used by this code\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "third_party/katana/lib/CMakeLists.txt" : {
      "ObjectId" : "691a0475064c8d1632403a922d5e8d9d9f79b338",
      "LastModified" : "2019-01-29T19:47:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/katana/lib/katanaAttrfncApi/CMakeLists.txt" : {
      "ObjectId" : "28981d522ff42b7b9c39ca3d717ef1ffe12f5c96",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This library builds source files from the Katana installation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "third_party/katana/lib/katanaOpApi/CMakeLists.txt" : {
      "ObjectId" : "ace0ec7f1ef6388ee158db039489e2d226730610",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This library builds source files from the Katana installation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "third_party/katana/lib/katanaPluginApi/CMakeLists.txt" : {
      "ObjectId" : "756811d2e8cc74fc0b49112b240d15538e1b34c1",
      "LastModified" : "2019-01-29T19:47:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This library builds source files from the Katana installation\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Disable all warnings for this library, otherwise strict builds will fail\n\n# due to warnings from this code, which comes from the Katana installation and\n\n# which we have no control over.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "third_party/katana/lib/usdKatana/CMakeLists.txt" : {
      "ObjectId" : "baf74979a42df5196e422df7a51eab48faf5c870",
      "LastModified" : "2019-02-22T23:54:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/katana/lib/vtKatana/CMakeLists.txt" : {
      "ObjectId" : "9515dd07afd4d49f8899711550a196cca4edbd81",
      "LastModified" : "2019-02-22T23:54:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/katana/plugin/CMakeLists.txt" : {
      "ObjectId" : "64651c3414a7b6aca28f6788af65df48c6965a56",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/katana/plugin/pxrUsdIn/CMakeLists.txt" : {
      "ObjectId" : "54c62ae8b39f9c8670a51862d91003a5ed436df2",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/katana/plugin/pxrUsdInPrman/CMakeLists.txt" : {
      "ObjectId" : "5a541c1b8333282aed07523bd427972c8f95fadd",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/katana/plugin/pxrUsdInShipped/CMakeLists.txt" : {
      "ObjectId" : "a0691cd297e776544cd9a0db0bcf05cd65fdbbfb",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/katana/plugin/vmp_usd/CMakeLists.txt" : {
      "ObjectId" : "c6c52cd10106d4655840d1e4f0678aee2d5e14c4",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/katana/python/CMakeLists.txt" : {
      "ObjectId" : "3a89d34866487d75fe499d0a6d5a356fa133285c",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/katana/python/nodetypes/CMakeLists.txt" : {
      "ObjectId" : "f678c448ee37c75457a0a3827491a3c8e1e7144b",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/maya/CMakeLists.txt" : {
      "ObjectId" : "00e4ba298fe031cf8ac7a564b1a93d4dc341b2f7",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Additional defines for building against Maya\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "third_party/maya/lib/CMakeLists.txt" : {
      "ObjectId" : "377b223835932986cf5c3bf907dea9a09e130668",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/maya/lib/px_vp20/CMakeLists.txt" : {
      "ObjectId" : "f2f8e94ea13c6126678a200396eb697983ce581e",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/maya/lib/pxrUsdMayaGL/CMakeLists.txt" : {
      "ObjectId" : "ae250ae8aadbd28576943b319e5937b708e54054",
      "LastModified" : "2018-12-12T00:59:37Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/maya/lib/usdMaya/CMakeLists.txt" : {
      "ObjectId" : "d2f03c1430092439188ef7853091d7db6013e80e",
      "LastModified" : "2019-02-22T23:54:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Note - we set up a maya profile directory ($MAYA_APP_DIR) that's empty, so we\n\n# can ensure we test with a default profile - had some crashes with 2017 when\n\n# using an existing user profile (due to some problems with color management\n\n# settings)\n\n# Also, maya creates the $MAYA_APP_DIR on demand, so we don't need to bother\n\n# making the directory ourselves.  We use <PXR_TEST_DIR>, which is expanded\n\n# to the absolute path of the temporary folder tests are run in, because:\n\n#   A) we can't use relative paths (\"./maya_profile\"), because maya in\n\n#      windows will error\n\n#   B) we don't know the absolute path to the test directory at cmake-compile\n\n#      time\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# XXX: This test is disabled by default since it requires the RenderMan for\n\n# Maya plugin.\n\n# pxr_install_test_dir(\n\n#     SRC testenv/UsdExportRfMLightTest\n\n#     DEST testUsdExportRfMLight\n\n# )\n\n# pxr_register_test(testUsdExportRfMLight\n\n#     CUSTOM_PYTHON ${MAYA_PY_EXECUTABLE}\n\n#     COMMAND \"${CMAKE_INSTALL_PREFIX}/tests/testUsdExportRfMLight\"\n\n#     TESTENV testUsdExportRfMLight\n\n#     ENV\n\n#         MAYA_PLUG_IN_PATH=${CMAKE_INSTALL_PREFIX}/third_party/maya/plugin\n\n#         MAYA_SCRIPT_PATH=${CMAKE_INSTALL_PREFIX}/third_party/maya/share/usd/plugins/usdMaya/resources\n\n#         MAYA_DISABLE_CIP=1\n\n#         MAYA_APP_DIR=<PXR_TEST_DIR>/maya_profile\n\n# )\n",
        "Line" : 558,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# XXX: This test is disabled by default since it requires the RenderMan for\n\n# Maya plugin.\n\n# pxr_install_test_dir(\n\n#     SRC testenv/UsdImportRfMLightTest\n\n#     DEST testUsdImportRfMLight\n\n# )\n\n# pxr_register_test(testUsdImportRfMLight\n\n#     CUSTOM_PYTHON ${MAYA_PY_EXECUTABLE}\n\n#     COMMAND \"${CMAKE_INSTALL_PREFIX}/tests/testUsdImportRfMLight\"\n\n#     TESTENV testUsdImportRfMLight\n\n#     ENV\n\n#         MAYA_PLUG_IN_PATH=${CMAKE_INSTALL_PREFIX}/third_party/maya/plugin\n\n#         MAYA_SCRIPT_PATH=${CMAKE_INSTALL_PREFIX}/third_party/maya/share/usd/plugins/usdMaya/resources\n\n#         MAYA_DISABLE_CIP=1\n\n#         MAYA_APP_DIR=<PXR_TEST_DIR>/maya_profile\n\n# )\n",
        "Line" : 799,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "third_party/maya/plugin/CMakeLists.txt" : {
      "ObjectId" : "a4b3a8888ef49963249043ce5f95fbcca4dba536",
      "LastModified" : "2019-01-29T19:47:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/maya/plugin/pxrUsd/CMakeLists.txt" : {
      "ObjectId" : "471056edcf9003ce7adf135f7c9bab306aae1639",
      "LastModified" : "2019-02-22T23:54:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/maya/plugin/pxrUsdPreviewSurface/CMakeLists.txt" : {
      "ObjectId" : "abdf95a7fe06921b2bceb064ff3cadff263ddf79",
      "LastModified" : "2019-02-22T23:54:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# pxrUsdPreviewSurfaceGenFragments --validate ensures that the generated Maya\n\n# fragment XML source files are up to date with the glslfx file and the\n\n# contents of the templates used to generate them. If not, a diff displaying\n\n# the difference will be printed to stdout and the build will fail.\n\n# Note that the XSD file for Viewport 2.0 fragments seems to be misnamed in the\n\n# Maya installation (\"v2p...\" as opposed to \"vp2...\").\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "third_party/maya/plugin/pxrUsdTranslators/CMakeLists.txt" : {
      "ObjectId" : "aeaa97fc958ad8a35c3f970abbc51994db59fc97",
      "LastModified" : "2019-02-22T23:54:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 146
  },
  "ElapsedTime" : 4597
}