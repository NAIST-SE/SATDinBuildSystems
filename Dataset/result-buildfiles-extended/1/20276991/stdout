{
  "Repository" : "20276991",
  "Revision" : "HEAD",
  "ObjectId" : "a1fa07292041d8f6083fa13582886214e80607e2",
  "CommitTime" : "2019-04-04T22:49:27Z",
  "Files" : {
    "installers/osx/python/lib/python2.7/config/Makefile" : {
      "ObjectId" : "86e2ca14332c7c7f4307a041b025e951f3170902",
      "LastModified" : "2016-06-03T16:40:29Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Generated automatically from Makefile.pre by makesetup.\n\n# Top-level Makefile for Python\n\n#\n\n# As distributed, this file is called Makefile.pre.in; it is processed\n\n# into the real Makefile by running the script ./configure, which\n\n# replaces things like @spam@ with values appropriate for your system.\n\n# This means that if you edit Makefile, your changes get lost the next\n\n# time you run the configure script.  Ideally, you can do:\n\n#\n\n#\t./configure\n\n#\tmake\n\n#\tmake test\n\n#\tmake install\n\n#\n\n# If you have a previous version of Python installed that you don't\n\n# want to overwrite, you can use \"make altinstall\" instead of \"make\n\n# install\".  Refer to the \"Installing\" section in the README file for\n\n# additional details.\n\n#\n\n# See also the section \"Build instructions\" in the README file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# === Variables set by makesetup ===\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# === Variables set by configure\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Shell used by make (some versions default to the login shell, which is bad)\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use this to make a link between python$(VERSION) and python in $(BINDIR)\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Portable install script (configure doesn't always guess right)\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Shared libraries must be installed with executable mode on some systems;\n\n# rather than figuring out exactly which, we always give them executable mode.\n\n# Also, making them read-only seems to be a good idea...\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Compiler options\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Both CPPFLAGS and LDFLAGS need to contain the shell's value for setup.py to\n\n# be able to build extension modules using the directories specified in the\n\n# environment variables\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Extra C flags added for building the interpreter object files.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# C flags used for building the interpreter object files\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Machine-dependent subdirectories\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Multiarch directory (may be empty)\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Install prefix for architecture-independent files\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Install prefix for architecture-dependent files\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Install prefix for data files\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Expanded directories\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Detailed destination directories\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Symbols used for using shared libraries\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Executable suffix (.exe on Windows and Mac OS X)\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Short name and location for Mac OS X Python framework\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Deployment target selected during configure, to be checked\n\n# by distutils. The export statement is needed to ensure that the\n\n# deployment target is active during build.\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Options to enable prebinding (for fast startup prior to Mac OS X 10.3)\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Environment to run shared python without installed libraries\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# ensurepip options\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Modes for directories, executables and data files created by the\n\n# install process.  Default to user-only-writable for all file types.\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# configure script arguments\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Subdirectories with code\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Other subdirectories\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Files and directories to be distributed\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Tcl and Tk config info from --with-tcltk-includes and -libs options\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# The task to run while instrument when building the profile-opt target\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# === Definitions added by makesetup ===\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##########################################################################\n\n# Modules\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Used of signalmodule.o is not available\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "##########################################################################\n\n# Grammar\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "##########################################################################\n\n# Parser\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "##########################################################################\n\n# AST\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# XXX Note that a build now requires Python exist before the build starts\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "##########################################################################\n\n# Python\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##########################################################################\n\n# Objects\n",
        "Line" : 382,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "##########################################################################\n\n# objects that get linked into the Python library\n",
        "Line" : 425,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#########################################################################\n\n# Rules\n",
        "Line" : 436,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Default target\n",
        "Line" : 439,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Compile a binary with profile guided optimization.\n",
        "Line" : 443,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# FIXME: can't run for a cross build\n",
        "Line" : 467,
        "CharPositionInLine" : 3
      },
      "46" : {
        "Text" : "# Build the interpreter\n",
        "Line" : 482,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Create build directory and generate the sysconfig build-time data there.\n\n# pybuilddir.txt contains the name of the build dir and is used for\n\n# sys.path fixup -- see Modules/getpath.c.\n\n# Since this step runs before shared modules are built, try to avoid bootstrap\n\n# problems by creating a dummy pybuilddir.txt just to allow interpreter\n\n# initialization to succeed.  It will be overwritten by generate-posix-vars\n\n# or removed in case of failure.\n",
        "Line" : 491,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Build the shared modules\n\n# Under GNU make, MAKEFLAGS are sorted and normalized; the 's' for\n\n# -s, --silent or --quiet is always the first char.\n\n# Under BSD make, MAKEFLAGS might be \" -s -v x=y\".\n",
        "Line" : 507,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# elsewhere caused bytecode read from .pyc files to behave differently\n\n# than bytecode generated directly from a .py source file.  Sometimes\n\n# the bytecode read from a .pyc file had the bug, sometimes the directly\n\n# generated bytecode.  This is sometimes a very shy bug needing a lot of\n\n# sample data.\n",
        "Line" : 822,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "#  Run the unitests for both architectures in a Universal build on OSX\n\n#  Must be run on an Intel box.\n",
        "Line" : 843,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Like testall, but with a single pass only\n\n# run an optional script to include some information about the build environment\n",
        "Line" : 856,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# Install everything\n",
        "Line" : 880,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Install almost everything without disturbing previous versions\n",
        "Line" : 891,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# Install shared libraries enabled by Setup\n",
        "Line" : 907,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# Install the interpreter by creating a symlink chain:\n\n#  $(PYTHON) -> python2 -> python$(VERSION))\n\n# Also create equivalent chains for other installed files\n",
        "Line" : 929,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "# Install the interpreter with $(VERSION) affixed\n\n# This goes into $(exec_prefix)\n",
        "Line" : 950,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# Install the versioned manual page\n",
        "Line" : 974,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Install the unversioned manual pages\n",
        "Line" : 987,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Install the library\n",
        "Line" : 994,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# Create the PLATDIR source directory, if one wasn't distributed..\n",
        "Line" : 1114,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Substitution happens here, as the completely-expanded BINDIR\n\n# is not available in configure\n",
        "Line" : 1132,
        "CharPositionInLine" : 1
      },
      "62" : {
        "Text" : "# Install the include files\n",
        "Line" : 1136,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Install the library and miscellaneous stuff needed for extending/embedding\n\n# This goes into $(exec_prefix)\n",
        "Line" : 1154,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# pkgconfig directory\n",
        "Line" : 1158,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 65,
      "Errorlog" : "line 1195:2 token recognition error at: '\"`echo $(MACHDEP) | sed 's/^\\(...\\).*/\\1'\nline 1398:45 token recognition error at: '\" | sort -u; \\\\n\\n# Find files with funny names\\nfunny:\\n\\tfind $(SUBDIRS) $(SUBDIRSTOO) -type d \\\\n\\t\\t-o -name '*.[chs]' \\\\n\\t\\t-o -name '*.py' \\\\n\\t\\t-o -name '*.doc' \\\\n\\t\\t-o -name '*.sty' \\\\n\\t\\t-o -name '*.bib' \\\\n\\t\\t-o -name '*.dat' \\\\n\\t\\t-o -name '*.el' \\\\n\\t\\t-o -name '*.fd' \\\\n\\t\\t-o -name '*.in' \\\\n\\t\\t-o -name '*.tex' \\\\n\\t\\t-o -name '*,[vpt]' \\\\n\\t\\t-o -name 'Setup' \\\\n\\t\\t-o -name 'Setup.*' \\\\n\\t\\t-o -name README \\\\n\\t\\t-o -name Makefile \\\\n\\t\\t-o -name ChangeLog \\\\n\\t\\t-o -name Repository \\\\n\\t\\t-o -name Root \\\\n\\t\\t-o -name Entries \\\\n\\t\\t-o -name Tag \\\\n\\t\\t-o -name tags \\\\n\\t\\t-o -name TAGS \\\\n\\t\\t-o -name .cvsignore \\\\n\\t\\t-o -name MANIFEST \\\\n\\t\\t-o -print\\n\\n# Perform some verification checks on any modified files.\\npatchcheck:\\n\\t$(RUNSHARED) ./$(BUILDPYTHON) $(srcdir)/Tools/scripts/patchcheck.py\\n\\n# Dependencies\\n\\nPython/thread.o:  $(srcdir)/Python/thread_atheos.h $(srcdir)/Python/thread_beos.h $(srcdir)/Python/thread_cthread.h $(srcdir)/Python/thread_foobar.h $(srcdir)/Python/thread_lwp.h $(srcdir)/Python/thread_nt.h $(srcdir)/Python/thread_os2.h $(srcdir)/Python/thread_pth.h $(srcdir)/Python/thread_pthread.h $(srcdir)/Python/thread_sgi.h $(srcdir)/Python/thread_solaris.h $(srcdir)/Python/thread_wince.h\\n\\n# Declare targets that aren't real files\\n.PHONY: all build_all sharedmods oldsharedmods test quicktest memtest\\n.PHONY: install altinstall oldsharedinstall bininstall altbininstall\\n.PHONY: maninstall libinstall inclinstall libainstall sharedinstall\\n.PHONY: frameworkinstall frameworkinstallframework frameworkinstallstructure\\n.PHONY: frameworkinstallmaclib frameworkinstallapps frameworkinstallunixtools\\n.PHONY: frameworkaltinstallunixtools recheck autoconf clean clobber distclean\\n.PHONY: smelly funny patchcheck touch altmaninstall commoninstall\\n.PHONY: gdbhooks\\n\\n# IF YOU PUT ANYTHING HERE IT WILL GO AWAY\\n\\n# Rules appended by makedepend\\n\\nModules/threadmodule.o: $(srcdir)/Modules/threadmodule.c; $(CC) $(PY_CFLAGS)  -c $(srcdir)/Modules/threadmodule.c -o Modules/threadmodule.o\\nModules/threadmodule$(SO):  Modules/threadmodule.o; $(BLDSHARED)  Modules/threadmodule.o   -o Modules/threadmodule$(SO)\\nModules/signalmodule.o: $(srcdir)/Modules/signalmodule.c; $(CC) $(PY_CFLAGS)  -c $(srcdir)/Modules/signalmodule.c -o Modules/signalmodule.o\\nModules/signalmodule$(SO):  Modules/signalmodule.o; $(BLDSHARED)  Modules/signalmodule.o   -o Modules/signalmodule$(SO)\\nModules/posixmodule.o: $(srcdir)/Modules/posixmodule.c; $(CC) $(PY_CFLAGS)  -c $(srcdir)/Modules/posixmodule.c -o Modules/posixmodule.o\\nModules/posixmodule$(SO):  Modules/posixmodule.o; $(BLDSHARED)  Modules/posixmodule.o   -o Modules/posixmodule$(SO)\\nModules/errnomodule.o: $(srcdir)/Modules/errnomodule.c; $(CC) $(PY_CFLAGS)  -c $(srcdir)/Modules/errnomodule.c -o Modules/errnomodule.o\\nModules/errnomodule$(SO):  Modules/errnomodule.o; $(BLDSHARED)  Modules/errnomodule.o   -o Modules/errnomodule$(SO)\\nModules/pwdmodule.o: $(srcdir)/Modules/pwdmodule.c; $(CC) $(PY_CFLAGS)  -c $(srcdir)/Modules/pwdmodule.c -o Modules/pwdmodule.o\\nModules/pwdmodule$(SO):  Modules/pwdmodule.o; $(BLDSHARED)  Modules/pwdmodule.o   -o Modules/pwdmodule$(SO)\\nModules/_sre.o: $(srcdir)/Modules/_sre.c; $(CC) $(PY_CFLAGS)  -c $(srcdir)/Modules/_sre.c -o Modules/_sre.o\\nModules/_sre$(SO):  Modules/_sre.o; $(BLDSHARED)  Modules/_sre.o   -o Modules/_sre$(SO)\\nModules/_codecsmodule.o: $(srcdir)/Modules/_codecsmodule.c; $(CC) $(PY_CFLAGS)  -c $(srcdir)/Modules/_codecsmodule.c -o Modules/_codecsmodule.o\\nModules/_codecsmodule$(SO):  Modules/_codecsmodule.o; $(BLDSHARED)  Modules/_codecsmodule.o   -o Modules/_codecsmodule$(SO)\\nModules/_weakref.o: $(srcdir)/Modules/_weakref.c; $(CC) $(PY_CFLAGS)  -c $(srcdir)/Modules/_weakref.c -o Modules/_weakref.o\\nModules/_weakref$(SO):  Modules/_weakref.o; $(BLDSHARED)  Modules/_weakref.o   -o Modules/_weakref$(SO)\\nModules/zipimport.o: $(srcdir)/Modules/zipimport.c; $(CC) $(PY_CFLAGS)  -c $(srcdir)/Modules/zipimport.c -o Modules/zipimport.o\\nModules/zipimport$(SO):  Modules/zipimport.o; $(BLDSHARED)  Modules/zipimport.o   -o Modules/zipimport$(SO)\\nModules/symtablemodule.o: $(srcdir)/Modules/symtablemodule.c; $(CC) $(PY_CFLAGS)  -c $(srcdir)/Modules/symtablemodule.c -o Modules/symtablemodule.o\\nModules/_symtablemodule$(SO):  Modules/symtablemodule.o; $(BLDSHARED)  Modules/symtablemodule.o   -o Modules/_symtablemodule$(SO)\\nModules/xxsubtype.o: $(srcdir)/Modules/xxsubtype.c; $(CC) $(PY_CFLAGS)  -c $(srcdir)/Modules/xxsubtype.c -o Modules/xxsubtype.o\\nModules/xxsubtype$(SO):  Modules/xxsubtype.o; $(BLDSHARED)  Modules/xxsubtype.o   -o Modules/xxsubtype$(SO)\\n\u0000'\n"
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 3578
}