{
  "Repository" : "9749637",
  "Revision" : "HEAD",
  "ObjectId" : "e2e09204d4cbcd08bf0d33ca72b7e23dd9e053eb",
  "CommitTime" : "2019-04-16T16:29:25Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "cb2bdb11888fcbe4530c18693d7c4fbd49e340bb",
      "LastModified" : "2019-04-16T15:40:21Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set MADNESS version\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add module directory and modules =============================================\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# workaround for cmake bug: CheckCXXSourceCompiles does not respect CXX_STANDARD\n\n# see https://github.com/OPM/opm-common/blob/master/cmake/Modules/FindCXX11Features.cmake\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set install paths ============================================================\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TODO this matches Automake value, should be adjusted to the convention: share/madness/${MADNESS_VERSION}/doc\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Enable optional libraries ====================================================\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Always search for libraries that are 'ON' by default. If a library is not\n\n# found, it is disabled without error. If the library is 'OFF' by default,\n\n# failure to find the library is an error. \n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Configure options ============================================================\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Enable support for shared libraries ==========================================\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Get host and platform information ============================================\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# look for frameworks and appbundles last\n",
        "Line" : 236,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Check if the target platform is CRAY XE\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Check if the target platform is CRAY XE\n",
        "Line" : 261,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Check if the target platform is BG/P\n",
        "Line" : 278,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Check if the target platform is BG/Q\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Check if the target is x86_64\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Check if the target is x86\n",
        "Line" : 312,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Check compiler feature support ===============================================\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++20 is only configurable via compile features with cmake 3.12 and older\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Check for system include files\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Check type support\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Check function support\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# look for both version of posix_memalign, with and without throw()\n",
        "Line" : 364,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# look for both version of posix_memalign, with and without throw()\n",
        "Line" : 392,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Check for thread local storage keyword support.\n\n# thread_local, __thread , __thread_local, or __declspec(thread)\n",
        "Line" : 417,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Check for restrict keyword support\n\n# restrict, __restrict, __restrict__, or _Restrict\n",
        "Line" : 446,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Set the restrict keyword to nothing so that it is not used\n",
        "Line" : 468,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# Print restrict keyword search results\n",
        "Line" : 473,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Check linker feature support ===============================================\n",
        "Line" : 486,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Check for applications =======================================================\n",
        "Line" : 491,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# ccache for caching builds\n",
        "Line" : 507,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Check for external dependencies ==============================================\n",
        "Line" : 515,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Add project subdirectories ===================================================\n",
        "Line" : 532,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Create build and install libraries libraries\n",
        "Line" : 534,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# to be GNU compatible\n",
        "Line" : 546,
        "CharPositionInLine" : 58
      },
      "35" : {
        "Text" : "# Generate configure files =====================================================\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# install config files\n",
        "Line" : 569,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# sample CMakeLists.txt\n",
        "Line" : 573,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Create the version file\n",
        "Line" : 580,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Create the targets file\n",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Create the configure file\n",
        "Line" : 590,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Install config, version, and target files\n",
        "Line" : 599,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 42
    },
    "Makefile.am" : {
      "ObjectId" : "9a48033ac560850ca59e84ea7e47a4a6487193b5",
      "LastModified" : "2015-12-06T18:54:16Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# This must match definition of AC_CONFIG_MACRO_DIR in configure.ac\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Makefile" : {
      "ObjectId" : "a9c75593c9bd7576225d8de9ad74e7f5171c450f",
      "LastModified" : "2016-04-02T14:50:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# --system-curl\n",
        "Line" : 24,
        "CharPositionInLine" : 47
      },
      "CommentCount" : 1
    },
    "cmake/modules/AddMADLibrary.cmake" : {
      "ObjectId" : "4b5fa4e80732ca267b4358ac4036cb17969d522b",
      "LastModified" : "2019-04-16T16:29:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# no sources given? use add_mad_hdr_library\n",
        "Line" : 3,
        "CharPositionInLine" : 28
      },
      "1" : {
        "Text" : "# Pass the private MAD${_name} compile flags to MAD${_name}-obj  \n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Add target dependencies\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Add library to the list of installed components\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Create a target to install the component\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# import LINK_FLAGS from dependent\n",
        "Line" : 64,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# make INTERFACE library\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Add target dependencies\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Add library to the list of installed components\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Create a target to install the component\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "cmake/modules/AddOptions.cmake" : {
      "ObjectId" : "0d99994a5457d96a973549b00259f7623fdf5ed4",
      "LastModified" : "2017-09-03T17:50:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# see https://github.com/WVU-ASEL/glidar/blob/master/cmake/Modules/AddOptions.cmake\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Add options without repeating them on the command line\n\n#\n\n# Synopsis:\n\n#\n\n#\tadd_options (lang build opts)\n\n#\n\n# where:\n\n#\n\n#\tlang       Name of the language whose compiler should receive the\n\n#\t           options, e.g. CXX. If a comma-separated list is received\n\n#\t           then the option is added for all those languages. Use the\n\n#\t           special value ALL_LANGUAGES for these languages: CXX, C\n\n#\t           and Fortran\n\n#\n\n#\tbuild      Kind of build to which this options should apply,\n\n#              such as DEBUG and RELEASE. This can also be a comma-\n\n#\t           separated list. Use the special value ALL_BUILDS to apply\n\n#\t           to all builds.\n\n#\n\n#\topts       List of options to add. Each should be quoted.\n\n#\n\n# Example:\n\n#\n\n#\tadd_options (CXX RELEASE \"-O3\" \"-DNDEBUG\" \"-Wall\")\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# special handling of empty language specification\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# prepend underscore if necessary\n",
        "Line" : 34,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# if we want everything in the \"global\" flag, then simply\n\n# ignore the build type here and go add everything to that one\n",
        "Line" : 42,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "#message (STATUS \"Adding \\\"${_opt}\\\" to \\${${_var}}\")\n\n# remove it first\n",
        "Line" : 49,
        "CharPositionInLine" : 16
      },
      "6" : {
        "Text" : "# we need to strip this one as well, so they are comparable\n",
        "Line" : 53,
        "CharPositionInLine" : 16
      },
      "7" : {
        "Text" : "# if it wasn't there, then add it at the end\n",
        "Line" : 55,
        "CharPositionInLine" : 16
      },
      "8" : {
        "Text" : "# don't add any extra spaces if no options yet are set\n",
        "Line" : 57,
        "CharPositionInLine" : 20
      },
      "9" : {
        "Text" : "# set varname to flag unless user has specified something that matches regex\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# lang is either C, CXX or Fortran\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# clear default options as a proxy for not using any default options\n\n# at all. there is one *huge* problem with this: CMake runs the platform\n\n# initialization before executing any line at all in the project and\n\n# there seems to be no way to disable that behaviour, so we cannot really\n\n# distinguish between a platform default and something that the user has\n\n# passed on the command line. the best thing we can do is to all user-\n\n# defined setting if they are something other than the platform default.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# for some strange reason we cannot clear this flag, only set it to empty\n",
        "Line" : 99,
        "CharPositionInLine" : 16
      },
      "CommentCount" : 13
    },
    "cmake/modules/AddUnittests.cmake" : {
      "ObjectId" : "3df2bc9ef767baa8dbc9622e79dec69f2ff559d7",
      "LastModified" : "2017-12-15T02:28:50Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add targets and for world_unittests\n",
        "Line" : 3,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Add a test that builds the unit tests\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Get the test name (the file name of the first source)\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Create test executables\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Add the test and set dependencies\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "cmake/modules/AppendFlags.cmake" : {
      "ObjectId" : "e52b8ec7d7525f35152c5c5407065b3ab969157f",
      "LastModified" : "2017-09-03T17:50:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/modules/CheckCFortranFunctionExists.cmake" : {
      "ObjectId" : "4ab2fc93280b932e11ae2c5a31de21c3e980aeb0",
      "LastModified" : "2017-09-03T17:50:49Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/modules/CheckDisablePIESupport.cmake" : {
      "ObjectId" : "e47f5f0d4c003724299d762b3c81fcae8d4b5713",
      "LastModified" : "2017-09-03T17:50:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set the flag manually for Darwin\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Try compiling\n",
        "Line" : 17,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 2
    },
    "cmake/modules/ConvertIncludesListToCompilerArgs.cmake" : {
      "ObjectId" : "f4bcb5784f09992ed43cac2fa4075bfcd74fde9e",
      "LastModified" : "2017-09-03T17:50:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#  This file is a part of TiledArray.\n\n#  Copyright (C) 2013  Virginia Tech\n\n#\n\n#  This program is free software: you can redistribute it and/or modify\n\n#  it under the terms of the GNU General Public License as published by\n\n#  the Free Software Foundation, either version 3 of the License, or\n\n#  (at your option) any later version.\n\n#\n\n#  This program is distributed in the hope that it will be useful,\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#  GNU General Public License for more details.\n\n#\n\n#  You should have received a copy of the GNU General Public License\n\n#  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n#\n\n#  Justus Calvin\n\n#  Department of Chemistry, Virginia Tech\n\n#\n\n#  ConvertIncludesListToCompileArgs.cmake\n\n#  Sep 4, 2013\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# converts a list of include paths (second argument, don't forget to enclose the\n\n# list in quotes) into a list of command-line parameters to the compiler/.\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# transform library list into compiler args\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Add include paths to _args\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/modules/ConvertLibrariesListToCompilerArgs.cmake" : {
      "ObjectId" : "579cfa3b9cb281e4d2d2c66860bc29640e1b3070",
      "LastModified" : "2017-09-03T17:50:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#  This file is a part of TiledArray.\n\n#  Copyright (C) 2013  Virginia Tech\n\n#\n\n#  This program is free software: you can redistribute it and/or modify\n\n#  it under the terms of the GNU General Public License as published by\n\n#  the Free Software Foundation, either version 3 of the License, or\n\n#  (at your option) any later version.\n\n#\n\n#  This program is distributed in the hope that it will be useful,\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#  GNU General Public License for more details.\n\n#\n\n#  You should have received a copy of the GNU General Public License\n\n#  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n#\n\n#  Justus Calvin\n\n#  Department of Chemistry, Virginia Tech\n\n#\n\n#  ConvertLibrariesListToCompilerArgs.cmake\n\n#  Jul 19, 2013\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Converts a list of libraries (second argument, don't forget to enclose the \n\n# list in quotes) into a list of command-line parameters to the compiler/linker.\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# transform library list into compiler args\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Handle Apple Frameworks\n",
        "Line" : 38,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Handle the general case\n",
        "Line" : 48,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "cmake/modules/CopyTargetProperties.cmake" : {
      "ObjectId" : "c778f3ed65d89235deb19cec69b458e6380eb2c4",
      "LastModified" : "2017-09-03T17:50:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#    message(\"${_intarget}:${_prop} SET = '${_prop_set}'\")\n\n#    message(\"${_intarget}:${_prop} = '${_prop_value}'\")\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#      get_target_property(_new_value ${_outtarget} ${_prop})\n\n#      message(\"${_outtarget}:${_prop} = '${_new_value}'\")\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#    message(\"${_intarget}:${_prop} SET = '${_prop_set}'\")\n\n#    message(\"${_intarget}:${_prop} = '${_prop_value}'\")\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#      get_target_property(_new_value ${_outtarget} ${_prop})\n\n#      message(\"${_outtarget}:${_prop} = '${_new_value}'\")\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/modules/EchoTargetProperty.cmake" : {
      "ObjectId" : "e20a29e78892c4b84425568b74004d3d2fdacf71",
      "LastModified" : "2017-09-03T17:50:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# v for value, d for defined, s for set\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# only produce output for values that are set\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake/modules/FindACML.cmake" : {
      "ObjectId" : "f965ac84ced53b7d05cf366b7dc2a215452719e7",
      "LastModified" : "2017-09-03T17:50:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find acml\n\n# Input variables:\n\n#  ACML_ROOT_DIR     - The acml install directory\n\n#  ACML_LIBRARY      - The acml library directory\n\n# Output variables:\n\n#  ACML_FOUND        - System has acml\n\n#  ACML_LIBRARIES    - The libraries needed to use acml\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set default sarch paths for acml\n",
        "Line" : 13,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set ACML_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindGperftools.cmake" : {
      "ObjectId" : "60ecf0d9d2c175e939960ce73619b5b72805bed0",
      "LastModified" : "2017-09-03T17:50:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Google performance tools (gperftools)\n\n# Input variables:\n\n#   GPERFTOOLS_ROOT_DIR    - The gperftools install directory\n\n#   GPERFTOOLS_INCLUDE_DIR - The gperftools include directory\n\n#   GPERFTOOLS_LIBRARY     - The gperftools library directory\n\n# Components: profiler, and tcmalloc or tcmalloc_minimal\n\n# Output variables:\n\n#   GPERFTOOLS_FOUND        - System has gperftools\n\n#   GPERFTOOLS_INCLUDE_DIRS - The gperftools include directories\n\n#   GPERFTOOLS_LIBRARIES    - The libraries needed to use gperftools\n\n#   GPERFTOOLS_VERSION      - The version string for gperftools\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check to see if libunwind is required\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Libunwind is required by profiler on this platform\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Check for invalid components\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Check for valid component combinations\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Set default sarch paths for gperftools\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Search for component libraries\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Exclude profiler from the found list if libunwind is required but not found\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Set gperftools libraries if not set based on component list\n",
        "Line" : 97,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set GPERFTOOLS_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 112,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# Add linker flags that instruct the compiler to exclude built in memory\n\n# allocation functions. This works for GNU, Intel, and Clang. Other compilers\n\n# may need to be added in the future.\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Add libunwind flags to gperftools if the profiler is being used\n",
        "Line" : 135,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "cmake/modules/FindHWLOC.cmake" : {
      "ObjectId" : "0567c738403a20d73a5662d64b9b6884b56196f1",
      "LastModified" : "2017-09-03T17:50:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find HWLOC library\n\n# This module finds an installed  library that implements the HWLOC\n\n# linear-algebra interface (see http://www.open-mpi.org/projects/hwloc/).\n\n#\n\n# This module sets the following variables:\n\n#  HWLOC_FOUND - set to true if a library implementing the PLASMA interface\n\n#    is found\n\n#  HWLOC_LINKER_FLAGS - uncached list of required linker flags (excluding -l\n\n#    and -L).\n\n#  HWLOC_LIBRARIES - uncached list of libraries (using full path name) to\n\n#    link against to use PLASMA\n\n#  HWLOC_STATIC  if set on this determines what kind of linkage we do (static)\n\n#\n\n#  DAGUE_HAVE_HWLOC_PARENT_MEMBER - new API, older versions don't have it\n\n#  DAGUE_HAVE_HWLOC_CACHE_ATTR - new API, older versions don't have it\n\n#  DAGUE_HAVE_HWLOC_OBJ_PU - new API, older versions don't have it\n\n#\n\n##########\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindLibunwind.cmake" : {
      "ObjectId" : "eb34d21f0310bc6e3b116ee067213bc6baed8ae6",
      "LastModified" : "2017-09-03T17:50:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Libunwind\n\n# Input variables:\n\n#  LIBUNWIND_ROOT_DIR     - The libunwind install directory\n\n#  LIBUNWIND_INCLUDE_DIR  - The libunwind include directory\n\n#  LIBUNWIND_LIBRARY      - The libunwind library directory\n\n# Output variables:\n\n#  LIBUNWIND_FOUND        - System has libunwind\n\n#  LIBUNWIND_INCLUDE_DIRS - The libunwind include directories\n\n#  LIBUNWIND_LIBRARIES    - The libraries needed to use libunwind\n\n#  LIBUNWIND_VERSION      - The version string for libunwind\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set default sarch paths for libunwind\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Get libunwind version\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBUNWIND_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindLibxc.cmake" : {
      "ObjectId" : "cfac860e016462312cec2d937c93d048c360f85e",
      "LastModified" : "2018-05-24T18:51:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Libxc\n\n# Input variables:\n\n#  LIBXC_ROOT_DIR     - The libxc install directory\n\n#  LIBXC_INCLUDE_DIR  - The libxc include directory\n\n#  LIBXC_LIBRARY      - The libxc library directory\n\n# Output variables:\n\n#  LIBXC_FOUND        - System has libxc\n\n#  LIBXC_INCLUDE_DIRS - The libxc include directories\n\n#  LIBXC_LIBRARIES    - The libraries needed to use libxc\n\n#  LIBXC_VERSION      - The version string for libxc\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set default sarch paths for libxc\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Get libxc version\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set LIBXC_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/modules/FindMKL.cmake" : {
      "ObjectId" : "eb66727ae78c73d6110e05d076c34987c73fc282",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find MKL\n\n# Input variables:\n\n#  MKL_ROOT_DIR         - The MKL install directory\n\n#  MKL_INCLUDE_DIR      - The MKL include directory\n\n#  MKL_LIBRARY          - The MKL library directory\n\n#  FORTRAN_INTEGER_SIZE - Set the integer size (4 or 8 bytes)\n\n#  BLA_STATIC           - Prefer to link against static lbraries\n\n# Output variables:\n\n#  MKL_FOUND            - System has MKL\n\n#  MKL_INCLUDE_DIRS     - The MKL include directories\n\n#  MKL_LIBRARIES        - The libraries needed to use MKL\n\n#  MKL_VERSION          - The version string for MKL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# If the user did not specify an MKL root directory, check for the MKLROOT\n\n# environment variable or the presence of /opt/intel/mkl.\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Set the MKL library directory if not specified by the user.\n",
        "Line" : 29,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# There are no user specified components, but we use the component handling\n\n# mechanism to make sure we find all the required libraries.\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Search for MKL header files\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Get MKL version\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Search for MKL libraries\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Set LAPACK_LIBRARIES variable if MKL was found\n",
        "Line" : 88,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set MKL_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 9
    },
    "cmake/modules/FindPARSEC.cmake" : {
      "ObjectId" : "9e0c6e0a27c7b78c0eb41cae8f086cc02cd0539a",
      "LastModified" : "2017-09-03T17:50:49Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###\n\n#\n\n# @copyright (c) 2009-2015 The University of Tennessee and The University\n\n#                          of Tennessee Research Foundation.\n\n#                          All rights reserved.\n\n# @copyright (c) 2012-2015 Inria. All rights reserved.\n\n# @copyright (c) 2012-2015 Bordeaux INP, CNRS (LaBRI UMR 5800), Inria, Univ. Bordeaux. All rights reserved.\n\n#\n\n###\n\n#\n\n# - Find PARSEC include dirs and libraries\n\n# Use this module by invoking find_package with the form:\n\n#  find_package(PARSEC\n\n#               [version] [EXACT]      # Minimum or EXACT version e.g. 1.1\n\n#               [REQUIRED]             # Fail with error if parsec is not found\n\n#               [COMPONENTS <comp1> <comp2> ...] # dependencies\n\n#              )\n\n#\n\n#  PARSEC depends on the following libraries:\n\n#   - Threads, m, rt\n\n#\n\n#  COMPONENTS are optional libraries PARSEC could be linked with,\n\n#  Use it to drive detection of a specific compilation chain\n\n#  COMPONENTS can be some of the following:\n\n#   - HWLOC: to activate the detection of PARSEC linked with HWLOC\n\n#   - CUDA: to activate the detection of PARSEC linked with CUDA\n\n#   - MPI: to activate the detection of PARSEC linked with MPI\n\n#   - AYUDAME: ??\n\n#\n\n# Results are reported in variables:\n\n#  PARSEC_FOUND                  - True if headers and requested libraries were found\n\n#  PARSEC_C_FLAGS                - list of required compilation flags (excluding -I)\n\n#  PARSEC_LINKER_FLAGS           - list of required linker flags (excluding -l and -L)\n\n#  PARSEC_INCLUDE_DIRS           - parsec include directories\n\n#  PARSEC_LIBRARY_DIRS           - Link directories for parsec libraries\n\n#  PARSEC_LIBRARIES              - parsec libraries\n\n#  PARSEC_INCLUDE_DIRS_DEP       - parsec + dependencies include directories\n\n#  PARSEC_LIBRARY_DIRS_DEP       - parsec + dependencies link directories\n\n#  PARSEC_LIBRARIES_DEP          - parsec libraries + dependencies\n\n#  PARSEC_daguepp_BIN_DIR        - path to parsec driver daguepp\n\n#  PARSEC_DAGUEPP                - parsec jdf compiler\n\n# The user can give specific paths where to find the libraries adding cmake\n\n# options at configure (ex: cmake path/to/project -DPARSEC=path/to/parsec):\n\n#  PARSEC_DIR                    - Where to find the base directory of parsec\n\n#  PARSEC_INCDIR                 - Where to find the header files\n\n#  PARSEC_LIBDIR                 - Where to find the library files\n\n# The module can also look for the following environment variables if paths\n\n# are not given as cmake variable: PARSEC_DIR, PARSEC_INCDIR, PARSEC_LIBDIR\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2012-2013 Inria\n\n# Copyright 2012-2013 Emmanuel Agullo\n\n# Copyright 2012-2013 Mathieu Faverge\n\n# Copyright 2012      Cedric Castagnede\n\n# Copyright 2013      Florent Pruvost\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file MORSE-Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of Morse, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# PARSEC may depend on other packages (HWLOC, MPI, CUDA, ...)\n\n# try to find them if specified as COMPONENTS during the call\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Required dependencies\n\n# ---------------------\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add math library to the list of extra\n\n# it normally exists on all common systems provided with a C compiler\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Try to find librt (libposix4 - POSIX.1b Realtime Extensions library)\n\n# on Unix systems except Apple ones because it does not exist on it\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Try to find libdl\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# PARSEC may depend on HWLOC, try to find it\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# PARSEC may depend on CUDA, try to find it\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# PARSEC may depend on MPI, try to find it\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Optionally use pkg-config to detect include/library dirs (if pkg-config is available)\n\n# -------------------------------------------------------------------------------------\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#if(NOT PARSEC_SHM_INCLUDE_DIRS)\n\n#    message(\"${Magenta}PARSEC_SHM_INCLUDE_DIRS is empty using PkgConfig.\"\n\n#        \"Perhaps the path to parsec headers is already present in your\"\n\n#        \"C(PLUS)_INCLUDE_PATH environment variable.${ColourReset}\")\n\n#endif()\n",
        "Line" : 227,
        "CharPositionInLine" : 12
      },
      "12" : {
        "Text" : "# create list of binaries to find\n",
        "Line" : 243,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# call cmake macro to find the bin path\n",
        "Line" : 246,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Looking for include\n\n# -------------------\n",
        "Line" : 265,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Add system include paths to search include\n\n# ------------------------------------------\n",
        "Line" : 268,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Try to find the parsec headers in the given paths\n\n# -------------------------------------------------\n",
        "Line" : 298,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# create list of headers to find\n",
        "Line" : 301,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# call cmake macro to find the header path\n",
        "Line" : 304,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# If found, add path to cmake variable\n\n# ------------------------------------\n",
        "Line" : 332,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# set cmake variables using the pkg-config naming convention\n",
        "Line" : 338,
        "CharPositionInLine" : 12
      },
      "21" : {
        "Text" : "# Looking for lib\n\n# ---------------\n",
        "Line" : 353,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Add system library paths to search lib\n\n# --------------------------------------\n",
        "Line" : 359,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Try to find the parsec libs in the given paths\n\n# ----------------------------------------------\n",
        "Line" : 383,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# create list of libs to find\n",
        "Line" : 386,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "# call cmake macro to find the lib path\n",
        "Line" : 389,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# If found, add path to cmake variable\n\n# ------------------------------------\n",
        "Line" : 416,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# set cmake variables (respects naming convention)\n",
        "Line" : 423,
        "CharPositionInLine" : 12
      },
      "28" : {
        "Text" : "# Looking for parsec compilers\n\n# ----------------------------\n",
        "Line" : 444,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# Add system bin paths to search drivers\n\n# --------------------------------------\n",
        "Line" : 447,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# create list of binaries to find\n",
        "Line" : 458,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "# call cmake macro to find the bin path\n",
        "Line" : 461,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# check a function to validate the find\n",
        "Line" : 488,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "# PARSEC\n",
        "Line" : 497,
        "CharPositionInLine" : 8
      },
      "34" : {
        "Text" : "# HWLOC\n",
        "Line" : 508,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# MPI\n",
        "Line" : 524,
        "CharPositionInLine" : 8
      },
      "36" : {
        "Text" : "# CUDA\n",
        "Line" : 537,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# Fortran\n",
        "Line" : 547,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "# EXTRA LIBS such that pthread, m, rt, dl\n",
        "Line" : 569,
        "CharPositionInLine" : 8
      },
      "39" : {
        "Text" : "# set required libraries for link\n",
        "Line" : 572,
        "CharPositionInLine" : 8
      },
      "40" : {
        "Text" : "# test link\n",
        "Line" : 583,
        "CharPositionInLine" : 8
      },
      "41" : {
        "Text" : "# save link with dependencies\n",
        "Line" : 590,
        "CharPositionInLine" : 12
      },
      "42" : {
        "Text" : "# check that PARSEC has been found\n\n# --------------------------------\n",
        "Line" : 639,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 43
    },
    "cmake/modules/FindPCM.cmake" : {
      "ObjectId" : "fa445984e0f5f9c423322ffea0fdfd5c5db3a222",
      "LastModified" : "2018-05-24T18:51:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find PCM\n\n# Input variables:\n\n#  PCM_ROOT_DIR     - The pcm  install directory\n\n#  PCM_INCLUDE_DIR  - The pcm  include directory | optional, else determined from PCM_ROOT_DIR, dont set PCM_ROOT_DIR if you want to use this\n\n#  PCM_LIBRARY      - The pcm  library directory | optional, else determined from PCM_ROOT_DIR, ...\n\n# Output variables:\n\n#  PCM_FOUND        - System has pcm\n\n#  PCM_INCLUDE_DIRS - The pcm include directories\n\n#  PCM_LIBRARIES    - The libraries needed to use pcm\n\n#  PCM_VERSION      - The version string for pcm | currently unused\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# define include and library directories based on root directory\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Get PCM version\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#  if(PCM_INCLUDE_DIRS)\n\n#    file(READ \"${PCM_INCLUDE_DIRS}/GitInfo.hpp\" _PCM_version_header)\n\n#    string(REGEX MATCH \"define[ \\t]+PCM_VERSION[ \\t]+\\\\\\\"([0-9\\\\.]+)\\\\\\\"\" \n\n#        PCM_VERSION \"${_PCM_version_header}\")\n\n#    string(REGEX MATCH \"([0-9\\\\.]+)\" PCM_VERSION \"${PCM_VERSION}\")\n\n#    unset(_PCM_version_header)\n\n#  endif()\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PCM_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "cmake/modules/FindPapi.cmake" : {
      "ObjectId" : "0287fe7462f90c97afa9e4e8a0564406f316919a",
      "LastModified" : "2018-05-24T18:51:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Papi\n\n# Input variables:\n\n#  PAPI_ROOT_DIR     - The papi install directory\n\n#  PAPI_INCLUDE_DIR  - The papi include directory\n\n#  PAPI_LIBRARY      - The papi library directory\n\n# Output variables:\n\n#  PAPI_FOUND        - System has papi\n\n#  PAPI_INCLUDE_DIRS - The papi include directories\n\n#  PAPI_LIBRARIES    - The libraries needed to use papi\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set default sarch paths for papi\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set PAPI_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/modules/FindTBB.cmake" : {
      "ObjectId" : "763b860274d69c3f65a2330bc493d13c12d44a87",
      "LastModified" : "2018-05-24T18:51:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Intel TBB\n\n# Input variables:\n\n#  TBB_ROOT_DIR     - The TBB install directory\n\n#  TBB_INCLUDE_DIR  - The TBB include directory\n\n#  TBB_LIBRARY      - The TBB library directory\n\n# Output variables:\n\n#  TBB_FOUND        - System has TBB\n\n#  TBB_INCLUDE_DIRS - The tbb include directories\n\n#  TBB_LIBRARIES    - The libraries needed to use TBB\n\n#  TBB_VERSION      - The version string for TBB\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set default sarch paths for TBB\n",
        "Line" : 16,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# NOTE: Will not overwrite user defined include and library directory variables\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Search for TBB include directory\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Search for TBB libraries\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Process TBB libaraies\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Set library found variables\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Set the build type TBB library variables\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Set the TBB_LIBRARIES variable\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Get TBB version\n",
        "Line" : 101,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set TBB_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    },
    "cmake/modules/RedefaultableOption.cmake" : {
      "ObjectId" : "2467b999e08d4e696c0e46c9dafec97ebbbc74eb",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# if local variable is defined, use its value as the default, otherwise use _default\n\n# this is consistent with cmake 3.13 and later (see policy CMP0077)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/toolchains/dancer_gcc.cmake" : {
      "ObjectId" : "820f092285c9b2b86d092484021aba905c8c0e61",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set the system name so CMake uses the appropriate platform settings.\n\n# NOTE: The platforms settings for BlueGeneP are the same for BlueGeneQ \n\n# set(CMAKE_SYSTEM_NAME BlueGeneP-static)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# # Set environment paths\n\n# set(IBM_DIR    \"$ENV{IBM_MAIN_DIR}\")\n\n# set(XLF_DIR    \"${IBM_DIR}/xlf/bg/14.1\")\n\n# set(XLSMP_DIR  \"${IBM_DIR}/xlsmp/bg/3.1\")\n\n# set(ESSL_DIR   \"/soft/libraries/essl/current/essl/5.1\")\n\n# set(LAPACK_DIR \"/soft/libraries/alcf/current/xl/LAPACK\")\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set (PARSEC_DIR \"/home/aguermou/devel_build_gcc/install\")\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# # V1R2M0\n\n# #set(MPI_DIR   \"/bgsys/drivers/ppcfloor/comm/gcc\")\n\n# #set(PAMI_DIR  \"/bgsys/drivers/ppcfloor/comm/sys\")\n\n# # V1R2M1\n\n# #set(GCC_DIR    \"/bgsys/drivers/toolchain/V1R2M2_base_4.7.2/gnu-linux-4.7.2\")\n\n# # V1R2M2\n\n#set(GCC_DIR    \"/bgsys/drivers/toolchain/V1R2M2_base_4.7.2-efix14/gnu-linux-4.7.2-efix014\")\n\n# set(MPI_DIR    \"/bgsys/drivers/ppcfloor/comm\")\n\n# set(PAMI_DIR   \"/bgsys/drivers/ppcfloor/comm\")\n\n# set(SPI_DIR    \"/bgsys/drivers/ppcfloor/spi\")\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set compilers\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set compile flags\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Set library\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#set(XL_LIBRARIES ${XLSMP_DIR}/bglib64/libxlsmp.a)\n\n#set(XLF_LIBRARIES ${XLF_DIR}/bglib64/libxlf90_r.a;${XLF_DIR}/bglib64/libxlfmath.a;${XLF_DIR}/bglib64/libxlopt.a;${XLF_DIR}/bglib64/libxl.a;-ldl;-lm)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# set the search path for the environment coming with the compiler\n\n# and a directory where you can install your own compiled software\n\n#set(CMAKE_FIND_ROOT_PATH\n\n#    /bgsys/drivers/ppcfloor/\n\n#    ${MPI_DIR}\n\n#    ${PAMI_DIR}\n\n#    ${SPI_DIR}\n\n#    ${GCC_DIR}\n\n#    ${CLANG_DIR}\n\n#    ${IBM_DIR}\n\n#    ${XLF_DIR}\n\n#    ${XLSMP_DIR}\n\n#    ${ESSL_DIR})\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search\n\n# programs in the host environment\n\n#set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)\n\n#set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)\n\n#set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "##############################################################\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "cmake/toolchains/generic-mkl-tbb.cmake" : {
      "ObjectId" : "187ab7f200a2d498d22d3b4fbbdba1cf5af4bd9b",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Generic Toolchain for MPI + MKL + TBB\n\n#\n\n# REQUIREMENTS:\n\n# - in PATH:\n\n#   mpicc and mpicxx\n\n#\n\n# OPTIONS:\n\n# - environment variables:\n\n#   * MKLROOT: the MKL root directory; if not set, will use /opt/intel/mkl\n\n#   * TBBROOT: the TBB root directory; if not set, will use /opt/intel/tbb\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compilers\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Specify the GNU compilers to use with Intel C/C++\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Libraries\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Flags\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/toolchains/mira-clang11-essl.cmake" : {
      "ObjectId" : "eedbbaccc839d6cd92baed07096f90edf116aa92",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set the system name so CMake uses the appropriate platform settings.\n\n# NOTE: The platforms settings for BlueGeneP are the same for BlueGeneQ \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set environment paths\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# V1R2M0\n\n#set(MPI_DIR   \"/bgsys/drivers/ppcfloor/comm/gcc\")\n\n#set(PAMI_DIR  \"/bgsys/drivers/ppcfloor/comm/sys\")\n\n# V1R2M1\n\n#set(GCC_DIR    \"/bgsys/drivers/toolchain/V1R2M2_base_4.7.2/gnu-linux-4.7.2\")\n\n# V1R2M2\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set compilers\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set compile flags\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set library\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/toolchains/mira-gcc-essl.cmake" : {
      "ObjectId" : "2006a5257afb23ed4c9c51eaca18b6b2aad343c3",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set the system name so CMake uses the appropriate platform settings.\n\n# NOTE: The platforms settings for BlueGeneP are the same for BlueGeneQ \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set environment paths\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# V1R2M0\n\n#set(MPI_DIR   \"/bgsys/drivers/ppcfloor/comm/gcc\")\n\n#set(PAMI_DIR  \"/bgsys/drivers/ppcfloor/comm/sys\")\n\n# V1R2M1\n\n#set(GCC_DIR    \"/bgsys/drivers/toolchain/V1R2M2_base_4.7.2/gnu-linux-4.7.2\")\n\n# V1R2M2\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set compilers\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set compile flags\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set library\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##############################################################\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# set the search path for the environment coming with the compiler\n\n# and a directory where you can install your own compiled software\n\n#set(CMAKE_FIND_ROOT_PATH\n\n#    /bgsys/drivers/ppcfloor/\n\n#    ${MPI_DIR}\n\n#    ${PAMI_DIR}\n\n#    ${SPI_DIR}\n\n#    ${GCC_DIR}\n\n#    ${CLANG_DIR}\n\n#    ${IBM_DIR}\n\n#    ${XLF_DIR}\n\n#    ${XLSMP_DIR}\n\n#    ${ESSL_DIR})\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search\n\n# programs in the host environment\n\n#set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)\n\n#set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)\n\n#set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "##############################################################\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/toolchains/osx-clang-accelerate-tbb.cmake" : {
      "ObjectId" : "7fa6e0e7f6b6b42c0c815f37714f60d814accb0c",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Generic Toolchain for OS X + MPI + TBB\n\n#\n\n# REQUIREMENTS:\n\n# - in PATH:\n\n#   mpicc and mpicxx, both using clang as the backend\n\n#\n\n# OPTIONS:\n\n# - environment variables:\n\n#   * MKLROOT: the MKL root directory; if not set, will use /opt/intel/mkl\n\n#   * TBBROOT: the TBB root directory; if not set, will use /opt/intel/tbb\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# this is key to avoid RPATH problems\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Compilers\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Compile flags\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Libraries\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set BLAS/LAPACK flags\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/toolchains/osx-clang-mkl-tbb.cmake" : {
      "ObjectId" : "021097ac78ab9784bc0f9a40de85c3e443ec37e1",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Generic Toolchain for OS X + MPI + MKL + TBB\n\n#\n\n# REQUIREMENTS:\n\n# - in PATH:\n\n#   mpicc and mpicxx, both using clang as the backend\n\n#\n\n# OPTIONS:\n\n# - environment variables:\n\n#   * MKLROOT: the MKL root directory; if not set, will use /opt/intel/mkl\n\n#   * TBBROOT: the TBB root directory; if not set, will use /opt/intel/tbb\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# this is key to avoid RPATH problems\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Compilers\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Compile flags\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Libraries\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Flags\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "config/Makefile.am" : {
      "ObjectId" : "14e04ab459899f80fab5266eab47c2f039be792e",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# MADNESS configuration can be queried via (hopefully) standard pkg-config\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# MADNESS CMake configuration file\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "67d5f8d24c2f0700ed490a5fec11bc5d82ed8854",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# doc\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doc/Makefile.am" : {
      "ObjectId" : "3d2b7988fa210838cb2bed9042dd2775cf3f7ec3",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "external/elemental.cmake" : {
      "ObjectId" : "5fd84f088c226e0489d603315debad9d7449f2bd",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# -*- mode: cmake -*-\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "######################\n\n# Find Elemental\n\n######################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create a cache entry for Elemental build variables.\n\n# Note: This will not overwrite user specified values.\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Set Elemental compile flags\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Use same build type for Elemental. Assume this is newer Elemental.\n\n# Older El required decorated build types (PureRelease, HybridDebug, etc.)\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Set the configuration variables used by elemental\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Override BLAS+LAPACK selection by Elemental\n\n# unless ELEMENTAL_MATH_LIBS is given by the user, use LAPACK_LIBRARIES as the default value for Elemental's MATH_LIBS\n",
        "Line" : 54,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#\n\n# Obtain Elemental source **only** if needed (that's why not using ExternalProject)\n\n#\n\n# make directory\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Create the external source directory\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# checkout if needed\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# reset to the desired Elemental tag\n",
        "Line" : 101,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Create or clean the build directory\n",
        "Line" : 114,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# since 0.85 package name is 'El', before that it was 'elemental'\n\n# detect the version by searching the main header\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# EFV: fairly sure the assumptions about which components Elemental builds by default are valid for\n\n# recent versions only \n",
        "Line" : 146,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Add update-elemental target that will pull updates to the Elemental source\n\n# from the git repository. This is done outside ExternalProject_add to prevent\n\n# Elemental from doing a full pull, configure, and build everytime the project\n\n# is built.\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# TODO update Elemental installation when fixed upstream (installing El does not install everything it needs)\n",
        "Line" : 201,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# Add clean-elemental target that will delete files generated by Elemental build.\n",
        "Line" : 207,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# Since 'install-elemental' target cannot be linked to the 'install' target,\n\n# we will do it manually here.\n",
        "Line" : 214,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Set build dependencies and compiler arguments\n\n# WARNING: should only need to satisfy build-elemental to use El, however its cmake config file\n\n# is inadequate for using from build tree, hence MUST install even for build tree. Solving here will\n\n# take far too much effort. Will file an issue.\n",
        "Line" : 228,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# These build variables are not used anyway\n",
        "Line" : 234,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 20
    },
    "external/gperftools.cmake" : {
      "ObjectId" : "d73cf252d0b935fed2ec61b8bbea05459b84500a",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set the config.h variables\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "external/lapack.cmake" : {
      "ObjectId" : "c8d07169e774d0b184c22ed9aac3722a8c0b763e",
      "LastModified" : "2019-01-08T11:31:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find BLAS and LAPACK.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Search for system specific BLAS/LAPACK checks\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Accelerate is always present, so no need to search\n",
        "Line" : 30,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Search for netlib lapack and blas libraries\n",
        "Line" : 35,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# process LAPACK_LIBRARIES for CMAKE_REQUIRED_LIBRARIES (this is likely only to work with Makefile generator):\n\n# 1. get rid of the surrounding quotes\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# 2. convert a space-separated string of libs into a list\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# 3. restore (and protect!) the space in \"-framework X\"\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#message(STATUS \"PROCESSED_LAPACK_LIBRARIES=${PROCESSED_LAPACK_LIBRARIES}\")\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Verify that we can link against BLAS\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Verify that we can link against LAPACK\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# introspect LAPACK_LIBRARIES given by the user\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# check for MKL\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# check for ACML\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Set the fortran mangling scheme.\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# unquote LAPACK_COMPILE_OPTIONS, LAPACK_INCLUDE_DIRS, and LAPACK_COMPILE_DEFINITIONS also\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "external/libunwind.cmake" : {
      "ObjectId" : "aff24b1287de1e1b0cf25c0f2cb631eb01c60895",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set the output variables\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "external/libxc.cmake" : {
      "ObjectId" : "1cbac143c2af40ceef4ffb8e276c01f3aa6ced31",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set the output variables\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "external/mpi.cmake" : {
      "ObjectId" : "bd3f6d1d09fc693c8ffc4d6da3dbfef4d96020e0",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find MPI\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try to find MPI\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Set the variables \n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Disable MPI via config.h\n",
        "Line" : 26,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "external/papi.cmake" : {
      "ObjectId" : "769a149ad50165760269e4cd2c4744542351955c",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set the output variables\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "external/parsec.cmake" : {
      "ObjectId" : "ddca8e4866d157abc58e56123c24a6dfda0ec0e3",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/pcm.cmake" : {
      "ObjectId" : "4588de2dc66266fbbeda6add01e4a3c6633a3182",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set the output variables\n",
        "Line" : 5,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "external/pthread.cmake" : {
      "ObjectId" : "4c0b66dc448556ee0d8b4c03164f39a9ee526797",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Threads\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check that pthreads was found\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "external/tbb.cmake" : {
      "ObjectId" : "541cad9f9b21e2d5a6fa22851d0999b87c655129",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "d80027b45065db5a226c099ddcd6dfc1ee34e543",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# src\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/Makefile.am" : {
      "ObjectId" : "ba0551026a64132cea248c09f95c524160ae1c77",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/apps/CMakeLists.txt" : {
      "ObjectId" : "da4fc0bb2641e3cd9cf3c19070729a9fa5608332",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# src/apps\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_subdirectory(exciting)\n\n#add_subdirectory(hf)\n\n#add_subdirectory(ii)\n\n#add_subdirectory(interior_bc)\n\n#add_subdirectory(nick)\n\n#add_subdirectory(polar)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/apps/Makefile.am" : {
      "ObjectId" : "31f84304855927b49d97de420153d8bd5b91aa84",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#hf vnuc nick\n",
        "Line" : 3,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "src/apps/chem/CMakeLists.txt" : {
      "ObjectId" : "a5989bfff96db43548c4d82a5bdca50ba48e82d4",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# src/apps/chem\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the CHEM sources and header files\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create the MADchem library\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add dependencies for MADchem\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add executables\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Install files\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add unit tests    \n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The list of unit test source files\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Create other test executables not included in the unit tests\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#    add_executable(${_test} EXCLUDE_FROM_ALL ${_test}.cc)\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "src/apps/chem/Makefile.am" : {
      "ObjectId" : "6dbf32b6b12158ca33c70d08a71910aebeda491e",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# specify the git commit version in the info functions\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# default location for basis sets etc\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# testxc \n",
        "Line" : 17,
        "CharPositionInLine" : 35
      },
      "CommentCount" : 3
    },
    "src/apps/exciting/CMakeLists.txt" : {
      "ObjectId" : "76fc6c53e02704c95ee0bb10949ad67a2112319b",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# src/apps/exciting\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/apps/exciting/Makefile.am" : {
      "ObjectId" : "ab54f17532b750da5774f9a48279b45f6e534d77",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#bin_PROGRAMS = wannier\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#wannier_SOURCES = wannier.cc\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#LDADD = exciting.a fftlib.a /opt/intel/fce/10.1.015/lib/libifcore.a /opt/intel/fce/10.1.015/lib/libirc.a /opt/intel/fce/10.1.015/lib/libimf.a /opt/intel/fce/10.1.015/lib/libsvml.a $(MRALIBS)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/apps/hf/CMakeLists.txt" : {
      "ObjectId" : "929903714ba795981be1de6885ea987886ef91fa",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# src/apps/hf\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create HartreeFock library\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create executables\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/apps/hf/Makefile.am" : {
      "ObjectId" : "12b671cb4a01d66561206f3d3a5d1e91bdb43f43",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#bin_PROGRAMS = test_hf test_lattice test_coulomb test_hydro test_he test_be test_comm testconv esolver\n\n#bin_PROGRAMS = test_he esolver test_xc \n\n#lib_LTLIBRARIES = libHartreeFock.la\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#libHartreeFock_la_SOURCES = eigsolver.cc dft.cc dft.h eigsolver.h poperator.h util.h lda.h electronicstructureparams.h\n\n#libHartreeFock_la_LDFLAGS = -version-info 0:0:0\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#test_hf_SOURCES = test_hf.cc\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#test_he_SOURCES = test_he.cc solver.h\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#test_be_SOURCES = test_be.cc\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#test_hydro_SOURCES = test_hydro.cc\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#test_lattice_SOURCES = test_lattice.cc\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#test_coulomb_SOURCES = test_coulomb.cc\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#test_comm_SOURCES = test_comm.cc\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#testconv_SOURCES = testconv.cc\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#test_xc_SOURCES = test_xc.cc\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#esolver_SOURCES = solver_driver.cc mentity.cc mentity.h electronicstructureapp.h solver.h\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#LDADD = libHartreeFock.la libxc.a $(MRALIBS)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "src/apps/ii/CMakeLists.txt" : {
      "ObjectId" : "0df28a6cf84be0ad86b731ac1cb98d80eed70db9",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# src/apps/ii\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#install(TARGETS testsystolic eigen_solver localize_boys tensor_training\n\n#    DESTINATION \"${MADNESS_INSTALL_BINDIR}\")",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/apps/ii/Makefile.am" : {
      "ObjectId" : "338057a4f97db8e491a476b9b3e8b855cde02f1d",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#SUBDIRS = xc\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#moldft_SOURCES = moldft.cc lda.cc  molecule.cc \\\n#                 \\\n#                molecule.h molecularbasis.h\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#moldft_LDADD = xc/libMADxc.a $(MRALIBS)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#moldft_SOURCES = moldft.cc lda.cc  molecule.cc\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/apps/interior_bc/CMakeLists.txt" : {
      "ObjectId" : "82c910f2a98bce422b83b67d79d9e1118b76a747",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# src/apps/interior_bc\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#install(TARGETS embedded_dirichlet\n\n#    DESTINATION \"${MADNESS_INSTALL_BINDIR}\")",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/apps/interior_bc/Makefile.am" : {
      "ObjectId" : "4ab08812b1630e4170010439306e1f44478d5f13",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/apps/moldft/CMakeLists.txt" : {
      "ObjectId" : "50cfe5bfe932ef77c425c467c4065d7db059dc5d",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# src/apps/moldft\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_executable(preal preal.cc)\n\n#target_link_libraries(preal MADchem)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/apps/moldft/Makefile.am" : {
      "ObjectId" : "8657aed8521655ae54b58e66e292abab164f87df",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#bin_PROGRAMS = testpg moldft mcpfit testperiodic preal\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#preal_SOURCES = preal.cc\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/apps/nick/CMakeLists.txt" : {
      "ObjectId" : "7ffaf38c85ce6cfe826f2355f7f1052f191e2ee5",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# src/apps/nick\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#install(TARGETS projPsi test hello lineplot wfSlice toDX\n\n#    DESTINATION \"${MADNESS_INSTALL_BINDIR}\")",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/apps/nick/Makefile.am" : {
      "ObjectId" : "05611b4f230cd47542df3392f1035e6b16a5fda0",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/apps/polar/CMakeLists.txt" : {
      "ObjectId" : "33085dd871f8b89663488705f3b9892b449819e4",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# src/apps/polar\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add source files for moldft_polar\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create the moldft_polar executable\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/apps/polar/Makefile.am" : {
      "ObjectId" : "b7e3d638f1d6655943fce694a4b18fa90a76eab4",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#bin_PROGRAMS = testpg moldft mcpfit testperiodic testxc\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/apps/tdse/CMakeLists.txt" : {
      "ObjectId" : "d2320e8eedac33dc030332276e1f997d388316f7",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# src/apps/tdse\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/apps/tdse/Makefile.am" : {
      "ObjectId" : "23aeaeb6c2509f3986962a998508f40b3f0096e0",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/examples/CMakeLists.txt" : {
      "ObjectId" : "d3806373ef1fec5329cfaaceadbbf7fe254f8f6e",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# src/examples\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create executables for example applications\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/examples/Makefile.am" : {
      "ObjectId" : "6c508f89fbfb91a964dade1238686ee05bc8a078",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# specify the git commit version in the info functions\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# default location for basis sets etc\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# h2hf_SOURCES = h2hf.cc\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#LDADD = $(LIBCHEM) $(MRALIBS)\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/examples/compiler/Makefile" : {
      "ObjectId" : "9952974736699907519cd53d04d69d11a46f6077",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# keep\n\n# Makefile   mra.cc   mra-driver.cc   mra-driver.hh   mra.ll   mra.yy\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/madness/CMakeLists.txt" : {
      "ObjectId" : "249e0aa13bfb4786faee73fad503431ba837d2af",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# src/madness\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add source subdirectories\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create the super library that contains all MADNESS libraries\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set the dependencies for the super-library\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# DISABLEPIE flag can break linking of dependent libraries (e.g. on Linux using gcc6)\n\n# instead for each dependent executable target T do:\n\n# target_link_libraries(T MADNESS_DISABLEPIE_LINKER_FLAGS)\n\n#\n\n#if(LINKER_HAS_DISABLEPIE_SUPPORT)\n\n#  target_link_libraries(madness INTERFACE \"${DISABLEPIE_LINKER_FLAG}\")\n\n#endif()\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add common header files and madness library to the install list\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/madness/Makefile.am" : {
      "ObjectId" : "d02b3c58afa6a65aded169e97d06bbf64cf4387a",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Add a dummy source file so the linker behaves properly.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/madness/external/CMakeLists.txt" : {
      "ObjectId" : "3648cc0ccf13fdfad2a748dd8c07e1830d028851",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# src/madness/external\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if want embedded elemental ...\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Note: Here we are changing the build configuration of for Elemental since it\n\n# requires [Hybrid|Pure][Debug|Release] as the build configuratino. This\n\n# should not be required if we upgrade Elemental to v0.85.\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Store the build configuratin\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Set the build type used by Elemental. We use Pure (MPI only/no OpenMP) since\n\n# MADNESS threads do not play nice with Elemental threads.\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Set the configuration variables used by elemental\n",
        "Line" : 27,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Restore the build configuration.\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Add build-elemental target\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Add a component install target for elemental \n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# elemental target has been added to the list of exported targets in hacked CMakeFiles.txt in elemental subdir\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "src/madness/external/Makefile.am" : {
      "ObjectId" : "a462580d4741457ff6d9d65d37cce96748eeee64",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/madness/external/elemental/CMakeLists.txt" : {
      "ObjectId" : "ef2b80e5eb8e7a987fb4850a17822e11eb154eb1",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#  Copyright (c) 2009-2014, Jack Poulson\n\n#                     2012, Jed Brown \n\n#  All rights reserved.\n\n#\n\n#  This file is part of Elemental and is under the BSD 2-Clause License, \n\n#  which can be found in the LICENSE file in the root directory, or at \n\n#  http://opensource.org/licenses/BSD-2-Clause\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n\n# Common build options                                                         #\n\n################################################################################\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# By default, Elemental builds static libraries, but shared libraries are \n\n# also supported through this option.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Whether or not to build a collection of simple example drivers.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Whether or not to build a collection of performance and correctness tests\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Whether or not to force the Memory class zero initialize what it allocates.\n\n# If valgrind was detected and is running, this will be forced anyway.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Whether or not to build current 'experimental' code, such as:\n\n# Martin's 3D Gemm code\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Attempt to use 64-bit integers\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Whether or not to use Qt5 for visualization if it is found (experimental)\n\n# NOTE: Setting Qt5Widgets_DIR, Qt5_DIR, or Qt5_LIBDIR overrides this variable\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "################################################################################\n\n# Advanced build options                                                       #\n\n################################################################################\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Since it is surprisingly common for MPI libraries to have bugs in their \n\n# support for complex data, the following option forces Elemental to cast \n\n# all possible MPI communications in terms of twice as many real units of data.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# At one point, a bug was found in IBM's C++ compiler for Blue Gene/P, \n\n# where OpenMP statements of the form a[i] += alpha b[i], with complex data,\n\n# would segfault and/or return incorrect results\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Due to a subtle flaw in the Blue Gene/P extensions for MPICH2, treating \n\n# floating-point data as a collection of byte-sized objects results in a \n\n# better algorithm being chosen for MPI_Allgather. This should not effect\n\n# performance on most machines.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# If MPI_Reduce_scatter_block doesn't exist, perform it by composing \n\n# MPI_Allreduce and std::memcpy rather than MPI_Reduce and MPI_Scatter\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# This can easily be performed, but is likely not a good idea\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "################################################################################\n\n# Elemental-development build options                                          #\n\n################################################################################\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Print a warning any time a redistribution is performed which unpacks a \n\n# large amount of data with a non-unit stride\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Print a warning when an improperly aligned redistribution is performed, \n\n# i.e., if an unnecessary permutation communication stage must take place\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Print a warning if an opportunity was missed to implement a redistribution\n\n# approach specifically for vectors (instead of matrices)\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "################################################################################\n\n# Significant command-line variable definitions                                #\n\n################################################################################\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# \"CMAKE_BUILD_TYPE\"\n\n#   Elemental requires it to be one of the following choices:\n\n#     1. \"PureDebug\": Vanilla MPI build meant for development and debugging\n\n#     2. \"PureRelease\": Vanilla MPI build meant for production runs\n\n#     3. \"HybridDebug\": MPI+OpenMP build meant for development and debugging\n\n#     4. \"HybridRelease\": MPI+OpenMP build meant for production runs\n\n#   If \"CMAKE_BUILD_TYPE\" is not defined, the default is \"PureRelease\".\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# \"CXX_FLAGS\"\n\n#   Optimization and debugging/symbol flags\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# \"OpenMP_CXX_FLAGS\"\n\n#   Overrides the default compile flags for adding OpenMP support to CXX code\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# TODO: Add list of MPI variables here, such as \"MPI_CXX_COMPILE_FLAGS\"\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# TODO: Add discussion of \"MATH_LIBS\"\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# TODO: Add discussion of \"REFERENCE_ROOT\"\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# TODO: Check to see if there are any others...\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "################################################################################\n\n# Build logic starts here                                                      #\n\n################################################################################\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Elemental must be built \"out-of-source\", so we start by ensuring that the\n\n# source and build directories are different.\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ccache for caching builds\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Get the Git revision\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Extract a few booleans from the build type and default to PureRelease\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Set the basic compile flags from the build type\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# I forget why we need this guard\n",
        "Line" : 177,
        "CharPositionInLine" : 14
      },
      "34" : {
        "Text" : "# set(${LANG}_FLAGS \"-O2 -g -Wunused-variable -Wunused-but-set-variable -Wunused-local-typedefs\" CACHE STRING\n",
        "Line" : 182,
        "CharPositionInLine" : 8
      },
      "35" : {
        "Text" : "# Qt5Widgets_DIR = Qt5_LIBDIR/cmake/Qt5Widgets\n",
        "Line" : 208,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# Now append the extra flags\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Add the Parallel Multiple Relatively Robust Representations (PMRRR) project\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Create the Elemental configuration header\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Create a file which can be included in Makefile's.\n\n# This is meant to be analogous to PETSc's 'conf/petscvariables' file\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Grab all of the .c, .cpp, .h, and .hpp Elemental files\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# The main library\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define the header-file preparation rules\n",
        "Line" : 305,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# TODO: Ensure that source files depend on header files\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Make sure the Elemental headers can be found\n",
        "Line" : 325,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# Build the test drivers if necessary\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# Build the example drivers if necessary\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# Build experimental drivers\n",
        "Line" : 384,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Build the G3D example(s)\n",
        "Line" : 388,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# If Elemental is a subproject, then pass some variables to the parent\n",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 50
    },
    "src/madness/external/elemental/cmake/ElemSub.cmake" : {
      "ObjectId" : "99e8d263dda7e9357a9d79b37284966ffb0b7467",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Version information\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# C compiler info\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C++ compiler info\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# MPI and math link flags\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Miscellaneous\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/madness/external/elemental/cmake/ElemVars.cmake" : {
      "ObjectId" : "43efafef73501e58d7efcd1c5172850f9a2f30be",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# To help simplify including Elemental in external projects\n\n# TODO: Complain if Qt5 was used\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Attempt to add Qt5 support if needed\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/madness/external/elemental/cmake/config.h.cmake" : {
      "ObjectId" : "babc3d29367e208a303232469c3d5699a9f59899",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\n   Copyright (c) 2009-2013, Jack Poulson\n   All rights reserved.\n\n   This file is part of Elemental and is under the BSD 2-Clause License, \n   which can be found in the LICENSE file in the root directory, or at \n   http://opensource.org/licenses/BSD-2-Clause\n*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/* Build type and version information */",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* C compiler info */",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* C++ compiler info */",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* Math libraries */",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Basic configuration options */",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Advanced configuration options */",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/madness/external/elemental/cmake/tests/CXX.cmake" : {
      "ObjectId" : "851631295a4ed4fffa5510498f5cd9bf10a1b2d6",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Required features\n\n# =================\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Standard but inconsistently supported features\n\n# ==============================================\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C++11 random number generation\n\n# ==============================\n\n# Note: It was noticed that, for certain relatively recent Intel compiler\n\n#       releases, the following snippets will suggest that normal distributions\n\n#       are supported, but not uniform integer or real distributions. \n\n#       Unfortunately, it has been observed that, when one attempts to sample\n\n#       from a normal distribution, the application hangs indefinitely.\n\n#       Thus, Elemental takes the approach of requiring all of the following\n\n#       to be detected before any are used.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# \"restrict\" support\n\n# ==================\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/madness/external/elemental/cmake/tests/Fortran.cmake" : {
      "ObjectId" : "026b5891e5febabe6b2c4478729dc14ae12e6277",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# NOTE: There is not a consistent ABI for Fortran's LOGICAL. Though it is\n\n#       standard for it to be represented in the same manner as INTEGER,\n\n#       the value for .true. is often +1 but sometimes -1, whereas .false.\n\n#       is almost always 0. We will thus standardize on .true.=+1 and .false=0,\n\n#       though this is known to occasionally break. Unfortunately it is\n\n#       nontrivial to determine this value since the same Fortran compiler\n\n#       which compiled ScaLAPACK would need to be known in order to create\n\n#       a custom routine which sets the input to .true. or .false.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Go ahead and check for Fortran, but keep in mind that CMake's 'OPTIONAL' \n\n# argument for enable_language is still completely broken as of 2.8.8\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/madness/external/elemental/cmake/tests/MPI.cmake" : {
      "ObjectId" : "931e1aec2780d7347bf0c6670a72f95e70b1ccc3",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Look for MPI_Reduce_scatter_block (and MPI_Reduce_scatter as sanity check)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check for MPI_IN_PLACE (essentially MPI2 support)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We cannot simply use check_function_exists, since MPI_Comm_f2c is \n\n# a macro in some MPI implementations\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/madness/external/elemental/cmake/tests/Math.cmake" : {
      "ObjectId" : "40e08de4ed2f2323bec61c282386b46307f511a8",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Check for BLAS and LAPACK support\n\n# =================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for default BLAS and LAPACK\n",
        "Line" : 14,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Check the BLAS and LAPACK underscore conventions\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Ensure that we have a relatively new version of LAPACK\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Check for libFLAME support\n\n# ==========================\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check for ScaLAPACK support\n\n# ===========================\n\n# NOTE: pdsyngst was chosen because MKL's ScaLAPACK only defines pdsyngst_,\n\n#       but not pdsyngst, despite defining both pdpotrf and pdpotrf_. \n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/madness/external/elemental/cmake/tests/OpenMP.cmake" : {
      "ObjectId" : "a5b8de1a5a6504f1057557157551b6b373503f23",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# See if we have 'collapse' support, since Clang is currently setting _OPENMP\n\n# greater than 200805 despite not supporting OpenMP 3.0 (i.e., collapse)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/madness/external/elemental/cmake/tests/Qt5.cmake" : {
      "ObjectId" : "a25abf61c0c6c1508dd20871a5be5c2a477b4fc9",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Search for Qt5\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "src/madness/external/elemental/cmake/toolchains/BGQ-Mira-clang-essl.cmake" : {
      "ObjectId" : "ebecf247db2ad7605fd1d77a8ff5a5b45ae443c2",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(CMAKE_SYSTEM_NAME BlueGeneQ-static)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The serial compilers\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The MPI wrappers for the C and C++ compilers\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################################################\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# set the search path for the environment coming with the compiler\n\n# and a directory where you can install your own compiled software\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search\n\n# programs in the host environment\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##############################################################\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "src/madness/external/elemental/cmake/toolchains/BGQ-Vesta-clang-essl.cmake" : {
      "ObjectId" : "9f0d587bedb08db5115eeb8d3e6a6af5fd4a1a83",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(CMAKE_SYSTEM_NAME BlueGeneQ-static)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# V1R2M0\n\n#set(MPI_ROOT  \"/bgsys/drivers/ppcfloor/comm/gcc\")\n\n#set(PAMI_ROOT \"/bgsys/drivers/ppcfloor/comm/sys\")\n\n# V1R2M1\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The serial compilers\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The MPI wrappers for the C and C++ compilers\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# V1R2M0\n\n#set(MPI_C_LIBRARIES       \"-lmpich -lopa -lmpl -ldl -lpami -lSPI -lSPI_cnk -lpthread -lrt -lstdc++\")\n\n#set(MPI_CXX_LIBRARIES     \"-lcxxmpich ${MPI_C_LIBRARIES}\")\n\n# V1R2M1\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##############################################################\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# set the search path for the environment coming with the compiler\n\n# and a directory where you can install your own compiled software\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search\n\n# programs in the host environment\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#set(CMAKE_FIND_LIBRARY_SUFFIXES .a ${CMAKE_FIND_LIBRARY_SUFFIXES})\n\n#set(CMAKE_EXE_LINKER_FLAGS \"-static\")\n\n#set(MATH_LIBS \"${LAPACK_FLAGS} ${ESSL_FLAGS} ${XLF_FLAGS} ${XL_FLAGS} -lxlopt -lxlfmath -lxl -lgfortran -lm -lpthread -ldl -Wl,--allow-multiple-definition\")\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# NOTE: It is apparently important that MATH_LIBS not begin with a full path\n\n#       to a particular file, e.g., /path/to/libname.a, as CMake is \n\n#       prepending -L for some reason.\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "src/madness/external/elemental/cmake/toolchains/BGQ-Vesta-clang-netlib.cmake" : {
      "ObjectId" : "4b727a4903455f34ab87004b9e2471058c93cd7a",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(CMAKE_SYSTEM_NAME BlueGeneQ-static)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The serial compilers\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The MPI wrappers for the C and C++ compilers\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set(CMAKE_THREAD_LIBS_INIT \"-fopenmp\")\n\n#set(OpenMP_CXX_FLAGS \"-fopenmp\")\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############################################################\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# set the search path for the environment coming with the compiler\n\n# and a directory where you can install your own compiled software\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search\n\n# programs in the host environment\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "##############################################################\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#set(CMAKE_FIND_LIBRARY_SUFFIXES .a ${CMAKE_FIND_LIBRARY_SUFFIXES})\n\n#set(CMAKE_EXE_LINKER_FLAGS \"-static\")\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "src/madness/external/elemental/cmake/toolchains/BGQ-Vesta-gnu-essl.cmake" : {
      "ObjectId" : "e3af3197435276189aadca64ca19b2e567cbb4d2",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(CMAKE_SYSTEM_NAME BlueGeneQ-static)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The serial compilers are typically set here, but, at least at some point,\n\n# it was easier to set them to the MPI compilers.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The MPI wrappers for the C and C++ compilers\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################################################\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# set the search path for the environment coming with the compiler\n\n# and a directory where you can install your own compiled software\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search\n\n# programs in the host environment\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##############################################################\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#set(CMAKE_FIND_LIBRARY_SUFFIXES .a ${CMAKE_FIND_LIBRARY_SUFFIXES})\n\n#set(CMAKE_EXE_LINKER_FLAGS \"-static\")\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/madness/external/elemental/cmake/toolchains/BGQ-Vesta-gnu-netlib.cmake" : {
      "ObjectId" : "e119e43a64f1342eac20187619e4492db9a8eb7d",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(CMAKE_SYSTEM_NAME BlueGeneQ-static)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The serial compilers are typically set here, but, at least at some point,\n\n# it was easier to set them to the MPI compilers.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The MPI wrappers for the C and C++ compilers\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################################################\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# set the search path for the environment coming with the compiler\n\n# and a directory where you can install your own compiled software\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# adjust the default behaviour of the FIND_XXX() commands:\n\n# search headers and libraries in the target environment, search\n\n# programs in the host environment\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##############################################################\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#set(CMAKE_FIND_LIBRARY_SUFFIXES .a ${CMAKE_FIND_LIBRARY_SUFFIXES})\n\n#set(CMAKE_EXE_LINKER_FLAGS \"-static\")\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/madness/external/elemental/cmake/toolchains/Edison-gnu-mpich-libsci.cmake" : {
      "ObjectId" : "1ae4d60856a974aa35cb394bf814dba02414facf",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# NOTE: You will need to have the GNU environment loaded, e.g., via the command\n\n#       \n\n# module swap PrgEnv-intel PrgEnv-gnu\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The Cray wrappers\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is just a hack, as this machine always uses the above wrappers\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set(MATH_LIBS \"/opt/xt-libsci/11.0.06/gnu/46/mc12/lib/libsci_gnu.a;/opt/gcc/4.7.1/snos/lib64/libgfortran.a;-lm\")\n\n#set(MATH_LIBS \"/opt/cray/libsci/default/GNU/47/sandybridge/lib/libsci_gnu.a;/opt/gcc/4.7.2/snos/lib64/libgfortran.a;-lm\")\n\n#set(MATH_LIBS \"/opt/cray/libsci/default/GNU/47/sandybridge/lib/libsci_gnu.a;/opt/gcc/4.7.2/snos/lib64/libgfortran.a;/opt/cray/xc-sysroot/5.0.15/usr/lib64/libm.a\")\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/madness/external/elemental/cmake/toolchains/Hopper-gnu-mpich2-libsci.cmake" : {
      "ObjectId" : "ba087272442c4fb7bc2c08236387aab6e6406bf1",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# NOTE: You will need to have the GNU environment loaded, e.g., via the command\n\n#       \n\n#       module swap PrgEnv-pgi PrgEnv-gnu\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The Cray wrappers\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is just a hack, as this machine always uses the above wrappers\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/madness/external/elemental/cmake/toolchains/Lonestar-intel-mvapich2-mkl.cmake" : {
      "ObjectId" : "037f197c3db9b67d67ec26797c27e3df9328a520",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The serial Intel compilers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The MPI wrappers for the C and C++ compilers\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/madness/external/elemental/cmake/toolchains/Longhorn-intel-mvapich2-mkl.cmake" : {
      "ObjectId" : "704adaeb7ea9793e1f345abdf04328e10c9960cb",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The serial Intel compilers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The MPI wrappers for the C and C++ compilers\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/madness/external/elemental/cmake/toolchains/Ranger-gnu-mvapich-mkl.cmake" : {
      "ObjectId" : "64cc91b7a1de92ea6b309cd0d93289c53ac60b77",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set the serial GCC compilers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the MPI wrappers for the C and C++ compilers\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/madness/external/elemental/cmake/toolchains/Ranger-gnu-mvapich2-mkl.cmake" : {
      "ObjectId" : "d4a24b2ef207c1277066c8817c07633fd80fcdd3",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set the serial GCC compilers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the MPI wrappers for the C and C++ compilers\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/madness/external/elemental/cmake/toolchains/Ranger-intel-mvapich-mkl.cmake" : {
      "ObjectId" : "4fd21ad79b6e6bb265d3f3a9b35b9f38505296c9",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set the serial Intel compilers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the MPI wrappers for the C and C++ compilers\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/madness/external/elemental/cmake/toolchains/Ranger-intel-mvapich2-mkl.cmake" : {
      "ObjectId" : "12b1695e17f88734903723cfceebfdfcc8e49fa3",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Set the serial Intel compilers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the MPI wrappers for the C and C++ compilers\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/madness/external/elemental/cmake/toolchains/Stampede-gnu-mvapich2-mkl.cmake" : {
      "ObjectId" : "5f5704fcdb07c9b2730224e3883510b79a928bfa",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The serial GNU compilers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The MPI wrappers for the C and C++ compilers\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/madness/external/elemental/cmake/toolchains/Stampede-intel-mvapich2-mkl.cmake" : {
      "ObjectId" : "f75fc48ba74ff6c1560c97b441ba9f4bd30ed7f6",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# The serial Intel compilers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The MPI wrappers for the C and C++ compilers\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/madness/external/elemental/external/cmake/FindCXXFeatures.cmake" : {
      "ObjectId" : "80bddaac29db2e0df8dc501224a5e6df4f97f801",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindCXXFeatures\n\n# ---------------\n\n#\n\n# Check which features of the C++ standard the compiler supports\n\n#\n\n# When found it will set the following variables::\n\n#\n\n#  CXX11_COMPILER_FLAGS                      - the compiler flags needed to get C++11 features\n\n#\n\n#  CXXFeatures_auto_FOUND                    - auto keyword\n\n#  CXXFeatures_class_override_final_FOUND    - override and final keywords for classes and methods\n\n#  CXXFeatures_constexpr_FOUND               - constexpr keyword\n\n#  CXXFeatures_cstdint_header_FOUND          - cstdint header\n\n#  CXXFeatures_decltype_FOUND                - decltype keyword\n\n#  CXXFeatures_defaulted_functions_FOUND     - default keyword for functions\n\n#  CXXFeatures_delegating_constructors_FOUND - delegating constructors\n\n#  CXXFeatures_deleted_functions_FOUND       - delete keyword for functions\n\n#  CXXFeatures_func_identifier_FOUND         - __func__ preprocessor constant\n\n#  CXXFeatures_initializer_list_FOUND        - initializer list\n\n#  CXXFeatures_lambda_FOUND                  - lambdas\n\n#  CXXFeatures_long_long_FOUND               - long long signed & unsigned types\n\n#  CXXFeatures_nullptr_FOUND                 - nullptr\n\n#  CXXFeatures_rvalue_references_FOUND       - rvalue references\n\n#  CXXFeatures_sizeof_member_FOUND           - sizeof() non-static members\n\n#  CXXFeatures_static_assert_FOUND           - static_assert()\n\n#  CXXFeatures_variadic_templates_FOUND      - variadic templates\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011-2013 Rolf Eike Beer <eike@sf-mail.de>\n\n# Copyright 2012 Andreas Weis\n\n# Copyright 2013 Jan KundrÃ¡t\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n### Check for needed compiler flags\n\n#\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# No C++11 flag for those compilers, but check_cxx_compiler_flag()\n\n# can't detect because they either will not always complain (Borland)\n\n# or will hang (Watcom).\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# The Intel compiler on Windows may use these flags.\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "src/madness/external/elemental/external/cmake/FindNumPy.cmake" : {
      "ObjectId" : "1ce639e2b6a18d3676ea78bdce1a76b16e043776",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find the NumPy libraries\n\n# This module finds if NumPy is installed, and sets the following variables\n\n# indicating where it is.\n\n#\n\n# TODO: Update to provide the libraries and paths for linking npymath lib.\n\n#\n\n# NUMPY_FOUND - was NumPy found\n\n# NUMPY_VERSION - the version of NumPy found as a string\n\n# NUMPY_VERSION_MAJOR - the major version number of NumPy\n\n# NUMPY_VERSION_MINOR - the minor version number of NumPy\n\n# NUMPY_VERSION_PATCH - the patch version number of NumPy\n\n# NUMPY_VERSION_DECIMAL - e.g. version 1.6.1 is 10601\n\n# NUMPY_INCLUDE_DIRS - path to the NumPy include files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#============================================================================\n\n# Copyright 2012 Continuum Analytics, Inc.\n\n#\n\n# MIT License\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining\n\n# a copy of this software and associated documentation files\n\n# (the \"Software\"), to deal in the Software without restriction, including\n\n# without limitation the rights to use, copy, modify, merge, publish,\n\n# distribute, sublicense, and/or sell copies of the Software, and to permit\n\n# persons to whom the Software is furnished to do so, subject to\n\n# the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n\n# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n\n# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\n# OTHER DEALINGS IN THE SOFTWARE.\n\n#\n\n#============================================================================\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Finding NumPy involves calling the Python interpreter\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Convert the process output into a list\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Just in case there is unexpected output from the Python command.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The output from Python was unexpected. Raise an error always\n\n# here, because we found NumPy, but it appears to be corrupted somehow.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Make sure all directory separators are '/'\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Get the major and minor version numbers\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/madness/external/elemental/external/cmake/FindValgrind.cmake" : {
      "ObjectId" : "a6b1fb6d5d21ce6ca4f0188f030facaf831d66d4",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Valgrind.\n\n#\n\n# This module defines:\n\n#  VALGRIND_INCLUDE_DIR, where to find valgrind/memcheck.h, etc.\n\n#  VALGRIND_PROGRAM, the valgrind executable.\n\n#  VALGRIND_FOUND, If false, do not try to use valgrind.\n\n#\n\n# If you have valgrind installed in a non-standard place, you can define\n\n# VALGRIND_PREFIX to tell cmake where it is.\n\n#\n\n# NOTE: Copied from the opencog project, where it is distributed under the\n\n#       terms of the New BSD License.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/madness/external/elemental/external/cmake/GetGitRevisionDescription.cmake" : {
      "ObjectId" : "25143ec72d109e6b3f6b28e5ea2e2a195de71b97",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Returns a version string from Git\n\n#\n\n# These functions force a re-configure on each git commit so that you can\n\n# trust the values of the variables in your build system.\n\n#\n\n# get_git_head_revision(<refspecvar> <hashvar> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the refspec and sha hash of the current head revision\n\n#\n\n# git_describe(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe on the source tree, and adjusting\n\n# the output so that it tests false if an error occurs.\n\n#\n\n# git_get_exact_tag(<var> [<additional arguments to git describe> ...])\n\n#\n\n# Returns the results of git describe --exact-match on the source tree,\n\n# and adjusting the output so that it tests false if there was no exact\n\n# matching tag.\n\n#\n\n# Requires CMake 2.6 or newer (uses the 'function' command)\n\n#\n\n# Original Author:\n\n# 2009-2010 Ryan Pavlik <rpavlik@iastate.edu> <abiryan@ryand.net>\n\n# http://academic.cleardefinition.com\n\n# Iowa State University HCI Graduate Program/VRAC\n\n#\n\n# Copyright Iowa State University 2009-2010.\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We must run the following at \"include\" time, not at function call time,\n\n# to find the path to this module rather than the path to a calling list file\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# .git dir not found, search parent directories\n",
        "Line" : 45,
        "CharPositionInLine" : 31
      },
      "3" : {
        "Text" : "# We have reached the root directory, we are not in git\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# TODO sanitize\n\n#if((${ARGN}\" MATCHES \"&&\") OR\n\n# (ARGN MATCHES \"||\") OR\n\n# (ARGN MATCHES \"\\\\;\"))\n\n# message(\"Please report the following error to the project!\")\n\n# message(FATAL_ERROR \"Looks like someone's doing something nefarious with git_describe! Passed arguments ${ARGN}\")\n\n#endif()\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#message(STATUS \"Arguments to execute_process: ${ARGN}\")\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/madness/external/elemental/external/cmake/language_support_v2.cmake" : {
      "ObjectId" : "d8218d5cd32c1cc59f97e457b79a03f7efec1d13",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# cmake/modules/language_support.cmake\n\n#\n\n# Temporary additional general language support is contained within this\n\n# file.  \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This additional function definition is needed to provide a workaround for\n\n# CMake bug 9220.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# On debian testing (cmake 2.6.2), I get return code zero when calling \n\n# cmake the first time, but cmake crashes when running a second time\n\n# as follows:\n\n#\n\n#  -- The Fortran compiler identification is unknown\n\n#  CMake Error at /usr/share/cmake-2.6/Modules/CMakeFortranInformation.cmake:7 (GET_FILENAME_COMPONENT):\n\n#    get_filename_component called with incorrect number of arguments\n\n#  Call Stack (most recent call first):\n\n#    CMakeLists.txt:3 (enable_language)\n\n#\n\n# My workaround is to invoke cmake twice.  If both return codes are zero, \n\n# it is safe to invoke ENABLE_LANGUAGE(Fortran OPTIONAL)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Second run\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "src/madness/external/elemental/external/pmrrr/CMakeLists.txt" : {
      "ObjectId" : "bf619fd50b3e4f3f080c3445feda880fcd91b8d3",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#  Copyright (c) 2009-2013, Jack Poulson\n\n#                     2013, Jed Brown \n\n#  All rights reserved.\n\n#\n\n#  This file is part of Elemental and is under the BSD 2-Clause License, \n\n#  which can be found in the LICENSE file in the root directory, or at \n\n#  http://opensource.org/licenses/BSD-2-Clause\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add in the preprocessor definitions and fortran name-mangling\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Ensure that an MPI C compiler was found\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Look for a PTHREADS library unless one was already specified\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Grab all of the .c and .h files\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define the main library and its link libraries\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the header-preparation rules\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Make sure that the PMRRR headers can be found\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/madness/external/gtest/CMakeLists.txt" : {
      "ObjectId" : "b18c8b88fe7acb41e35385dde47612f508dcd509",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# src/madness/external/gtest\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/madness/external/gtest/Makefile.am" : {
      "ObjectId" : "99e12d67fdf60f52fcc0e4058a165df32444e0bb",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "##AUTOMAKE_OPTIONS = --warnings=no-override\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/madness/external/muParser/CMakeLists.txt" : {
      "ObjectId" : "b708ec4d5124e9c49e7151a5abac75607cb1ab39",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# src/madness/external/muParser\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create the MADmuparser library\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/madness/external/muParser/Makefile.am" : {
      "ObjectId" : "a58a4eb3b001d6ec9d032de05e71107054dcdab9",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/madness/external/tinyxml/CMakeLists.txt" : {
      "ObjectId" : "d3df66592b45bc4244044dd47e42df11a0d4f0e2",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# src/madness/external/tinyxml\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create the MADtinyxml library\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/madness/external/tinyxml/Makefile.am" : {
      "ObjectId" : "63291ebd6eb10c58d1277db0c6257dc4fa47ede6",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/madness/misc/CMakeLists.txt" : {
      "ObjectId" : "e232c75ee04924d96ad089e66d777e252f979797",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# src/madness/misc\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create the MADmisc library\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The list of unit test source files\n",
        "Line" : 12,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "src/madness/misc/Makefile.am" : {
      "ObjectId" : "8d4eb642bad5930d4c20625d2e7e55affb01ae8a",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/madness/mra/CMakeLists.txt" : {
      "ObjectId" : "87fb71f93360aa0636f96b9737f122bbde2cb7f6",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# src/madness/mra\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the MRA sources and header files\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create the MADmra library\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Create executables\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Install the MADmra library\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add unit tests    \n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The list of unit test source files\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Test executables that are not run with unit tests\n",
        "Line" : 45,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "src/madness/mra/Makefile.am" : {
      "ObjectId" : "1e6f04e191f7f56d7ca421dcd2f88a490762bb5f",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#AM_CPPFLAGS += -DMRA_DATA_DIR=\"\\\"`pwd`\\\"\"\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#TESTS = testsuite  testperiodic testbc testbsh testproj testpdiff \\\n#        testdiff1Db testdiff1D testdiff2D testdiff3D testgconv testopdir \\\n#        testqm testunaryop testper\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# tests run by mpirun\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# sequential tests\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# default test (= sequential)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#testop2_SOURCES = testop2.cc\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/madness/mra/minmax/Makefile" : {
      "ObjectId" : "e3923ca73f2f8b12437617df5fbe6ffa68a474fb",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# -Wall -Wno-strict-aliasing -Wno-deprecated  -ffast-math -std=c++0x \n\n#CXXOPT = -mavx -g -O3 -Wall -Wno-strict-aliasing -Wno-deprecated  -ffast-math -std=c++0x -march=native\n\n#CXXOPT = -g -Wall -Wno-deprecated -ansi -O0\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-ffast-math ... this breaks qd_real\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/madness/tensor/CMakeLists.txt" : {
      "ObjectId" : "c0059928aef4bdec39abe04115b5da28de5bf0da",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# src/madness/tensor\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add targets for generated header files\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Source lists for MADtensor\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# logically these headers should be part of their own library (MADclapack)\n\n# however CMake right now does not support a mechanism to properly handle header-only libs.\n\n# so will keep this a part of MADlinalg, add an install rule for these header only\n\n# and will remember that these files depend on LAPACK\n\n#\n\n# Source lists for MADclapack\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# this part of MADlinalg is purely independent of MADtensor\n",
        "Line" : 31,
        "CharPositionInLine" : 61
      },
      "5" : {
        "Text" : "# Source lists for MADlinalg\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Create libraries MADtensor and MADlinalg\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#add_mad_library(clapack MADLINALG_HEADERS \"\" \"madness/tensor\")\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# logically it's MADclapack that depends on LAPACK\n\n# some of the tests depend on MKL/Blas\n",
        "Line" : 41,
        "CharPositionInLine" : 60
      },
      "9" : {
        "Text" : "# add custom target for \"installing\" MADclapack headers\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Add unit tests\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# The list of unit test source files\n",
        "Line" : 89,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "src/madness/tensor/Makefile.am" : {
      "ObjectId" : "7d06bd3b089dc53fd291af58772a630ce64acb07",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# tests run by mpirun\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# sequential tests\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# default test (= sequential)\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/madness/tensor/mtxmq_bg/Makefile" : {
      "ObjectId" : "c5665acfa43beadce2349c075479f1c74eac2eef",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#HPM_PROFILING=YES\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#############################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-qpath=ILbc:/soft/apps/xlC-interim-fix-virtualthunk/exe/\n",
        "Line" : 27,
        "CharPositionInLine" : 50
      },
      "3" : {
        "Text" : "#CC=/home/projects/llvm/bin/bgclang\n\n#CXX=/home/projects/llvm/bin/bgclang++\n\n#COPT= -O3\n\n#LDFLAGS= -O3\n",
        "Line" : 50,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 4
    },
    "src/madness/tensor/mtxmq_graveyard/bgp_tuning/Makefile" : {
      "ObjectId" : "b6ca968c31a0fa6448b76e24c9899ddcb691ce2a",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Blue Gene/P\n\n#BLAS=/soft/apps/LIBBLAS/libgoto_ppc440FP2-r1.02a.VM.a\n\n#HPM=/soft/apps/UPC/lib/libhpm.a\n\n#CXX=mpixlcxx_r\n\n#CXXFLAGS=-g -O5 -qarch=450d -qtune=450 -qthreaded\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# LLVM on a laptop\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/madness/tensor/mtxmq_graveyard/new_mtxmq/bests/Makefile" : {
      "ObjectId" : "c5665acfa43beadce2349c075479f1c74eac2eef",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#HPM_PROFILING=YES\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#############################################\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-qpath=ILbc:/soft/apps/xlC-interim-fix-virtualthunk/exe/\n",
        "Line" : 27,
        "CharPositionInLine" : 50
      },
      "3" : {
        "Text" : "#CC=/home/projects/llvm/bin/bgclang\n\n#CXX=/home/projects/llvm/bin/bgclang++\n\n#COPT= -O3\n\n#LDFLAGS= -O3\n",
        "Line" : 50,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 4
    },
    "src/madness/world/CMakeLists.txt" : {
      "ObjectId" : "c4de92653d4fc701e257a6c89f76a8fa87c79162",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# src/madness/world\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create the MADworld-obj and MADworld library targets\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# DISABLEPIE flag can break linking of dependent libraries (e.g. on Linux using gcc6)\n\n# instead for each dependent executable target T do:\n\n# target_link_libraries(T MADNESS_DISABLEPIE_LINKER_FLAGS)\n\n#\n\n#if(LINKER_HAS_DISABLEPIE_SUPPORT)\n\n#  target_link_libraries(MADworld INTERFACE \"${DISABLEPIE_LINKER_FLAG}\")\n\n#endif()\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# create an additional, MADworld-only, export\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set the dependencies for the MADworld library\n\n#target_compile_definitions(MADworld PUBLIC \"-DMADNESS_GITREVISION=\\\"`git --git-dir=$(top_srcdir)/.git rev-parse HEAD`\\\"\")\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# convert library directories list to linker flags\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# The list of unit test source files\n",
        "Line" : 96,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# no way to make sure PARSEC has CUDA\n\n# so just look for it and hope for the best\n",
        "Line" : 110,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 8
    },
    "src/madness/world/Makefile.am" : {
      "ObjectId" : "a4eec1a71605bc093a4d9575a71e2fc41003e8f6",
      "LastModified" : "2019-01-07T20:53:10Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# specify the git commit version in the info functions\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# tests run by mpirun\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# sequential tests\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# default test (= sequential)\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#test_googletest_mpi_SOURCES = test_googletest.cc\n\n#test_googletest_mpi_CPPFLAGS = $(LIBGTEST_CPPFLAGS)\n\n#test_googletest_mpi_CXXFLAGS = $(LIBGTEST_CXXFLAGS)\n\n#test_googletest_mpi_LDADD = $(LIBGTEST_LIBS) $(LIBGTEST) libMADworld.la\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    }
  },
  "FileTypes" : {
    "CMAKE" : 91,
    "CMAKESOURCE" : 1,
    "MAKEFILE" : 6,
    "AUTOMAKE" : 24
  },
  "ElapsedTime" : 3106
}