{
  "Repository" : "6024725",
  "Revision" : "HEAD",
  "ObjectId" : "efabca8313b3d936ca3c7320bb8fc011f387c8d2",
  "CommitTime" : "2019-04-18T13:38:11Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "a70fc018646cd6edb80cd5d84b0899000243b643",
      "LastModified" : "2019-03-20T07:10:54Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# *DOCUMENTATION*\n\n# To see a list of typical targets execute \"make help\"\n\n# More info can be located in ./README\n\n# Comments in this file are targeted only to the developer, do not\n\n# expect to learn how to build the kernel reading this file.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Do not:\n\n# o  use make's built-in rules\n\n#    (this increases performance and avoids hard-to-debug behaviour);\n\n# o  print \"Entering directory ...\";\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# To put more focus on warnings, be less verbose as default\n\n# Use 'make V=1' to see the full commands\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# kbuild supports saving output files in a separate directory.\n\n# To locate output files in a separate directory two syntaxes are supported.\n\n# In both cases the working directory must be the root of the kernel src.\n\n# 1) O=\n\n# Use \"make O=dir/to/store/output/files/\"\n\n#\n\n# 2) Set KBUILD_OUTPUT\n\n# Set the environment variable KBUILD_OUTPUT to point to the directory\n\n# where the output files shall be placed.\n\n# export KBUILD_OUTPUT=dir/to/store/output/files/\n\n# make\n\n#\n\n# The O= assignment takes precedence over the KBUILD_OUTPUT environment\n\n# variable.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Our default target\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# KBUILD_SRC is set on invocation of make in OBJ directory\n\n# KBUILD_SRC is not intended to be used by the regular user (for now)\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# OK, Make called in directory where kernel src resides\n\n# Do we want to locate output files in a separate directory?\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Cancel implicit rules on top Makefile\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Invoke a second make in the output directory, passing relevant variables\n\n# check that the output directory actually exists\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Leave processing to above invocation of make\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# ifneq ($(KBUILD_OUTPUT),)\n\n# ifeq ($(KBUILD_SRC),)\n",
        "Line" : 98,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# We process the rest of the Makefile if this is the final invocation of make\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# If building an external module we do not care about the all: rule\n\n# but instead _all depend on modules\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# SHELL used by kbuild\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Beautify output\n\n# ---------------------------------------------------------------------------\n\n#\n\n# Normally, we echo the whole command before executing it. By making\n\n# that echo $($(quiet)$(cmd)), we now have the possibility to set\n\n# $(quiet) to choose other forms of output instead, e.g.\n\n#\n\n#         quiet_cmd_cc_o_c = Compiling $(RELDIR)/$@\n\n#         cmd_cc_o_c       = $(CC) $(c_flags) -c -o $@ $<\n\n#\n\n# If $(quiet) is empty, the whole command will be printed.\n\n# If it is set to \"quiet_\", only the short version will be printed.\n\n# If it is set to \"silent_\", nothing will be printed at all, since\n\n# the variable $(silent_cmd_cc_o_c) doesn't exist.\n\n#\n\n# A simple variant is to prefix commands with $(Q) - that's useful\n\n# for commands that shall be hidden in non-verbose mode.\n\n#\n\n#\t$(Q)ln $@ :<\n\n#\n\n# If KBUILD_VERBOSE equals 0 then the above command will be hidden.\n\n# If KBUILD_VERBOSE equals 1 then the above command is displayed.\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# If the user is running make -s (silent mode), suppress echoing of\n\n# commands\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Look for make include files relative to root of kernel src\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# We need some generic definitions (do not try to remake the file).\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Make variables (CC, etc...)\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# this looks a bit horrible, but 'VAR ?= VALUE' preserves builtin values\n\n# rather than only user-supplied values from env or command-line\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Use LINUXINCLUDE when you must reference the include/ directory.\n\n# Needed to be compatible with the O= option\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Read KERNELRELEASE from include/config/kernel.release (if it exists)\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Files to ignore in find ... statements\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# ===========================================================================\n\n# Rules shared between *config targets and build targets\n",
        "Line" : 237,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Basic helpers built in scripts/\n",
        "Line" : 242,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# To avoid any implicit rule to kick in, define an empty command.\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# outputmakefile generates a Makefile in the output directory, if using a\n\n# separate output directory. This allows convenient use of make in the\n\n# output directory.\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# To make sure we do not include .config for any of the *config targets\n\n# catch them early, and hand them over to scripts/kconfig/Makefile\n\n# It is allowed to specify more targets when calling make, including\n\n# mixing *config targets and build targets.\n\n# For example 'make oldconfig all'.\n\n# Detect when mixed targets is specified, and make a second invocation\n\n# of make so .config is not included in this case either (for *config).\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ===========================================================================\n\n# We're called with mixed targets (*config and build targets).\n\n# Handle them one by one.\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# ===========================================================================\n\n# *config targets only - make sure prerequisites are updated, and descend\n\n# in scripts/kconfig to make the *config target\n",
        "Line" : 302,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Read arch specific Makefile to set KBUILD_DEFCONFIG as needed.\n\n# KBUILD_DEFCONFIG may point out an alternative default configuration\n\n# used for 'make defconfig'\n\n#include $(srctree)/arch/$(SRCARCH)/Makefile\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Read in config\n",
        "Line" : 324,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Read in dependencies to all Kconfig* files, make sure to run\n\n# oldconfig if changes are detected.\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# To avoid any implicit rule to kick in, define an empty command\n",
        "Line" : 332,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# If .config is newer than include/config/auto.conf, someone tinkered\n\n# with it and forgot to run make oldconfig.\n\n# if auto.conf.cmd is missing then we are probably in a cleaned tree so\n\n# we execute the config step to be sure to catch updated Kconfig files\n",
        "Line" : 335,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Dummy target needed, because used as prerequisite\n",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# $(dot-config)\n",
        "Line" : 346,
        "CharPositionInLine" : 6
      },
      "37" : {
        "Text" : "# Now we can define CFLAGS etc according to .config\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# The all: target is the default when no target is given on the\n\n# command line.\n\n# This allow a user to issue only 'make' to build a kernel including modules\n\n# Defaults to vmlinux, but the arch makefile usually adds further targets\n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Do modpost on a prelinked vmlinux. The finally linked vmlinux has\n\n# relevant sections renamed as per the linker script.\n",
        "Line" : 393,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# The actual objects are generated when descending,\n\n# make sure no implicit rule kicks in\n",
        "Line" : 483,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# Handle descending into subdirectories listed in $(vmlinux-dirs)\n\n# Preset locale variables to speed up the build process. Limit locale\n\n# tweaks to this spot to avoid wrong language settings when running\n\n# make menuconfig etc.\n\n# Error messages still appears in the original language\n",
        "Line" : 489,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "###\n\n# Cleaning is done on three levels.\n\n# make clean     Delete most generated files\n\n#                Leave enough to build external modules\n\n# make mrproper  Delete the current configuration, and all generated files\n\n# make distclean Remove editor backup files, patch leftover files and the like\n",
        "Line" : 503,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# Directories & files removed with 'make clean'\n",
        "Line" : 510,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# Directories & files removed with 'make mrproper'\n",
        "Line" : 517,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# clean - Delete most, but leave enough to build external modules\n\n#\n",
        "Line" : 521,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# mrproper - Delete all generated files, including .config\n\n#\n",
        "Line" : 541,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# distclean\n\n#\n",
        "Line" : 555,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# FIXME Should go into a make.lib or something\n\n# ===========================================================================\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "# Shorthand for $(Q)$(MAKE) -f scripts/Makefile.clean obj=dir\n\n# Usage:\n\n# $(Q)$(MAKE) $(clean)=dir\n",
        "Line" : 576,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "#ifeq ($(config-targets),1)\n\n#ifeq ($(mixed-targets),1)\n",
        "Line" : 583,
        "CharPositionInLine" : 6
      },
      "51" : {
        "Text" : "# skip-makefile\n",
        "Line" : 586,
        "CharPositionInLine" : 6
      },
      "52" : {
        "Text" : "# Documentation\n\n# run Makefile in doc directory\n",
        "Line" : 591,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# Declare the contents of the .PHONY variable as phony.  We keep that\n\n# information in a variable so we can use it in if_changed and friends.\n",
        "Line" : 598,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 54
    },
    "bindings/Makefile" : {
      "ObjectId" : "4152340a7cc2f47ff628cc75b8fd97c9f587485f",
      "LastModified" : "2018-10-11T11:57:03Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (C) 2014-2018 Stefano Babic <sbabic@denx.de>\n\n#\n\n# SPDX-License-Identifier:     GPL-2.0-or-later\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "bootloader/Makefile" : {
      "ObjectId" : "de3a8cb7c80b449343f44065d1f9b9e0378c4edf",
      "LastModified" : "2018-01-15T09:26:59Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (C) 2014-2018 Stefano Babic <sbabic@denx.de>\n\n#\n\n# SPDX-License-Identifier:     GPL-2.0-or-later\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "core/Makefile" : {
      "ObjectId" : "2657c313369115f7be154784dc425df392d9bdeb",
      "LastModified" : "2018-10-11T11:57:03Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for swupdate\n\n#\n\n# Copyright (C) 2013 Stefano Babic <sbabic@denx.de>\n\n#\n\n# Based on busybox build system:\n\n#\n\n# Copyright (C) 1999-2005 by Erik Andersen <andersen@codepoet.org>\n\n#\n\n# SPDX-License-Identifier:     GPL-2.0-or-later\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "corelib/Makefile" : {
      "ObjectId" : "d6edf65b518f63a3fc5a3552e1c5cebe48091e5f",
      "LastModified" : "2019-02-01T14:20:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (C) 2014-2018 Stefano Babic <sbabic@denx.de>\n\n#\n\n# SPDX-License-Identifier:     GPL-2.0-or-later\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "corelib/test/Makefile" : {
      "ObjectId" : "b071177cec405bd96f9613c0d5d53fac5315ec53",
      "LastModified" : "2017-08-21T10:35:50Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "## Author: Christian Storm\n\n## Copyright (C) 2017, Siemens AG\n\n##\n\n## This program is free software; you can redistribute it and/or\n\n## modify it under the terms of the GNU General Public License as\n\n## published by the Free Software Foundation; either version 2 of\n\n## the License, or (at your option) any later version.\n\n##\n\n## This program is distributed in the hope that it will be useful,\n\n## but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\n## GNU General Public License for more details.\n\n##\n\n## You should have received a copy of the GNU General Public License\n\n## along with this program; if not, write to the Free Software\n\n## Foundation, Inc.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## transfer __mock_*() functions to according linker flags via rudimentary regex awk parsing\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "doc/Makefile" : {
      "ObjectId" : "1f6383018020fae9ef60206ce8d71f1ac8999f53",
      "LastModified" : "2017-08-21T10:35:50Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "handlers/Makefile" : {
      "ObjectId" : "b75c3ba16f7134611d91a477302cb63066d67fe2",
      "LastModified" : "2019-02-01T14:20:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (C) 2014-2018 Stefano Babic <sbabic@denx.de>\n\n#\n\n# SPDX-License-Identifier:     GPL-2.0-or-later\n\n#\n\n# Note: the handlers are inserted automatically\n\n# via a GCC constructor. To work, the linker should\n\n# not drop the handler if it is not called.\n\n# Handler can be called dynamically based\n\n# on the received image type.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ipc/Makefile" : {
      "ObjectId" : "e2826bd5be2a5030a97e367f29732d412f2d27bd",
      "LastModified" : "2018-10-11T11:57:03Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (C) 2014-2018 Stefano Babic <sbabic@denx.de>\n\n#\n\n# SPDX-License-Identifier:     GPL-2.0-or-later\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "mongoose/Makefile" : {
      "ObjectId" : "dc2d3d3ef9a7353971e9ed02891d607cd6f62a32",
      "LastModified" : "2018-10-11T11:57:03Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "parser/Makefile" : {
      "ObjectId" : "5150c3cb1f73d42af54865d206e077274c49e1c1",
      "LastModified" : "2018-10-11T11:57:03Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (C) 2014-2018 Stefano Babic <sbabic@denx.de>\n\n#\n\n# SPDX-License-Identifier:     GPL-2.0-or-later\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scripts/Makefile" : {
      "ObjectId" : "5764001c0657af69495cacdf54667efb80b1a573",
      "LastModified" : "2017-08-21T10:35:50Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###\n\n# scripts contains sources for various helper programs used throughout\n\n# the kernel for the build process.\n\n# ---------------------------------------------------------------------------\n\n# kallsyms:      Find all symbols in vmlinux\n\n# pnmttologo:    Convert pnm files to logo files\n\n# conmakehash:   Create chartable\n\n# conmakehash:\t Create arrays for initializing the kernel console tables\n\n# docproc:       Used in Documentation/DocBook\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#hostprogs-$(CONFIG_KALLSYMS)     += kallsyms\n\n#hostprogs-$(CONFIG_LOGO)         += pnmtologo\n\n#hostprogs-$(CONFIG_VT)           += conmakehash\n\n#hostprogs-$(CONFIG_IKCONFIG)     += bin2c\n\n#hostprogs-$(BUILD_C_RECORDMCOUNT) += recordmcount\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#always\t\t:= $(hostprogs-y) $(hostprogs-m)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The following hostprogs-y programs are only build on demand\n\n#hostprogs-y += unifdef docproc\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# These targets are used internally to avoid \"is up to date\" messages\n\n#PHONY += build_unifdef\n\n#build_unifdef: scripts/unifdef FORCE\n\n#\t@:\n\n#build_docproc: scripts/docproc FORCE\n\n#\t@:\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#subdir-$(CONFIG_MODVERSIONS) += genksyms\n\n#subdir-y                     += mod\n\n#subdir-$(CONFIG_SECURITY_SELINUX) += selinux\n\n#subdir-$(CONFIG_DTC)         += dtc\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Let clean descend into subdirs\n\n#subdir-\t+= basic kconfig package selinux\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "scripts/acceptance-tests/Makefile" : {
      "ObjectId" : "8456c6344da56c10c3f57b2df2fbacaf64b0ff02",
      "LastModified" : "2017-08-21T10:35:50Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# (C) Copyright 2016\n\n# Denis Osterland, Diehl Connectivity Solutions GmbH, Denis.Osterland@diehl.com.\n\n#\n\n# This program is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU General Public License as\n\n# published by the Free Software Foundation; either version 2 of\n\n# the License, or (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "scripts/basic/Makefile" : {
      "ObjectId" : "4fcef87bb8759894435a395224c7d92cd7a14214",
      "LastModified" : "2017-08-21T10:35:50Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "###\n\n# Makefile.basic lists the most basic programs used during the build process.\n\n# The programs listed herein are what are needed to do the basic stuff,\n\n# such as fix file dependencies.\n\n# This initial step is needed to avoid files to be recompiled\n\n# when kernel configuration changes (which is what happens when\n\n# .config is included by main Makefile.\n\n# ---------------------------------------------------------------------------\n\n# fixdep: \t Used to generate dependency information during build process\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# fixdep is needed to compile other host programs\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "scripts/kconfig/Makefile" : {
      "ObjectId" : "ed85d5f2a5224c68cd7541d4ea08210a4f70e3b8",
      "LastModified" : "2017-08-21T10:35:50Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# ===========================================================================\n\n# Kernel configuration targets\n\n# These targets are used from top-level makefile\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We need this, in case the user has it in its environment\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create new linux.pot file\n\n# Adjust charset to UTF-8 in .po file to accept UTF-8 in Kconfig files\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# These targets map 1:1 to the commandline options of 'conf'\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# oldnoconfig is an alias of olddefconfig, because people already are dependent\n\n# on its behavior (sets new symbols to their default value but not 'n') with the\n\n# counter-intuitive name.\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Help text used by make help\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# lxdialog stuff\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Use recursively expanded variables so we do not call gcc unless\n\n# we really need to do so. (Do not call gcc as part of make mrproper)\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ===========================================================================\n\n# Shared Makefile for the various kconfig executables:\n\n# conf:\t  Used for defconfig, oldconfig and related targets\n\n# nconf:  Used for the nconfig target.\n\n#         Utilizes ncurses\n\n# mconf:  Used for the menuconfig target\n\n#         Utilizes the lxdialog package\n\n# qconf:  Used for the xconfig target\n\n#         Based on Qt which needs to be installed to compile it\n\n# gconf:  Used for the gconfig target\n\n#         Based on GTK+ which needs to be installed to compile it\n\n# object files used by all kconfig flavours\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Check that we have the required ncurses stuff installed for lxdialog (menuconfig)\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Add environment specific flags\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# generated files seem to need this to find local include files\n",
        "Line" : 201,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Qt needs some extra effort...\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# GTK+ needs some extra effort, too...\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Extract gconf menu items for i18n support\n",
        "Line" : 314,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "suricatta/Makefile" : {
      "ObjectId" : "e20f75a0c4ad1f83c4a69db99770763ba82be0a4",
      "LastModified" : "2018-10-11T11:57:03Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (C) 2014-2018 Stefano Babic <sbabic@denx.de>\n\n#\n\n# SPDX-License-Identifier:     GPL-2.0-or-later\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "suricatta/test/Makefile" : {
      "ObjectId" : "b5ebbcfede88be63e7e8e50b1b0ebb9428a958eb",
      "LastModified" : "2017-08-21T10:35:50Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "## Author: Christian Storm\n\n## Copyright (C) 2017, Siemens AG\n\n##\n\n## This program is free software; you can redistribute it and/or\n\n## modify it under the terms of the GNU General Public License as\n\n## published by the Free Software Foundation; either version 2 of\n\n## the License, or (at your option) any later version.\n\n##\n\n## This program is distributed in the hope that it will be useful,\n\n## but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n\n## GNU General Public License for more details.\n\n##\n\n## You should have received a copy of the GNU General Public License\n\n## along with this program; if not, write to the Free Software\n\n## Foundation, Inc.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## transfer __mock_*() functions to according linker flags via rudimentary regex awk parsing\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "tools/Makefile" : {
      "ObjectId" : "a4c4c2932f9ac610cdcf3f123ba6b71008d56cdc",
      "LastModified" : "2018-10-11T11:57:03Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for swupdate\n\n#\n\n# Copyright (C) 2013 Stefano Babic <sbabic@denx.de>\n\n#\n\n# Based on busybox build system:\n\n#\n\n# Copyright (C) 1999-2005 by Erik Andersen <andersen@codepoet.org>\n\n#\n\n# SPDX-License-Identifier:     GPL-2.0-or-later\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# # Uncomment the next lines to integrate the compiling/linking of\n\n# # any .c files placed alongside the above \"official\" tools in the\n\n# # tools/ directory into SWUpdate's build system.\n\n# TOOLS_DIR := $(dir $(word $(words $(MAKEFILE_LIST)),$(MAKEFILE_LIST)))\n\n# TOOLS_SRC := $(wildcard $(TOOLS_DIR)/*.c)\n\n# TOOLS_BIN := $(patsubst $(TOOLS_DIR)/%.c, %.o, $(TOOLS_SRC))\n\n# lib-y += $(filter-out $(lib-y),$(TOOLS_BIN))\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 18
  },
  "ElapsedTime" : 1564
}