{
  "Repository" : "12271182",
  "Revision" : "HEAD",
  "ObjectId" : "59473517d194826bc85b4a119584fc6ee206f82a",
  "CommitTime" : "2017-04-03T09:07:17Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "b9786ec5e39af835156e2982e3f3c1c48d1fc414",
      "LastModified" : "2014-06-26T18:35:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# I have no idea if this version is right.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Incantation to get Ninja to give us color output.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This was recommended by the LLVM documentation for \"out-of-source\" pass\n\n# builds.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# I made this up to make it slightly easier to write CMake files for Clang\n\n# plugins.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Match the flags of LLVM itself. RTTI is turned off by default and\n\n# inlines are invisible.\n",
        "Line" : 31,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# Finally, the subprojects we actually intend to build.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "Makefile" : {
      "ObjectId" : "758092df3d49e3c3e5ee37bb45cc942384b72478",
      "LastModified" : "2017-04-03T09:07:17Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Program names.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Location of the Python virtual environment.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CMake options for building LLVM and the ACCEPT pass.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Automatically use a binary called \"ninja-build\", if it's available. Some\n\n# package managers call it this to avoid naming conflicts.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# LLVM 3.2 has some trouble building against libc++, which seems to be the\n\n# default standard library on recent OS X dev tools. Presumably this is fixed\n\n# in later versions of LLVM, but for now, we force the compiler to use GNU\n\n# libstdc++.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# On platforms that ship Python 3 as `python`, force Python 2 to be used in\n\n# CMake. I don't think CMake itself has a problem with py3k, but LLVM's\n\n# scripts do.\n\n# Additionally, make virtualenv use python2.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# If python2-virtualenv is installed, use that instead.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Actually building stuff.\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Convenience targets.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Fetching and extracting LLVM.\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Symlink our modified Clang source into the LLVM tree. This way, building the\n\n# \"llvm\" directory will build both LLVM and Clang. (In fact, this is the only\n\n# way to build Clang at all as far as I know.)\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Friendly error messages when tools don't exist.\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Python driver installation.\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Make a virtualenv and install all our dependencies there. This avoids\n\n# needing to clutter the system Python libraries (and possibly requiring\n\n# sudo).\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Documentation.\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Upload the documentation to the Web server.\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 16,
      "Errorlog" : "line 83:52 token recognition error at: '\\w'\n"
    },
    "checker/CMakeLists.txt" : {
      "ObjectId" : "51cb0ce1302d70cbc9e5c4e7de88eecf12858cc0",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "checkerlib/CMakeLists.txt" : {
      "ObjectId" : "07f875244bfcc9c125de6ae8259b9fe6eb72a80f",
      "LastModified" : "2014-09-18T21:15:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Call it \"checkerlib\", not \"libcheckerlib\".\n",
        "Line" : 16,
        "CharPositionInLine" : 15
      },
      "CommentCount" : 1
    },
    "pass/CMakeLists.txt" : {
      "ObjectId" : "151ea46482ad289787f8fc8fb4150a353a30c62e",
      "LastModified" : "2015-05-19T22:16:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Scaffolding.\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# Optimizations.\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "rt/Makefile" : {
      "ObjectId" : "3ea230c4ff0bb6758fc92f4408d622596b47b65a",
      "LastModified" : "2014-09-18T21:15:04Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# By default, build for the host platform.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 4,
    "MAKEFILE" : 2
  },
  "ElapsedTime" : 1641
}