{
  "Repository" : "21225578",
  "Revision" : "HEAD",
  "ObjectId" : "bd655678a6df5d54409771ac4859c7b0ccbd9c2d",
  "CommitTime" : "2019-04-17T07:25:55Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "7e23e8a2a8270aae965a2a0baad1438d95f3aaac",
      "LastModified" : "2019-04-10T23:48:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#! /usr/bin/make\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Extract version from git, or if we're from a zipfile, use dirname\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We use our own internal ccan copy.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where we keep the BOLT RFCs\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We support compatibility with pre-0.6.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Timeout shortly before the 600 second travis silence timeout\n\n# (method=thread to support xdist)\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# This is where we add new features as bitcoin adds them.\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Git doesn't maintain timestamps, so we only regen if git says we should.\n",
        "Line" : 228,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# If we run the tests in parallel we can speed testing up by a lot, however we\n\n# then don't exit on the first error, since that'd kill the other tester\n\n# processes and result in loads in loads of output. So we only tell py.test to\n\n# abort early if we aren't running in parallel.\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Explicitly hand DEVELOPER and VALGRIND so you can override on make cmd line.\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Keep includes in alpha order.\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Keep includes in alpha order, after including \"config.h\"\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Make sure Makefile includes all headers.\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Any mention of BOLT# must be followed by an exact quote, modulo whitespace.\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# E501 line too long (N > 79 characters)\n\n# E731 do not assign a lambda expression, use a def\n\n# W503: line break before binary operator\n",
        "Line" : 300,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# cppcheck gets confused by list_for_each(head, i, list): thinks i is uninit.\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Don't access amount_msat and amount_sat members directly without a good reason\n\n# since it risks overflow.\n",
        "Line" : 329,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# We make libwallycore.la a dependency, so that it gets built normally, without ncc.\n\n# Ncc can't handle the libwally source code (yet).\n",
        "Line" : 346,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Ignore test/ directories.\n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Can't add to ALL_OBJS, as that makes a circular dep.\n",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# We force make to relink this every time, to detect version changes.\n",
        "Line" : 366,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# That forces this rule to be run every time, too.\n",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Rebuild the world if this changes.\n",
        "Line" : 374,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# All binaries require the external libs, ccan and system library versions.\n",
        "Line" : 377,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Each test program depends on its own object.\n",
        "Line" : 380,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Without this rule, the (built-in) link line contains\n\n# external/libwallycore.a directly, which causes a symbol clash (it\n\n# uses some ccan modules internally).  We want to rely on -lwallycore etc.\n\n# (as per EXTERNAL_LDLIBS) so we filter them out here.\n",
        "Line" : 383,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Everything depends on the CCAN headers, and Makefile\n",
        "Line" : 390,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Except for CCAN, we treat everything else as dependent on external/ bitcoin/ common/ wire/ and all generated headers, and Makefile\n",
        "Line" : 393,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# We generate headers in two ways, so regen when either changes (or Makefile)\n",
        "Line" : 396,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Unnecessary deps\n",
        "Line" : 408,
        "CharPositionInLine" : 48
      },
      "30" : {
        "Text" : "# Now ALL_PROGRAMS is fully populated, we can expand it.\n",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Installation directories\n",
        "Line" : 438,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Commands\n",
        "Line" : 451,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Tags needed by some package systems.\n",
        "Line" : 457,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Target to create directories.\n",
        "Line" : 465,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Programs to install in bindir and pkglibexecdir.\n\n# TODO: $(EXEEXT) support for Windows?  Needs more coding for\n\n# the individual Makefiles, however.\n",
        "Line" : 476,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Make a tarball of opt/clightning/, optionally with label for distribution.\n",
        "Line" : 557,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 37,
      "Errorlog" : "line 4:127 token recognition error at: '\\1'\nline 312:117 token recognition error at: '\\1'\n"
    },
    "bitcoin/Makefile" : {
      "ObjectId" : "33dc5f7c28ca8b068c7a678a73ad812076add2b3",
      "LastModified" : "2018-08-23T12:46:22Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Included for one dir up.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Bitcoin objects depends on bitcoin/ external/ and ccan\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "bitcoin/test/Makefile" : {
      "ObjectId" : "9d33d7c76cbe4b351facbc8ea2731b6392165cac",
      "LastModified" : "2018-08-23T12:46:22Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "ccan/ccan/cdump/tools/Makefile" : {
      "ObjectId" : "8b012845e2fab4103805faf9db8fef961d1914a2",
      "LastModified" : "2016-07-01T02:29:15Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "ccan/ccan/crypto/sha256/benchmarks/Makefile" : {
      "ObjectId" : "f1749ab5e7eb11cb8123235bae012e9d127a4619",
      "LastModified" : "2016-07-01T02:29:15Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#ccan-crypto-sha256.o\n",
        "Line" : 7,
        "CharPositionInLine" : 64
      },
      "CommentCount" : 1
    },
    "ccan/ccan/crypto/shachain/tools/Makefile" : {
      "ObjectId" : "f14646ff0126a4c4a94073e4ddf3805a1d10af8c",
      "LastModified" : "2018-10-19T00:53:00Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#! /usr/bin/make\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#CFLAGS=-Wall -Werror -g3 -I$(CCANDIR) -DSHACHAIN_BITS=48\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# 48 bit index for shachain.  This is what lightning uses.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "ccan/ccan/htable/tools/Makefile" : {
      "ObjectId" : "a2cad59f0c2dd7e2edf17fd290d89c7a0112e522",
      "LastModified" : "2015-07-09T05:55:31Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#CFLAGS=-Wall -Werror -g -I$(CCANDIR)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ccan/ccan/intmap/benchmark/Makefile" : {
      "ObjectId" : "bebc616123e7791c482a6cfa3e0b820a79786cac",
      "LastModified" : "2018-10-19T00:53:00Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#CFLAGS=-Wall -Werror -g3 -I$(CCANDIR)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ccan/ccan/io/benchmarks/Makefile" : {
      "ObjectId" : "7dcf9bebcb7133aeb389f974a0e89a8d4818d2d3",
      "LastModified" : "2018-10-19T00:53:00Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "ccan/ccan/mem/bench/Makefile" : {
      "ObjectId" : "0f0dc7752fe9b6db068582eee1da1b90a1369e47",
      "LastModified" : "2018-10-19T00:53:00Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#CFLAGS=-Wall -Werror -g -I$(CCANDIR)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ccan/ccan/tal/benchmark/Makefile" : {
      "ObjectId" : "f1e8502b3f3b968d96bad88f7388698e4da930ef",
      "LastModified" : "2018-10-19T00:53:00Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#CFLAGS=-O3 -Wall -I../../..\n\n#CFLAGS=-g -Wall -I../../..\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "ccan/ccan/timer/benchmarks/Makefile" : {
      "ObjectId" : "a3cbbd12d48857772e216be829cdf40678e9b008",
      "LastModified" : "2018-10-19T00:53:00Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "channeld/Makefile" : {
      "ObjectId" : "567442587398db30502394892bbce5a0d3fa8c15",
      "LastModified" : "2019-04-10T23:48:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#! /usr/bin/make\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Designed to be run one level up\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make sure these depend on everything.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Common source we use.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Control daemon uses this:\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add to headers which any object might need.\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "channeld/test/Makefile" : {
      "ObjectId" : "623aa64033874f66c9e16e24f989201f1f2f49c7",
      "LastModified" : "2019-04-10T23:48:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Note that these actually #include everything they need, except ccan/ and bitcoin/.\n\n# That allows for unit testing of statics, and special effects.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cli/Makefile" : {
      "ObjectId" : "1c0cf09cddf1a573761708cc51382d75a4f50100",
      "LastModified" : "2019-04-11T03:03:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Make sure these depend on everything.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cli/test/Makefile" : {
      "ObjectId" : "abae776a832614a5df4d2f39911500adfd4b67de",
      "LastModified" : "2019-04-11T03:03:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Note that these actually #include everything they need, except ccan/ and bitcoin/.\n\n# That allows for unit testing of statics, and special effects.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "closingd/Makefile" : {
      "ObjectId" : "d9e5768ef1ab46efbf29a06d4184f9546d2e3db5",
      "LastModified" : "2019-04-11T03:03:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#! /usr/bin/make\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Designed to be run one level up\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# closingd needs these:\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure these depend on everything.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Control daemon uses this:\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add to headers which any object might need.\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Common source we use.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "common/Makefile" : {
      "ObjectId" : "5bb8d4658b78d9c42324a03eb9594a7dc66e7611",
      "LastModified" : "2019-04-11T03:03:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Common objects depends on bitcoin/ external/ and ccan\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "common/test/Makefile" : {
      "ObjectId" : "8cc31f91b5e52dff5f9916ae88b879abc8887efb",
      "LastModified" : "2018-10-19T00:53:00Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "connectd/Makefile" : {
      "ObjectId" : "443fde468bd1f37481ab23dfb2a5e9204bc8c54c",
      "LastModified" : "2019-04-11T03:03:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#! /usr/bin/make\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Designed to be run one level up\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Control daemon uses this:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# connectd needs these:\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Make sure these depend on everything.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# For checking\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add to headers which any object might need.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Common source we use.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "connectd/test/Makefile" : {
      "ObjectId" : "6cf654dcdc86f2593257d8b8cfd5f302f8f6721e",
      "LastModified" : "2018-10-19T00:53:00Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Note that these actually #include everything they need, except ccan/ and bitcoin/.\n\n# That allows for unit testing of statics, and special effects.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Test objects depend on ../ src and headers.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "devtools/Makefile" : {
      "ObjectId" : "61f705cef90ec381c020a1be70b1ac147b31a83a",
      "LastModified" : "2019-04-11T03:03:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Make sure these depend on everything.\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doc/Makefile" : {
      "ObjectId" : "91fb8a5f58b781b3d23a2da94eba068522fefefe",
      "LastModified" : "2019-04-11T03:03:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#! /usr/bin/make\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Designed to be run one level up\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "external/Makefile" : {
      "ObjectId" : "816b95fb1065fa69ba6610c9254a489edc7ab4e0",
      "LastModified" : "2019-04-11T03:03:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# We build libsodium, since Ubuntu xenial has one too old.\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# libsecp included in libwally.\n\n# Wildcards here are magic.  See http://stackoverflow.com/questions/2973445/gnu-makefile-rule-generating-a-few-targets-from-a-single-source-file\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If we tell Make that the above builds both, it runs it twice in\n\n# parallel.  So we lie :(\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Can't be inside submodule, as that makes git think it's dirty.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Need separate build dir: changes inside submodule make git think it's dirty.\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "gossipd/Makefile" : {
      "ObjectId" : "561c89f0f7f7c2a26bf7abc5d2b8d8c89b98eb32",
      "LastModified" : "2019-04-11T03:03:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#! /usr/bin/make\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Designed to be run one level up\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# lightningd uses this:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# gossipd needs these:\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Make sure these depend on everything.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# For checking\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add to headers which any object might need.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Common source we use.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "gossipd/test/Makefile" : {
      "ObjectId" : "09a6e9bb761a6c317df488d34ebcb20515e45ecc",
      "LastModified" : "2019-04-11T03:03:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Note that these actually #include everything they need, except ccan/ and bitcoin/.\n\n# That allows for unit testing of statics, and special effects.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Test objects depend on ../ src and headers.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "hsmd/Makefile" : {
      "ObjectId" : "8a5472c910e9b35c818c02e49bb0569316f6e6bf",
      "LastModified" : "2019-04-11T03:03:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#! /usr/bin/make\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Designed to be run one level up\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Common source we use.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# For checking\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Make sure these depend on everything.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "lightningd/Makefile" : {
      "ObjectId" : "be8e43e9e4a267ad448602b183ef64379cd624a6",
      "LastModified" : "2019-04-11T03:03:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#! /usr/bin/make\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Designed to be run one level up\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Common source we use.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make sure these depend on everything.\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# We accumulate all lightningd/ headers in these three:\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Generated headers\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# All together in one convenient var\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "lightningd/test/Makefile" : {
      "ObjectId" : "17e2fc5392b60bfb50f92bb51905b2cd4b3796ca",
      "LastModified" : "2019-04-11T03:03:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Note that these actually #include everything they need, except ccan/ and bitcoin/.\n\n# That allows for unit testing of statics, and special effects.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "onchaind/Makefile" : {
      "ObjectId" : "aa102f1d5ee2722960d0f9b4883fb2ef8e9310cc",
      "LastModified" : "2019-04-11T03:03:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#! /usr/bin/make\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Designed to be run one level up\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# onchaind needs these:\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Control daemon uses this:\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add to headers which any object might need.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Common source we use.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Make sure these depend on everything.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "onchaind/test/Makefile" : {
      "ObjectId" : "c487946df1cc0ebf352405e9a0d8882392389482",
      "LastModified" : "2019-04-11T03:03:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Note that these actually #include everything they need, except ccan/ and bitcoin/.\n\n# That allows for unit testing of statics, and special effects.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Test objects depend on ../ src and headers.\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "openingd/Makefile" : {
      "ObjectId" : "01847d90ab070a5bd20ac6af33edfc7014d2cef3",
      "LastModified" : "2019-04-11T03:03:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#! /usr/bin/make\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Designed to be run one level up\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# opening needs these:\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Control daemon uses this:\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Add to headers which any object might need.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Common source we use.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Make sure these depend on everything.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "plugins/Makefile" : {
      "ObjectId" : "7855017d896e298670c4dc1c197ac5d20037848c",
      "LastModified" : "2019-04-11T03:03:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Make sure these depend on everything.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "wallet/Makefile" : {
      "ObjectId" : "6f5c9e28e9e0b58c8546d0d8f0811128ec52275f",
      "LastModified" : "2019-04-11T03:03:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#! /usr/bin/make\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Designed to be run one level up\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make sure these depend on everything.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "wallet/test/Makefile" : {
      "ObjectId" : "03b05ce215d19a542f71f03e2aa2baab959ef07c",
      "LastModified" : "2019-04-11T03:03:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Make sure these depend on everything.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "wire/Makefile" : {
      "ObjectId" : "ba939f64365a1a8d03ca8c17504358456fae1cbe",
      "LastModified" : "2019-04-11T03:03:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#! /usr/bin/make\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Designed to be run one level up\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# They may not have the bolts.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "wire/test/Makefile" : {
      "ObjectId" : "dcbf115e8595ebe33c005d9a590dc03b5438adc3",
      "LastModified" : "2019-04-11T03:03:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Note that these actually #include everything they need, except ccan/ and bitcoin/.\n\n# That allows for unit testing of statics, and special effects.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Test objects require source to be generated, since they include ..\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 37
  },
  "ElapsedTime" : 4368
}