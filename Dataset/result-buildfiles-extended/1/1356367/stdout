{
  "Repository" : "1356367",
  "Revision" : "HEAD",
  "ObjectId" : "a905d7116bc710924e949d2de7326394ab3b4e2f",
  "CommitTime" : "2019-04-13T09:21:38Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "07f014209ef5ac53a0e7e150231a5a7c6e0e87c7",
      "LastModified" : "2019-04-13T09:21:38Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "### generic info\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "### protocol versions\n\n# see doc/protocol.md for protocol version history\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "###\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "### options ###\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Include some nice macros\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "### binary and library output ###\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "### Cmake policies\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Don't run automoc and autouic on generated files (ui_*.h, qrc_*.cpp)\n",
        "Line" : 69,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "### General compiler flags\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "### Compiler-specific C++ 11 activation ###\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# GCC < 4.7\n",
        "Line" : 81,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# GCC >= 4.7 (set instead of append, because it needs to be first)\n",
        "Line" : 84,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# Clang++\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Microsoft Visual C++\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Other C++ compilers\n",
        "Line" : 93,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "### Set deployment target (OSX specific)\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "### Output config.h ###\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Tell the compiler where to find config.h\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# scan sub-directories\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "config/FindLibmicrohttpd.cmake" : {
      "ObjectId" : "b5b50d9ec9265a33eaa38c656b43cf4e9f981674",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#  Copyright (c) 2010 Carlos Junior <address@hidden>\n\n#\n\n# - Try to find libmicrohttpd\n\n# Once done this will define\n\n#\n\n#  MHD_FOUND - system has libmicrohttpd\n\n#  MHD_INCLUDE_DIRS - the libmicrohttpd include directory\n\n#  MHD_LIBRARIES - Link these to use libmicrohttpd\n\n#  MHD_DEFINITIONS - Compiler switches required for using libmicrohttpd\n\n#\n\n#  Redistribution and use is allowed according to the terms of the GPLv3 license\n\n#  For details see the accompanying LICENSE file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# show the MHD_INCLUDE_DIRS and MHD_LIBRARIES variables only in the advanced view\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "config/FindMiniupnpc.cmake" : {
      "ObjectId" : "2c33784dab632901be0afc3488e71018d2949588",
      "LastModified" : "2015-06-14T15:09:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find miniupnpc (https://github.com/miniupnp/miniupnp/)\n\n# \n\n# This will define\n\n# LIBMINIUPNPC_FOUND\n\n# LIBMINIUPNPC_INCLUDE_DIRS\n\n# LIBMINIUPNPC_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "config/FindQtColorWidgets.cmake" : {
      "ObjectId" : "981565eeb4eefdf916b1b819da3cc8cf675f7933",
      "LastModified" : "2015-09-06T09:49:25Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find QtColorWidgets (Qt5 version) (https://github.com/mbasaglia/Qt-Color-Widgets)\n\n# \n\n# This will define\n\n# LIBQTCOLORWIDGETS_FOUND\n\n# LIBQTCOLORWIDGETS_INCLUDE_DIRS\n\n# LIBQTCOLORWIDGETS_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "config/FindSodium.cmake" : {
      "ObjectId" : "753d7c81635f3cf57e56c84d5e91c09599e0942d",
      "LastModified" : "2018-01-05T17:11:57Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# from: https://github.com/kostko/libcurvecpr-asio/blob/master/cmake/FindSodium.cmake\n\n# aa358c98dec8fd0f31e7bab7a585571d5f8bfae3\n\n#\n\n# - Find Sodium\n\n# Find the native libsodium includes and library.\n\n#\n\n#  HINT: SODIUM_ROOT_DIR\n\n#\n\n# Once done this will define\n\n#\n\n#  SODIUM_INCLUDE_DIR    - where to find libsodium header files, etc.\n\n#  SODIUM_LIBRARY        - List of libraries when using libsodium.\n\n#  SODIUM_FOUND          - True if libsodium found.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# (from FindBoost script, edited by Cameron)\n\n# Collect environment variable inputs and use them if the local variable is not set.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set SODIUM_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "config/FindVpx.cmake" : {
      "ObjectId" : "a30a7162f46221bf6e81e51a39d1e6b40b87a0e6",
      "LastModified" : "2019-02-13T17:11:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find libvpx\n\n# \n\n# This will define\n\n# LIBVPX_FOUND\n\n# LIBVPX_INCLUDE_DIRS\n\n# LIBVPX_LIBRARIES\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "config/Macros.cmake" : {
      "ObjectId" : "9326ef9b6da494da35d4d021f36cc02bac355bdb",
      "LastModified" : "2019-02-13T17:11:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# \"0.7.0\" -> 0 7 0\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Transform the string in a list\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Extract the elements\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Assign the function parameters\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "config/Names.cmake" : {
      "ObjectId" : "c1a9be4fe5a0485035576bdd84e7f49dad3b35ea",
      "LastModified" : "2019-02-13T17:11:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "config/Tests.cmake" : {
      "ObjectId" : "1955a184925def822f77f83e317402049e1fc400",
      "LastModified" : "2019-02-13T17:11:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use the offscreen platform module so tests can run headlessly\n",
        "Line" : 10,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "config/config.h.cmake" : {
      "ObjectId" : "539d44d0458764ff6eff1e2eb5ab0494586a30fe",
      "LastModified" : "2019-02-13T17:11:53Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "// unicode\n//#define UNICODE 1\n//#define _UNICODE 1\n//#undef _MBCS",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "//#define NTDDI_VERSION NTDDI_WIN2KSP4\n//#define _WIN32_WINNT 0x0501",
        "Line" : 9,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "// visibility",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "desktop/CMakeLists.txt" : {
      "ObjectId" : "2891279693d2673dedd65d9f16fb459943bbc109",
      "LastModified" : "2019-04-03T19:13:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "8d0f4a828b17393ca079f26ec459f9abeb68c7a2",
      "LastModified" : "2019-02-13T17:11:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "b9ced6b92fd8292431c4bdbaf0db3b100b4e00b5",
      "LastModified" : "2019-02-13T17:11:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# src/CMakeLists.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/client/CMakeLists.txt" : {
      "ObjectId" : "523f806848011ea9962461981914f0e0bafaa9ea",
      "LastModified" : "2019-04-13T09:21:38Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/client/tests/CMakeLists.txt" : {
      "ObjectId" : "8944ccc8577934dbe55fedb805a6fe21bf49fed9",
      "LastModified" : "2019-04-03T19:13:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/desktop/CMakeLists.txt" : {
      "ObjectId" : "f6540b2f6a66629c58bfd407badb0beb15890ee5",
      "LastModified" : "2019-04-05T20:52:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Use bundled QtColorWidgets widgets if library not found\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# non-qt stuff\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# full name\n",
        "Line" : 195,
        "CharPositionInLine" : 20
      },
      "3" : {
        "Text" : "# internal name\n",
        "Line" : 196,
        "CharPositionInLine" : 16
      },
      "4" : {
        "Text" : "# set how it shows up in the Info.plist file\n",
        "Line" : 207,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "# set the bundle identifier (REQUIRED, or some strange GUI bugs may appear)\n",
        "Line" : 209,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "#SET(MACOSX_BUNDLE_INFO_STRING \"${CLIENTNAME}\")\n\n#SET(MACOSX_BUNDLE_LONG_VERSION_STRING \"${CLIENTNAME}\")\n",
        "Line" : 211,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# required here for ui_*.h generation\n",
        "Line" : 238,
        "CharPositionInLine" : 15
      },
      "CommentCount" : 8
    },
    "src/desktop/widgets/designer_plugin/drawpile_plugins.pro" : {
      "ObjectId" : "16a8fcabe012bab25d55d7d5bb787c90f9fbb9b8",
      "LastModified" : "2019-04-05T20:52:16Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Input\n\n#RESOURCES = resources.qrc\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/desktop/widgets/widgets.pro" : {
      "ObjectId" : "3455a1d8fd58331fd852a8edbee1aa30053729fb",
      "LastModified" : "2019-02-13T17:11:53Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "src/server/CMakeLists.txt" : {
      "ObjectId" : "67009d76fce8a866831e5f8314365632a55132c6",
      "LastModified" : "2019-04-05T20:52:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# src/server/CMakeLists.txt\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Unix specific features\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Select init system integration backend\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Enable HTTP admin API if libmicrohttpd was found\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable ext-auth if libsodium is available\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/server/tests/CMakeLists.txt" : {
      "ObjectId" : "447cba8b0517c546c021a38be8998b5bbf3ce072",
      "LastModified" : "2019-02-13T17:11:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/shared/CMakeLists.txt" : {
      "ObjectId" : "8214bfa532d369959c2bc111fbffa7e5a4023914",
      "LastModified" : "2019-02-13T17:11:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/shared/config.h.cmake" : {
      "ObjectId" : "e7105028123a7dbadf05d16557092598a0dead16",
      "LastModified" : "2019-02-13T17:11:53Z",
      "FileType" : "CMAKESOURCE",
      "CommentCount" : 0
    },
    "src/shared/tests/CMakeLists.txt" : {
      "ObjectId" : "6d2352543d0443b748fe5801497fc0dde1b2ff80",
      "LastModified" : "2019-02-13T17:11:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#find_package(Qt5Network REQUIRED)\n\n#find_package(KF5Archive REQUIRED NO_MODULE)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Qt5::Network\n\n#KF5::Archive\n",
        "Line" : 12,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 2
    },
    "src/tools/CMakeLists.txt" : {
      "ObjectId" : "99e2c01b4e4201cf4767dcc42bb529a4321f1025",
      "LastModified" : "2019-04-05T20:52:16Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 20,
    "CMAKESOURCE" : 2,
    "QMAKE" : 2
  },
  "ElapsedTime" : 3034
}