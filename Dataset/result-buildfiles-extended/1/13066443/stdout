{
  "Repository" : "13066443",
  "Revision" : "HEAD",
  "ObjectId" : "0194a8d1e65a5dbd732fdde7253744887e8e35cf",
  "CommitTime" : "2019-04-12T16:18:50Z",
  "Files" : {
    "android/guava-bom/pom.xml" : {
      "ObjectId" : "0585a024286ed417cb7af92a88cd1c097ebb4e0c",
      "LastModified" : "2018-11-20T19:19:00Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "android/guava-testlib/pom.xml" : {
      "ObjectId" : "79b05190ce856dc40ae3a7213a2aa513a0d56c5a",
      "LastModified" : "2018-11-20T19:19:00Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " testlib must carry these transitively ",
        "Line" : 41,
        "CharPositionInLine" : 75
      },
      "1" : {
        "Text" : "\n      Do not include Truth in non-test scope! Doing so creates a problematic dependency cycle.\n      ",
        "Line" : 46,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 2
    },
    "android/guava-tests/pom.xml" : {
      "ObjectId" : "5f56f4b3a0bdbae6084e50f80a69eec3a8c23d7e",
      "LastModified" : "2018-11-20T19:19:00Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "android/guava/pom.xml" : {
      "ObjectId" : "7a17eec030a8d7260221dda5fcd77ad41942e347",
      "LastModified" : "2019-02-26T19:18:53Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " TODO(cpovirk): does this comment belong on the <dependency> in <profiles>? ",
        "Line" : 50,
        "CharPositionInLine" : 88
      },
      "1" : {
        "Text" : " TODO(cpovirk): want this only for dependency plugin but seems not to work there? Maven runs without failure, but the resulting Javadoc is missing the hoped-for inherited text ",
        "Line" : 51,
        "CharPositionInLine" : 188
      },
      "2" : {
        "Text" : " TODO(cpovirk): include JDK sources when building testlib doc, too ",
        "Line" : 102,
        "CharPositionInLine" : 81
      },
      "3" : {
        "Text" : " TODO(cpovirk): Move this to the parent after making jdk-sources available there. ",
        "Line" : 125,
        "CharPositionInLine" : 100
      },
      "4" : {
        "Text" : " TODO(cpovirk): can we use includeDependencySources and a local com.oracle.java:jdk-lib:noversion:sources instead of all this unzipping and manual sourcepath modification? ",
        "Line" : 126,
        "CharPositionInLine" : 190
      },
      "5" : {
        "Text" : " (We need JDK *sources*, not just -link, so that {@inheritDoc} works.) ",
        "Line" : 127,
        "CharPositionInLine" : 89
      },
      "6" : {
        "Text" : " Passing `-subpackages com.google.common` breaks things, so we explicitly exclude everything else instead. ",
        "Line" : 130,
        "CharPositionInLine" : 125
      },
      "7" : {
        "Text" : " TODO(cpovirk): Move this to the parent after making the package-list files available there. ",
        "Line" : 133,
        "CharPositionInLine" : 111
      },
      "8" : {
        "Text" : " We add the link ourselves, both so that we can choose Java 9 over the version that -source suggests and so that we can solve the JSR305 problem described below. ",
        "Line" : 134,
        "CharPositionInLine" : 180
      },
      "9" : {
        "Text" : " We need local copies of some of these for 2 reasons: a User-Agent problem (https://stackoverflow.com/a/47891403/28465) and an SSL problem (https://issues.apache.org/jira/browse/MJAVADOC-507). If we choose to work around the User-Agent problem, we can go back to <links>, sidestepping the SSL problem. ",
        "Line" : 137,
        "CharPositionInLine" : 322
      },
      "10" : {
        "Text" : " Even after we stop using JSR305 annotations in our own code, we'll want this link so that NullPointerTester's docs can link to @CheckForNull and friends... at least once we start using this config for guava-testlib. ",
        "Line" : 138,
        "CharPositionInLine" : 237
      },
      "11" : {
        "Text" : " The JDK doc must be listed after JSR305 (and as an <offlineLink>, not a <link>) so that JSR305 \"claims\" javax.annotation. ",
        "Line" : 147,
        "CharPositionInLine" : 143
      },
      "12" : {
        "Text" : " The Checker Framework likewise would claim javax.annotations, despite providing only a subset of the JSR305 annotations, so it must likewise come after JSR305. ",
        "Line" : 152,
        "CharPositionInLine" : 181
      },
      "CommentCount" : 13
    },
    "android/pom.xml" : {
      "ObjectId" : "2ce2a150e11f6acb60cd619107baca393d3248a3",
      "LastModified" : "2019-04-12T16:18:50Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Override this with -Dtest.include=\"**/SomeTest.java\" on the CLI ",
        "Line" : 19,
        "CharPositionInLine" : 77
      },
      "1" : {
        "Text" : " Handle where Guava deviates from Maven defaults ",
        "Line" : 70,
        "CharPositionInLine" : 61
      },
      "2" : {
        "Text" : " Unsafe isn't part of the documented Java 6 API, but it is available.\n                   And in cases where it's not, we have fallbacks. ",
        "Line" : 142,
        "CharPositionInLine" : 71
      },
      "3" : {
        "Text" : " By having our own entries here, we also override the default exclusion filter, which excludes all nested classes. ",
        "Line" : 195,
        "CharPositionInLine" : 135
      },
      "4" : {
        "Text" : " https://github.com/google/guava/issues/2840 ",
        "Line" : 197,
        "CharPositionInLine" : 67
      },
      "5" : {
        "Text" : " FeatureUtilTest.*ExampleDerivedInterfaceTester, com.google.common.io.*Tester, incidentally FeatureSpecificTestSuiteBuilderTest.MyAbstractTester (but we don't care either way because it's not meant to run on its own but works OK if it does)... but not NullPointerTesterTest, etc. ",
        "Line" : 199,
        "CharPositionInLine" : 302
      },
      "6" : {
        "Text" : " Anonymous TestCase subclasses in GeneratedMonitorTest ",
        "Line" : 201,
        "CharPositionInLine" : 77
      },
      "7" : {
        "Text" : " Set max heap for tests. ",
        "Line" : 206,
        "CharPositionInLine" : 45
      },
      "8" : {
        "Text" : " Catch dependencies on the default locale by setting it to hi-IN. ",
        "Line" : 207,
        "CharPositionInLine" : 86
      },
      "9" : {
        "Text" : " use the guava we're building. ",
        "Line" : 274,
        "CharPositionInLine" : 51
      },
      "10" : {
        "Text" : " use the guava we're building. ",
        "Line" : 287,
        "CharPositionInLine" : 51
      },
      "CommentCount" : 11
    },
    "futures/failureaccess/pom.xml" : {
      "ObjectId" : "6cce78255df0312aec3d838ffaa0999165862666",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "futures/listenablefuture1/pom.xml" : {
      "ObjectId" : "3bd8c01db211326957dfcf2440a326b46b1c2ab8",
      "LastModified" : "2018-11-20T19:19:00Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "futures/listenablefuture9999/pom.xml" : {
      "ObjectId" : "ad3f23ec6585353fe52e5ff5923d2a0eb111db76",
      "LastModified" : "2018-11-20T19:19:00Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "guava-bom/pom.xml" : {
      "ObjectId" : "d32778eaae10d029fab8129a90d942da166b6e29",
      "LastModified" : "2018-11-20T19:19:00Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "guava-gwt/pom.xml" : {
      "ObjectId" : "4fc7032fcd2c17bbced6312a415448677f3af638",
      "LastModified" : "2019-03-07T20:41:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " We skip GWT tests by default. To run, pass -Dgwt.test.include=**/GwtTestSuite.java ",
        "Line" : 20,
        "CharPositionInLine" : 96
      },
      "1" : {
        "Text" : " Disable \"normal\" testing, which doesn't work for GWT tests. ",
        "Line" : 122,
        "CharPositionInLine" : 75
      },
      "2" : {
        "Text" : " The following don't contain @GwtCompatible for dependency reasons. ",
        "Line" : 250,
        "CharPositionInLine" : 92
      },
      "3" : {
        "Text" : "\n                To avoid \"java.io.IOException: User limit of inotify watches reached\" under JDK10.\n                Presumably we don't need inotify, since we don't intend to change files during the\n                build?\n                ",
        "Line" : 296,
        "CharPositionInLine" : 20
      },
      "4" : {
        "Text" : "\n            GWT issues some scary warnings while running tests, but I believe they are harmless.\n            Let's take the warnings for one module, c.g.c.base.testModule, as an example:\n\n              [INFO] Validating units:\n              [INFO]    Ignored 53 units with compilation errors in first pass.\n              [INFO] Compile with -strict or with -logLevel set to TRACE or DEBUG to see all errors.\n\n            Turning up the log level, we see that GWT is trying to compile classes from other\n            packages, like RangeTest. The reason for this is that GWT doesn't distinguish between\n            .java files in c.g.c.collect.Collect, a module that the c.g.c.base test module inherits,\n            and .java files in c.g.c.collect.testModule, one that it doesn't[*]. Consequently,\n            c.g.c.base.testModule transitively pulls in .java files from both modules while reading\n            the module description of only the prod module. And the prod module doesn't inherit all\n            the modules that the test module classes use, so we get errors.\n\n            The good news is that, despite ignoring errors here, GWT does fail if any errors affect\n            classes that are actually used in the module under test.\n\n            One way to eliminate the warnings is to make base.testModule include the not really\n            necessary <inherits> lines for c.g.c.collect.testModule, etc. However, adding <inherits>\n            lines could make c.g.c.base.testModule transitively inherit from extra modules. If some\n            of those modules are ones that it uses but forgets to list in its own <inherits>, we'd\n            like to get an error. Currently we do, but if we add the extra <inherits> lines, we\n            won't.\n\n            I have one idea for a better approach, but it's painful, and I haven't tested it: We\n            could postprocess Collect.gwt.xml to add <skip> lines for all the files that should be\n            covered by testModule.gwt.xml. Maybe I'll try it someday.\n\n            [*] https://code.google.com/p/google-web-toolkit/wiki/ResourceOracle#When_multiple_PathPrefix_es_have_the_same_path\n                https://code.google.com/p/google-web-toolkit/issues/detail?id=7581\n            ",
        "Line" : 332,
        "CharPositionInLine" : 16
      },
      "5" : {
        "Text" : " Fix OutOfMemoryError under Travis. ",
        "Line" : 345,
        "CharPositionInLine" : 58
      },
      "6" : {
        "Text" : " Keep these timeouts very large because, if we hit the timeout, the tests silently pass :( ",
        "Line" : 348,
        "CharPositionInLine" : 113
      },
      "7" : {
        "Text" : " seconds ",
        "Line" : 349,
        "CharPositionInLine" : 50
      },
      "8" : {
        "Text" : " minutes ",
        "Line" : 350,
        "CharPositionInLine" : 55
      },
      "9" : {
        "Text" : " Presumably we want watchFileChanges=false here, since we want it for compile: ",
        "Line" : 351,
        "CharPositionInLine" : 101
      },
      "CommentCount" : 10
    },
    "guava-testlib/pom.xml" : {
      "ObjectId" : "18626fa9362be25dcfdeebcf44a6ee08c3e19446",
      "LastModified" : "2018-11-20T19:19:00Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " testlib must carry these transitively ",
        "Line" : 41,
        "CharPositionInLine" : 75
      },
      "1" : {
        "Text" : "\n      Do not include Truth in non-test scope! Doing so creates a problematic dependency cycle.\n      ",
        "Line" : 46,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 2
    },
    "guava-tests/pom.xml" : {
      "ObjectId" : "add78b401974064b0bf16984ee5b0f500f8bdb02",
      "LastModified" : "2018-11-20T19:19:00Z",
      "FileType" : "MAVEN",
      "CommentCount" : 0
    },
    "guava/pom.xml" : {
      "ObjectId" : "077b9587f9b297551df4148a0f48dbeced183108",
      "LastModified" : "2019-03-07T20:41:04Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " TODO(cpovirk): does this comment belong on the <dependency> in <profiles>? ",
        "Line" : 50,
        "CharPositionInLine" : 88
      },
      "1" : {
        "Text" : " TODO(cpovirk): want this only for dependency plugin but seems not to work there? Maven runs without failure, but the resulting Javadoc is missing the hoped-for inherited text ",
        "Line" : 51,
        "CharPositionInLine" : 188
      },
      "2" : {
        "Text" : " TODO(cpovirk): include JDK sources when building testlib doc, too ",
        "Line" : 102,
        "CharPositionInLine" : 81
      },
      "3" : {
        "Text" : " TODO(cpovirk): Move this to the parent after making jdk-sources available there. ",
        "Line" : 125,
        "CharPositionInLine" : 100
      },
      "4" : {
        "Text" : " TODO(cpovirk): can we use includeDependencySources and a local com.oracle.java:jdk-lib:noversion:sources instead of all this unzipping and manual sourcepath modification? ",
        "Line" : 126,
        "CharPositionInLine" : 190
      },
      "5" : {
        "Text" : " (We need JDK *sources*, not just -link, so that {@inheritDoc} works.) ",
        "Line" : 127,
        "CharPositionInLine" : 89
      },
      "6" : {
        "Text" : " Passing `-subpackages com.google.common` breaks things, so we explicitly exclude everything else instead. ",
        "Line" : 130,
        "CharPositionInLine" : 125
      },
      "7" : {
        "Text" : " TODO(cpovirk): Move this to the parent after making the package-list files available there. ",
        "Line" : 133,
        "CharPositionInLine" : 111
      },
      "8" : {
        "Text" : " We add the link ourselves, both so that we can choose Java 9 over the version that -source suggests and so that we can solve the JSR305 problem described below. ",
        "Line" : 134,
        "CharPositionInLine" : 180
      },
      "9" : {
        "Text" : " We need local copies of some of these for 2 reasons: a User-Agent problem (https://stackoverflow.com/a/47891403/28465) and an SSL problem (https://issues.apache.org/jira/browse/MJAVADOC-507). If we choose to work around the User-Agent problem, we can go back to <links>, sidestepping the SSL problem. ",
        "Line" : 137,
        "CharPositionInLine" : 322
      },
      "10" : {
        "Text" : " Even after we stop using JSR305 annotations in our own code, we'll want this link so that NullPointerTester's docs can link to @CheckForNull and friends... at least once we start using this config for guava-testlib. ",
        "Line" : 138,
        "CharPositionInLine" : 237
      },
      "11" : {
        "Text" : " The JDK doc must be listed after JSR305 (and as an <offlineLink>, not a <link>) so that JSR305 \"claims\" javax.annotation. ",
        "Line" : 147,
        "CharPositionInLine" : 143
      },
      "12" : {
        "Text" : " The Checker Framework likewise would claim javax.annotations, despite providing only a subset of the JSR305 annotations, so it must likewise come after JSR305. ",
        "Line" : 152,
        "CharPositionInLine" : 181
      },
      "CommentCount" : 13
    },
    "pom.xml" : {
      "ObjectId" : "b40d8ffbf080dd6beacd3ded1e7ec6fda63d403a",
      "LastModified" : "2019-04-12T16:18:50Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " Override this with -Dtest.include=\"**/SomeTest.java\" on the CLI ",
        "Line" : 19,
        "CharPositionInLine" : 77
      },
      "1" : {
        "Text" : " Handle where Guava deviates from Maven defaults ",
        "Line" : 71,
        "CharPositionInLine" : 61
      },
      "2" : {
        "Text" : " By having our own entries here, we also override the default exclusion filter, which excludes all nested classes. ",
        "Line" : 191,
        "CharPositionInLine" : 135
      },
      "3" : {
        "Text" : " https://github.com/google/guava/issues/2840 ",
        "Line" : 193,
        "CharPositionInLine" : 67
      },
      "4" : {
        "Text" : " FeatureUtilTest.*ExampleDerivedInterfaceTester, com.google.common.io.*Tester, incidentally FeatureSpecificTestSuiteBuilderTest.MyAbstractTester (but we don't care either way because it's not meant to run on its own but works OK if it does)... but not NullPointerTesterTest, etc. ",
        "Line" : 195,
        "CharPositionInLine" : 302
      },
      "5" : {
        "Text" : " Anonymous TestCase subclasses in GeneratedMonitorTest ",
        "Line" : 197,
        "CharPositionInLine" : 77
      },
      "6" : {
        "Text" : " Set max heap for tests. ",
        "Line" : 202,
        "CharPositionInLine" : 45
      },
      "7" : {
        "Text" : " Catch dependencies on the default locale by setting it to hi-IN. ",
        "Line" : 203,
        "CharPositionInLine" : 86
      },
      "8" : {
        "Text" : " use the guava we're building. ",
        "Line" : 270,
        "CharPositionInLine" : 51
      },
      "9" : {
        "Text" : " use the guava we're building. ",
        "Line" : 283,
        "CharPositionInLine" : 51
      },
      "10" : {
        "Text" : " use the guava we're building. ",
        "Line" : 296,
        "CharPositionInLine" : 51
      },
      "CommentCount" : 11
    }
  },
  "FileTypes" : {
    "MAVEN" : 14
  },
  "ElapsedTime" : 4157
}