{
  "Repository" : "7307114",
  "Revision" : "HEAD",
  "ObjectId" : "0edd86d2626f86c99192b8d5e3185da9d3ec42e8",
  "CommitTime" : "2017-08-29T21:21:57Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "2ee8d458fef23400a159431eeb099ebdbd7be7a0",
      "LastModified" : "2017-08-22T23:22:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Catcierge CMake project\n\n# -----------------------\n\n#\n\n# Copyright (c) Joakim Soderberg 2013-2016\n\n#\n\n#  This file is part of Catcierge.\n\n#\n\n#    Catcierge is free software: you can redistribute it and/or modify\n\n#    it under the terms of the GNU General Public License as published by\n\n#    the Free Software Foundation, either version 2 of the License, or\n\n#    (at your option) any later version.\n\n#\n\n#    Foobar is distributed in the hope that it will be useful,\n\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#    GNU General Public License for more details.\n\n#\n\n#    You should have received a copy of the GNU General Public License\n\n#    along with Foobar.  If not, see <http://www.gnu.org/licenses/>.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This is where the catcierge config files will be installed.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The system wide default config that catcierge looks for by default.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Piborg Picoborg pins.\n\n# (For turning on Solenoids and other 12V-20V appliances.)\n\n# http://www.piborg.com/picoborg\n\n#\n\n# Picoborg pin 1 => GPIO4\n\n# Picoborg pin 2 => GPIO18\n\n# Picoborg pin 3 => GPIO8\n\n# Picoborg pin 4 => GPIO7\n\n#\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Turn on coverage if we're running coveralls!\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Set some nicer output dirs.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# Set version based on git tag\n\n# \n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# We set these based on the latest git tag and commit hash.\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# TODO: Move this to separate CMake script.\n",
        "Line" : 114,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# Get version from tag.\n",
        "Line" : 132,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Is this commit a tagged commit? (a release commit)\n",
        "Line" : 145,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# If return value is 0, it is tagged.\n",
        "Line" : 153,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Branch.\n",
        "Line" : 161,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Check the git status is something has changed\n\n# compared to the current git commit hash.\n",
        "Line" : 169,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# Coverage only works with GCC for a debug build.\n",
        "Line" : 187,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# This adds coverage arguments to gcc/clang.\n",
        "Line" : 192,
        "CharPositionInLine" : 3
      },
      "16" : {
        "Text" : "# Windows couldn't possibly be a raspberry pi...\n",
        "Line" : 200,
        "CharPositionInLine" : 1
      },
      "17" : {
        "Text" : "# Turn off deprecation warnings\n",
        "Line" : 205,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "#\n\n# System introspection.\n\n#\n",
        "Line" : 213,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#\n\n# This can be overridden by specifying your own OpenCV build\n\n# using -DOpenCV_DIR=<path>\n\n# Where <path> is the directory containing OpenCVConfig.cmake\n\n# \n",
        "Line" : 248,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# We link statically on windows so we don't have to copy DLLs around.\n",
        "Line" : 254,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# Raspicam lib.\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Raspicam test app.\n",
        "Line" : 311,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# Catcierge lib.\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# We use some of the unit test helpers for the test programs.\n",
        "Line" : 403,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "#\n\n# Install targets\n\n#\n",
        "Line" : 422,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#\n\n# Generate systemd init files.\n\n#\n",
        "Line" : 429,
        "CharPositionInLine" : 1
      },
      "27" : {
        "Text" : "# This is used in catcierge.service.in so that the gpio is always\n\n# setup before the catcierge service on RPI.\n",
        "Line" : 441,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Unix\n",
        "Line" : 461,
        "CharPositionInLine" : 8
      },
      "29" : {
        "Text" : "#\n\n# Install files common to all systems.\n\n#\n",
        "Line" : 463,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#\n\n# Packaging details.\n\n#\n",
        "Line" : 494,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Find the correct package architecture based on the platform we're building on.\n",
        "Line" : 515,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "# Needs to be last.\n",
        "Line" : 542,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "################################## Tests ##################################\n",
        "Line" : 546,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 34
    },
    "cmake/CodeCoverage.cmake" : {
      "ObjectId" : "09dc4498f26bedc3c7aefbe11f0e2c90dcd9b256",
      "LastModified" : "2014-04-23T15:27:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Boost Software License - Version 1.0 - August 17th, 2003\n\n#\n\n# Permission is hereby granted, free of charge, to any person or organization\n\n# obtaining a copy of the software and accompanying documentation covered by\n\n# this license (the \"Software\") to use, reproduce, display, distribute,\n\n# execute, and transmit the Software, and to prepare derivative works of the\n\n# Software, and to permit third-parties to whom the Software is furnished to\n\n# do so, all subject to the following:\n\n# \n\n# The copyright notices in the Software and this entire statement, including\n\n# the above license grant, this restriction and the following disclaimer,\n\n# must be included in all copies of the Software, in whole or in part, and\n\n# all derivative works of the Software, unless such copies or derivative\n\n# works are solely in the form of machine-executable object code generated by\n\n# a source language processor.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT\n\n# SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE\n\n# FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,\n\n# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n\n# DEALINGS IN THE SOFTWARE.\n\n#\n\n# 2012-01-31, Lars Bilke\n\n# - Enable Code Coverage\n\n#\n\n# 2013-09-17, Joakim SÃ¶derberg\n\n# - Added support for Clang.\n\n# - Some additional usage instructions.\n\n#\n\n# USAGE:\n\n# 1. Copy this file into your cmake modules path.\n\n#\n\n# 2. Add the following line to your CMakeLists.txt:\n\n#      INCLUDE(CodeCoverage)\n\n#\n\n# 3. Set compiler flags to turn off optimization and enable coverage: \n\n#    SET(CMAKE_CXX_FLAGS \"-g -O0 -fprofile-arcs -ftest-coverage\")\n\n#\t SET(CMAKE_C_FLAGS \"-g -O0 -fprofile-arcs -ftest-coverage\")\n\n#  \n\n# 3. Use the function SETUP_TARGET_FOR_COVERAGE to create a custom make target\n\n#    which runs your test executable and produces a lcov code coverage report:\n\n#    Example:\n\n#\t SETUP_TARGET_FOR_COVERAGE(\n\n#\t\t\t\tmy_coverage_target  # Name for custom target.\n\n#\t\t\t\ttest_driver         # Name of the test driver executable that runs the tests.\n\n#\t\t\t\t\t\t\t\t\t# NOTE! This should always have a ZERO as exit code\n\n#\t\t\t\t\t\t\t\t\t# otherwise the coverage generation will not complete.\n\n#\t\t\t\tcoverage            # Name of output directory.\n\n#\t\t\t\t)\n\n#\n\n# 4. Build a Debug build:\n\n#\t cmake -DCMAKE_BUILD_TYPE=Debug ..\n\n#\t make\n\n#\t make my_coverage_target\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Check prereqs\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NOT GCOV_PATH\n",
        "Line" : 69,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Clang version 3.0.0 and greater now supports gcov as well.\n",
        "Line" : 72,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# NOT CMAKE_COMPILER_IS_GNUCXX\n",
        "Line" : 78,
        "CharPositionInLine" : 8
      },
      "5" : {
        "Text" : "# NOT CMAKE_BUILD_TYPE STREQUAL \"Debug\"\n",
        "Line" : 82,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Param _targetname     The name of new the custom make target\n\n# Param _outputname     lcov output is generated as _outputname.info\n\n#                       HTML report is generated in _outputname/index.html\n\n# Param _testrunner     The name of the target which runs the tests.\n\n#\t\t\t\t\t\tMUST return ZERO always, even on errors. \n\n#\t\t\t\t\t\tIf not, no coverage report will be created!\n\n# Optional fourth parameter is passed as arguments to _testrunner\n\n#   Pass them in list form, e.g.: \"-j;2\" for -j 2\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# NOT LCOV_PATH\n",
        "Line" : 97,
        "CharPositionInLine" : 9
      },
      "8" : {
        "Text" : "# NOT GENHTML_PATH\n",
        "Line" : 101,
        "CharPositionInLine" : 9
      },
      "9" : {
        "Text" : "# Setup target\n",
        "Line" : 103,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Cleanup lcov\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Run tests\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Capturing lcov counters and generating report\n",
        "Line" : 112,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 122,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE\n",
        "Line" : 128,
        "CharPositionInLine" : 14
      },
      "15" : {
        "Text" : "# Param _targetname     The name of new the custom make target\n\n# Param _testrunner     The name of the target which runs the tests\n\n# Param _outputname     cobertura output is generated as _outputname.xml\n\n# Optional fourth parameter is passed as arguments to _testrunner\n\n#   Pass them in list form, e.g.: \"-j;2\" for -j 2\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# NOT PYTHON_EXECUTABLE\n",
        "Line" : 139,
        "CharPositionInLine" : 9
      },
      "17" : {
        "Text" : "# NOT GCOVR_PATH\n",
        "Line" : 143,
        "CharPositionInLine" : 9
      },
      "18" : {
        "Text" : "# Run tests\n",
        "Line" : 147,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Running gcovr\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# Show info where to find the report\n",
        "Line" : 156,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "# SETUP_TARGET_FOR_COVERAGE_COBERTURA\n",
        "Line" : 162,
        "CharPositionInLine" : 14
      },
      "CommentCount" : 22
    },
    "cmake/Coveralls.cmake" : {
      "ObjectId" : "17c4c6a008b29931519e58b9b24d3bc0594855df",
      "LastModified" : "2015-02-16T02:23:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n# Copyright (C) 2014 Joakim SÃ¶derberg <joakim.soderberg@gmail.com>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Param _COVERAGE_SRCS\tA list of source files that coverage should be collected for.\n\n# Param _COVERALLS_UPLOAD Upload the result to coveralls?\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# When passing a CMake list to an external process, the list\n\n# will be converted from the format \"1;2;3\" to \"1 2 3\".\n\n# This means the script we're calling won't see it as a list\n\n# of sources, but rather just one long path. We remedy this\n\n# by replacing \";\" with \"*\" and then reversing that in the script\n\n# that we're calling.\n\n# http://cmake.3232098.n2.nabble.com/Passing-a-CMake-list-quot-as-is-quot-to-a-custom-target-td6505681.html\n",
        "Line" : 45,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#message(\"Coverage sources: ${COVERAGE_SRCS}\")\n",
        "Line" : 58,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# Zero the coverage counters.\n",
        "Line" : 63,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Run regress tests.\n",
        "Line" : 67,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Generate Gcov and translate it into coveralls JSON.\n\n# We do this by executing an external CMake script.\n\n# (We don't want this to run at CMake generation time, but after compilation and everything has run).\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# TODO: This is passed like: \"a b c\", not \"a;b;c\"\n",
        "Line" : 74,
        "CharPositionInLine" : 39
      },
      "8" : {
        "Text" : "# Upload the JSON to coveralls.\n",
        "Line" : 94,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 9
    },
    "cmake/CoverallsClear.cmake" : {
      "ObjectId" : "eb68695a2b1fce4ea197f5be588379d13e3c2fb7",
      "LastModified" : "2014-12-16T00:51:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n# Copyright (C) 2014 Joakim SÃ¶derberg <joakim.soderberg@gmail.com>\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/CoverallsGenerateGcov.cmake" : {
      "ObjectId" : "eef5b14240a20a60c776b06baaf8a0a0b88267ca",
      "LastModified" : "2015-02-16T02:23:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n\n#\n\n# Copyright (C) 2014 Joakim SÃ¶derberg <joakim.soderberg@gmail.com>\n\n#\n\n# This is intended to be run by a custom target in a CMake project like this.\n\n# 0. Compile program with coverage support.\n\n# 1. Clear coverage data. (Recursively delete *.gcda in build dir)\n\n# 2. Run the unit tests.\n\n# 3. Run this script specifying which source files the coverage should be performed on.\n\n#\n\n# This script will then use gcov to generate .gcov files in the directory specified\n\n# via the COV_PATH var. This should probably be the same as your cmake build dir.\n\n#\n\n# It then parses the .gcov files to convert them into the Coveralls JSON format:\n\n# https://coveralls.io/docs/api\n\n#\n\n# Example for running as standalone CMake script from the command line:\n\n# (Note it is important the -P is at the end...)\n\n# $ cmake -DCOV_PATH=$(pwd) \n\n#         -DCOVERAGE_SRCS=\"catcierge_rfid.c;catcierge_timer.c\" \n\n#         -P ../cmake/CoverallsGcovUpload.cmake\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Make sure we have the needed arguments.\n\n#\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Since it's not possible to pass a CMake list properly in the\n\n# \"1;2;3\" format to an external process, we have replaced the\n\n# \";\" with \"*\", so reverse that here so we get it back into the\n\n# CMake list format.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO: Add these git things to the coveralls json.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Branch.\n",
        "Line" : 78,
        "CharPositionInLine" : 1
      },
      "5" : {
        "Text" : "############################# Macros #########################################\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# This macro converts from the full path format gcov outputs:\n\n#\n\n#    /path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n#\n\n# to the original source file path the .gcov is for:\n\n#\n\n#   /path/to/project/root/subdir/the_file.c\n\n#\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# /path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov \n\n# -> \n\n# #path#to#project#root#subdir#the_file.c.gcov   \n",
        "Line" : 124,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# #path#to#project#root#subdir#the_file.c.gcov -> /path/to/project/root/subdir/the_file.c\n",
        "Line" : 129,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "##############################################################################\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Get the coverage data.\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Get a list of all the object directories needed by gcov\n\n# (The directories the .gcda files and .o files are found in)\n\n# and run gcov on those.\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#\n\n# The -p below refers to \"Preserve path components\",\n\n# This means that the generated gcov filename of a source file will\n\n# keep the original files entire filepath, but / is replaced with #.\n\n# Example:\n\n#\n\n# /path/to/project/root/build/CMakeFiles/the_file.dir/subdir/the_file.c.gcda\n\n# ------------------------------------------------------------------------------\n\n# File '/path/to/project/root/subdir/the_file.c'\n\n# Lines executed:68.34% of 199\n\n# /path/to/project/root/subdir/the_file.c:creating '#path#to#project#root#subdir#the_file.c.gcov'\n\n#\n\n# If -p is not specified then the file is named only \"the_file.c.gcov\"\n\n#\n",
        "Line" : 149,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# TODO: Make these be absolute path\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Get only the filenames to use for filtering.\n\n#set(COVERAGE_SRCS_NAMES \"\")\n\n#foreach (COVSRC ${COVERAGE_SRCS})\n\n#\tget_filename_component(COVSRC_NAME ${COVSRC} NAME)\n\n#\tmessage(\"${COVSRC} -> ${COVSRC_NAME}\")\n\n#\tlist(APPEND COVERAGE_SRCS_NAMES \"${COVSRC_NAME}\")\n\n#endforeach()\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#\n\n# Filter out all but the gcov files we want.\n\n#\n\n# We do this by comparing the list of COVERAGE_SRCS filepaths that the\n\n# user wants the coverage data for with the paths of the generated .gcov files,\n\n# so that we only keep the relevant gcov files.\n\n#\n\n# Example:\n\n# COVERAGE_SRCS =\n\n#\t\t\t\t/path/to/project/root/subdir/the_file.c\n\n#\n\n# ALL_GCOV_FILES =\n\n#\t\t\t\t/path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n#\t\t\t\t/path/to/project/root/build/#path#to#project#root#subdir#other_file.c.gcov\n\n# \n\n# Result should be:\n\n# GCOV_FILES = \n\n#\t\t\t\t/path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov\n\n#\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#message(\"Look in coverage sources: ${COVERAGE_SRCS}\")\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#\n\n# /path/to/project/root/build/#path#to#project#root#subdir#the_file.c.gcov \n\n# -> \n\n# /path/to/project/root/subdir/the_file.c \n",
        "Line" : 208,
        "CharPositionInLine" : 1
      },
      "18" : {
        "Text" : "# Is this in the list of source files?\n\n# TODO: We want to match against relative path filenames from the source file root...\n",
        "Line" : 214,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# We remove it from the list, so we don't bother searching for it again.\n\n# Also files left in COVERAGE_SRCS_REMAINING after this loop ends should\n\n# have coverage data generated from them (no lines are covered).\n",
        "Line" : 222,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# TODO: Enable setting these\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Read the GCOV files line by line and get the coverage data.\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Loads the gcov file as a list of lines.\n\n# (We first open the file and replace all occurences of [] with _\n\n#  because CMake will fail to parse a line containing unmatched brackets...\n\n#  also the \\ to escaped \\n in macros screws up things.)\n\n# https://public.kitware.com/Bug/view.php?id=15369\n",
        "Line" : 262,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "# Instead of trying to parse the source from the\n\n# gcov file, simply read the file contents from the source file.\n\n# (Parsing it from the gcov is hard because C-code uses ; in many places\n\n#  which also happens to be the same as the CMake list delimeter).\n",
        "Line" : 276,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# According to http://json.org/ these should be escaped as well.\n\n# Don't know how to do that in CMake however...\n\n#string(REPLACE \"\\b\" \"\\\\\\\\b\" GCOV_FILE_SOURCE \"${GCOV_FILE_SOURCE}\")\n\n#string(REPLACE \"\\f\" \"\\\\\\\\f\" GCOV_FILE_SOURCE \"${GCOV_FILE_SOURCE}\")\n\n#string(REGEX REPLACE \"\\u([a-fA-F0-9]{4})\" \"\\\\\\\\u\\\\1\" GCOV_FILE_SOURCE \"${GCOV_FILE_SOURCE}\")\n",
        "Line" : 287,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "# We want a json array of coverage data as a single string\n\n# start building them from the contents of the .gcov\n",
        "Line" : 293,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# Line number for the .gcov.\n",
        "Line" : 297,
        "CharPositionInLine" : 24
      },
      "27" : {
        "Text" : "#message(\"${GCOV_LINE}\")\n\n# Example of what we're parsing:\n\n# Hitcount  |Line | Source\n\n# \"        8:   26:        if (!allowed || (strlen(allowed) == 0))\"\n",
        "Line" : 300,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# Check if we should exclude lines using the Lcov syntax.\n",
        "Line" : 310,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Lines with 0 line numbers are metadata and can be ignored.\n",
        "Line" : 340,
        "CharPositionInLine" : 3
      },
      "30" : {
        "Text" : "# Translate the hitcount into valid JSON values.\n",
        "Line" : 346,
        "CharPositionInLine" : 5
      },
      "31" : {
        "Text" : "# Advanced way of removing the trailing comma in the JSON array.\n\n# \"[1, 2, 3, \" -> \"[1, 2, 3\"\n",
        "Line" : 368,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "# Append the trailing ] to complete the JSON array.\n",
        "Line" : 372,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "# Generate the final JSON for this file.\n",
        "Line" : 375,
        "CharPositionInLine" : 1
      },
      "34" : {
        "Text" : "# Loop through all files we couldn't find any coverage for\n\n# as well, and generate JSON for those as well with 0% coverage.\n",
        "Line" : 382,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Loads the source file as a list of lines.\n",
        "Line" : 386,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "# Remove trailing comma, and complete JSON array with ]\n",
        "Line" : 402,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# Generate the final JSON for this file.\n",
        "Line" : 406,
        "CharPositionInLine" : 1
      },
      "38" : {
        "Text" : "# Get rid of trailing comma.\n",
        "Line" : 412,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Generate the final complete JSON!\n",
        "Line" : 416,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 40
    },
    "cmake/FindCZMQ.cmake" : {
      "ObjectId" : "6a1655a2170b945e63ca9d6324f58395caa9508d",
      "LastModified" : "2014-12-16T00:51:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find CZMQ\n\n# Once done this will define\n\n#\n\n#  CZMQ_FOUND - system has CZMQ\n\n#  CZMQ_INCLUDE_DIRS - the CZMQ include directory\n\n#  CZMQ_LIBRARIES - Link these to use CZMQ\n\n#  CZMQ_DEFINITIONS - Compiler switches required for using CZMQ\n\n#\n\n#  Copyright (c) 2011 Lee Hambley <lee.hambley@gmail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# show the CZMQ_INCLUDE_DIRS and CZMQ_LIBRARIES variables only in the advanced view\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/FindOpenCV.cmake" : {
      "ObjectId" : "ad50e8c51a590c8389f4f3acc8432bffc42d1f67",
      "LastModified" : "2014-12-16T00:51:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "######################################################################\n\n## Find OpenCV - variables set:\n\n##  OpenCV_FOUND\n\n##  OpenCV_LIBRARIES\n\n##  OpenCV_INCLUDE_DIRS\n\n##\n\n## This script is a combination from multiple sources that use\n\n## different variable names; the names are reconciled at the end\n\n## of the script.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "###########################################################\n\n#                  Find OpenCV Library\n\n# See http://sourceforge.net/projects/opencvlibrary/\n\n#----------------------------------------------------------\n\n#\n\n## 1: Setup:\n\n# The following variables are optionally searched for defaults\n\n#  OpenCV_DIR:            Base directory of OpenCv tree to use.\n\n#\n\n## 2: Variable\n\n# The following are set after configuration is done:\n\n#\n\n#  OpenCV_FOUND\n\n#  OpenCV_LIBS\n\n#  OpenCV_INCLUDE_DIR\n\n#  OpenCV_VERSION (OpenCV_VERSION_MAJOR, OpenCV_VERSION_MINOR, OpenCV_VERSION_PATCH)\n\n#\n\n#\n\n# Deprecated variable are used to maintain backward compatibility with\n\n# the script of Jan Woetzel (2006/09): www.mip.informatik.uni-kiel.de/~jw\n\n#  OpenCV_INCLUDE_DIRS\n\n#  OpenCV_LIBRARIES\n\n#  OpenCV_LINK_DIRECTORIES\n\n#\n\n## 3: Version\n\n#\n\n# 2010/04/07 Benoit Rat, Correct a bug when OpenCVConfig.cmake is not found.\n\n# 2010/03/24 Benoit Rat, Add compatibility for when OpenCVConfig.cmake is not found.\n\n# 2010/03/22 Benoit Rat, Creation of the script.\n\n#\n\n#\n\n# tested with:\n\n# - OpenCV 2.1:  MinGW, MSVC2008\n\n# - OpenCV 2.0:  MinGW, MSVC2008, GCC4\n\n#\n\n#\n\n## 4: Licence:\n\n#\n\n# Copyright: 2009 Benoit Rat\n\n# CopyPolicy: LGPLv2.1\n\n# \n\n#----------------------------------------------------------\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Lorenzo Natale -- Feb 2011\n\n# Improve compatibility with OpenCV package in Ubuntu 10.10\n\n# Lorenzo Natale -- March 2011\n\n# Removing OpenCV_INCLUDE_DIRS from required arguments\n\n# Since not all version of OpenCV set OpenCV_INCLUDE_DIRS. Problem detected with OpenCV 2.0 OpenCVConfig.cmake\n\n# directly calls INCLUDE_DIRECTORIES() and does not propagate any OpenCV_INCLUDE_ variable\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# let's skip module mode, and see if a OpenCVConfig.cmake file is around\n\n# this searches in system directories and ${OpenCV_DIR}\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "## OpenCVConfig.cmake sets OpenCV_LIBS OpenCV_INCLUDE_DIRS\n\n## but we need OpenCV_LIBRARIES\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "### If the above failed continues with traditional search method\n\n## To keep backward compatibility we keep the whole script\n\n## intact, however there is probably a lot of redundancy now\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##====================================================\n\n## Find OpenCV libraries\n\n##----------------------------------------------------\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#When its possible to use the Config script use it.\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "## Include the standard CMake script\n",
        "Line" : 95,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "## Search for a specific version\n",
        "Line" : 98,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "#Otherwise it try to guess it.\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#Find OpenCV version by looking at cvver.h\n",
        "Line" : 110,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "## Initiate the variable before the loop\n",
        "Line" : 120,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "## Loop over each components\n",
        "Line" : 124,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#Remove the cache value\n",
        "Line" : 129,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "#both debug/release\n",
        "Line" : 132,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "#only debug\n",
        "Line" : 135,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "#only release\n",
        "Line" : 138,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "#no library found\n",
        "Line" : 141,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "#Add to the general list\n",
        "Line" : 146,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "##====================================================\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#\n\n# Try another method to find OpenCV library\n\n# Once run this will define:\n\n#\n\n# OPENCV_FOUND\n\n# OPENCV_INCLUDE_DIR\n\n# OPENCV_LIBRARIES\n\n# OPENCV_LINK_DIRECTORIES\n\n##\n\n# deprecated:\n\n# (JW)-- OPENCV_EXE_LINKER_FLAGS\n\n#\n\n# 2004/05 Jan Woetzel, Friso, Daniel Grest \n\n# 2006 complete rewrite by Jan Woetzel\n\n##\n\n# www.mip.informatik.uni-kiel.de/\n\n# --------------------------------\n\n#\n\n# Modified by nat for YARP\n\n# - nat modified to work on win: added \"$ENV{OPENCV_DIR}/otherlibs/highgui/include\"\n\n# - nat, 19-oct 06: cxcore does not seem required by the opencv pakage that is\n\n# distributed with Debian stable. Still a requirement in windows\n\n# - nat, 20-oct 06: not smart enough to handle possible clashes between\n\n# different versions of opencv if installed in the system. Be careful.\n\n# - nat, 23-oct 06: First check OPENCV_DIR, OPENCV_ROOT or OPENCV_HOME\n\n# - paulfitz, 5-nov 06: made link with libhighgui be default true\n\n#   so that the opencv driver can be compiled. Nat, can you explain again \n\n#   which systems don't have this?\n\n# - nat, 13-nov 06: differentiated LINK_LIBHIGHGUI default on windows and linux\n\n#   still both true by default. I got a problem linking libhighgui on linux (did not\n\n#   have time to debug it) and found that in any case this lib is no longer required\n\n#   by opencv 0.9.9 (as a dependency). If older versions of opencv require libhighgui \n\n#   we can leave the default to TRUE. The libhighgui problem needs to be solved \n\n#   anyway...\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#     message(\"DBG OpenCV for 3.x\")\n",
        "Line" : 216,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# else(CXX_COMPILER_VERSION MATCHES \".*3\\\\.[0-9].*\")\n\n#     message(\"DBG not 3.x\")\n",
        "Line" : 218,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "#     message(\"DBG OpenCV for 4.x\")\n",
        "Line" : 223,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# else(CXX_COMPILER_VERSION MATCHES \".*4\\\\.[0-9].*\")\n\n#     message(\"DBG not 4.x\")\n",
        "Line" : 225,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "# CHECK OPENCV_ROOT\n",
        "Line" : 231,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# CHECK OPENCV_DIR\n",
        "Line" : 248,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# CHECK OPENCV_HOME\n",
        "Line" : 266,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "#message(\"DBG (OPENCV_POSSIBLE_INCDIRS=${OPENCV_POSSIBLE_INCDIRS}\")\n",
        "Line" : 308,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# candidates for OpenCV library directories:\n",
        "Line" : 310,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "#message(\"DBG (OPENCV_POSSIBLE_LIBRARY_PATHS=${OPENCV_POSSIBLE_LIBRARY_PATHS}\")\n",
        "Line" : 322,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# find (all) header files for include directories:\n",
        "Line" : 324,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "#message(\"DBG OPENCV_INCLUDE_DIR_CV=${OPENCV_INCLUDE_DIR_CV}\")\n",
        "Line" : 331,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# find (all) libraries - some dont exist on Linux\n",
        "Line" : 333,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "# optional CVCAM libs (WIN32 only)\n",
        "Line" : 354,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "###########################################\n\n## CHECK HEADER FILES\n",
        "Line" : 362,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "# REQUIRED LIBS\n",
        "Line" : 365,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# some people write opencv/foo.h, some write foo.h\n",
        "Line" : 375,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "# CVCAM exists only on Windows (check this -- nat)\n",
        "Line" : 381,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# exists only on Windows, thus only there required\n",
        "Line" : 386,
        "CharPositionInLine" : 12
      },
      "41" : {
        "Text" : "# message(\"DBG OPENCV_INCLUDE_DIR=${OPENCV_INCLUDE_DIR}\")\n",
        "Line" : 394,
        "CharPositionInLine" : 4
      },
      "42" : {
        "Text" : "# libcxcore does not seem to be always required (different distribution behave\n\n# differently)\n",
        "Line" : 396,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "#required in win\n",
        "Line" : 401,
        "CharPositionInLine" : 18
      },
      "44" : {
        "Text" : "#################################\n\n## LIBRARIES\n",
        "Line" : 418,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# REQUIRED LIBRARIES\n",
        "Line" : 421,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "#this is required on windows\n",
        "Line" : 434,
        "CharPositionInLine" : 18
      },
      "47" : {
        "Text" : "# CVCAM exists only on Windows (check this -- nat)\n",
        "Line" : 440,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# message(\"DBG OPENCV_LIBRARIES=${OPENCV_LIBRARIES}\")\n",
        "Line" : 451,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "#this is required on windows\n",
        "Line" : 457,
        "CharPositionInLine" : 22
      },
      "50" : {
        "Text" : "# get the link directory for rpath to be used with LINK_DIRECTORIES:\n",
        "Line" : 464,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# display help message\n",
        "Line" : 469,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "##====================================================\n\n## Print message\n\n##----------------------------------------------------\n",
        "Line" : 494,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# make FIND_PACKAGE friendly\n",
        "Line" : 498,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "##====================================================\n",
        "Line" : 507,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "##====================================================\n\n## Backward compatibility\n\n##----------------------------------------------------\n",
        "Line" : 510,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "##====================================================\n",
        "Line" : 521,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# support old variable names\n",
        "Line" : 525,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# Not all version of OpenCV set OpenCV_INCLUDE_DIRS, removing it from required arguments\n\n# Lorenzo Natale March 2011. See notes on top of file.\n\n# find_package_handle_standard_args(OpenCV DEFAULT_MSG OpenCV_LIBRARIES OpenCV_INCLUDE_DIRS)\n",
        "Line" : 529,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Set package properties if FeatureSummary was included\n",
        "Line" : 536,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 60
    },
    "cmake/FindRaspberryPi.cmake" : {
      "ObjectId" : "aca820e5d3107a497299aaf996e52278731b41be",
      "LastModified" : "2016-03-24T10:52:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Example of what we're looking for:\n\n# Hardware      : BCM2709\n\n# Revision      : a01041\n\n# Serial        : 00000000649760c2\n",
        "Line" : 5,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "# Find CPU hardware.\n",
        "Line" : 10,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "#message(\"Hardware: ${RES}\")\n",
        "Line" : 13,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 3
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "f732b1a99f61dcf7a83af58fc1e7ab5293c92343",
      "LastModified" : "2017-06-26T22:18:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make sure the tests don't try to read the default config\n\n# since that would screw up the specific settings we are testing...\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Name of the test suite.\n",
        "Line" : 18,
        "CharPositionInLine" : 23
      },
      "2" : {
        "Text" : "# Name of the test DRIVER source generated.\n",
        "Line" : 19,
        "CharPositionInLine" : 28
      },
      "3" : {
        "Text" : "# List of test files. All TEST_*.c files.\n",
        "Line" : 21,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "#list(APPEND TEST_DRIVERS ${CATCIERGE_TEST_DRIVER}.c)\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Get the TEST_*.c filenames without extension.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Test drivers.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# For openpty in the rfid tests.\n",
        "Line" : 51,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# Coverage make target.\n",
        "Line" : 63,
        "CharPositionInLine" : 38
      },
      "9" : {
        "Text" : "# Name of output directory.\n",
        "Line" : 64,
        "CharPositionInLine" : 18
      },
      "10" : {
        "Text" : "# Name of test runner executable.\n",
        "Line" : 65,
        "CharPositionInLine" : 14
      },
      "11" : {
        "Text" : "# Arguments to the test runner above (make test).\n",
        "Line" : 66,
        "CharPositionInLine" : 15
      },
      "12" : {
        "Text" : "# cmake --help-policy CMP0053 why we need to do this.\n",
        "Line" : 78,
        "CharPositionInLine" : 44
      },
      "13" : {
        "Text" : "# Add a test with the filename we just got\n\n# And call the driver with the test as an argument.\n",
        "Line" : 100,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# TODO: This is hard coded to bin/Debug for now... Possible fix:\n\n# http://stackoverflow.com/questions/9467510/how-to-pass-ctest-configuration-type-using-add-test-in-cmake\n",
        "Line" : 104,
        "CharPositionInLine" : 3
      },
      "15" : {
        "Text" : "# No memcheck.\n",
        "Line" : 111,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 16
    }
  },
  "FileTypes" : {
    "CMAKE" : 9
  },
  "ElapsedTime" : 789
}