{
  "Repository" : "4439661",
  "Revision" : "HEAD",
  "ObjectId" : "b0d92282460bfeb4e8978cde4f224b8ef7ad012e",
  "CommitTime" : "2016-11-24T16:06:43Z",
  "Files" : {
    "3dmmRendererGUI/CMakeLists.txt" : {
      "ObjectId" : "e9c64c31e054587281188debf0af5b215ded703e",
      "LastModified" : "2014-07-25T14:59:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find dependencies:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source and header files:\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make the library\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make the app depend on the libraries\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "CMakeLists.txt" : {
      "ObjectId" : "efec89601c4ee6b7d40edb03c6b02f997f770fed",
      "LastModified" : "2016-10-06T16:40:18Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# g++ needs a compiler flag to use the (experimental) C++11 support\n\n# TODO: * We could test for VS/gcc/unsupported compilers and warn\n\n#       * This check doesn't interfere with the compilation on windows, but is not necessary there.\n\n#       * We should stop and throw an error if we're on gcc and no c++11 support is found\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# All the options for building the library. Can be changed on the command-line or in initial_cache.cmake.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# not used yet\n",
        "Line" : 27,
        "CharPositionInLine" : 114
      },
      "3" : {
        "Text" : "# Core libraries:\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Text logging\n",
        "Line" : 32,
        "CharPositionInLine" : 31
      },
      "5" : {
        "Text" : "# Image logging\n",
        "Line" : 33,
        "CharPositionInLine" : 35
      },
      "6" : {
        "Text" : "# Input-library for cameras, Kinect and hard-drive images.\n",
        "Line" : 35,
        "CharPositionInLine" : 31
      },
      "7" : {
        "Text" : "# Image pyramids, patch extraction, feature transformation\n\n# Classification and regression library\n",
        "Line" : 36,
        "CharPositionInLine" : 37
      },
      "8" : {
        "Text" : "# libSVM (support vector classification and regression)\n",
        "Line" : 38,
        "CharPositionInLine" : 28
      },
      "9" : {
        "Text" : "# liblinear (linear classification with SVM and regression)\n",
        "Line" : 40,
        "CharPositionInLine" : 32
      },
      "10" : {
        "Text" : "# Sliding-window detection, Skin detection (Note: Do we use it anymore? Yes, Condensation depends on it)\n",
        "Line" : 43,
        "CharPositionInLine" : 33
      },
      "11" : {
        "Text" : "# Condensation tracking (particle filter)\n",
        "Line" : 44,
        "CharPositionInLine" : 35
      },
      "12" : {
        "Text" : "# Mesh and Vertex classes. (And, currently not working so great: A software renderer to render vertices and 3D-meshes)\n",
        "Line" : 46,
        "CharPositionInLine" : 31
      },
      "13" : {
        "Text" : "# PCA- and 3D Morphable Face Model classes\n",
        "Line" : 47,
        "CharPositionInLine" : 37
      },
      "14" : {
        "Text" : "# Camera (Pose) estimation and shape-fitting\n",
        "Line" : 48,
        "CharPositionInLine" : 31
      },
      "15" : {
        "Text" : "# A non-parametric model for landmark detection. Uses the supervised descent method.\n",
        "Line" : 49,
        "CharPositionInLine" : 39
      },
      "16" : {
        "Text" : "# Utility library for face recognition experiments, to work with databases, face-record, etc.\n",
        "Line" : 50,
        "CharPositionInLine" : 37
      },
      "17" : {
        "Text" : "# Tracking apps:\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Benchmark app for feature extractors and classifiers in a tracking-like online learning scenario.\n",
        "Line" : 53,
        "CharPositionInLine" : 33
      },
      "19" : {
        "Text" : "# Benchmark app for adaptive condensation tracking.\n",
        "Line" : 54,
        "CharPositionInLine" : 39
      },
      "20" : {
        "Text" : "# Face tracking app (no adaptation to target).\n",
        "Line" : 55,
        "CharPositionInLine" : 35
      },
      "21" : {
        "Text" : "# Adaptive tracking app.\n",
        "Line" : 56,
        "CharPositionInLine" : 38
      },
      "22" : {
        "Text" : "# Old adaptive tracking app.\n",
        "Line" : 57,
        "CharPositionInLine" : 47
      },
      "23" : {
        "Text" : "# Adaptive head tracking app.\n",
        "Line" : 58,
        "CharPositionInLine" : 35
      },
      "24" : {
        "Text" : "# App for playing videos, showing landmarks and storing videos.\n",
        "Line" : 59,
        "CharPositionInLine" : 34
      },
      "25" : {
        "Text" : "# Detector training apps:\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Training app for cell-based detectors (aggregated channel features).\n",
        "Line" : 62,
        "CharPositionInLine" : 38
      },
      "27" : {
        "Text" : "# Face-detection apps:\n\n#add_subdirectory(ffpDetectApp)\t\t\t# The classic MR-style face-detect app (4 stages, SvmOeWvmOe). (Note: Check if it still works)\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Face- and landmark detection apps:\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Detect faces and validate them using given ground-truth.\n",
        "Line" : 68,
        "CharPositionInLine" : 43
      },
      "30" : {
        "Text" : "# Run the SDM landmark detection on one or several images, the input is either images (V&J will be run) or images & faceboxes.\n",
        "Line" : 69,
        "CharPositionInLine" : 36
      },
      "31" : {
        "Text" : "# Run the SDM landmark detection on just one image. Version without libImageIO. (well, libSupervisedDescentModel has a dependency on libImageIO now, but we could easily get rid of that with a CMake option)\n",
        "Line" : 70,
        "CharPositionInLine" : 45
      },
      "32" : {
        "Text" : "# Training of Supervised Descent Method landmark detection models\n",
        "Line" : 71,
        "CharPositionInLine" : 32
      },
      "33" : {
        "Text" : "# 3DMM fitting:\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Experimental command-line fitting app using the software renderer.\n",
        "Line" : 74,
        "CharPositionInLine" : 27
      },
      "35" : {
        "Text" : "# App to render fitting results\n",
        "Line" : 75,
        "CharPositionInLine" : 34
      },
      "36" : {
        "Text" : "# Experimental Fitting-app using the Software Renderer (for one image)\n",
        "Line" : 76,
        "CharPositionInLine" : 30
      },
      "37" : {
        "Text" : "# Tools for fitting and model-rendering (e.g. compare isomaps)\n",
        "Line" : 77,
        "CharPositionInLine" : 31
      },
      "38" : {
        "Text" : "# Tools:\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Simple app to read landmarks and images and display them\n\n# Simple app to convert landmarks from one format into another\n\n# Read detected and ground-truth landmarks and perform an evaluation.\n",
        "Line" : 80,
        "CharPositionInLine" : 37
      },
      "40" : {
        "Text" : "# Face-recognition (does not work because of hardcoded dependencies on proprietary software):\n\n#add_subdirectory(facerecognitionTools) # Tools (e.g. create probe/gallery image-lists)\n\n#add_subdirectory(frRunCogExp)\t\t# App for doing face recognition tests with a gallery and probe images\n\n#add_subdirectory(frDbTool)\t\t# App for managing (creating and populating) the sqlite-database used for face-recognition experiments\n\n#add_subdirectory(frDbExp)\t\t# App for doing experiments with the face recognition scores in the database\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# ============================================================================\n\n# Experimental, non-working or deprecated:\n\n#add_subdirectory(sdmTracking)\t\t\t# Experimental app that does tracking using an SDM model.\n\n#add_subdirectory(generateSyntheticLandmarkDataKlaus)\t# An app specifically created for the task of generating synthetic landmark data from random faces from the 3DMM.\n\n#add_subdirectory(softwareRendererTestApp) # Contains a QOpenGL and SW-renderer and was used to compare both, including shape-fitting.\n\n#add_subdirectory(3dmmRendererGUI)\t\t# An interactive GUI for rendering 3D-meshes, and if it's a morphable model, modify the principal components\n\n#add_subdirectory(ffpDetectAppExp)\t\t# Old experimental playground for FFD with the 3DMM/POSIT. It's deprecated (uses old code from libShapeModels). Used to generate the results for the FDDB benchmark.\n\n#add_subdirectory(patchConverter)\t# Converts patches (in .txt format) to other feature spaces (e.g. gray to WHI)\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 42
    },
    "DetectorTrainingApp/CMakeLists.txt" : {
      "ObjectId" : "8ea1f77de3642e3e8c402c6337fdf7267579362b",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find dependencies\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add dependencies\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# make executable\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "VideoPlayerApp/CMakeLists.txt" : {
      "ObjectId" : "409b6365667ac10b032fac2bbe855349e78bbdaf",
      "LastModified" : "2014-07-25T14:59:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find dependencies\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include Microsoft Kinect SDK (Windows)\n",
        "Line" : 15,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# source and header files\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add dependencies\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# make executable\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "adaptiveTrackingApp/CMakeLists.txt" : {
      "ObjectId" : "48579219a3851f768661aea3f15b1fa204ea7652",
      "LastModified" : "2014-07-25T14:59:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find dependencies\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include Microsoft Kinect SDK (Windows)\n",
        "Line" : 15,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# source and header files\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add dependencies\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# make executable\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "benchmarkApp/CMakeLists.txt" : {
      "ObjectId" : "071266ce4b53b21b9bcde5a3a26cd6cb5dd5fdd4",
      "LastModified" : "2014-07-25T14:59:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# my own variable, not cmake's\n",
        "Line" : 1,
        "CharPositionInLine" : 36
      },
      "1" : {
        "Text" : "# find dependencies\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include Microsoft Kinect SDK (Windows)\n",
        "Line" : 15,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# source and header files\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add dependencies\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# make executable\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/FindEigen3.cmake" : {
      "ObjectId" : "9c546a05d859b18c49554d7ee7221cc486b7760e",
      "LastModified" : "2014-02-11T09:53:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD license.\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/FindKinectSDK.cmake" : {
      "ObjectId" : "22b4ccda1cf051c7c2f60de08eb4d5170345a871",
      "LastModified" : "2014-02-11T09:53:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SET(KinectSDK_ROOT_DIR \"c:/Program Files/Microsoft SDKs/Kinect/v1.0/\")\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 64bit build\n",
        "Line" : 5,
        "CharPositionInLine" : 32
      },
      "2" : {
        "Text" : "####################   Macro   #######################\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##################### Checking #######################\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#CHECK_FILES(KinectSDK_DLLS KinectSDK_ROOT_DIR)\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "cmake/FindMATLAB.cmake" : {
      "ObjectId" : "905439db0872f95d373bfc401eba1d0ac5a654d1",
      "LastModified" : "2014-02-11T09:53:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - this module looks for Matlab\n\n# Defines:\n\n#  MATLAB_INCLUDE_DIR: include path for mex.h, engine.h\n\n#  MATLAB_LIBRARIES:   required libraries: libmex, etc\n\n#  MATLAB_MEX_LIBRARY: path to libmex.lib\n\n#  MATLAB_MX_LIBRARY:  path to libmx.lib\n\n#  MATLAB_MAT_LIBRARY:  path to libmat.lib # added\n\n#  MATLAB_ENG_LIBRARY: path to libeng.lib\n\n#  MATLAB_ROOT: path to Matlab's root directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file is part of Gerardus\n\n#\n\n# This is a derivative work of file FindMatlab.cmake released with\n\n# CMake v2.8, because the original seems to be a bit outdated and\n\n# doesn't work with my Windows XP and Visual Studio 10 install\n\n#\n\n# (Note that the original file does work for Ubuntu Natty)\n\n#\n\n# Author: Ramon Casero <rcasero@gmail.com>, Tom Doel\n\n# Version: 0.2.3\n\n# $Rev$\n\n# $Date$\n\n#\n\n# The original file was copied from an Ubuntu Linux install\n\n# /usr/share/cmake-2.8/Modules/FindMatlab.cmake\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Search for a version of Matlab available, starting from the most modern one to older versions\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Directory name depending on whether the Windows architecture is 32\n\n# bit or 64 bit\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Note: For some weird reason this variable is undefined in my system...\n",
        "Line" : 58,
        "CharPositionInLine" : 29
      },
      "6" : {
        "Text" : "# Folder where the MEX libraries are, depending of the Windows compiler\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Assume people are generally using Visual Studio 7.1,\n\n# if using 7.0 need to link to: ../extern/lib/${WINDIR}/microsoft/msvc70\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# SET(MATLAB_LIBRARIES_DIR \"${MATLAB_ROOT}/extern/lib/${WINDIR}/microsoft/msvc70\")\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Assume people are generally using Borland 5.4,\n\n# if using 7.0 need to link to: ../extern/lib/${WINDIR}/microsoft/msvc70\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# SET(MATLAB_LIBRARIES_DIR \"${MATLAB_ROOT}/extern/lib/${WINDIR}/microsoft/bcc50\")\n\n# SET(MATLAB_LIBRARIES_DIR \"${MATLAB_ROOT}/extern/lib/${WINDIR}/microsoft/bcc51\")\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# If the compiler is Visual Studio, but not any of the specific\n\n# versions above, we try our luck with the microsoft directory\n",
        "Line" : 83,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Get paths to the Matlab MEX libraries\n",
        "Line" : 90,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Get path to the include directory\n",
        "Line" : 108,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# get path to the Matlab root directory\n",
        "Line" : 118,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Check if this is a Mac\n",
        "Line" : 130,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# If this is a Mac and the attempts to find MATLAB_ROOT have so far failed, \n\n# we look in the applications folder\n",
        "Line" : 135,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Search for a version of Matlab available, starting from the most modern one to older versions\n",
        "Line" : 139,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "# Get path to the MEX libraries\n",
        "Line" : 156,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "#COMMAND find \"${MATLAB_ROOT}/extern/lib\" -name libmex${LIBRARY_EXTENSION} # Peter\n",
        "Line" : 158,
        "CharPositionInLine" : 4
      },
      "20" : {
        "Text" : "# Standard\n",
        "Line" : 159,
        "CharPositionInLine" : 68
      },
      "21" : {
        "Text" : "#COMMAND find \"${MATLAB_ROOT}/extern/lib\" -name libmx${LIBRARY_EXTENSION} # Peter\n",
        "Line" : 164,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Standard\n",
        "Line" : 165,
        "CharPositionInLine" : 67
      },
      "23" : {
        "Text" : "#COMMAND find \"${MATLAB_ROOT}/extern/lib\" -name libmat${LIBRARY_EXTENSION} # Peter\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Standard\n",
        "Line" : 171,
        "CharPositionInLine" : 68
      },
      "25" : {
        "Text" : "#COMMAND find \"${MATLAB_ROOT}/extern/lib\" -name libeng${LIBRARY_EXTENSION} # Peter\n",
        "Line" : 176,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "# Standard\n",
        "Line" : 177,
        "CharPositionInLine" : 68
      },
      "27" : {
        "Text" : "# Get path to the include directory\n",
        "Line" : 182,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# This is common to UNIX and Win32:\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29
    },
    "detect-and-correct-faces/CMakeLists.txt" : {
      "ObjectId" : "e483b526e476459b72a46ef80b1d985472891be6",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find dependencies:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source and header files:\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make the app depend on the libraries\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "detect-landmarks/CMakeLists.txt" : {
      "ObjectId" : "d171902054d9f6ec14f0300228d11be09491cbc5",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find dependencies:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source and header files:\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make the app depend on the libraries\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "evaluate-landmarks/CMakeLists.txt" : {
      "ObjectId" : "10dab4649e639dd33203a272bb8133e8c548f2b7",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find dependencies:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source and header files:\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make the app depend on the libraries\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "faceTrackingApp/CMakeLists.txt" : {
      "ObjectId" : "c8d9f1f27cfbf8d386d348649c4aae9db0134626",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find dependencies\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include Microsoft Kinect SDK (Windows)\n",
        "Line" : 15,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# source and header files\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add dependencies\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# make executable\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "facerecognitionTools/CMakeLists.txt" : {
      "ObjectId" : "4cd68c4ad274fa4ca28b8887e61f4e26c24bb683",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(SUBPROJECT_NAME facerecognitionTools)\n\n#project(${SUBPROJECT_NAME})\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#message(STATUS \"=== Configuring ${SUBPROJECT_NAME} ===\")\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n#\n",
        "Line" : 6,
        "CharPositionInLine" : 28
      },
      "3" : {
        "Text" : "# Takes a sigset and a matching-config and generates a matchlist that can be used to run matching engines.\n",
        "Line" : 9,
        "CharPositionInLine" : 38
      },
      "4" : {
        "Text" : "# Generate a list of MultiPIE images\n",
        "Line" : 10,
        "CharPositionInLine" : 44
      },
      "5" : {
        "Text" : "# Generate lists of face recognition sets (sigsets) to be used as probe- and gallery sets (i.e. with subject metadata)\n",
        "Line" : 11,
        "CharPositionInLine" : 43
      },
      "6" : {
        "Text" : "# Convert a PaSC xml sigset to our text-format\n",
        "Line" : 12,
        "CharPositionInLine" : 39
      },
      "CommentCount" : 7
    },
    "facerecognitionTools/convert-pasc-sigset/CMakeLists.txt" : {
      "ObjectId" : "906220a6f5ea86580cee1e45be684636d8a8839c",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find dependencies:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Source and header files:\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make the app depend on the libraries\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "facerecognitionTools/enroll/CMakeLists.txt" : {
      "ObjectId" : "ed6b09b76fb4bd93bd053b9aeba339c0b84e35c2",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find dependencies:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source and header files:\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add the FaceVACS SDK as a dependency:\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make the app depend on the libraries\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "facerecognitionTools/generate-imglist-multipie/CMakeLists.txt" : {
      "ObjectId" : "98daaa41e53da7bbc80e3cfd073cb42a7bb43760",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find dependencies:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Source and header files:\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make the app depend on the libraries\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "facerecognitionTools/generate-matchlist/CMakeLists.txt" : {
      "ObjectId" : "ec2e8890d58e84b48baeadabacf131fef204ba30",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find dependencies:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Source and header files:\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make the app depend on the libraries\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "facerecognitionTools/generate-sigset-multipie/CMakeLists.txt" : {
      "ObjectId" : "dab5eace7eb68bb7d65c8fbc14ad2d2f9f432233",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find dependencies:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Source and header files:\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make the app depend on the libraries\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "facerecognitionTools/match/CMakeLists.txt" : {
      "ObjectId" : "3ce230b9551dc7a2b7007c2f1f9a0051acc0e610",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find dependencies:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source and header files:\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Add the FaceVACS SDK as a dependency:\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make the app depend on the libraries\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "ffpDetectApp/CMakeLists.txt" : {
      "ObjectId" : "02a09a8f6c9a6b94ac3e4cabc7cd13b334106a74",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# my own variable, not cmake's\n",
        "Line" : 1,
        "CharPositionInLine" : 36
      },
      "1" : {
        "Text" : "#OpenCV:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Matlab:\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Boost:\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# others (e.g.): system filesystem\n",
        "Line" : 24,
        "CharPositionInLine" : 81
      },
      "5" : {
        "Text" : "#Source and header files:\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#Make the app depend on the libraries\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "ffpDetectAppExp/CMakeLists.txt" : {
      "ObjectId" : "489756409d13d75494a47a00694a4c1191413212",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# my own variable, not cmake's\n",
        "Line" : 1,
        "CharPositionInLine" : 39
      },
      "1" : {
        "Text" : "#OpenCV:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Matlab:\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Boost:\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# others (e.g.): system filesystem\n",
        "Line" : 24,
        "CharPositionInLine" : 81
      },
      "5" : {
        "Text" : "#Hdf5:\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#FIND_PACKAGE (HDF5 NAMES hdf5) # puts it in Config-mode\n",
        "Line" : 33,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# COMPONENTS doesn't seem to work\n",
        "Line" : 34,
        "CharPositionInLine" : 58
      },
      "8" : {
        "Text" : "# According to hdf5 cmake file, should use *_DIRS, but they don't define it in hdf5-config.cmake. So if we use the Config-mode with NAMES, it isn't set, but it is, when used as in linux.\n",
        "Line" : 35,
        "CharPositionInLine" : 45
      },
      "9" : {
        "Text" : "#FIND_PACKAGE (HDF5 REQUIRED CONFIG) # same\n",
        "Line" : 37,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# works on windows as well but links to dll's instead of lib's...\n",
        "Line" : 38,
        "CharPositionInLine" : 47
      },
      "11" : {
        "Text" : "#Source and header files:\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#Make the app depend on the libraries\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "fitter/CMakeLists.txt" : {
      "ObjectId" : "98af3b81a79dd274edaba00a708f0509584be9ea",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find dependencies:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Todo: ifdef this or rather move to library anyway\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Source and header files:\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make the app depend on the libraries\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "fitterGUI/CMakeLists.txt" : {
      "ObjectId" : "08056d1476e277d144b807e12fcc1b7be477c2d2",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Note: if we compile with Qt, we should enforce CMake 2.8.11\n",
        "Line" : 3,
        "CharPositionInLine" : 36
      },
      "1" : {
        "Text" : "# find dependencies:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Todo: ifdef this or rather move to library anyway\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Source and header files:\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Make the app depend on the libraries\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "fittingRenderer/CMakeLists.txt" : {
      "ObjectId" : "a11e410e96aaf1f43c35b57ed1c1d3dda0a8ed25",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find dependencies:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Todo: ifdef this or rather move to library anyway\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Source and header files:\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make the app depend on the libraries\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "fittingTools/CMakeLists.txt" : {
      "ObjectId" : "4855091c42ff6f0fd215b7cc79d8a1516e81b157",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(SUBPROJECT_NAME fittingTools)\n\n#project(${SUBPROJECT_NAME})\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#message(STATUS \"=== Configuring ${SUBPROJECT_NAME} ===\")\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Compare isomaps (extracted textures)\n",
        "Line" : 6,
        "CharPositionInLine" : 33
      },
      "CommentCount" : 3
    },
    "fittingTools/compareIsomaps/CMakeLists.txt" : {
      "ObjectId" : "603a3a593e597e5f46a5d34ab35b7588176a09fe",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find dependencies:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Source and header files:\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make the app depend on the libraries\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "frDbExp/CMakeLists.txt" : {
      "ObjectId" : "783522583c1ea1e2da893b590f02705f17674d48",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find dependencies:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# others (e.g.): system filesystem\n",
        "Line" : 12,
        "CharPositionInLine" : 81
      },
      "2" : {
        "Text" : "#Source and header files:\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#Make the library\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Make the app depend on the libraries\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "frDbTool/CMakeLists.txt" : {
      "ObjectId" : "76d1a3c4861e126ce29d3f6f300c2f453ba3fa6c",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find dependencies:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source and header files:\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make the library\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Make the app depend on the libraries\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "frRunCogExp/CMakeLists.txt" : {
      "ObjectId" : "8a616ef0e6b548d5587bff59bce1d6b2451e7f50",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find dependencies:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source and header files:\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make the library\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add the FaceVACS SDK as a dependency:\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Make the app depend on the libraries\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "generateSyntheticLandmarkDataKlaus/CMakeLists.txt" : {
      "ObjectId" : "7ea0606289509df21b99039b89441731cfeb74c6",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find dependencies:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Source and header files:\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Make the library\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "headTrackingApp/CMakeLists.txt" : {
      "ObjectId" : "8ab6f874018179ed78acd5a0a4b608ad5d49e539",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find dependencies\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include Microsoft Kinect SDK (Windows)\n",
        "Line" : 15,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# source and header files\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add dependencies\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# make executable\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "landmarkConverter/CMakeLists.txt" : {
      "ObjectId" : "e51ae10b2cfe7dccaf4ad582507c644bb0ca8c58",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find dependencies:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source and header files:\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make the app depend on the libraries\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "landmarkVisualiser/CMakeLists.txt" : {
      "ObjectId" : "d049bfb1753bcce062aac094cd327e124a359ed0",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find dependencies:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source and header files:\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "libClassification/CMakeLists.txt" : {
      "ObjectId" : "0d0d047f7814a35720ade2b0f1f0071c81345685",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# my own variable, not cmake's\n",
        "Line" : 1,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : "# find dependencies\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# source and header files\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add dependencies\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# make library\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "libCondensation/CMakeLists.txt" : {
      "ObjectId" : "7bbe9e537888495805805fde2395cc0edc2a751b",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find dependencies\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# source and header files\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add dependencies\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# make library\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "libDetection/CMakeLists.txt" : {
      "ObjectId" : "8c9ffb438f54533ea895c5f323f0e73b3aca6c0d",
      "LastModified" : "2015-11-13T14:10:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# my own variable, not cmake's\n",
        "Line" : 1,
        "CharPositionInLine" : 33
      },
      "1" : {
        "Text" : "# find dependencies\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# source and header files\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add dependencies\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# make library\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "libFaceRecognition/CMakeLists.txt" : {
      "ObjectId" : "f1c5d64b4090cca2abdea23439e965b86c12e669",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find dependencies\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#find_package(OpenCV 2.4.3 REQUIRED core)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# source and header files\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add dependencies\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#include_directories(${OpenCV_INCLUDE_DIRS})\n\n#include_directories(${ImageIO_SOURCE_DIR}/include)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# make library\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ${OpenCV_LIBS} ImageIO\n",
        "Line" : 39,
        "CharPositionInLine" : 69
      },
      "CommentCount" : 7
    },
    "libFitting/CMakeLists.txt" : {
      "ObjectId" : "528cb75b75a8e2715c99b53b395729dab4360290",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find dependencies\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# source and header files\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add dependencies\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# make library\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "libImageIO/CMakeLists.txt" : {
      "ObjectId" : "02bd37699e9e741c9f00817265814311b2f8009b",
      "LastModified" : "2015-11-13T14:10:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find dependencies\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include Microsoft Kinect SDK (Windows)\n",
        "Line" : 15,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# source and header files\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# make library\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "libImageLogging/CMakeLists.txt" : {
      "ObjectId" : "25c23381643b5e1b049b1f7d76e0e44fcdd1bcd4",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# my own variable, not cmake's\n",
        "Line" : 1,
        "CharPositionInLine" : 36
      },
      "1" : {
        "Text" : "# find dependencies\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# source and header files\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add dependencies\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# make library\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "libImageProcessing/CMakeLists.txt" : {
      "ObjectId" : "4a338b01543009155918d67618988acbe6bf6e4d",
      "LastModified" : "2016-02-26T09:20:52Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# my own variable, not cmake's\n",
        "Line" : 1,
        "CharPositionInLine" : 39
      },
      "1" : {
        "Text" : "# find dependencies\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We only need the headers\n",
        "Line" : 10,
        "CharPositionInLine" : 36
      },
      "3" : {
        "Text" : "# source and header files\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# add dependencies\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# make library\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "libLinear/CMakeLists.txt" : {
      "ObjectId" : "61be529bc55cd7dc7d4380e8817c234cc616179d",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find dependencies\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# source and header files\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add dependencies\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# make library\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "libLogging/CMakeLists.txt" : {
      "ObjectId" : "21c48f3334fdcbd624df74fe54ab54fd7fb2ab43",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find dependencies\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# source and header files\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add dependencies\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# make library\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "libMorphableModel/CMakeLists.txt" : {
      "ObjectId" : "a9a5adb83816c507a2b301191610adb23faae712",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find dependencies\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# COMPONENTS doesn't seem to work. NAMES puts it in Config-mode\n",
        "Line" : 21,
        "CharPositionInLine" : 58
      },
      "2" : {
        "Text" : "# According to hdf5 cmake file, should use *_DIRS, but they don't define it in hdf5-config.cmake. So if we use the Config-mode with NAMES, it isn't set, but it is, when used as in linux.\n",
        "Line" : 22,
        "CharPositionInLine" : 46
      },
      "3" : {
        "Text" : "#find_package (HDF5 REQUIRED CONFIG)\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# works on windows as well but links to dll's instead of lib's...\n",
        "Line" : 25,
        "CharPositionInLine" : 47
      },
      "5" : {
        "Text" : "# source and header files\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# add dependencies\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# make library\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "libRender/CMakeLists.txt" : {
      "ObjectId" : "c028e0a47d46dc30cab440043bf4d86e3551cea0",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find dependencies\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source and header files:\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make the library\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "libSupervisedDescent/CMakeLists.txt" : {
      "ObjectId" : "64a65fa9189af1c8ea1b792b770cff0bd1052f01",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find dependencies:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# source and header files\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add dependencies\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# make library\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "libSvm/CMakeLists.txt" : {
      "ObjectId" : "aaf3405b631926eceb51693ba154e51d5be295d2",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# my own variable, not cmake's\n",
        "Line" : 1,
        "CharPositionInLine" : 27
      },
      "1" : {
        "Text" : "# find dependencies\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# source and header files\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add dependencies\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# make library\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "partiallyAdaptiveTrackingApp/CMakeLists.txt" : {
      "ObjectId" : "2f45be86571c550e84b72ea62518138ce30141f4",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find dependencies\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include Microsoft Kinect SDK (Windows)\n",
        "Line" : 15,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# source and header files\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add dependencies\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# make executable\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "patchConverter/CMakeLists.txt" : {
      "ObjectId" : "57c1d062097fff54d507c4232e69178c98e13380",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# my own variable, not cmake's\n",
        "Line" : 1,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : "#OpenCV:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Boost:\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# others (e.g.): system filesystem\n",
        "Line" : 15,
        "CharPositionInLine" : 81
      },
      "4" : {
        "Text" : "#Source and header files:\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#Make the app depend on the libraries\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "sdmSimpleLandmarkDetection/CMakeLists.txt" : {
      "ObjectId" : "7b97292bfa0d0b9aa1678b086743b68d67a02982",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find dependencies:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source and header files:\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# because SupervisedDescent requires it at the moment\n",
        "Line" : 34,
        "CharPositionInLine" : 51
      },
      "3" : {
        "Text" : "# Make the app depend on the libraries\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "sdmTracking/CMakeLists.txt" : {
      "ObjectId" : "a639fdd68643623f39cd306f39986394b31af053",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# my own variable, not cmake's\n",
        "Line" : 1,
        "CharPositionInLine" : 35
      },
      "1" : {
        "Text" : "#OpenCV:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Hdf5:\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#FIND_PACKAGE (HDF5 NAMES hdf5) # puts it in Config-mode\n",
        "Line" : 16,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# COMPONENTS doesn't seem to work\n",
        "Line" : 17,
        "CharPositionInLine" : 58
      },
      "5" : {
        "Text" : "# According to hdf5 cmake file, should use *_DIRS, but they don't define it in hdf5-config.cmake. So if we use the Config-mode with NAMES, it isn't set, but it is, when used as in linux.\n",
        "Line" : 18,
        "CharPositionInLine" : 45
      },
      "6" : {
        "Text" : "#FIND_PACKAGE (HDF5 REQUIRED CONFIG) # same\n",
        "Line" : 20,
        "CharPositionInLine" : 1
      },
      "7" : {
        "Text" : "# works on windows as well but links to dll's instead of lib's...\n",
        "Line" : 21,
        "CharPositionInLine" : 47
      },
      "8" : {
        "Text" : "#Matlab:\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#Boost:\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# others (e.g.): system filesystem\n",
        "Line" : 36,
        "CharPositionInLine" : 81
      },
      "11" : {
        "Text" : "#find_path(VLFEAT_INCLUDE_DIR vl/sift.h HINTS \"C:\\\\Users\\\\Patrik\\\\Documents\\\\GitHub\\\\vlfeat\\\\vlfeat-0.9.17\")\n\n#find_library(VLFEAT_LIBRARY NAMES vl HINTS \"C:\\\\Users\\\\Patrik\\\\Documents\\\\GitHub\\\\vlfeat\\\\vlfeat-0.9.17\\\\bin\\\\win64\")\n\n#find_package_message(VLFEAT \"VLFEAT: ${VLFEAT_LIBRARY}\" \"[${VLFEAT_LIBRARY}][${VLFEAT_INCLUDE_DIR}]\")\n\n#MESSAGE(STATUS \"VLFEAT ${VLFEAT_INCLUDE_DIR}\")\n\n#MESSAGE(STATUS \"VLFEAT ${VLFEAT_LIBRARY}\")\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#Source and header files:\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#include_directories( ${ImageProcessing_SOURCE_DIR}/include )\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#include_directories( ${VLFEAT_INCLUDE_DIR} )\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#Make the app depend on the libraries\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#${VLFEAT_LIBRARY}\n",
        "Line" : 73,
        "CharPositionInLine" : 196
      },
      "CommentCount" : 17
    },
    "sdmTraining/CMakeLists.txt" : {
      "ObjectId" : "2bc84118ac04da09123e8e0c27a84958780d183e",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find dependencies:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Source and header files:\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Make the app depend on the libraries\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "softwareRendererTestApp/CMakeLists.txt" : {
      "ObjectId" : "9ce929f5a3bb0306d01d6b2240479f639b62b338",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find dependencies:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Source and header files:\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#Make the app depend on the libraries\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "trackingBenchmarkApp/CMakeLists.txt" : {
      "ObjectId" : "2da91a54265dbb6b5d8eefe106f706d9100bbd9b",
      "LastModified" : "2014-07-25T16:53:10Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# find dependencies\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Include Microsoft Kinect SDK (Windows)\n",
        "Line" : 15,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# source and header files\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# add dependencies\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# make executable\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    }
  },
  "FileTypes" : {
    "CMAKE" : 55
  },
  "ElapsedTime" : 1476
}