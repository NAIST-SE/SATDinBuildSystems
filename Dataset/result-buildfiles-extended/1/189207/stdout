{
  "Repository" : "189207",
  "Revision" : "HEAD",
  "ObjectId" : "1f17ef869a96c759e2e36528e387e68eec2cbb67",
  "CommitTime" : "2019-04-14T19:18:40Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "f1c29a813835ab00e35ec50ba6d065f047828de0",
      "LastModified" : "2017-12-25T14:19:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# build a CPack driven installer package\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The default source package file name has \"-Source\" at the end, which doesn't match our previous releases\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "FreeBSD/usr/ports/audio/libmt32emu/Makefile" : {
      "ObjectId" : "8e962d68c0a5d78ed3683b22bdc56cb3046cd1fe",
      "LastModified" : "2019-04-14T19:18:40Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# New ports collection makefile for:\tlibmt32emu\n\n# Date created:\t\t2016-10-23\n\n# Whom:\t\t\tsergm <sergm@muntemu.org>\n\n#\n\n# $FreeBSD$\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "FreeBSD/usr/ports/audio/mt32emu_qt/Makefile" : {
      "ObjectId" : "712d0b8b0f280b5a872ff58bc41185c98fcee2d5",
      "LastModified" : "2019-04-14T19:18:40Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# New ports collection makefile for:\tmt32emu-qt\n\n# Date created:\t\t2016-10-23\n\n# Whom:\t\t\tsergm <sergm@muntemu.org>\n\n#\n\n# $FreeBSD$\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#USE_QT4=\tgui imageformats qmake_build moc_build rcc_build uic_build\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "FreeBSD/usr/ports/audio/mt32emu_smf2wav/Makefile" : {
      "ObjectId" : "352fff68e10b10c9a3bdce400acdd1a26c0cbef7",
      "LastModified" : "2019-04-14T19:18:40Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# New ports collection makefile for:\tmt32emu-smf2wav\n\n# Date created:\t\t2016-10-23\n\n# Whom:\t\t\tsergm <sergm@muntemu.org>\n\n#\n\n# $FreeBSD$\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindGLIB2.cmake" : {
      "ObjectId" : "17402047338f2f2cfb15beaaa31c9beaace54e6e",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GLib2\n\n# Once done this will define\n\n#  GLIB2_FOUND - System has GLib2\n\n#  GLIB2_INCLUDE_DIRS - The GLib2 include directory\n\n#  GLIB2_LIBRARIES - Link these to use GLib2\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set GLIB2_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindJACK.cmake" : {
      "ObjectId" : "066e3c941f5baec5a3bf39c86c8bb0fc109cc663",
      "LastModified" : "2011-05-17T22:21:47Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find JACK\n\n# Once done this will define\n\n#  JACK_FOUND - System has JACK\n\n#  JACK_INCLUDE_DIRS - The JACK include directory\n\n#  JACK_LIBRARIES - Link these to use JACK\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set JACK_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindLibSamplerate.cmake" : {
      "ObjectId" : "27909c0b273dfb8cc6b87f88f59e36b436e3db23",
      "LastModified" : "2014-11-02T08:42:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is copyrighted under the BSD-license for buildsystem files of KDE\n\n# copyright 2010, Patrick von Reth <patrick.vonreth@gmail.com>\n\n#\n\n#\n\n# - Try to find the libsamplerate library\n\n# Once done this will define\n\n#\n\n#  LIBSAMPLERATE_FOUND          Set to TRUE if libsamplerate librarys and include directory is found\n\n#  LIBSAMPLERATE_LIBRARY        The libsamplerate librarys\n\n#  LIBSAMPLERATE_INCLUDE_DIR    The libsamplerate include directory\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindLibSoxr.cmake" : {
      "ObjectId" : "e8a0c76b4bb9d5aaed8560260e5b797543e5f78b",
      "LastModified" : "2014-06-30T17:52:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find libsoxr\n\n# Once done this will define\n\n#\n\n# LIBSOXR_FOUND - system has libsoxr\n\n# LIBSOXR_INCLUDE_DIRS - the libsoxr include directory\n\n# LIBSOXR_LIBRARIES - Link these to use libsoxr\n\n# LIBSOXR_DEFINITIONS - Compiler switches required for using libsoxr\n\n#\n\n# Adapted from cmake-modules Google Code project\n\n#\n\n# Copyright (c) 2006 Andreas Schneider <mail@cynapses.org>\n\n#\n\n# (Changes for libsoxr) Copyright (c) 2014 Matthias Kronlachner <m.kronlachner@gmail.com>\n\n#\n\n# Redistribution and use is allowed according to the terms of the New BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# show the LIBSOXR_INCLUDE_DIRS and LIBSOXR_LIBRARIES variables only in the advanced view\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "cmake/Modules/FindMT32EMU.cmake" : {
      "ObjectId" : "f09cc249740d1f3a0bb5782542895c6a3a698319",
      "LastModified" : "2017-02-26T17:40:43Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find mt32emu\n\n# Once done this will define\n\n#  MT32EMU_FOUND - System has mt32emu\n\n#  MT32EMU_INCLUDE_DIRS - The location of the mt32emu include directory\n\n#  MT32EMU_LIBRARIES - The location of the mt32emu library\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set MT32EMU_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindPORTAUDIO.cmake" : {
      "ObjectId" : "4c79ba4f88c9c1407060068fad80a7d6e4d51ce1",
      "LastModified" : "2014-06-30T17:52:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find PortAudio\n\n# Once done this will define\n\n#  PORTAUDIO_FOUND - System has PortAudio\n\n#  PORTAUDIO_INCLUDE_DIRS - The PortAudio include directory\n\n#  PORTAUDIO_LIBRARIES - Link these to use PortAudio\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set PORTAUDIO_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindPulseAudio.cmake" : {
      "ObjectId" : "b9290b078909342d8003fff44fe9ccb8c2472740",
      "LastModified" : "2014-06-30T17:52:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find pulseaudio-2.6\n\n# Once done this will define\n\n#\n\n#  PULSEAUDIO_FOUND - system has pulseaudio\n\n#  PULSEAUDIO_INCLUDE_DIRS - the pulseaudio include directory\n\n#  PULSEAUDIO_LIBRARIES - Link these to use pulseaudio\n\n#  PULSEAUDIO_DEFINITIONS - Compiler switches required for using pulseaudio\n\n#\n\n#  Copyright (c) 2008 Andreas Schneider <mail@cynapses.org>\n\n#  Modified for other libraries by Lasse Kärkkäinen <tronic>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 18,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# show the PULSEAUDIO_INCLUDE_DIRS and PULSEAUDIO_LIBRARIES variables only in the advanced view\n",
        "Line" : 95,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "cmake/Modules/FindQtMobility.cmake" : {
      "ObjectId" : "001bc7c2eb8f875f6c4d95d3e8e8b49e68bf835f",
      "LastModified" : "2014-06-30T17:52:20Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Stolen from pyside-mobility.\n\n# Changed to avoid fatally aborting if not found unless REQUIRED was specified.\n\n# No copyright information was present, so I've copied the notice from another file in the same project:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# This file is part of PySide: Python for Qt\n\n#\n\n# Copyright (C) 2010 Nokia Corporation and/or its subsidiary(-ies).\n\n#\n\n# Contact: PySide team <contact@pyside.org>\n\n#\n\n# This library is free software; you can redistribute it and/or\n\n# modify it under the terms of the GNU Lesser General Public License\n\n# version 2.1 as published by the Free Software Foundation.\n\n#\n\n# This library is distributed in the hope that it will be useful, but\n\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\n# Lesser General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU Lesser General Public\n\n# License along with this library; if not, write to the Free Software\n\n# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n\n# 02110-1301 USA\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#VERSION\n",
        "Line" : 103,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# VersitOrganizer\n",
        "Line" : 177,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# MultimediaKit - it's just 'multimedia' in the .prf file.\n",
        "Line" : 184,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "mt32emu/CMakeLists.txt" : {
      "ObjectId" : "248f576a382ce81ba530e479503b774dbb493001",
      "LastModified" : "2017-12-25T14:19:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Public headers that always need to be installed:\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Public headers used by C++ clients:\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Public headers that support C-compatible and plugin-style API:\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ API type\n",
        "Line" : 98,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# All API types\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# C API type\n",
        "Line" : 120,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Plugin API type\n",
        "Line" : 123,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# Prefer using SOXR if it is available\n",
        "Line" : 174,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Try Samplerate if SOXR is unavailable\n",
        "Line" : 186,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Locations are exported for the benefit of a higher-level CMakeLists.txt.\n\n# This is irrelevant if compiling stand-alone.\n",
        "Line" : 209,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Locations are exported for the benefit of a higher-level CMakeLists.txt.\n\n# These lines are irrelevant if compiling stand-alone.\n",
        "Line" : 259,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# build a CPack driven installer package\n",
        "Line" : 264,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# The default source package file name has \"-Source\" at the end, which doesn't match our previous releases\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "mt32emu_alsadrv/Makefile" : {
      "ObjectId" : "a197064d711e3d89e953c6f7180fb1d4e7dd131d",
      "LastModified" : "2017-03-24T19:27:23Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "mt32emu_qt/CMakeLists.txt" : {
      "ObjectId" : "7e9bd34a235330c9759a5439dd2a9baea4ec93b0",
      "LastModified" : "2019-04-14T12:38:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We could generate PCH file right from the specified header but it turns out awkward to compile within cmake.\n\n# There are various quite complex solutions around to overcome this issue. But it seems to be much easier to just compile\n\n# an empty .cpp file while setting the language to treat it as a header.\n",
        "Line" : 267,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# We also need to exclude generated PCH file from the link phase. Instead of creating another target and synchronising\n\n# a lot of compile properties, we simply compile our empty .cpp file and use the output for linking.\n",
        "Line" : 281,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# build a CPack driven installer package\n",
        "Line" : 334,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The default source package file name has \"-Source\" at the end, which doesn't match our previous releases\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "mt32emu_smf2wav/CMakeLists.txt" : {
      "ObjectId" : "23c4def3bffc7d31828c8d86318e7aff56f33d9b",
      "LastModified" : "2019-04-14T12:38:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# build a CPack driven installer package\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The default source package file name has \"-Source\" at the end, which doesn't match our previous releases\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "mt32emu_smf2wav/libsmf/CMakeLists.txt" : {
      "ObjectId" : "6336b0d04ac0bfb0c0fc3d957b8dec5dcca10a70",
      "LastModified" : "2017-12-25T14:19:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We prefer to link embedded libsmf statically into higher-level projects to avoid version conflicts.\n\n# This option enforces shared library build.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 13,
    "MAKEFILE" : 4
  },
  "ElapsedTime" : 1789
}