{
  "Repository" : "2242959",
  "Revision" : "HEAD",
  "ObjectId" : "4d89b6c98f65db0b08ed7bf5ce223a489f4be77c",
  "CommitTime" : "2018-07-29T06:15:37Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "1d0254c739de4cb562a9e59a005cbb6ab5f0e144",
      "LastModified" : "2018-07-29T06:15:37Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Project Tuf√£o\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Metadata\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Dependencies\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CMake since 3.1 has ability to use particular C/C++ standarts.\n\n# For versions before 3.1 use FindCXX11 module as fallback.\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Debug version of library should have 'd' postfix on Windows\n\n# and '_debug' on Mac OS X\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Configure options\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build info\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Install info\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Targets\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# uninstall target\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# CPack installer\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Testing\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# cmake-modules\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "CTestConfig.cmake" : {
      "ObjectId" : "d93805ab512ac29e269ed307672a57368d44a14d",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## This file should be placed in the root directory of your project.\n\n## Then modify the CMakeLists.txt file in the root directory of your\n\n## project to incorporate the testing dashboard.\n\n##\n\n## # The following are required to submit to the CDash dashboard:\n\n##   ENABLE_TESTING()\n\n##   INCLUDE(CTest)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/FindCXX11.cmake" : {
      "ObjectId" : "7392bd74a15298b802df5bda1db63eabae392cb9",
      "LastModified" : "2015-04-12T15:55:40Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Finds if the compiler has C++11 support\n\n# This module can be used to detect compiler flags for using C++11, and checks\n\n# a small subset of the language.\n\n#\n\n# The following variables are set:\n\n#   CXX11_FLAGS - flags to add to the CXX compiler for C++11 support\n\n#   CXX11_FOUND - true if the compiler supports C++11\n\n#\n\n# TODO: When compilers starts implementing the whole C++11, check the full set\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Gnu and Intel Linux and Max\n",
        "Line" : 15,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#Microsoft Visual Studio, and everything that automatically accepts C++11\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#Intel windows\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#Mac\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "ee521a6ecface0949813c8fd0ccf61a277a6f100",
      "LastModified" : "2013-01-03T00:07:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Configure info\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build info\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Install info\n\n#  html an qch\n",
        "Line" : 25,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#  pdf\n",
        "Line" : 33,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#  man\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "examples/cmake/hello-cmake/CMakeLists.txt" : {
      "ObjectId" : "e93c83c8881e02a90502af90864fdde332a6f87b",
      "LastModified" : "2018-04-19T18:14:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "examples/cmake/hello-cmake/cmake/modules/FindCXX11.cmake" : {
      "ObjectId" : "bb720198d81755124a1ec9ee409cd37110002dc2",
      "LastModified" : "2014-02-27T09:41:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Finds if the compiler has C++11 support\n\n# This module can be used to detect compiler flags for using C++11, and checks\n\n# a small subset of the language.\n\n#\n\n# The following variables are set:\n\n#   CXX11_FLAGS - flags to add to the CXX compiler for C++11 support\n\n#   CXX11_FOUND - true if the compiler supports C++11\n\n#\n\n# TODO: When compilers starts implementing the whole C++11, check the full set\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Gnu and Intel Linux\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#Microsoft Visual Studio, and everything that automatically accepts C++11\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#Intel windows\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "examples/cmake/sample_plugin/CMakeLists.txt" : {
      "ObjectId" : "c51777fd284ca09aca5195e936c86748150d6afa",
      "LastModified" : "2014-02-27T09:41:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################################################################################################\n\n# Project name\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "########### Main global variables ###########\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# We have some custom .cmake scripts not in the official distribution.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add valgrind build options if necessary\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#Where plugins are located\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#######################################################################################################################\n\n# 3rd Party Dependency Stuff\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Tell CMake to run moc when necessary:\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# As moc files are generated in the binary dir, tell CMake to always look for includes there:\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#######################################################################################################################\n\n# Finish configuring compiler / linker settings & flags\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#######################################################################################################################\n\n# Add subdirectories\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# add_subdirectory(test)\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#######################################################################################################################\n\n# enable testing - must be in the top level CMakeLists.txt file\n\n# enable_testing()\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "examples/cmake/sample_plugin/CMakeModules/FindCXX11.cmake" : {
      "ObjectId" : "bb720198d81755124a1ec9ee409cd37110002dc2",
      "LastModified" : "2014-02-27T09:41:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Finds if the compiler has C++11 support\n\n# This module can be used to detect compiler flags for using C++11, and checks\n\n# a small subset of the language.\n\n#\n\n# The following variables are set:\n\n#   CXX11_FLAGS - flags to add to the CXX compiler for C++11 support\n\n#   CXX11_FOUND - true if the compiler supports C++11\n\n#\n\n# TODO: When compilers starts implementing the whole C++11, check the full set\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Gnu and Intel Linux\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#Microsoft Visual Studio, and everything that automatically accepts C++11\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#Intel windows\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "examples/cmake/sample_plugin/CMakeModules/FindMongoDB.cmake" : {
      "ObjectId" : "5a0ef5b8f1dfbfaacbd69057c0c7a3ff98fbd31c",
      "LastModified" : "2014-02-27T09:41:33Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find MongoDB; NOTE: this is specific to warehouse_ros!\n\n#\n\n# Find the MongoDB includes and client library\n\n# This module defines\n\n#\tMongoDB_INCLUDE_DIR, where to find mongo/client/dbclient.h\n\n#\tMongoDB_LIBRARIES, the libraries needed to use MongoDB.\n\n#\tMongoDB_FOUND, If false, do not try to use MongoDB.\n\n#\tMongoDB_EXPOSE_MACROS, If true, mongo_ros should use '#define MONGO_EXPOSE_MACROS'\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/cmake/sample_plugin/plugins/CMakeLists.txt" : {
      "ObjectId" : "b0ded180891cd7143f19564e9764339b490a018c",
      "LastModified" : "2018-04-19T18:14:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################################################################################################\n\n# source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/cmake/sample_plugin/src/CMakeLists.txt" : {
      "ObjectId" : "fe97a0fe778872e7de0af4d0ee7f56effd4a88aa",
      "LastModified" : "2018-04-19T18:14:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#######################################################################################################################\n\n# source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/qmake/hello-session/hello-session.pro" : {
      "ObjectId" : "243f1cd802675229608c3e99ba0d82d9c3f517fb",
      "LastModified" : "2014-02-27T09:41:33Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "examples/qmake/hello-world/hello-world.pro" : {
      "ObjectId" : "70fc8728305f094683a2a86cffda834b8deba38c",
      "LastModified" : "2014-02-27T09:41:33Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "examples/qmake/https-example/https-example.pro" : {
      "ObjectId" : "8993be08de4b7617c40195e1fddab7a6a3a71c5a",
      "LastModified" : "2014-02-27T09:41:33Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "examples/qmake/request-dumper/request-dumper.pro" : {
      "ObjectId" : "2f2e7b3df2868304dc3f2f09221e316d7fc9c287",
      "LastModified" : "2014-02-27T09:41:33Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "examples/qmake/sessionusage/sessionusage.pro" : {
      "ObjectId" : "4c107fb2b485a5965f7a31dbaec5f0fc0ba1526a",
      "LastModified" : "2014-02-27T09:41:33Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "examples/qmake/threads-example/threads-example.pro" : {
      "ObjectId" : "19961f4f1d4e09c71f084a55aef23745104dabd4",
      "LastModified" : "2014-02-27T09:41:33Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "examples/qmake/threads-with-router-example/threads-with-router-example.pro" : {
      "ObjectId" : "d9dc122ae899d4a047b1b1c539a93eedab56e8d0",
      "LastModified" : "2018-04-19T18:14:53Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "examples/qmake/webpost-echo-server/webpost-echo-server.pro" : {
      "ObjectId" : "23e5fcab8b0c4fb3d88a2c3f634830507b734d8f",
      "LastModified" : "2018-04-19T18:14:53Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "examples/qmake/websocket-chat-client/websocket-chat-client.pro" : {
      "ObjectId" : "6ad617f237883deed44cec7dd8f31cd6f75b71e0",
      "LastModified" : "2018-04-19T18:14:53Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------\n\n#\n\n# Project created by QtCreator 2012-09-22T12:02:52\n\n#\n\n#-------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "examples/qmake/websocket-chat/websocket-chat.pro" : {
      "ObjectId" : "fbca3e75cb426aea001214e07aa324195bf3bd30",
      "LastModified" : "2018-04-19T18:14:53Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "include/CMakeLists.txt" : {
      "ObjectId" : "7cc3604ffbb2ff742e80b6d513d659b2199dba91",
      "LastModified" : "2018-04-19T18:14:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Extra include files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "pkg/CMakeLists.txt" : {
      "ObjectId" : "2148a971e654866791867a48b3aaea2a94dad5e2",
      "LastModified" : "2018-04-19T18:14:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build info\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Install info\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "91e619e0f0b4c0191923c3c360b39fe798aa80f0",
      "LastModified" : "2018-04-19T18:14:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#        -Wpedantic\n\n#        -Weffc++\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CXX_STANDARD was introduced in CMake 3.1\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Support relocatable packages. It can be usefull on Windows\n",
        "Line" : 74,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Tests\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Install info\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/tests/CMakeLists.txt" : {
      "ObjectId" : "2ec9fa99085a2dd2637f9b36541f4d6b5982e939",
      "LastModified" : "2018-04-19T18:14:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Tests\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CXX_STANDARD was introduced in CMake 3.1\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "src/tests/httppluginserver/CMakeLists.txt" : {
      "ObjectId" : "ace1c46a8dfdcb424c9ca871a9d1ea088ce764ad",
      "LastModified" : "2018-04-19T18:14:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Source files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build info\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    }
  },
  "FileTypes" : {
    "CMAKE" : 16,
    "QMAKE" : 10
  },
  "ElapsedTime" : 1104
}