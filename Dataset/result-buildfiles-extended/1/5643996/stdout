{
  "Repository" : "5643996",
  "Revision" : "HEAD",
  "ObjectId" : "e91e4533b4fe48946d7275a24ee631f7c7891ff5",
  "CommitTime" : "2018-11-27T06:22:15Z",
  "Files" : {
    "libs/FreeSWITCH/esl/Makefile" : {
      "ObjectId" : "0ab6b18410cb2f4a642d3e7e65ebeba281f9cb59",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#CFLAGS='-D_EVENT_DISABLE_DEBUG_MODE -g -O1' ./configure --disable-shared\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#自动判断32位、64位系统\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-std=gnu++0x\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#-std=gnu++0x\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "libs/apr-1.5.2/CMakeLists.txt" : {
      "ObjectId" : "75f35c7cd5597fb15e4aa04564455abc6564e930",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Licensed to the Apache Software Foundation (ASF) under one or more\n\n# contributor license agreements.  See the NOTICE file distributed with\n\n# this work for additional information regarding copyright ownership.\n\n# The ASF licenses this file to You under the Apache License, Version 2.0\n\n# (the \"License\"); you may not use this file except in compliance with\n\n# the License.  You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n\n# Read README.cmake before using this.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# create 1-or-0 representation of feature tests for apr.h\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Generated .h files are stored in PROJECT_BINARY_DIR, not the\n\n# source tree.\n\n#\n\n# BROKEN: not searching PROJECT_BINARY_DIR first, so you have to\n\n#         manually delete apr.h in PROJECT_SOURCE_DIR/include if\n\n#         you've generated apr.h before using a different build\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# libapr-1 is shared, apr-1 is static\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# libaprapp-1 and aprapp-1 are static\n",
        "Line" : 271,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create a \"check\" target that displays test program output to the console.\n",
        "Line" : 282,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# copy data files to build directory so that we can run programs from there\n",
        "Line" : 285,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# nasty work-around for difficulties adding more than one additional flag\n\n# (they get joined in a bad way behind the scenes)\n",
        "Line" : 323,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# Build all the single-source executable files with no special build\n\n# requirements.\n",
        "Line" : 332,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Add tests for programs that run by themselves with no arguments.\n",
        "Line" : 360,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# testlockperf takes forever on Windows with default counter limit\n",
        "Line" : 370,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# sendfile runs multiple times with different parameters.\n",
        "Line" : 373,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# No test is added for echod+sockperf.  Those will have to be run manually.\n",
        "Line" : 378,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Installation\n",
        "Line" : 382,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Kludges for unexpected dependencies of httpd 2.x, not installed by default\n",
        "Line" : 398,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 15
    },
    "libs/apr-1.5.2/README.cmake" : {
      "ObjectId" : "cfff8ca0d053f89291e83856efd9ffc7b39973b4",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/apr-util-1.5.4/CMakeLists.txt" : {
      "ObjectId" : "871503a3cde0459e987f65b162ef493c3e7c4851",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Licensed to the Apache Software Foundation (ASF) under one or more\n\n# contributor license agreements.  See the NOTICE file distributed with\n\n# this work for additional information regarding copyright ownership.\n\n# The ASF licenses this file to You under the Apache License, Version 2.0\n\n# (the \"License\"); you may not use this file except in compliance with\n\n# the License.  You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n#\n\n# Read README.cmake before using this.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# create 1-or-0 representation of feature tests for apu.h\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# not yet implemented\n",
        "Line" : 51,
        "CharPositionInLine" : 29
      },
      "3" : {
        "Text" : "# \"COPYONLY\" just because anything else isn't implemented ;)\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Generated .h files are stored in PROJECT_BINARY_DIR, not the\n\n# source tree.\n\n#\n\n# BROKEN: not searching PROJECT_BINARY_DIR first, so you have to\n\n#         manually delete apu.h in PROJECT_SOURCE_DIR/include if\n\n#         you've generated apu.h before using a different build\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# apu_config.h and apu_select_dbm.h are private\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Note: The WINNT definition on some targets is used only by libaprutil.rc.\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# static expat (not installed)\n",
        "Line" : 225,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# libaprutil-1 is shared, aprutil-1 is static\n",
        "Line" : 229,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Create a \"check\" target that displays test program output to the console.\n",
        "Line" : 280,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# copy data files to build directory so that we can run programs from there\n",
        "Line" : 283,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# dbd is run multiple times with different parameters.\n",
        "Line" : 311,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "# Installation\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "libs/apr-util-1.5.4/README.cmake" : {
      "ObjectId" : "a46327126ff754652fb4b14111d422bc29152b80",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0,
      "Errorlog" : "line 58:28 token recognition error at: '\\p'\nline 58:36 token recognition error at: '\\p'\nline 58:44 token recognition error at: '\\l'\nline 58:51 token recognition error at: '\\p'\nline 58:59 token recognition error at: '\\p'\nline 58:67 token recognition error at: '\\l'\nline 60:28 token recognition error at: '\\p'\nline 60:36 token recognition error at: '\\p'\nline 60:44 token recognition error at: '\\i'\nline 60:55 token recognition error at: '\\p'\nline 60:63 token recognition error at: '\\p'\nline 60:71 token recognition error at: '\\i'\n"
    },
    "libs/fsm/Makefile" : {
      "ObjectId" : "2ec5c0c0d71faa857f664b615e6da6bfe7c2cc4e",
      "LastModified" : "2018-09-20T04:21:55Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#请修改以下内容以确定相关内容\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#项目类型(可执行程序exe,静态库lib,动态库dll,so)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#项目的版本号\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#源文件所在路径 （目录列表）\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#头文件路径(-I目录)\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#生成的版本文件名称\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#其他的链接路径，(-L目录)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#工程的宏定义\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# debug 工程的宏定义\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# release 工程的宏定义\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#工程需要链接的其他动态库\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# debug 工程需要链接的其他静态库文件列表\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# release 工程需要链接的其他静态库文件列表\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#项目编译输出路径\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#项目输出文件主名称(不带后缀）\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "######################################################################\n\n#--------------以下内容不需要修改------------------------------------#\n\n######################################################################\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#自动判断32位、64位系统\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#-std=gnu++0x\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#-std=gnu++0x\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#编译用的编译器参数\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#链接用的参数\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#PROJECT源文件列表 \n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#@-cd ../../log4cplus-1.1.3-rc2 && make clean\n",
        "Line" : 116,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "#@-cd ../../log4cplus-1.1.3-rc2 && make clean\n",
        "Line" : 123,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 24
    },
    "libs/jsoncpp-1.8.4/CMakeLists.txt" : {
      "ObjectId" : "ddcc1656464e4cd4a5b3cc398eac5ae443ef30b4",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# vim: et ts=4 sts=4 sw=4 tw=0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Ensures that CMAKE_BUILD_TYPE is visible in cmake-gui on Unix\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Enable runtime search path support for dynamic libraries on OSX\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Adhere to GNU filesystem layout conventions\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set variable named ${VAR_NAME} to value ${VALUE}\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Extract major, minor, patch from version text\n\n# Parse a version string \"X.Y.Z\" and outputs\n\n# version parts in ${OUPUT_PREFIX}_MAJOR, _MINOR, _PATCH.\n\n# If parse succeeds then ${OUPUT_PREFIX}_FOUND is TRUE.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Read out version from \"version\" file\n\n#FILE(STRINGS \"version\" JSONCPP_VERSION)\n\n#SET( JSONCPP_VERSION_MAJOR X )\n\n#SET( JSONCPP_VERSION_MINOR Y )\n\n#SET( JSONCPP_VERSION_PATCH Z )\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#IF(NOT JSONCPP_VERSION_FOUND)\n\n#    MESSAGE(FATAL_ERROR \"Failed to parse version string properly. Expect X.Y.Z\")\n\n#ENDIF(NOT JSONCPP_VERSION_FOUND)\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# File version.h is only regenerated on CMake configure step\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Only enabled in debug because some old versions of VS STL generate\n\n# warnings when compiled in release configuration.\n",
        "Line" : 81,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Include our configuration header\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Only enabled in debug because some old versions of VS STL generate\n\n# unreachable code warning when compiled in release configuration.\n",
        "Line" : 96,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Require C++11 support, prefer ISO C++ over GNU variants,\n\n# as relying solely on ISO C++ is more portable.\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# using regular Clang or AppleClang\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# using GCC\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# not yet ready for -Wsign-conversion\n",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# using Intel compiler\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# Build the different applications\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#install the includes\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "libs/jsoncpp-1.8.4/include/CMakeLists.txt" : {
      "ObjectId" : "cc866f173d736930233b331c964d3d0f5edf77e6",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/jsoncpp-1.8.4/src/CMakeLists.txt" : {
      "ObjectId" : "ca8ac15e28a882513d24b05eb2b23ac6f8ba752b",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/jsoncpp-1.8.4/src/jsontestrunner/CMakeLists.txt" : {
      "ObjectId" : "20d01e6268813808476e5696db2054e95cb37628",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Run end to end parser/writer tests\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "libs/jsoncpp-1.8.4/src/lib_json/CMakeLists.txt" : {
      "ObjectId" : "9730e9ace646f9890958e896eddfa07ce1c12f41",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Get compiler version.\n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "#-Werror=* was introduced -after- GCC 4.1.2\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# The \"LANGUAGE CXX\" parameter is not supported in CMake versions below 3,\n\n# so the C compiler and header has to be used.\n",
        "Line" : 21,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Install instructions for this target\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set library's runtime search path on OSX\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# avoid name clashes on windows as the shared import lib is also named jsoncpp.lib\n",
        "Line" : 98,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "libs/jsoncpp-1.8.4/src/test_lib_json/CMakeLists.txt" : {
      "ObjectId" : "7000264a71d0d1c4cad6aa111452456eff4c565b",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# vim: et ts=4 sts=4 sw=4 tw=0\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# another way to solve issue #90\n\n#set_target_properties(jsoncpp_test PROPERTIES COMPILE_FLAGS -ffloat-store)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Run unit tests in post-build\n\n# (default cmake workflow hides away the test result into a file, resulting in poor dev workflow?!?)\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# First, copy the shared lib, for Microsoft.\n\n# Then, run the test executable.\n",
        "Line" : 24,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Just run the test executable.\n",
        "Line" : 31,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 5
    },
    "libs/libevent-2.1.8-stable/Makefile.am" : {
      "ObjectId" : "c8354c32b10b5decb99cbc8fb53d331a65c8252e",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# Makefile.am for libevent\n\n# Copyright 2000-2007 Niels Provos\n\n# Copyright 2007-2012 Niels Provos and Nick Mathewson\n\n#\n\n# See LICENSE for copying information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 'foreign' means that we're not enforcing GNU package rules strictly.\n\n# '1.9' means that we need automake 1.9 or later (and we do).\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This is the \"Release\" of the Libevent ABI.  It takes precedence over\n\n# the VERSION_INFO, so that two versions of Libevent with the same\n\n# \"Release\" are never binary-compatible.\n\n#\n\n# This number incremented once for the 2.0 release candidate, and\n\n# will increment for each series until we revise our interfaces enough\n\n# that we can seriously expect ABI compatibility between series.\n\n#\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This is the version info for the libevent binary API.  It has three\n\n# numbers:\n\n#   Current  -- the number of the binary API that we're implementing\n\n#   Revision -- which iteration of the implementation of the binary\n\n#               API are we supplying?\n\n#   Age      -- How many previous binary API versions do we also\n\n#               support?\n\n#\n\n# To increment a VERSION_INFO (current:revision:age):\n\n#    If the ABI didn't change:\n\n#        Return (current:revision+1:age)\n\n#    If the ABI changed, but it's backward-compatible:\n\n#        Return (current+1:0:age+1)\n\n#    If the ABI changed and it isn't backward-compatible:\n\n#        Return (current+1:0:0)\n\n#\n\n# Once an RC is out, DO NOT MAKE ANY ABI-BREAKING CHANGES IN THAT SERIES\n\n# UNLESS YOU REALLY REALLY HAVE TO.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# History:          RELEASE    VERSION_INFO\n\n#  2.0.1-alpha --     2.0        1:0:0\n\n#  2.0.2-alpha --                2:0:0\n\n#  2.0.3-alpha --                2:0:0  (should have incremented; didn't.)\n\n#  2.0.4-alpha --                3:0:0\n\n#  2.0.5-beta  --                4:0:0\n\n#  2.0.6-rc    --     2.0        2:0:0\n\n#  2.0.7-rc    --     2.0        3:0:1\n\n#  2.0.8-rc    --     2.0        4:0:2\n\n#  2.0.9-rc    --     2.0        5:0:0 (ABI changed slightly)\n\n#  2.0.10-stable--    2.0        5:1:0 (No ABI change)\n\n#  2.0.11-stable--    2.0        6:0:1 (ABI changed, backward-compatible)\n\n#  2.0.12-stable--    2.0        6:1:1 (No ABI change)\n\n#  2.0.13-stable--    2.0        6:2:1 (No ABI change)\n\n#  2.0.14-stable--    2.0        6:3:1 (No ABI change)\n\n#  2.0.15-stable--    2.0        6:3:1 (Forgot to update :( )\n\n#  2.0.16-stable--    2.0        6:4:1 (No ABI change)\n\n#  2.0.17-stable--    2.0        6:5:1 (No ABI change)\n\n#  2.0.18-stable--    2.0        6:6:1 (No ABI change)\n\n#  2.0.19-stable--    2.0        6:7:1 (No ABI change)\n\n#  2.0.20-stable--    2.0        6:8:1 (No ABI change)\n\n#  2.0.21-stable--    2.0        6:9:1 (No ABI change)\n\n#\n\n# For Libevent 2.1:\n\n#  2.1.1-alpha --     2.1        1:0:0\n\n#  2.1.2-alpha --     2.1        1:0:0 (should have been 2:0:1)\n\n#  2.1.3-alpha --     2.1        3:0:0 (ABI changed slightly)\n\n#  2.1.4-alpha --     2.1        4:0:0 (ABI changed slightly)\n\n#  2.1.5-beta  --     2.1        5:0:0 (ABI changed slightly)\n\n#  2.1.6-beta  --     2.1        6:0:0 (ABI changed slightly)\n\n#  2.1.7-beta  --     2.1        6:1:0 (ABI changed slightly)\n\n#  2.1.8-stable--     2.1        6:2:0 (ABI changed slightly)\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ABI version history for this package effectively restarts every time\n\n# we change RELEASE.  Version 1.4.x had RELEASE of 1.4.\n\n#\n\n# Ideally, we would not be using RELEASE at all; instead we could just\n\n# use the VERSION_INFO field to label our backward-incompatible ABI\n\n# changes, and those would be few and far between.  Unfortunately,\n\n# Libevent still exposes far too many volatile structures in its\n\n# headers, so we pretty much have to assume that most development\n\n# series will break ABI compatibility.  For now, it's simplest just to\n\n# keep incrementing the RELEASE between series and resetting VERSION_INFO.\n\n#\n\n# Eventually, when we get to the point where the structures in the\n\n# headers are all non-changing (or not there at all!), we can shift to\n\n# a more normal worldview where backward-incompatible ABI changes are\n\n# nice and rare.  For the next couple of years, though, 'struct event'\n\n# is user-visible, and so we can pretty much guarantee that release\n\n# series won't be binary-compatible.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# These sources are conditionally added by configure.ac or conditionally\n\n# included from other files.\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "libs/libwebsockets-2.2.1/CMakeLists.txt" : {
      "ObjectId" : "be757da0b4f4b8af94ada55dd6a3aca92f150205",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the current Git hash.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# this implies no pthreads in the lib\n",
        "Line" : 158,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# set(LWS_WITHOUT_CLIENT ON)\n",
        "Line" : 170,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# this implies no pthreads in the lib\n",
        "Line" : 176,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# this implies no pthreads in the lib\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Allow the user to override installation directories.\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Allow the user to use the old CyaSSL options/library in stead of wolfSSL\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Copy CyaSSL options to the wolfSSL options\n",
        "Line" : 210,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# FIXME: This must be runtime-only option.\n\n# The base dir where the test-apps look for the SSL certs.\n",
        "Line" : 316,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Check for different inline keyword versions.\n",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Put the libraries and binaries that get built into directories at the\n\n# top of the build tree rather than in hard-to-find leaf directories. \n",
        "Line" : 423,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Put absolute path of dynamic libraries into the object code. Some\n\n# architectures, notably Mac OS X, need this.\n",
        "Line" : 431,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# TODO: These can also be tested to see whether they actually work...\n",
        "Line" : 496,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# These don't work Cross...\n\n#CHECK_TYPE_SIZE(pid_t PID_T_SIZE)\n\n#CHECK_TYPE_SIZE(size_t SIZE_T_SIZE)\n\n#CHECK_TYPE_SIZE(\"void *\" LWS_SIZEOFPTR LANGUAGE C)\n",
        "Line" : 502,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Turn off stupid microsoft security warnings.\n",
        "Line" : 525,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# Group headers and sources.\n\n# Some IDEs use this for nicer file structure.\n",
        "Line" : 531,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# select the active platform files\n",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Add helper files for Windows.\n",
        "Line" : 671,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Unix.\n",
        "Line" : 687,
        "CharPositionInLine" : 1
      },
      "19" : {
        "Text" : "# jeez clang understands -pthread but dies if he sees it at link time!\n\n# http://stackoverflow.com/questions/2391194/what-is-gs-pthread-equiv-in-clang\n",
        "Line" : 716,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# otherwise osx blows a bunch of openssl deprecated api errors\n",
        "Line" : 723,
        "CharPositionInLine" : 1
      },
      "21" : {
        "Text" : "#\n\n# Create the lib.\n\n#\n",
        "Line" : 731,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Windows uses the same .lib ending for static libraries and shared\n\n# library linker files, so rename the static library.\n",
        "Line" : 747,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "# We want the shared lib to be named \"libwebsockets\"\n\n# not \"libwebsocket_shared\".\n",
        "Line" : 773,
        "CharPositionInLine" : 1
      },
      "24" : {
        "Text" : "# Compile as DLL (export function declarations)\n",
        "Line" : 780,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Set the so version of the lib.\n\n# Equivalent to LDFLAGS=-version-info x:x:x\n",
        "Line" : 806,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#\n\n# Find libraries.\n\n#\n",
        "Line" : 818,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#\n\n# ZLIB (Only needed for deflate extensions).\n\n#\n",
        "Line" : 822,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Make sure zlib_internal is compiled before the libs.\n",
        "Line" : 850,
        "CharPositionInLine" : 3
      },
      "29" : {
        "Text" : "#\n\n# OpenSSL\n\n#\n",
        "Line" : 866,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Use wolfSSL as OpenSSL replacement.\n\n# TODO: Add a find_package command for this also.\n",
        "Line" : 873,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# Additional to the root directory we need to include\n\n# the wolfssl/ subdirectory which contains the OpenSSL\n\n# compatibility layer headers.\n",
        "Line" : 878,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# TODO: Add support for STATIC also.\n",
        "Line" : 898,
        "CharPositionInLine" : 3
      },
      "33" : {
        "Text" : "# older (0.98) Openssl lacks this\n",
        "Line" : 915,
        "CharPositionInLine" : 1
      },
      "34" : {
        "Text" : "#\n\n# Platform specific libs.\n\n#\n",
        "Line" : 975,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Setup the linking for all libs.\n",
        "Line" : 988,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Generate the lws_config.h that includes all the public compilation settings.\n",
        "Line" : 998,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Generate the lws_config.h that includes all the private compilation settings.\n",
        "Line" : 1003,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# Generate self-signed SSL certs for the test-server.\n",
        "Line" : 1008,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# The \"type\" command is a bit picky with paths.\n",
        "Line" : 1054,
        "CharPositionInLine" : 3
      },
      "40" : {
        "Text" : "# Unix.\n",
        "Line" : 1074,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "#\n\n# Test applications\n\n#\n",
        "Line" : 1097,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#\n\n# Helper function for adding a test app.\n\n#\n",
        "Line" : 1102,
        "CharPositionInLine" : 1
      },
      "43" : {
        "Text" : "# Set test app specific defines.\n",
        "Line" : 1160,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# Prefix the binary names with libwebsockets.\n",
        "Line" : 1166,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# Add to the list of tests.\n",
        "Line" : 1171,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "#\n\n# test-server\n\n#\n",
        "Line" : 1186,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "#\n\n# test-server-extpoll\n\n#\n",
        "Line" : 1235,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# Set defines for this executable only.\n",
        "Line" : 1245,
        "CharPositionInLine" : 3
      },
      "49" : {
        "Text" : "# We need to link against winsock code.\n",
        "Line" : 1253,
        "CharPositionInLine" : 3
      },
      "50" : {
        "Text" : "#\n\n# test-server-v2.0\n\n#\n",
        "Line" : 1259,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "# Data files for running the test server.\n",
        "Line" : 1273,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# Copy the file needed to run the server so that the test apps can\n\n# reach them from their default output location\n",
        "Line" : 1286,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "#\n\n# test-client\n\n#\n",
        "Line" : 1298,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "#\n\n# test-fraggle\n\n#\n",
        "Line" : 1305,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "#\n\n# test-ping\n\n#\n",
        "Line" : 1312,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "#\n\n# test-echo\n\n#\n",
        "Line" : 1318,
        "CharPositionInLine" : 2
      },
      "57" : {
        "Text" : "# Set test app specific defines.\n",
        "Line" : 1362,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "#\t\tset_target_properties(${PLUGIN_NAME}\n\n#\t\t\tPROPERTIES\n\n#\t\t\tOUTPUT_NAME ${PLUGIN_NAME})\n",
        "Line" : 1368,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "#\n\n# Copy OpenSSL dlls to the output directory on Windows.\n\n# (Otherwise we'll get an error when trying to run)\n\n#\n",
        "Line" : 1427,
        "CharPositionInLine" : 1
      },
      "60" : {
        "Text" : "# Set test app specific defines.\n",
        "Line" : 1474,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# Generate and install pkgconfig.\n\n# (This is not indented, because the tabs will be part of the output)\n",
        "Line" : 1483,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "#\n\n# Installation preparations.\n\n#\n",
        "Line" : 1503,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# Export targets (This is used for other CMake projects to easily find the libraries and include files).\n",
        "Line" : 1515,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# Generate the config file for the build-tree.\n",
        "Line" : 1520,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# Generate the config file for the installation tree.\n",
        "Line" : 1529,
        "CharPositionInLine" : 0
      },
      "66" : {
        "Text" : "# Calculate the relative directory from the cmake dir.\n",
        "Line" : 1535,
        "CharPositionInLine" : 43
      },
      "67" : {
        "Text" : "# Note the EVENT_CMAKE_DIR is defined in JanssonConfig.cmake.in, \n\n# we escape it here so it's evaluated when it is included instead\n\n# so that the include dirs are given relative to where the \n\n# config file is located.\n",
        "Line" : 1537,
        "CharPositionInLine" : 0
      },
      "68" : {
        "Text" : "# Generate version info for both build-tree and install-tree.\n",
        "Line" : 1547,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "#\n\n# Installation.\n\n#\n",
        "Line" : 1555,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Install libs and headers.\n",
        "Line" : 1559,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# Windows DLLs\n",
        "Line" : 1564,
        "CharPositionInLine" : 67
      },
      "72" : {
        "Text" : "# Install test apps.\n",
        "Line" : 1569,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# lwsws\n",
        "Line" : 1577,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Programs shared files used by the test-server.\n",
        "Line" : 1583,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# plugins\n",
        "Line" : 1601,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Install the LibwebsocketsConfig.cmake and LibwebsocketsConfigVersion.cmake\n",
        "Line" : 1646,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# Install exports for the install-tree.\n",
        "Line" : 1652,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# build subdir is not part of sources\n",
        "Line" : 1656,
        "CharPositionInLine" : 0
      },
      "79" : {
        "Text" : "# Most people are more used to \"make dist\" compared to \"make package_source\"\n",
        "Line" : 1659,
        "CharPositionInLine" : 0
      },
      "80" : {
        "Text" : "# These will be available to parent projects including libwebsockets using add_subdirectory()\n",
        "Line" : 1721,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# This must always be last!\n",
        "Line" : 1730,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 82
    },
    "libs/libwebsockets-2.2.1/FindLibWebSockets.cmake" : {
      "ObjectId" : "1dfe11579f54bae942a97877a386e29f849673ea",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module tries to find libWebsockets library and include files\n\n#\n\n# LIBWEBSOCKETS_INCLUDE_DIR, path where to find libwebsockets.h\n\n# LIBWEBSOCKETS_LIBRARY_DIR, path where to find libwebsockets.so\n\n# LIBWEBSOCKETS_LIBRARIES, the library to link against\n\n# LIBWEBSOCKETS_FOUND, If false, do not try to use libWebSockets\n\n#\n\n# This currently works probably only for Linux\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libs/libwebsockets-2.2.1/cmake/FindGit.cmake" : {
      "ObjectId" : "65b946ce15953b5a8d61e29b299b39d105fd25e0",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#\n\n#  Program: 3D Slicer\n\n#\n\n#  Copyright (c) Kitware Inc.\n\n#\n\n#  See COPYRIGHT.txt\n\n#  or http://www.slicer.org/copyright/copyright.txt for details.\n\n#\n\n#  Unless required by applicable law or agreed to in writing, software\n\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n#  See the License for the specific language governing permissions and\n\n#  limitations under the License.\n\n#\n\n#  This file was originally developed by Jean-Christophe Fillion-Robin, Kitware Inc.\n\n#  and was partially funded by NIH grant 3P41RR013218-12S1\n\n#\n\n#  AG 2013-02-18: I got it from here\n\n#  https://github.com/Slicer/Slicer/blob/master/CMake/FindGit.cmake\n\n#  license is BSD\n\n#\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# The module defines the following variables:\n\n#   GIT_EXECUTABLE - path to git command line client\n\n#   GIT_FOUND - true if the command line client was found\n\n#\n\n# If the command line client executable is found the macro\n\n#  GIT_WC_INFO(<dir> <var-prefix>)\n\n# is defined to extract information of a git working copy at\n\n# a given location.\n\n#\n\n# The macro defines the following variables:\n\n#  <var-prefix>_WC_REVISION_HASH - Current SHA1 hash\n\n#  <var-prefix>_WC_REVISION - Current SHA1 hash\n\n#  <var-prefix>_WC_REVISION_NAME - Name associated with <var-prefix>_WC_REVISION_HASH\n\n#  <var-prefix>_WC_URL - output of command `git config --get remote.origin.url'\n\n#  <var-prefix>_WC_ROOT - Same value as working copy URL\n\n#  <var-prefix>_WC_GITSVN - Set to false\n\n#\n\n# ... and also the following ones if it's a git-svn repository:\n\n#  <var-prefix>_WC_GITSVN - Set to True if it is a\n\n#  <var-prefix>_WC_INFO - output of command `git svn info'\n\n#  <var-prefix>_WC_URL - url of the associated SVN repository\n\n#  <var-prefix>_WC_ROOT - root url of the associated SVN repository\n\n#  <var-prefix>_WC_REVISION - current SVN revision number\n\n#  <var-prefix>_WC_LAST_CHANGED_AUTHOR - author of last commit\n\n#  <var-prefix>_WC_LAST_CHANGED_DATE - date of last commit\n\n#  <var-prefix>_WC_LAST_CHANGED_REV - revision of last commit\n\n#  <var-prefix>_WC_LAST_CHANGED_LOG - last log of base revision\n\n#\n\n# Example usage:\n\n#   find_package(Git)\n\n#   if(GIT_FOUND)\n\n#    GIT_WC_INFO(${PROJECT_SOURCE_DIR} Project)\n\n#    message(\"Current revision is ${Project_WC_REVISION_HASH}\")\n\n#    message(\"git found: ${GIT_EXECUTABLE}\")\n\n#   endif()\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Look for 'git' or 'eg' (easy git)\n\n#\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Prefer .cmd variants on Windows unless running in a Makefile\n\n# in the MSYS shell.\n\n#\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Note: Due to a bug in 'git.cmd' preventing it from returning the exit code of 'git',\n\n#       we excluded it from the list of executables to search.\n\n# See http://code.google.com/p/msysgit/issues/detail?id=428\n\n# TODO Check if 'git' exists, get the associated version, if the corresponding version\n\n#      is known to have a working version of 'git.cmd', use it.\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Check if this git is likely to be a git-svn repository\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# In case git-svn is used, attempt to extract svn info\n",
        "Line" : 120,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# If there is no 'remote.origin', default to \"NA\" value and print a warning message.\n",
        "Line" : 146,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Handle the QUIETLY and REQUIRED arguments and set GIT_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "libs/libwebsockets-2.2.1/cmake/FindOpenSSLbins.cmake" : {
      "ObjectId" : "5611c04cde1ecb6164427efe7e8134d820836553",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# On Windows, we need to copy the OpenSSL dlls \n\n# to the output directory.\n",
        "Line" : 13,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "libs/libwebsockets-2.2.1/cmake/UseRPMTools.cmake" : {
      "ObjectId" : "63aac73389e478abd8891fd3f56d5896ce869c87",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# - Find tools needed for building RPM Packages\n\n#   on Linux systems and defines macro that helps to\n\n#   build source or binary RPM, the MACRO assumes\n\n#   CMake 2.4.x which includes CPack support.\n\n#   CPack is used to build tar.gz source tarball\n\n#   which may be used by a custom user-made spec file.\n\n#\n\n# - Define RPMTools_ADD_RPM_TARGETS which defines\n\n#   two (top-level) CUSTOM targets for building\n\n#   source and binary RPMs\n\n#\n\n# Those CMake macros are provided by the TSP Developer Team\n\n# https://savannah.nongnu.org/projects/tsp\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Look for RPM builder executable\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Detect if CPack was included or not\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#\n\n# - first arg  (ARGV0) is RPM name\n\n# - second arg (ARGV1) is the RPM spec file path [optional]\n\n# - third arg  (ARGV2) is the RPM ROOT DIRECTORY used to build RPMs [optional]\n\n#\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#\n\n# If no spec file is provided create a minimal one\n\n#\n",
        "Line" : 52,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# Verify whether if RPM_ROOTDIR was provided or not\n",
        "Line" : 61,
        "CharPositionInLine" : 6
      },
      "6" : {
        "Text" : "# Prepare RPM build tree\n",
        "Line" : 69,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "#\n\n# We check whether if the provided spec file is\n\n# to be configure or not.\n\n#\n",
        "Line" : 78,
        "CharPositionInLine" : 6
      },
      "8" : {
        "Text" : "# This is a 'ready-to-use' spec file which does not need to be CONFIGURED\n",
        "Line" : 139,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "# This is a to-be-configured spec file\n",
        "Line" : 147,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 10
    },
    "libs/libwebsockets-2.2.1/cross-arm-linux-gnueabihf.cmake" : {
      "ObjectId" : "12cf3e98da0d8be722c5d0ff56981ebcee191974",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# CMake Toolchain file for crosscompiling on ARM.\n\n#\n\n# This can be used when running cmake in the following way:\n\n#  cd build/\n\n#  cmake .. -DCMAKE_TOOLCHAIN_FILE=../cross-arm-linux-gnueabihf.cmake\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target operating system name.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Name of C compiler.\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to look for the target environment. (More paths can be added here)\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Adjust the default behavior of the FIND_XXX() commands:\n\n# search programs in the host environment only.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Search headers and libraries in the target environment only.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "libs/libwebsockets-2.2.1/cross-ming.cmake" : {
      "ObjectId" : "94989f23007e93a03c12b6fa46db16dad051c01c",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# CMake Toolchain file for crosscompiling on MingW.\n\n#\n\n# This can be used when running cmake in the following way:\n\n#  cd build/\n\n#  cmake .. -DCMAKE_TOOLCHAIN_FILE=../cross-ming.cmake\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target operating system name.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Name of C compiler.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set(CMAKE_CXX_COMPILER \"${CROSS_PATH}/x86_64-w64-mingw32-g++\")\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Where to look for the target environment. (More paths can be added here)\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Adjust the default behavior of the FIND_XXX() commands:\n\n# search programs in the host environment only.\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Search headers and libraries in the target environment only.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "libs/libwebsockets-2.2.1/plugin-standalone/CMakeLists.txt" : {
      "ObjectId" : "c5e92a0716df0afd690a0d4758b58fc5056ac2b2",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This shows one way to build a standalone plugin\n\n# outside of lws itself\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try to find the current Git hash.\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Set test app specific defines.\n",
        "Line" : 62,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "libs/libwebsockets-2.2.1/scripts/FindLibWebSockets.cmake" : {
      "ObjectId" : "e7d283932aae77f3b4c68707cd1610319bcadd1f",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module tries to find libWebsockets library and include files\n\n#\n\n# LIBWEBSOCKETS_INCLUDE_DIR, path where to find libwebsockets.h\n\n# LIBWEBSOCKETS_LIBRARY_DIR, path where to find libwebsockets.so\n\n# LIBWEBSOCKETS_LIBRARIES, the library to link against\n\n# LIBWEBSOCKETS_FOUND, If false, do not try to use libWebSockets\n\n#\n\n# This currently works probably only for Linux\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libs/log4cplus-1.2.0/CMakeLists.txt" : {
      "ObjectId" : "3de896e5241bef97004a7b609a81da926b765737",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This block needs to stay before the project (log4cplus) line so that\n\n#  the output files placed into Android's libs directory.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Android: set output folder to ${CMAKE_BINARY_DIR}\n",
        "Line" : 6,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Remove when CMake >= 2.8.4 is required\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set S-prefix for static build\n",
        "Line" : 79,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Prepare defines.hxx.cmake from defines.hxx.in by doing a bit of\n\n# string manipulation.\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "libs/log4cplus-1.2.0/ConfigureChecks.cmake" : {
      "ObjectId" : "2090bd6bf93e31372e469fb40ab5a6363f6d74fb",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# clock_gettime() needs -lrt here\n\n# TODO AC says this exists\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# iconv functions may require iconv library (on OS X for example)\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# TODO more complicated test in AC\n",
        "Line" : 132,
        "CharPositionInLine" : 70
      },
      "3" : {
        "Text" : "# TODO more complicated test in AC\n",
        "Line" : 133,
        "CharPositionInLine" : 67
      },
      "4" : {
        "Text" : "# check for declspec stuff\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# check for thread-local stuff\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# TODO: requires special compiler switch on GCC and Clang\n\n# Currently it is assumed that they are provided in\n\n# CMAKE_CXX_FLAGS\n",
        "Line" : 208,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# check for c++11 atomic stuff\n\n# TODO: requires special compiler switch on GCC and Clang\n\n# Currently it is assumed that they are provided in\n\n# CMAKE_CXX_FLAGS\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "libs/log4cplus-1.2.0/Log4CPlusCPack.cmake" : {
      "ObjectId" : "5986f62cf7541b8868ee3b871f0dbb7639782e44",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/Log4CPlusUtils.cmake" : {
      "ObjectId" : "f63ea9d9bd4b53a4f51c9144cf78297e93590574",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Utility macros for Log4Cplus project\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Get Log4cplus version macro\n\n# first param - path to include folder, we will rip version from version.h\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# we also count '4' from the name...\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "libs/log4cplus-1.2.0/Makefile.am" : {
      "ObjectId" : "9171ff397a3847d46a38fa1964e47fbc09253a57",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/android/android.toolchain.cmake" : {
      "ObjectId" : "07100ee33db8611b81b467452837110108f5893c",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2010-2011, Ethan Rublee\n\n# Copyright (c) 2011-2014, Andrey Kamaev\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n#\n\n# 1.  Redistributions of source code must retain the above copyright notice,\n\n#     this list of conditions and the following disclaimer.\n\n#\n\n# 2.  Redistributions in binary form must reproduce the above copyright notice,\n\n#     this list of conditions and the following disclaimer in the documentation\n\n#     and/or other materials provided with the distribution.\n\n#\n\n# 3.  Neither the name of the copyright holder nor the names of its\n\n#     contributors may be used to endorse or promote products derived from this\n\n#     software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n\n# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n\n# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n\n# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n\n# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n\n# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n\n# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n\n# POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ------------------------------------------------------------------------------\n\n#  Android CMake toolchain file, for use with the Android NDK r5-r10d\n\n#  Requires cmake 2.6.3 or newer (2.8.9 or newer is recommended).\n\n#  See home page: https://github.com/taka-no-me/android-cmake\n\n#\n\n#  Usage Linux:\n\n#   $ export ANDROID_NDK=/absolute/path/to/the/android-ndk\n\n#   $ mkdir build && cd build\n\n#   $ cmake -DCMAKE_TOOLCHAIN_FILE=path/to/the/android.toolchain.cmake ..\n\n#   $ make -j8\n\n#\n\n#  Usage Windows:\n\n#     You need native port of make to build your project.\n\n#     Android NDK r7 (and newer) already has make.exe on board.\n\n#     For older NDK you have to install it separately.\n\n#     For example, this one: http://gnuwin32.sourceforge.net/packages/make.htm\n\n#\n\n#   $ SET ANDROID_NDK=C:\\absolute\\path\\to\\the\\android-ndk\n\n#   $ mkdir build && cd build\n\n#   $ cmake.exe -G\"MinGW Makefiles\"\n\n#       -DCMAKE_TOOLCHAIN_FILE=path\\to\\the\\android.toolchain.cmake\n\n#       -DCMAKE_MAKE_PROGRAM=\"%ANDROID_NDK%\\prebuilt\\windows\\bin\\make.exe\" ..\n\n#   $ cmake.exe --build .\n\n#\n\n#\n\n#  Options (can be set as cmake parameters: -D<option_name>=<value>):\n\n#    ANDROID_NDK=/opt/android-ndk - path to the NDK root.\n\n#      Can be set as environment variable. Can be set only at first cmake run.\n\n#\n\n#    ANDROID_ABI=armeabi-v7a - specifies the target Application Binary\n\n#      Interface (ABI). This option nearly matches to the APP_ABI variable\n\n#      used by ndk-build tool from Android NDK.\n\n#\n\n#      Possible targets are:\n\n#        \"armeabi\" - ARMv5TE based CPU with software floating point operations\n\n#        \"armeabi-v7a\" - ARMv7 based devices with hardware FPU instructions\n\n#            this ABI target is used by default\n\n#        \"armeabi-v7a with NEON\" - same as armeabi-v7a, but\n\n#            sets NEON as floating-point unit\n\n#        \"armeabi-v7a with VFPV3\" - same as armeabi-v7a, but\n\n#            sets VFPV3 as floating-point unit (has 32 registers instead of 16)\n\n#        \"armeabi-v6 with VFP\" - tuned for ARMv6 processors having VFP\n\n#        \"x86\" - IA-32 instruction set\n\n#        \"mips\" - MIPS32 instruction set\n\n#\n\n#      64-bit ABIs for NDK r10 and newer:\n\n#        \"arm64-v8a\" - ARMv8 AArch64 instruction set\n\n#        \"x86_64\" - Intel64 instruction set (r1)\n\n#        \"mips64\" - MIPS64 instruction set (r6)\n\n#\n\n#    ANDROID_NATIVE_API_LEVEL=android-8 - level of Android API compile for.\n\n#      Option is read-only when standalone toolchain is used.\n\n#      Note: building for \"android-L\" requires explicit configuration.\n\n#\n\n#    ANDROID_TOOLCHAIN_NAME=arm-linux-androideabi-4.9 - the name of compiler\n\n#      toolchain to be used. The list of possible values depends on the NDK\n\n#      version. For NDK r10c the possible values are:\n\n#\n\n#        * aarch64-linux-android-4.9\n\n#        * aarch64-linux-android-clang3.4\n\n#        * aarch64-linux-android-clang3.5\n\n#        * arm-linux-androideabi-4.6\n\n#        * arm-linux-androideabi-4.8\n\n#        * arm-linux-androideabi-4.9 (default)\n\n#        * arm-linux-androideabi-clang3.4\n\n#        * arm-linux-androideabi-clang3.5\n\n#        * mips64el-linux-android-4.9\n\n#        * mips64el-linux-android-clang3.4\n\n#        * mips64el-linux-android-clang3.5\n\n#        * mipsel-linux-android-4.6\n\n#        * mipsel-linux-android-4.8\n\n#        * mipsel-linux-android-4.9\n\n#        * mipsel-linux-android-clang3.4\n\n#        * mipsel-linux-android-clang3.5\n\n#        * x86-4.6\n\n#        * x86-4.8\n\n#        * x86-4.9\n\n#        * x86-clang3.4\n\n#        * x86-clang3.5\n\n#        * x86_64-4.9\n\n#        * x86_64-clang3.4\n\n#        * x86_64-clang3.5\n\n#\n\n#    ANDROID_FORCE_ARM_BUILD=OFF - set ON to generate 32-bit ARM instructions\n\n#      instead of Thumb. Is not available for \"armeabi-v6 with VFP\"\n\n#      (is forced to be ON) ABI.\n\n#\n\n#    ANDROID_NO_UNDEFINED=ON - set ON to show all undefined symbols as linker\n\n#      errors even if they are not used.\n\n#\n\n#    ANDROID_SO_UNDEFINED=OFF - set ON to allow undefined symbols in shared\n\n#      libraries. Automatically turned for NDK r5x and r6x due to GLESv2\n\n#      problems.\n\n#\n\n#    ANDROID_STL=gnustl_static - specify the runtime to use.\n\n#\n\n#      Possible values are:\n\n#        none           -> Do not configure the runtime.\n\n#        system         -> Use the default minimal system C++ runtime library.\n\n#                          Implies -fno-rtti -fno-exceptions.\n\n#                          Is not available for standalone toolchain.\n\n#        system_re      -> Use the default minimal system C++ runtime library.\n\n#                          Implies -frtti -fexceptions.\n\n#                          Is not available for standalone toolchain.\n\n#        gabi++_static  -> Use the GAbi++ runtime as a static library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        gabi++_shared  -> Use the GAbi++ runtime as a shared library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        stlport_static -> Use the STLport runtime as a static library.\n\n#                          Implies -fno-rtti -fno-exceptions for NDK before r7.\n\n#                          Implies -frtti -fno-exceptions for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        stlport_shared -> Use the STLport runtime as a shared library.\n\n#                          Implies -fno-rtti -fno-exceptions for NDK before r7.\n\n#                          Implies -frtti -fno-exceptions for NDK r7 and newer.\n\n#                          Is not available for standalone toolchain.\n\n#        gnustl_static  -> Use the GNU STL as a static library.\n\n#                          Implies -frtti -fexceptions.\n\n#        gnustl_shared  -> Use the GNU STL as a shared library.\n\n#                          Implies -frtti -fno-exceptions.\n\n#                          Available for NDK r7b and newer.\n\n#                          Silently degrades to gnustl_static if not available.\n\n#\n\n#    ANDROID_STL_FORCE_FEATURES=ON - turn rtti and exceptions support based on\n\n#      chosen runtime. If disabled, then the user is responsible for settings\n\n#      these options.\n\n#\n\n#  What?:\n\n#    android-cmake toolchain searches for NDK/toolchain in the following order:\n\n#      ANDROID_NDK - cmake parameter\n\n#      ANDROID_NDK - environment variable\n\n#      ANDROID_STANDALONE_TOOLCHAIN - cmake parameter\n\n#      ANDROID_STANDALONE_TOOLCHAIN - environment variable\n\n#      ANDROID_NDK - default locations\n\n#      ANDROID_STANDALONE_TOOLCHAIN - default locations\n\n#\n\n#    Make sure to do the following in your scripts:\n\n#      SET( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${my_cxx_flags}\" )\n\n#      SET( CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${my_cxx_flags}\" )\n\n#    The flags will be prepopulated with critical flags, so don't loose them.\n\n#    Also be aware that toolchain also sets configuration-specific compiler\n\n#    flags and linker flags.\n\n#\n\n#    ANDROID and BUILD_ANDROID will be set to true, you may test any of these\n\n#    variables to make necessary Android-specific configuration changes.\n\n#\n\n#    Also ARMEABI or ARMEABI_V7A or X86 or MIPS or ARM64_V8A or X86_64 or MIPS64\n\n#    will be set true, mutually exclusive. NEON option will be set true\n\n#    if VFP is set to NEON.\n\n#\n\n# ------------------------------------------------------------------------------\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# subsequent toolchain loading is not really needed\n",
        "Line" : 190,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# touch toolchain variable to suppress \"unused variable\" warning\n",
        "Line" : 195,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# inherit settings in recursive loads\n",
        "Line" : 198,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# this one is important\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# this one not so much\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# rpath makes low sense for Android\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# NDK search paths\n",
        "Line" : 218,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# known ABIs\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# API level defaults\n",
        "Line" : 241,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# fight against cygwin\n",
        "Line" : 338,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# remove cygwin from PATH\n",
        "Line" : 347,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# detect current host platform\n",
        "Line" : 356,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# see if we have path to Android NDK\n",
        "Line" : 381,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# see if we have path to Android standalone toolchain\n",
        "Line" : 386,
        "CharPositionInLine" : 1
      },
      "16" : {
        "Text" : "#try to find Android NDK in one of the the default locations\n",
        "Line" : 390,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "#try to find Android standalone toolchain in one of the the default locations\n",
        "Line" : 404,
        "CharPositionInLine" : 3
      },
      "18" : {
        "Text" : "# remember found paths\n",
        "Line" : 415,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# try to detect change\n",
        "Line" : 432,
        "CharPositionInLine" : 1
      },
      "20" : {
        "Text" : "# android NDK layout\n",
        "Line" : 456,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# try to automatically detect the layout\n",
        "Line" : 459,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# only 32-bit at the moment\n",
        "Line" : 471,
        "CharPositionInLine" : 71
      },
      "23" : {
        "Text" : "# only 32-bit at the moment\n",
        "Line" : 476,
        "CharPositionInLine" : 71
      },
      "24" : {
        "Text" : "# ANDROID_NDK_LAYOUT STREQUAL \"RELEASE\"\n",
        "Line" : 480,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# try to detect change of NDK\n",
        "Line" : 487,
        "CharPositionInLine" : 1
      },
      "26" : {
        "Text" : "# get all the details about standalone toolchain\n",
        "Line" : 501,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#message(\"machine: !${__machine}!\\narch: !${__arch}!\\nversion: !${__version}!\\ntoolchain: !${__toolchain}!\\n\")\n",
        "Line" : 568,
        "CharPositionInLine" : 3
      },
      "28" : {
        "Text" : "# get all the details about NDK\n",
        "Line" : 580,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# do not go through all toolchains if we know the name\n",
        "Line" : 589,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# we need clang to go after gcc\n",
        "Line" : 602,
        "CharPositionInLine" : 39
      },
      "31" : {
        "Text" : "# build list of available ABIs\n",
        "Line" : 620,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# choose target ABI\n",
        "Line" : 633,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# verify that target ABI is supported\n",
        "Line" : 635,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# set target ABI options\n",
        "Line" : 645,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# need always fallback to older platform\n",
        "Line" : 691,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "# really dirty hack\n\n# it is not possible to change CMAKE_SYSTEM_PROCESSOR after the first run...\n",
        "Line" : 719,
        "CharPositionInLine" : 1
      },
      "37" : {
        "Text" : "# choose toolchain\n",
        "Line" : 732,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# choose native API level\n",
        "Line" : 781,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# adjust API level\n",
        "Line" : 785,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# validate\n",
        "Line" : 797,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# remember target ABI\n",
        "Line" : 819,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# runtime choice (STL, rtti, exceptions)\n",
        "Line" : 827,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# setup paths and STL for standalone toolchain\n",
        "Line" : 895,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# old location ( pre r8c )\n",
        "Line" : 904,
        "CharPositionInLine" : 3
      },
      "45" : {
        "Text" : "# always search static GNU STL to get the location of libsupc++.a\n",
        "Line" : 914,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# clang\n",
        "Line" : 949,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# setup paths and STL for NDK\n",
        "Line" : 973,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# do nothing\n",
        "Line" : 979,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "# before r7\n",
        "Line" : 989,
        "CharPositionInLine" : 42
      },
      "50" : {
        "Text" : "# before r8d\n",
        "Line" : 997,
        "CharPositionInLine" : 46
      },
      "51" : {
        "Text" : "# before r7\n",
        "Line" : 1002,
        "CharPositionInLine" : 42
      },
      "52" : {
        "Text" : "# gnustl binary for 4.7 compiler is buggy :(\n\n# TODO: look for right fix\n",
        "Line" : 1014,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "# find libsupc++.a - rtti & exceptions\n",
        "Line" : 1032,
        "CharPositionInLine" : 1
      },
      "54" : {
        "Text" : "# r8b or newer\n",
        "Line" : 1034,
        "CharPositionInLine" : 137
      },
      "55" : {
        "Text" : "# r7-r8\n",
        "Line" : 1036,
        "CharPositionInLine" : 110
      },
      "56" : {
        "Text" : "# before r7\n",
        "Line" : 1038,
        "CharPositionInLine" : 36
      },
      "57" : {
        "Text" : "# case of shared STL linkage\n",
        "Line" : 1058,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# TODO: check if .so file exists before the renaming\n",
        "Line" : 1061,
        "CharPositionInLine" : 1
      },
      "59" : {
        "Text" : "# ccache support\n",
        "Line" : 1065,
        "CharPositionInLine" : 0
      },
      "60" : {
        "Text" : "# setup the cross-compiler\n",
        "Line" : 1078,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# Force set compilers because standard identification works badly for us\n",
        "Line" : 1121,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# force ASM compiler (required for CMake < 2.8.5)\n",
        "Line" : 1144,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# flags and definitions\n",
        "Line" : 1160,
        "CharPositionInLine" : 0
      },
      "64" : {
        "Text" : "# try to convert path to 8.3 form\n",
        "Line" : 1166,
        "CharPositionInLine" : 2
      },
      "65" : {
        "Text" : "# quotes can break try_compile and compiler identification\n",
        "Line" : 1181,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# NDK flags\n",
        "Line" : 1188,
        "CharPositionInLine" : 0
      },
      "67" : {
        "Text" : "# always compile ARMEABI_V6 in arm mode; otherwise there is no difference from ARMEABI\n",
        "Line" : 1205,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "# good/necessary when porting desktop libraries\n",
        "Line" : 1232,
        "CharPositionInLine" : 62
      },
      "69" : {
        "Text" : "# see https://android-review.googlesource.com/#/c/47564/\n",
        "Line" : 1239,
        "CharPositionInLine" : 72
      },
      "70" : {
        "Text" : "# ABI-specific flags\n",
        "Line" : 1242,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "# vfp == vfpv2\n",
        "Line" : 1253,
        "CharPositionInLine" : 91
      },
      "72" : {
        "Text" : "# STL\n",
        "Line" : 1268,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "# C objects:\n",
        "Line" : 1279,
        "CharPositionInLine" : 2
      },
      "74" : {
        "Text" : "# variables controlling optional build flags\n",
        "Line" : 1297,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# before r7\n",
        "Line" : 1298,
        "CharPositionInLine" : 40
      },
      "76" : {
        "Text" : "# libGLESv2.so in NDK's prior to r7 refers to missing external symbols.\n\n# So this flag option is required for all projects using OpenGL from native.\n",
        "Line" : 1299,
        "CharPositionInLine" : 1
      },
      "77" : {
        "Text" : "# linker flags\n",
        "Line" : 1319,
        "CharPositionInLine" : 0
      },
      "78" : {
        "Text" : "# this is *required* to use the following linker flags that routes around\n\n# a CPU bug in some Cortex-A8 implementations:\n",
        "Line" : 1323,
        "CharPositionInLine" : 1
      },
      "79" : {
        "Text" : "# there is some sysroot-related problem in mips linker...\n",
        "Line" : 1330,
        "CharPositionInLine" : 2
      },
      "80" : {
        "Text" : "# after r8b\n",
        "Line" : 1351,
        "CharPositionInLine" : 48
      },
      "81" : {
        "Text" : "# version 4.6\n",
        "Line" : 1359,
        "CharPositionInLine" : 8
      },
      "82" : {
        "Text" : "# cache flags\n",
        "Line" : 1381,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# put flags to cache (for debug purpose only)\n",
        "Line" : 1392,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# finish flags\n",
        "Line" : 1398,
        "CharPositionInLine" : 0
      },
      "85" : {
        "Text" : "# pie/pic\n",
        "Line" : 1415,
        "CharPositionInLine" : 0
      },
      "86" : {
        "Text" : "# configure rtti\n",
        "Line" : 1425,
        "CharPositionInLine" : 0
      },
      "87" : {
        "Text" : "# configure exceptios\n",
        "Line" : 1434,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "# global includes and link directories\n",
        "Line" : 1445,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "# avoid CMP0015 policy warning\n",
        "Line" : 1447,
        "CharPositionInLine" : 111
      },
      "90" : {
        "Text" : "# detect if need link crtbegin_so.o explicitly\n",
        "Line" : 1450,
        "CharPositionInLine" : 0
      },
      "91" : {
        "Text" : "# setup output directories\n",
        "Line" : 1487,
        "CharPositionInLine" : 0
      },
      "92" : {
        "Text" : "# copy shaed stl library to build directory\n",
        "Line" : 1504,
        "CharPositionInLine" : 0
      },
      "93" : {
        "Text" : "# set these global flags for cmake client scripts to change behavior\n",
        "Line" : 1516,
        "CharPositionInLine" : 0
      },
      "94" : {
        "Text" : "# where is the target environment\n",
        "Line" : 1520,
        "CharPositionInLine" : 0
      },
      "95" : {
        "Text" : "# only search for libraries and includes in the ndk toolchain\n",
        "Line" : 1523,
        "CharPositionInLine" : 0
      },
      "96" : {
        "Text" : "# macro to find packages on the host OS\n",
        "Line" : 1529,
        "CharPositionInLine" : 0
      },
      "97" : {
        "Text" : "# macro to find programs on the host OS\n",
        "Line" : 1551,
        "CharPositionInLine" : 0
      },
      "98" : {
        "Text" : "# export toolchain settings for the try_compile() command\n",
        "Line" : 1573,
        "CharPositionInLine" : 0
      },
      "99" : {
        "Text" : "# force cmake to produce / instead of \\ in build commands for Ninja generator\n",
        "Line" : 1610,
        "CharPositionInLine" : 0
      },
      "100" : {
        "Text" : "# it is a bad hack after all\n\n# CMake generates Ninja makefiles with UNIX paths only if it thinks that we are going to build with MinGW\n",
        "Line" : 1612,
        "CharPositionInLine" : 1
      },
      "101" : {
        "Text" : "# tell CMake that we are MinGW\n\n# stop recursion\n",
        "Line" : 1614,
        "CharPositionInLine" : 37
      },
      "102" : {
        "Text" : "# unset( CMAKE_COMPILER_IS_MINGW ) # can't unset because CMake does not convert back-slashes in response files without it\n",
        "Line" : 1618,
        "CharPositionInLine" : 1
      },
      "103" : {
        "Text" : "# Variables controlling behavior or set by cmake toolchain:\n\n#   ANDROID_ABI : \"armeabi-v7a\" (default), \"armeabi\", \"armeabi-v7a with NEON\", \"armeabi-v7a with VFPV3\", \"armeabi-v6 with VFP\", \"x86\", \"mips\", \"arm64-v8a\", \"x86_64\", \"mips64\"\n\n#   ANDROID_NATIVE_API_LEVEL : 3,4,5,8,9,14,15,16,17,18,19,21 (depends on NDK version)\n\n#   ANDROID_STL : gnustl_static/gnustl_shared/stlport_static/stlport_shared/gabi++_static/gabi++_shared/system_re/system/none\n\n#   ANDROID_FORBID_SYGWIN : ON/OFF\n\n#   ANDROID_NO_UNDEFINED : ON/OFF\n\n#   ANDROID_SO_UNDEFINED : OFF/ON  (default depends on NDK version)\n\n#   ANDROID_FUNCTION_LEVEL_LINKING : ON/OFF\n\n#   ANDROID_GOLD_LINKER : ON/OFF\n\n#   ANDROID_NOEXECSTACK : ON/OFF\n\n#   ANDROID_RELRO : ON/OFF\n\n#   ANDROID_FORCE_ARM_BUILD : ON/OFF\n\n#   ANDROID_STL_FORCE_FEATURES : ON/OFF\n\n#   ANDROID_LIBM_PATH : path to libm.so (set to something like $(TOP)/out/target/product/<product_name>/obj/lib/libm.so) to workaround unresolved `sincos`\n\n# Can be set only at the first run:\n\n#   ANDROID_NDK : path to your NDK install\n\n#   NDK_CCACHE : path to your ccache executable\n\n#   ANDROID_TOOLCHAIN_NAME : the NDK name of compiler toolchain\n\n#   ANDROID_NDK_HOST_X64 : try to use x86_64 toolchain (default for x64 host systems)\n\n#   ANDROID_NDK_LAYOUT : the inner NDK structure (RELEASE, LINARO, ANDROID)\n\n#   LIBRARY_OUTPUT_PATH_ROOT : <any valid path>\n\n#   ANDROID_STANDALONE_TOOLCHAIN\n\n#\n\n# Primary read-only variables:\n\n#   ANDROID : always TRUE\n\n#   ARMEABI : TRUE for arm v6 and older devices\n\n#   ARMEABI_V6 : TRUE for arm v6\n\n#   ARMEABI_V7A : TRUE for arm v7a\n\n#   ARM64_V8A : TRUE for arm64-v8a\n\n#   NEON : TRUE if NEON unit is enabled\n\n#   VFPV3 : TRUE if VFP version 3 is enabled\n\n#   X86 : TRUE if configured for x86\n\n#   X86_64 : TRUE if configured for x86_64\n\n#   MIPS : TRUE if configured for mips\n\n#   MIPS64 : TRUE if configured for mips64\n\n#   BUILD_WITH_ANDROID_NDK : TRUE if NDK is used\n\n#   BUILD_WITH_STANDALONE_TOOLCHAIN : TRUE if standalone toolchain is used\n\n#   ANDROID_NDK_HOST_SYSTEM_NAME : \"windows\", \"linux-x86\" or \"darwin-x86\" depending on host platform\n\n#   ANDROID_NDK_ABI_NAME : \"armeabi\", \"armeabi-v7a\", \"x86\", \"mips\", \"arm64-v8a\", \"x86_64\", \"mips64\" depending on ANDROID_ABI\n\n#   ANDROID_NDK_RELEASE : from r5 to r10d; set only for NDK\n\n#   ANDROID_NDK_RELEASE_NUM : numeric ANDROID_NDK_RELEASE version (1000*major+minor)\n\n#   ANDROID_ARCH_NAME : \"arm\", \"x86\", \"mips\", \"arm64\", \"x86_64\", \"mips64\" depending on ANDROID_ABI\n\n#   ANDROID_SYSROOT : path to the compiler sysroot\n\n#   TOOL_OS_SUFFIX : \"\" or \".exe\" depending on host platform\n\n#   ANDROID_COMPILER_IS_CLANG : TRUE if clang compiler is used\n\n#\n\n# Secondary (less stable) read-only variables:\n\n#   ANDROID_COMPILER_VERSION : GCC version used (not Clang version)\n\n#   ANDROID_CLANG_VERSION : version of clang compiler if clang is used\n\n#   ANDROID_CXX_FLAGS : C/C++ compiler flags required by Android platform\n\n#   ANDROID_SUPPORTED_ABIS : list of currently allowed values for ANDROID_ABI\n\n#   ANDROID_TOOLCHAIN_MACHINE_NAME : \"arm-linux-androideabi\", \"arm-eabi\" or \"i686-android-linux\"\n\n#   ANDROID_TOOLCHAIN_ROOT : path to the top level of toolchain (standalone or placed inside NDK)\n\n#   ANDROID_CLANG_TOOLCHAIN_ROOT : path to clang tools\n\n#   ANDROID_SUPPORTED_NATIVE_API_LEVELS : list of native API levels found inside NDK\n\n#   ANDROID_STL_INCLUDE_DIRS : stl include paths\n\n#   ANDROID_RTTI : if rtti is enabled by the runtime\n\n#   ANDROID_EXCEPTIONS : if exceptions are enabled by the runtime\n\n#   ANDROID_GCC_TOOLCHAIN_NAME : read-only, differs from ANDROID_TOOLCHAIN_NAME only if clang is used\n\n#\n\n# Defaults:\n\n#   ANDROID_DEFAULT_NDK_API_LEVEL\n\n#   ANDROID_DEFAULT_NDK_API_LEVEL_${ARCH}\n\n#   ANDROID_NDK_SEARCH_PATHS\n\n#   ANDROID_SUPPORTED_ABIS_${ARCH}\n\n#   ANDROID_SUPPORTED_NDK_VERSIONS\n",
        "Line" : 1623,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 104
    },
    "libs/log4cplus-1.2.0/iOS/ConfigureChecks.cmake" : {
      "ObjectId" : "196fff021590bbc818b2dde7826a2999f2287ab9",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#check_include_files(dlfcn.h  HAVE_DLFCN_H )\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set(HAVE_INTTYPES_H 1)\n\n# set(HAVE_MEMORY_H 1)\n\n# set(HAVE_STDINT_H 1)\n\n# set(HAVE_STRINGS_H 1)\n\n# set(HAVE_STRING_H 1)\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#check_include_files(\"stdlib.h;stdio.h;stdarg.h;string.h;float.h\" STDC_HEADERS )\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#set(LOG4CPLUS_HAVE_PIPE2 )\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#set(LOG4CPLUS_HAVE__VSNPRINTF )\n\n#set(LOG4CPLUS_HAVE_VSPRINTF_S )\n\n#set(LOG4CPLUS_HAVE_VSWPRINTF_S )\n\n#set(LOG4CPLUS_HAVE_VFPRINTF_S )\n\n#set(LOG4CPLUS_HAVE_VFWPRINTF_S )\n\n#set(LOG4CPLUS_HAVE__VSNPRINTF_S )\n\n#set(LOG4CPLUS_HAVE__VSNWPRINTF_S )\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#set(LOG4CPLUS_HAVE_CLOCK_GETTIME )\n\n#set(LOG4CPLUS_HAVE_CLOCK_NANOSLEEP )\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#set(LOG4CPLUS_HAVE_ICONV_OPEN )\n\n#set(LOG4CPLUS_HAVE_ICONV_CLOSE )\n\n#set(LOG4CPLUS_HAVE_ICONV )\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#set(LOG4CPLUS_HAVE_GETHOSTBYNAME_R)\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#set(LOG4CPLUS_HAVE_CXX11_ATOMICS )\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#set(socklen_t)\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "libs/log4cplus-1.2.0/iOS/iOS.cmake" : {
      "ObjectId" : "df2e3facabd5cfbd0ee84c8b7ff81932246c9ae5",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is based off of the Platform/Darwin.cmake and Platform/UnixPaths.cmake\n\n# files which are included with CMake 2.8.4\n\n# It has been altered for iOS development\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Options:\n\n#\n\n# IOS_PLATFORM = OS (default) or SIMULATOR\n\n#   This decides if SDKS will be selected from the iPhoneOS.platform or iPhoneSimulator.platform folders\n\n#   OS - the default, used to build for iPhone and iPad physical devices, which have an arm arch.\n\n#   SIMULATOR - used to build for the Simulator platforms, which have an x86 arch.\n\n#\n\n# CMAKE_IOS_DEVELOPER_ROOT = automatic(default) or /path/to/platform/Developer folder\n\n#   By default this location is automatcially chosen based on the IOS_PLATFORM value above.\n\n#   If set manually, it will override the default location and force the user of a particular Developer Platform\n\n#\n\n# CMAKE_IOS_SDK_ROOT = automatic(default) or /path/to/platform/Developer/SDKs/SDK folder\n\n#   By default this location is automatcially chosen based on the CMAKE_IOS_DEVELOPER_ROOT value.\n\n#   In this case it will always be the most up-to-date SDK found in the CMAKE_IOS_DEVELOPER_ROOT path.\n\n#   If set manually, this will force the use of a specific SDK version\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Macros:\n\n#\n\n# set_xcode_property (TARGET XCODE_PROPERTY XCODE_VALUE)\n\n#  A convenience macro for setting xcode specific properties on targets\n\n#  example: set_xcode_property (myioslib IPHONEOS_DEPLOYMENT_TARGET \"3.1\")\n\n#\n\n# find_host_package (PROGRAM ARGS)\n\n#  A macro used to find executable programs on the host system, not within the iOS environment.\n\n#  Thanks to the android-cmake project for providing the command\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Standard settings\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Required as of cmake 2.8.10\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Determine the cmake host system version so we know where to find the iOS SDKs\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Force the compilers to gcc for iOS\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Skip the platform compiler checks for cross compiling\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# All iOS/Darwin specific settings - some may be redundant\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Hidden visibilty is required for cxx on iOS \n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# hack: if a new cmake (which uses CMAKE_INSTALL_NAME_TOOL) runs on an old build tree\n\n# (where install_name_tool was hardcoded) and where CMAKE_INSTALL_NAME_TOOL isn't in the cache\n\n# and still cmake didn't fail in CMakeFindBinUtils.cmake (because it isn't rerun)\n\n# hardcode CMAKE_INSTALL_NAME_TOOL here to install_name_tool, so it behaves as it did before, Alex\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Setup iOS platform unless specified manually with IOS_PLATFORM\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Check the platform selection and setup for developer root\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# This causes the installers to properly locate the output libraries\n",
        "Line" : 103,
        "CharPositionInLine" : 1
      },
      "14" : {
        "Text" : "# This causes the installers to properly locate the output libraries\n",
        "Line" : 108,
        "CharPositionInLine" : 1
      },
      "15" : {
        "Text" : "# Setup iOS developer location unless specified manually with CMAKE_IOS_DEVELOPER_ROOT\n\n# Note Xcode 4.3 changed the installation location, choose the most recent one available\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Find and use the most recent iOS sdk unless specified manually with CMAKE_IOS_SDK_ROOT\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Set the sysroot default to the most recent SDK\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# set the architecture for iOS \n\n# NOTE: Currently both ARCHS_STANDARD_32_BIT and ARCHS_UNIVERSAL_IPHONE_OS set armv7 only, so set both manually\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Set the find root to the iOS developer roots and to user defined paths\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# default to searching for frameworks first\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# set up the default search directories for frameworks\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# only search the iOS sdks, not the remainder of the host filesystem\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# This little macro lets you set any XCode specific property\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# This macro lets you find executable programs on the host system\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 25
    },
    "libs/log4cplus-1.2.0/include/Makefile.am" : {
      "ObjectId" : "2e4960ee205405cdc2831055bb6c707a81e76cd5",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/qt4debugappender/CMakeLists.txt" : {
      "ObjectId" : "2f28be5e070307f8e36ee7a48a561d1d585b5716",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/qt4debugappender/Makefile.am" : {
      "ObjectId" : "c019c4280367bc199509a6d3c298f90267e506cf",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#liblog4cplusqt4debugappender_la_CXXFLAGS=-no-suppress \\\n#\t @LOG4CPLUS_PROFILING_CXXFLAGS@\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libs/log4cplus-1.2.0/qt5debugappender/CMakeLists.txt" : {
      "ObjectId" : "9570e767c50eeeb808277f30a21e152b6ecbb202",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#include (${QT_USE_FILE})\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libs/log4cplus-1.2.0/qt5debugappender/Makefile.am" : {
      "ObjectId" : "d0624d62eab2a2697643794ad4a261a1309889f4",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#liblog4cplusqt5debugappender_la_CXXFLAGS=-no-suppress \\\n#\t @LOG4CPLUS_PROFILING_CXXFLAGS@\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libs/log4cplus-1.2.0/simpleserver/CMakeLists.txt" : {
      "ObjectId" : "e53512050a63505f86d4a8eb0fc4d16223932d4a",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/simpleserver/Makefile.am" : {
      "ObjectId" : "bc500a7a562d4b60f2a11bf4fc0d90134fe27352",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/src/CMakeLists.txt" : {
      "ObjectId" : "82e529560c4458160f296a90edede9f7de82f76c",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#message (STATUS \"Type: ${UNIX}|${CYGWIN}|${WIN32}\")\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#add_definitions (-DLOG4CPLUS_STATIC)\n\n#set (log4cplus_postfix \"${log4cplus_postfix}S\")\n",
        "Line" : 65,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Android does not seem to have SO version support.\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "###\n\n# Installation (https://github.com/forexample/package-example)\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Configuration\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Note: variable 'targets_export_name' used\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#              ../include/log4cplus/thread/impl/syncprims-pmsm.h\n",
        "Line" : 235,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "libs/log4cplus-1.2.0/src/Makefile.am" : {
      "ObjectId" : "3e750b8d846bc14d72916c04d6464149dd802d55",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#liblog4cplus_la_CXXFLAGS=@LOG4CPLUS_PROFILING_CXXFLAGS@\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#liblog4cplus_la_LDFLAGS=@LOG4CPLUS_PROFILING_LDFLAGS@\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#liblog4cplus_a_LIBADD = @LIBOBJS@ @ALLOCA@\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "libs/log4cplus-1.2.0/swig/python/Makefile.am" : {
      "ObjectId" : "287a82a361c90daf2a6f772b7bb24f533526f927",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/tests/CMakeLists.txt" : {
      "ObjectId" : "3e5b37d8d4bfcf69495a2c728756681baca0cfe5",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# a function to set up a test, since it's the same for each one:\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#  message (STATUS \"${_name} sources: ${_srcs}\")\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#add_subdirectory (socket_test) # I don't know how this test is supposed to be executed\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "libs/log4cplus-1.2.0/tests/Makefile.am" : {
      "ObjectId" : "efaf5a792dd55a4decf76681c8e029cf5e2ce281",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/tests/appender_test/CMakeLists.txt" : {
      "ObjectId" : "eed539272943481397c1968537344b58c4df4d54",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/tests/appender_test/Makefile.am" : {
      "ObjectId" : "10ef88cefcd27140feec92ad753f7bb48cbcd735",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# This is the only program that uses '=' to assign to\n\n# noinst_PROGRAMS. All other test cases and loggingserver use '+='.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "libs/log4cplus-1.2.0/tests/configandwatch_test/CMakeLists.txt" : {
      "ObjectId" : "534152c63558a207334039fa28c2f8bf5e1afaf7",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/tests/configandwatch_test/Makefile.am" : {
      "ObjectId" : "bdd6617efd7e383dd0c2538678819341dc32e311",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/tests/customloglevel_test/CMakeLists.txt" : {
      "ObjectId" : "f14711be7bcc60b7259289b11e5ca135e35a2516",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/tests/customloglevel_test/Makefile.am" : {
      "ObjectId" : "fbb9d57e1c079d9c7791e68b966c9129bcb2d095",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/tests/fileappender_test/CMakeLists.txt" : {
      "ObjectId" : "b299d90c1a545d8123ed2948272d4d491ae2aa9f",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/tests/fileappender_test/Makefile.am" : {
      "ObjectId" : "f249b0785139b4654f9f5ceaf6f402d2c7f01222",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/tests/filter_test/CMakeLists.txt" : {
      "ObjectId" : "c62835ef2d2a01923dd07f2c79d4cd603fb7c7c0",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/tests/filter_test/Makefile.am" : {
      "ObjectId" : "faff7a6bbcb4ed5a3e8a818cafb40c7b36542ac3",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/tests/hierarchy_test/CMakeLists.txt" : {
      "ObjectId" : "cd429f75fba17a03c6f0cb846a775892dad7d7a8",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/tests/hierarchy_test/Makefile.am" : {
      "ObjectId" : "1d2818ea5b99320b084763ce039d85b2b1215a0b",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/tests/loglog_test/CMakeLists.txt" : {
      "ObjectId" : "07c2b0a02890ace8ae72fae31836db0ee9b32588",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/tests/loglog_test/Makefile.am" : {
      "ObjectId" : "c12b5079043e914eb5e86f1bddcf94a167a33d21",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/tests/ndc_test/CMakeLists.txt" : {
      "ObjectId" : "81970ddee15068705d1f94fce5f7d92498db941a",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/tests/ndc_test/Makefile.am" : {
      "ObjectId" : "1c7a6a4dae42824276e911eeb2060d81fb8e30af",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/tests/ostream_test/CMakeLists.txt" : {
      "ObjectId" : "17f44242689720e9e8afaf5f3c101187774490b5",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/tests/ostream_test/Makefile.am" : {
      "ObjectId" : "7f2d808619bd67aa92bbf7ad1f230b7651d1450c",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/tests/patternlayout_test/CMakeLists.txt" : {
      "ObjectId" : "551e346c54ee28e4ac897c4fe4ef83ddd56c3f0b",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/tests/patternlayout_test/Makefile.am" : {
      "ObjectId" : "b05a21d3c08cfb248e87bc3548483d384858b69d",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/tests/performance_test/CMakeLists.txt" : {
      "ObjectId" : "7ecec1ba046375ea2461374453b0559af14c53cf",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/tests/performance_test/Makefile.am" : {
      "ObjectId" : "52ac18d571f21d374d82b017c51fbadfd940f691",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/tests/priority_test/CMakeLists.txt" : {
      "ObjectId" : "c1b87e77104b5ac0e127bbac04b49395ebb8fd51",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/tests/priority_test/Makefile.am" : {
      "ObjectId" : "25bc9eb682dad09059519757f2875994bb10d212",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/tests/propertyconfig_test/CMakeLists.txt" : {
      "ObjectId" : "060916d15e2869e864fc813c30e533151f1db45c",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/tests/propertyconfig_test/Makefile.am" : {
      "ObjectId" : "5dfa09806f8e32d13b42f8d832abe0b59b5e5e6b",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/tests/socket_test/CMakeLists.txt" : {
      "ObjectId" : "18bb4c9d544c545d8e3c3525c4df99741eeb5f1b",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/tests/socket_test/Makefile.am" : {
      "ObjectId" : "cd21a8a796284706286ae2e421f272863b3e282a",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/tests/thread_test/CMakeLists.txt" : {
      "ObjectId" : "97794a2e780d688f8051507194b63bd2d0d9433b",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/tests/thread_test/Makefile.am" : {
      "ObjectId" : "0d169619838269d0789afba7fe353792afa49447",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/tests/timeformat_test/CMakeLists.txt" : {
      "ObjectId" : "bbc3bcc1c252ac098ab7fb1be8a95c18c8b6f116",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "libs/log4cplus-1.2.0/tests/timeformat_test/Makefile.am" : {
      "ObjectId" : "b485512647599f0e97a4b75bf3e2ae3999e91ed5",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "src/Makefile" : {
      "ObjectId" : "c2f3f0277cec1956f8b8584908737fe27b65529f",
      "LastModified" : "2018-12-12T06:05:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#############################################################################\n\n#\n\n# Generic Makefile for C/C++ Program\n\n#\n\n# License: GPL (General Public License)\n\n# Author:  whyglinux <whyglinux AT gmail DOT com>\n\n# Date:    2006/03/04 (version 0.1)\n\n#          2007/03/24 (version 0.2)\n\n#          2007/04/09 (version 0.3)\n\n#          2007/06/26 (version 0.4)\n\n#          2008/04/05 (version 0.5)\n\n#\n\n# Description:\n\n# ------------\n\n# This is an easily customizable makefile template. The purpose is to\n\n# provide an instant building environment for C/C++ programs.\n\n#\n\n# It searches all the C/C++ source files in the specified directories,\n\n# makes dependencies, compiles and links to form an executable.\n\n#\n\n# Besides its default ability to build C/C++ programs which use only\n\n# standard C/C++ libraries, you can customize the Makefile to build\n\n# those using other libraries. Once done, without any changes you can\n\n# then build programs using the same or less libraries, even if source\n\n# files are renamed, added or removed. Therefore, it is particularly\n\n# convenient to use it to build codes for experimental or study use.\n\n#\n\n# GNU make is expected to use the Makefile. Other versions of makes\n\n# may or may not work.\n\n#\n\n# Usage:\n\n# ------\n\n# 1. Copy the Makefile to your program directory.\n\n# 2. Customize in the \"Customizable Section\" only if necessary:\n\n#    * to use non-standard C/C++ libraries, set pre-processor or compiler\n\n#      options to <MY_CFLAGS> and linker ones to <MY_LIBS>\n\n#      (See Makefile.gtk+-2.0 for an example)\n\n#    * to search sources in more directories, set to <SRCDIRS>\n\n#    * to specify your favorite program name, set to <PROGRAM>\n\n# 3. Type make to start building your program.\n\n#\n\n# Make Target:\n\n# ------------\n\n# The Makefile provides the following targets to make:\n\n#   $ make           compile and link\n\n#   $ make NODEP=yes compile and link without generating dependencies\n\n#   $ make objs      compile only (no linking)\n\n#   $ make tags      create tags for Emacs editor\n\n#   $ make ctags     create ctags for VI editor\n\n#   $ make clean     clean objects and the executable file\n\n#   $ make distclean clean objects, the executable and dependencies\n\n#   $ make help      get the usage of the makefile\n\n#\n\n#===========================================================================\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Customizable Section: adapt those variables to suit your program.\n\n##==========================================================================\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# The pre-processor and compiler options.\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The linker options.\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The pre-processor options used by the cpp (man cpp for more).\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# The options used in linking as well as in any direct use of ld.\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The directories in which source files reside.\n\n# If not specified, only the current directory will be serached.\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# The executable file name.\n\n# If not specified, current directory name or `a.out' will be used.\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Implicit Section: change the following only when necessary.\n\n##==========================================================================\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# The source file types (headers excluded).\n\n# .c indicates C source files, and others C++ ones.\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# The header file types.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# The pre-processor and compiler options.\n\n# Users can override those variables from the command line.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# The C program compiler.\n\n#CC     = gcc\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# The C++ program compiler.\n\n#CXX    = g++\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Un-comment the following line to compile C programs as C++ ones.\n\n#CC     = $(CXX)\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# The command used to delete file.\n\n#RM     = rm -f\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "## Stable Section: usually no need to be changed. But you can add more.\n\n##==========================================================================\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "## Define some useful variables.\n",
        "Line" : 134,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Delete the default suffixes\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Rules for creating dependency files (.d).\n\n#------------------------------------------\n",
        "Line" : 151,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Rules for generating object files (.o).\n\n#----------------------------------------\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Rules for generating the tags.\n\n#-------------------------------------\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Rules for generating the executable.\n\n#-------------------------------------\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# C program\n",
        "Line" : 225,
        "CharPositionInLine" : 32
      },
      "24" : {
        "Text" : "# C++ program\n",
        "Line" : 228,
        "CharPositionInLine" : 32
      },
      "25" : {
        "Text" : "# Show help.\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Show variables (for debug use only.)\n",
        "Line" : 281,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## End of the Makefile ##  Suggestions are welcome  ## All rights reserved ##\n\n#############################################################################\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 28
    },
    "test/testJS/Makefile" : {
      "ObjectId" : "5f9c9a719200d5a065d23c97848317249be6d0e7",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "test/testlibevent/Makefile.am" : {
      "ObjectId" : "c926f4e6fbddd2d6b39e44380c8e722fbe80cf55",
      "LastModified" : "2018-08-16T01:12:02Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# sample/Makefile.am for libevent\n\n# Copyright 2000-2007 Niels Provos\n\n# Copyright 2007-2012 Niels Provos and Nick Mathewson\n\n#\n\n# See LICENSE for copying information.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 47,
    "MAKEFILE" : 4,
    "AUTOMAKE" : 26
  },
  "ElapsedTime" : 3849
}