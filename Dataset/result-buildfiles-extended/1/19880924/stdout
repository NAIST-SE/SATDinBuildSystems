{
  "Repository" : "19880924",
  "Revision" : "HEAD",
  "ObjectId" : "50da3a8cdedbb6afc90edc9c5c981de9a3c5dc5e",
  "CommitTime" : "2019-04-17T08:59:15Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "fd5eab7f20ed18afd9686839408181ca688ec8d5",
      "LastModified" : "2018-10-11T07:34:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# # Checks using pylint\n\n# Note that we use exit 0 here to not mark the build as a failure on check failure\n\n# In addition, the specified pylint configuration uses the spellchecker plugin. This required python-enchant to be installed.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# # Check using Mypy\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# # Tests\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# # Benchmarks\n\n# add_custom_target(benchmark)\n\n# file(GLOB bench_files tests/benchmarks/*/profile*.py)\n\n# foreach(file ${bench_files})\n\n#     add_custom_command(TARGET benchmark POST_BUILD COMMAND \"PYTHONPATH=${CMAKE_SOURCE_DIR}\" kernprof ARGS -l -v ${file})\n\n# endforeach()\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Documentation\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Extract Strings\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Build Translations\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "CPackConfig.cmake" : {
      "ObjectId" : "b104d646a356c8ab30303435f316af6566b494dd",
      "LastModified" : "2016-11-09T10:44:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/UraniumTests.cmake" : {
      "ObjectId" : "332b24c0f582b51b883d960ddb199ce99d19e3b5",
      "LastModified" : "2018-11-19T15:53:11Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (c) 2018 Ultimaker B.V.\n\n# Uranium is released under the terms of the LGPLv3 or higher.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Add code style test.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/UraniumTranslationTools.cmake" : {
      "ObjectId" : "5d33bae2a96ddab0576f8b2d06b6095ad3f48a36",
      "LastModified" : "2017-08-02T14:50:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## 3rd party code:\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Macro needed to list all sub-directory of a directory.\n\n# There is no function in cmake as far as I know.\n\n# Found at: http://stackoverflow.com/a/7788165\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Translation tools:\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Dynamically creates targets for each language to create a *.po-file\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Dynamically creates targets for each language to create a *.mo-file\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Checks for availability of gettext and when found creates all targets \n\n# TODO: Adding option to set the PROJECT_NAME externally!\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# translations target will convert .po files into .mo and .qm as needed.\n\n# The files are checked for a _qt suffix and if it is found, converted to\n\n# qm, otherwise they are converted to .po.\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 7
    },
    "scripts/ECMPoQmTools.cmake" : {
      "ObjectId" : "382edc8edef2e090137de56543108c50fdb4c4cd",
      "LastModified" : "2015-02-23T15:42:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# ECMPoQmTools\n\n# ------------\n\n#\n\n# This module provides the ``ecm_process_po_files_as_qm`` and\n\n# ``ecm_install_po_files_as_qm`` functions for generating QTranslator (.qm)\n\n# catalogs from Gettext (.po) catalogs, and the ``ecm_create_qm_loader``\n\n# function for generating the necessary code to load them in a Qt application\n\n# or library.\n\n#\n\n# ::\n\n#\n\n#   ecm_process_po_files_as_qm(<lang> [ALL]\n\n#                              [INSTALL_DESTINATION <install_destination>]\n\n#                              PO_FILES <pofile> [<pofile> [...]])\n\n#\n\n# Compile .po files into .qm files for the given language.\n\n#\n\n# If INSTALL_DESTINATION is given, the .qm files are installed in\n\n# ``<install_destination>/<lang>/LC_MESSAGES``. Typically,\n\n# ``<install_destination>`` is set to ``share/locale``.\n\n#\n\n# ``ecm_process_po_files_as_qm`` creates a \"translations\" target. This target\n\n# builds all .po files into .qm files.  If ALL is specified, these rules are\n\n# added to the \"all\" target (and so the .qm files will be built by default).\n\n#\n\n# ::\n\n#\n\n#   ecm_create_qm_loader(<source_files_var> <catalog_name>)\n\n#\n\n# Generates a C++ file which ensures translations are automatically loaded at\n\n# startup. The path of the .cpp file is appended to ``<source_files_var>``.\n\n#\n\n# It assumes that the .qm file for the language code ``<lang>`` is installed as\n\n# ``<sharedir>/locale/<lang>/LC_MESSAGES/<catalog_name>.qm``, where\n\n# ``<sharedir>`` is one of the directories given by the ``GenericDataLocation``\n\n# of ``QStandardPaths``.\n\n#\n\n# Typical usage is like:\n\n#\n\n# .. code-block:: cmake\n\n#\n\n#   set(mylib_SRCS foo.cpp bar.cpp)\n\n#   ecm_create_qm_loader(mylib_SRCS mylib)\n\n#   add_library(mylib ${mylib_SRCS})\n\n#\n\n# ::\n\n#\n\n#   ecm_install_po_files_as_qm(<podir>)\n\n#\n\n# Searches for .po files and installs them to the standard location.\n\n#\n\n# This is a convenience function which relies on all .po files being kept in\n\n# ``<podir>/<lang>/``, where ``<lang>`` is the language the .po files are\n\n# written in.\n\n#\n\n# For example, given the following directory structure::\n\n#\n\n#  po/\n\n#    fr/\n\n#      mylib.po\n\n#\n\n# ``ecm_install_po_files_as_qm(po)`` compiles ``mylib.po`` into ``mylib.mo`` and\n\n# installs it in ``<install_destination>/fr/LC_MESSAGES``.\n\n# ``<install_destination>`` defaults to ``${LOCALE_INSTALL_DIR}`` if defined,\n\n# otherwise it uses ``${CMAKE_INSTALL_LOCALEDIR}`` if that is defined, otherwise\n\n# it uses ``share/locale``.\n\n#\n\n# Since pre-1.0.0.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2007-2009 Kitware, Inc.\n\n# Copyright 2007      Alexander Neundorf <neundorf@kde.org>\n\n# Copyright 2014      Aurélien Gâteau <agateau@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# 1. Redistributions of source code must retain the copyright\n\n#    notice, this list of conditions and the following disclaimer.\n\n# 2. Redistributions in binary form must reproduce the copyright\n\n#    notice, this list of conditions and the following disclaimer in the\n\n#    documentation and/or other materials provided with the distribution.\n\n# 3. The name of the author may not be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n\n# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n\n# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n\n# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n\n# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n\n# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n\n# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n\n#=============================================================================\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Copied from FindGettext.cmake\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# catalog_name is used in ECMQmLoader.cpp.in\n",
        "Line" : 117,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Parse arguments\n",
        "Line" : 124,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Find lrelease and lconvert\n",
        "Line" : 138,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# This gives us Qt5::lrelease but unfortunately no Qt5::lconvert See\n\n# https://bugreports.qt-project.org/browse/QTBUG-37937\n",
        "Line" : 140,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Create commands to turn po files into qm files\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Include ${lang} in build dir because we might be called multiple times\n\n# with the same ${filename_base}\n",
        "Line" : 158,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# lconvert from .po to .ts, then lrelease from .ts to .qm.\n",
        "Line" : 166,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Hook qm files to targets\n",
        "Line" : 183,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 11
    }
  },
  "FileTypes" : {
    "CMAKE" : 5
  },
  "ElapsedTime" : 1841
}