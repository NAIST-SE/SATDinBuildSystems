{
  "Repository" : "7512796",
  "Revision" : "HEAD",
  "ObjectId" : "e1d48185fceed22d6aec11d3cc969ce202be32f9",
  "CommitTime" : "2019-04-18T14:40:46Z",
  "Files" : {
    "AutoSave/CMakeLists.txt" : {
      "ObjectId" : "7e3561a8d52cc7f1c579cd6f8b0fcbfd0d00a7af",
      "LastModified" : "2016-09-13T06:01:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Use CodeLite's macro: CL_INSTALL_PLUGIN which handles both OSX and Linux installation\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "CMakeLists.txt" : {
      "ObjectId" : "054a0088080aad3d2af63aded311a032b4b93e8f",
      "LastModified" : "2019-04-18T10:47:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#################################################################################################################################################################\n\n##                                                                                                                                                              #\n\n## codelite IDE cmake file                                                                                                                                      #\n\n## Typical usage will be (build in release mode):                                                                                                               #\n\n##                                                                                                                                                              #\n\n## > mkdir build                                                                                                                                                #\n\n## > cd build                                                                                                                                                   #\n\n## > cmake -G \"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release ..                                                                                                    #\n\n## > make -jN                                                                                                                                                   #\n\n## > sudo make install                                                                                                                                          #\n\n##                                                                                                                                                              #\n\n## Optional command line arguments:                                                                                                                             #\n\n##                                                                                                                                                              #\n\n##      -DCMAKE_BUILD_TYPE=Release|Debug|DebugFull // Build release, debug + optimisation or debug without optimisation (for others see the Cmake docs)         #\n\n##      -DCL_PREFIX=\"<some-prefix>\"                // Installation prefix. The default on unix is /usr/                                                         #\n\n##      -DWITH_WXC=1|0                             // Build wxCrafter (sources are not part of codelite distribution) default is 0                              #\n\n##      -DCOPY_WX_LIBS=1|0                         // Incorporate the wxWidgets libs into CodeLite so the binary doesn't depend on them. default is 0           #\n\n##      -DPREVENT_WX_ASSERTS=1|0                   // Prevent those annoying wxASSERTS. In release builds the default is 1, in debug 0                          #\n\n##      -DAUTOGEN_REVISION=1|0                     // Should cmake generate makefiles that auto generates the autoversion.cpp file - default is 1               #\n\n##      -DWITH_PCH=1|0                             // Enable Pre Compiled Header?                                                                               #\n\n##      -DUSE_AUI_NOTEBOOK=1|0                     // use custom Notebook or wxWidgets's wxAuiNotebook (default is 0)                                           #\n\n##      -DWITH_WXPATH=<fullpath>                   // Specify a particular wxWidgets build to use. The format must be /path/to/different_wx-config/directory/   #\n\n##      -DMAKE_DEB=1|0                             // When set to 1, you can use make package to create .deb file for codelite                                  #\n\n##      -DENABLE_SFTP=1|0                          // When set to 1 codelite is built with SFTP support. Default is build _with_ SFTP support                   #\n\n##      -DENABLE_LLDB=1|0                          // When set to 0 codelite won't try to build or link to the lldb debugger. Default is 1 on Unix platforms    #\n\n##      -DPHP_BUILD=1|0                            // When set to 1, build CodeLite for PHP / WEB languages without any C++ plugins                             #\n\n#################################################################################################################################################################\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# THIS MUST STAY AT THE TOP OF THE FILE\n",
        "Line" : 31,
        "CharPositionInLine" : 40
      },
      "2" : {
        "Text" : "# Doing this prevents multiple, very verbose warnings about policy CMP0053 not being set\n",
        "Line" : 32,
        "CharPositionInLine" : 30
      },
      "3" : {
        "Text" : "#############################################\n\n## Defaults\n\n#############################################\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Apparently cmake uses $PREFIX internally, so we shouldn't set it ourselves\n",
        "Line" : 47,
        "CharPositionInLine" : 14
      },
      "5" : {
        "Text" : "# Unfortunately this doesn't seem to work. Nor does ENV(PREFIX) or setting it to \"\"\n",
        "Line" : 50,
        "CharPositionInLine" : 19
      },
      "6" : {
        "Text" : "## Generate compile_commands.json file for code completion\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# since cmake 2.8.3\n",
        "Line" : 56,
        "CharPositionInLine" : 28
      },
      "8" : {
        "Text" : "# which seems to be the same, at least in this situation\n",
        "Line" : 59,
        "CharPositionInLine" : 50
      },
      "9" : {
        "Text" : "# Avoid very multiple warnings spam due to deprecated wx methods\n",
        "Line" : 74,
        "CharPositionInLine" : 71
      },
      "10" : {
        "Text" : "# Configure CCache if available\n",
        "Line" : 87,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Is the wx we are using built on gtk2 or 3?\n",
        "Line" : 151,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "########################################\n\n## Override defaults with user input\n\n########################################\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# If the caller hasn't set his own destination, install to a multi-arch lib dir if applicable\n",
        "Line" : 165,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# Prior to this, afaict the GNUInstallDirs module worked whatever the prefix\n\n# Since, it looks at CMAKE_INSTALL_PREFIX which is /usr/local by default, and refuses to run the multiarch-setting code unless it's /usr/\n\n# So, partly to comply with the default documented above, & partly for packaging, explicitly set it to /usr\n",
        "Line" : 168,
        "CharPositionInLine" : 12
      },
      "15" : {
        "Text" : "# defines CMAKE_INSTALL_LIBDIR to lib or lib64 or whatever. Available since cmake 2.8.8\n",
        "Line" : 173,
        "CharPositionInLine" : 33
      },
      "16" : {
        "Text" : "## Try to link-to or build lldb?\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#######################################\n\n## Locate libssh\n\n#######################################\n\n## Enable SFTP support?\n",
        "Line" : 200,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "## Linux\n",
        "Line" : 211,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "## Linux / FreeBSD\n",
        "Line" : 222,
        "CharPositionInLine" : 16
      },
      "20" : {
        "Text" : "## OSX\n",
        "Line" : 225,
        "CharPositionInLine" : 16
      },
      "21" : {
        "Text" : "## OSX\n",
        "Line" : 232,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "## On UNIX we require GTK\n",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Cache the current value\n",
        "Line" : 243,
        "CharPositionInLine" : 56
      },
      "24" : {
        "Text" : "# Reset, else the official path isn't used again :/\n",
        "Line" : 246,
        "CharPositionInLine" : 56
      },
      "25" : {
        "Text" : "## build wxCrafter?\n",
        "Line" : 270,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "## package the wx libs?\n",
        "Line" : 279,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "## file encoding detect\n",
        "Line" : 285,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "## Linux\n",
        "Line" : 287,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "## OSX\n\n#set( LIBUCHARDET_INCLUDE_DIR ${CL_SRC_ROOT}/sdk/uchardet/include)\n\n#set( LIBUCHARDET_LIB ${CL_SRC_ROOT}/sdk/uchardet/lib/osx/uchardet.a)\n",
        "Line" : 296,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "## Will set PLUGINS_DIR to the proper location on Linux / OSX\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "## Under OSX, create the skeleton bundle directory\n",
        "Line" : 310,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "## Allow user to use wxAuiNotebook instead of the native notebook\n",
        "Line" : 327,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#############################################\n\n## Global optimizations\n\n#############################################\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "## Set the libraries outout directory\n",
        "Line" : 347,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "## No optimization, debug info\n",
        "Line" : 362,
        "CharPositionInLine" : 60
      },
      "36" : {
        "Text" : "## In debug, only add NDEBUG if the user says so\n",
        "Line" : 364,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "## Avoid hardening-no-relro wrarning messages from lintian\n",
        "Line" : 376,
        "CharPositionInLine" : 8
      },
      "38" : {
        "Text" : "## strip binaries\n",
        "Line" : 386,
        "CharPositionInLine" : 45
      },
      "39" : {
        "Text" : "## Set the libraries outout directory\n",
        "Line" : 396,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "## Optimize\n",
        "Line" : 408,
        "CharPositionInLine" : 57
      },
      "41" : {
        "Text" : "## Strip binary\n",
        "Line" : 410,
        "CharPositionInLine" : 68
      },
      "42" : {
        "Text" : "## In release, add NDEBUG unless explicitly told not to\n",
        "Line" : 413,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "#############################################\n\n## Determine if 32 or 64 bit\n\n#############################################\n",
        "Line" : 424,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "## replace any tab/space with nothing\n",
        "Line" : 437,
        "CharPositionInLine" : 4
      },
      "45" : {
        "Text" : "# It'll be empty if lsb_release isn't installed, which causes cmake to error out on the next line\n",
        "Line" : 444,
        "CharPositionInLine" : 41
      },
      "46" : {
        "Text" : "##############################################\n\n## CPack\n\n##############################################\n",
        "Line" : 461,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "############################################\n\n## SFTP support\n\n############################################\n",
        "Line" : 498,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "## Default is set to 1\n",
        "Line" : 503,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "###########################################\n\n## RPATH settings\n\n###########################################\n",
        "Line" : 514,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "###########################################\n\n## Add the folders, the order matters here\n\n###########################################\n",
        "Line" : 530,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# On Linux, we use the distro's libsqlite3\n",
        "Line" : 542,
        "CharPositionInLine" : 4
      },
      "52" : {
        "Text" : "#add_subdirectory(Tweaks)\n",
        "Line" : 567,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "## Add valgrind plugin\n",
        "Line" : 602,
        "CharPositionInLine" : 8
      },
      "54" : {
        "Text" : "# wxCrafter is not a core plugin so we include it we find the directory\n",
        "Line" : 612,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "## Executables\n",
        "Line" : 617,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "##\n\n## Setup the proper dependencies\n\n##\n",
        "Line" : 633,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "## Include our custom plugin.cmake module\n",
        "Line" : 652,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "## Scan for user plugins\n",
        "Line" : 655,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 59
    },
    "CMakePlugin/CMakeLists.txt" : {
      "ObjectId" : "5bc6424b8467d77a6fdfbc1096e6ab852255efd0",
      "LastModified" : "2016-09-13T06:01:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# This file is based on QMakePlugin version of the CMakeLists.txt file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Don't support very old versions\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Create variable for plugin name\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define project name\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Find wxWidgets with required components\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# wxWidgets include\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Include paths\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Define some macros about DLL\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Only with precompiled headers\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Add all CPP files\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Define the output - shared library\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Codelite plugins doesn't use the \"lib\" prefix.\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "CallGraph/CMakeLists.txt" : {
      "ObjectId" : "8f201b474b1f3bc4408e454c409b1e33a6548abe",
      "LastModified" : "2016-09-13T06:01:03Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Make sure that the plugin will not start build before 'plugin.so' is ready\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "CodeCompletionsTests/CMakeLists.txt" : {
      "ObjectId" : "ab63a1d9020267c81da4cb65b52a949ad20185f9",
      "LastModified" : "2017-10-17T14:20:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include paths\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define the output\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "CodeDesigner/CMakeLists.txt" : {
      "ObjectId" : "d8f2d857e155f92fb383b2b3ebae01c7f73b1284",
      "LastModified" : "2017-10-17T14:20:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "CodeFormatter/CMakeLists.txt" : {
      "ObjectId" : "3d55bded4f78ef82f272a20ff0f78c4a2982109f",
      "LastModified" : "2017-10-17T14:20:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "CodeLite/CMakeLists.txt" : {
      "ObjectId" : "57bc3751b2f97aa0b64d2ca5ea41c845329dcb3f",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Our project is called 'codelite' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Flex files\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Macros\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Add RPATH\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Define the output\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "CodeLiteDiff/CMakeLists.txt" : {
      "ObjectId" : "851b55053935a270a5f55ec3129358614b8b5ad6",
      "LastModified" : "2017-10-17T14:20:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Don't support very old versions\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create variable for plugin name\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define project name\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find wxWidgets with required components\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define some macros about DLL\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Only with precompiled headers\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Add all CPP files\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define the output - shared library\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Codelite plugins doesn't use the \"lib\" prefix.\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Installation destination\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "ContinuousBuild/CMakeLists.txt" : {
      "ObjectId" : "c4602b855b33e9593eb87ea08ebdb06876ad7076",
      "LastModified" : "2017-10-17T14:20:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "Copyright/CMakeLists.txt" : {
      "ObjectId" : "a4040b0c03fb42f29ca3dae63c767528d36cbd21",
      "LastModified" : "2017-10-17T14:20:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "CxxParserTests/CMakeLists.txt" : {
      "ObjectId" : "9021f79ae004384af5422e27f1bbc6b0889eadbe",
      "LastModified" : "2017-11-02T19:22:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Include paths\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define the output\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "DatabaseExplorer/CMakeLists.txt" : {
      "ObjectId" : "d6955e3d1ce7c8cc7a2dfb9bc9ddc97fca644409",
      "LastModified" : "2017-10-17T14:20:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## On UNIX we require GTK\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Cache the current value\n",
        "Line" : 41,
        "CharPositionInLine" : 56
      },
      "7" : {
        "Text" : "# Reset, else the official path isn't used again :/\n",
        "Line" : 44,
        "CharPositionInLine" : 56
      },
      "8" : {
        "Text" : "# Include paths\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define the output\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "Debugger/CMakeLists.txt" : {
      "ObjectId" : "534df55101462776d02182b96b4189938a33deec",
      "LastModified" : "2017-10-17T14:20:06Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "Docker/CMakeLists.txt" : {
      "ObjectId" : "def51a919aa67fd17011a73614c956cdf025f599",
      "LastModified" : "2018-08-23T06:19:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Use CodeLite's macro: CL_INSTALL_PLUGIN which handles both OSX and Linux installation\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "EditorConfigPlugin/CMakeLists.txt" : {
      "ObjectId" : "f6dc2574ec5dc37246b973fa6e2faf4b2b28583b",
      "LastModified" : "2018-08-23T06:19:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Use CodeLite's macro: CL_INSTALL_PLUGIN which handles both OSX and Linux installation\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "ExternalTools/CMakeLists.txt" : {
      "ObjectId" : "f4d5bfc4dcefc6671bc50e7235c0282349c5c73d",
      "LastModified" : "2018-08-23T06:19:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Installation destination\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "Gizmos/CMakeLists.txt" : {
      "ObjectId" : "29f3f1841be96043cdb3c7425a8f20b80b7511db",
      "LastModified" : "2018-08-23T06:19:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Installation destination\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "HelpPlugin/CMakeLists.txt" : {
      "ObjectId" : "0ca9f48a03e4ecd259b082755e79f1a227a32e5e",
      "LastModified" : "2018-08-23T06:19:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Use CodeLite's macro: CL_INSTALL_PLUGIN which handles both OSX and Linux installation\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "LLDBDebugger/CMakeLists.txt" : {
      "ObjectId" : "063a45007c82d4e6cb758cc6b044ed60ddc04799",
      "LastModified" : "2018-08-23T06:19:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## update search path to include C++11 headers\n",
        "Line" : 25,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "## could not locate an official package, try a custom build\n",
        "Line" : 30,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# Our liblldb.so depends on libedit.so\n",
        "Line" : 31,
        "CharPositionInLine" : 109
      },
      "3" : {
        "Text" : "## lldb requires C++11\n",
        "Line" : 48,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "## Under Apple, we only support monolithic build of wxWidgets\n",
        "Line" : 54,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 60,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "# Include paths\n",
        "Line" : 63,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : "## Definitions\n",
        "Line" : 69,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "## By default, use the sources under the current folder\n",
        "Line" : 74,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# Define the output - shared library\n",
        "Line" : 77,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# Codelite plugins doesn't use the \"lib\" prefix.\n",
        "Line" : 82,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# Installation destination\n",
        "Line" : 91,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 12
    },
    "LLDBDebugger/LLDBProtocol/CMakeLists.txt" : {
      "ObjectId" : "88b1d0f990a663bec7e792bcd056fa156dfb2f39",
      "LastModified" : "2018-08-23T06:19:23Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "LLDBDebugger/codelite-lldb/CMakeLists.txt" : {
      "ObjectId" : "a984c14d5c8f191f82955543bfa244c9696000fa",
      "LastModified" : "2018-08-23T06:19:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Under Apple, we only support monolithic build of wxWidgets\n",
        "Line" : 5,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# codelite-lldb\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "LanguageServer/CMakeLists.txt" : {
      "ObjectId" : "029b1ad786590ba0ff7eb15eeca221daa8836b84",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Use CodeLite's macro: CL_INSTALL_PLUGIN which handles both OSX and Linux installation\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "LiteEditor/CMakeLists.txt" : {
      "ObjectId" : "c0ca2b60f2cd4b674be906071e3fd92d41a0be8b",
      "LastModified" : "2019-03-30T19:43:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Our project is called 'codelite' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Include paths\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Define the output\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## Windows??\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "##################################################################\n\n## Install\n\n##################################################################\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "## Copy binaries / scripts\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "## codelite icons\n",
        "Line" : 86,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "## License file\n",
        "Line" : 91,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "## Manual pages\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "## Copy default configuration files\n",
        "Line" : 99,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "## Create application launcher, copy application icon to standard location\n",
        "Line" : 111,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "## Install icons\n",
        "Line" : 114,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "## 32x32\n",
        "Line" : 116,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "## 64x64\n",
        "Line" : 124,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "## 128x128\n",
        "Line" : 133,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "## 256x256\n",
        "Line" : 141,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# Clear the icon cache if exists\n",
        "Line" : 150,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# If we're packaging with wx2.9\n",
        "Line" : 175,
        "CharPositionInLine" : 34
      },
      "21" : {
        "Text" : "# We need to deduce the location of the wx libs to be installed\n",
        "Line" : 176,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# In recent, multi-architecture, distro versions it'll start with -L/foo/bar\n",
        "Line" : 179,
        "CharPositionInLine" : 46
      },
      "23" : {
        "Text" : "# In recent fedoras, which do things with wx-config that might politely be described as 'strange,  wx-config doesn't emit -L/usr/lib64\n",
        "Line" : 182,
        "CharPositionInLine" : 3
      },
      "24" : {
        "Text" : "# ${WX_LIBS_DIR} will be empty for older, non multi-architecture, distro versions that still use /usr/lib\n",
        "Line" : 187,
        "CharPositionInLine" : 32
      },
      "25" : {
        "Text" : "# Grab the necessary libs\n",
        "Line" : 192,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "# the semicolons make the variable into a list\n",
        "Line" : 194,
        "CharPositionInLine" : 67
      },
      "27" : {
        "Text" : "# We want to replace -l with lib. We also want to exclude imaginary libs called _all.so, which buggy wx-config scripts can invent\n",
        "Line" : 197,
        "CharPositionInLine" : 12
      },
      "28" : {
        "Text" : "# openSUSE have started to use libwx_gtk2u_xrc-suse.so instead of libwx_gtk2u_xrc-3.1, so allow for extra text there\n",
        "Line" : 200,
        "CharPositionInLine" : 16
      },
      "29" : {
        "Text" : "# we need the terminal [.]so because the rpms contain both dynamic and static libs\n",
        "Line" : 202,
        "CharPositionInLine" : 75
      },
      "30" : {
        "Text" : "#install(CODE \"set(INSTALL_DIR \\\"${CL_PREFIX}/${CL_INSTALL_LIBDIR}/codelite\\\")\")\n\n#install(FILES ${CL_SRC_ROOT}/Runtime/codelite-fix-rpath DESTINATION \n\n#        ${CL_PREFIX}/${CL_INSTALL_LIBDIR}/codelite \n\n#        PERMISSIONS \n\n#        ${EXE_PERM})\n\n#install(CODE \"set(SOURCE_DIR \\\"${CL_SRC_ROOT}\\\")\")\n\n#install(SCRIPT \"${CL_SRC_ROOT}/Runtime/codelite_post_install.cmake\")\n",
        "Line" : 208,
        "CharPositionInLine" : 8
      },
      "31" : {
        "Text" : "# !APPLE\n",
        "Line" : 220,
        "CharPositionInLine" : 7
      },
      "CommentCount" : 32
    },
    "MacBundler/CMakeLists.txt" : {
      "ObjectId" : "55c0bc92426c540d6ccfc924a3b28a9acbfb669e",
      "LastModified" : "2018-08-23T06:19:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "MemCheck/CMakeLists.txt" : {
      "ObjectId" : "3d2f53c2e32f2f80769ddd26677f7b3b48ecc39c",
      "LastModified" : "2018-08-23T06:19:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Not supported under OSX\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 10,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 14,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 17,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Include paths\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Define the output\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 51,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Make sure that the plugin will not start build before 'plugin.so' is ready\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 10
    },
    "Outline/CMakeLists.txt" : {
      "ObjectId" : "71145d6e614d1c8e76dba1dab28f84a07eaa2421",
      "LastModified" : "2018-08-23T06:19:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Installation destination\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "PCH/CMakeLists.txt" : {
      "ObjectId" : "07052dc7358ccc170b50fa7b54221a70bffe5565",
      "LastModified" : "2018-08-23T06:19:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Our project is called 'codelite' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "PCH/Makefile" : {
      "ObjectId" : "5c676760158f53ec1ce8f76d42e2da654d39308c",
      "LastModified" : "2018-08-23T06:19:23Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "PHPLint/CMakeLists.txt" : {
      "ObjectId" : "471078a416231a877c3a8f0c915c8b030679217f",
      "LastModified" : "2018-08-23T06:19:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Use CodeLite's macro: CL_INSTALL_PLUGIN which handles both OSX and Linux installation\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "PHPRefactoring/CMakeLists.txt" : {
      "ObjectId" : "0d961ccc3e0e4b9e638dcd9d6d12f9a867c630ea",
      "LastModified" : "2018-08-23T06:19:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Use CodeLite's macro: CL_INSTALL_PLUGIN which handles both OSX and Linux installation\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# install the phprefactor.phar\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "Plugin/CMakeLists.txt" : {
      "ObjectId" : "8fe5397ca23077fdedc5eaaadeb0d1f1d39a7f0b",
      "LastModified" : "2018-08-23T06:19:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Include paths\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "## Macros\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "## On UNIX we require GTK\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Cache the current value\n",
        "Line" : 41,
        "CharPositionInLine" : 56
      },
      "8" : {
        "Text" : "# Reset, else the official path isn't used again :/\n",
        "Line" : 44,
        "CharPositionInLine" : 56
      },
      "9" : {
        "Text" : "# Additional libraries for UNIX-like systems\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Add RPATH\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define the output\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "QmakePlugin/CMakeLists.txt" : {
      "ObjectId" : "e6ecdddaa9521e6f91d04c859895d8874eb47ed3",
      "LastModified" : "2018-08-23T06:19:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Codelite plugins doesn't use the \"lib\" prefix.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Installation destination\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "Runtime/codelite_post_install.cmake" : {
      "ObjectId" : "3b9a4ed6f0267a498dbb3c7fa46054e45f4be3f9",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "Runtime/templates/projects/CMake_Executable/CMakeLists.txt" : {
      "ObjectId" : "1182293e99e2f736f8d6ef411a54ddb067d56253",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Use the variable PROJECT_NAME for changing the target name\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Set our project name\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "## Use all the *.cpp files we found under this folder for the project\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "## Define the executable\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "SFTP/CMakeLists.txt" : {
      "ObjectId" : "51b80e55691a9c5ab079945c34f073efa030d1bd",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Codelite plugins doesn't use the \"lib\" prefix.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Installation destination\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "SmartCompletion/CMakeLists.txt" : {
      "ObjectId" : "ff308fe9c8dfbba2a775babd50de968e697ac182",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Use CodeLite's macro: CL_INSTALL_PLUGIN which handles both OSX and Linux installation\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "SnipWiz/CMakeLists.txt" : {
      "ObjectId" : "18d8db413364036abc27acdc44f81ff69c243a7e",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "SpellChecker/CMakeLists.txt" : {
      "ObjectId" : "36fc8c766d8375c8ae6a7683b107fa6e19caa3bd",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Fedora doesn't create a hunspell->hunspell-1.3 symlink, so explicitly look for (the current) full name\n",
        "Line" : 5,
        "CharPositionInLine" : 12
      },
      "2" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Include paths\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# Define the output\n",
        "Line" : 75,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Codelite plugins doesn't use the \"lib\" prefix.\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Installation destination\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Install Hunspell library\n",
        "Line" : 100,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 11
    },
    "Subversion2/CMakeLists.txt" : {
      "ObjectId" : "c8ee97d1163295b3f51f4b0cfce9321e083c7702",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Codelite plugins doesn't use the \"lib\" prefix.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Installation destination\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "Tail/CMakeLists.txt" : {
      "ObjectId" : "da4dfb6a18b0ddb66b83a51e1e674123e0c5754a",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Use CodeLite's macro: CL_INSTALL_PLUGIN which handles both OSX and Linux installation\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "Tweaks/CMakeLists.txt" : {
      "ObjectId" : "3f1922b708426b85b0ffb5ecd60ad10971c3bd28",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "UnitTest++/BUILD" : {
      "ObjectId" : "9549fa160e7a32719ef9eb0f6072c42953942102",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "BAZEL",
      "CommentCount" : 0
    },
    "UnitTestCPP/CMakeLists.txt" : {
      "ObjectId" : "fc7786c566460535824e05ca49170ad82c3b12b6",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "WebTools/CMakeLists.txt" : {
      "ObjectId" : "131a7a191b099268fc7581a85fd6d7154c170dc7",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "WordCompletion/CMakeLists.txt" : {
      "ObjectId" : "6129e309c7f8b52371aca8393d8a92d647131c45",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "ZoomNavigator/CMakeLists.txt" : {
      "ObjectId" : "cc54d61cb3c59570f3a33e6819d6e6ce7fe73f94",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "abbreviation/CMakeLists.txt" : {
      "ObjectId" : "e4991fc50ece1701181b73c4305e4dc98a5f24b3",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Codelite plugins doesn't use the \"lib\" prefix.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Installation destination\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/Modules/FindClang.cmake" : {
      "ObjectId" : "7c173e570669c9deedf4932fa8d0ee4496a3b61f",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find Clang\n\n#\n\n# It defines the following variables\n\n# CLANG_FOUND        - True if Clang found.\n\n# CLANG_INCLUDE_DIRS - where to find Clang include files\n\n# CLANG_LIBS         - list of clang libs\n\n# CLANG_LDFLAGS      - flags passing for ld\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FIND_AND_ADD_CLANG_LIB(clang)\n\n# Clang shared library provides just the limited C interface, so it\n\n# can not be used.  We look for the static libraries.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/Modules/FindGLIB2.cmake" : {
      "ObjectId" : "942b04530a2b0739e06e3600e205cd0dbf2e4632",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GLib2\n\n# Once done this will define\n\n#\n\n#  GLIB2_FOUND - system has GLib2\n\n#  GLIB2_INCLUDE_DIRS - the GLib2 include directory\n\n#  GLIB2_LIBRARIES - Link these to use GLib2\n\n#\n\n#  HAVE_GLIB_GREGEX_H  glib has gregex.h header and \n\n#                      supports g_regex_match_simple\n\n#\n\n#  Copyright (c) 2006 Andreas Schneider <mail@cynapses.org>\n\n#  Copyright (c) 2006 Philippe Bernery <philippe.bernery@gmail.com>\n\n#  Copyright (c) 2007 Daniel Gollub <dgollub@suse.de>\n\n#  Copyright (c) 2007 Alban Browaeys <prahal@yahoo.com>\n\n#  Copyright (c) 2008 Michael Bell <michael.bell@web.de>\n\n#  Copyright (c) 2008 Bjoern Ricks <bjoern.ricks@googlemail.com>\n\n#\n\n#  Redistribution and use is allowed according to the terms of the New\n\n#  BSD license.\n\n#  For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "## Glib\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Look for glib2 include dir and libraries w/o pkgconfig\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#MESSAGE(STATUS \"Glib headers: ${_glib2_include_DIR}\")\n",
        "Line" : 85,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Handle dependencies\n\n# libintl\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# libiconv\n",
        "Line" : 142,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "##\n",
        "Line" : 186,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# show the GLIB2_INCLUDE_DIRS and GLIB2_LIBRARIES variables only in the advanced view\n",
        "Line" : 202,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Check if system has a newer version of glib\n\n# which supports g_regex_match_simple\n",
        "Line" : 210,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# Reset CMAKE_REQUIRED_INCLUDES\n",
        "Line" : 215,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 11
    },
    "cmake/Modules/FindGTK3.cmake" : {
      "ObjectId" : "22fddbdce3b6b00ee653618fbd301984208f1d22",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Taken from: Remmina - The GTK+ Remote Desktop Client\n\n#\n\n# Copyright (C) 2011 Marc-Andre Moreau\n\n#\n\n# This program is free software; you can redistribute it and/or modify\n\n# it under the terms of the GNU General Public License as published by\n\n# the Free Software Foundation; either version 2 of the License, or\n\n# (at your option) any later version.\n\n#\n\n# This program is distributed in the hope that it will be useful,\n\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n# GNU General Public License for more details.\n\n#\n\n# You should have received a copy of the GNU General Public License\n\n# along with this program; if not, write to the Free Software\n\n# Foundation, Inc., 59 Temple Place, Suite 330, \n\n# Boston, MA 02111-1307, USA.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Gtk\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Gdk\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Gdk-Pixbuf\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Glib\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Pango\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Cairo\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Atk\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Finalize\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/Modules/FindLLVM.cmake" : {
      "ObjectId" : "a9a0aa9e4ef39d56bfd555cb3d9e90556ac2f563",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find LLVM\n\n#\n\n# It defines the following variables\n\n#  LLVM_FOUND        - True if llvm found.\n\n#  LLVM_INCLUDE_DIRS - where to find llvm include files\n\n#  LLVM_LIBRARY_DIRS - where to find llvm libs\n\n#  LLVM_CFLAGS       - llvm compiler flags\n\n#  LLVM_LDFLAGS      - llvm linker flags\n\n#  LLVM_MODULE_LIBS  - list of llvm libs for working with modules.\n\n#  LLVM_SYSTEM_LIBS  - list of 3rdparty libraries needed to link.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/Modules/FindLibClang.cmake" : {
      "ObjectId" : "529ab0a706ace144f54ffe25d90a9b8139564839",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# For fedora\n",
        "Line" : 20,
        "CharPositionInLine" : 21
      },
      "1" : {
        "Text" : "# For fedora\n",
        "Line" : 51,
        "CharPositionInLine" : 18
      },
      "2" : {
        "Text" : "## Check to see if we have a recent version of clang to include clang_getBriefComment\n",
        "Line" : 64,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 3
    },
    "cmake/Modules/FindLibLLDB.cmake" : {
      "ObjectId" : "794063b780cddf67b193197a394fd9a0dff8c74d",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Locate the official packages\n",
        "Line" : 3,
        "CharPositionInLine" : 8
      },
      "1" : {
        "Text" : "#/usr/lib/llvm-3.7/lib\n",
        "Line" : 16,
        "CharPositionInLine" : 21
      },
      "2" : {
        "Text" : "# For fedora\n",
        "Line" : 21,
        "CharPositionInLine" : 21
      },
      "3" : {
        "Text" : "#/usr/lib/llvm-3.7/include \n",
        "Line" : 35,
        "CharPositionInLine" : 18
      },
      "4" : {
        "Text" : "#/usr/include/llvm-3.7 \n",
        "Line" : 45,
        "CharPositionInLine" : 18
      },
      "5" : {
        "Text" : "# For fedora\n",
        "Line" : 52,
        "CharPositionInLine" : 18
      },
      "CommentCount" : 6
    },
    "cmake/Modules/FindSqlite3.cmake" : {
      "ObjectId" : "d39f5a4e641cdf1146e2ae503995982c9a6513be",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/Modules/OSXInstall.cmake" : {
      "ObjectId" : "bb6920edb677f06e894bd9c5a768fabdac3b627e",
      "LastModified" : "2019-04-10T07:51:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#------------------------------------------------------------------------------------\n\n# A useful macro that accepts the string \n\n# the search string and runs install_name_tool\n\n# to set it to the @executable_path\n\n#------------------------------------------------------------------------------------\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# In recent, multi-architecture, distro versions it'll start with -L/foo/bar\n",
        "Line" : 75,
        "CharPositionInLine" : 50
      },
      "2" : {
        "Text" : "# Skip the -l\n",
        "Line" : 81,
        "CharPositionInLine" : 52
      },
      "3" : {
        "Text" : "# execute the macro once this file is included\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#--------------------------------------------------------------------\n\n# Install a file into \n\n# /usr/lib/codelite/share or codelite.app/Contents/SharedSupport\n\n#--------------------------------------------------------------------\n",
        "Line" : 91,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#------------------------------------\n\n# install a plugin\n\n#------------------------------------\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#------------------------------------\n\n# install a library (shared object, but not a plugin)\n\n#------------------------------------\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#------------------------------------\n\n# install an executable\n\n#------------------------------------\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# On non OSX, we place the non plugins next to the plugins\n",
        "Line" : 140,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# On non OSX, we place the non plugins next to the plugins\n",
        "Line" : 143,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "#------------------------------------\n\n# install a debugger shared library\n\n#------------------------------------\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# now that the plugin is installed, run install_name_tool\n",
        "Line" : 154,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "#-------------------------------------------------\n\n# Prepare a skeleton bundle for CodeLite\n\n#-------------------------------------------------\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Copy Info.plist\n",
        "Line" : 201,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "## Copy external libraries into the bundle folder\n",
        "Line" : 207,
        "CharPositionInLine" : 8
      },
      "15" : {
        "Text" : "## Copy Terminal.app launcher script\n",
        "Line" : 220,
        "CharPositionInLine" : 8
      },
      "16" : {
        "Text" : "## Copy pre-built binaries\n",
        "Line" : 226,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "## Copy and fix libclang.dylib / liblldb\n",
        "Line" : 231,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "## codelite-clang-format\n",
        "Line" : 237,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "## folders\n",
        "Line" : 245,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "#        execute_process(COMMAND \n\n#                        install_name_tool -change @rpath/libclang.dylib @executable_path/../MacOS/libclang.dylib \n\n#                        ${CMAKE_BINARY_DIR}/codelite.app/Contents/MacOS/codelite)\n",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 21
    },
    "cmake/Modules/plugin.cmake" : {
      "ObjectId" : "5b758781951def2d599ecd15fe28f4ae66fc8d0e",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CodeLite plugin function.\n\n# Usage:\n\n#\n\n# CL_PLUGIN( \"MyPlugin\" )\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##\n\n## Include wxWidgets\n\n##\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "## Windows\n",
        "Line" : 19,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "## Under Apple, we only support monolithic build of wxWidgets\n",
        "Line" : 27,
        "CharPositionInLine" : 12
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 37,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "## Definitions\n",
        "Line" : 43,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "## PreCompiled header support\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "## By default, use the sources under the current folder\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Define the output - shared library\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Codelite plugins doesn't use the \"lib\" prefix.\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Installation destination\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Scan the top level folders of the source tree, if a folder exists and it contains the a file \n\n# named \"codelite-plugin.cmake\" in it, automatically include it\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "codelite_echo/CMakeLists.txt" : {
      "ObjectId" : "c9e142eb7f19d7849d4c1880c783cdffc2f38c59",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Our project is called 'codelite' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# prepare list of files\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define the output\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "codelite_make/CMakeLists.txt" : {
      "ObjectId" : "20174cf00e2e261790db9693777c18301cf73ea5",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Our project is called 'codelite' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n\n#include( \"${wxWidgets_USE_FILE}\" )\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Include paths\n\n#include_directories(\"${CL_SRC_ROOT}/Plugin\" \"${CL_SRC_ROOT}/sdk/wxsqlite3/include\" \"${CL_SRC_ROOT}/CodeLite\" \"${CL_SRC_ROOT}/PCH\" \"${CL_SRC_ROOT}/Interfaces\")\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# we need wxWidgets flags to be set only for the c++ files, so we do it like this\n\n# by setting the CMAKE_CXX_FLAGS\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# prepare list of files\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# and finally prepare list of includes directories\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Define the output\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "codelite_terminal/CMakeLists.txt" : {
      "ObjectId" : "4e894a72d43883d73eaa4306b12244d091a9d757",
      "LastModified" : "2019-04-10T07:51:36Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Our project is called 'codelite' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# we need wxWidgets flags to be set only for the c++ files, so we do it like this\n\n# by setting the CMAKE_CXX_FLAGS\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# prepare list of files\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define the output\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# @executable_path/../../../\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 6
    },
    "codelite_vim/CMakeLists.txt" : {
      "ObjectId" : "b07f54df0fde450857894d54ba1acadca80101ee",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#add_definitions(-DASTYLE_LIB)\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -g -O0\")        ## No optimization, debug info\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#add_dependencies(plugin libcodelite)\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define the output\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Use CodeLite's macro: CL_INSTALL_PLUGIN which handles both OSX and Linux installation\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "codelitegcc/CMakeLists.txt" : {
      "ObjectId" : "f55faacbd910bff0ae58946cd7c43b71f7027a0f",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Our project is called 'codelite' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Define the output\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "codelitephp/CMakeLists.txt" : {
      "ObjectId" : "d6ccf8292cd50e6dca2479f866e51a178ebd576e",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Validate that -DCL_SRC_ROOT was passed\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Include paths\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "## Debug build of codelite\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "## Release build of codelite\n",
        "Line" : 54,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# Define the output\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Installation destination\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "cppchecker/CMakeLists.txt" : {
      "ObjectId" : "10d90486e53118965dddc24592e01c5f25fc49fa",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cscope/CMakeLists.txt" : {
      "ObjectId" : "94a7c71e9c91eecbb2183996e012363d2ef3ffcb",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "git/CMakeLists.txt" : {
      "ObjectId" : "4bb6079bccfe7ab12710a7749a941b160fe087c0",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "sdk/asio-1.12.1/Makefile.am" : {
      "ObjectId" : "2bfb01772e9a5715a718e1ad21e28a6cef904676",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "# find . -name \"*.*pp\" | sed -e 's/^\\.\\///' | sed -e 's/^.*$/  & \\\\/' | sort\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "sdk/codelite_cppcheck/CMakeLists.txt" : {
      "ObjectId" : "a12705f71ffa4c6a4ae1b079cb8b03df9dca2963",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Our project is called 'codelite' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include paths\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# CppChecker 1.63 requires files stored in cfg/ at run-time.  For some daft reason, it only looks for this by default inside ${BINDIR/},\n\n# which (at least for Linux) is _not_ the correct location. So we have to set an alternative place, and tell it at *compile-time*.\n\n# AFAICT you can't just add an env var at run-time :/\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define the output\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "sdk/codelite_cppcheck/externals/externals.pri" : {
      "ObjectId" : "e9c6cf5c11d5f4b89638fc7581716a71b7ec2503",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "sdk/codelite_indexer/CMakeLists.txt" : {
      "ObjectId" : "b6d5e3c0f1c96c8f371e8c76dae3fbba43886cc5",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Our project is called 'codelite' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n\n#include( \"${wxWidgets_USE_FILE}\" )\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Include paths\n\n#include_directories(\"${CL_SRC_ROOT}/Plugin\" \"${CL_SRC_ROOT}/sdk/wxsqlite3/include\" \"${CL_SRC_ROOT}/CodeLite\" \"${CL_SRC_ROOT}/PCH\" \"${CL_SRC_ROOT}/Interfaces\")\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# we need wxWidgets flags to be set only for the c++ files, so we do it like this\n\n# by setting the CMAKE_CXX_FLAGS\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# prepare list of files\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# we require this macro to be set to true\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# and finally prepare list of includes directories\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Define the output\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "sdk/databaselayer/CMakeLists.txt" : {
      "ObjectId" : "23907a5adce0c4ffa0def39d5211f1ed295ebf73",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Our project is called 'databaselayersqlite' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Include paths\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Macros\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Recent (2019) versions of debian and Arch have mariadb 10.3 which, it seems, isn't directly compatable with the included dblayer source\n\n# It has a necessary header file in /usr/include/mariadb/server/ so flag to #include it if it exists\n\n# See https://github.com/eranif/codelite/issues/2215\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Define the output\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "sdk/libssh/include/libssh/CMakeLists.txt" : {
      "ObjectId" : "78ee1c61d8447227a9907b15036ecd0c8b48c78d",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sdk/websocketpp/websocketpp/CMakeLists.txt" : {
      "ObjectId" : "3ea8cc1c4e66a8bf34278d90c941f3f6cd06c2b0",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "sdk/wxshapeframework/CMakeLists.txt" : {
      "ObjectId" : "308cec4cc5c2814e2eebee1fa7b3e79eeea38514",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Our project is called 'wxshapeframework' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Define the output\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "sdk/wxsqlite3/CMakeLists.txt" : {
      "ObjectId" : "963a07fc931f4210029c763ca033518ccd348459",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Our project is called 'wxsqlite3' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# When building wxsqlite3, use MAKINGDLL \n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# For convenience we define the sources as a variable. You can add \n\n# header files and cpp/c files and CMake will sort them out\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "sqlite3/CMakeLists.txt" : {
      "ObjectId" : "88cef0edf2b9da30dd140e5e5191e59cfa689a28",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Our project is called 'sqlite3' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# For convenience we define the sources as a variable. You can add \n\n# header files and cpp/c files and CMake will sort them out\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Define the output\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#install(TARGETS sqlite3 DESTINATION ${PLUGINS_DIR})\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "wxcrafter/CMakeLists.txt" : {
      "ObjectId" : "e3e7605c81216bf17cc1fa6f0e86f4eb991811dc",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Apple, monolithic build of wxWidgets\n",
        "Line" : 35,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add RPATH\n\n## When building an application, set the install library to the proper location \n\n## which is now under /usr/lib/x86_64-linux-gnu/wxcrafter\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# If the caller hasn't set his own destination, install to a multi-arch lib dir if applicable\n",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# defines CMAKE_INSTALL_LIBDIR to lib or lib64 or whatever. Available since cmake 2.8.8\n",
        "Line" : 70,
        "CharPositionInLine" : 37
      },
      "9" : {
        "Text" : "# Define the output\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "## wxCrafter as codelite's plugin\n",
        "Line" : 125,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "## Installing an application\n",
        "Line" : 133,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "## Install codelite lexer files\n",
        "Line" : 147,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "##############################################\n\n## CPack\n\n##############################################\n",
        "Line" : 157,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#################################################################\n\n## We need to deduce the location of the wx libs to be installed\n\n#################################################################\n",
        "Line" : 169,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# In recent, multi-architecture, distro versions it'll start with -L/foo/bar\n",
        "Line" : 173,
        "CharPositionInLine" : 42
      },
      "17" : {
        "Text" : "# ${WX_LIBS_DIR} will be empty for older, non multi-architecture, distro versions that still use /usr/lib\n",
        "Line" : 176,
        "CharPositionInLine" : 36
      },
      "18" : {
        "Text" : "# Grab the necessary libs\n",
        "Line" : 180,
        "CharPositionInLine" : 4
      },
      "19" : {
        "Text" : "# the semicolons make the variable into a list\n",
        "Line" : 182,
        "CharPositionInLine" : 63
      },
      "20" : {
        "Text" : "# We want to replace -l with lib. We also want to exclude imaginary libs called _all.so, which buggy wx-config scripts can invent\n",
        "Line" : 185,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# we need the terminal [.]so because the rpms contain both dynamic and static libs\n",
        "Line" : 188,
        "CharPositionInLine" : 67
      },
      "22" : {
        "Text" : "#required\n",
        "Line" : 198,
        "CharPositionInLine" : 79
      },
      "CommentCount" : 23
    },
    "wxformbuilder/CMakeLists.txt" : {
      "ObjectId" : "a61edc1459d48c1c42be70b091aac3ef691c696a",
      "LastModified" : "2019-03-30T16:54:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# define minimum cmake version\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set the plugin name here\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Our project is called 'plugin' this is how it will be called in\n\n# visual studio, and in our makefiles. \n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# It was noticed that when using MinGW gcc it is essential that 'core' is mentioned before 'base'.\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# wxWidgets include (this will do all the magic to configure everything)\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Include paths\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Define the output\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Remove the \"lib\" prefix from the plugin name\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    }
  },
  "FileTypes" : {
    "CMAKE" : 74,
    "QMAKE" : 1,
    "MAKEFILE" : 1,
    "AUTOMAKE" : 1,
    "BAZEL" : 1
  },
  "ElapsedTime" : 14154
}