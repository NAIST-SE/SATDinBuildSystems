{
  "Repository" : "25132954",
  "Revision" : "HEAD",
  "ObjectId" : "0a64927e639454175803c1746141bd9288af8b29",
  "CommitTime" : "2018-07-31T23:39:09Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "cd72a3a2c1d4a26abfc7dfafe978ac2108af1815",
      "LastModified" : "2017-09-09T23:47:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Tomographer project, which is distributed under the\n\n# terms of the MIT license.\n\n# \n\n# The MIT License (MIT)\n\n# \n\n# Copyright (c) 2016 ETH Zurich, Institute for Theoretical Physics, Philippe Faist\n\n# Copyright (c) 2017 Caltech, Institute for Quantum Information and Matter, Philippe Faist\n\n# \n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n# \n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set TOMOGRAPHER_VERSION and PROJECT_VERSION\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# default to release build with debugging info\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ==============================================================================\n\n# Find specific features and packages\n\n# ==============================================================================\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Using \"if(NOT mypackage_FOUND)\" for the find_package() directives below allows the user\n\n# to specify custom values to configurations (such as explicitly turning off OpenMP) and\n\n# not being interfered with by a call to find_package().\n\n#\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Find Eigen3 package\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Find OpenMP\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Find system threads compiler flags (e.g. -pthread, in order to use std::thread on gcc)\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# See if we have C++11 threads available.  This also takes care of checking for\n\n# TOMOGRAPHER_USE_MINGW_STD_THREAD\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Find boost headers (math, ...) \n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n# More find_package calls appear below, depending on which targets are being compiled\n\n#\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# activate warning flags on DEBUG and RELWITHDEBINFO builds\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# NOTE: By default GCC/G++ uses a LOT of RAM (g++ 6.2 with 4GB was not working well).\n\n# [Clang-3.9 was very good by comparison.]  You can instruct gcc to use less RAM by\n\n# fiddling around with the options \"--param ggc-min-expand=10 --param\n\n# ggc-min-heapsize=32768\", or \"--param ggc-min-expand=0 --param ggc-min-heapsize=8192\" if\n\n# you want to be even more conservative.\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# optimization flags for computer architecture.\n\n# -> use -DTARGET_ARCHITECTURE=none to not pass \"-m...\" options to compiler at all\n\n# -> use -DTARGET_ARCHITECTURE=generic to disable simd instruction sets\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# ==============================================================================\n\n# Documentation Target\n\n# ==============================================================================\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# the master documentation target\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# C++ documentation target\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "17" : {
        "Text" : "# to make sure the version file is set up properly\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Python documentation target\n",
        "Line" : 130,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# ==============================================================================\n\n# Set up Install Targets\n\n# ==============================================================================\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Where to install stuff -- may be overridden by user by setting the corresponding\n\n# variable in the cache\n\n#\n\n# Headers\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#\n\n# TomographerConfig.cmake  for imported targets\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Set up uninstall target\n",
        "Line" : 170,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Install README into documentation directory\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Exported targets\n",
        "Line" : 184,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# taken from CMakeLists.txt in Eigen's sources: ---\n\n#\n\n# Remove CMAKE_SIZEOF_VOID_P from ***ConfigVersion.cmake since we do not depend\n\n# on architecture specific settings or libraries. More specifically, an\n\n# ***Config.cmake generated from a 64 bit target can be used for 32 bit targets\n\n# as well (and vice versa).\n",
        "Line" : 190,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# ==============================================================================\n\n# The basic tomographer header-only C++ template library\n\n# ==============================================================================\n",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# there are essentially two things to do: set up tomographer_version.h (obtaining the\n\n# current version from git-describe or explicit VERSION file), and define the install\n\n# target.\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ==============================================================================\n\n# Build Tomorun?\n\n# ==============================================================================\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Find MatIO library (https://sourceforge.net/projects/matio/)\n\n#if(NOT MATIO_FOUND)\n",
        "Line" : 224,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "#endif(NOT MATIO_FOUND)\n\n# ... which requires the libz library\n\n#if(NOT ZLIB_FOUND)\n",
        "Line" : 227,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "#endif(NOT ZLIB_FOUND)\n",
        "Line" : 231,
        "CharPositionInLine" : 2
      },
      "32" : {
        "Text" : "# Boost program_options\n",
        "Line" : 233,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# can we use the nice() function to reduce the process priority?\n",
        "Line" : 238,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# ==============================================================================\n\n# Build Python interface library module?\n\n# ==============================================================================\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Use pybind11\n\n#\n\n# Need >= 2.2 (some API changes)\n\n#\n",
        "Line" : 261,
        "CharPositionInLine" : 2
      },
      "36" : {
        "Text" : "# All these dependencies will be found using pybind11's stuff.\n\n#\n\n# # We need python and boost::python\n\n# find_package(PythonLibs REQUIRED)\n\n# find_package(Boost 1.40 COMPONENTS python REQUIRED)\n\n#\n\n# # We need NumPy also\n\n# find_package(NumPy 1.7 REQUIRED)\n",
        "Line" : 267,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# ==============================================================================\n\n# Tests?\n\n# ==============================================================================\n",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# not hard requirement, will just have a failing test if MPI is not enabled\n",
        "Line" : 306,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# not required\n",
        "Line" : 308,
        "CharPositionInLine" : 56
      },
      "40" : {
        "Text" : "# LAPACK is required in some tests (but not for tomorun)\n",
        "Line" : 310,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "# find the python executable -- used to run the tests for the python interface\n",
        "Line" : 319,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# Enable testing for the project\n",
        "Line" : 324,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 43
    },
    "cmake/CreateDoxyfile.cmake" : {
      "ObjectId" : "768179ff19479037672061b5fd6c334eec3c1064",
      "LastModified" : "2017-02-22T08:08:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Tomographer project, which is distributed under the\n\n# terms of the MIT license.\n\n# \n\n# The MIT License (MIT)\n\n# \n\n# Copyright (c) 2015 ETH Zurich, Institute for Theoretical Physics, Philippe Faist\n\n# Copyright (c) 2017 Caltech, Institute for Quantum Information and Matter, Philippe Faist\n\n# \n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n# \n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Set up the Doxygen configuration file with correct TOMOGRAPHER Version.\n\n# \n\n# Also create a corresponding tomographer_VERSION file which contains the raw\n\n# version. This is useful, e.g. for the doxygen documentation.\n\n# \n\n# Required variables:\n\n#  - VersionFile\n\n#  - RootSourceDir\n\n#  - TargetDoxyfileDir\n\n# \n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# TOMOGRAPHER_VERSION is set.\n\n#\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindEigen3.cmake" : {
      "ObjectId" : "ef0707cb3055daf6cdfa1771b2f7457dc95fedae",
      "LastModified" : "2017-02-22T08:08:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Eigen3 lib\n\n#\n\n# This module supports requiring a minimum version, e.g. you can do\n\n#   find_package(Eigen3 3.1.2)\n\n# to require version 3.1.2 or newer of Eigen3.\n\n#\n\n# Once done this will define\n\n#\n\n#  EIGEN3_FOUND - system has eigen lib with correct version\n\n#  EIGEN3_INCLUDE_DIR - the eigen include directory\n\n#  EIGEN3_VERSION - eigen version\n\n#\n\n# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>\n\n# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>\n\n# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>\n\n#\n\n# Redistribution and use is allowed according to the terms of the 2-clause BSD\n\n# license:\n\n#\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are met:\n\n# \n\n# 1. Redistributions of source code must retain the above copyright notice, this\n\n# list of conditions and the following disclaimer.\n\n# \n\n# 2. Redistributions in binary form must reproduce the above copyright notice,\n\n# this list of conditions and the following disclaimer in the documentation\n\n# and/or other materials provided with the distribution.\n\n# \n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n\n# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# in cache already\n",
        "Line" : 84,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "cmake/FindMatIO.cmake" : {
      "ObjectId" : "5ffaf43f3bf24f7c8ee80cd4f9af822e6a2c8bfc",
      "LastModified" : "2017-02-22T08:08:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Tomographer project, which is distributed under the\n\n# terms of the MIT license.\n\n# \n\n# The MIT License (MIT)\n\n# \n\n# Copyright (c) 2015 ETH Zurich, Institute for Theoretical Physics, Philippe Faist\n\n# Copyright (c) 2017 Caltech, Institute for Quantum Information and Matter, Philippe Faist\n\n# \n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n# \n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find MatIO library\n\n#\n\n# This script defines the following variables:\n\n#\n\n#  MATIO_FOUND - MatIO was found on this system\n\n#  MATIO_INCLUDE_DIRS - include directories (for -I flags)\n\n#  MATIO_LIBRARIES - libraries needed to link to MatIO\n\n#  MATIO_DEFINITIONS - Compiler definitions needed for MatIO\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set MATIO_FOUND to TRUE\n\n# if all listed variables are TRUE\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/FindNumPy.cmake" : {
      "ObjectId" : "3f65fd648244c1d83ffdaceef1f84cdb9a36f1aa",
      "LastModified" : "2017-02-22T08:08:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# https://gitlab.enseeiht.fr/abcd/abcd/raw/40a9ffc3cd9d0733dcc82ef22c1b25eea134346b/python/numpy/libs/numpy/cmake/FindNumPy.cmake\n\n#\n\n# - Find the NumPy libraries\n\n# This module finds if NumPy is installed, and sets the following variables\n\n# indicating where it is.\n\n#\n\n# TODO: Update to provide the libraries and paths for linking npymath lib.\n\n#\n\n#  NUMPY_FOUND               - was NumPy found\n\n#  NUMPY_VERSION             - the version of NumPy found as a string\n\n#  NUMPY_VERSION_MAJOR       - the major version number of NumPy\n\n#  NUMPY_VERSION_MINOR       - the minor version number of NumPy\n\n#  NUMPY_VERSION_PATCH       - the patch version number of NumPy\n\n#  NUMPY_VERSION_DECIMAL     - e.g. version 1.6.1 is 10601\n\n#  NUMPY_INCLUDE_DIRS        - path to the NumPy include files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#============================================================================\n\n# Copyright (c) 2012 Continuum Analytics, Inc.\n\n#\n\n# MIT License\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining\n\n# a copy of this software and associated documentation files\n\n# (the \"Software\"), to deal in the Software without restriction, including\n\n# without limitation the rights to use, copy, modify, merge, publish,\n\n# distribute, sublicense, and/or sell copies of the Software, and to permit\n\n# persons to whom the Software is furnished to do so, subject to\n\n# the following conditions:\n\n# \n\n# The above copyright notice and this permission notice shall be included\n\n# in all copies or substantial portions of the Software.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n\n# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n\n# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n\n# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n\n# OTHER DEALINGS IN THE SOFTWARE.\n\n# \n\n#============================================================================\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Finding NumPy involves calling the Python interpreter\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Convert the process output into a list\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Make sure all directory separators are '/'\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Get the major and minor version numbers\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/FindSphinx.cmake" : {
      "ObjectId" : "9b0be44c84fe2764dfe9e69f0d064480ea562e1c",
      "LastModified" : "2017-02-22T08:08:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Tomographer project, which is distributed under the\n\n# terms of the MIT license.\n\n#\n\n# The MIT License (MIT)\n\n#\n\n# Copyright (c) 2016 ETH Zurich, Institute for Theoretical Physics, Philippe Faist\n\n# Copyright (c) 2017 Caltech, Institute for Quantum Information and Matter, Philippe Faist\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/TomographerVersion.cmake" : {
      "ObjectId" : "f2809c463fb3ffa61a66045e04236d52df0d1cc1",
      "LastModified" : "2017-04-09T22:54:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Tomographer project, which is distributed under the\n\n# terms of the MIT license.\n\n# \n\n# The MIT License (MIT)\n\n# \n\n# Copyright (c) 2015 ETH Zurich, Institute for Theoretical Physics, Philippe Faist\n\n# Copyright (c) 2017 Caltech, Institute for Quantum Information and Matter, Philippe Faist\n\n# \n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n# \n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set TOMOGRAPHER_VERSION\n",
        "Line" : 55,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# not sure we got GIT, don't bother end users because we've got our version from the\n\n# text file\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# read version number from ``git describe --tags`` automatically, etc.\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Also, add compilation hook that will update the tomographer_version.h whenever the git\n\n# description changes.\n",
        "Line" : 80,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# don't try to update, won't find git repo\n",
        "Line" : 89,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "################################################################################\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# parse TOMOGRAPHER_VERSION\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/UpdateTomographerGitVersion.cmake" : {
      "ObjectId" : "8b09202ea8d4ac95b395b6d85cc28ff85d58fe88",
      "LastModified" : "2017-02-22T08:08:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Tomographer project, which is distributed under the\n\n# terms of the MIT license.\n\n# \n\n# The MIT License (MIT)\n\n# \n\n# Copyright (c) 2015 ETH Zurich, Institute for Theoretical Physics, Philippe Faist\n\n# Copyright (c) 2017 Caltech, Institute for Quantum Information and Matter, Philippe Faist\n\n# \n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n# \n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# Update the version by querying GIT-DESCRIBE.\n\n#\n\n# Updates the file \"${CMAKE_BINARY_DIR}/gitVERSION\" according to the git version. If the\n\n# version hasn't changed, the file is not touched.\n\n#\n\n# MUST BE DEFINED:\n\n#  - GitVersionStampFile\n\n#  - GitDescribeGetVersionCommand\n\n#\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(STATUS \"UpdateTomographerGitVersion -- stamp `${GitVersionStampFile}' with command parts ${GitDescribeGetVersionCommand}\")\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# set TOMOGRAPHER_VERSION\n",
        "Line" : 46,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# all set, don't need to update anything\n",
        "Line" : 58,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# update the version in 'gitVERSION'\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 6
    },
    "cmake/UpdateTomographerVersionHeader.cmake" : {
      "ObjectId" : "f9c8fade07ba9a403e453bbe31347f0223131056",
      "LastModified" : "2017-02-22T08:08:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Tomographer project, which is distributed under the\n\n# terms of the MIT license.\n\n# \n\n# The MIT License (MIT)\n\n# \n\n# Copyright (c) 2015 ETH Zurich, Institute for Theoretical Physics, Philippe Faist\n\n# Copyright (c) 2017 Caltech, Institute for Quantum Information and Matter, Philippe Faist\n\n# \n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n# \n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# \n\n# Configure the tomographer_version.h.in file.\n\n# \n\n# Also create a corresponding tomographer_VERSION file which contains the raw\n\n# version. This is useful e.g. for the doxygen documentation.\n\n# \n\n# Required variables:\n\n#     - VersionFile  OR  TOMOGRAPHER_VERSION\n\n#     - TomographerBinaryDir\n\n#     - TomographerSourceDir\n\n# \n\n# those last directories must point to the 'cxx/tomographer/' directories in the binary\n\n# and source tree, respectively.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(STATUS \"VersionFile=${VersionFile}\")\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#message(STATUS \"Tomographer Version is ${TOMOGRAPHER_VERSION}\")\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# Parse version MAJ/MIN/SUFFIX\n\n#\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# TOMOGRAPHER_VERSION is set.\n\n#\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "cmake/Util.cmake" : {
      "ObjectId" : "3fb48db9b77a09bf910dc2f2c8267acc2964a0fa",
      "LastModified" : "2017-05-27T01:42:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Tomographer project, which is distributed under the\n\n# terms of the MIT license.\n\n# \n\n# The MIT License (MIT)\n\n# \n\n# Copyright (c) 2016 ETH Zurich, Institute for Theoretical Physics, Philippe Faist\n\n# Copyright (c) 2017 Caltech, Institute for Quantum Information and Matter, Philippe Faist\n\n# \n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n# \n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "################################################################################\n\n################################## UTILITIES ###################################\n\n################################################################################\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# # http://stackoverflow.com/a/7216542\n\n# function(ListJoin VALUES GLUE OUTPUT)\n\n#   string (REGEX REPLACE \"([^\\\\]|^);\" \"\\\\1${GLUE}\" _TMP_STR \"${VALUES}\")\n\n#   string (REGEX REPLACE \"[\\\\](.)\" \"\\\\1\" _TMP_STR \"${_TMP_STR}\") #fixes escaping\n\n#   set (${OUTPUT} \"${_TMP_STR}\" PARENT_SCOPE)\n\n# endfunction()\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# macro(AppendTargetProperty tgt property value)\n\n#   set(new_property_value \"${value}\")\n\n#   get_target_property(existing_property_value ${tgt} ${property})\n\n#   if(existing_property_value)\n\n#     set(new_property_value \"${existing_property_value} ${new_property_value}\")\n\n#   endif()\n\n#   set_target_properties(${tgt} PROPERTIES ${property} \"${new_property_value}\")\n\n# endmacro(AppendTargetProperty)\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# macro(SetOpenMPTarget target)\n\n#   if(OPENMP_FOUND)\n\n#     #OpenMP_C_FLAGS   - flags to add to the C compiler for OpenMP support\n\n#     #OpenMP_CXX_FLAGS - flags to add to the CXX compiler for OpenMP support\n\n#     AppendTargetProperty(${target} COMPILE_FLAGS \"${OpenMP_CXX_FLAGS}\")\n\n#     AppendTargetProperty(${target} LINK_FLAGS \"${OpenMP_CXX_FLAGS}\")\n\n#   else()\n\n#     message(WARNING \"OpenMP not found. `${target}' will run serially with no parallelization.\")\n\n#   endif()\n\n# endmacro(SetOpenMPTarget)\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# first, escape the flag to a valid regex pattern. Just backslash all chars.\n",
        "Line" : 66,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# now, remove the flag from str_in.\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#message(STATUS \"Removed flag '${flag}' from '${str_in}': flag_escaped='${flag_escaped}', str_out='${${str_out}}'\")\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#\n\n# Some older gcc/g++ (e.g. 4.7) needs -D_GLIBCXX_USE_NANOSLEEP in order to make\n\n# available std::this_thread::sleep_for().  So perform a test to see if this is the\n\n# case.  See otherwise if we can use Window's native Sleep() function.\n\n#\n",
        "Line" : 79,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#    else()\n\n#      message(FATAL_ERROR \"Your C++ compiler doesn't seem to support std::this_thread::sleep_for(). You may need to use a different compiler, or set the required flags yourself.\")\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#\n\n# Check for C++11 std::thread availability (for instance, it is not available\n\n# straightforwardly on MinGW, even though the compiler might support C++11)\n\n#\n",
        "Line" : 124,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# On MinGW, we might need to use a separate implementation of std::thread &\n\n# friends (see https://github.com/meganz/mingw-std-threads).  In this case, set\n\n# TOMOGRAPHER_USE_MINGW_STD_THREAD\n",
        "Line" : 131,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 12
    },
    "cmake/vc/AddCompilerFlag.cmake" : {
      "ObjectId" : "f5875887cd4b52c218f455f8e6c9a0d183c2c3a4",
      "LastModified" : "2018-03-16T18:37:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Add a given compiler flag to flags variables.\n\n# AddCompilerFlag(<flag> [<var>])\n\n# or\n\n# AddCompilerFlag(<flag> [C_FLAGS <var>] [CXX_FLAGS <var>] [C_RESULT <var>]\n\n#                        [CXX_RESULT <var>])\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010-2015 Matthias Kretz <kretz@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice,\n\n#    this list of conditions and the following disclaimer.\n\n#\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n#  * Neither the names of contributing organizations nor the\n\n#    names of its contributors may be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Compiling with FMA3 support may fail only at the assembler level.\n\n# In that case we need to have such an instruction in the test code\n",
        "Line" : 122,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# Compiling with libc++ not only requires a compiler that understands it, but also\n\n# the libc++ headers itself\n",
        "Line" : 138,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# Make sure the intrinsics are there\n",
        "Line" : 148,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 5
    },
    "cmake/vc/CheckCCompilerFlag.cmake" : {
      "ObjectId" : "07ec156e02e3853a0db1c2c8ee7393efafa36b02",
      "LastModified" : "2017-02-22T08:08:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check whether the C compiler supports a given flag.\n\n# CHECK_C_COMPILER_FLAG(<flag> <var>)\n\n#  <flag> - the compiler flag\n\n#  <var>  - variable to store the result\n\n# This internally calls the check_c_source_compiles macro.\n\n# See help for CheckCSourceCompiles for a listing of variables\n\n# that can modify the build.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2006 Alexander Neundorf <neundorf@kde.org>\n\n# Copyright 2011-2013 Matthias Kretz <kretz@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice,\n\n#    this list of conditions and the following disclaimer.\n\n#\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n#  * The names of Kitware, Inc., the Insight Consortium, or the names of\n\n#    any consortium members, or of any contributors, may not be used to\n\n#    endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Some compilers do not fail with a bad flag\n",
        "Line" : 53,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# GNU\n\n# clang\n\n# GNU\n\n# GNU\n\n# GNU\n\n# MSVC\n\n# MSVC\n\n# HP\n\n# SunPro\n\n# XL\n\n# Open64\n\n# ICC\n\n# ICC\n\n# ICC: File not found\n\n# ICC\n\n# ICC: option '-mfma' ignored, suggest using '-march=core-avx2'\n",
        "Line" : 54,
        "CharPositionInLine" : 60
      },
      "CommentCount" : 4
    },
    "cmake/vc/CheckCXXCompilerFlag.cmake" : {
      "ObjectId" : "e3b0188a44b7ebb9261d580e2bcf6999ca857a29",
      "LastModified" : "2017-02-22T08:08:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check whether the CXX compiler supports a given flag.\n\n# CHECK_CXX_COMPILER_FLAG(<flag> <var>)\n\n#  <flag> - the compiler flag\n\n#  <var>  - variable to store the result\n\n# This internally calls the check_cxx_source_compiles macro.  See help\n\n# for CheckCXXSourceCompiles for a listing of variables that can\n\n# modify the build.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2006 Alexander Neundorf <neundorf@kde.org>\n\n# Copyright 2011-2013 Matthias Kretz <kretz@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice,\n\n#    this list of conditions and the following disclaimer.\n\n#\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n#  * The names of Kitware, Inc., the Insight Consortium, or the names of\n\n#    any consortium members, or of any contributors, may not be used to\n\n#    endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Some compilers do not fail with a bad flag\n",
        "Line" : 53,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# GNU\n\n# clang\n\n# GNU\n\n# GNU\n\n# GNU\n\n# MSVC\n\n# MSVC\n\n# HP\n\n# SunPro\n\n# XL\n\n# Open64\n\n# ICC\n\n# ICC\n\n# ICC: File not found\n\n# ICC\n\n# ICC: option '-mfma' ignored, suggest using '-march=core-avx2'\n",
        "Line" : 54,
        "CharPositionInLine" : 60
      },
      "CommentCount" : 4
    },
    "cmake/vc/CheckMicCCompilerFlag.cmake" : {
      "ObjectId" : "cc12460497aad75bccaaad06b54ff5018affadd7",
      "LastModified" : "2017-02-22T08:08:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check whether the MIC C compiler supports a given flag.\n\n# CHECK_MIC_C_COMPILER_FLAG(<flag> <var>)\n\n#  <flag> - the compiler flag\n\n#  <var>  - variable to store the result\n\n# This internally calls the check_c_source_compiles macro.  See help\n\n# for CheckCSourceCompiles for a listing of variables that can\n\n# modify the build.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2006 Alexander Neundorf <neundorf@kde.org>\n\n# Copyright 2011-2013 Matthias Kretz <kretz@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice,\n\n#    this list of conditions and the following disclaimer.\n\n#\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n#  * The names of Kitware, Inc., the Insight Consortium, or the names of\n\n#    any consortium members, or of any contributors, may not be used to\n\n#    endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GNU\n\n# clang\n\n# GNU\n\n# GNU\n\n# GNU\n\n# MSVC\n\n# HP\n\n# SunPro\n\n# XL\n\n# Open64\n\n# ICC\n\n# ICC\n\n# ICC: File not found\n",
        "Line" : 62,
        "CharPositionInLine" : 59
      },
      "CommentCount" : 3
    },
    "cmake/vc/CheckMicCXXCompilerFlag.cmake" : {
      "ObjectId" : "b0793f09ebdabeeb4f301a4dc1233e461c696f94",
      "LastModified" : "2017-02-22T08:08:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check whether the MIC CXX compiler supports a given flag.\n\n# CHECK_MIC_CXX_COMPILER_FLAG(<flag> <var>)\n\n#  <flag> - the compiler flag\n\n#  <var>  - variable to store the result\n\n# This internally calls the check_cxx_source_compiles macro.  See help\n\n# for CheckCXXSourceCompiles for a listing of variables that can\n\n# modify the build.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2009 Kitware, Inc.\n\n# Copyright 2006 Alexander Neundorf <neundorf@kde.org>\n\n# Copyright 2011-2013 Matthias Kretz <kretz@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice,\n\n#    this list of conditions and the following disclaimer.\n\n#\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n#  * The names of Kitware, Inc., the Insight Consortium, or the names of\n\n#    any consortium members, or of any contributors, may not be used to\n\n#    endorse or promote products derived from this software without\n\n#    specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GNU\n\n# clang\n\n# GNU\n\n# GNU\n\n# GNU\n\n# MSVC\n\n# HP\n\n# SunPro\n\n# XL\n\n# Open64\n\n# ICC\n\n# ICC\n\n# ICC: File not found\n",
        "Line" : 62,
        "CharPositionInLine" : 59
      },
      "CommentCount" : 3
    },
    "cmake/vc/OptimizeForArchitecture.cmake" : {
      "ObjectId" : "802d8480ac288d17ca039ebb94265f2d433e828c",
      "LastModified" : "2018-03-16T18:37:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Determine the host CPU feature set and determine the best set of compiler\n\n# flags to enable all supported SIMD relevant features. Alternatively, the\n\n# target CPU can be explicitly selected (for generating more generic binaries\n\n# or for targeting a different system).\n\n# Compilers provide e.g. the -march=native flag to achieve a similar result.\n\n# This fails to address the need for building for a different microarchitecture\n\n# than the current host.\n\n# The script tries to deduce all settings from the model and family numbers of\n\n# the CPU instead of reading the CPUID flags from e.g. /proc/cpuinfo. This makes\n\n# the detection more independent from the CPUID code in the kernel (e.g. avx2 is\n\n# not listed on older kernels).\n\n#\n\n# Usage:\n\n# OptimizeForArchitecture()\n\n# If either of Vc_SSE_INTRINSICS_BROKEN, Vc_AVX_INTRINSICS_BROKEN,\n\n# Vc_AVX2_INTRINSICS_BROKEN is defined and set, the OptimizeForArchitecture\n\n# macro will consequently disable the relevant features via compiler flags.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2010-2016 Matthias Kretz <kretz@kde.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions are\n\n# met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice,\n\n#    this list of conditions and the following disclaimer.\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#  * Neither the names of contributing organizations nor the\n\n#    names of its contributors may be used to endorse or promote products\n\n#    derived from this software without specific prior written permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND CONTRIBUTORS ``AS IS''\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n\n# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE FOR\n\n# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# taken from the Intel ORM\n\n# http://www.intel.com/content/www/us/en/processors/architectures-software-developer-manuals.html\n\n# CPUID Signature Values of Of Recent Intel Microarchitectures\n\n# 4E 5E       | Skylake microarchitecture\n\n# 3D 47 56    | Broadwell microarchitecture\n\n# 3C 45 46 3F | Haswell microarchitecture\n\n# 3A 3E       | Ivy Bridge microarchitecture\n\n# 2A 2D       | Sandy Bridge microarchitecture\n\n# 25 2C 2F    | Intel microarchitecture Westmere\n\n# 1A 1E 1F 2E | Intel microarchitecture Nehalem\n\n# 17 1D       | Enhanced Intel Core microarchitecture\n\n# 0F          | Intel Core microarchitecture\n\n#\n\n# Intel SDM Vol. 3C 35-1 / December 2016:\n\n# 57          | Xeon Phi 3200, 5200, 7200  [Knights Landing]\n\n# 85          | Future Xeon Phi\n\n# 8E 9E       | 7th gen. Core              [Kaby Lake]\n\n# 55          | Future Xeon                [Skylake w/ AVX512]\n\n# 4E 5E       | 6th gen. Core / E3 v5      [Skylake w/o AVX512]\n\n# 56          | Xeon D-1500                [Broadwell]\n\n# 4F          | Xeon E5 v4, E7 v4, i7-69xx [Broadwell]\n\n# 47          | 5th gen. Core / Xeon E3 v4 [Broadwell]\n\n# 3D          | M-5xxx / 5th gen.          [Broadwell]\n\n# 3F          | Xeon E5 v3, E7 v3, i7-59xx [Haswell-E]\n\n# 3C 45 46    | 4th gen. Core, Xeon E3 v3  [Haswell]\n\n# 3E          | Xeon E5 v2, E7 v2, i7-49xx [Ivy Bridge-E]\n\n# 3A          | 3rd gen. Core, Xeon E3 v2  [Ivy Bridge]\n\n# 2D          | Xeon E5, i7-39xx           [Sandy Bridge]\n\n# 2F          | Xeon E7\n\n# 2A          | Xeon E3, 2nd gen. Core     [Sandy Bridge]\n\n# 2E          | Xeon 7500, 6500 series\n\n# 25 2C       | Xeon 3600, 5600 series, Core i7, i5 and i3\n\n#\n\n# Values from the Intel SDE:\n\n# 5C | Goldmont\n\n# 5A | Silvermont\n\n# 57 | Knights Landing\n\n# 66 | Cannonlake\n\n# 55 | Skylake Server\n\n# 4E | Skylake Client\n\n# 3C | Broadwell (likely a bug in the SDE)\n\n# 3C | Haswell\n",
        "Line" : 89,
        "CharPositionInLine" : 9
      },
      "3" : {
        "Text" : "# 57\n",
        "Line" : 131,
        "CharPositionInLine" : 33
      },
      "4" : {
        "Text" : "# Knights Landing\n",
        "Line" : 132,
        "CharPositionInLine" : 44
      },
      "5" : {
        "Text" : "# 8E, 9E\n",
        "Line" : 139,
        "CharPositionInLine" : 62
      },
      "6" : {
        "Text" : "# 55\n",
        "Line" : 141,
        "CharPositionInLine" : 37
      },
      "7" : {
        "Text" : "# 4E, 5E\n",
        "Line" : 143,
        "CharPositionInLine" : 60
      },
      "8" : {
        "Text" : "# 3D, 47, 4F, 56\n",
        "Line" : 145,
        "CharPositionInLine" : 106
      },
      "9" : {
        "Text" : "# Itanium (not supported)\n",
        "Line" : 172,
        "CharPositionInLine" : 34
      },
      "10" : {
        "Text" : "# NetBurst\n",
        "Line" : 174,
        "CharPositionInLine" : 35
      },
      "11" : {
        "Text" : "# Not sure whether this must be 3 or even 4 instead\n",
        "Line" : 176,
        "CharPositionInLine" : 34
      },
      "12" : {
        "Text" : "# 16h\n",
        "Line" : 183,
        "CharPositionInLine" : 35
      },
      "13" : {
        "Text" : "# 15h\n",
        "Line" : 185,
        "CharPositionInLine" : 35
      },
      "14" : {
        "Text" : "# 14h\n",
        "Line" : 191,
        "CharPositionInLine" : 35
      },
      "15" : {
        "Text" : "# 12h\n\n# 10h\n",
        "Line" : 193,
        "CharPositionInLine" : 35
      },
      "16" : {
        "Text" : "# I don't know the right number to put here. This is just a guess from the hardware I have access to\n",
        "Line" : 198,
        "CharPositionInLine" : 35
      },
      "17" : {
        "Text" : "# add this clause to remove it from the else clause\n",
        "Line" : 385,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# MSVC on 32 bit can select /arch:SSE2 (since 2010 also /arch:AVX)\n\n# MSVC on 64 bit cannot select anything (should have changed with MSVC 2010)\n",
        "Line" : 458,
        "CharPositionInLine" : 9
      },
      "19" : {
        "Text" : "# ICC (on Linux)\n",
        "Line" : 481,
        "CharPositionInLine" : 56
      },
      "20" : {
        "Text" : "# This is the Intel compiler, so SSE2 is a very reasonable baseline.\n",
        "Line" : 505,
        "CharPositionInLine" : 12
      },
      "21" : {
        "Text" : "# not MSVC and not ICC => GCC, Clang, Open64\n",
        "Line" : 509,
        "CharPositionInLine" : 13
      },
      "CommentCount" : 22
    },
    "doc/py/Makefile" : {
      "ObjectId" : "2b3a11a9b79882820415b3c529ff0df400727909",
      "LastModified" : "2017-02-22T08:08:42Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for Sphinx documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# You can set these variables from the command line.\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Internal variables.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the i18n builder cannot share the environment and doctrees with the others\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "py/CMakeLists.txt" : {
      "ObjectId" : "d5d01d33c5328afa585c0b90d87e68baa46f5d23",
      "LastModified" : "2018-03-16T18:37:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Tomographer project, which is distributed under the\n\n# terms of the MIT license.\n\n# \n\n# The MIT License (MIT)\n\n# \n\n# Copyright (c) 2015 ETH Zurich, Institute for Theoretical Physics, Philippe Faist\n\n# Copyright (c) 2017 Caltech, Institute for Quantum Information and Matter, Philippe Faist\n\n# \n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n# \n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# need Eigen assertions to be live, remove any -NDEBUG flag\n\n#\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# needs to export symbols in binary lib\n\n#target_compile_options(_tomographer_cxx PRIVATE \"-fvisibility=default\") # ok, try with hidden visibility as pybind11 recommends so strongly\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# depends in particular on tomographer_version.h\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# tomographer/tomographer_version.h (not yet installed)\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# tomographer/ headers -- relative for auto dependency detection\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# our own _tomographer_cxx headers\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# NOTE: no SYSTEM includes, because it messes up the system include path order if the path\n\n# happens to be a system path such as /usr/include\n\n#\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Uses C++ threads (need -pthread on gcc)\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "fe4a3715f9008b3e80c7363a5bc2890e1b8857ce",
      "LastModified" : "2018-03-16T18:37:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Tomographer project, which is distributed under the\n\n# terms of the MIT license.\n\n# \n\n# The MIT License (MIT)\n\n# \n\n# Copyright (c) 2015 ETH Zurich, Institute for Theoretical Physics, Philippe Faist\n\n# Copyright (c) 2017 Caltech, Institute for Quantum Information and Matter, Philippe Faist\n\n# \n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n# \n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ==============================================================================\n\n# Required Definitions Etc.\n\n# ==============================================================================\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# \n\n# Make sure we don't have -DNDEBUG in flags.  The last thing we want here is to remove the\n\n# assertion tests from the code.\n\n#\n\n# NOTE: overriding the variables CMAKE_CXX_FLAGS[_XXX] only has effect in this directory\n\n# (CHECK THIS?? the docs are terrible)\n\n#\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# we need to access the expected output patterns. Trailing slash needed.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# we need to access some data. Trailing slash needed.\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ==============================================================================\n\n# Add the tests.\n\n# ==============================================================================\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#set(LIST_OF_ALL_TESTS \"\")\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# replace cmd with dummy command\n",
        "Line" : 68,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# file name without extension (NAME_WE)\n",
        "Line" : 78,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#  set(LIST_OF_ALL_TESTS ${LIST_OF_ALL_TESTS} ${test_name})\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# NEED lapack in order to run test suite---don't want tests silently not to run because\n\n# we didn't realize lapack wasn't found\n\n#\n\n#  if (\";${NeedsList};\" MATCHES \";LAPACK;\")\n\n#    # compile & link with LAPACK, but only if it is available.\n\n#    if(NOT LAPACK_FOUND)\n\n#      return()\n\n#    endif()\n\n#  endif()\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Can't compile, we don't have std::thread & friends -- skip test\n",
        "Line" : 94,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# the test binary executable\n",
        "Line" : 100,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Enable C++11\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# tomographer headers\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# NOTE: no SYSTEM includes because if the path happens to be e.g. /usr/include, it messes\n\n# up the system include paths (and gcc 6 e.g. can't find \"math.h\" or \"stdlib.h\")\n\n#\n\n# dependency: Eigen\n",
        "Line" : 115,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# compile & link with OpenMP\n",
        "Line" : 127,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# link with Boost.Test framework\n",
        "Line" : 168,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "#message(STATUS \"Added test ${test_name}\")\n",
        "Line" : 192,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# add tests for tomographer library.\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#\n",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#addTomographerTest(test_mhrw_valuehist_tasks.cxx  \"\") # DELETE THIS\n",
        "Line" : 233,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# openmp needed for testing the status report feature\n",
        "Line" : 236,
        "CharPositionInLine" : 49
      },
      "23" : {
        "Text" : "# only works with g++ because we do exact comparison of the output histogram data, and\n\n# other compilers may have small differences:\n\n#addTomographerTest(test_zzzcombinations.cxx \"openmp\")\n",
        "Line" : 239,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\n\n# check \"minimal tomorun\" example program compiles and runs\n\n#\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Enable C++11\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# tomographer headers\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# dependency: Eigen\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#\n\n# check \"minimal tomorun with dyn controller\" example program compiles and runs\n\n#\n",
        "Line" : 267,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Enable C++11\n",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# tomographer headers\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# dependency: Eigen\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\n\n# check \"minimal single random walk\" example program compiles and runs\n\n#\n",
        "Line" : 289,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Enable C++11\n",
        "Line" : 295,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# tomographer headers\n",
        "Line" : 297,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# dependency: Eigen\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#\n\n# check \"minimal tomorun\" with MPI example program compiles and runs\n\n#\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# Enable C++11\n",
        "Line" : 316,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# tomographer headers\n",
        "Line" : 318,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# dependency: Eigen\n",
        "Line" : 320,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# Boost and MPI stuff\n",
        "Line" : 323,
        "CharPositionInLine" : 2
      },
      "41" : {
        "Text" : "#\n\n# Add tests to check for tomorun's overall behavior\n\n#\n",
        "Line" : 340,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# Enable C++11\n",
        "Line" : 346,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# # query help text\n\n# add_test(NAME test_tomorun_help\n\n#   WORKING_DIRECTORY \"${CMAKE_CURRENT_BINARY_DIR}\"\n\n#   COMMAND \"$<TARGET_FILE:tomorun>\" --help\n\n#   )\n",
        "Line" : 349,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# version without binning analysis\n",
        "Line" : 355,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# version with binning analysis\n",
        "Line" : 368,
        "CharPositionInLine" : 2
      },
      "46" : {
        "Text" : "# version with binning analysis, light jumps\n",
        "Line" : 381,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# Additional tests\n",
        "Line" : 396,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# not sure the qeb's are really relevant here (for this figure of merit), but it's good enough for the test case\n",
        "Line" : 466,
        "CharPositionInLine" : 6
      },
      "49" : {
        "Text" : "# BUILD_TOMORUN\n",
        "Line" : 482,
        "CharPositionInLine" : 7
      },
      "50" : {
        "Text" : "# Python tests.  Potentially prepare two versions -- one for cmake-built python module and\n\n# one for setup.py-built python module.\n",
        "Line" : 491,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# BUILD_TOMOPY\n",
        "Line" : 504,
        "CharPositionInLine" : 8
      },
      "52" : {
        "Text" : "# other dir, make sure we don't pick up a cmake-built _tomographer_cxx.so\n",
        "Line" : 510,
        "CharPositionInLine" : 46
      },
      "53" : {
        "Text" : "# TOMOGRAPHER_TEST_WITH_SEPARATE_PYTHON_BUILD\n",
        "Line" : 517,
        "CharPositionInLine" : 8
      },
      "54" : {
        "Text" : "# add failing test if neither cmake nor setup.py python is being tested\n",
        "Line" : 524,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "# ------------------------------------------------\n",
        "Line" : 544,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 56
    },
    "tomographer/CMakeLists.txt" : {
      "ObjectId" : "1deac575da3a1a27c39b934da89dfb4d441712ef",
      "LastModified" : "2018-03-16T18:37:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Tomographer project, which is distributed under the\n\n# terms of the MIT license.\n\n# \n\n# The MIT License (MIT)\n\n# \n\n# Copyright (c) 2016 ETH Zurich, Institute for Theoretical Physics, Philippe Faist\n\n# Copyright (c) 2017 Caltech, Institute for Quantum Information and Matter, Philippe Faist\n\n# \n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n# \n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# There is nothing to compile here because this is a header-only library.\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# configure the header file\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Install our headers in the standard header location of the system\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Install version header\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# install the CMake export target\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# set up a hook to update the header every time the output of `git describe --tags`\n\n# changes.\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# this needs to be run as a target, not an output\n",
        "Line" : 64,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "tomorun/CMakeLists.txt" : {
      "ObjectId" : "39d2c720f4530123f48613fa7140f18fe5c49401",
      "LastModified" : "2018-03-16T18:37:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is part of the Tomographer project, which is distributed under the\n\n# terms of the MIT license.\n\n# \n\n# The MIT License (MIT)\n\n# \n\n# Copyright (c) 2015 ETH Zurich, Institute for Theoretical Physics, Philippe Faist\n\n# Copyright (c) 2017 Caltech, Institute for Quantum Information and Matter, Philippe Faist\n\n# \n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n# \n\n# The above copyright notice and this permission notice shall be included in all\n\n# copies or substantial portions of the Software.\n\n# \n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\n# SOFTWARE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ==============================================================================\n\n# Add our executable\n\n# ==============================================================================\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# depends in particular on tomographer_version.h\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++11 target\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# include our tomographer headers\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# relative path for automatic dependency detection\n",
        "Line" : 41,
        "CharPositionInLine" : 50
      },
      "6" : {
        "Text" : "# custom compilation options just for tomorun (e.g. -DTOMORUN_*** config defines)\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# for <tomographer/tomographer_version.h> which was auto-generated in the binary\n\n# dir tree, and is not yet installed.\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# NOTE: no SYSTEM includes because if the path happens to be e.g. /usr/include, it messes\n\n# up the system include paths (and gcc 6 e.g. can't find \"math.h\" or \"stdlib.h\")\n\n#\n\n# dependency: Eigen\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# already parallelized application, so disable Eigen's own parallelization (see\n\n# http://eigen.tuxfamily.org/dox/TopicMultiThreading.html)\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# dependency: Boost headers, Boost program_options library\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# dependency: MatIO (and MatIO's ZLIB dependency)\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# compile with OpenMP\n",
        "Line" : 87,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# the installation target\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    }
  },
  "FileTypes" : {
    "CMAKE" : 20,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 1913
}