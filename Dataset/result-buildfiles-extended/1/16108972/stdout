{
  "Repository" : "16108972",
  "Revision" : "HEAD",
  "ObjectId" : "72e04eb0a0a1971d62241a5300ba7c99701bac10",
  "CommitTime" : "2019-03-28T16:02:28Z",
  "Files" : {
    "BackTrack/CMakeLists.txt" : {
      "ObjectId" : "b419d801dc55cc5b8b2d6279f0026353ba4282e8",
      "LastModified" : "2015-03-04T15:42:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---set paths to find all KVMultiDet headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "BackTrack/base/CMakeLists.txt" : {
      "ObjectId" : "795a6018c5e130601771b7cf611e34bd698338b5",
      "LastModified" : "2016-02-09T10:55:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "BackTrack/models/CMakeLists.txt" : {
      "ObjectId" : "38ca2e2201404b15d1358710ab75b8c5866df018",
      "LastModified" : "2016-02-09T10:55:09Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---Need Gemini++ interface for SimpleGeminiModel\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "CMakeLists.txt" : {
      "ObjectId" : "a44c85847ca43d8f8a1e80bb9f8b7dea861fd8e0",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#--- Top-level CMake file for KaliVeda\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#-- Fixing warning on Mac OSX due to CMake version\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#--look for ROOT & all essential libraries\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#--optional support for OpenGL\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#--check for BOOST - minimum version corresponds progress_display\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#set(CMAKE_VERBOSE_MAKEFILE ON)\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#---Version control informations\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#-enforce coding style\n\n#-make sure git pre-commit hook is in place\n",
        "Line" : 50,
        "CharPositionInLine" : 3
      },
      "8" : {
        "Text" : "#-if we have git, enforce 'git pull --rebase' policy\n",
        "Line" : 55,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "#----------------------------------------------------------\n\n#----------------------BUILD OPTIONS-----------------------\n\n#----------------------------------------------------------\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#---GNU-style installation directories or classic KaliVeda layout\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#--optional support for SQLite\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# sqlite is in output of root-config --features\n",
        "Line" : 81,
        "CharPositionInLine" : 25
      },
      "13" : {
        "Text" : "#--up to 6/10/2015 if ROOT was built using autoconf not cmake\n",
        "Line" : 84,
        "CharPositionInLine" : 5
      },
      "14" : {
        "Text" : "#  the library was called libSQLite not libRSQLite\n",
        "Line" : 85,
        "CharPositionInLine" : 9
      },
      "15" : {
        "Text" : "#---Built-in package for reading GANIL acquisition data\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#-at IN2P3 Computing Centre, build with support for xrootd\n",
        "Line" : 108,
        "CharPositionInLine" : 38
      },
      "17" : {
        "Text" : "#---MFM library for GANIL MFM data\n\n#---sources available from: https://gitlab.in2p3.fr/jdfcode/mfmlib.git\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#---Google Protobuffers for reading FAZIA data\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#---Ricardo Yanez 'range' tables\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#---Gemini++ interface\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#--- ID Grid fitting routines provided by Laurent Tassan-Got\n",
        "Line" : 181,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#---check if fitltg module can be built; if not, option is disabled by default\n",
        "Line" : 184,
        "CharPositionInLine" : 1
      },
      "23" : {
        "Text" : "#--- BackTrack package for model parameter optimisation\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#---check if roofit is available\n",
        "Line" : 197,
        "CharPositionInLine" : 1
      },
      "25" : {
        "Text" : "#--- MicroStat package for calculating event statistical weights\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#--- Libraries for INDRA data\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#--- Libraries for INDRA-VAMOS data\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#--- Libraries for FAZIA data\n",
        "Line" : 224,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "#--- Libraries for IDNRAFAZIA data\n",
        "Line" : 227,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#--- Enable build of all libraries\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#----------------------------------------------------------\n\n#------------------END BUILD OPTIONS-----------------------\n\n#----------------------------------------------------------\n",
        "Line" : 247,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#------------------Print BUILD OPTIONS-----------------------\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# check for C++11 compatibility - use if possible\n",
        "Line" : 255,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#---Set the library version in the main CMakeLists.txt------------------------------------------\n",
        "Line" : 262,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#---configure the KVVersion.h file\n",
        "Line" : 276,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#---are we building on CCIN2P3 machines?\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#---configure the KVConfig.h file\n",
        "Line" : 288,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#---set up list of '.rootrc' config files to be read by KVBase::InitEnvironment\n",
        "Line" : 321,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#-at IN2P3 Computing Centre, we need to tack on some infos for access\n\n#-to the batch system & data repositories\n",
        "Line" : 323,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "#-for standard install outside CCIN2P3, tack on the 'standard.rootrc' config\n\n#-(just defines default batch system)\n",
        "Line" : 334,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "#---configure and install kaliveda-config script\n",
        "Line" : 342,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#---install scripts from tools/ directory in ${CMAKE_INSTALL_BINDIR}\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "#---install other stuff from tools/ directory in ${CMAKE_INSTALL_SYSCONFDIR}\n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#---install README, COPYING, etc. in ${CMAKE_INSTALL_DOCDIR}\n",
        "Line" : 354,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#---install exported targets file for use by other projects\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#---generate config & version files for other projects using find_package()\n",
        "Line" : 360,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "#---in order to be able to reuse cmake macros for building ROOT libraries with either ROOT5 or ROOT6\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#---add a 'make dist' target\n",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "#---install man pages for KaliVeda\n",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 50
    },
    "FAZIA/CMakeLists.txt" : {
      "ObjectId" : "5417d8cf1d56540ca4a7219b1aabc0c034319721",
      "LastModified" : "2018-05-27T02:37:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---list of datasets\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---set paths to find all KVMultiDet headers\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "FAZIA/analysis/CMakeLists.txt" : {
      "ObjectId" : "1824cfb84fda31870d9ead8fdff5325f7a0db0ab",
      "LastModified" : "2016-02-09T10:55:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "FAZIA/calibration/CMakeLists.txt" : {
      "ObjectId" : "64f648b9c7afd49298a01eaf276e673fa5443adf",
      "LastModified" : "2016-02-09T10:55:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "FAZIA/db/CMakeLists.txt" : {
      "ObjectId" : "eb287b284149f95e4ca7fd29c03712a70df7696d",
      "LastModified" : "2016-02-09T10:55:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "FAZIA/events/CMakeLists.txt" : {
      "ObjectId" : "24e1997e8735f7935658563f4074d862903bd72a",
      "LastModified" : "2016-02-09T10:55:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "FAZIA/geometry/CMakeLists.txt" : {
      "ObjectId" : "a4d708e7df064f241cb923481db6f725a88e0057",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "FAZIA/identification/CMakeLists.txt" : {
      "ObjectId" : "8116a0668d32d682d842e80f1ae5ddfda43a3b63",
      "LastModified" : "2016-02-09T10:55:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "FAZIA/particles/CMakeLists.txt" : {
      "ObjectId" : "48ad7b3176ab6ad9cc4736b38183cc53a03da9b4",
      "LastModified" : "2016-02-09T10:55:09Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "FAZIA/protobuf/CMakeLists.txt" : {
      "ObjectId" : "32e7176adc98b5a335195ef6edfe297f893d206a",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# generate protobuf source from event description\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "FAZIA/signals/CMakeLists.txt" : {
      "ObjectId" : "a86edc98af8ff1bcf56f9c6f6b810faf4247b793",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "GanTape/CMakeLists.txt" : {
      "ObjectId" : "3deae7847a394df5c72ff00e2f1d1a291b0892b6",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "KVIndra/CMakeLists.txt" : {
      "ObjectId" : "f38155e35cf8d431f5b67307e2fd20fedf5038e1",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---list of datasets\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---set paths to find all KVMultiDet headers\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "KVIndra/analysis/CMakeLists.txt" : {
      "ObjectId" : "c3717c88d7d83422ef3e28de6413e017f11efd37",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "KVIndra/calibration/CMakeLists.txt" : {
      "ObjectId" : "2f58cbc324e6c45c21c6a5072ea0e04dd5ce46f5",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "KVIndra/daq_cec/CMakeLists.txt" : {
      "ObjectId" : "29fe601ec10ef819fa05b3ff8ea3d0074d3f785f",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "KVIndra/db/CMakeLists.txt" : {
      "ObjectId" : "9ab16df6ed7856a5886388b0a00970dd6fc04bad",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "KVIndra/exp_events/CMakeLists.txt" : {
      "ObjectId" : "b31562ff0bc02d67e8978e68b6b7ff9e48a27c46",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "KVIndra/geometry/CMakeLists.txt" : {
      "ObjectId" : "147e6c92e572bf6eedf0bf5960943214245c5713",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "KVIndra/gui/CMakeLists.txt" : {
      "ObjectId" : "437c1f8f40acc7f096f94a9ca725f9acbc69eaa6",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "KVIndra/identification/CMakeLists.txt" : {
      "ObjectId" : "67b06fe7965ff45676a78e9e5a77104f0b0cfb63",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "KVMultiDet/CMakeLists.txt" : {
      "ObjectId" : "f488dce9d29762bc8f22b2de4824401d61eba93b",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "KVMultiDet/analysis/CMakeLists.txt" : {
      "ObjectId" : "fcd18b999090bd8308deb4bad0be80de5db26fce",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "KVMultiDet/base/CMakeLists.txt" : {
      "ObjectId" : "754a9288a13c2a26d7b5d9333ba02ab5bd5c3b29",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#--- generation of KVBzrInfo.h or KVGitInfo.h\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#--- declare dependency of library (in fact, KVBase.o) on KV***Info.h\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "KVMultiDet/calibration/CMakeLists.txt" : {
      "ObjectId" : "b77eac7f1d0c251e806fd183931222e2c7d5febb",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "KVMultiDet/daq_cec/CMakeLists.txt" : {
      "ObjectId" : "401566aee56200ab932d4934d3e6f7db7b88c2e8",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "KVMultiDet/data_management/CMakeLists.txt" : {
      "ObjectId" : "565453939c35556447e4f1c73a1a06c9ff484d84",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "KVMultiDet/db/CMakeLists.txt" : {
      "ObjectId" : "f66f0c2c160ef1e92a8f25396df8de4428ab95ad",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---Need ROOT with SQLite support for SQLiteDB\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "KVMultiDet/events/CMakeLists.txt" : {
      "ObjectId" : "5d8e6c10f40e07be8dfd7c1b9eebfeab3223c611",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---Need ROOT with OpenGL support for KVEventViewer\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---No OpenGL support : no KVEventViewer\n",
        "Line" : 5,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#---Gemini++ interface\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "KVMultiDet/exp_events/CMakeLists.txt" : {
      "ObjectId" : "91ca2e1b3e55d1664007a46f22861a8eefe41408",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---do we have ROOT with OpenGL support for KVMultiDetArray geometry/track viewing ?\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "KVMultiDet/geometry/CMakeLists.txt" : {
      "ObjectId" : "d5c208f5071b3717ec37ded6297251000c641927",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "KVMultiDet/globvars/CMakeLists.txt" : {
      "ObjectId" : "cb0f49385a41fd48c0c7b2c5b15e3cb4976cdcdf",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "KVMultiDet/gui/CMakeLists.txt" : {
      "ObjectId" : "e93a27502e7f3adbed2e7105f7b2603f1d4de55e",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "KVMultiDet/identification/CMakeLists.txt" : {
      "ObjectId" : "0ded54c2f119d592bc24ff8168b63b2e3a91571d",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "KVMultiDet/particles/CMakeLists.txt" : {
      "ObjectId" : "f400fc28270b64c1cf4502bdb42336eee7755fd6",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "KVMultiDet/simulation/CMakeLists.txt" : {
      "ObjectId" : "80020b49bc3aa00939fd964ab6f1f85d8083553e",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---Gemini++ interface\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "KVMultiDet/stopping/CMakeLists.txt" : {
      "ObjectId" : "5b49a758b232f61111480f8ac5585d9925680f34",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "KVMultiDet/trieur/CMakeLists.txt" : {
      "ObjectId" : "d98432def6006683e9af48466d509f19c7950ab4",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "MicroStat/CMakeLists.txt" : {
      "ObjectId" : "b419d801dc55cc5b8b2d6279f0026353ba4282e8",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---set paths to find all KVMultiDet headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "MicroStat/montecarlo/CMakeLists.txt" : {
      "ObjectId" : "7466976e3279fb1dc688a7623b80bac85df1d612",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "MicroStat/weights/CMakeLists.txt" : {
      "ObjectId" : "2427baf51b5e355568e3859e0fc75b5918a87ad2",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "VAMOS/CMakeLists.txt" : {
      "ObjectId" : "ca91cd2e659818c11a05f9fdb8aff0613e955abe",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---set VAMOS specific compiler flags\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---set paths to find all KVMultiDet headers\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---set paths to find all KVIndra headers\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "VAMOS/analysis/CMakeLists.txt" : {
      "ObjectId" : "8c89c0ea28e0a956d1e6949a65c3ff3a7bc33bbf",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "VAMOS/calibration/CMakeLists.txt" : {
      "ObjectId" : "1b2d73b3b0745ee8a8397bde5f55f90eeb573a27",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "VAMOS/daq_cec/CMakeLists.txt" : {
      "ObjectId" : "c4e9c954de4973aa750b309fa4746e7372117d5f",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "VAMOS/db/CMakeLists.txt" : {
      "ObjectId" : "868dcaed524048813fc8ab0fc77d81f392e365a7",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "VAMOS/deprecated/CMakeLists.txt" : {
      "ObjectId" : "df0698b8f2a4affd4a80b9bfc1cdc2c956c36b92",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "VAMOS/exp_events/CMakeLists.txt" : {
      "ObjectId" : "a418b74e3d967c8a49b6ebe8bb4a759d88ea654b",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "VAMOS/geometry/CMakeLists.txt" : {
      "ObjectId" : "c8e6d9d75d0610a70fa89c3447d65dea5dadbb88",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# KVVAMOSReconNuc.h needed in KVVAMOSReconGeoNavigator\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "VAMOS/identification/CMakeLists.txt" : {
      "ObjectId" : "074a97fe7ec6ca021d9fb78016329349c31bc059",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "VAMOS/minimiser/CMakeLists.txt" : {
      "ObjectId" : "5173f9f0b4b1c5b1c49e205328a0afc4e190896f",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#KALIVEDA_SET_INCLUDE_DIRS(VAMOS MODULES analysis)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/CheckFitLTG.cmake" : {
      "ObjectId" : "4a876eb30824490a63735db30d872b19d2f853d7",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---CheckFitLTG module\n\n#\n\n#---compilation requires Fortran compiler & C-Fortran interface capabilities\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##---make sure a Fortran compiler is available\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---check C-Fortran interface capabilities\n",
        "Line" : 13,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "cmake/CreateBazaarVersionControlHeader.cmake" : {
      "ObjectId" : "c39a0acebddde35ae4d80b5a7a90584daab3beb3",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---generate (when necessary) bzr version/branch information header KVBzrInfo.h\n\n#\n\n# * if Bazaar is not available, this must be a .tgz with an existing KVBzrInfo.h in the source directory,\n\n#     therefore we copy the existing file\n",
        "Line" : 3,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "#--- sources are under version control\n",
        "Line" : 14,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "#--- sources are not under version control\n",
        "Line" : 28,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "#--- strange: Bazaar is not installed, and no KVBzrInfo.h exists???\n",
        "Line" : 30,
        "CharPositionInLine" : 50
      },
      "4" : {
        "Text" : "#--- copy existing file to build directory\n",
        "Line" : 36,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#--- Bazaar is not available: therefore we use the existing file (if there is one)\n",
        "Line" : 43,
        "CharPositionInLine" : 20
      },
      "6" : {
        "Text" : "#--- strange: Bazaar is not installed, and no KVBzrInfo.h exists???\n",
        "Line" : 45,
        "CharPositionInLine" : 49
      },
      "7" : {
        "Text" : "#--- copy existing file to build directory\n",
        "Line" : 51,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 8
    },
    "cmake/CreateConfigHeader.cmake" : {
      "ObjectId" : "e6405c4300a9e3c2a8387150cd65e3e166fd111e",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#--- get infos on number of processors on machine\n",
        "Line" : 103,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "cmake/CreateGitVersionControlHeader.cmake" : {
      "ObjectId" : "f4536b95e2aeab3f266dc45698988d52d0b6c28a",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---generate (when necessary) git version/branch information header KVGitInfo.h\n\n#\n\n# * if Git is not available, this must be a .tgz with an existing KVGitInfo.h in the source directory,\n\n#     therefore we copy the existing file\n",
        "Line" : 3,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "#--- sources are under version control\n",
        "Line" : 14,
        "CharPositionInLine" : 3
      },
      "2" : {
        "Text" : "#--- sources are not under version control\n",
        "Line" : 23,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "#--- strange: Git is not installed, and no KVGitInfo.h exists???\n",
        "Line" : 25,
        "CharPositionInLine" : 50
      },
      "4" : {
        "Text" : "#--- copy existing file to build directory\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#--- Git is not available: therefore we use the existing file (if there is one)\n",
        "Line" : 38,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "#--- strange: Git is not installed, and no KVGitInfo.h exists???\n",
        "Line" : 40,
        "CharPositionInLine" : 49
      },
      "7" : {
        "Text" : "#--- copy existing file to build directory\n",
        "Line" : 46,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 8
    },
    "cmake/CreateKaliVedaVersionHeader.cmake" : {
      "ObjectId" : "43326203d2969e4ab4ba58d89f77adb03c5d7587",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---generate version information header KVVersion.h\n",
        "Line" : 3,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "cmake/CreateVersionControlHeader.cmake" : {
      "ObjectId" : "15233a09f1903fc0433db627bc274e3ddf361080",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/EndExamplesIndex.cmake" : {
      "ObjectId" : "4d2eb397ab439283a4ef2a35be19a43393620fd3",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "cmake/FindBazaar.cmake" : {
      "ObjectId" : "99ed7df5b8a6e16c633098458b439b43781c286e",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n#  This program source code file is part of KICAD, a free EDA CAD application.\n\n#\n\n#  Copyright (C) 2010 Wayne Stambaugh <stambaughw@verizon.net>\n\n#  Copyright (C) 2010 Kicad Developers, see AUTHORS.txt for contributors.\n\n#\n\n#  This program is free software; you can redistribute it and/or\n\n#  modify it under the terms of the GNU General Public License\n\n#  as published by the Free Software Foundation; either version 2\n\n#  of the License, or (at your option) any later version.\n\n#\n\n#  This program is distributed in the hope that it will be useful,\n\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\n#  GNU General Public License for more details.\n\n#\n\n#  You should have received a copy of the GNU General Public License\n\n#  along with this program; if not, you may find one here:\n\n#  http://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n\n#  or you may search the http://www.gnu.org website for the version 2 license,\n\n#  or you may write to the Free Software Foundation, Inc.,\n\n#  51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n\n#\n\n# This CMake script finds the Bazaar version control system executable and\n\n# and fetches the veresion string to valid that Bazaar was found and executes\n\n# properly.\n\n#\n\n# Usage:\n\n#  find_package( Bazaar )\n\n#\n\n# User definable.\n\n#    Bazaar_EXECUTABLE      Set this to use a version of Bazaar that is not in\n\n#                           current path.  Defaults to bzr.\n\n#\n\n# Defines:\n\n#    Bazaar_FOUND           Set to TRUE if Bazaar command line client is found\n\n#                           and the bzr --version command executes properly.\n\n#    Bazaar_VERSION         Result of the bzr --version command.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Bazaar commands should be executed with the C locale, otherwise\n\n# the message (which are parsed) may be translated causing the regular\n\n# expressions to fail.\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Fetch the Bazaar executable version.\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# restore the previous LC_ALL\n",
        "Line" : 71,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "cmake/FindGRU.cmake" : {
      "ObjectId" : "b8e2e2fad0931897aed60059dffdd18f699d64b0",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Try to find GRU\n\n# Once done this will define\n\n#\n\n#  GRU_FOUND    - system has GRU\n\n#  GRU_LIB      - full path of libGRU.so\n\n#  GRU_LIB_DIR  - directory containing libGRU.so\n\n#  GRU_INC_DIR  - path to GRU headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if thisgru.(c)sh script was used, GRUDIR envvar should be set: try $GRUDIR/lib\n\n# or : try LD_LIBRARY_PATH to find libGRU.so\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---now find headers\n",
        "Line" : 19,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "cmake/FindGemini.cmake" : {
      "ObjectId" : "3c5be523a72372914cf3516700986004270dad99",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Try to find Gemini++ (compiled with ROOT support)\n\n# Once done this will define\n\n#\n\n#  GEMINI_FOUND    - system has Gemini++\n\n#  GEMINI_LIB      - full path of libGemini.so\n\n#  GEMINI_LIB_DIR  - directory containing libGemini.so\n\n#  GEMINI_INC_DIR  - path to CNucleus.h header\n\n#\n\n# User can suggest location to cmake with: -DGEMINI_DIR=...\n\n# This directory should contain both lib/ and include/gemini directories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# try LD_LIBRARY_PATH to find libGEMINI.so\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---now find headers\n",
        "Line" : 25,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "cmake/FindROOT.cmake" : {
      "ObjectId" : "3118452f512b08de7160a5207903fb7ae8d01108",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Finds ROOT instalation\n\n# This module sets up ROOT information\n\n# It defines:\n\n# ROOT_FOUND          If the ROOT is found\n\n# ROOT_INCLUDE_DIR    PATH to the include directory\n\n# ROOT_INCLUDE_DIRS   PATH to the include directories (not cached)\n\n# ROOT_LIBRARIES      Most common libraries\n\n# ROOT_<name>_LIBRARY Full path to the library <name>\n\n# ROOT_LIBRARY_DIR    PATH to the library directory\n\n#\n\n# Updated by K. Smith (ksmith37@nd.edu) to properly handle\n\n#  dependencies in ROOT_GENERATE_DICTIONARY\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# Locate the tools\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#--set all ROOT flags corresponding to enabled features\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#--ignore 'gnuinstall' otherwise it will affect the KaliVeda build even\n\n#--if cmake is invoked with gnuinstall=off\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#--unset 'soversion' if enabled - it will cause problems\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---set ROOT module include path depending on major version\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\tset(ROOT_USE_FILE ${PROJECT_SOURCE_DIR}/cmake/root5/ROOTUseFile.cmake)\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\tset(ROOT_USE_FILE ${PROJECT_SOURCE_DIR}/cmake/root6/ROOTUseFile.cmake)\n",
        "Line" : 119,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#---for ROOT6 option 'cxx11' should always be set, but sometimes it is not\n\n#   in the root-config --features list (???)\n",
        "Line" : 120,
        "CharPositionInLine" : 3
      },
      "9" : {
        "Text" : "#--check we are using same compiler as ROOT for v6 (requires clang)\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/FindRange.cmake" : {
      "ObjectId" : "c49f358ca0d3d4a9e6981e1656fd545d2a413912",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Try to find Ricardo Yanez's librange.so library\n\n# Once done this will define\n\n#\n\n#  RANGE_FOUND    - system has librange.so\n\n#  RANGE_LIB      - full path of librange.so\n\n#  RANGE_LIB_DIR  - directory containing librange.so\n\n#  RANGE_INC_DIR  - path to range.h header\n\n#\n\n# User can suggest location to cmake with: -DRANGE_DIR=...\n\n# This directory should contain both lib/ and include/ directories\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# try LD_LIBRARY_PATH to find libRANGE.so\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---now find headers\n",
        "Line" : 25,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 3
    },
    "cmake/FindXROOTD.cmake" : {
      "ObjectId" : "cee6fcc89687745faeaa3196fb0510bc9326e79d",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# Try to find XROOTD\n\n# Once done this will define\n\n#\n\n#  XROOTD_FOUND - system has XROOTD\n\n#  XROOTD_INCLUDE_DIR - the XROOTD include directory\n\n#  XROOTD_INCLUDE_DIRS - with additonal include directories (non cached)\n\n#  XROOTD_LIBRARIES - The libraries needed to use XROOTD\n\n#  XROOTD_CFLAGS - Additional compilation flags (defines)\n\n#  XROOTD_OLDPACK - old-style packaging for XROOTD libraries\n\n#  XROOTD_NOMAIN - No main available: xproofd not build\n\n#  XROOTD_NOOLDCLNT - No old client available: use built-in version\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Regular version string; parse it out\n",
        "Line" : 31,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Old version string: we keep only the first numerics, i.e. the date\n",
        "Line" : 38,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Set include dirs and compiler macro variable\n",
        "Line" : 51,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Search for the required libraries; this depends on packaging ...\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "cmake/GenerateRootLibrary.cmake" : {
      "ObjectId" : "19f69bca848d8f81a7179f83c410e0e8757e588c",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---INSTALL_CLASS_HEADERS(file1 file2 ... OPTIONS [options])\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---GENERATE_ROOT_DICTIONARY(libname LINKDEF [name of LinkDef.h] HEADERS [toto.h titi.h ...] DEPENDENCIES [lib1 lib2])\n\n#\n\n#---Generate ROOT dictionary & rootmap.\n\n#   This works with ROOT5 or ROOT6.\n\n#   For ROOT6 we generate the .pcm file too.\n\n#   rootmap and pcm will be installed in ${CMAKE_INSTALL_LIBDIR}\n\n#\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---GENERATE_ROOT_LIBRARY(libname [DICT_EXCLUDE toto.h titi.h ...] [LIB_EXCLUDE Class1 Class2...] DEPENDENCIES lib1 lib2)\n\n#\n\n#---Generate ROOT dictionary & shared library from all .h & .cpp in current directory\n\n#   Directory must also contain LinkDef.h file\n\n#   This works with ROOT5 or ROOT6.\n\n#   For ROOT5 we generate the rootmap. For ROOT6 we generate the .pcm\n\n#\n\n#  To exclude some headers from dictionary generation: DICT_EXCLUDE toto.h titi.h ...\n\n#    - corresponding source file will still be compiled, and header will be installed\n\n#  To exclude some classes from shared library: LIB_EXCLUDE Class1 Class2 ...\n\n#    - corresponding source files will not be compiled\n\n#    - corresponding header files will not be used in dictionary, and not installed\n\n# \n\n#   All used headers will be installed in ${CMAKE_INSTALL_INCLUDEDIR}\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---get list of all headers in directory, except LinkDef.h\n",
        "Line" : 57,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#--remove any headers which were given to argument DICT_EXCLUDE\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#--all header files are installed, even if not used in dictionary generation\n",
        "Line" : 81,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#--remove source path from header filenames to be given to dictionary generator\n",
        "Line" : 83,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#---get list of all sources in directory\n\n#---for each class in LIB_EXCLUDE we remove the corresponding .cpp and .h\n\n#---from source & header file lists\n",
        "Line" : 91,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 8
    },
    "cmake/KaliVedaInstallDirs.cmake" : {
      "ObjectId" : "65b0b8554c627e0fb53b124d21f2cbe1effb452a",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Define GNU standard installation directories\n\n# Provides install directory variables as defined for GNU software:\n\n#  http://www.gnu.org/prep/standards/html_node/Directory-Variables.html\n\n# Inclusion of this module defines the following variables:\n\n#  CMAKE_INSTALL_<dir>      - destination for files of a given type\n\n#  CMAKE_INSTALL_FULL_<dir> - corresponding absolute path\n\n# where <dir> is one of:\n\n#  BINDIR           - user executables (bin)\n\n#  LIBDIR           - object code libraries (lib or lib64 or lib/<multiarch-tuple> on Debian)\n\n#  INCLUDEDIR       - C/C++ header files (include)\n\n#  SYSCONFDIR       - read-only single-machine data (etc)\n\n#  DATAROOTDIR      - read-only architecture-independent data (share)\n\n#  DATADIR          - read-only architecture-independent data (DATAROOTDIR/kaliveda)\n\n#  MANDIR           - man documentation (DATAROOTDIR/man)\n\n#  MACRODIR         - ROOT macros (DATAROOTDIR/macros)\n\n#  CINTINCDIR       - CINT include files (LIBDIR/cint)\n\n#  ICONDIR          - icons (DATAROOTDIR/icons)\n\n#  SRCDIR           - sources (DATAROOTDIR/src)\n\n#  FONTDIR          - fonts (DATAROOTDIR/fonts)\n\n#  DOCDIR           - documentation kaliveda (DATAROOTDIR/doc/PROJECT_NAME)\n\n#  TESTDIR          - tests (DOCDIR/test)\n\n#  TUTDIR           - tutorials (DOCDIR/tutorials)\n\n#  ACLOCALDIR       - locale-dependent data (DATAROOTDIR/aclocal)\n\n#  CMAKEDIR         - cmake modules (DATAROOTDIR/cmake)\n\n#  ELISPDIR         - lisp files (DATAROOTDIR/emacs/site-lisp)\n\n#\n\n# Each CMAKE_INSTALL_<dir> value may be passed to the DESTINATION options of\n\n# install() commands for the corresponding file type.  If the includer does\n\n# not define a value the above-shown default will be used and the value will\n\n# appear in the cache for editing by the user.\n\n# Each CMAKE_INSTALL_FULL_<dir> value contains an absolute path constructed\n\n# from the corresponding destination by prepending (if necessary) the value\n\n# of CMAKE_INSTALL_PREFIX.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2011 Nikita Krupen'ko <krnekit@gmail.com>\n\n# Copyright 2011 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 97,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Result directories\n\n#\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/KaliVedaMacros.cmake" : {
      "ObjectId" : "e5b5082d6a9463e43e1fbc2f97dc25dd1bf99e20",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---KALIVEDA_SET_INCLUDE_DIRS(library MODULES mod1 mod2 ...)\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---CHANGE_LIST_TO_STRING(mystring list1 list2 list3)\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---KALIVEDA_SET_MODULE_DEPS(<variable> library MODULES mod1 mod2 ...)\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---BUILD_KALIVEDA_EXAMPLES_DIRECTORY()\n\n#\n\n# Compile every source file (*.cpp *.cxx *.C) in the current project's examples/ directory\n\n# They can use classes from any module in the current project (they are all built\n\n# before the examples), plus those from any project built before this one\n\n#\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---get list of sources\n",
        "Line" : 60,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#---set include directories\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#---get list of projects so far configured\n",
        "Line" : 65,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "#---set paths to find includes in all projects\n",
        "Line" : 67,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#---get list of all libraries\n",
        "Line" : 72,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "#---check for corresponding header file\n",
        "Line" : 77,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "#---we have toto.cpp & toto.h => it is a class\n",
        "Line" : 81,
        "CharPositionInLine" : 12
      },
      "11" : {
        "Text" : "#---it is a simple function\n",
        "Line" : 86,
        "CharPositionInLine" : 12
      },
      "12" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ADD_KALIVEDA_EXAMPLE_CLASS(classname)\n\n#\n\n# Compile class 'classname' in current directory\n\n#\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#---write LinkDef.h file\n",
        "Line" : 109,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "#---generate dictionary etc.\n",
        "Line" : 120,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#---Get the list of include directories------------------\n",
        "Line" : 122,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "#---Get the list of definitions---------------------------\n",
        "Line" : 129,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# avoid generator expressions\n",
        "Line" : 132,
        "CharPositionInLine" : 64
      },
      "18" : {
        "Text" : "#---call rootcint------------------------------------------\n",
        "Line" : 137,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "#---call rootcling------------------------------------------\n",
        "Line" : 143,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "#---build library\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "21" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ADD_KALIVEDA_EXAMPLE_FUNCTION(source)\n\n#\n\n# Compile source file 'source' in current directory\n\n#\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#--get filename without extension or path\n",
        "Line" : 162,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---BUILD_KALIVEDA_MODULE(kvmod PARENT kvtopdir [KVMOD_DEPENDS kvmod1 kvmod2...] [EXTRA_LIBS lib1 lib2...] \n\n#             [DICT_EXCLUDE toto.h titi.h ...] [LIB_EXCLUDE Class1 Class2...])\n\n#\n\n#---Build the current module, i.e. a subdirectory in KVMultiDet/, KVIndra/, etc.\n\n#   PARENT = name of top-level directory i.e. KVMultiDet\n\n#   KVMOD_DEPENDS = list of modules in same top-level directory that this module depends on\n\n#                   i.e. they must & will be built first\n\n#   EXTRA_LIBS = extra libraries/targets this module depends on\n\n#  To exclude some headers from dictionary generation: DICT_EXCLUDE toto.h titi.h ...\n\n#  To exclude some classes from shared library: LIB_EXCLUDE Class1 Class2 ...\n\n#\n\n#  For each module we fill the following GLOBAL properties:\n\n#        ${PARENT}_MOD_LIST : list of all modules in ${PARENT}\n\n#        ${PARENT}_LIB_LIST : list of all library targets in ${PARENT}\n\n#        KALIVEDA_LIB_LIST  : global list of all library targets\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 177,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#---generate library & rootmap\n",
        "Line" : 209,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---BUILD_KALIVEDA_SUBPROJECT([DATASETS ds1 ds2 ...])\n\n#                             [IGNORE_DIRS dir1 dir2 ...])\n\n#\n\n#---CMakeLists.txt for a KaliVeda subproject i.e. KVMultiDet, KVIndra, ...\n\n#---DATASETS = list of dataset subdirectories\n\n#---IGNORE_DIRS = subdirectories to ignore\n\n#\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#---get name of directory = name of subproject\n",
        "Line" : 232,
        "CharPositionInLine" : 1
      },
      "27" : {
        "Text" : "#---add to list of subprojects\n",
        "Line" : 236,
        "CharPositionInLine" : 1
      },
      "28" : {
        "Text" : "#---get list of modules (=subdirectories)\n",
        "Line" : 239,
        "CharPositionInLine" : 1
      },
      "29" : {
        "Text" : "#---remove dataset dirs, etc.\n",
        "Line" : 242,
        "CharPositionInLine" : 1
      },
      "30" : {
        "Text" : "#---configure modules\n",
        "Line" : 246,
        "CharPositionInLine" : 1
      },
      "31" : {
        "Text" : "#---install configuration files\n",
        "Line" : 251,
        "CharPositionInLine" : 1
      },
      "32" : {
        "Text" : "#---everything in data/ is installed in ${CMAKE_INSTALL_DATADIR}\n",
        "Line" : 258,
        "CharPositionInLine" : 1
      },
      "33" : {
        "Text" : "#---everything in examples/ is installed in ${CMAKE_INSTALL_TUTDIR}/${KVSUBPROJECT}\n",
        "Line" : 263,
        "CharPositionInLine" : 1
      },
      "34" : {
        "Text" : "#---everything in factory/ is installed in ${CMAKE_INSTALL_TMPLDIR}\n",
        "Line" : 269,
        "CharPositionInLine" : 1
      },
      "35" : {
        "Text" : "#---install dataset directories in ${CMAKE_INSTALL_DATASETDIR}\n",
        "Line" : 274,
        "CharPositionInLine" : 1
      },
      "36" : {
        "Text" : "#---write Makefile for automatic database updating\n",
        "Line" : 278,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 37
    },
    "cmake/KaliVedaUseFile.cmake" : {
      "ObjectId" : "a2f304591b55b92d4bd37f66de81964b279d8397",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---include this file in external project to setup environment\n\n#---needed to use KaliVeda libraries\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---set path to header files\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---to be able to use modules for building with ROOT 5 or 6\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "cmake/ROOTUseFile.cmake" : {
      "ObjectId" : "5a8f9d5e0ecdd925efb6032a4b2ca754d924dcf7",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---Define the Standard macros for ROOT-----------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---Set Link and include directories--------------------------------------------------------------\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/SetRPATHConf.cmake" : {
      "ObjectId" : "fda68ff3a79270c5fbbebb2d20145ed87f67ae98",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# use, i.e. don't skip the full RPATH for the build tree\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# when building, don't use the install RPATH already\n\n# (but later on when installing)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add the automatically determined parts of the RPATH\n\n# which point to directories outside the build tree to the install RPATH\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# the RPATH to be used when installing, but only if it's not a system directory\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/root5/CheckCXXCompilerFlag.cmake" : {
      "ObjectId" : "3618b71390e8a80bea37889d5bef257d5222480a",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check whether the CXX compiler supports a given flag.\n\n# CHECK_CXX_COMPILER_FLAG(<flag> <var>)\n\n#  <flag> - the compiler flag\n\n#  <var>  - variable to store the result\n\n# This internally calls the check_cxx_source_compiles macro.  See help\n\n# for CheckCXXSourceCompiles for a listing of variables that can\n\n# modify the build.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2010 Kitware, Inc.\n\n# Copyright 2006 Alexander Neundorf <neundorf@kde.org>\n\n# Copyright 2011 Matthias Kretz <kretz@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Some compilers do not fail with a bad flag\n",
        "Line" : 30,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# GNU\n",
        "Line" : 31,
        "CharPositionInLine" : 81
      },
      "4" : {
        "Text" : "# GNU\n\n# Clang\n\n# Clang \n\n# MSVC\n\n# MSVC, any lang\n\n# Intel\n\n# Intel\n\n# Intel\n\n# HP\n\n# SunPro\n\n# XL\n",
        "Line" : 32,
        "CharPositionInLine" : 60
      },
      "5" : {
        "Text" : "# AIX\n",
        "Line" : 43,
        "CharPositionInLine" : 69
      },
      "6" : {
        "Text" : "# PGI\n\n# Open64\n",
        "Line" : 44,
        "CharPositionInLine" : 60
      },
      "CommentCount" : 7
    },
    "cmake/root5/CheckCompiler.cmake" : {
      "ObjectId" : "736ae5fe7a200167e8f32b21e7766bbb364db529",
      "LastModified" : "2018-05-27T02:37:42Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#  CheckCompiler.cmake\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---Enable FORTRAN (unfortunatelly is not not possible in all cases)-------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#--Work-around for CMake issue 0009220\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#----Get the compiler file name (to ensure re-location)---------------------------------------------\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#----Test if clang setup works----------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---Obtain the major and minor version of the GNU compiler-------------------------------------------\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#---Set a default build type for single-configuration CMake generators if no build type is set------\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#---Check for cxx11 option------------------------------------------------------------\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#---Check for other compiler flags-------------------------------------------------------------------\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#---Need to locate thead libraries and options to set properly some compilation flags---------------- \n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#---Setup details depending opn the major platform type----------------------------------------------\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# gcc6+ : turn off -Wmisleading-indentation: too many warnings due to ROOT headers\n",
        "Line" : 101,
        "CharPositionInLine" : 3
      },
      "12" : {
        "Text" : "# gcc7+ : turn off -Wimplicit-fallthrough: too many warnings due to code copied from ROOT\n\n# gcc7+ : turn off -Wformat-truncation\n",
        "Line" : 107,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "#---Check whether libc++ is used or not---------------------------------------------------------------\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#---Print the final compiler flags--------------------------------------------------------------------\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "cmake/root5/RootNewMacros.cmake" : {
      "ObjectId" : "b7e6990c7cc1f3e82e43c4cdd1ff6cac4f2c494b",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#  RootNewMacros.cmake\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# See \"cmake --help-policy CMP0003\" for more details\n\n# See \"cmake --help-policy CMP0011\" for more details\n\n# See \"cmake --help-policy CMP0009\" for more details\n",
        "Line" : 4,
        "CharPositionInLine" : 30
      },
      "2" : {
        "Text" : "# See \"cmake --help-policy CMP0022\" for more details\n",
        "Line" : 8,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "#---Modify the behaviour for local and non-local builds--------------------------------------------\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_GLOB_FILES( <variable> [REALTIVE path] [FILTER regexp] <sources> ...)\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_GET_SOURCES( <variable> cwd <sources> ...)\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Eliminate G__* files\n",
        "Line" : 128,
        "CharPositionInLine" : 54
      },
      "7" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---REFLEX_GENERATE_DICTIONARY( dictionary headerfiles SELECTION selectionfile OPTIONS opt1 opt2 ...)\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#---Get List of header files---------------\n",
        "Line" : 151,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#---Get Selection file------------------------------------\n",
        "Line" : 165,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "#set(gccxmlopts \"--gccxmlopt=\\'--gccxml-cxxflags -m64 \\'\")\n",
        "Line" : 176,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Creating this target at ALL level enables the possibility to generate dictionaries (genreflex step)\n\n# well before the dependent libraries of the dictionary are build  \n",
        "Line" : 201,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_GENERATE_DICTIONARY( dictionary headerfiles LINKDEF linkdef OPTIONS opt1 opt2 ...)\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#---Get the list of header files-------------------------\n",
        "Line" : 211,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "#---Get the list of include directories------------------\n",
        "Line" : 226,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "#---Get the list of definitions---------------------------\n",
        "Line" : 241,
        "CharPositionInLine" : 2
      },
      "16" : {
        "Text" : "# avoid generator expressions\n",
        "Line" : 244,
        "CharPositionInLine" : 59
      },
      "17" : {
        "Text" : "#---Get LinkDef.h file------------------------------------\n",
        "Line" : 248,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "#---call rootcint------------------------------------------\n",
        "Line" : 260,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_LINKER_LIBRARY( <name> source1 source2 ...[TYPE STATIC|SHARED] [DLLEXPORT] LIBRARIES lib1 lib2 ... DEPENDENCIES lib3 l1b4)\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 268,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# This is a copy and certainly should last one\n",
        "Line" : 277,
        "CharPositionInLine" : 66
      },
      "21" : {
        "Text" : "#---create a list of all the object files-----------------------------\n",
        "Line" : 284,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "#foreach(src1 ${lib_srcs})\n\n#  if(NOT src1 MATCHES \"[.]h$|[.]icc$|[.]hxx$|[.]hpp$\")\n\n#    string (REPLACE ${CMAKE_CURRENT_SOURCE_DIR} \"\" src2 ${src1})\n\n#    string (REPLACE ${CMAKE_CURRENT_BINARY_DIR} \"\" src3 ${src2})     \n\n#    string (REPLACE \"..\" \"__\" src ${src3})     \n\n#    get_filename_component(name ${src} NAME_WE)\n\n#    set(lib_objs ${lib_objs} ${library}.dir/${CMAKE_CFG_INTDIR}/${name}.obj)\n\n#  endif()\n\n#endforeach()\n",
        "Line" : 286,
        "CharPositionInLine" : 6
      },
      "23" : {
        "Text" : "#---create a shared library with the .def file------------------------\n",
        "Line" : 308,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "#---set the .def file as generated------------------------------------\n",
        "Line" : 312,
        "CharPositionInLine" : 4
      },
      "25" : {
        "Text" : "#---create a custom pre-link command that runs bindexplib\n",
        "Line" : 314,
        "CharPositionInLine" : 4
      },
      "26" : {
        "Text" : "#----Installation details-------------------------------------------------------\n",
        "Line" : 336,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_MODULE_LIBRARY( <name> source1 source2 ... [DLLEXPORT] LIBRARIES library1 library2 ...)\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "#----Installation details-------------------------------------------------------\n",
        "Line" : 370,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_USE_PACKAGE( package )\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "#  if(IntegratedBuild)\n\n#    if( EXISTS ${CMAKE_SOURCE_DIR}/${package}/CMakeLists.txt)\n\n#      set(_use_packages ${_use_packages} ${package})\n\n#      set_property(GLOBAL APPEND PROPERTY ROOT_BUILDTREE_PACKAGES ${package})\n\n#      file(READ ${CMAKE_SOURCE_DIR}/${package}/CMakeLists.txt file_contents)\n\n#      string( REGEX MATCHALL \"ROOT_USE_PACKAGE[ ]*[(][ ]*([^ )])+\" vars ${file_contents})\n\n#      foreach( var ${vars})\n\n#        string(REGEX REPLACE \"ROOT_USE_PACKAGE[ ]*[(][ ]*([^ )])\" \"\\\\1\" p ${var})\n\n#        #---avoid calling the same one at the same directory level ---------------------------------\n\n#        list(FIND _use_packages ${p} _done)\n\n#        if(_done EQUAL -1)\n\n#          ROOT_USE_PACKAGE(${p})\n\n#        endif()\n\n#      endforeach()\n\n#    else()\n\n#      find_package(${package})\n\n#      GET_PROPERTY(parent DIRECTORY PROPERTY PARENT_DIRECTORY)\n\n#      if(parent)\n\n#        set(${package}_environment  ${${package}_environment} PARENT_SCOPE)\n\n#       else()\n\n#        set(${package}_environment  ${${package}_environment} )\n\n#      endif()\n\n#     include_directories( ${${package}_INCLUDE_DIRS} )\n\n#      link_directories( ${${package}_LIBRARY_DIRS} )\n\n#    endif()\n\n#  endif()\n",
        "Line" : 380,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_GENERATE_ROOTMAP( library LINKDEF linkdef LIBRRARY lib DEPENDENCIES lib1 lib2 )\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 408,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#---Build the rootmap file--------------------------------------\n",
        "Line" : 436,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "#---Install the rootmap file------------------------------------\n",
        "Line" : 442,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_INSTALL_HEADERS([dir1 dir2 ...])\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 446,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_STANDARD_LIBRARY_PACKAGE(libname DEPENDENCIES lib1 lib2)\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 465,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_EXECUTABLE( <name> source1 source2 ... LIBRARIES library1 library2 ...)\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 476,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "#----Installation details------------------------------------------------------\n",
        "Line" : 501,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---REFLEX_BUILD_DICTIONARY( dictionary headerfiles selectionfile OPTIONS opt1 opt2 ...  LIBRARIES lib1 lib2 ... )\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 517,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#----Installation details-------------------------------------------------------\n",
        "Line" : 525,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_CHECK_OUT_OF_SOURCE_BUILD( )\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 532,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# function ROOT_ADD_TEST( <name> COMMAND cmd [arg1... ]\n\n#                        [PRECMD cmd [arg1...]] [POSTCMD cmd [arg1...]]\n\n#                        [OUTPUT outfile] [ERROR errfile]\n\n#                        [ENVIRONMENT var1=val1 var2=val2 ...\n\n#                        [DEPENDS test1 ...]\n\n#                        [TIMEOUT seconds]\n\n#                        [DEBUG]\n\n#                        [SOURCE_DIR dir] [BINARY_DIR dir]\n\n#                        [WORKING_DIR dir]\n\n#                        [BUILD target] [PROJECT project]\n\n#                        [PASSREGEX exp] [FAILREGEX epx]\n\n#                        [PASSRC code])\n\n#\n",
        "Line" : 546,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#- Handle COMMAND argument\n",
        "Line" : 566,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# if command is a target, get the actual executable\n",
        "Line" : 576,
        "CharPositionInLine" : 55
      },
      "44" : {
        "Text" : "# if the command is found in the system, use it\n",
        "Line" : 581,
        "CharPositionInLine" : 55
      },
      "45" : {
        "Text" : "# if not absolute, assume is found in current binary dir\n",
        "Line" : 583,
        "CharPositionInLine" : 55
      },
      "46" : {
        "Text" : "# take as it is\n",
        "Line" : 586,
        "CharPositionInLine" : 55
      },
      "47" : {
        "Text" : "#- Handle PRE and POST commands\n",
        "Line" : 597,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "#- Handle OUTPUT, ERROR, DEBUG arguments\n",
        "Line" : 608,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "#- Handle ENVIRONMENT argument\n",
        "Line" : 662,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "#- Copy files to the build directory.\n",
        "Line" : 669,
        "CharPositionInLine" : 2
      },
      "51" : {
        "Text" : "#- Locate the test driver\n",
        "Line" : 675,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "#- Now we can actually add the test\n",
        "Line" : 686,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "#- Handle TIMOUT and DEPENDS arguments\n",
        "Line" : 715,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# ROOT_ADD_TEST_SUBDIRECTORY( <name> )\n\n#----------------------------------------------------------------------------\n",
        "Line" : 742,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# ROOT_ADD_BUILTIN_DEPENDENCIES(target EXTERNAL)\n\n#----------------------------------------------------------------------------\n",
        "Line" : 750,
        "CharPositionInLine" : 0
      },
      "56" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# ROOT_ADD_CXX_FLAG(var flag)\n\n#----------------------------------------------------------------------------\n",
        "Line" : 761,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# ROOT_ADD_C_FLAG(var flag)\n\n#----------------------------------------------------------------------------\n",
        "Line" : 771,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 58
    },
    "cmake/root5/SetUpLinux.cmake" : {
      "ObjectId" : "080f38a15efb32e707ed52a4e14940be66303db3",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Select flags.\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#Settings for cint\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#TODO\n",
        "Line" : 74,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# Select flags.\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#Settings for cint\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#TODO\n",
        "Line" : 109,
        "CharPositionInLine" : 25
      },
      "6" : {
        "Text" : "# Check icc compiler version and set compile flags according to the\n",
        "Line" : 125,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Select flags.\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#Settings for cint\n",
        "Line" : 181,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#TODO\n",
        "Line" : 184,
        "CharPositionInLine" : 25
      },
      "CommentCount" : 10
    },
    "cmake/root5/SetUpMacOS.cmake" : {
      "ObjectId" : "906b5249bbc20d395515ff7104fb195c33a51409",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(CRYPTLIBS \"-lcrypt\")\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---This is needed to help CMake to locate the X11 headers in the correct place and not under /usr/include\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---------------------------------------------------------------------------------------------------------\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#TODO: check haveconfig and rpath -> set rpath true\n\n#TODO: check Thread, define link command\n\n#TODO: more stuff check configure script\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Select flags.\n",
        "Line" : 79,
        "CharPositionInLine" : 5
      },
      "5" : {
        "Text" : "#settings for cint\n",
        "Line" : 91,
        "CharPositionInLine" : 5
      },
      "6" : {
        "Text" : "# Select flags.\n",
        "Line" : 113,
        "CharPositionInLine" : 5
      },
      "7" : {
        "Text" : "#settings for cint\n",
        "Line" : 125,
        "CharPositionInLine" : 5
      },
      "8" : {
        "Text" : "#---Set Linker flags----------------------------------------------------------------------\n",
        "Line" : 134,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 9
    },
    "cmake/root5/SetUpWindows.cmake" : {
      "ObjectId" : "9b6dd9d560e33d60bead038356d3c1b1cff2080c",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---Select compiler flags----------------------------------------------------------------\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---Add parallel build flag---------------------------------------------------------------\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---Set Linker flags----------------------------------------------------------------------\n\n#set(CMAKE_EXE_LINKER_FLAGS ${CMAKE_EXE_LINKER_FLAGS})\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---Remove the \"config type\" subdirectories-----------------------------------------------\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake/root6/CheckCXXCompilerFlag.cmake" : {
      "ObjectId" : "4dfba140be72dc0abe72b39d5cffd1b441148ef3",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check whether the CXX compiler supports a given flag.\n\n# CHECK_CXX_COMPILER_FLAG(<flag> <var>)\n\n#  <flag> - the compiler flag\n\n#  <var>  - variable to store the result\n\n# This internally calls the check_cxx_source_compiles macro.  See help\n\n# for CheckCXXSourceCompiles for a listing of variables that can\n\n# modify the build.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2006-2010 Kitware, Inc.\n\n# Copyright 2006 Alexander Neundorf <neundorf@kde.org>\n\n# Copyright 2011 Matthias Kretz <kretz@kde.org>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Some compilers do not fail with a bad flag\n",
        "Line" : 30,
        "CharPositionInLine" : 5
      },
      "3" : {
        "Text" : "# GNU\n",
        "Line" : 31,
        "CharPositionInLine" : 81
      },
      "4" : {
        "Text" : "# GNU\n\n# Clang\n\n# Clang\n\n# MSVC\n\n# MSVC, any lang\n\n# Intel\n\n# Intel\n\n# Intel\n\n# HP\n\n# SunPro\n\n# XL\n",
        "Line" : 32,
        "CharPositionInLine" : 60
      },
      "5" : {
        "Text" : "# AIX\n",
        "Line" : 43,
        "CharPositionInLine" : 69
      },
      "6" : {
        "Text" : "# PGI\n\n# Open64\n",
        "Line" : 44,
        "CharPositionInLine" : 60
      },
      "CommentCount" : 7
    },
    "cmake/root6/CheckCompiler.cmake" : {
      "ObjectId" : "f91cb3425c5bc05e04482ac436b0b8b0f14201ba",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#  CheckCompiler.cmake\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---Enable FORTRAN (unfortunatelly is not not possible in all cases)-------------------------------\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#--Work-around for CMake issue 0009220\n",
        "Line" : 7,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#----Get the compiler file name (to ensure re-location)---------------------------------------------\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#----Test if clang setup works----------------------------------------------------------------------\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---Obtain the major and minor version of the GNU compiler-------------------------------------------\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#---Set a default build type for single-configuration CMake generators if no build type is set------\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#---Check for cxx11 option------------------------------------------------------------\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#---Check for libcxx option------------------------------------------------------------\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#---Need to locate thead libraries and options to set properly some compilation flags----------------\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#---Setup details depending opn the major platform type----------------------------------------------\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#---Print the final compiler flags--------------------------------------------------------------------\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "cmake/root6/RootNewMacros.cmake" : {
      "ObjectId" : "1a9f5c247bb67cad89460337f5a972294c49425a",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#  RootNewMacros.cmake\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# See \"cmake --help-policy CMP0003\" for more details\n\n# See \"cmake --help-policy CMP0011\" for more details\n\n# See \"cmake --help-policy CMP0009\" for more details\n",
        "Line" : 4,
        "CharPositionInLine" : 30
      },
      "2" : {
        "Text" : "#-- Avoid warning of OLD policy on Mac OSX\n",
        "Line" : 9,
        "CharPositionInLine" : 16
      },
      "3" : {
        "Text" : "# See \"cmake --help-policy CMP0022\" for more details\n",
        "Line" : 10,
        "CharPositionInLine" : 34
      },
      "4" : {
        "Text" : "#-- No more needed on Mac OSX\n\n#if(APPLE)\n\n#  if(gnuinstall)\n\n#    set(ROOT_LIBRARY_PROPERTIES ${ROOT_LIBRARY_PROPERTIES}\n\n#         INSTALL_NAME_DIR \"${CMAKE_INSTALL_FULL_LIBDIR}\"\n\n#         BUILD_WITH_INSTALL_RPATH ON)\n\n#else()\n\n#    set(ROOT_LIBRARY_PROPERTIES ${ROOT_LIBRARY_PROPERTIES}\n\n#         INSTALL_NAME_DIR \"@rpath\"\n\n#         BUILD_WITH_INSTALL_RPATH ON)\n\n#  endif()\n\n#endif()\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---Modify the behaviour for local and non-local builds--------------------------------------------\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_GLOB_FILES( <variable> [REALTIVE path] [FILTER regexp] <sources> ...)\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_GET_SOURCES( <variable> cwd <sources> ...)\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Eliminate G__* files\n",
        "Line" : 127,
        "CharPositionInLine" : 54
      },
      "9" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---REFLEX_GENERATE_DICTIONARY( dictionary headerfiles SELECTION selectionfile OPTIONS opt1 opt2 ...)\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#---Get List of header files---------------\n",
        "Line" : 150,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "#---Get Selection file------------------------------------\n",
        "Line" : 164,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "#---roottest compability---------------------------------\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "# Follow the roottest dictionary library naming\n",
        "Line" : 177,
        "CharPositionInLine" : 44
      },
      "14" : {
        "Text" : "#---roottest compability---------------------------------\n",
        "Line" : 203,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Creating this target at ALL level enables the possibility to generate dictionaries (genreflex step)\n\n# well before the dependent libraries of the dictionary are build\n",
        "Line" : 212,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_GENERATE_DICTIONARY( dictionary headerfiles MODULE module DEPENDENCIES dep1 dep2\n\n#                                                    STAGE1 LINKDEF linkdef OPTIONS opt1 opt2 ...)\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 219,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#---roottest compability---------------------------------\n",
        "Line" : 226,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "#---Get the list of header files-------------------------\n",
        "Line" : 232,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "#---Get the list of include directories------------------\n",
        "Line" : 247,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "#---Get the list of definitions---------------------------\n",
        "Line" : 259,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# avoid generator expressions\n",
        "Line" : 262,
        "CharPositionInLine" : 59
      },
      "22" : {
        "Text" : "#---Get LinkDef.h file------------------------------------\n",
        "Line" : 266,
        "CharPositionInLine" : 2
      },
      "23" : {
        "Text" : "#---Build the names for library, pcm and rootmap file ----\n",
        "Line" : 279,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "#---Set the library output directory-----------------------\n",
        "Line" : 287,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "#---Get the library and module dependencies-----------------\n",
        "Line" : 318,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "#---what rootcling command to use--------------------------\n",
        "Line" : 325,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "#---call rootcint------------------------------------------\n",
        "Line" : 338,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "#---roottest compability\n",
        "Line" : 345,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_LINKER_LIBRARY( <name> source1 source2 ...[TYPE STATIC|SHARED] [DLLEXPORT] LIBRARIES library1 library2 ...)\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# we are building a test, so add EXCLUDE_FROM_ALL\n",
        "Line" : 374,
        "CharPositionInLine" : 15
      },
      "31" : {
        "Text" : "# This is a copy and certainly should last one\n",
        "Line" : 377,
        "CharPositionInLine" : 66
      },
      "32" : {
        "Text" : "#---create a list of all the object files-----------------------------\n",
        "Line" : 384,
        "CharPositionInLine" : 4
      },
      "33" : {
        "Text" : "#foreach(src1 ${lib_srcs})\n\n#  if(NOT src1 MATCHES \"[.]h$|[.]icc$|[.]hxx$|[.]hpp$\")\n\n#    string (REPLACE ${CMAKE_CURRENT_SOURCE_DIR} \"\" src2 ${src1})\n\n#    string (REPLACE ${CMAKE_CURRENT_BINARY_DIR} \"\" src3 ${src2})\n\n#    string (REPLACE \"..\" \"__\" src ${src3})\n\n#    get_filename_component(name ${src} NAME_WE)\n\n#    set(lib_objs ${lib_objs} ${library}.dir/${CMAKE_CFG_INTDIR}/${name}.obj)\n\n#  endif()\n\n#endforeach()\n",
        "Line" : 386,
        "CharPositionInLine" : 6
      },
      "34" : {
        "Text" : "#---create a shared library with the .def file------------------------\n",
        "Line" : 408,
        "CharPositionInLine" : 4
      },
      "35" : {
        "Text" : "#---set the .def file as generated------------------------------------\n",
        "Line" : 412,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "#---create a custom pre-link command that runs bindexplib\n",
        "Line" : 414,
        "CharPositionInLine" : 4
      },
      "37" : {
        "Text" : "#----Installation details-------------------------------------------------------\n",
        "Line" : 439,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_OBJECT_LIBRARY( <name> source1 source2 ...)\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 460,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#--- Fill the property OBJECTS with all the object files\n\n#    This is needed becuase the generator expression $<TARGET_OBJECTS:target>\n\n#    does not get expanded when used in custom command dependencies\n",
        "Line" : 474,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "#message(WARNING \"Unknown location of source ${s} for object library ${library}\")\n",
        "Line" : 485,
        "CharPositionInLine" : 8
      },
      "41" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_MODULE_LIBRARY( <name> source1 source2 ... [DLLEXPORT] LIBRARIES library1 library2 ...)\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 495,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "#----Installation details-------------------------------------------------------\n",
        "Line" : 508,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_USE_PACKAGE( package )\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 514,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_GENERATE_ROOTMAP( library LINKDEF linkdef LIBRRARY lib DEPENDENCIES lib1 lib2 )\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 520,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#--- No needed anymore\n",
        "Line" : 524,
        "CharPositionInLine" : 13
      },
      "46" : {
        "Text" : "#---Set the library output directory-----------------------\n",
        "Line" : 529,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "#---Build the rootmap file--------------------------------------\n",
        "Line" : 557,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "#---Install the rootmap file------------------------------------\n",
        "Line" : 563,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_INSTALL_HEADERS([dir1 dir2 ...] OPTIONS [options])\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_STANDARD_LIBRARY_PACKAGE(libname DEPENDENCIES lib1 lib2)\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 587,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_EXECUTABLE( <name> source1 source2 ... LIBRARIES library1 library2 ...)\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 597,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# we are building a test, so add EXCLUDE_FROM_ALL\n",
        "Line" : 608,
        "CharPositionInLine" : 15
      },
      "53" : {
        "Text" : "#----Installation details------------------------------------------------------\n",
        "Line" : 626,
        "CharPositionInLine" : 2
      },
      "54" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---REFLEX_BUILD_DICTIONARY( dictionary headerfiles selectionfile OPTIONS opt1 opt2 ...  LIBRARIES lib1 lib2 ... )\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 642,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "#----Installation details-------------------------------------------------------\n",
        "Line" : 650,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n#---ROOT_CHECK_OUT_OF_SOURCE_BUILD( )\n\n#---------------------------------------------------------------------------------------------------\n",
        "Line" : 657,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# function ROOT_ADD_TEST( <name> COMMAND cmd [arg1... ]\n\n#                        [PRECMD cmd [arg1...]] [POSTCMD cmd [arg1...]]\n\n#                        [OUTPUT outfile] [ERROR errfile]\n\n#                        [ENVIRONMENT var1=val1 var2=val2 ...\n\n#                        [DEPENDS test1 ...]\n\n#                        [TIMEOUT seconds]\n\n#                        [DEBUG]\n\n#                        [SOURCE_DIR dir] [BINARY_DIR dir]\n\n#                        [WORKING_DIR dir]\n\n#                        [BUILD target] [PROJECT project]\n\n#                        [PASSREGEX exp] [FAILREGEX epx]\n\n#                        [PASSRC code])\n\n#\n",
        "Line" : 671,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "#- Handle COMMAND argument\n",
        "Line" : 691,
        "CharPositionInLine" : 2
      },
      "59" : {
        "Text" : "# if command is a target, get the actual executable\n",
        "Line" : 701,
        "CharPositionInLine" : 55
      },
      "60" : {
        "Text" : "# if the command is found in the system, use it\n",
        "Line" : 706,
        "CharPositionInLine" : 55
      },
      "61" : {
        "Text" : "# if not absolute, assume is found in current binary dir\n",
        "Line" : 708,
        "CharPositionInLine" : 55
      },
      "62" : {
        "Text" : "# take as it is\n",
        "Line" : 711,
        "CharPositionInLine" : 55
      },
      "63" : {
        "Text" : "#- Handle PRE and POST commands\n",
        "Line" : 722,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "#- Handle OUTPUT, ERROR, DEBUG arguments\n",
        "Line" : 733,
        "CharPositionInLine" : 2
      },
      "65" : {
        "Text" : "#- Handle ENVIRONMENT argument\n",
        "Line" : 787,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "#- Copy files to the build directory.\n",
        "Line" : 794,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "#- Locate the test driver\n",
        "Line" : 800,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "#- Now we can actually add the test\n",
        "Line" : 811,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "#- Handle TIMOUT and DEPENDS arguments\n",
        "Line" : 840,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# ROOT_ADD_TEST_SUBDIRECTORY( <name> )\n\n#----------------------------------------------------------------------------\n",
        "Line" : 867,
        "CharPositionInLine" : 0
      },
      "71" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# ROOT_ADD_BUILTIN_DEPENDENCIES(target EXTERNAL)\n\n#----------------------------------------------------------------------------\n",
        "Line" : 875,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# ROOT_ADD_CXX_FLAG(var flag)\n\n#----------------------------------------------------------------------------\n",
        "Line" : 886,
        "CharPositionInLine" : 0
      },
      "73" : {
        "Text" : "#----------------------------------------------------------------------------\n\n# ROOT_ADD_C_FLAG(var flag)\n\n#----------------------------------------------------------------------------\n",
        "Line" : 896,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 74
    },
    "cmake/root6/SetUpLinux.cmake" : {
      "ObjectId" : "883d87ff5d45891779da195558fad5b7b99222fa",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Select flags.\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "#Settings for cint\n",
        "Line" : 71,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "#TODO\n",
        "Line" : 74,
        "CharPositionInLine" : 25
      },
      "3" : {
        "Text" : "# Select flags.\n",
        "Line" : 94,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#Settings for cint\n",
        "Line" : 106,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#TODO\n",
        "Line" : 109,
        "CharPositionInLine" : 25
      },
      "6" : {
        "Text" : "# Check icc compiler version and set compile flags according to the\n",
        "Line" : 125,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# Select flags.\n",
        "Line" : 173,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#Settings for cint\n",
        "Line" : 181,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#TODO\n",
        "Line" : 184,
        "CharPositionInLine" : 25
      },
      "CommentCount" : 10
    },
    "cmake/root6/SetUpMacOS.cmake" : {
      "ObjectId" : "12f707253fbf4e598cdba0342300bb8b31c911fc",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#set(CRYPTLIBS \"-lcrypt\")\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---This is needed to help CMake to locate the X11 headers in the correct place and not under /usr/include\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#---------------------------------------------------------------------------------------------------------\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#TODO: check haveconfig and rpath -> set rpath true\n\n#TODO: check Thread, define link command\n\n#TODO: more stuff check configure script\n",
        "Line" : 28,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# Select flags.\n",
        "Line" : 78,
        "CharPositionInLine" : 5
      },
      "5" : {
        "Text" : "#settings for cint\n",
        "Line" : 90,
        "CharPositionInLine" : 5
      },
      "6" : {
        "Text" : "# Change on 15/04/2018 STREQUAL in MATCHES to take into account that on MacOSX CMAKE_CXX_COMPILER_ID is now AppleClang and no more Clang\n",
        "Line" : 97,
        "CharPositionInLine" : 5
      },
      "7" : {
        "Text" : "# Select flags.\n",
        "Line" : 112,
        "CharPositionInLine" : 5
      },
      "8" : {
        "Text" : "#settings for cint\n",
        "Line" : 124,
        "CharPositionInLine" : 5
      },
      "9" : {
        "Text" : "#---Set Linker flags----------------------------------------------------------------------\n",
        "Line" : 133,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "cmake/root6/SetUpWindows.cmake" : {
      "ObjectId" : "d800360ae5002044ca268840ba16cd33ab661eab",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---Global variables for Win32 platform-------------------------------------------------\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#----Check the compiler that is used-----------------------------------------------------\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Select compiler flags\n",
        "Line" : 24,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#---Set Linker flags----------------------------------------------------------------------\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Settings for cint\n",
        "Line" : 40,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "#---Select compiler flags----------------------------------------------------------------\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "#---Set Linker flags----------------------------------------------------------------------\n",
        "Line" : 80,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "etc/proof/CMakeLists.txt" : {
      "ObjectId" : "7ef23ecc15da9f9fdbfb0baf4a50fd1b2a9f8f29",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#KaliVeda.par: KaliVeda/PROOF-INF/BUILD.sh KaliVeda/PROOF-INF/SETUP.C\n\n#\t@tar zcf $@ KaliVeda\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "execs/CMakeLists.txt" : {
      "ObjectId" : "b5ebd1aba41c34f09ddf86817a8a5d272d11e9e6",
      "LastModified" : "2019-02-19T16:17:58Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---set paths to find all KVMultiDet headers\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---set paths to find all KVIndra headers\n",
        "Line" : 5,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#---install built executables\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---install shell scripts\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "fitltg-0.1/CMakeLists.txt" : {
      "ObjectId" : "e5748db70b51d813f1461e25f9b0f82f5ce3a17c",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---make sure that Fortran/C interface is available\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "fitltg-0.1/Makefile.am" : {
      "ObjectId" : "67948dad2a83960881a4f1c9ea6a1a4f062f1aba",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "fitltg-0.1/src/CMakeLists.txt" : {
      "ObjectId" : "290d5f06603c78e7ea287d13840c991d14ff87d5",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#install(FILES fit_ede.h DESTINATION include COMPONENT headers)\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "fitltg-0.1/src/Makefile.am" : {
      "ObjectId" : "4a6da2b16d671a1f33a7ef53b213255801718c59",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "indrafazia/CMakeLists.txt" : {
      "ObjectId" : "cf19197d3b659b389f719069e3018714ad50e1eb",
      "LastModified" : "2018-05-05T11:00:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#---list of datasets\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    }
  },
  "FileTypes" : {
    "CMAKE" : 90,
    "AUTOMAKE" : 2
  },
  "ElapsedTime" : 4105
}