{
  "Repository" : "10272672",
  "Revision" : "HEAD",
  "ObjectId" : "50b8a365ff6e16dd8c3b91df3c4dd82987d23662",
  "CommitTime" : "2018-11-04T14:13:34Z",
  "Files" : {
    "src/boost/libs/python/build/g++/Makefile" : {
      "ObjectId" : "8bb0c815b332709788feb4dd1b86de704a202f93",
      "LastModified" : "2012-09-16T07:23:54Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# All source files have associated object files\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/thirdparty/python/Misc/indent.pro" : {
      "ObjectId" : "02cceb62021453a0220f3a3c7b32f8d8bd4a8ea6",
      "LastModified" : "2014-04-30T16:53:39Z",
      "FileType" : "QMAKE",
      "CommentCount" : 0
    },
    "src/thirdparty/python/Modules/_ctypes/libffi/Makefile.am" : {
      "ObjectId" : "1dcdc8110e69e8b0f5f87f7c5db9b38a68ace913",
      "LastModified" : "2015-01-10T13:18:56Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this with automake to create Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## ################################################################\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##\n\n## This section is for make and multilib madness.\n\n##\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Work around what appears to be a GNU make bug handling MAKEFLAGS\n\n# values defined in terms of make variables, as is the case for CC and\n\n# friends when we are called from the top level Makefile.\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Subdir rules rely on $(FLAGS_TO_PASS)\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Build debug. Define FFI_DEBUG on the commandline so that, when building with\n\n# MSVC, it can link against the debug CRT.\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/thirdparty/python/Modules/_ctypes/libffi/include/Makefile.am" : {
      "ObjectId" : "fd28024973191098d27dd6afdf566d38ada7e525",
      "LastModified" : "2014-04-30T16:53:39Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this with automake to create Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/thirdparty/python/Modules/_ctypes/libffi/man/Makefile.am" : {
      "ObjectId" : "afcbfb69f1d3de0cce6c171f357c5927972db76b",
      "LastModified" : "2014-04-30T16:53:39Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this with automake to create Makefile.in\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/thirdparty/python/Modules/_ctypes/libffi/testsuite/Makefile.am" : {
      "ObjectId" : "da10465d283c266d93aebd13ececdcd9075ca304",
      "LastModified" : "2015-01-10T13:18:56Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Process this file with automake to produce Makefile.in.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/thirdparty/python/Modules/zlib/Makefile" : {
      "ObjectId" : "6bba86c73fca2abda416baa1a7cf883b3494fb29",
      "LastModified" : "2014-04-30T16:53:39Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/thirdparty/python/PC/os2emx/Makefile" : {
      "ObjectId" : "800610e53e35c90dc73b12f6fa489e87a575fee1",
      "LastModified" : "2014-04-30T16:53:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#####################==================----------------\n\n#\n\n# Top-Level Makefile for Building Python 2.6 for OS/2 using GCC/EMX\n\n# Originally written by Andrew Zabolotny, <bit@eltech.ru> for Python 1.5.2\n\n# Modified by Andrew MacIntyre, <andymac@pcug.org.au> for Python 2.6\n\n#\n\n# This makefile was developed for use with [P]GCC/EMX compiler any\n\n# version and GNU Make.\n\n#\n\n# The output of the build is a largish Python26.DLL containing the\n\n# essential modules of Python and a small Python.exe program to start\n\n# the interpreter. When embedding Python within another program, only\n\n# Python26.DLL is needed. We also build python_s.a static library (which\n\n# can be converted into OMF (.lib) format using emxomf tool) and both\n\n# python.a and python.lib import libraries.  Then the optional \n\n# extension modules, which are OS/2 DLLs renamed with a PYD file extension.\n\n#\n\n# Recommended build order:\n\n#   make depend\t\t(if you have makedep)\n\n#   make all\n\n#   make lx\t\t(if you have lxlite)\n\n#   make test\t\t(optional)\n\n#\n\n#####################==================----------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# === Compilation mode: debug or release ===\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#MODE=\t\tdebug\n\n# === Assert() enabled ===\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#ASSERTIONS=yes\n\n# === Hard-wire installation location ===\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#FIXED_PYHOME=yes\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# === Optional modules ===\n\n# Do you have the InfoZip compression library installed?\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Do you have the Ultra Fast Crypt (UFC) library installed?\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Do you have the Tcl/Tk library installed?\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Do you have the GNU readline library installed?\n\n# NOTE: I'm using a modified version of Kai Uwe Rommel's port that \n\n#       - is compiled with multithreading enabled\n\n#       - is linked statically\n\n#       I have had no success trying to use a DLL version, even when\n\n#       compiled with multithreading enabled.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Do you have the BSD DB library (v1.85) as included in the EMXBSD package?\n\n# NOTE: this library needs to be recompiled with a structure member\n\n#       renamed to avoid problems with the multithreaded errno support\n\n#       (there is a structure member called errno, used for shadowing the\n\n#       real errno, which conflicts with the errno redefinition of -Zmt)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Do you have the ncurses library installed? EMX's BSD curses aren't enough! \n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Do you have the GDBM library installed?\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Do you have the BZ2 compression library installed?\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Do you have the OpenSSL libraries installed\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# === install locations ===\n\n# default value of PYTHONHOME\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# default is to have everything in or under PYTHONHOME\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# === The Tools ===\n",
        "Line" : 73,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# adjust C compiler settings based on build options\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# We're using the OMF format since EMX's ld has a obscure bug\n\n# because of which it sometimes fails to build relocations\n\n# in .data segment that point to another .data locations\n\n# (except for the final linking if the .EXEs)\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# if fork() support is required, the main executable must be linked with ld\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# File extensions\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# === Build time resource settings ===\n",
        "Line" : 135,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# EMX's default number of file handles is 40, which is sometimes insufficient\n\n# (the tempfile regression test tries to create 100 temporary files)\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# The default stack size for child threads is 64k bytes, which is\n\n# insufficient for some applications which do a lot of work in threads\n\n# (such as Zope, especially in conjunction with Plone).\n\n# Note that this setting is distinct from the stack size for the main\n\n# thread, which is set via the %.def rule below.\n\n# EMX documents that the thread stack size should be at least 32768 bytes;\n\n# for Zope/Plone at least 128k bytes is recommended.\n\n# Uncomment & adjust the next line to override the default stack size:\n\n#CFLAGS+=\t-DTHREAD_STACK_SIZE=0x20000\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# === The environment ===\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Source file paths\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Python contains the central core, containing the builtins and interpreter.\n\n# Parser contains Python's Internal Parser and\n\n#   Standalone Parser Generator Program (Shares Some of Python's Modules)\n\n# Objects contains Python Object Types\n\n# Modules contains extension Modules (Built-In or as Separate DLLs)\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Unix shells tend to use \"$\" as delimiter for variable names.\n\n# Test for this behaviour and set $(BUCK) variable correspondigly ...\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Compute the \"double quote\" variable\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 29,
      "Errorlog" : "line 670:54 token recognition error at: '\"\\n\\n-include $(OUTBASE)python.dep\\n\u0000'\n"
    },
    "src/thirdparty/python/Tools/freeze/test/Makefile" : {
      "ObjectId" : "1679f723e7acd7bc01e26e7dbf197cc0ce7e91a1",
      "LastModified" : "2015-05-16T07:31:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile to test freeze\n\n# set PYTHON to path of Python interpreter to test\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# set OUTDIR to the temp directory for freeze\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/thirdparty/python/Tools/unicode/Makefile" : {
      "ObjectId" : "35744ad0d5e5de6ed6177a0e26148de520ed1332",
      "LastModified" : "2015-05-16T07:31:39Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# Recreate the Python charmap codecs from the Unicode mapping\n\n# files available at ftp://ftp.unicode.org/\n\n#\n\n#(c) Copyright Marc-Andre Lemburg, 2005.\n\n#    Licensed to PSF under a Contributor Agreement.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Python binary to use\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Remove tool to use\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "### Generic targets\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "### Mappings\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "### Codecs\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "### Cleanup\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    }
  },
  "FileTypes" : {
    "QMAKE" : 1,
    "MAKEFILE" : 5,
    "AUTOMAKE" : 4
  },
  "ElapsedTime" : 6484
}