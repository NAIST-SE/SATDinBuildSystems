{
  "Repository" : "813649",
  "Revision" : "HEAD",
  "ObjectId" : "b1ebe135b4217823ebdf56d9af5fe89b29723603",
  "CommitTime" : "2019-01-05T00:58:02Z",
  "Files" : {
    "3rdparty/ann/CMakeLists.txt" : {
      "ObjectId" : "1d8a6fc3de83c83f70c4cfcd1d52e450b7b9abe0",
      "LastModified" : "2010-03-21T04:34:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# for windows compilation, just exports the symbols (even though library is being built statically)\n",
        "Line" : 3,
        "CharPositionInLine" : 38
      },
      "CommentCount" : 1
    },
    "3rdparty/collada-2.4.0/CMakeLists.txt" : {
      "ObjectId" : "3fc465a7a3667d303c3c91b0a1e269a9d9db2436",
      "LastModified" : "2013-11-22T12:32:34Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# set the flags\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/collada-2.4.0/src/1.4/CMakeLists.txt" : {
      "ObjectId" : "9366b605c1881e2b9bf57e4bc90932048c63b269",
      "LastModified" : "2012-07-04T14:22:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/collada-2.4.0/src/1.5/CMakeLists.txt" : {
      "ObjectId" : "ae4308c85896b2278cbe6635e1441beb3eabf8a6",
      "LastModified" : "2012-07-04T14:22:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/convexdecomposition/CMakeLists.txt" : {
      "ObjectId" : "62e7a88e532b3e3468b62b087bf7dbcfaed5a5fe",
      "LastModified" : "2012-07-04T14:22:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/crlibm-1.0beta4/CMakeLists.txt" : {
      "ObjectId" : "60a12b3e52e59baf5654d00356e880a556ea5821",
      "LastModified" : "2015-07-14T01:08:04Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# http://www.cmake.org/cmake/help/cmake-2.6.html#policy:CMP0005\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compile the filib-compatible interval functions\n\n# BUILD_INTERVAL_FUNCTIONS\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# architecture- and system-specific FPU control header file\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Size of an SCS digit\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Number of digits in the SCS structure\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# also build a native version for checking libm on the host machine at build-time\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "3rdparty/flann-1.6.6/CMakeLists.txt" : {
      "ObjectId" : "a75aee3fe12b181cde8c889b2fcdbb26ab81e38f",
      "LastModified" : "2012-07-04T14:22:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Add an \"uninstall\" target\n\n#CONFIGURE_FILE (\"${PROJECT_SOURCE_DIR}/cmake/uninstall_target.cmake.in\"\n\n#    \"${PROJECT_BINARY_DIR}/uninstall_target.cmake\" IMMEDIATE @ONLY)\n\n#ADD_CUSTOM_TARGET (uninstall \"${CMAKE_COMMAND}\" -P\n\n#    \"${PROJECT_BINARY_DIR}/uninstall_target.cmake\")\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set the build type.  Options are:\n\n#  Debug          : w/ debug symbols, w/o optimization\n\n#  Release        : w/o debug symbols, w/ optimization\n\n#  RelWithDebInfo : w/ debug symbols, w/ optimization\n\n#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(CMAKE_BUILD_TYPE Release)\n",
        "Line" : 32,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#set(CMAKE_BUILD_TYPE Debug)\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#set the default path for built executables to the \"bin\" directory\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#set the default path for built libraries to the \"lib\" directory\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# set output path for tests\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Parallel HDF5 needs to find the \"mpi.h\" header file\n",
        "Line" : 82,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#set the C/C++ include path to the \"include\" directory\n",
        "Line" : 100,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# require proper c++\n\n#add_definitions( \"-Wall -ansi -pedantic\" )\n\n# HDF5 uses long long which is not ansi\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#add_subdirectory( examples )\n\n#add_subdirectory( test )\n\n#add_subdirectory( doc )\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "3rdparty/flann-1.6.6/Makefile" : {
      "ObjectId" : "58e4ba3b379e8457ceef927132d83bf7dc07b5b3",
      "LastModified" : "2012-07-04T14:22:07Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "3rdparty/flann-1.6.6/cmake/CMakeLists.txt" : {
      "ObjectId" : "d4ec33e577cf01b8e60ca39e09399c9ff0b714e7",
      "LastModified" : "2012-07-04T14:22:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#install(FILES ${pkg_conf_file}\n\n#    DESTINATION ${FLANN_LIB_INSTALL_DIR}/pkgconfig/ COMPONENT pkgconfig)\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/flann-1.6.6/cmake/UseLATEX.cmake" : {
      "ObjectId" : "48305651d89fc31c56505dcd54039a0f90ae4786",
      "LastModified" : "2012-07-04T14:22:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# File: UseLATEX.cmake\n\n# CMAKE commands to actually use the LaTeX compiler\n\n# Version: 1.7.3\n\n# Author: Kenneth Moreland (kmorel at sandia dot gov)\n\n#\n\n# Copyright 2004 Sandia Corporation.\n\n# Under the terms of Contract DE-AC04-94AL85000, there is a non-exclusive\n\n# license for use of this work by or on behalf of the\n\n# U.S. Government. Redistribution and use in source and binary forms, with\n\n# or without modification, are permitted provided that this Notice and any\n\n# statement of authorship are reproduced on all copies.\n\n#\n\n# The following MACROS are defined:\n\n#\n\n# ADD_LATEX_DOCUMENT(<tex_file>\n\n#                       [BIBFILES <bib_files>]\n\n#                       [INPUTS <input_tex_files>]\n\n#                       [IMAGE_DIRS] <image_directories>\n\n#                       [IMAGES] <image_files>\n\n#                       [CONFIGURE] <tex_files>\n\n#                       [DEPENDS] <tex_files>\n\n#                       [USE_INDEX] [USE_GLOSSARY]\n\n#                       [DEFAULT_PDF] [MANGLE_TARGET_NAMES])\n\n#       Adds targets that compile <tex_file>.  The latex output is placed\n\n#       in LATEX_OUTPUT_PATH or CMAKE_CURRENT_BINARY_DIR if the former is\n\n#       not set.  The latex program is picky about where files are located,\n\n#       so all input files are copied from the source directory to the\n\n#       output directory.  This includes the target tex file, any tex file\n\n#       listed with the INPUTS option, the bibliography files listed with\n\n#       the BIBFILES option, and any .cls, .bst, and .clo files found in\n\n#       the current source directory.  Images found in the IMAGE_DIRS\n\n#       directories or listed by IMAGES are also copied to the output\n\n#       directory and coverted to an appropriate format if necessary.  Any\n\n#       tex files also listed with the CONFIGURE option are also processed\n\n#       with the CMake CONFIGURE_FILE command (with the @ONLY flag.  Any\n\n#       file listed in CONFIGURE but not the target tex file or listed with\n\n#       INPUTS has no effect. DEPENDS can be used to specify generated files\n\n#       that are needed to compile the latex target.\n\n#\n\n#       The following targets are made:\n\n#               dvi: Makes <name>.dvi\n\n#               pdf: Makes <name>.pdf using pdflatex.\n\n#               safepdf: Makes <name>.pdf using ps2pdf.  If using the default\n\n#                       program arguments, this will ensure all fonts are\n\n#                       embedded and no lossy compression has been performed\n\n#                       on images.\n\n#               ps: Makes <name>.ps\n\n#               html: Makes <name>.html\n\n#               auxclean: Deletes <name>.aux.  This is sometimes necessary\n\n#                       if a LaTeX error occurs and writes a bad aux file.\n\n#\n\n#       The dvi target is added to the ALL.  That is, it will be the target\n\n#       built by default.  If the DEFAULT_PDF argument is given, then the\n\n#       pdf target will be the default instead of dvi.\n\n#\n\n#       If the argument MANGLE_TARGET_NAMES is given, then each of the\n\n#       target names above will be mangled with the <tex_file> name.  This\n\n#       is to make the targets unique if ADD_LATEX_DOCUMENT is called for\n\n#       multiple documents.  If the argument USE_INDEX is given, then\n\n#       commands to build an index are made.  If the argument USE_GLOSSARY\n\n#       is given, then commands to build a glossary are made.\n\n#\n\n# History:\n\n#\n\n# 1.7.3 Fix some issues with interactions between makeglossaries and bibtex\n\n#       (thanks to Mark de Wever).\n\n#\n\n# 1.7.2 Use ps2pdf to convert eps to pdf to get around the problem with\n\n#       ImageMagick dropping the bounding box (thanks to Lukasz Lis).\n\n#\n\n# 1.7.1 Fixed some dependency issues.\n\n#\n\n# 1.7.0 Added DEPENDS options (thanks to Theodore Papadopoulo).\n\n#\n\n# 1.6.1 Ported the makeglossaries command to CMake and embedded the port\n\n#       into UseLATEX.cmake.\n\n#\n\n# 1.6.0 Allow the use of the makeglossaries command.  Thanks to Oystein\n\n#       S. Haaland for the patch.\n\n#\n\n# 1.5.0 Allow any type of file in the INPUTS lists, not just tex file\n\n#       (suggested by Eric Noulard).  As a consequence, the ability to\n\n#       specify tex files without the .tex extension is removed.  The removed\n\n#       function is of dubious value anyway.\n\n#\n\n#       When copying input files, skip over any file that exists in the\n\n#       binary directory but does not exist in the source directory with the\n\n#       assumption that these files were added by some other mechanism.  I\n\n#       find this useful when creating large documents with multiple\n\n#       chapters that I want to build separately (for speed) as I work on\n\n#       them.  I use the same boilerplate as the starting point for all\n\n#       and just copy it with different configurations.  This was what the\n\n#       separate ADD_LATEX_DOCUMENT method was supposed to originally be for.\n\n#       Since its external use is pretty much deprecated, I removed that\n\n#       documentation.\n\n#\n\n# 1.4.1 Copy .sty files along with the other class and package files.\n\n#\n\n# 1.4.0 Added a MANGLE_TARGET_NAMES option that will mangle the target names.\n\n#\n\n#       Fixed problem with copying bib files that became apparent with\n\n#       CMake 2.4.\n\n#\n\n# 1.3.0 Added a LATEX_OUTPUT_PATH variable that allows you or the user to\n\n#       specify where the built latex documents to go.  This is especially\n\n#       handy if you want to do in-source builds.\n\n#\n\n#       Removed the ADD_LATEX_IMAGES macro and absorbed the functionality\n\n#       into ADD_LATEX_DOCUMENT.  The old interface was always kind of\n\n#       clunky anyway since you had to specify the image directory in both\n\n#       places.  It also made supporting LATEX_OUTPUT_PATH problematic.\n\n#\n\n#       Added support for jpeg files.\n\n#\n\n# 1.2.0 Changed the configuration options yet again.  Removed the NO_CONFIGURE\n\n#       Replaced it with a CONFIGURE option that lists input files for which\n\n#       configure should be run.\n\n#\n\n#       The pdf target no longer depends on the dvi target.  This allows you\n\n#       to build latex documents that require pdflatex.  Also added an option\n\n#       to make the pdf target the default one.\n\n#\n\n# 1.1.1 Added the NO_CONFIGURE option.  The @ character can be used when\n\n#       specifying table column separators.  If two or more are used, then\n\n#       will incorrectly substitute them.\n\n#\n\n# 1.1.0 Added ability include multiple bib files.  Added ability to do copy\n\n#       sub-tex files for multipart tex files.\n\n#\n\n# 1.0.0 If both ps and pdf type images exist, just copy the one that\n\n#       matches the current render mode.  Replaced a bunch of STRING\n\n#       commands with GET_FILENAME_COMPONENT commands that were made to do\n\n#       the desired function.\n\n#\n\n# 0.4.0 First version posted to CMake Wiki.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#############################################################################\n\n# Find the location of myself while originally executing.  If you do this\n\n# inside of a macro, it will recode where the macro was invoked.\n\n#############################################################################\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#############################################################################\n\n# Generic helper macros\n\n#############################################################################\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Helpful list macros.\n",
        "Line" : 150,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Parse macro arguments.\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Match the contents of a file to a regular expression.\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The FILE STRINGS command would be a bit better, but it's not supported on\n\n# older versions of CMake.\n",
        "Line" : 199,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#############################################################################\n\n# Macros that perform processing during a LaTeX build.\n\n#############################################################################\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#############################################################################\n\n# Helper macros for establishing LaTeX build.\n\n#############################################################################\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Just holds extensions for known image types.  They should all be lower case.\n",
        "Line" : 360,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# ImageMagick has broken eps to pdf conversion\n\n# use ps2pdf instead\n",
        "Line" : 394,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# Makes custom commands to convert a file to a particular type.\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# As a shortcut, we can just copy the file.\n",
        "Line" : 433,
        "CharPositionInLine" : 6
      },
      "13" : {
        "Text" : "# Check to see if there is another input file of the appropriate type.\n",
        "Line" : 443,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# If we still need to convert, do it.\n",
        "Line" : 453,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Adds custom commands to process the given files for dvi and pdf builds.\n\n# Adds the output files to the given variables (does not replace).\n",
        "Line" : 463,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Check to see if we need to downsample the image.\n",
        "Line" : 472,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# Make sure the output directory exists.\n",
        "Line" : 482,
        "CharPositionInLine" : 6
      },
      "18" : {
        "Text" : "# Do conversions for dvi.\n",
        "Line" : 486,
        "CharPositionInLine" : 6
      },
      "19" : {
        "Text" : "# Do conversions for pdf.\n",
        "Line" : 490,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# Special case: output exists but input does not.  Assume that it was\n\n# created elsewhere and skip the input file copy.\n",
        "Line" : 543,
        "CharPositionInLine" : 6
      },
      "21" : {
        "Text" : "#############################################################################\n\n# Commands provided by the UseLATEX.cmake \"package\"\n\n#############################################################################\n",
        "Line" : 551,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# Parses arguments to ADD_LATEX_DOCUMENT and ADD_LATEX_TARGETS and sets the\n\n# variables LATEX_TARGET, LATEX_IMAGE_DIR, LATEX_BIBFILES, LATEX_DEPENDS, and\n\n# LATEX_INPUTS.\n",
        "Line" : 561,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# The first argument is the target latex file.\n",
        "Line" : 572,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "# Backward compatibility between 1.6.0 and 1.6.1.\n",
        "Line" : 585,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "# Set up target names.\n",
        "Line" : 595,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "# For each directory in LATEX_IMAGE_DIRS, glob all the image files and\n\n# place them in LATEX_IMAGES.\n",
        "Line" : 612,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# Repeat these commands twice.\n",
        "Line" : 643,
        "CharPositionInLine" : 25
      },
      "28" : {
        "Text" : "# Add commands and targets for building dvi outputs.\n",
        "Line" : 706,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Add commands and targets for building pdf outputs (with pdflatex).\n",
        "Line" : 719,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# Since both the pdf and safepdf targets have the same output, we\n\n# cannot properly do the dependencies for both.  When selecting safepdf,\n\n# simply force a recompile every time.\n",
        "Line" : 742,
        "CharPositionInLine" : 6
      },
      "31" : {
        "Text" : "#############################################################################\n\n# Actually do stuff\n\n#############################################################################\n",
        "Line" : 797,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Must be part of the actual configure (included from CMakeLists.txt).\n",
        "Line" : 814,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 33
    },
    "3rdparty/flann-1.6.6/cmake/flann_utils.cmake" : {
      "ObjectId" : "52c0195d1876c3098740e70f7a466b5aab678f93",
      "LastModified" : "2012-07-04T14:22:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find version components\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# workaround a FindHDF5 bug\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add build target\n",
        "Line" : 53,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# add dependency to 'tests' target\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# add target for running test\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# add dependency to 'test' target\n",
        "Line" : 68,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# find test file\n",
        "Line" : 74,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# find python\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# add target for running test\n",
        "Line" : 84,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# add dependency to 'test' target\n",
        "Line" : 92,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# find python\n",
        "Line" : 101,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Also make sure that downloads are done before we run any tests\n",
        "Line" : 108,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 12
    },
    "3rdparty/flann-1.6.6/src/CMakeLists.txt" : {
      "ObjectId" : "911a573f2eb6becc094229fbde75ce3a8add2662",
      "LastModified" : "2012-07-04T14:22:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/flann-1.6.6/src/cpp/CMakeLists.txt" : {
      "ObjectId" : "994ddfaee391a81f271a8771a0a46e6d454a5341",
      "LastModified" : "2012-07-04T14:22:07Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#include_directories(${CMAKE_SOURCE_DIR}/include algorithms util nn .)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# have to do this manually for cmake 2.6\n",
        "Line" : 20,
        "CharPositionInLine" : 68
      },
      "2" : {
        "Text" : "# have to do this manually for cmake 2.6\n",
        "Line" : 37,
        "CharPositionInLine" : 66
      },
      "3" : {
        "Text" : "#if(WIN32)\n\n#if (BUILD_C_BINDINGS)\n\n#    install (\n\n#        TARGETS flann\n\n#        RUNTIME DESTINATION share/flann/matlab\n\n#    )\n\n#endif()\n\n#endif(WIN32)\n\n#\n\n#\n\n#install (\n\n#    TARGETS flann_cpp flann_cpp_s\n\n#    RUNTIME DESTINATION bin\n\n#    LIBRARY DESTINATION ${FLANN_LIB_INSTALL_DIR}\n\n#    ARCHIVE DESTINATION ${FLANN_LIB_INSTALL_DIR}\n\n#)\n\n#\n\n#if (BUILD_C_BINDINGS)\n\n#    install (\n\n#        TARGETS flann flann_s\n\n#        RUNTIME DESTINATION bin\n\n#        LIBRARY DESTINATION ${FLANN_LIB_INSTALL_DIR}\n\n#        ARCHIVE DESTINATION ${FLANN_LIB_INSTALL_DIR}\n\n#    )\n\n#endif()\n\n#\n\n#install (\n\n#    DIRECTORY flann\n\n#    DESTINATION include\n\n#    FILES_MATCHING PATTERN \"*.h\" PATTERN \"*.hpp\"\n\n#)\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "3rdparty/flann-1.6.6/src/python/CMakeLists.txt" : {
      "ObjectId" : "d8e9d4f925e6e3e45cd78688f22aceabefacb324",
      "LastModified" : "2012-07-04T14:22:07Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/fparser-4.5.2/CMakeLists.txt" : {
      "ObjectId" : "845dbacc430ea7710d46853680932767afdc9a98",
      "LastModified" : "2017-08-07T14:27:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# http://www.cmake.org/cmake/help/cmake-2.6.html#policy:CMP0005\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check if alloca exists\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# fpoptimizer.cc\n",
        "Line" : 45,
        "CharPositionInLine" : 33
      },
      "CommentCount" : 3
    },
    "3rdparty/ivcon/CMakeLists.txt" : {
      "ObjectId" : "37a668128a7e846d330fa15da33f10fea53d805b",
      "LastModified" : "2017-08-07T14:27:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/minizip/CMakeLists.txt" : {
      "ObjectId" : "b51d774f353b680f6600e9fb9e7bd73129f4c545",
      "LastModified" : "2017-08-07T14:27:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/pcre-8.02/CMakeLists.txt" : {
      "ObjectId" : "79db1421cd45b2fd70434c106639af1467654380",
      "LastModified" : "2017-08-07T14:27:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\r\n\n#\r\n\n#\r\n\n# This file allows building PCRE with the CMake configuration and build\r\n\n# tool. Download CMake in source or binary form from http://www.cmake.org/\r\n\n#\r\n\n# Original listfile by Christian Ehrlicher <Ch.Ehrlicher@gmx.de>\r\n\n# Refined and expanded by Daniel Richard G. <skunk@iSKUNK.ORG>\r\n\n# 2007-09-14 mod by Sheri so 7.4 supported configuration options can be entered\r\n\n# 2007-09-19 Adjusted by PH to retain previous default settings\r\n\n# 2007-12-26 (a) On UNIX, use names libpcre instead of just pcre\r\n\n#            (b) Ensure pcretest and pcregrep link with the local library,\r\n\n#                not a previously-installed one.\r\n\n#            (c) Add PCRE_SUPPORT_LIBREADLINE, PCRE_SUPPORT_LIBZ, and\r\n\n#                PCRE_SUPPORT_LIBBZ2.\r\n\n# 2008-01-20 Brought up to date to include several new features by Christian\r\n\n#            Ehrlicher.\r\n\n# 2008-01-22 Sheri added options for backward compatibility of library names\r\n\n#            when building with minGW:\r\n\n#            if \"ON\", NON_STANDARD_LIB_PREFIX causes shared libraries to\r\n\n#            be built without \"lib\" as prefix. (The libraries will be named\r\n\n#            pcre.dll, pcreposix.dll and pcrecpp.dll).\r\n\n#            if \"ON\", NON_STANDARD_LIB_SUFFIX causes shared libraries to\r\n\n#            be built with suffix of \"-0.dll\". (The libraries will be named\r\n\n#            libpcre-0.dll, libpcreposix-0.dll and libpcrecpp-0.dll - same names\r\n\n#            built by default with Configure and Make.\r\n\n# 2008-01-23 PH removed the automatic build of pcredemo.\r\n\n# 2008-04-22 PH modified READLINE support so it finds NCURSES when needed.\r\n\n# 2008-07-03 PH updated for revised UCP property support (change of files)\r\n\n# 2009-03-23 PH applied Steven Van Ingelgem's patch to change the name\r\n\n#            CMAKE_BINARY_DIR to PROJECT_BINARY_DIR so that it works when PCRE\r\n\n#            is included within another project.\r\n\n# 2009-03-23 PH applied a modified version of Steven Van Ingelgem's patches to\r\n\n#            add options to stop the building of pcregrep and the tests, and\r\n\n#            to disable the final configuration report.\r\n\n# 2009-04-11 PH applied Christian Ehrlicher's patch to show compiler flags that\r\n\n#            are set by specifying a release type.\r\n\n# 2010-01-02 PH added test for stdint.h\r\n\n# 2010-03-02 PH addes test for inttypes.h\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for FindReadline.cmake\r\n",
        "Line" : 40,
        "CharPositionInLine" : 57
      },
      "2" : {
        "Text" : "# external packages\r\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# User-configurable options\r\n\n#\r\n\n# (Note: CMakeSetup displays these in alphabetical order, regardless of\r\n\n# the order we use here)\r\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# bzip2 lib\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# zlib\r\n",
        "Line" : 138,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# readline lib\r\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Prepare build configuration\r\n",
        "Line" : 154,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This next one used to contain\r\n\n#       SET(PCRETEST_LIBS ${READLINE_LIBRARY})\r\n\n# but I was advised to add the NCURSES test as well, along with\r\n\n# some modifications to cmake/FindReadline.cmake which should\r\n\n# make it possible to override the default if necessary. PH\r\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Output files\r\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# What about pcre-config and libpcre.pc?\r\n",
        "Line" : 254,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Character table generation\r\n",
        "Line" : 266,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Source code\r\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Build setup\r\n",
        "Line" : 331,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# needed to make sure to not link debug libs\r\n\n# against release libs and vice versa\r\n",
        "Line" : 340,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Libraries\r\n\n# pcre\r\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# pcrecpp\r\n",
        "Line" : 370,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# Executables\r\n",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Removed by PH (2008-01-23) because pcredemo shouldn't really be built\r\n\n# automatically, and it gave trouble in some environments anyway.\r\n\n# ADD_EXECUTABLE(pcredemo pcredemo.c)\r\n\n# TARGET_LINK_LIBRARIES(pcredemo pcreposix)\r\n\n# IF(NOT BUILD_SHARED_LIBS)\r\n\n#     # make sure to not use declspec(dllimport) in static mode on windows\r\n\n#         SET_TARGET_PROPERTIES(pcredemo PROPERTIES COMPILE_FLAGS \"-DPCRE_STATIC\")\r\n\n# ENDIF(NOT BUILD_SHARED_LIBS)\r\n",
        "Line" : 393,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#SET(CMAKE_INSTALL_ALWAYS 1)\r\n\n#\r\n\n#INSTALL(TARGETS ${targets}\r\n\n#        RUNTIME DESTINATION bin\r\n\n#        LIBRARY DESTINATION lib\r\n\n#        ARCHIVE DESTINATION lib)\r\n\n#\r\n\n#INSTALL(FILES ${PCRE_HEADERS} ${PCREPOSIX_HEADERS} DESTINATION include)\r\n\n#\r\n\n#FILE(GLOB html ${PROJECT_SOURCE_DIR}/doc/html/*.html)\r\n\n#FILE(GLOB man1 ${PROJECT_SOURCE_DIR}/doc/*.1)\r\n\n#FILE(GLOB man3 ${PROJECT_SOURCE_DIR}/doc/*.3)\r\n\n#\r\n\n#IF(PCRE_BUILD_PCRECPP)\r\n\n#        INSTALL(FILES ${PCRECPP_HEADERS} DESTINATION include)\r\n\n#ELSE(PCRE_BUILD_PCRECPP)\r\n\n#        # Remove pcrecpp.3\r\n\n#        FOREACH(man ${man3})\r\n\n#                GET_FILENAME_COMPONENT(man_tmp ${man} NAME)\r\n\n#                IF(NOT man_tmp STREQUAL \"pcrecpp.3\")\r\n\n#                        SET(man3_new ${man3} ${man})\r\n\n#                ENDIF(NOT man_tmp STREQUAL \"pcrecpp.3\")\r\n\n#        ENDFOREACH(man ${man3})\r\n\n#        SET(man3 ${man3_new})\r\n\n#ENDIF(PCRE_BUILD_PCRECPP)\r\n\n#\r\n\n#\r\n\n#INSTALL(FILES ${man1} DESTINATION man/man1)\r\n\n#INSTALL(FILES ${man3} DESTINATION man/man3)\r\n\n#INSTALL(FILES ${html} DESTINATION share/doc/pcre/html)\r\n\n#\r\n\n## help, only for nice output\r\n",
        "Line" : 408,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# end CMakeLists.txt\r\n",
        "Line" : 502,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# set external flags\r\n",
        "Line" : 504,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 22
    },
    "3rdparty/pcre-8.02/cmake/FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "151d81250318e646a3baf86b4515fa237f725b5d",
      "LastModified" : "2017-08-07T14:27:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME (DEFAULT_MSG|\"Custom failure message\") VAR1 ... )\n\n#    This macro is intended to be used in FindXXX.cmake modules files.\n\n#    It handles the REQUIRED and QUIET argument to FIND_PACKAGE() and\n\n#    it also sets the <UPPERCASED_NAME>_FOUND variable.\n\n#    The package is found if all variables listed are TRUE.\n\n#    Example:\n\n#\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(LibXml2 DEFAULT_MSG LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR)\n\n#\n\n#    LibXml2 is considered to be found, if both LIBXML2_LIBRARIES and \n\n#    LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.\n\n#    If it is not found and REQUIRED was used, it fails with FATAL_ERROR, \n\n#    independent whether QUIET was used or not.\n\n#    If it is found, the location is reported using the VAR1 argument, so \n\n#    here a message \"Found LibXml2: /usr/lib/libxml2.so\" will be printed out.\n\n#    If the second argument is DEFAULT_MSG, the message in the failure case will \n\n#    be \"Could NOT find LibXml2\", if you don't like this message you can specify\n\n#    your own custom failure message there.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "3rdparty/pcre-8.02/cmake/FindReadline.cmake" : {
      "ObjectId" : "1d4cc55843136c7802eb4892b0b6fcffb13e95e3",
      "LastModified" : "2017-08-07T14:27:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# from http://websvn.kde.org/trunk/KDE/kdeedu/cmake/modules/FindReadline.cmake\n\n# http://websvn.kde.org/trunk/KDE/kdeedu/cmake/modules/COPYING-CMAKE-SCRIPTS\n\n# --> BSD licensed\n\n#\n\n# GNU Readline library finder\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# 2008-04-22 The next clause used to read like this:\n\n#\n\n#  FIND_LIBRARY(READLINE_LIBRARY NAMES readline)\n\n#        FIND_LIBRARY(NCURSES_LIBRARY NAMES ncurses )\n\n#        include(FindPackageHandleStandardArgs)\n\n#        FIND_PACKAGE_HANDLE_STANDARD_ARGS(Readline DEFAULT_MSG NCURSES_LIBRARY READLINE_INCLUDE_DIR READLINE_LIBRARY )\n\n#\n\n# I was advised to modify it such that it will find an ncurses library if\n\n# required, but not if one was explicitly given, that is, it allows the\n\n# default to be overridden. PH \n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "3rdparty/qhull/CMakeLists.txt" : {
      "ObjectId" : "bcdee5bffd25dbd19172b7a0ec705fdd64540dbc",
      "LastModified" : "2017-08-07T14:27:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "3rdparty/zlib/CMakeLists.txt" : {
      "ObjectId" : "12b7e5b76197b83f4e1b9a6c16f064a66d7e7bfd",
      "LastModified" : "2017-08-07T14:27:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\r\n\n# Check to see if we have large file support\r\n\n#\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We add these other definitions here because CheckTypeSize.cmake\r\n\n# in CMake 2.4.x does not automatically do so and we want\r\n\n# compatibility with CMake 2.4.x.\r\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# clear variable\r\n",
        "Line" : 26,
        "CharPositionInLine" : 32
      },
      "3" : {
        "Text" : "#\r\n\n# Check for fseeko\r\n\n#\r\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\r\n\n# Check for unistd.h\r\n\n#\r\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If we're doing an out of source build and the user has a zconf.h\r\n\n# in their source tree...\r\n",
        "Line" : 48,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#============================================================================\r\n\n# zlib\r\n\n#============================================================================\r\n",
        "Line" : 64,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# parse the full version number from zlib.h and include in ZLIB_FULL_VERSION\r\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# This property causes shared libraries on Linux to have the full version\r\n\n# encoded into their final filename.  We disable this on Cygwin because\r\n\n# it causes cygz-${ZLIB_FULL_VERSION}.dll to be created when cygz.dll\r\n\n# seems to be the default.\r\n\n#\r\n\n# This has no effect with MSVC, on that platform the version info for\r\n\n# the DLL comes from the resource file win32/zlib1.rc\r\n",
        "Line" : 112,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# On unix-like platforms the library is almost always called libz\r\n",
        "Line" : 123,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Creates zlib1.dll when building shared library version\r\n",
        "Line" : 126,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "#if(NOT SKIP_INSTALL_LIBRARIES AND NOT SKIP_INSTALL_ALL )\r\n\n#    install(TARGETS zlib\r\n\n#        RUNTIME DESTINATION bin\r\n\n#        ARCHIVE DESTINATION lib\r\n\n#        LIBRARY DESTINATION lib )\r\n\n#endif()\r\n\n#if(NOT SKIP_INSTALL_HEADERS AND NOT SKIP_INSTALL_ALL )\r\n\n#    install(FILES ${ZLIB_PUBLIC_HDRS} DESTINATION include)\r\n\n#endif()\r\n\n#if(NOT SKIP_INSTALL_FILES AND NOT SKIP_INSTALL_ALL )\r\n\n#    install(FILES zlib.3 DESTINATION share/man/man3)\r\n\n#endif()\r\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#============================================================================\r\n\n# Example binaries\r\n\n#============================================================================\r\n",
        "Line" : 143,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#add_executable(example example.c)\r\n\n#target_link_libraries(example zlib)\r\n\n#add_test(example example)\r\n\n#\r\n\n#add_executable(minigzip minigzip.c)\r\n\n#target_link_libraries(minigzip zlib)\r\n\n#\r\n\n#if(HAVE_OFF64_T)\r\n\n#    add_executable(example64 example.c)\r\n\n#    target_link_libraries(example64 zlib)\r\n\n#    set_target_properties(example64 PROPERTIES COMPILE_FLAGS \"-D_FILE_OFFSET_BITS=64\")\r\n\n#    add_test(example64 example64)\r\n\n#\r\n\n#    add_executable(minigzip64 minigzip.c)\r\n\n#    target_link_libraries(minigzip64 zlib)\r\n\n#    set_target_properties(minigzip64 PROPERTIES COMPILE_FLAGS \"-D_FILE_OFFSET_BITS=64\")\r\n\n#endif()\r\n",
        "Line" : 147,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# set external flags\r\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "CMakeLists.txt" : {
      "ObjectId" : "6cb19370d914c33714f661865f85cba3b10ec385",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# using import/export targets, 2.6.3 for open scene graph cmake files\r\n",
        "Line" : 1,
        "CharPositionInLine" : 39
      },
      "1" : {
        "Text" : "# Define here the needed parameters\r\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# http://www.cmake.org/cmake/help/cmake-2.6.html#policy:CMP0002\r\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# http://www.cmake.org/cmake/help/cmake-2.6.html#policy:CMP0003\r\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use, i.e. don't skip the full RPATH for the build tree\r\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# When building, don't use the install RPATH already\r\n\n# (but later on when installing)\r\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add the automatically determined parts of the RPATH\r\n\n# which point to directories outside the build tree to the install RPATH\r\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Custom CMake options\r\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#include(FindIntl)\r\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# pkg_check_modules\r\n",
        "Line" : 86,
        "CharPositionInLine" : 24
      },
      "10" : {
        "Text" : "## check python\r\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "# using PYTHON_INCLUDE_PATH instead of PYTHON_INCLUDE_DIRS?\r\n",
        "Line" : 93,
        "CharPositionInLine" : 29
      },
      "12" : {
        "Text" : "# look specifically for 2.6\r\n",
        "Line" : 95,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# back compat?\r\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "# architecture independent\r\n",
        "Line" : 106,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#    execute_process(\r\n\n#      COMMAND ${PYTHON_EXECUTABLE} -c \"from distutils.sysconfig import get_python_lib; print get_python_lib(0)\"\r\n\n#      OUTPUT_VARIABLE _python_sitepackage OUTPUT_STRIP_TRAILING_WHITESPACE\r\n\n#      RESULT_VARIABLE _python_failed0)\r\n\n#    # architexture dependent\r\n\n#    execute_process(\r\n\n#      COMMAND ${PYTHON_EXECUTABLE} -c \"from distutils.sysconfig import get_python_lib; print get_python_lib(1)\"\r\n\n#      OUTPUT_VARIABLE _python_distpackage OUTPUT_STRIP_TRAILING_WHITESPACE\r\n\n#      RESULT_VARIABLE _python_failed1)\r\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# get the major.minor python version\r\n",
        "Line" : 133,
        "CharPositionInLine" : 6
      },
      "17" : {
        "Text" : "# does not support symlinks\r\n",
        "Line" : 151,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# cache has to be STRING instead of PATH for path to remain relative\r\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "19" : {
        "Text" : "# Additional CMake modules for 3rd party library checks reside here\r\n",
        "Line" : 168,
        "CharPositionInLine" : 139
      },
      "20" : {
        "Text" : "# The RPATH to be used when installing\r\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#define OPENRAVE_PLUGINS_INSTALL_DIR \r\n\n#define OPENRAVE_DATA_INSTALL_DIR \"@CMAKE_INSTALL_PREFIX@/@OPENRAVE_DATA_INSTALL_DIR@\"\r\n\n#define OPENRAVE_PYTHON_INSTALL_DIR \"@CMAKE_INSTALL_PREFIX@/@OPENRAVE_PYTHON_INSTALL_DIR@\"\r\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# this practically removes all checks making it a very dangerous options to play with\r\n",
        "Line" : 202,
        "CharPositionInLine" : 88
      },
      "23" : {
        "Text" : "# the _GLIBCXX_DEBUG flag is very helpful in bounds checking for vector[] and iterators, however it requires all\r\n\n# libraries linking with openrave to use it\r\n",
        "Line" : 207,
        "CharPositionInLine" : 2
      },
      "24" : {
        "Text" : "#  if( CMAKE_BUILD_TYPE STREQUAL \"Debug\")\r\n\n#    set(OPENRAVE_EXPORT_CXXFLAGS \"${OPENRAVE_EXPORT_CXXFLAGS} -D_GLIBCXX_DEBUG\")\r\n\n#  endif()\r\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# apple doesn't have 64bit versions of file opening functions, so add them\r\n",
        "Line" : 235,
        "CharPositionInLine" : 2
      },
      "26" : {
        "Text" : "#gives linking problems\r\n\n#string(REGEX REPLACE \"/MDd\" \"/MD\" CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG}\")\r\n\n#string(REGEX REPLACE \"/MDd\" \"/MD\" CMAKE_C_FLAGS_DEBUG \"${CMAKE_C_FLAGS_DEBUG}\")\r\n",
        "Line" : 247,
        "CharPositionInLine" : 2
      },
      "27" : {
        "Text" : "# /EHc- allow extern \"C\" functions to throw exceptions\r\n",
        "Line" : 251,
        "CharPositionInLine" : 2
      },
      "28" : {
        "Text" : "# untar the source files\r\n",
        "Line" : 258,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# have to install dlls manually\r\n",
        "Line" : 279,
        "CharPositionInLine" : 2
      },
      "30" : {
        "Text" : "# force multi-threaded DLL boost\r\n",
        "Line" : 291,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# only look for installed boost if not an old version of msvc\r\n",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# have to rely on local boost and a hack\r\n",
        "Line" : 311,
        "CharPositionInLine" : 2
      },
      "33" : {
        "Text" : "# to facilitate compilation, visual studio libraries are included locally\r\n",
        "Line" : 322,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "# have to add to required flags for applications that will test linking with boost\r\n",
        "Line" : 338,
        "CharPositionInLine" : 2
      },
      "35" : {
        "Text" : "# this is a very important switch and some libraries seem now to have it....\r\n",
        "Line" : 382,
        "CharPositionInLine" : 25
      },
      "36" : {
        "Text" : "# generate the md5 sum for all OpenRAVE interfaces\r\n",
        "Line" : 390,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# math libraries\r\n",
        "Line" : 444,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "#if( MSVC )\r\n\n#  # MSVC has prepackaged assimp libraries\r\n\n#  set(ASSIMP_PATH ${CMAKE_CURRENT_SOURCE_DIR}/msvc_assimp)\r\n\n#endif()\r\n",
        "Line" : 475,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# For older versions of libassimp2, \r\n\n# like the one in Ubuntu 12.04 \r\n",
        "Line" : 486,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "# have to copy the DLLs, but not the other stuff in the lib dir\r\n",
        "Line" : 552,
        "CharPositionInLine" : 4
      },
      "41" : {
        "Text" : "# for qtcoin plugin.\r\n\n# it is necessary to check here since we would like the qt version stored in the openrave-config file\r\n",
        "Line" : 560,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# should fix this\r\n",
        "Line" : 564,
        "CharPositionInLine" : 4
      },
      "43" : {
        "Text" : "# always include libpcrecpp since we need it for URL parsing\r\n",
        "Line" : 584,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# include the local pcre\r\n",
        "Line" : 597,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# MSVC has prepackaged collada libraries\r\n",
        "Line" : 605,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "#find_package(COLLADA_DOM 2.4 COMPONENTS 1.5 1.4 PATHS ${COLLADA_PATH})\r\n",
        "Line" : 608,
        "CharPositionInLine" : 2
      },
      "47" : {
        "Text" : "# compile from sources\r\n",
        "Line" : 624,
        "CharPositionInLine" : 4
      },
      "48" : {
        "Text" : "# have to copy the DLLs, but not the other stuff in the lib dir\r\n",
        "Line" : 638,
        "CharPositionInLine" : 6
      },
      "49" : {
        "Text" : "# because several programs rely on linking with openrave-core, need to expose the link library\r\n",
        "Line" : 652,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "# have to rely on the ivcon converter as a backup plan since assimp does not support iv/vrml\r\n",
        "Line" : 660,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "## check qhull library\r\n",
        "Line" : 666,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# have to compile from sources\r\n",
        "Line" : 681,
        "CharPositionInLine" : 4
      },
      "53" : {
        "Text" : "## check ANN library\r\n",
        "Line" : 689,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# _Z8annClosev is the gcc c++ mangled name of annClose\r\n",
        "Line" : 692,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# have to compile from sources\r\n",
        "Line" : 712,
        "CharPositionInLine" : 2
      },
      "56" : {
        "Text" : "#if( OPT_FLANN )\r\n\n#  find_package(FLANN)\r\n\n#  if( NOT FLANN_FOUND)\r\n\n#    ## check FLANN library\r\n\n#    set(BUILD_MATLAB_BINDINGS false)\r\n\n#    if( OPT_PYTHON AND PYTHON_EXECUTABLE )\r\n\n#      set(BUILD_PYTHON_BINDINGS true)\r\n\n#    else()\r\n\n#      set(BUILD_PYTHON_BINDINGS false)\r\n\n#    endif()\r\n\n#    set(BUILD_C_BINDINGS true)\r\n\n#    message(STATUS \"compiling local flann library\")\r\n\n#    add_subdirectory(3rdparty/flann-1.6.6)\r\n\n#    set(FLANN_INCLUDE_DIRS \"${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/flann-1.6.6/src/cpp\")\r\n\n#    set(FLANN_FOUND 1) # use flann_cpp_s to link statically\r\n\n#  endif()\r\n\n#endif()\r\n",
        "Line" : 720,
        "CharPositionInLine" : 0
      },
      "57" : {
        "Text" : "# function expression parser library\r\n",
        "Line" : 738,
        "CharPositionInLine" : 0
      },
      "58" : {
        "Text" : "# log4cxx logging lib\r\n",
        "Line" : 756,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# get the sympy version\r\n",
        "Line" : 805,
        "CharPositionInLine" : 4
      },
      "60" : {
        "Text" : "# check if sympy substitution is ok\r\n",
        "Line" : 826,
        "CharPositionInLine" : 6
      },
      "61" : {
        "Text" : "#      execute_process(\r\n\n#        COMMAND ${PYTHON_EXECUTABLE} -c \"import sympy, sys;  x=sympy.Symbol('x'); sys.exit((x**3).subs(x**2,sympy.Symbol('y')) != x**3)\"\r\n\n#        OUTPUT_VARIABLE _sympy_check OUTPUT_STRIP_TRAILING_WHITESPACE\r\n\n#        RESULT_VARIABLE _sympy_check_failed)\r\n\n#      if( ${_sympy_check_failed} EQUAL 0 )\r\n\n#        set(OPENRAVE_USE_LOCAL_SYMPY 0)\r\n\n#      else()\r\n",
        "Line" : 827,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "# extract sympy\r\n",
        "Line" : 837,
        "CharPositionInLine" : 4
      },
      "63" : {
        "Text" : "# used by openrave-config.cmake\r\n",
        "Line" : 853,
        "CharPositionInLine" : 85
      },
      "64" : {
        "Text" : "# plugins have to be after python since they could use openravepy extensions\r\n",
        "Line" : 857,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# create all the directories ahead of time, or otherwise WORKING_DIRECTORY will not work\r\n",
        "Line" : 872,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# don't need symlinks\r\n",
        "Line" : 906,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "# deprecated\r\n",
        "Line" : 918,
        "CharPositionInLine" : 131
      },
      "68" : {
        "Text" : "#install(EXPORT openrave-targets DESTINATION lib/cmake/openrave-${OPENRAVE_VERSION_MAJOR}.${OPENRAVE_VERSION_MINOR})\r\n",
        "Line" : 921,
        "CharPositionInLine" : 0
      },
      "69" : {
        "Text" : "# add make uninstall capability\r\n",
        "Line" : 923,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Packing information\r\n",
        "Line" : 928,
        "CharPositionInLine" : 2
      },
      "71" : {
        "Text" : "# necessary to add a circular dependency to ${CPACK_DEBIAN_PACKAGE_NAME}?\r\n",
        "Line" : 953,
        "CharPositionInLine" : 2
      },
      "72" : {
        "Text" : "# base\r\n",
        "Line" : 959,
        "CharPositionInLine" : 2
      },
      "73" : {
        "Text" : "# add once infinite precision computations are enabled:\r\n\n# libmpfr-dev libgmp3-dev libmpfi-dev libgmpxx4ldbl python-gmpy\r\n\n# plugins:\r\n",
        "Line" : 961,
        "CharPositionInLine" : 2
      },
      "74" : {
        "Text" : "# libopenscenegraph-dev)\r\n",
        "Line" : 964,
        "CharPositionInLine" : 287
      },
      "75" : {
        "Text" : "# debian\r\n",
        "Line" : 966,
        "CharPositionInLine" : 2
      },
      "76" : {
        "Text" : "#TODO: extra robot CAD model files from: https://openrave.svn.sourceforge.net/svnroot/openrave/data/robots\r\n",
        "Line" : 992,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 77
    },
    "Makefile" : {
      "ObjectId" : "13536ac9d946b250bb71cfc2c6ce7bab31c08c06",
      "LastModified" : "2017-08-07T14:27:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "cpp-gen-md5/CMakeLists.txt" : {
      "ObjectId" : "03b82c7528603bf0c615d692f990672260fceeb2",
      "LastModified" : "2017-08-07T14:27:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# build sources, moc'd sources, and rcc'd sources\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# has to be native since it is a build-time tool\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "docs/Makefile" : {
      "ObjectId" : "f6cf4fc62fd9577db24d252e0fdd2369fd07631d",
      "LastModified" : "2017-08-07T14:27:17Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# this empty line prevents from any intermediate files from getting deleted.... weird\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# store the symlinks for later zip compression\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#touch openravepy_internal_doc\n",
        "Line" : 64,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "#rm -f openravepy\n",
        "Line" : 73,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# need to remove openravepy link since ikfaststats.pp has object links with the real openravepy dir\n",
        "Line" : 76,
        "CharPositionInLine" : 35
      },
      "5" : {
        "Text" : "#ln -s -f `openrave-config --python-dir`/openravepy/_openravepy_ openravepy\n",
        "Line" : 77,
        "CharPositionInLine" : 1
      },
      "6" : {
        "Text" : "# create/update internationalization files\n\n# have to set LANG to en, or otherwise the automodule stuff might not return english translations\n\n# set OPENRAVE_INTERNAL_COMMENTS=0 in order to avoid the doxygen translated comments from popping up in the translations\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#rm -f openravepy\n",
        "Line" : 91,
        "CharPositionInLine" : 1
      },
      "8" : {
        "Text" : "# manual method:\n\n# mkdir -p locale/$SPHINXLANGUAGE/LC_MESSAGES\n\n# msginit --locale=ja --input=build/locale/index.pot --output=locale/ja/LC_MESSAGES/index.po\n\n# msgmerge -U locale/ja/LC_MESSAGES/index.po build/locale/index.pot\n\n# msgfmt locale/ja/LC_MESSAGES/environment_variables.po -o locale/ja/LC_MESSAGES/environment_variables.mo\n\n#\n\n# have to remove all doctrees in order for translations to be regenerated\n\n# filter out en\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#rm -f openravepy\n\n# store the symlinks for later zip compression\n",
        "Line" : 122,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "#rm -f openravepy\n",
        "Line" : 135,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# temporary directory with symlinks should already be created, so just zip it\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# temporary directory with symlinks should already be created, so just zip it\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#sendtoserver: jsonall htmlall\n\n#\ttar cjf openravedocs.tgz build/$(language)/coreapihtml build/$(language)/sphinxjson\n\n#\tscp openravedocs.tgz $server:$targetdir\n\n#\tssh $server \"cd $targetdir; rm -rf build; tar xjf openravedocs.tgz; mv -f en en_old; mv -f ja ja_old; mv build/en .; mv build/ja .; rm -rf en_old ja_old build\"\n\n#scp openravedocs.tgz diankov@programmingvision.com:\"~/openrave/\"\n\n#ssh diankov@programmingvision.com \"cd ~/openrave; rm -rf build; tar xjf openravedocs.tgz; mv -f en en_old; mv -f ja ja_old; mv build/en .; mv build/ja .; rm -rf en_old ja_old build\"\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "locale/CMakeLists.txt" : {
      "ObjectId" : "e970a4c0fc3125cf97ec9abc444f17c860b8ed91",
      "LastModified" : "2017-08-07T14:27:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules-cmake/CGAL_FindPackageHandleStandardArgs.cmake" : {
      "ObjectId" : "ebb8e90e94e91dafd4dc1c126686156feb4346a3",
      "LastModified" : "2017-08-07T14:27:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# FIND_PACKAGE_HANDLE_STANDARD_ARGS(NAME (DEFAULT_MSG|\"Custom failure message\") VAR1 ... )\r\n\n#    This macro is intended to be used in FindXXX.cmake modules files.\r\n\n#    It handles the REQUIRED and QUIET argument to FIND_PACKAGE() and\r\n\n#    it also sets the <UPPERCASED_NAME>_FOUND variable.\r\n\n#    The package is found if all variables listed are TRUE.\r\n\n#    Example:\r\n\n#\r\n\n#    FIND_PACKAGE_HANDLE_STANDARD_ARGS(LibXml2 DEFAULT_MSG LIBXML2_LIBRARIES LIBXML2_INCLUDE_DIR)\r\n\n#\r\n\n#    LibXml2 is considered to be found, if both LIBXML2_LIBRARIES and \r\n\n#    LIBXML2_INCLUDE_DIR are valid. Then also LIBXML2_FOUND is set to TRUE.\r\n\n#    If it is not found and REQUIRED was used, it fails with FATAL_ERROR, \r\n\n#    independent whether QUIET was used or not.\r\n\n#    If it is found, the location is reported using the VAR1 argument, so \r\n\n#    here a message \"Found LibXml2: /usr/lib/libxml2.so\" will be printed out.\r\n\n#    If the second argument is DEFAULT_MSG, the message in the failure case will \r\n\n#    be \"Could NOT find LibXml2\", if you don't like this message you can specify\r\n\n#    your own custom failure message there.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "modules-cmake/CGAL_GeneratorSpecificSettings.cmake" : {
      "ObjectId" : "ca9e2814547152bbcb5904c5281b33aced517aed",
      "LastModified" : "2017-08-07T14:27:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# From james Bigler, in the cmake users list.\r\n",
        "Line" : 38,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "modules-cmake/CheckCXXCompilerFlag.cmake" : {
      "ObjectId" : "43ea9a64e5e2ede62a99319c69da505589a04f26",
      "LastModified" : "2017-08-07T14:27:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check whether the CXX compiler supports a given flag.\n\n# CHECK_CXX_COMPILER_FLAG(FLAG VARIABLE)\n\n#\n\n#  FLAG - the compiler flag\n\n#  VARIABLE - variable to store the result\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Alexander Neundorf, <neundorf@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "modules-cmake/CheckCXXSourceRuns.cmake" : {
      "ObjectId" : "b0c9ba52f3de5a7193422f0ee020bb33d1ebddae",
      "LastModified" : "2017-08-07T14:27:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Check if the source code provided in the SOURCE argument compiles and runs.\n\n# CHECK_CXX_SOURCE_RUNS(SOURCE VAR)\n\n# - macro which checks if the source code compiles\n\n#  SOURCE - source code to try to compile\n\n#  VAR    - variable to store the result, 1 for success, empty for failure\n\n#\n\n# The following variables may be set before calling this macro to\n\n# modify the way the check is run:\n\n#\n\n#  CMAKE_REQUIRED_FLAGS = string of compile command line flags\n\n#  CMAKE_REQUIRED_DEFINITIONS = list of macros to define (-DFOO=bar)\n\n#  CMAKE_REQUIRED_INCLUDES = list of include directories\n\n#  CMAKE_REQUIRED_LIBRARIES = list of libraries to link\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# if it did not compile make the return value fail code of 1\n",
        "Line" : 45,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# if the return value was 0 then it worked\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    },
    "modules-cmake/DebSourcePPA.cmake" : {
      "ObjectId" : "d8a786fb2bdc8cfba48c4260600dbe6e9525eed6",
      "LastModified" : "2017-08-07T14:27:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "## Debian Source Package Generator\n\n#\n\n# Copyright (c) 2010 Daniel Pfeifer <daniel@pfeifer-mail.de>\n\n# Many modifications by Rosen Diankov <rosen.diankov@gmail.com>\n\n#\n\n# Creates source debian files and manages library dependencies\n\n#\n\n# Features:\n\n# \n\n# - Automatically generates symbols and run-time dependencies from the build dependencies\n\n# - Custom copy of source directory via CPACK_DEBIAN_PACKAGE_SOURCE_COPY\n\n# - Simultaneous output of multiple debian source packages for each distribution\n\n# - Can specificy distribution-specific dependencies by suffixing DEPENDS with _${DISTRO_NAME}, for example: CPACK_DEBIAN_PACKAGE_DEPENDS_LUCID, CPACK_COMPONENT_MYCOMP0_DEPENDS_LUCID\n\n#\n\n# Usage:\n\n#\n\n# set(CPACK_DEBIAN_BUILD_DEPENDS debhelper cmake)\n\n# set(CPACK_DEBIAN_PACKAGE_PRIORITY optional)\n\n# set(CPACK_DEBIAN_PACKAGE_SECTION devel)\n\n# set(CPACK_DEBIAN_CMAKE_OPTIONS \"-DMYOPTION=myvalue\")\n\n# set(CPACK_DEBIAN_PACKAGE_DEPENDS mycomp0 mycomp1 some_ubuntu_package)\n\n# set(CPACK_DEBIAN_PACKAGE_DEPENDS_UBUNTU_LUCID mycomp0 mycomp1 lucid_specific_package)\n\n# set(CPACK_DEBIAN_PACKAGE_NAME mypackage)\n\n# set(CPACK_DEBIAN_PACKAGE_REMOVE_SOURCE_FILES unnecessary_file unnecessary_dir/file0)\n\n# set(CPACK_DEBIAN_PACKAGE_SOURCE_COPY svn export --force) # if using subversion\n\n# set(CPACK_DEBIAN_DISTRIBUTION_NAME ubuntu)\n\n# set(CPACK_DEBIAN_DISTRIBUTION_RELEASES karmic lucid maverick natty)\n\n# set(CPACK_DEBIAN_CHANGELOG \"  * Extra change log lines\")\n\n# set(CPACK_DEBIAN_PACKAGE_SUGGESTS \"ipython\")\n\n# set(CPACK_COMPONENT_X_RECOMMENDS \"recommended-package\")\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# DEBIAN/control\n\n# debian policy enforce lower case for package name\n\n# Package: (mandatory)\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Section: (recommended)\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Priority: (recommended)\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# remove unnecessary folders\n",
        "Line" : 74,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# create the original source tar\n",
        "Line" : 79,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "##############################################################################\n\n# debian/control\n",
        "Line" : 89,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "##############################################################################\n\n# debian/copyright\n",
        "Line" : 248,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "##############################################################################\n\n# debian/rules\n",
        "Line" : 255,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# for reducing size\n",
        "Line" : 290,
        "CharPositionInLine" : 18
      },
      "10" : {
        "Text" : "##############################################################################\n\n# debian/compat\n",
        "Line" : 314,
        "CharPositionInLine" : 2
      },
      "11" : {
        "Text" : "##############################################################################\n\n# debian/source/format\n",
        "Line" : 318,
        "CharPositionInLine" : 2
      },
      "12" : {
        "Text" : "##############################################################################\n\n# debian/changelog\n",
        "Line" : 322,
        "CharPositionInLine" : 2
      },
      "13" : {
        "Text" : "##############################################################################\n\n# debuild -S\n",
        "Line" : 333,
        "CharPositionInLine" : 2
      },
      "14" : {
        "Text" : "##############################################################################\n\n# dput ppa:your-lp-id/ppa <source.changes>\n",
        "Line" : 345,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 15
    },
    "modules-cmake/FindCoin.cmake" : {
      "ObjectId" : "c34a6d5de05bec7e20831ae526900ae94b740898",
      "LastModified" : "2017-08-07T14:27:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find Coin3D\r\n\n# Once done this will define\r\n\n#\r\n\n# COIN_LIBRARY_FOUND - if Coin3d is found\r\n\n# COIN_CXXFLAGS - extra flags\r\n\n# COIN_LINK_FLAGS - extra flags\r\n\n# COIN_INCLUDE_DIRS - include directories\r\n\n# COIN_LINK_DIRS - link directories\r\n\n# COIN_LIBRARY_RELEASE - the relase version\r\n\n# COIN_LIBRARY_DEBUG - the debug version\r\n\n# COIN_LIBRARY - a default library, with priority debug.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# use coin-config\r\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# coin include files in local directory\r\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# vc100+\r\n",
        "Line" : 70,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 4
    },
    "modules-cmake/FindGMP.cmake" : {
      "ObjectId" : "1f830e9a8f57c205dc058df1054381caada1f9ba",
      "LastModified" : "2017-08-07T14:27:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the GMP libraries\n\n# GMP_FOUND - system has GMP lib\n\n# GMP_INCLUDE_DIR - the GMP include directory\n\n# GMP_LIBRARIES_DIR - Directory where the GMP libraries are located\n\n# GMP_LIBRARIES - the GMP libraries\n\n# GMP_IN_CGAL_AUXILIARY - TRUE if the GMP found is the one distributed with CGAL in the auxiliary folder\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: support MacOSX\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Is it already configured?\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Attempt to load a user-defined configuration for GMP if couldn't be found\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "modules-cmake/FindGMPXX.cmake" : {
      "ObjectId" : "333cd1d44b6ddc5b23c773cf7e3a9871a9734c69",
      "LastModified" : "2017-08-07T14:27:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the GMPXX libraries\n\n# GMPXX_FOUND - system has GMPXX lib\n\n# GMPXX_INCLUDE_DIR - the GMPXX include directory\n\n# GMPXX_LIBRARIES - Libraries needed to use GMPXX\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: support Windows and MacOSX\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GMPXX needs GMP\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "modules-cmake/FindLibXml2.cmake" : {
      "ObjectId" : "b45d7293ba0b9a2d33f6998560ecf777ebf7efd6",
      "LastModified" : "2017-08-07T14:27:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find LibXml2\n\n# Once done this will define\n\n#\n\n#  LIBXML2_FOUND - system has LibXml2\n\n#  LIBXML2_INCLUDE_DIR - the LibXml2 include directory\n\n#  LIBXML2_LIBRARIES - the libraries needed to use LibXml2\n\n#  LIBXML2_DEFINITIONS - Compiler switches required for using LibXml2\n\n#\n\n# Copyright (c) 2006, Alexander Neundorf <neundorf@kde.org>\n\n# This code is available under the BSD license, see licenses/BSD for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright (c) 2006, Alexander Neundorf, <neundorf@kde.org>\n\n#\n\n# Redistribution and use is allowed according to the terms of the BSD license.\n\n# For details see the accompanying COPYING-CMAKE-SCRIPTS file.\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# in cache already\n",
        "Line" : 19,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# use pkg-config to get the directories and then use these values\n\n# in the FIND_PATH() and FIND_LIBRARY() calls\n",
        "Line" : 24,
        "CharPositionInLine" : 3
      },
      "CommentCount" : 4
    },
    "modules-cmake/FindMPFI.cmake" : {
      "ObjectId" : "294bc1bc0ff5e7f3800355280303940b870e33da",
      "LastModified" : "2017-08-07T14:27:17Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules-cmake/FindMPFR.cmake" : {
      "ObjectId" : "aa2960bc926387136ea46a8f26e938e678f7f873",
      "LastModified" : "2017-08-07T14:27:17Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find the MPFR libraries\n\n# MPFR_FOUND - system has MPFR lib\n\n# MPFR_INCLUDE_DIR - the MPFR include directory\n\n# MPFR_LIBRARIES_DIR - Directory where the MPFR libraries are located\n\n# MPFR_LIBRARIES - the MPFR libraries\n\n# MPFR_IN_CGAL_AUXILIARY - TRUE if the MPFR found is the one distributed with CGAL in the auxiliary folder\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: support MacOSX\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Is it already configured?\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Attempt to load a user-defined configuration for MPFR if couldn't be found\n",
        "Line" : 69,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "modules-cmake/FindRapidJSON.cmake" : {
      "ObjectId" : "f60d1c0f4512bfee655802d48e40b8fcf0077157",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------------------\n\n# Copyright (c) 2013-2013, Lars Baehren <lbaehren@gmail.com>\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without modification,\n\n# are permitted provided that the following conditions are met:\n\n#\n\n#  * Redistributions of source code must retain the above copyright notice, this\n\n#    list of conditions and the following disclaimer.\n\n#  * Redistributions in binary form must reproduce the above copyright notice,\n\n#    this list of conditions and the following disclaimer in the documentation\n\n#    and/or other materials provided with the distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n\n# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n\n# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n\n# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n\n# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n\n# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n\n# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n\n# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#-------------------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# - Check for the presence of RAPIDJSON\n\n#\n\n# The following variables are set when RAPIDJSON is found:\n\n#  RAPIDJSON_FOUND      = Set to true, if all components of RapidJSON have been\n\n#                         found.\n\n#  RAPIDJSON_INCLUDES   = Include path for the header files of RAPIDJSON\n\n#  RAPIDJSON_LIBRARIES  = Link these to use RAPIDJSON\n\n#  RAPIDJSON_LFLAGS     = Linker flags (optional)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##____________________________________________________________________________\n\n## Check for the header files\n",
        "Line" : 41,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "##____________________________________________________________________________\n\n## Actions taken when all components have been found\n",
        "Line" : 50,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "## Update\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "## Feedback\n",
        "Line" : 58,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "##____________________________________________________________________________\n\n## Mark advanced variables\n",
        "Line" : 70,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 7
    },
    "modules-cmake/FindSoQt4.cmake" : {
      "ObjectId" : "405760ea504cec40c78db9db86119178a581f558",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find SoQt\r\n\n# Once done this will define\r\n\n#\r\n\n# SOQT_LIBRARY_FOUND - if Soqt3d is found\r\n\n# SOQT_CXXFLAGS - extra flags\r\n\n# SOQT_INCLUDE_DIRS - include directories\r\n\n# SOQT_LINK_DIRS - link directories\r\n\n# SOQT_LIBRARY_RELEASE - the relase version\r\n\n# SOQT_LIBRARY_DEBUG - the debug version\r\n\n# SOQT_LIBRARY - a default library, with priority debug.\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# use soqt-config\r\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# on Mac OSX -L is in both ldflags and libs:\r\n\n# $ soqt-config --libs\r\n\n# -lSoQt -L/opt/local/lib -lQtOpenGL -lQtGui -lQtCore -lCoin -lpthread\r\n\n# $ soqt-config --ldflags\r\n\n# -L/usr/local/lib -Wl,-framework,OpenGL -Wl,-multiply_defined,suppress\r\n\n# $ ls /opt/local/lib/ | grep \"QtO\"\r\n\n# libQtOpenGL.4.7.4.dylib\r\n\n# libQtOpenGL.4.7.dylib\r\n\n# libQtOpenGL.4.dylib\r\n\n# libQtOpenGL.dylib\r\n\n# libQtOpenGL.la\r\n\n# libQtOpenGL.prl\r\n\n# $ ls /usr/local/lib/ | grep \"QtO\"\r\n\n# QtOpenGL.framework\r\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# soqt include files in local directory\r\n",
        "Line" : 75,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# vc100+\r\n",
        "Line" : 87,
        "CharPositionInLine" : 11
      },
      "CommentCount" : 5
    },
    "modules-cmake/InstallSymlink.cmake" : {
      "ObjectId" : "bbc7521977e17a556e0ef8917e19860a9c96fea8",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This macro can be used to install symlinks, which turns out to be\n\n# non-trivial due to CMake version differences and limitations on how\n\n# files can be installed when building binary packages.\n\n#\n\n# The rule for binary packaging is that files (including symlinks) must\n\n# be installed with the standard CMake install() macro.\n\n#\n\n# The rule for non-binary packaging is that CMake 2.6 cannot install()\n\n# symlinks, but can create the symlink at install-time via scripting.\n\n# Though, we assume that CMake 2.6 isn't going to be used to generate\n\n# packages because versions later than 2.8.3 are superior for that purpose.\n\n#\n\n#   _filepath: the absolute path to the file to symlink\n\n#   _sympath: absolute path of the installed symlink\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# scripting the symlink installation at install time should work\n\n# for CMake 2.6.x and 2.8.x\n",
        "Line" : 27,
        "CharPositionInLine" : 8
      },
      "CommentCount" : 2
    },
    "octave_matlab/CMakeLists.txt" : {
      "ObjectId" : "e4841aa0fc2c983f95e1793b40280932f6dd5843",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "octave_matlab/matlab/CMakeLists.txt" : {
      "ObjectId" : "3b56a16be244b0de70c7ab7996fa5b91c06aaefe",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n\n# generate mex files\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check for lapack\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# check if the mex file is actually matlab (can be confused with latex)\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "#message(STATUS \"mex result: ${MEX_TEST_OUT}\")\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#  if( DARWIN OR APPLE )\n\n#    set(MEXEXT \"mexmac\")\n\n#  elseif( UNIX )\n\n#    if( IS_X86_64 )\n\n#      set(MEXEXT \"mexa64\")\n\n#    else()\n\n#      set(MEXEXT \"mexglx\")\n\n#    endif()\n\n#  elseif( WIN64 )\n\n#    set(MEXEXT \"mexw64\")\n\n#  elseif( WIN32 OR CYGWIN OR WINDOWS )\n\n#    set(MEXEXT \"mexw32\")\n\n#  else()\n\n#    set(MEXEXT \"mex\")\n\n#  endif()\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# used to force mex to be called once at a time\n",
        "Line" : 81,
        "CharPositionInLine" : 50
      },
      "6" : {
        "Text" : "# used to force mex to be called once at a time\n",
        "Line" : 92,
        "CharPositionInLine" : 49
      },
      "7" : {
        "Text" : "# because MATLAB is non-free, have to distribute the source files\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "octave_matlab/octave/CMakeLists.txt" : {
      "ObjectId" : "a5f7ad36cf0b7d563568ac298857dde357541204",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# used to force mex to be called once at a time\n",
        "Line" : 26,
        "CharPositionInLine" : 50
      },
      "1" : {
        "Text" : "# used to force mex to be called once at a time\n",
        "Line" : 37,
        "CharPositionInLine" : 49
      },
      "CommentCount" : 2
    },
    "plugins/CMakeLists.txt" : {
      "ObjectId" : "64b8a2ee9bc4eaf9d09ac0c0aebe7e74da7e1763",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# needed since plugins include openrave/openrave.h\n",
        "Line" : 1,
        "CharPositionInLine" : 52
      },
      "1" : {
        "Text" : "# for plugin-specific common files\n",
        "Line" : 2,
        "CharPositionInLine" : 57
      },
      "2" : {
        "Text" : "# turns segfault into exception\n",
        "Line" : 18,
        "CharPositionInLine" : 51
      },
      "3" : {
        "Text" : "#CheckLibraryExists\n\n#find_package(LAPACK)\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "plugins/basecontrollers/CMakeLists.txt" : {
      "ObjectId" : "078feaccb42474d09856b1f7b5317ba0225e0ca6",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################\n\n# basecontrollers openrave plugin\n\n###########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/baserobots/CMakeLists.txt" : {
      "ObjectId" : "e3906e2f3b27df922667136b49d365528077e769",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################\n\n# baserobots openrave plugin\n\n###########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/basesamplers/CMakeLists.txt" : {
      "ObjectId" : "22b3dd89294107a5e4d8eea24d0bc5948157e853",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################\n\n# basesamplers openrave plugin\n\n###########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/basesensors/CMakeLists.txt" : {
      "ObjectId" : "1301c67631d111133abb0490543a9c66c33f87e4",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################\n\n# basesensors openrave plugin\n\n###########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/bulletrave/CMakeLists.txt" : {
      "ObjectId" : "4d7a82300a93e1c4bfce30ed42cb513a76b9730b",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################\n\n# bulletrave openrave plugin\n\n###########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#message(STATUS \"Bullet found ${bullet_INCLUDE_DIRS}, libs: ${bullet_LIBRARIES}, cflags=${bullet_CFLAGS_OTHER}, lflags=${bullet_LDFLAGS_OTHER}, building bulletrave plugin\")\n",
        "Line" : 16,
        "CharPositionInLine" : 6
      },
      "2" : {
        "Text" : "# for some reason the flags come out as a list, so convert to a string\n",
        "Line" : 21,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 3
    },
    "plugins/configurationcache/CMakeLists.txt" : {
      "ObjectId" : "62c69668f686796593078f655f6ab38ee3e69890",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################\n\n# configurationcache openrave plugin\n\n###########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# python bindings\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/dualmanipulation/CMakeLists.txt" : {
      "ObjectId" : "eb736b663eb60aaae59781ab660e6a00925996bb",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################\n\n# rmanipulation openrave plugin\n\n###########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/fclrave/CMakeLists.txt" : {
      "ObjectId" : "49a01909b59bb124082aff220116f3bf35902b51",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################\n\n# fclrave openrave plugin\n\n###########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# restore the link dirs\n",
        "Line" : 87,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/grasper/CMakeLists.txt" : {
      "ObjectId" : "d25f79f76bb9098a56dfe3439d0b266024fafce0",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################\n\n# grasper openrave plugin\n\n###########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/ikfastsolvers/CMakeLists.txt" : {
      "ObjectId" : "c744eb0cb0951570f27a23e0fca5738c1fa1bb34",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################\n\n# ikfastsolvers openrave plugin\n\n###########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# for ikfast.h\n",
        "Line" : 13,
        "CharPositionInLine" : 62
      },
      "CommentCount" : 2
    },
    "plugins/logging/CMakeLists.txt" : {
      "ObjectId" : "720c0550acc3b7d6fa294e99313ab1f328dedb77",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################\n\n# logging openrave plugin\n\n###########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/mobyrave/CMakeLists.txt" : {
      "ObjectId" : "4b03ae5b473878f7fdb5865c22adf3445de2e702",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################\n\n# mobyrave openrave plugin\n\n###########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/mobyrave/FindMoby.cmake" : {
      "ObjectId" : "8b807a0338a3bb21913cdc0541877669de2b0af2",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Find MOBY header and library.\n\n#\n\n# This module defines the following uncached variables:\n\n# MOBY_FOUND, if false, do not try to use MOBY.\n\n# MOBY_INCLUDE_DIRS, where to find MOBY/MOBY_a.h.\n\n# MOBY_LIBRARIES, the libraries to link against to use the MOBY library\n\n# MOBY_LIBRARY_DIRS, the directory where the MOBY library is found.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Set uncached variables as per standard.\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/oderave/CMakeLists.txt" : {
      "ObjectId" : "f64cd52481f44723d13be03065e82f8b6b3128f9",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################\n\n# oderave openrave plugin\n\n###########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# doesn't work\n",
        "Line" : 8,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# perhaps there is an msvc way to do this?\n",
        "Line" : 16,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# test for ode version 0.10\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# have to install the DLLs\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# restore the link dirs\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "plugins/oderave/FindODE.cmake" : {
      "ObjectId" : "1c2a5406be2bdbf265bee795794dd245b6260029",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Try to find Ode\n\n# Once done this will define\n\n#\n\n# ODE_LIBRARY_FOUND - if ode is found\n\n# ODE_CXXFLAGS - extra flags\n\n# ODE_INCLUDE_DIRS - include directories\n\n# ODE_LINK_DIRS - link directories\n\n# ODE_LIBRARY_RELEASE - the relase version\n\n# ODE_LIBRARY_DEBUG - the debug version\n\n# ODE_LIBRARY - a default library, with priority debug.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# use ode-config\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# could be cached\n",
        "Line" : 17,
        "CharPositionInLine" : 30
      },
      "3" : {
        "Text" : "# ode include files in local directory\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 4
    },
    "plugins/pqprave/CMakeLists.txt" : {
      "ObjectId" : "0c364643283824f514d56a79acdcb11b5f2a9a7c",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################\n\n# pqprave openrave plugin\n\n###########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# don't return the component since cannot distribute this library\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/pqprave/pqp/CMakeLists.txt" : {
      "ObjectId" : "4101a62273e1538246017db6c206256df1b76e03",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/qtcoinrave/CMakeLists.txt" : {
      "ObjectId" : "5e16d887130209c86b4c34b5b82359acfee3fec1",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "############################\r\n\n# qtcoinrave openrave plugin\r\n\n############################\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# generate rules for building source files from the resources\r\n",
        "Line" : 25,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# build sources, moc'd sources, and rcc'd sources\r\n",
        "Line" : 32,
        "CharPositionInLine" : 3
      },
      "3" : {
        "Text" : "# have to install the DLLs\r\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 4
    },
    "plugins/qtosgrave/CMakeLists.txt" : {
      "ObjectId" : "5b651fb7e27a447d83a920773667e610e1f82686",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#############################\n\n# qtosgrave openrave plugin #\n\n#############################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#include(${CMAKE_SOURCE_DIR}/modules-cmake/FindOSG.cmake)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#set(OPENRAVE_LINK_DIRS ${OPENRAVE_LINK_DIRS} \"/usr/lib\" \"/usr/share/qt4/lib\")\n",
        "Line" : 20,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# generate rules for building source files from the resources\n",
        "Line" : 28,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "#set (extLIBS ${extLIBS} ${OSGDB_LIBRARY_DEBUG} ${OSGQT_LIBRARY_DEBUG} ${OSGGA_LIBRARY_DEBUG} ${OSGFX_LIBRARY_DEBUG} ${OSGTEXT_LIBRARY_DEBUG} ${OSGVIEWER_LIBRARY_DEBUG} ${OSGMANIPULATOR_LIBRARY_DEBUG})\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# Debug.\n",
        "Line" : 48,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Debug.\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "# build sources, moc'd sources, and rcc'd sources\n",
        "Line" : 56,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "#if(CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX)\n\n#  # have to turn off optimizations or else qtcoin crashes!!\n\n#  # (probably something to do with this being  a plugin and SoQt relies on static variables?)\n\n#  # another possiblity is that openrave-core also links to Coin3D...\n\n#  set(QTOSG_COMPILE_FLAGS \"${QTOSG_COMPILE_FLAGS} -O0\")\n\n#endif()\n",
        "Line" : 62,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "#if( MSVC )\n\n#  # have to install the DLLs\n\n#  install(DIRECTORY \"${SOQT_LINK_DIRS}/\" DESTINATION bin COMPONENT ${COMPONENT_PREFIX}plugin-qtcoinrave FILES_MATCHING PATTERN \"*-${MSVC_PREFIX}-*.dll\")\n\n#endif()\n",
        "Line" : 72,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 10
    },
    "plugins/rmanipulation/CMakeLists.txt" : {
      "ObjectId" : "ae64064a0a7e62964c0e5ac74b7a3ed2197018dc",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################\n\n# rmanipulation openrave plugin\n\n###########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check boost regex\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "plugins/rplanners/CMakeLists.txt" : {
      "ObjectId" : "441d403a6493690bdb479f871d39a4f84a957ec7",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################\n\n# rplanners openrave plugin\n\n###########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "plugins/rplanners/ParabolicPathSmooth/CMakeLists.txt" : {
      "ObjectId" : "6d67e383c2dd34f457f78874a99f09f5938e2e18",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/rplanners/rampoptimizer/CMakeLists.txt" : {
      "ObjectId" : "989f303504a291ca496b54ce605c8257b7074772",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "plugins/textserver/CMakeLists.txt" : {
      "ObjectId" : "44ba66d80d0ea1b41a121f47d8109aa26b531b80",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "###########################################\n\n# textserver openrave plugin\n\n###########################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "python/CMakeLists.txt" : {
      "ObjectId" : "1b9cc7f16f3d19ea4c0a151f1d9de90e757ba4c5",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# python executables need renaming\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# install rest python files\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ikfast component\n\n# install previous versions of ikfast also since don't know which sympy versino user will install\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "python/bindings/CMakeLists.txt" : {
      "ObjectId" : "33e805519005fcd47b72349ebac9c6ecdc276ac9",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# turns segfault into exception\r\n",
        "Line" : 2,
        "CharPositionInLine" : 51
      },
      "1" : {
        "Text" : "# On MacOSX, boost_system also needs to be linked or will output the following errors:\r\n\n# Undefined symbols for architecture x86_64:\r\n\n#   \"boost::system::system_category()\", referenced from: __GLOBAL__I_a in src.cxx.o\r\n\n#   \"boost::system::generic_category()\", referenced from: __GLOBAL__I_a in src.cxx.o\r\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# check if all header files can be included\r\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "## openrave bindings\r\n",
        "Line" : 49,
        "CharPositionInLine" : 6
      },
      "4" : {
        "Text" : "# stdc++ has to be included before opengl libraries due to some ATI bug (http://wiki.fifengine.de/Segfault_in_cxa_allocate_exception#Workaround)\r\n",
        "Line" : 51,
        "CharPositionInLine" : 6
      },
      "5" : {
        "Text" : "# on mac osx, python cannot import libraries with .dylib extension\r\n",
        "Line" : 59,
        "CharPositionInLine" : 8
      },
      "6" : {
        "Text" : "## ann bindings\r\n",
        "Line" : 64,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# stdc++ has to be included before opengl libraries due to some ATI bug (http://wiki.fifengine.de/  Segfault_in_cxa_allocate_exception#Workaround)\r\n",
        "Line" : 68,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# set \"link library dependencies\" for visual studio in order to include symbols for other statically linked libs\r\n\n# this is such an unbelievable hack, that it's disgusting\r\n",
        "Line" : 76,
        "CharPositionInLine" : 12
      },
      "9" : {
        "Text" : "# on mac osx, python cannot import libraries with .dylib extension\r\n",
        "Line" : 81,
        "CharPositionInLine" : 10
      },
      "10" : {
        "Text" : "## convexdecomposition bindings\r\n",
        "Line" : 87,
        "CharPositionInLine" : 6
      },
      "11" : {
        "Text" : "# stdc++ has to be included before opengl libraries due to some ATI bug (http://wiki.fifengine.de/  Segfault_in_cxa_allocate_exception#Workaround)\r\n",
        "Line" : 91,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# set \"link library dependencies\" for visual studio in order to include symbols for other statically linked libs\r\n\n# this is such an unbelievable hack, that it's disgusting\r\n",
        "Line" : 99,
        "CharPositionInLine" : 12
      },
      "13" : {
        "Text" : "# on mac osx, python cannot import libraries with .dylib extension\r\n",
        "Line" : 104,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 14
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "f924defba5d7eecfbac15622f846626605f4fef2",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Populates ssources list\r\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# check the accuracy of the current math library with crlibm\r\n",
        "Line" : 17,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# apple has a different meaning on Bsymbolic\r\n\n# hidden visibility doesn't work?\r\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# not sure whether it is compiler or linkiner flag...\r\n",
        "Line" : 57,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# not sure whether it is compiler or linkiner flag...\r\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# turns segfault into exception\r\n",
        "Line" : 73,
        "CharPositionInLine" : 51
      },
      "6" : {
        "Text" : "# because openrave drags in dependencies from libopenrave and libopenrave-core, have to add the correct link-directories\r\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# always extract the models since we don't know when models.tgz has been changed\r\n",
        "Line" : 109,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/cexamples/CMakeLists.txt" : {
      "ObjectId" : "840e4d183ee35dba09f53e93d7ab52e45589d10a",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# only used for cexamples!\n",
        "Line" : 4,
        "CharPositionInLine" : 60
      },
      "CommentCount" : 1
    },
    "src/cppexamples/CMakeLists.txt" : {
      "ObjectId" : "88bceb03dfaca01bfa5937a28538eeeceff5cafb",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# only used for cppexamples!\n",
        "Line" : 4,
        "CharPositionInLine" : 60
      },
      "1" : {
        "Text" : "# include python bindings sample\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# get the site-packages directory\n",
        "Line" : 60,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# include OpenCV examples, doesn't compile with latest OpenCV?\n\n#find_package(OpenCV)\n\n#if( OpenCV_FOUND )\n\n#  include_directories(${OpenCV_INCLUDE_DIRS})\n\n#  link_directories(${OpenRAVE_LIBRARY_DIRS} ${Boost_LIBRARY_DIRS} ${OpenCV_LIB_DIR})\n\n#  build_openrave_executable(opencvsaving)\n\n#  target_link_libraries(opencvsaving ${OpenRAVE_LIBRARIES} ${OpenRAVE_CORE_LIBRARIES} ${OpenCV_LIBS})\n\n#endif()\n",
        "Line" : 83,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# include qt4 examples\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/cppexamples/FindOpenRAVE.cmake" : {
      "ObjectId" : "e03bca106d0903cdfafdbb1dc6b4c3344dc15716",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Open Robotics Automation Virtual Enviornment (OpenRAVE) Installation\n\n# http://www.openrave.org\n\n#\n\n# OpenRAVE provides an environment for testing, developing, and deploying motion planning algorithms\n\n# in real-world robotics applications. The main focus is on simulation and analysis of kinematic and\n\n# geometric information related to motion planning. OpenRAVE's stand-alone nature allows is to be easily\n\n# integrated into existing robotics systems. An important target application is industrial robotics automation.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#==================================================================================\n\n# Copyright (C) 2009-2011 Rosen Diankov\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distributed this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n\n#==================================================================================\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# search in the registry\n",
        "Line" : 26,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# search for the config path\n",
        "Line" : 37,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# bin\n",
        "Line" : 40,
        "CharPositionInLine" : 81
      },
      "CommentCount" : 5
    },
    "src/libopenrave-core/CMakeLists.txt" : {
      "ObjectId" : "d3e0fbc0e6f652e16511bc0df5ae174aa8dc2f8c",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# pcre for url parsing\n",
        "Line" : 10,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# always have it 0 since we're including the soversion as part of the library name\n",
        "Line" : 74,
        "CharPositionInLine" : 46
      },
      "2" : {
        "Text" : "# remove \"${LIBOPENRAVE_LINK_FLAGS} until can figure out symbol visibility issue\n",
        "Line" : 92,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# always have it 0 since we're including the soversion as part of the library name\n",
        "Line" : 94,
        "CharPositionInLine" : 15
      },
      "4" : {
        "Text" : "# visual studio needs static built\n",
        "Line" : 109,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# static version needs to have different name\n",
        "Line" : 113,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# always have it 0 since we're including the soversion as part of the library name\n",
        "Line" : 120,
        "CharPositionInLine" : 60
      },
      "CommentCount" : 7
    },
    "src/libopenrave/CMakeLists.txt" : {
      "ObjectId" : "4d6babfae86f1cf0fa2241335cd8d1eadf7e0d27",
      "LastModified" : "2018-12-24T00:29:53Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# forces check to be run before libopenrave is compile\n",
        "Line" : 24,
        "CharPositionInLine" : 59
      },
      "1" : {
        "Text" : "# always have it 0 since we're including the soversion as part of the library name\n",
        "Line" : 28,
        "CharPositionInLine" : 46
      },
      "2" : {
        "Text" : "# remove \"${LIBOPENRAVE_LINK_FLAGS} until can figure out symbol visibility issue\n",
        "Line" : 44,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# always have it 0 since we're including the soversion as part of the library name\n",
        "Line" : 46,
        "CharPositionInLine" : 16
      },
      "4" : {
        "Text" : "# visual studio needs static lib built\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# static version needs to have different name\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# always have it 0 since we're including the soversion as part of the library name\n",
        "Line" : 71,
        "CharPositionInLine" : 55
      },
      "7" : {
        "Text" : "# forces check to be run before libopenrave is compilde\n",
        "Line" : 81,
        "CharPositionInLine" : 68
      },
      "CommentCount" : 8
    }
  },
  "FileTypes" : {
    "CMAKE" : 74,
    "MAKEFILE" : 3
  },
  "ElapsedTime" : 8839
}