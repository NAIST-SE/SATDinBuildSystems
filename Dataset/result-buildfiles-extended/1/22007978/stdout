{
  "Repository" : "22007978",
  "Revision" : "HEAD",
  "ObjectId" : "e25a6be613fbd1879477d62c7258a2dcfe8dd896",
  "CommitTime" : "2019-04-09T18:41:49Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "82ba9bb5848aefebac43d94a1a079ebd6397d7a1",
      "LastModified" : "2019-04-08T19:03:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Make PROJECT_SOURCE_DIR, PROJECT_BINARY_DIR, and PROJECT_NAME available.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# After build, double-check external/src/htslib-stamp/htslib-build-out.log\n\n# to make sure CFLAGS were set as expected\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# RocksDB\n\n#\n\n# We set DISABLE_JEMALLOC=1 to avoid link-time dependency to jemalloc; we\n\n# DO however wish to use jemalloc, but expect user to activate it at\n\n# runtime with LD_PRELOAD instead.\n\n#\n\n# Warning: it's dangerously easy to mess with the RocksDB external project\n\n# configuration below and silently get a librocksdb.a compiled without\n\n# optimizations, or targeting an instruction set that's too old or too new.\n\n#\n\n# Here are some checks to perform after any adjustment:\n\n# 1. Verify AVX is used (nonzero results):\n\n#      objdump -d external/src/rocksdb/librocksdb.a | grep vzeroupper | wc -l\n\n# 2. Verify Haswell-and-newer instructions are NOT used (zero results):\n\n#      objdump -d external/src/rocksdb/librocksdb.a | grep shlx\n\n# 3. Verify accelerated CRC32 is used (nonzero results):\n\n#      objdump -d external/src/rocksdb/librocksdb.a | grep crc32q\n\n# 4. Verify compiler optimizations performed:\n\n#      (TODO better heuristics needed)\n\n#      a) check external/src/rocksdb-stamp/rocksdb-build-out.log to see\n\n#         compiler invocations with -O3\n\n#      b) go through perf/FlameGraph profiling flow and check that no\n\n#         rocksdb function has a big chunk like 5% or more\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# After build, double-check external/src/yaml-cpp-stamp/yaml-cpp-build-out.log\n\n# to make sure CFLAGS were set as expected\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "################################\n\n# Normal Libraries & Executables\n\n################################\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Invoke cap'n proto IDL compiler, to generate C++ serialization code from\n\n# definitions.\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "################################\n\n# Testing\n\n################################\n",
        "Line" : 232,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cli/dxapplet/Makefile" : {
      "ObjectId" : "5972b329f6761317a32b44a7f677a809116c6515",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 1,
    "MAKEFILE" : 1
  },
  "ElapsedTime" : 682
}