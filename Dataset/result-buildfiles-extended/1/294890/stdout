{
  "Repository" : "294890",
  "Revision" : "HEAD",
  "ObjectId" : "a282da17f4f7e539d6b3c1bbf0ac3a120e61ce33",
  "CommitTime" : "2018-10-11T15:35:54Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "9fcac5b60f70d4d38b43ac0cbe72e60d7539b450",
      "LastModified" : "2018-04-22T14:32:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Allow the developer to select if Dynamic or Static libraries are built\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#set(CMAKE_CXX_STANDARD 14)\n\n#set(CMAKE_CXX_STANDARD_REQUIRED ON)\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "##### BOOST\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#####\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# check if we are on raspberry pi\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# check if we have a mali gpu\n",
        "Line" : 52,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# it's an ARM for sure\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# broadcom SoC -> RaspberryPi\n",
        "Line" : 61,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 8
    },
    "cmake_modules/FindASSIMP.cmake" : {
      "ObjectId" : "7a0d5186cfba2ba7d1887ea4eccb66999cfa9e26",
      "LastModified" : "2017-07-07T18:03:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find Assimp\n\n# Once done this will define\n\n#\n\n#  ASSIMP_FOUND - system has Assimp\n\n#  ASSIMP_INCLUDE_DIRS - the Assimp include directory\n\n#  ASSIMP_LIBRARIES - Link these to use Assimp\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# show the COLLADA_DOM_INCLUDE_DIR and COLLADA_DOM_LIBRARIES variables only in the advanced view\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake_modules/FindAntTweakBar.cmake" : {
      "ObjectId" : "a5a51625238f721dd3284afef700a9d4244bcb13",
      "LastModified" : "2012-05-25T08:48:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# in cache already\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# show the ANTTWEAKBAR_INCLUDE_DIRS and ANTTWEAKBAR_LIBRARIES variables only in the advanced view\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "cmake_modules/FindBULLET.cmake" : {
      "ObjectId" : "2497c8458914bf8631044340ce5578f0bce8e3a8",
      "LastModified" : "2015-05-27T16:50:55Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find the Bullet physics engine\n\n#\n\n#  This module defines the following variables\n\n#\n\n#  BULLET_FOUND - Was bullet found\n\n#  BULLET_INCLUDE_DIRS - the Bullet include directories\n\n#  BULLET_LIBRARIES - Link to this, by default it includes\n\n#                     all bullet components (Dynamics,\n\n#                     Collision, LinearMath, & SoftBody)\n\n#\n\n#  This module accepts the following variables\n\n#\n\n#  BULLET_ROOT - Can be set to bullet install path or Windows build path\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2009 Kitware, Inc.\n\n# Copyright 2009 Philip Lowman <philip@yhbt.com>\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Find the libraries\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set BULLET_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "cmake_modules/FindFMOD.cmake" : {
      "ObjectId" : "0fa5a8b0bceb02da69419a57216bb80d21718254",
      "LastModified" : "2017-07-07T18:03:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Search for the include file...\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#For finding the include file under the root of the glfw expanded archive, typically on Windows.\n",
        "Line" : 5,
        "CharPositionInLine" : 22
      },
      "CommentCount" : 2
    },
    "cmake_modules/FindGLFW.cmake" : {
      "ObjectId" : "f32b7e4e79d41b4c4b8e8dfb8fee8b2f6551a83c",
      "LastModified" : "2013-06-10T16:08:02Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate the glfw library\n\n# This module defines the following variables:\n\n# GLFW_LIBRARY, the name of the library;\n\n# GLFW_INCLUDE_DIR, where to find glfw include files.\n\n# GLFW_FOUND, true if both the GLFW_LIBRARY and GLFW_INCLUDE_DIR have been found.\n\n#\n\n# To help locate the library and include file, you could define an environment variable called\n\n# GLFW_ROOT which points to the root of the glfw library installation. This is pretty useful\n\n# on a Windows platform.\n\n#\n\n#\n\n# Usage example to compile an \"executable\" target to the glfw library:\n\n#\n\n# FIND_PACKAGE (glfw REQUIRED)\n\n# INCLUDE_DIRECTORIES (${GLFW_INCLUDE_DIR})\n\n# ADD_EXECUTABLE (executable ${EXECUTABLE_SRCS})\n\n# TARGET_LINK_LIBRARIES (executable ${GLFW_LIBRARY})\n\n#\n\n# TODO:\n\n# Allow the user to select to link to a shared library or to a static library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Search for the include file...\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#For finding the include file under the root of the glfw expanded archive, typically on Windows.\n",
        "Line" : 26,
        "CharPositionInLine" : 22
      },
      "3" : {
        "Text" : "# By default headers are under GL subfolder\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# added by ptr\n",
        "Line" : 33,
        "CharPositionInLine" : 28
      },
      "5" : {
        "Text" : "#For finding the library file under the root of the glfw expanded archive, typically on Windows.\n",
        "Line" : 51,
        "CharPositionInLine" : 26
      },
      "6" : {
        "Text" : "# added by ptr\n",
        "Line" : 55,
        "CharPositionInLine" : 39
      },
      "7" : {
        "Text" : "#FIND_LIBRARY(GLFW_LIBRARIES \"/usr/local/lib/libglfw.a\")\n\n#SET(GLFW_LIBRARIES \"/usr/local/lib/libglfw.a\")\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "cmake_modules/FindGLFW3.cmake" : {
      "ObjectId" : "27f66f33fd4b647489b4cb87b291c25f6ddcc8f7",
      "LastModified" : "2017-07-07T18:03:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate the glfw library\n\n# This module defines the following variables:\n\n# GLFW_LIBRARY, the name of the library;\n\n# GLFW_INCLUDE_DIR, where to find glfw include files.\n\n# GLFW_FOUND, true if both the GLFW_LIBRARY and GLFW_INCLUDE_DIR have been found.\n\n#\n\n# To help locate the library and include file, you could define an environment variable called\n\n# GLFW_ROOT which points to the root of the glfw library installation. This is pretty useful\n\n# on a Windows platform.\n\n#\n\n#\n\n# Usage example to compile an \"executable\" target to the glfw library:\n\n#\n\n# FIND_PACKAGE (glfw REQUIRED)\n\n# INCLUDE_DIRECTORIES (${GLFW_INCLUDE_DIR})\n\n# ADD_EXECUTABLE (executable ${EXECUTABLE_SRCS})\n\n# TARGET_LINK_LIBRARIES (executable ${GLFW_LIBRARY})\n\n#\n\n# TODO:\n\n# Allow the user to select to link to a shared library or to a static library.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#Search for the include file...\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#For finding the include file under the root of the glfw expanded archive, typically on Windows.\n",
        "Line" : 26,
        "CharPositionInLine" : 22
      },
      "3" : {
        "Text" : "# By default headers are under GLFW subfolder\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# added by ptr\n",
        "Line" : 33,
        "CharPositionInLine" : 28
      },
      "5" : {
        "Text" : "#For finding the library file under the root of the glfw expanded archive, typically on Windows.\n",
        "Line" : 42,
        "CharPositionInLine" : 26
      },
      "6" : {
        "Text" : "# added by ptr\n",
        "Line" : 46,
        "CharPositionInLine" : 39
      },
      "7" : {
        "Text" : "#find_library(OpenGL NAMES OpenGL)\n",
        "Line" : 50,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "#if(GLFW_FOUND)\n\n#  MARK_AS_ADVANCED(GLFW_INCLUDE_DIRS GLFW_LIBRARIES)\n\n#endif(GLFW_FOUND)\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake_modules/FindGStreamer.cmake" : {
      "ObjectId" : "be4492e64809d9ee4d0c6081119582b393e14757",
      "LastModified" : "2017-07-07T18:03:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find GStreamer and its plugins\n\n# Once done, this will define\n\n#\n\n#  GSTREAMER_FOUND - system has GStreamer\n\n#  GSTREAMER_INCLUDE_DIRS - the GStreamer include directories\n\n#  GSTREAMER_LIBRARIES - link these to use GStreamer\n\n#\n\n# Additionally, gstreamer-base is always looked for and required, and\n\n# the following related variables are defined:\n\n#\n\n#  GSTREAMER_BASE_INCLUDE_DIRS - gstreamer-base's include directory\n\n#  GSTREAMER_BASE_LIBRARIES - link to these to use gstreamer-base\n\n#\n\n# Optionally, the COMPONENTS keyword can be passed to find_package()\n\n# and GStreamer plugins can be looked for.  Currently, the following\n\n# plugins can be searched, and they define the following variables if\n\n# found:\n\n#\n\n#  gstreamer-app:        GSTREAMER_APP_INCLUDE_DIRS and GSTREAMER_APP_LIBRARIES\n\n#  gstreamer-audio:      GSTREAMER_AUDIO_INCLUDE_DIRS and GSTREAMER_AUDIO_LIBRARIES\n\n#  gstreamer-fft:        GSTREAMER_FFT_INCLUDE_DIRS and GSTREAMER_FFT_LIBRARIES\n\n#  gstreamer-pbutils:    GSTREAMER_PBUTILS_INCLUDE_DIRS and GSTREAMER_PBUTILS_LIBRARIES\n\n#  gstreamer-video:      GSTREAMER_VIDEO_INCLUDE_DIRS and GSTREAMER_VIDEO_LIBRARIES\n\n#\n\n# Copyright (C) 2012 Raphael Kubo da Costa <rakuco@webkit.org>\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n# 1.  Redistributions of source code must retain the above copyright\n\n#     notice, this list of conditions and the following disclaimer.\n\n# 2.  Redistributions in binary form must reproduce the above copyright\n\n#     notice, this list of conditions and the following disclaimer in the\n\n#     documentation and/or other materials provided with the distribution.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER AND ITS CONTRIBUTORS ``AS\n\n# IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n\n# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n\n# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR ITS\n\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\n# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\n# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;\n\n# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n\n# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\n\n# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n\n# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Helper macro to find a GStreamer plugin (or GStreamer itself)\n\n#   _component_prefix is prepended to the _INCLUDE_DIRS and _LIBRARIES variables (eg. \"GSTREAMER_AUDIO\")\n\n#   _pkgconfig_name is the component's pkg-config name (eg. \"gstreamer-1.0\", or \"gstreamer-video-1.0\").\n\n#   _header is the component's header, relative to the gstreamer-1.0 directory (eg. \"gst/gst.h\").\n\n#   _library is the component's library name (eg. \"gstreamer-1.0\" or \"gstvideo-1.0\")\n\n#macro(FIND_GSTREAMER_COMPONENT _component_prefix _pkgconfig_name _header _library)\n\n#    pkg_check_modules(PC_${_component_prefix} QUIET ${_pkgconfig_name})\n\n#\n\n#    find_path(${_component_prefix}_INCLUDE_DIRS\n\n#        NAMES ${_header}\n\n#        HINTS ${PC_${_component_prefix}_INCLUDE_DIRS} ${PC_${_component_prefix}_INCLUDEDIR}\n\n#        PATH_SUFFIXES gstreamer-1.0\n\n#    )\n\n#\n\n#    find_library(${_component_prefix}_LIBRARIES\n\n#        NAMES ${_library}\n\n#        HINTS ${PC_${_component_prefix}_LIBRARY_DIRS} ${PC_${_component_prefix}_LIBDIR}\n\n#    )\n\n#endmacro()\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# ------------------------\n\n# 1. Find GStreamer itself\n\n# ------------------------\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# 1.1. Find headers and libraries\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# 1.2. Check GStreamer version\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# -------------------------\n\n# 2. Find GStreamer plugins\n\n# -------------------------\n",
        "Line" : 133,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# ------------------------------------------------\n\n# 3. Process the COMPONENTS passed to FIND_PACKAGE\n\n# ------------------------------------------------\n",
        "Line" : 144,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 7
    },
    "cmake_modules/FindOpenCL.cmake" : {
      "ObjectId" : "0c45edca2db1a1d58b3eee8ee7726a6ebe321caf",
      "LastModified" : "2017-07-07T18:03:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Try to find OpenCL\n\n# This module tries to find an OpenCL implementation on your system. It supports\n\n# AMD / ATI, Apple and NVIDIA implementations, but should work, too.\n\n#\n\n# To set manually the paths, define these environment variables:\n\n# OpenCL_INCPATH    - Include path (e.g. OpenCL_INCPATH=/opt/cuda/4.0/cuda/include)\n\n# OpenCL_LIBPATH    - Library path (e.h. OpenCL_LIBPATH=/usr/lib64/nvidia)\n\n#\n\n# Once done this will define\n\n#  OPENCL_FOUND        - system has OpenCL\n\n#  OPENCL_INCLUDE_DIRS  - the OpenCL include directory\n\n#  OPENCL_LIBRARIES    - link these to use OpenCL\n\n#\n\n# WIN32 should work, but is untested\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The AMD SDK currently installs both x86 and x86_64 libraries\n\n# This is only a hack to find out architecture\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# On Win32 search relative to the library\n",
        "Line" : 47,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Unix style platforms\n",
        "Line" : 53,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# The AMD SDK currently does not place its headers\n\n# in /usr/include, therefore also search relative\n\n# to the library\n",
        "Line" : 61,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# This is often the same, so clean up\n",
        "Line" : 76,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 6
    },
    "cmake_modules/FindPkgMacros.cmake" : {
      "ObjectId" : "473b27b2a712ce91eb359ea066fb5b5616881d98",
      "LastModified" : "2017-07-07T18:03:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#-------------------------------------------------------------------\n\n# This file is part of the CMake build system for OGRE\n\n#     (Object-oriented Graphics Rendering Engine)\n\n# For the latest info, see http://www.ogre3d.org/\n\n#\n\n# The contents of this file are placed in the public domain. Feel\n\n# free to make use of it in any way you like.\n\n#-------------------------------------------------------------------\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##################################################################\n\n# Provides some common functionality for the FindPackage modules\n\n##################################################################\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Begin processing of package\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Display a status message unless FIND_QUIETLY is set\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Get environment variable, define it as ENV_$var and make sure backslashes are converted to forward slashes\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# replace won't work if var is blank\n",
        "Line" : 31,
        "CharPositionInLine" : 3
      },
      "6" : {
        "Text" : "# Construct search paths for includes and libraries from a PREFIX_PATH\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# clear cache variables if a certain variable changed\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# test against internal check variable\n\n# HACK: Apparently, adding a variable to the cache cleans up the list\n\n# a bit. We need to also remove any empty strings from the list, but\n\n# at the same time ensure that we are actually dealing with a list.\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Try to get some hints from pkg-config, if available\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Couple a set of release AND debug libraries (or frameworks)\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Generate debug names from given release names\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Add the parent dir from DIR to VAR \n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Do the final processing for the package find.\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# skip if already processed during this run\n",
        "Line" : 103,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Slightly customised framework finder\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# These could be arrays of paths, add each individually to the search paths\n",
        "Line" : 140,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 17
    },
    "cmake_modules/Kinski_Helpers.cmake" : {
      "ObjectId" : "904177954cffc4450ba1b741bcbac6fb130d36f0",
      "LastModified" : "2018-06-08T15:09:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#message(\"adding module ${module} with files: ${MODULE_SOURCES}\")\n",
        "Line" : 6,
        "CharPositionInLine" : 6
      },
      "1" : {
        "Text" : "# sources\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# headers\n",
        "Line" : 12,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# all resources\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# icon file\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "#message(${ICON_FILE})\n",
        "Line" : 20,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "#set(MACOSX_BUNDLE_ICON_FILE \"icon.icns\")\n",
        "Line" : 29,
        "CharPositionInLine" : 6
      },
      "7" : {
        "Text" : "# add the install targets\n",
        "Line" : 49,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# CmakeLists.txt in module folder is supposed to define\n\n# MODULE_INCLUDES and MODULE_LIBRARIES\n\n# optionally MODULE_SOURCES and MODULE_HEADERS can be defined\n",
        "Line" : 63,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# create output implementation and header\n",
        "Line" : 107,
        "CharPositionInLine" : 2
      },
      "10" : {
        "Text" : "# gather all shader files\n",
        "Line" : 116,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 11
    },
    "cmake_modules/ios.toolchain.iOS.cmake" : {
      "ObjectId" : "31834944467e0a0281fcb5bae8b35910bbb89de7",
      "LastModified" : "2017-07-07T18:03:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# __ ___ ____ _____ ______ _______ ________ _______ ______ _____ ____ ___ __\n\n#\n\n# Copyright (C) 1993-2011, ART+COM AG Berlin, Germany <www.artcom.de>\n\n#\n\n# It is distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n#  http://www.boost.org/LICENSE_1_0.txt)\n\n# __ ___ ____ _____ ______ _______ ________ _______ ______ _____ ____ ___ __\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# System and architecture\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# SDK- and Deploy-versions\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# run xcode-select for SDK paths\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# some internal values\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#REMOVE_DEFINITIONS(${IOS_VER_OPTION})\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Skip the platform compiler checks for cross compiling\n",
        "Line" : 46,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#set target device: \"1\" -> iPhone, \"2\" -> iPad, \"1,2 \" -> both (remember the <whitespace> after the '2' !!!)\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Flags\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Header\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# System Libraries\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#LINK_DIRECTORIES(\"${SDKROOT}/usr/lib/gcc/arm-apple-darwin10/4.2.1\")\n",
        "Line" : 89,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 12
    },
    "modules/assimp/CMakeLists.txt" : {
      "ObjectId" : "2b4044470ef1b4eafea69bf688bab9d50c5e3856",
      "LastModified" : "2017-07-07T18:03:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##### ASSIMP\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "modules/audio/CMakeLists.txt" : {
      "ObjectId" : "f17e6a9b476519728146bd3bcf106fdca3e5ba53",
      "LastModified" : "2017-07-07T18:03:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##### FMOD\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#if(${CMAKE_BUILD_TYPE} STREQUAL \"Release\")\n\n#set(EXECUTABLE_PATH ${CMAKE_CURRENT_BINARY_DIR}/Release/${itemName}.app/Contents/MacOS)\n\n#else()\n\n#set(EXECUTABLE_PATH ${CMAKE_CURRENT_BINARY_DIR}/Debug/${itemName}.app/Contents/MacOS)\n\n#endif()\n\n#\n\n#set(LIB_PATH ${EXECUTABLE_PATH}/../SharedSupport)\n\n#set(LIB_FILE ${LIB_PATH}/libfmodex.dylib)\n\n#set(NEW_LIB_PATH \"@executable_path/../SharedSupport\")\n\n#\n\n#add_custom_command( \n\n#    TARGET ${itemName} \n\n#    POST_BUILD \n\n#    COMMAND mkdir -p ${EXECUTABLE_PATH}/../SharedSupport)\n\n#add_custom_command( \n\n#    TARGET ${itemName} \n\n#    POST_BUILD \n\n#    COMMAND cp ${FMOD_LIBRARIES} ${EXECUTABLE_PATH}/../SharedSupport)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "modules/bluetooth/CMakeLists.txt" : {
      "ObjectId" : "3656e6805637816bb6486ac9308f4783b2419e74",
      "LastModified" : "2017-07-07T18:03:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##### Bluetooth\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# common header files\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# forward variables to parent scope\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "modules/decklink/CMakeLists.txt" : {
      "ObjectId" : "415655a9bd409cbc2fd39bdfd5bf35c8083a149b",
      "LastModified" : "2017-07-07T18:03:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# module files\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# forward variables to parent scope\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "modules/dmx/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2017-07-07T18:03:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/freenect/CMakeLists.txt" : {
      "ObjectId" : "bd488c541c0d0209de73597b7e77ca9a4bc17096",
      "LastModified" : "2017-07-07T18:03:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#SET( FREENECT_INCLUDE_DIR /usr/local/include/libfreenect)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "modules/gl_post_process/CMakeLists.txt" : {
      "ObjectId" : "99fd975d244ba8978541ea6394d5a2778bca7417",
      "LastModified" : "2017-07-07T18:03:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/http/CMakeLists.txt" : {
      "ObjectId" : "ed30073059190dc469a5d5f3cba55b89157c4808",
      "LastModified" : "2017-07-07T18:03:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/l_system/CMakeLists.txt" : {
      "ObjectId" : "859de70c87e7746ff0a7f6bcb980107785428e62",
      "LastModified" : "2017-07-07T18:03:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/leap/CMakeLists.txt" : {
      "ObjectId" : "abe8bb25bb7ffc79735abe77d961136a918ee01a",
      "LastModified" : "2017-07-07T18:03:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Leap Motion\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "modules/media/CMakeLists.txt" : {
      "ObjectId" : "ffdc1ead20bc783ec469c30be25ffc0bd921d1cf",
      "LastModified" : "2017-07-07T18:03:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#    message(WARNING \"${MODULE_LIBRARIES}\")\n\n#    message(WARNING \"${MODULE_INCLUDE_DIRS}\")\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GStreamer implementation\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Raspian specific implementation\n",
        "Line" : 21,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# OSX specific implementation\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# common header files\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# forward variables to parent scope\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "modules/opencl/CMakeLists.txt" : {
      "ObjectId" : "d6de7587d60949c63f76b4172c6a4390cba56ceb",
      "LastModified" : "2017-07-07T18:03:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##### OPENCL\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "modules/openni/CMakeLists.txt" : {
      "ObjectId" : "ffbef6851c5694b5e74be27f32631708addcb688",
      "LastModified" : "2017-07-07T18:03:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##### OPENNI\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#SET(OPENNI_LIBRARIES \"OpenNI\")\n",
        "Line" : 9,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 2
    },
    "modules/physics/CMakeLists.txt" : {
      "ObjectId" : "3ccc18c137b44f8d560dbab59df18cc4dc19fbc6",
      "LastModified" : "2017-07-07T18:03:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##### Bullet\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "modules/rtaudio/CMakeLists.txt" : {
      "ObjectId" : "41f00d6bfd9c1621a1be11bece60b3f902d2f21f",
      "LastModified" : "2017-07-07T18:03:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#TODO\n",
        "Line" : 6,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 1
    },
    "modules/rtmidi/CMakeLists.txt" : {
      "ObjectId" : "7fb16e8e2012eb20c72c81a9f9fb21f98a4f60ac",
      "LastModified" : "2017-07-07T18:03:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/sensors/CMakeLists.txt" : {
      "ObjectId" : "99fd975d244ba8978541ea6394d5a2778bca7417",
      "LastModified" : "2017-07-07T18:03:39Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "modules/syphon/CMakeLists.txt" : {
      "ObjectId" : "d93be56ebad7029d245936d8e9cff5a41ceca429",
      "LastModified" : "2017-07-07T18:03:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##### Syphon\n",
        "Line" : 2,
        "CharPositionInLine" : 2
      },
      "1" : {
        "Text" : "# common header files\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# forward variables to parent scope\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "508a64c072681a34b78bb356e11d62fcac64d7bb",
      "LastModified" : "2018-04-22T14:32:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##### GLM\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# add all project directories\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#message(${FOLDER_NAME})\n",
        "Line" : 32,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "src/app/CMakeLists.txt" : {
      "ObjectId" : "83b2d27d7925cf84b0d697b31d3a98826ba9642d",
      "LastModified" : "2018-09-04T12:12:19Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "##### IMGUI\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##### GLFW\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##### RASPI\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##### MALI\n",
        "Line" : 37,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/core/CMakeLists.txt" : {
      "ObjectId" : "9a6293be3a3b54c70b9a7a580c96b7c3776ab76a",
      "LastModified" : "2017-07-07T18:03:39Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#Boost Unit-Tests\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/gl/CMakeLists.txt" : {
      "ObjectId" : "0853b3d6999573ef19f1582257b3665565f2de62",
      "LastModified" : "2018-04-22T14:32:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# which shaders to include\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#stringify all shader files\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# now gather all files\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##### OPENGL\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "src/projects/3dviewer/CMakeLists.txt" : {
      "ObjectId" : "53b051532276d8dddb304a368030c3f9e3904363",
      "LastModified" : "2018-04-22T14:32:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/projects/CMakeLists.txt" : {
      "ObjectId" : "6c826632377a5046fa11c962f0fc4bf9e517af9f",
      "LastModified" : "2018-04-22T14:32:59Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# add our sample(s)\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# include optional CMakeLists.txt in sample folder\n",
        "Line" : 14,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 2
    },
    "src/projects/empty_sample/CMakeLists.txt" : {
      "ObjectId" : "e3a11c684817f6604d6b33834f3c205ab4843988",
      "LastModified" : "2018-04-22T14:32:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/projects/media_player/CMakeLists.txt" : {
      "ObjectId" : "58c82cae8cfad876965c5e2670c13667a6bfa520",
      "LastModified" : "2018-04-22T14:32:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/projects/touch_sample/CMakeLists.txt" : {
      "ObjectId" : "e3a11c684817f6604d6b33834f3c205ab4843988",
      "LastModified" : "2018-04-22T14:32:59Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 39
  },
  "ElapsedTime" : 2620
}