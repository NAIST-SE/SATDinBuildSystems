{
  "Repository" : "33982207",
  "Revision" : "HEAD",
  "ObjectId" : "41f98f9c02b4670d264f67c5445240e0ce592102",
  "CommitTime" : "2019-04-18T06:31:16Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "5735e8ea49be27cc58ce19802574c1bf1a1dceac",
      "LastModified" : "2018-12-21T22:36:41Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Citus toplevel Makefile\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Hint that configure should be run first\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# build extension\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# generated headers are located in the build directory\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# the rest in the source tree\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Add to generic targets\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# apply or check style\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# depend on install for now\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "src/backend/distributed/Makefile" : {
      "ObjectId" : "0f1afbb946875b00a68d5cad62246fa79bf0cc18",
      "LastModified" : "2019-02-20T11:06:27Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for the Citus extension\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# All citus--*.sql files in the source directory\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# directories with source files\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# That patsubst rule searches all directories listed in SUBDIRS for .c\n\n# files, and adds the corresponding .o files to OBJS\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# be explicit about the default target\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/test/regress/Makefile" : {
      "ObjectId" : "f64774ea8a153de5bb8822456990ddb56fe74909",
      "LastModified" : "2019-03-22T16:30:42Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for tests of the Citus extension\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# ensure MAJORVERSION is defined (missing in older versions)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##\n\n## Citus regression support\n\n##\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# XXX: Can't actually do useful testruns against install - $libdir\n\n# etc will point to the directory configured during postgres'\n\n# build. We could copy the installed tree around, but that's quite\n\n# likely to be mixed with other binaries and such...\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "###\techo rm -rf '$(CURDIR)'/tmp_check/install\n\n###\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "####\tmkdir -p $(MULTI_INSTALLDIR)\n\n###\t$(MAKE) DESTDIR=$(MULTI_INSTALLDIR) -C $(citus_top_builddir) install > tmp_check/install.log 2>&1\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Test input and expected files.  These are created by pg_regress itself, so we\n\n# don't have a rule to create them.  We do need rules to clean them however.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# have make check actually run all tests, but keep check-full as an\n\n# intermediate, for muscle memory backward compatibility.\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# check-full triggers all tests that ought to be run routinely\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# using pg_regress_multi_check unnecessarily starts up multiple nodes, which isn't needed\n\n# for check-worker. But that's harmless besides a few cycles.\n",
        "Line" : 42,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# check-base only sets up a testing environment so you can specify all your tests using EXTRA_TESTS\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 3
  },
  "ElapsedTime" : 1670
}