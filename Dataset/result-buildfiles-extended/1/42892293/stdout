{
  "Repository" : "42892293",
  "Revision" : "HEAD",
  "ObjectId" : "fb00a04cb38e2227adf4bdb17e1b38ec160632c2",
  "CommitTime" : "2018-11-04T20:19:11Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "dce63ef3b3b0af4d3836a12a6cab8103f94bb316",
      "LastModified" : "2018-09-26T10:52:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#########################################################\n\n# FIND OPENGL\n\n#########################################################\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindGLEW.cmake" : {
      "ObjectId" : "c5aee1986f87c3eac2b382c728ca665d4eb72f8c",
      "LastModified" : "2017-12-20T14:39:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Try to find GLEW library and include path.\n\n# Once done this will define\n\n#\n\n# GLEW_FOUND\n\n# GLEW_INCLUDE_DIR\n\n# GLEW_LIBRARY\n\n# GLEW_SOURCE\n\n#\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/FindOpenVR.cmake" : {
      "ObjectId" : "18fdf014165507c54d3655d33d1f1e94ef8f6499",
      "LastModified" : "2017-12-20T14:39:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - try to find the OpenVR SDK - currently designed for the version on GitHub.\n\n#\n\n# Cache Variables: (probably not for direct use in your scripts)\n\n#  OPENVR_INCLUDE_DIR\n\n#\n\n# Non-cache variables you might use in your CMakeLists.txt:\n\n#  OPENVR_FOUND\n\n#  OPENVR_INCLUDE_DIRS\n\n#  OPENVR_PLATFORM - something like Win32, Win64, etc.\n\n#\n\n# Requires these CMake modules:\n\n#  FindPackageHandleStandardArgs (known included with CMake >=2.6.2)\n\n#\n\n# Original Author:\n\n# 2015 Ryan A. Pavlik <ryan@sensics.com>\n\n#\n\n# Distributed under the Boost Software License, Version 1.0.\n\n# (See accompanying file LICENSE_1_0.txt or copy at\n\n# http://www.boost.org/LICENSE_1_0.txt)\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# todo fails for universal builds\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Test platform\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# SteamVR only supports 32-bit on OS X\n",
        "Line" : 54,
        "CharPositionInLine" : 1
      },
      "4" : {
        "Text" : "# TODO Massive hack!\n",
        "Line" : 59,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 5
    },
    "cmake/FindSDL2.cmake" : {
      "ObjectId" : "bc57e18548a2613c744fb19ff3bdb4fba5ee4fdc",
      "LastModified" : "2017-12-20T14:39:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This module defines\n\n# SDL2_LIBRARY, the name of the library to link against\n\n# SDL2_FOUND, if false, do not try to link to SDL2\n\n# SDL2_INCLUDE_DIR, where to find SDL.h\n\n#\n\n# This module responds to the the flag:\n\n# SDL2_BUILDING_LIBRARY\n\n# If this is defined, then no SDL2main will be linked in because\n\n# only applications need main().\n\n# Otherwise, it is assumed you are building an application and this\n\n# module will attempt to locate and set the the proper link flags\n\n# as part of the returned SDL2_LIBRARY variable.\n\n#\n\n# Don't forget to include SDLmain.h and SDLmain.m your project for the\n\n# OS X framework based version. (Other versions link to -lSDL2main which\n\n# this module will try to find on your behalf.) Also for OS X, this\n\n# module will automatically add the -framework Cocoa on your behalf.\n\n#\n\n#\n\n# Additional Note: If you see an empty SDL2_LIBRARY_TEMP in your configuration\n\n# and no SDL2_LIBRARY, it means CMake did not find your SDL2 library\n\n# (SDL2.dll, libsdl2.so, SDL2.framework, etc).\n\n# Set SDL2_LIBRARY_TEMP to point to your SDL2 library, and configure again.\n\n# Similarly, if you see an empty SDL2MAIN_LIBRARY, you should set this value\n\n# as appropriate. These values are used to generate the final SDL2_LIBRARY\n\n# variable, but when these values are unset, SDL2_LIBRARY does not get created.\n\n#\n\n#\n\n# $SDL2DIR is an environment variable that would\n\n# correspond to the ./configure --prefix=$SDL2DIR\n\n# used in building SDL2.\n\n# l.e.galup  9-20-02\n\n#\n\n# Modified by Eric Wing.\n\n# Added code to assist with automated building by using environmental variables\n\n# and providing a more controlled/consistent search behavior.\n\n# Added new modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n\n# Also corrected the header search path to follow \"proper\" SDL guidelines.\n\n# Added a search for SDL2main which is needed by some platforms.\n\n# Added a search for threads which is needed by some platforms.\n\n# Added needed compile switches for MinGW.\n\n#\n\n# On OSX, this will prefer the Framework version (if found) over others.\n\n# People will have to manually change the cache values of\n\n# SDL2_LIBRARY to override this selection or set the CMake environment\n\n# CMAKE_INCLUDE_PATH to modify the search paths.\n\n#\n\n# Note that the header path has changed from SDL2/SDL.h to just SDL.h\n\n# This needed to change because \"proper\" SDL convention\n\n# is #include \"SDL.h\", not <SDL2/SDL.h>. This is done for portability\n\n# reasons because not all systems place things in SDL2/ (see FreeBSD).\n",
        "Line" : 2,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2003-2009 Kitware, Inc.\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Fink\n",
        "Line" : 75,
        "CharPositionInLine" : 6
      },
      "3" : {
        "Text" : "# DarwinPorts\n",
        "Line" : 76,
        "CharPositionInLine" : 13
      },
      "4" : {
        "Text" : "# Blastwave\n",
        "Line" : 77,
        "CharPositionInLine" : 11
      },
      "5" : {
        "Text" : "# Non-OS X framework versions expect you to also dynamically link to\n\n# SDL2main. This is mainly for Windows and OS X. Other (Unix) platforms\n\n# seem to provide SDL2main for compatibility even though they don't\n\n# necessarily need it.\n",
        "Line" : 99,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# SDL2 may require threads on your system.\n\n# The Apple build may not need an explicit flag because one of the\n\n# frameworks may already provide it.\n\n# But for non-OSX systems, I will use the CMake Threads package.\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# MinGW needs an additional library, mwindows\n\n# It's total link flags should look like -lmingw32 -lSDL2main -lSDL2 -lmwindows\n\n# (Actually on second look, I think it only needs one of the m* libraries.)\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# For SDL2main\n",
        "Line" : 129,
        "CharPositionInLine" : 1
      },
      "9" : {
        "Text" : "# For OS X, SDL2 uses Cocoa as a backend so it must link to Cocoa.\n\n# CMake doesn't display the -framework Cocoa string in the UI even\n\n# though it actually is there if I modify a pre-used variable.\n\n# I think it has something to do with the CACHE STRING.\n\n# So I use a temporary variable until the end so I can set the\n\n# \"real\" variable in one-shot.\n",
        "Line" : 136,
        "CharPositionInLine" : 1
      },
      "10" : {
        "Text" : "# For threads, as mentioned Apple doesn't need this.\n\n# In fact, there seems to be a problem if I used the Threads package\n\n# and try using this line, so I'm just skipping it entirely for OS X.\n",
        "Line" : 146,
        "CharPositionInLine" : 1
      },
      "11" : {
        "Text" : "# For MinGW library\n",
        "Line" : 153,
        "CharPositionInLine" : 1
      },
      "12" : {
        "Text" : "# Set the final string here so the GUI reflects the final state.\n",
        "Line" : 158,
        "CharPositionInLine" : 1
      },
      "13" : {
        "Text" : "# Set the temp variable to INTERNAL so it is not seen in the CMake GUI\n",
        "Line" : 160,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 14
    },
    "cmake/FindSDL2_IMAGE.cmake" : {
      "ObjectId" : "caa0d96f2f971d9ee91705522268bdb0d0f0071b",
      "LastModified" : "2017-12-20T14:39:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate SDL_image library\n\n#\n\n# This module defines:\n\n#\n\n# ::\n\n#\n\n#   SDL_IMAGE_LIBRARIES, the name of the library to link against\n\n#   SDL_IMAGE_INCLUDE_DIRS, where to find the headers\n\n#   SDL_IMAGE_FOUND, if false, do not try to link against\n\n#   SDL_IMAGE_VERSION_STRING - human-readable string containing the version of SDL_image\n\n#\n\n#\n\n#\n\n# For backward compatiblity the following variables are also set:\n\n#\n\n# ::\n\n#\n\n#   SDLIMAGE_LIBRARY (same value as SDL_IMAGE_LIBRARIES)\n\n#   SDLIMAGE_INCLUDE_DIR (same value as SDL_IMAGE_INCLUDE_DIRS)\n\n#   SDLIMAGE_FOUND (same value as SDL_IMAGE_FOUND)\n\n#\n\n#\n\n#\n\n# $SDLDIR is an environment variable that would correspond to the\n\n# ./configure --prefix=$SDLDIR used in building SDL.\n\n#\n\n# Created by Eric Wing.  This was influenced by the FindSDL.cmake\n\n# module, but with modifications to recognize OS X frameworks and\n\n# additional Unix paths (FreeBSD, etc).\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2005-2009 Kitware, Inc.\n\n# Copyright 2012 Benjamin Eikel\n\n#\n\n# Distributed under the OSI-approved BSD License (the \"License\");\n\n# see accompanying file Copyright.txt for details.\n\n#\n\n# This software is distributed WITHOUT ANY WARRANTY; without even the\n\n# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n# See the License for more information.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# path suffixes to search inside ENV{SDLDIR}\n",
        "Line" : 51,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# for backward compatiblity\n\n#set(SDLIMAGE_LIBRARY ${SDL_IMAGE_LIBRARIES})\n\n#set(SDLIMAGE_INCLUDE_DIR ${SDL_IMAGE_INCLUDE_DIRS})\n\n#set(SDLIMAGE_FOUND ${SDL_IMAGE_FOUND})\n",
        "Line" : 96,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "ee6fdaa26d32824fa5136f454e054fefe8853b2e",
      "LastModified" : "2018-06-04T10:58:32Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Create custom build targets\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "930aadf3ceba3561265ddddc160adc54cd1d5122",
      "LastModified" : "2018-06-04T10:58:32Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "submodules/CMakeLists.txt" : {
      "ObjectId" : "41a14a51fad2207e9327a3ade0d676a9c841b51f",
      "LastModified" : "2018-09-26T10:52:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "d13cbee20149753ebaed902d34ca40f869b6b74a",
      "LastModified" : "2018-07-19T21:51:16Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# List of single-file tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Create custom build targets\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "utils/CMakeLists.txt" : {
      "ObjectId" : "db342f1f638ec5bd03d4862cc385a045a723331f",
      "LastModified" : "2018-01-31T10:56:46Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 10
  },
  "ElapsedTime" : 1172
}