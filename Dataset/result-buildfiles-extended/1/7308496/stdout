{
  "Repository" : "7308496",
  "Revision" : "HEAD",
  "ObjectId" : "e8a33ec6d084fef3200eb8732b453734f4b391ca",
  "CommitTime" : "2019-04-19T05:48:28Z",
  "Files" : {
    "experimental/wasm-skp-debugger/Makefile" : {
      "ObjectId" : "a9f9e7a73c5d7f1e459ba0a34ae080f651353a38",
      "LastModified" : "2019-04-09T18:37:18Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Does an incremental build where possible.\n",
        "Line" : 2,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Does an incremental build where possible.\n",
        "Line" : 9,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# assume the developer also has a checkout of buildbot here and wants to test the newly\n\n# built wasm debugger with the interface.\n",
        "Line" : 16,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# A barebones local example of the wasm module included in a page.\n\n# for the real interface see\n\n# https://github.com/google/skia-buildbot/blob/master/debugger-assets/res/imp/wasm-app.html\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "infra/bots/Makefile" : {
      "ObjectId" : "0df77df3515f2ec45ad4221ace93bff2241e0212",
      "LastModified" : "2017-04-13T17:01:17Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "infra/canvaskit/docker/Makefile" : {
      "ObjectId" : "9245d21b3485812abcf7ce84941bc27286419f66",
      "LastModified" : "2019-04-09T23:14:13Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "infra/lottiecap/Makefile" : {
      "ObjectId" : "7ab6c03db55a694bc7e1c1b64f484f1d3427c434",
      "LastModified" : "2018-08-28T15:16:22Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set the build context to the current work dir, so we can copy\n\n# the built binary to where we need it.\n",
        "Line" : 2,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "infra/wasm-common/Makefile" : {
      "ObjectId" : "8ca5de9ac65d3f549b7ee22218c504fdae1917a2",
      "LastModified" : "2019-04-09T23:14:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Set the build context to the current work dir, so we can copy\n\n# the built binary to where we need it.\n",
        "Line" : 2,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Set the build context to the current work dir, so we can copy\n\n# the built binary to where we need it.\n",
        "Line" : 7,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Can check CHROME_VERSION with\n\n# docker run karma-chrome-tests /usr/bin/google-chrome-stable --version\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "infra/wasm-common/docker/Makefile" : {
      "ObjectId" : "2af691e90cc78ab976a06b95aa5bb1f4b12a1bb8",
      "LastModified" : "2019-04-09T23:14:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Can check CHROME_VERSION with\n\n# docker run karma-chrome-tests /usr/bin/google-chrome-stable --version\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "modules/canvaskit/Makefile" : {
      "ObjectId" : "ff2e301d2ba4c922629e6290faa4d3ea5ad03fcc",
      "LastModified" : "2019-04-09T23:14:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Does an incremental build where possible.\n",
        "Line" : 7,
        "CharPositionInLine" : 1
      },
      "1" : {
        "Text" : "# Does an incremental build where possible.\n",
        "Line" : 14,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "# Does an incremental build where possible.\n",
        "Line" : 21,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# Does an incremental build where possible.\n",
        "Line" : 29,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "modules/pathkit/Makefile" : {
      "ObjectId" : "31e5f86c025487068db57c4bafe555d5a9c8cd25",
      "LastModified" : "2019-04-09T23:14:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Build the library and run the tests. If developing locally, test-continuous is better\n\n# suited for that, although if you make changes to the C++/WASM code, you will need\n\n# to manually call make npm-test to re-build.\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Build the library and run the tests using the docker image.  If developing locally,\n\n# test-docker-continuous is better, although if you make changes to the C++/WASM code,\n\n# you will need to manually call make npm-test to re-build.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# This compile time is typically faster than release and good for use with\n\n# local-example-test\n",
        "Line" : 85,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# This compile time is typically faster than release and good for use with\n\n# local-example-test\n",
        "Line" : 97,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 4
    },
    "platform_tools/android/apps/arcore/CMakeLists.txt" : {
      "ObjectId" : "6bfe1b7bef68e5679373f6d1aa6cebf5cba4512c",
      "LastModified" : "2019-04-09T23:14:13Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Copyright (C) 2018 Google Inc.\n\n#\n\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n\n# you may not use this file except in compliance with the License.\n\n# You may obtain a copy of the License at\n\n#\n\n#     http://www.apache.org/licenses/LICENSE-2.0\n\n#\n\n# Unless required by applicable law or agreed to in writing, software\n\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\n# See the License for the specific language governing permissions and\n\n# limitations under the License.\n\n##\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Sets the minimum version of CMake required to build the native library.\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Import the ARCore library.\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This is the main app library.\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#BASIC AR NATIVE CODE\n",
        "Line" : 41,
        "CharPositionInLine" : 12
      },
      "5" : {
        "Text" : "#ARCORE LIBRARY\n",
        "Line" : 44,
        "CharPositionInLine" : 12
      },
      "6" : {
        "Text" : "#GLM\n",
        "Line" : 47,
        "CharPositionInLine" : 12
      },
      "7" : {
        "Text" : "#SKIA INCLUDE DIRECTORIES\n",
        "Line" : 50,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 8
    },
    "platform_tools/android/apps/skar_java/proguard-rules.pro" : {
      "ObjectId" : "45dc58a590cb45b0e593be5df3121c9fa250adc1",
      "LastModified" : "2019-04-09T23:14:13Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in /opt/android-sdk/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "public.bzl" : {
      "ObjectId" : "d34c81df31b89ef5231442ebff23ce69c2782a79",
      "LastModified" : "2019-04-09T23:14:13Z",
      "FileType" : "BAZEL",
      "0" : {
        "Text" : "################################################################################\n# Skylark macros\n################################################################################",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "\"\"\"Replaces select() with a Bazel-friendly wrapper.\n\n    Args:\n      select_dict: Dictionary in the same format as select().\n    Returns:\n      If Blaze platform, returns select() using select_dict.\n      If Bazel platform, returns dependencies for condition\n          bazel_condition, or empty list if none specified.\n    \"\"\"",
        "Line" : 8,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "\"\"\"Replaces select() for conditions [UNIX, ANDROID, IOS]\n\n    Args:\n      conditions: [CONDITION_UNIX, CONDITION_ANDROID, CONDITION_IOS]\n      results: [RESULT_UNIX, RESULT_ANDROID, RESULT_IOS]\n    Returns:\n      The result matching the platform condition.\n    \"\"\"",
        "Line" : 23,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "\"\"\"Replaces glob() with a version that accepts a struct.\n\n    Args:\n      srcs: struct(include=[], exclude=[])\n    Returns:\n      Equivalent of glob(srcs.include, exclude=srcs.exclude)\n    \"\"\"",
        "Line" : 40,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "################################################################################\n## skia_{all,public}_hdrs()\n################################################################################",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "################################################################################\n## skia_opts_srcs()\n################################################################################\n# Intel",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Arm",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# arm64",
        "Line" : 91,
        "CharPositionInLine" : 27
      },
      "8" : {
        "Text" : "# No matches currently.",
        "Line" : 97,
        "CharPositionInLine" : 36
      },
      "9" : {
        "Text" : "# NDK r11's Clang (3.8) doesn't pass along this -march setting correctly to an external\n# assembler, so we do it manually with -Wa.  This is just a bug, fixed in later Clangs.",
        "Line" : 147,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# NEON doesn't need special flags to compile on ARM64.",
        "Line" : 169,
        "CharPositionInLine" : 12
      },
      "11" : {
        "Text" : "################################################################################\n## BASE_SRCS\n################################################################################",
        "Line" : 207,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# All platform-independent SRCS.",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Exclude platform-dependent files.",
        "Line" : 220,
        "CharPositionInLine" : 8
      },
      "14" : {
        "Text" : "# Windows-only. Move to ports?",
        "Line" : 222,
        "CharPositionInLine" : 29
      },
      "15" : {
        "Text" : "# Windows-only. Move to ports?",
        "Line" : 223,
        "CharPositionInLine" : 30
      },
      "16" : {
        "Text" : "# Exclude multiple definitions.",
        "Line" : 237,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# We use src/pdf/SkPDFDocument.cpp.",
        "Line" : 242,
        "CharPositionInLine" : 44
      },
      "18" : {
        "Text" : "# Exclude files that don't compile everywhere.",
        "Line" : 244,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# Depends on xml, SkJpegCodec, and SkPngCodec.\n# Avoid dragging in expat when not needed.",
        "Line" : 245,
        "CharPositionInLine" : 25
      },
      "20" : {
        "Text" : "# Conflicting dependencies among Lua versions. See cl/107087297.",
        "Line" : 248,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# Currently exclude all vulkan specific files",
        "Line" : 251,
        "CharPositionInLine" : 8
      },
      "22" : {
        "Text" : "# Defines main.",
        "Line" : 254,
        "CharPositionInLine" : 8
      },
      "23" : {
        "Text" : "# Only used to regenerate the lexer",
        "Line" : 257,
        "CharPositionInLine" : 8
      },
      "24" : {
        "Text" : "# Atlas text",
        "Line" : 260,
        "CharPositionInLine" : 8
      },
      "25" : {
        "Text" : "# Compute backend not yet even hooked into Skia.",
        "Line" : 263,
        "CharPositionInLine" : 8
      },
      "26" : {
        "Text" : "\"\"\"Sources for the codecs. Excludes Raw, and Ico, Webp, and Png if limited.\"\"\"",
        "Line" : 269,
        "CharPositionInLine" : 4
      },
      "27" : {
        "Text" : "# TODO: Enable wuffs in Google3",
        "Line" : 271,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "################################################################################\n## INCLUDES\n################################################################################",
        "Line" : 406,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# Includes needed by Skia implementation.  Not public includes.",
        "Line" : 410,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "################################################################################\n## DM_SRCS\n################################################################################",
        "Line" : 444,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Android-only.",
        "Line" : 510,
        "CharPositionInLine" : 47
      },
      "32" : {
        "Text" : "# FontConfig-only.",
        "Line" : 511,
        "CharPositionInLine" : 44
      },
      "33" : {
        "Text" : "# Old main.",
        "Line" : 512,
        "CharPositionInLine" : 32
      },
      "34" : {
        "Text" : "################################################################################\n## dm_srcs()\n################################################################################",
        "Line" : 525,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "\"\"\"Sources for the dm binary for the specified os.\"\"\"",
        "Line" : 530,
        "CharPositionInLine" : 4
      },
      "36" : {
        "Text" : "################################################################################\n## DM_INCLUDES\n################################################################################",
        "Line" : 540,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "################################################################################\n## DM_ARGS\n################################################################################",
        "Line" : 570,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# TODO(benjaminwagner): f16, pic-8888, serialize-8888, and tiles_rt-8888 fail.",
        "Line" : 577,
        "CharPositionInLine" : 4
      },
      "39" : {
        "Text" : "################################################################################\n## COPTS\n################################################################################",
        "Line" : 583,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# UNIX",
        "Line" : 591,
        "CharPositionInLine" : 12
      },
      "41" : {
        "Text" : "# Some intentional fallthrough.",
        "Line" : 593,
        "CharPositionInLine" : 46
      },
      "42" : {
        "Text" : "# Internal use of deprecated methods. :(",
        "Line" : 594,
        "CharPositionInLine" : 16
      },
      "43" : {
        "Text" : "# TODO(kjlubick)",
        "Line" : 596,
        "CharPositionInLine" : 16
      },
      "44" : {
        "Text" : "# Spurious warning in tests/PathOpsDVectorTest.cpp?",
        "Line" : 597,
        "CharPositionInLine" : 37
      },
      "45" : {
        "Text" : "# ANDROID",
        "Line" : 599,
        "CharPositionInLine" : 12
      },
      "46" : {
        "Text" : "# Some intentional fallthrough.",
        "Line" : 601,
        "CharPositionInLine" : 46
      },
      "47" : {
        "Text" : "# 'GrResourceCache' declared with greater visibility than the\n# type of its field 'GrResourceCache::fPurgeableQueue'... bogus.",
        "Line" : 602,
        "CharPositionInLine" : 16
      },
      "48" : {
        "Text" : "# IOS",
        "Line" : 606,
        "CharPositionInLine" : 12
      },
      "49" : {
        "Text" : "# Some intentional fallthrough.",
        "Line" : 608,
        "CharPositionInLine" : 46
      },
      "50" : {
        "Text" : "################################################################################\n## DEFINES\n################################################################################",
        "Line" : 613,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Chrome DEFINES.",
        "Line" : 619,
        "CharPositionInLine" : 8
      },
      "52" : {
        "Text" : "# Turn on a few Google3-specific build fixes.",
        "Line" : 621,
        "CharPositionInLine" : 8
      },
      "53" : {
        "Text" : "# Required for building dm.",
        "Line" : 623,
        "CharPositionInLine" : 8
      },
      "54" : {
        "Text" : "# Staging flags for API changes\n# Should remove after we update golden images",
        "Line" : 625,
        "CharPositionInLine" : 8
      },
      "55" : {
        "Text" : "# Experiment to diagnose image diffs in Google3",
        "Line" : 628,
        "CharPositionInLine" : 8
      },
      "56" : {
        "Text" : "# JPEG is in codec_limited",
        "Line" : 630,
        "CharPositionInLine" : 8
      },
      "57" : {
        "Text" : "# UNIX",
        "Line" : 635,
        "CharPositionInLine" : 12
      },
      "58" : {
        "Text" : "# ANDROID",
        "Line" : 644,
        "CharPositionInLine" : 12
      },
      "59" : {
        "Text" : "# IOS",
        "Line" : 650,
        "CharPositionInLine" : 12
      },
      "60" : {
        "Text" : "################################################################################\n## LINKOPTS\n################################################################################",
        "Line" : 659,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# UNIX",
        "Line" : 669,
        "CharPositionInLine" : 12
      },
      "62" : {
        "Text" : "# ANDROID",
        "Line" : 671,
        "CharPositionInLine" : 12
      },
      "63" : {
        "Text" : "# IOS",
        "Line" : 676,
        "CharPositionInLine" : 12
      },
      "64" : {
        "Text" : "################################################################################\n## skottie_tool\n################################################################################",
        "Line" : 687,
        "CharPositionInLine" : 0
      },
      "65" : {
        "Text" : "# TODO(benjaminwagner): Add \"flags\" target.",
        "Line" : 700,
        "CharPositionInLine" : 4
      },
      "66" : {
        "Text" : "################################################################################\n## SkShaper\n################################################################################",
        "Line" : 705,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 67
    },
    "src/compute/hs/cl/bench/Makefile" : {
      "ObjectId" : "60056b9257f84e4f65f559a6d347d3c730cdf8f9",
      "LastModified" : "2019-04-09T23:14:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/compute/hs/cl/intel/gen8/u32/Makefile" : {
      "ObjectId" : "01f377f45b86d253de98822340da52c0c6b64b2e",
      "LastModified" : "2019-04-09T23:14:13Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/compute/hs/cl/intel/gen8/u64/Makefile" : {
      "ObjectId" : "ac3e6f8622b70073b979bb1196ac524ee579a6da",
      "LastModified" : "2019-04-09T23:14:13Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "src/compute/hs/cuda/bench/Makefile" : {
      "ObjectId" : "a0592a9c2cb64d1dda804a33a687cec1cd3a285b",
      "LastModified" : "2019-04-09T23:14:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#\n\n#\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NVCC_ARCH\t=\t-gencode arch=compute_37,code=sm_37\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n#\n\n#\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n#\n\n#\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "src/compute/hs/gen/Makefile" : {
      "ObjectId" : "f7796738833f0d0530f29ef4eef94a366bc18369",
      "LastModified" : "2019-04-09T23:14:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#\n\n#\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n#\n\n#\n",
        "Line" : 20,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "src/compute/hs/vk/bench/Makefile" : {
      "ObjectId" : "a668d389aa486d111ef778c64b11f44acdd59a33",
      "LastModified" : "2019-04-09T23:14:13Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n#\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n#\n\n#\n",
        "Line" : 24,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# -D HS_VK_VERBOSE_DISASSEMBLY_AMD\n",
        "Line" : 28,
        "CharPositionInLine" : 43
      },
      "3" : {
        "Text" : "#\n\n#\n\n#\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n#\n\n#\n",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "tools/gpu/gl/interface/Makefile" : {
      "ObjectId" : "b7f5ced9ba61dd6fecf0318070b000c3d05967c4",
      "LastModified" : "2019-04-09T23:14:13Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    }
  },
  "FileTypes" : {
    "CMAKE" : 1,
    "QMAKE" : 1,
    "MAKEFILE" : 15,
    "BAZEL" : 1
  },
  "ElapsedTime" : 10564
}