{
  "Repository" : "15628378",
  "Revision" : "HEAD",
  "ObjectId" : "09a193866c4de2ac1ea5bd3b3d469e82a2c13b6c",
  "CommitTime" : "2019-04-16T20:38:53Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "c56f30569d0a455eb344e8a3b1bf2fcc11992b6b",
      "LastModified" : "2019-04-05T20:29:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is distributed under the MIT license.\n\n# See the LICENSE file for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#--------------------------------------------------------------------------------------------------\n\n# CMake policies to control backward compatible behavior\n\n#\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Old behavior: COMPILE_DEFINITIONS_<CONFIG>\n\n# New behavior: COMPILE_DEFINITIONS + generator expression\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n# Directories containing config headers\n\n#\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Config file location (#include <visionaray/config.h>,#include <common/config.h>,...)\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Config file location for the public visionaray library\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Config file location for the private visionaray_common library\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n# Visionaray Options\n\n#\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n# All VSNRAY_* options have to be specified before this include\n\n#\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "cmake/FindOpenEXR.cmake" : {
      "ObjectId" : "1498f2fbff048bb11a7037ef423048f99306df5b",
      "LastModified" : "2018-09-30T11:25:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindOpenEXR\n\n# --------------\n\n#\n\n# Find OpenEXR library\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following variables:\n\n#\n\n# ::\n\n#\n\n# OPENEXR_INCLUDE_DIR - include directories of OpenEXR\n\n# OPENEXR_LIBRARIES - libraries to link against OpenEXR\n\n# OPENEXR_FOUND - true if OpenEXR has been found and can be used\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindOpenGLES.cmake" : {
      "ObjectId" : "855dc8a2811aefd1a08adb3fcefc3f7e748e39b9",
      "LastModified" : "2018-09-30T11:25:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindOpenGLES\n\n# --------------\n\n#\n\n# Find the OpenGLES library\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following variables:\n\n#\n\n# ::\n\n#\n\n# OPENGLES_INCLUDE_DIR - include directories of OpenGLES\n\n# OPENGLES_LIBRARIES - libraries to link against OpenGLES\n\n# OPENGLES_FOUND - true if OpenGLES has been found and can be used\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindPtex.cmake" : {
      "ObjectId" : "ea9a5fbd8a9838110611be54d88feddb48e23bb7",
      "LastModified" : "2018-09-30T11:25:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindPtex\n\n# --------------\n\n#\n\n# Find Disney's Ptex library\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following variables:\n\n#\n\n# ::\n\n#\n\n# PTEX_INCLUDE_DIR - include directories of Ptex\n\n# PTEX_LIBRARIES - libraries to link against Ptex\n\n# PTEX_FOUND - true if Ptex has been found and can be used\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindTBB.cmake" : {
      "ObjectId" : "6a7f923d3a1c49f0b37c2a63d72d991d336ed8ab",
      "LastModified" : "2018-09-30T11:25:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Locate Intel Threading Building Blocks include paths and libraries\n\n# FindTBB.cmake can be found at https://code.google.com/p/findtbb/\n\n# Written by Hannes Hofmann <hannes.hofmann _at_ informatik.uni-erlangen.de>\n\n# Improvements by Gino van den Bergen <gino _at_ dtecta.com>,\n\n#   Florian Uhlig <F.Uhlig _at_ gsi.de>,\n\n#   Jiri Marsik <jiri.marsik89 _at_ gmail.com>,\n\n#   Stefan Zellmann <info _at_ szellmann.de>,\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The MIT License\n\n#\n\n# Copyright (c) 2011 Hannes Hofmann\n\n#\n\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n\n# of this software and associated documentation files (the \"Software\"), to deal\n\n# in the Software without restriction, including without limitation the rights\n\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\n# copies of the Software, and to permit persons to whom the Software is\n\n# furnished to do so, subject to the following conditions:\n\n#\n\n# The above copyright notice and this permission notice shall be included in\n\n# all copies or substantial portions of the Software.\n\n#\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\n# THE SOFTWARE.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GvdB: This module uses the environment variable TBB_ARCH_PLATFORM which defines architecture and compiler.\n\n#   e.g. \"ia32/vc8\" or \"em64t/cc4.1.0_libc2.4_kernel2.6.16.21\"\n\n#   TBB_ARCH_PLATFORM is set by the build script tbbvars[.bat|.sh|.csh], which can be found\n\n#   in the TBB installation directory (TBB_INSTALL_DIR).\n\n#\n\n# GvdB: Mac OS X distribution places libraries directly in lib directory.\n\n#\n\n# For backwards compatibility, you may explicitely set the CMake variables TBB_ARCHITECTURE and TBB_COMPILER.\n\n# TBB_ARCHITECTURE [ ia32 | em64t | itanium ]\n\n#   which architecture to use\n\n# TBB_COMPILER e.g. vc9 or cc3.2.3_libc2.3.2_kernel2.4.21 or cc4.0.1_os10.4.9\n\n#   which compiler to use (detected automatically on Windows)\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# This module respects\n\n# TBB_INSTALL_DIR or $ENV{TBB21_INSTALL_DIR} or $ENV{TBB_INSTALL_DIR}\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# This module defines\n\n# TBB_INCLUDE_DIRS, where to find task_scheduler_init.h, etc.\n\n# TBB_LIBRARY_DIRS, where to find libtbb, libtbbmalloc\n\n# TBB_DEBUG_LIBRARY_DIRS, where to find libtbb_debug, libtbbmalloc_debug\n\n# TBB_INSTALL_DIR, the base TBB install directory\n\n# TBB_LIBRARIES, the libraries to link against to use TBB.\n\n# TBB_DEBUG_LIBRARIES, the libraries to link against to use TBB with debug symbols.\n\n# TBB_FOUND, If false, don't try to use TBB.\n\n# TBB_INTERFACE_VERSION, as defined in tbb/tbb_stddef.h\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# has em64t/vc8 em64t/vc9\n\n# has ia32/vc7.1 ia32/vc8 ia32/vc9\n",
        "Line" : 59,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# Todo: add other Windows compilers such as ICL.\n",
        "Line" : 78,
        "CharPositionInLine" : 4
      },
      "7" : {
        "Text" : "# MAC\n",
        "Line" : 84,
        "CharPositionInLine" : 8
      },
      "8" : {
        "Text" : "# libs: libtbb.dylib, libtbbmalloc.dylib, *_debug\n",
        "Line" : 86,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : "# default flavor on apple: ia32/cc4.0.1_os10.4.9\n\n# Jiri: There is no reason to presume there is only one flavor and\n\n#       that user's setting of variables should be ignored.\n",
        "Line" : 91,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# LINUX\n",
        "Line" : 105,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : "# has em64t/cc3.2.3_libc2.3.2_kernel2.4.21 em64t/cc3.3.3_libc2.3.3_kernel2.6.5 em64t/cc3.4.3_libc2.3.4_kernel2.6.9 em64t/cc4.1.0_libc2.4_kernel2.6.16.21\n\n# has ia32/*\n\n# has itanium/*\n",
        "Line" : 111,
        "CharPositionInLine" : 8
      },
      "12" : {
        "Text" : "# SUN\n\n# not yet supported\n\n# has em64t/cc3.4.3_kernel5.10\n\n# has ia32/*\n",
        "Line" : 120,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "#-- Clear the public variables\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "#-- Find TBB install dir and set ${_TBB_INSTALL_DIR} and cached ${TBB_INSTALL_DIR}\n\n# first: use CMake variable TBB_INSTALL_DIR\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# second: use environment variable\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Intel recommends setting TBB21_INSTALL_DIR\n",
        "Line" : 141,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# third: try to find path automatically\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# sanity check\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# finally: set the cached CMake variable TBB_INSTALL_DIR\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#-- A macro to rewrite the paths of the library. This is necessary, because\n\n#   find_library() always found the em64t/vc9 version of the TBB libs\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#    if (NOT \"${_TBB_ARCHITECTURE}\" STREQUAL \"em64t\")\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#    endif (NOT \"${_TBB_ARCHITECTURE}\" STREQUAL \"em64t\")\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#-- Look for include directory and set ${TBB_INCLUDE_DIR}\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Jiri: tbbvars now sets the CPATH environment variable to the directory\n\n#       containing the headers.\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#-- Look for libraries\n\n# GvdB: $ENV{TBB_ARCH_PLATFORM} is set by the build script tbbvars[.bat|.sh|.csh]\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Jiri: This block isn't mutually exclusive with the previous one\n\n#       (hence no else), instead I test if the user really specified\n\n#       the variables in question.\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# HH: deprecated\n",
        "Line" : 206,
        "CharPositionInLine" : 4
      },
      "28" : {
        "Text" : "# Jiri: It doesn't hurt to look in more places, so I store the hints from\n\n#       ENV{TBB_ARCH_PLATFORM} and the TBB_ARCHITECTURE and TBB_COMPILER\n\n#       variables and search them both.\n",
        "Line" : 208,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "# GvdB: Mac OS X distribution places libraries directly in lib directory.\n",
        "Line" : 214,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Jiri: No reason not to check the default paths. From recent versions,\n\n#       tbbvars has started exporting the LIBRARY_PATH and LD_LIBRARY_PATH\n\n#       variables, which now point to the directories of the lib files.\n\n#       It all makes more sense to use the ${_TBB_LIBRARY_DIR} as a HINTS\n\n#       argument instead of the implicit PATHS as it isn't hard-coded\n\n#       but computed by system introspection. Searching the LIBRARY_PATH\n\n#       and LD_LIBRARY_PATH environment variables is now even more important\n\n#       that tbbvars doesn't export TBB_ARCH_PLATFORM and it facilitates\n\n#       the use of TBB built from sources.\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "#Extract path from TBB_LIBRARY name\n",
        "Line" : 231,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#TBB_CORRECT_LIB_DIR(TBB_LIBRARY)\n\n#TBB_CORRECT_LIB_DIR(TBB_MALLOC_LIBRARY)\n",
        "Line" : 234,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "#-- Look for debug libraries\n\n# Jiri: Changed the same way as for the release libraries.\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# Jiri: Self-built TBB stores the debug libraries in a separate directory.\n\n#       Extract path from TBB_LIBRARY_DEBUG name\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#TBB_CORRECT_LIB_DIR(TBB_LIBRARY_DEBUG)\n\n#TBB_CORRECT_LIB_DIR(TBB_MALLOC_LIBRARY_DEBUG)\n",
        "Line" : 249,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Jiri: Self-built TBB stores the debug libraries in a separate directory.\n",
        "Line" : 261,
        "CharPositionInLine" : 8
      },
      "37" : {
        "Text" : "# do only throw fatal, if this pkg is REQUIRED\n",
        "Line" : 271,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 38
    },
    "cmake/FindVideoCore.cmake" : {
      "ObjectId" : "a66e3fc40b196e5a90bbf313e9f5a89a2ac2eb8f",
      "LastModified" : "2018-09-30T11:25:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindVideoCore\n\n# --------------\n\n#\n\n# Find the Raspberry Pi VideoCore APIs\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following variables:\n\n#\n\n# ::\n\n#\n\n# VIDEOCORE_INCLUDE_DIR - include directories of VideoCore\n\n# VIDEOCORE_LIBRARIES - libraries to link against VideoCore\n\n# VIDEOCORE_BRCM_GLES2_LIBRARY - Broadcom GLESv2 library\n\n# VIDEOCORE_BRCM_EGL_LIBRARY - Broadcom EGL library\n\n# VIDEOCORE_OPENMAXIL_LIBRARY - OpenMAX IL library\n\n# VIDEOCORE_BCM_HOST_LIBRARY - Broadcom hardware interface library\n\n# VIDEOCORE_VCOS_LIBRARY - vcos library\n\n# VIDEOCORE_VCHIQ_ARM_LIBRARY vchiqarm library\n\n# VIDEOCORE_FOUND - true if VideoCore has been found and can be used\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/FindVisionaray.cmake" : {
      "ObjectId" : "0fd67a53915d3b03fffdf72728c614d098406c8d",
      "LastModified" : "2018-09-30T11:25:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindVisionaray\n\n# --------------\n\n#\n\n# Find the Visionaray ray tracing library\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following variables:\n\n#\n\n# ::\n\n#\n\n# VISIONARAY_INCLUDE_DIR - include directories of Visionaray\n\n# VISIONARAY_LIBRARIES - libraries to link against Visionaray\n\n# VISIONARAY_FOUND - true if Visionaray has been found and can be used\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# TODO: sure?\n",
        "Line" : 27,
        "CharPositionInLine" : 20
      },
      "CommentCount" : 2
    },
    "cmake/FindXCB.cmake" : {
      "ObjectId" : "c8f229390225fcd222791bd01876757b174bc8a2",
      "LastModified" : "2018-09-30T11:25:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#.rst:\n\n# FindXCB\n\n# --------------\n\n#\n\n# Find the X protocol C-language Binding (XCB) library\n\n#\n\n# Result Variables\n\n# ^^^^^^^^^^^^^^^^\n\n#\n\n# This module defines the following variables:\n\n#\n\n# ::\n\n#\n\n# XCB_INCLUDE_DIR - include directories of XCB\n\n# XCB_LIBRARIES - libraries to link against XCB\n\n# XCB_FOUND - true if XCB has been found and can be used\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/VisionarayAddTarget.cmake" : {
      "ObjectId" : "ca38149848c3a5db2ebec79a14073e435bb4a815",
      "LastModified" : "2019-04-05T20:29:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is distributed under the MIT license.\n\n# See the LICENSE file for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/modules/VisionarayCompileFailureTest.cmake" : {
      "ObjectId" : "dff257dd4aad945ddaa2a9910d7cd6ad04addb27",
      "LastModified" : "2018-09-30T11:25:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is distributed under the MIT license.\n\n# See the LICENSE file for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#--------------------------------------------------------------------------------------------------\n\n# These macros define CMake tests (for ctest) which can test whether a certain\n\n# code does *not* compile.\n\n#\n\n# Usage:\n\n# visionaray_test_compile_failure(SOURCE_FILE TESTNAME [COMPILE_DEFINITIONS...])\n\n#\n\n# Where COMPILE_DEFINITIONS can be used to pack multiple tests into one source\n\n# file.\n\n#\n\n# visionaray_test_compile_success can be used to test a reference code.\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/VisionarayHandleOptions.cmake" : {
      "ObjectId" : "db7b9782dd5889c1f88946306f89bddb46f0df09",
      "LastModified" : "2018-09-30T11:25:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is distributed under the MIT license.\n\n# See the LICENSE file for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n# Module to handle VSNRAY_* options\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# GNU, Clang, etc.\n",
        "Line" : 13,
        "CharPositionInLine" : 7
      },
      "3" : {
        "Text" : "#------------------------------------------------------\n\n# Enable warnings\n\n#\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#------------------------------------------------------\n\n# Selectively disable warnings\n\n#\n",
        "Line" : 34,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# Disable warnings like:\n\n# warning: ignoring attributes on template argument __m128i\n",
        "Line" : 40,
        "CharPositionInLine" : 12
      },
      "CommentCount" : 6
    },
    "cmake/modules/VisionarayUseFramework.cmake" : {
      "ObjectId" : "f12e3a8f0fbe40bfa0d9972ab4125be5a5b6524e",
      "LastModified" : "2018-09-30T11:25:23Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is distributed under the MIT license.\n\n# See the LICENSE file for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n# visionaray_use_framework(name)\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/modules/VisionarayUsePackage.cmake" : {
      "ObjectId" : "d066dca1f3b21a96b0451303e0ac903781caeb75",
      "LastModified" : "2019-01-24T10:24:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is distributed under the MIT license.\n\n# See the LICENSE file for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n# visionaray_use_package(name)\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# search for cmake variables in the following order:\n\n#  name_INCLUDE_DIR, NAME_INCLUDE_DIR, name_INCLUDE_DIRS, NAME_INCLUDE_DIRS, NAME_INCLUDE_PATH\n",
        "Line" : 18,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "#\n\n# search for cmake variables in the following order:\n\n#  name_LIBRARIES, NAME_LIBRARIES, name_LIBRARY, NAME_LIBRARY\n\n#\n",
        "Line" : 39,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "#\n\n# some special treatment for CMake Threads meta package..\n\n#\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    },
    "src/CMakeLists.txt" : {
      "ObjectId" : "294c55c8fd659d78850011f9ec30255f135faa03",
      "LastModified" : "2019-01-28T15:58:27Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is distributed under the MIT license.\n\n# See the LICENSE file for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Work around an incompatibility between\n\n# boost::std_category and std::error_category\n",
        "Line" : 9,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 2
    },
    "src/common/CMakeLists.txt" : {
      "ObjectId" : "cb834d55772ae3a260ae3224d201441f3168049c",
      "LastModified" : "2019-03-31T17:46:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is distributed under the MIT license.\n\n# See the LICENSE file for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#--------------------------------------------------------------------------------------------------\n\n# External libraries\n\n#\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CUDA\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Cocoa\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Ptex\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Qt5\n",
        "Line" : 56,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# SDL2\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# TODO\n",
        "Line" : 76,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#--------------------------------------------------------------------------------------------------\n\n#\n\n#\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n# Create config file\n\n#\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n# Visionaray common library\n\n#\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#--------------------------------------------------------------------------------------------------\n\n# Add library target\n\n#\n",
        "Line" : 309,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#--------------------------------------------------------------------------------------------------\n\n# Use Qt5 components - probably similar to visionaray_use_package(...)\n\n#\n",
        "Line" : 326,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "src/conv/CMakeLists.txt" : {
      "ObjectId" : "9be9913a1972d9303209c376317c48a92e7fa4b7",
      "LastModified" : "2019-01-28T21:12:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is distributed under the MIT license.\n\n# See the LICENSE file for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#--------------------------------------------------------------------------------------------------\n\n# External libraries\n\n#\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Ptex\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#--------------------------------------------------------------------------------------------------\n\n#\n\n#\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#--------------------------------------------------------------------------------------------------\n\n# Add conv target\n\n#\n",
        "Line" : 52,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#--------------------------------------------------------------------------------------------------\n\n# Install conv\n\n#\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "src/examples/CMakeLists.txt" : {
      "ObjectId" : "cfd364d09fdaa770bd08b5ceb891a224a911f202",
      "LastModified" : "2019-03-31T17:46:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is distributed under the MIT license.\n\n# See the LICENSE file for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/examples/ao/CMakeLists.txt" : {
      "ObjectId" : "8027f998640c4c3a6b5d1d8e61f460b9561a7079",
      "LastModified" : "2019-01-28T21:12:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is distributed under the MIT license.\n\n# See the LICENSE file for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/examples/cuda_unified_memory/CMakeLists.txt" : {
      "ObjectId" : "e3c326b812c2843118e3b8fdd464294252221f53",
      "LastModified" : "2019-01-28T21:12:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is distributed under the MIT license.\n\n# See the LICENSE file for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/examples/generic_primitive/CMakeLists.txt" : {
      "ObjectId" : "befb37b223befb9e5344ffb276d250b3cbe98b91",
      "LastModified" : "2019-01-28T21:12:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is distributed under the MIT license.\n\n# See the LICENSE file for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/examples/intersector/CMakeLists.txt" : {
      "ObjectId" : "0622d61e020a18dc0d107898f7da1edd1c06f88f",
      "LastModified" : "2019-01-28T21:12:51Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/examples/minimal/CMakeLists.txt" : {
      "ObjectId" : "4cacbaf838e6dad1c0b6901cefa8858eff49a6c4",
      "LastModified" : "2019-01-28T21:12:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is distributed under the MIT license.\n\n# See the LICENSE file for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/examples/multi_hit/CMakeLists.txt" : {
      "ObjectId" : "e035c8e5f8274bbd78f083c7fb9b965d1c12c0b4",
      "LastModified" : "2019-01-28T21:12:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is distributed under the MIT license.\n\n# See the LICENSE file for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CUDA\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/examples/multi_volume/CMakeLists.txt" : {
      "ObjectId" : "7d9e4f64e468718ce0e9e1877dc07760bc6b3644",
      "LastModified" : "2019-01-28T21:12:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is distributed under the MIT license.\n\n# See the LICENSE file for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CUDA\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/examples/raytracinginoneweekend/CMakeLists.txt" : {
      "ObjectId" : "73bb61201c41392d8d119965d52602aa37995099",
      "LastModified" : "2019-04-05T20:29:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "src/examples/smallpt/CMakeLists.txt" : {
      "ObjectId" : "26a6336faa8acef73610b43c2fc34f3e3d052161",
      "LastModified" : "2019-01-28T21:12:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is distributed under the MIT license.\n\n# See the LICENSE file for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CUDA\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "src/examples/texture3d/CMakeLists.txt" : {
      "ObjectId" : "710695ca951fd9755057b550e4191b1231277e81",
      "LastModified" : "2019-01-28T21:12:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is distributed under the MIT license.\n\n# See the LICENSE file for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/examples/volume/CMakeLists.txt" : {
      "ObjectId" : "bf8878f3689790cd50c583d6e0380914524057d5",
      "LastModified" : "2019-01-28T21:12:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is distributed under the MIT license.\n\n# See the LICENSE file for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "src/viewer/CMakeLists.txt" : {
      "ObjectId" : "fc3bab7030842245f8d5c88b6a01d04388b52783",
      "LastModified" : "2019-04-05T20:29:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is distributed under the MIT license.\n\n# See the LICENSE file for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#--------------------------------------------------------------------------------------------------\n\n# External libraries\n\n#\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CUDA\n",
        "Line" : 33,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Ptex\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Qt5\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# SDL2\n",
        "Line" : 62,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#--------------------------------------------------------------------------------------------------\n\n#\n\n#\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#--------------------------------------------------------------------------------------------------\n\n# Add viewer target\n\n#\n",
        "Line" : 110,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "#--------------------------------------------------------------------------------------------------\n\n# Install viewer\n\n#\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "src/visionaray/CMakeLists.txt" : {
      "ObjectId" : "fbdfca300d826ac02dffb1737db9345de4a200c0",
      "LastModified" : "2019-03-31T17:46:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#--------------------------------------------------------------------------------------------------\n\n# External libraries\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Graphics API\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# CUDA\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TBB\n",
        "Line" : 30,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#--------------------------------------------------------------------------------------------------\n\n#\n\n#\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n# Create config file\n\n#\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#---------------------------------------------------------------------------------------------------\n\n# Visionaray library\n\n#\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#----------------------------------------------------------------------------------------------\n\n# Public headers\n\n#\n",
        "Line" : 69,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Config\n",
        "Line" : 73,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# CUDA\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Details - subject to frequent change!\n",
        "Line" : 88,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# OpenGL\n",
        "Line" : 160,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Math\n",
        "Line" : 170,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Texture access\n",
        "Line" : 256,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# General library headers\n",
        "Line" : 280,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "#--------------------------------------------------------------------------------------------------\n\n# Add library target\n\n#\n",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# MSVC + CUDA: link with legacy stdio library\n",
        "Line" : 369,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "#--------------------------------------------------------------------------------------------------\n\n# Install headers and library\n\n#\n",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 18
    },
    "test/CMakeLists.txt" : {
      "ObjectId" : "f1e1c38d2a44af61d2f8f63c21a6ccef3bf95e50",
      "LastModified" : "2019-01-28T21:12:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is distributed under the MIT license.\n\n# See the LICENSE file for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/compile_failure_tests/CMakeLists.txt" : {
      "ObjectId" : "5d8197bd25414af82e699009f618d40b6d766cda",
      "LastModified" : "2019-01-28T21:12:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is distributed under the MIT license.\n\n# See the LICENSE file for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Visionaray include dir\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Also add this so we can include common headers\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Find config headers\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "test/compile_failure_tests/algo/CMakeLists.txt" : {
      "ObjectId" : "a20ff0c0534d9bf6de0dcc2cec08e220a4e8e2a4",
      "LastModified" : "2019-01-28T21:12:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is distributed under the MIT license.\n\n# See the LICENSE file for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/compile_failure_tests/packing/CMakeLists.txt" : {
      "ObjectId" : "d6ed5fda2eb59df7580105324cbe02163c78478f",
      "LastModified" : "2019-01-28T21:12:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is distributed under the MIT license.\n\n# See the LICENSE file for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/compile_failure_tests/simd/CMakeLists.txt" : {
      "ObjectId" : "b3b2917a914a6e8e5053250a8fb25393980cfdc3",
      "LastModified" : "2019-01-28T21:12:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is distributed under the MIT license.\n\n# See the LICENSE file for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "test/unittests/CMakeLists.txt" : {
      "ObjectId" : "51a8a1f409db29b0629ef4af486ba44275fe734a",
      "LastModified" : "2019-01-28T21:12:51Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file is distributed under the MIT license.\n\n# See the LICENSE file for details.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#--------------------------------------------------------------------------------------------------\n\n# Add googletest as an external project and import its libraries\n\n#\n",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Gtest's include dir\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Add gtest libraries\n",
        "Line" : 48,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Set location of gtest libraries\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Make gtest libraries depend on external project\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#--------------------------------------------------------------------------------------------------\n\n# Add unittests target\n\n#\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Visionaray include dir\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Also add this so we can include common headers\n",
        "Line" : 86,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Find config headers\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Unittests executable\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Define executable\n",
        "Line" : 137,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Set gtest include dirs as target properties\n\n# This way cmake does not complain about not (yet) existing include dirs\n\n# at first invocation\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Extend already present include dirs list, to retain standard cmake behavior\n\n# (inheritance, etc.)\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# MSVC has no -isystem equivalent\n",
        "Line" : 152,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Set gtest includes with -isystem\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Allow multi-line comments, some unit tests have verbose documentation with extra '/'s and '\\'s\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    }
  },
  "FileTypes" : {
    "CMAKE" : 36
  },
  "ElapsedTime" : 1419
}