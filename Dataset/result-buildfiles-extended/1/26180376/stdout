{
  "Repository" : "26180376",
  "Revision" : "HEAD",
  "ObjectId" : "1cd61afc96cf65a5ddb52c7f15333f36c7c4ee5e",
  "CommitTime" : "2019-04-17T10:57:22Z",
  "Files" : {
    "Makefile" : {
      "ObjectId" : "2ee68baeff98e8e84aaa77dc1c4e5d7bcd48ecc3",
      "LastModified" : "2019-02-19T08:57:54Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Build settings\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Rules\n",
        "Line" : 101,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Also build the static library for iOS for use in Xcode.\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# View templates\n",
        "Line" : 291,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Embedded Lua code\n",
        "Line" : 299,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Generate version file\n",
        "Line" : 307,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# runnable gl logs (assumes gllog.cpp exists)\n",
        "Line" : 322,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Cleanup\n",
        "Line" : 328,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Docs\n",
        "Line" : 344,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Binary distribution license\n",
        "Line" : 350,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Tests\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Avoid setting options or variables in submakes,\n\n# because setting TARGET messes up the SDL build.\n",
        "Line" : 404,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Banner\n",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Tags\n",
        "Line" : 420,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 14
    },
    "android/build.xml" : {
      "ObjectId" : "e34ed49501ab93318e37aeb4be1d9c30e76e1a86",
      "LastModified" : "2017-04-09T10:56:31Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. ",
        "Line" : 6,
        "CharPositionInLine" : 38
      },
      "1" : {
        "Text" : " The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         ",
        "Line" : 28,
        "CharPositionInLine" : 13
      },
      "2" : {
        "Text" : " The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. ",
        "Line" : 39,
        "CharPositionInLine" : 77
      },
      "3" : {
        "Text" : " quick check on sdk.dir ",
        "Line" : 42,
        "CharPositionInLine" : 36
      },
      "4" : {
        "Text" : " extension targets. Uncomment the ones where you want to do custom work\n     in between standard targets ",
        "Line" : 50,
        "CharPositionInLine" : 37
      },
      "5" : {
        "Text" : "\n    <target name=\"-pre-build\">\n    </target>\n    <target name=\"-pre-compile\">\n    </target>\n\n    /* This is typically used for code obfuscation.\n       Compiled code location: ${out.classes.absolute.dir}\n       If this is not done in place, override ${out.dex.input.absolute.dir} */\n    <target name=\"-post-compile\">\n    </target>\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : " Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    ",
        "Line" : 81,
        "CharPositionInLine" : 8
      },
      "7" : {
        "Text" : " version-tag: 1 ",
        "Line" : 82,
        "CharPositionInLine" : 28
      },
      "CommentCount" : 8
    },
    "doc/Makefile" : {
      "ObjectId" : "3d700bd9ba92ee40b4c6eb01e9d842ef7fdec797",
      "LastModified" : "2017-12-07T22:37:14Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/LuaJIT-2.0.5/Makefile" : {
      "ObjectId" : "ecce9ec5f3fa8c81b19769d837552b2110213b84",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\n\n# LuaJIT top level Makefile for installation. Requires GNU Make.\n\n#\n\n# Please read doc/install.html before changing any variables!\n\n#\n\n# Suitable for POSIX platforms (Linux, *BSD, OSX etc.).\n\n# Note: src/Makefile has many more configurable options.\n\n#\n\n# ##### This Makefile is NOT useful for Windows! #####\n\n# For MSVC, please follow the instructions given in src/msvcbuild.bat.\n\n# For MinGW and Cygwin, cd to src and run make with the Makefile there.\n\n#\n\n# Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n#\n\n# Change the installation path as needed. This automatically adjusts\n\n# the paths in src/luaconf.h, too. Note: PREFIX must be an absolute path!\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "##############################################################################\n",
        "Line" : 29,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "##############################################################################\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "##############################################################################\n",
        "Line" : 146,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "##############################################################################\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "third_party/LuaJIT-2.0.5/src/Makefile" : {
      "ObjectId" : "f7f81a4e6084e2c19fc0d29b0b9f3d76c20e5d0a",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "##############################################################################\n\n# LuaJIT Makefile. Requires GNU Make.\n\n#\n\n# Please read doc/install.html before changing any variables!\n\n#\n\n# Suitable for POSIX platforms (Linux, *BSD, OSX etc.).\n\n# Also works with MinGW and Cygwin on Windows.\n\n# Please check msvcbuild.bat for building with MSVC on Windows.\n\n#\n\n# Copyright (C) 2005-2017 Mike Pall. See Copyright Notice in luajit.h\n\n##############################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "##############################################################################\n\n#############################  COMPILER OPTIONS  #############################\n\n##############################################################################\n\n# These options mainly affect the speed of the JIT compiler itself, not the\n\n# speed of the JIT-compiled code. Turn any of the optional settings on by\n\n# removing the '#' in front of them. Make sure you force a full recompile\n\n# with \"make clean\", followed by \"make\" if you change any options.\n\n#\n",
        "Line" : 19,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#\n\n# LuaJIT builds as a native 32 or 64 bit binary by default.\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#\n\n# Use this if you want to force a 32 bit build on a 64 bit multilib OS.\n\n#CC= $(DEFAULT_CC) -m32\n\n#\n\n# Since the assembler part does NOT maintain a frame pointer, it's pointless\n\n# to slow down the C part by not omitting it. Debugging, tracebacks and\n\n# unwinding are not affected -- the assembler part has frame unwind\n\n# information and GCC emits it where needed (x64) or with -g (see CCDEBUG).\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Use this if you want to generate a smaller binary (but it's slower):\n\n#CCOPT= -Os -fomit-frame-pointer\n\n# Note: it's no longer recommended to use -O3 with GCC 4.x.\n\n# The I-Cache bloat usually outweighs the benefits from aggressive inlining.\n\n#\n\n# Target-specific compiler options:\n\n#\n\n# x86 only: it's recommended to compile at least for i686. Better yet,\n\n# compile for an architecture that has SSE2, too (-msse -msse2).\n\n#\n\n# x86/x64 only: For GCC 4.2 or higher and if you don't intend to distribute\n\n# the binaries to a different machine you could also use: -march=native\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Uncomment the next line to generate debug information:\n\n#CCDEBUG= -g\n\n#\n",
        "Line" : 61,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Uncomment the next line to enable more warnings:\n\n#CCWARN+= -Wextra -Wdeclaration-after-statement -Wredundant-decls -Wshadow -Wpointer-arith\n\n#\n\n##############################################################################\n",
        "Line" : 65,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\n\n################################  BUILD MODE  ################################\n\n##############################################################################\n\n# The default build mode is mixed mode on POSIX. On Windows this is the same\n\n# as dynamic mode.\n\n#\n\n# Mixed mode creates a static + dynamic library and a statically linked luajit.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "#\n\n# Static mode creates a static library and a statically linked luajit.\n\n#BUILDMODE= static\n\n#\n\n# Dynamic mode creates a dynamic library and a dynamically linked luajit.\n\n# Note: this executable will only run when the library is installed!\n\n#BUILDMODE= dynamic\n\n#\n\n##############################################################################\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "##############################################################################\n\n#################################  FEATURES  #################################\n\n##############################################################################\n\n# Enable/disable these features as needed, but make sure you force a full\n\n# recompile with \"make clean\", followed by \"make\".\n",
        "Line" : 88,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\n\n# Permanently disable the FFI extension to reduce the size of the LuaJIT\n\n# executable. But please consider that the FFI library is compiled-in,\n\n# but NOT loaded by default. It only allocates any memory, if you actually\n\n# make use of it.\n\n#XCFLAGS+= -DLUAJIT_DISABLE_FFI\n\n#\n\n# Features from Lua 5.2 that are unlikely to break existing code are\n\n# enabled by default. Some other features that *might* break some existing\n\n# code (e.g. __pairs or os.execute() return values) can be enabled here.\n\n# Note: this does not provide full compatibility with Lua 5.2 at this time.\n\n#XCFLAGS+= -DLUAJIT_ENABLE_LUA52COMPAT\n\n#\n\n# Disable the JIT compiler, i.e. turn LuaJIT into a pure interpreter.\n\n#XCFLAGS+= -DLUAJIT_DISABLE_JIT\n\n#\n\n# Some architectures (e.g. PPC) can use either single-number (1) or\n\n# dual-number (2) mode. Uncomment one of these lines to override the\n\n# default mode. Please see LJ_ARCH_NUMMODE in lj_arch.h for details.\n\n#XCFLAGS+= -DLUAJIT_NUMMODE=1\n\n#XCFLAGS+= -DLUAJIT_NUMMODE=2\n\n#\n\n##############################################################################\n",
        "Line" : 94,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\n\n############################  DEBUGGING SUPPORT  #############################\n\n##############################################################################\n\n# Enable these options as needed, but make sure you force a full recompile\n\n# with \"make clean\", followed by \"make\".\n\n# Note that most of these are NOT suitable for benchmarking or release mode!\n\n#\n\n# Use the system provided memory allocator (realloc) instead of the\n\n# bundled memory allocator. This is slower, but sometimes helpful for\n\n# debugging. This option cannot be enabled on x64, since realloc usually\n\n# doesn't return addresses in the right address range.\n\n# OTOH this option is mandatory for Valgrind's memcheck tool on x64 and\n\n# the only way to get useful results from it for all other architectures.\n\n#XCFLAGS+= -DLUAJIT_USE_SYSMALLOC\n\n#\n\n# This define is required to run LuaJIT under Valgrind. The Valgrind\n\n# header files must be installed. You should enable debug information, too.\n\n# Use --suppressions=lj.supp to avoid some false positives.\n\n#XCFLAGS+= -DLUAJIT_USE_VALGRIND\n\n#\n\n# This is the client for the GDB JIT API. GDB 7.0 or higher is required\n\n# to make use of it. See lj_gdbjit.c for details. Enabling this causes\n\n# a non-negligible overhead, even when not running under GDB.\n\n#XCFLAGS+= -DLUAJIT_USE_GDBJIT\n\n#\n\n# Turn on assertions for the Lua/C API to debug problems with lua_* calls.\n\n# This is rather slow -- use only while developing C libraries/embeddings.\n\n#XCFLAGS+= -DLUA_USE_APICHECK\n\n#\n\n# Turn on assertions for the whole LuaJIT VM. This significantly slows down\n\n# everything. Use only if you suspect a problem with LuaJIT itself.\n\n#XCFLAGS+= -DLUA_USE_ASSERT\n\n#\n\n##############################################################################\n\n# You probably don't need to change anything below this line!\n\n##############################################################################\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "##############################################################################\n\n# Host system detection.\n\n##############################################################################\n",
        "Line" : 155,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "##############################################################################\n\n# Flags and options for host and target.\n\n##############################################################################\n",
        "Line" : 174,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# You can override the following variables at the make command line:\n\n#   CC       HOST_CC       STATIC_CC       DYNAMIC_CC\n\n#   CFLAGS   HOST_CFLAGS   TARGET_CFLAGS\n\n#   LDFLAGS  HOST_LDFLAGS  TARGET_LDFLAGS  TARGET_SHLDFLAGS\n\n#   LIBS     HOST_LIBS     TARGET_LIBS\n\n#   CROSS    HOST_SYS      TARGET_SYS      TARGET_FLAGS\n\n#\n\n# Cross-compilation examples:\n\n#   make HOST_CC=\"gcc -m32\" CROSS=i586-mingw32msvc- TARGET_SYS=Windows\n\n#   make HOST_CC=\"gcc -m32\" CROSS=powerpc-linux-gnu-\n",
        "Line" : 178,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# If left blank, minilua is built and used. You can supply an installed\n\n# copy of (plain) Lua 5.1 or 5.2, plus Lua BitOp. E.g. with: HOST_LUA=lua\n",
        "Line" : 194,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "##############################################################################\n\n# Target system detection.\n\n##############################################################################\n",
        "Line" : 286,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "##############################################################################\n\n# Files and pathnames.\n\n##############################################################################\n",
        "Line" : 357,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "##############################################################################\n\n# Build mode handling.\n\n##############################################################################\n",
        "Line" : 491,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Mixed mode defaults.\n",
        "Line" : 495,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Mixed mode is not supported on Windows. And static mode doesn't work well.\n\n# C modules cannot be loaded, because they bind to lua51.dll.\n",
        "Line" : 510,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "#Q=\n\n#E= @:\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "##############################################################################\n\n# Make targets.\n\n##############################################################################\n",
        "Line" : 570,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24,
      "Errorlog" : "line 534:19 token recognition error at: '\\m'\nline 535:19 token recognition error at: '\\b'\nline 588:10 token recognition error at: '\"s| [^ ]*/dasm_\\S'\nline 589:29 token recognition error at: '\\1'\nline 590:24 token recognition error at: '\\S'\nline 591:22 token recognition error at: '\\S'\nline 592:21 token recognition error at: '\\S'\nline 687:42 token recognition error at: '\"\\n\\n##############################################################################\\n\u0000'\n"
    },
    "third_party/SDL2-2.0.9/CMakeLists.txt" : {
      "ObjectId" : "0128c7ac7d3e6aaa5cd614f2305f43ab95ee77d2",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# !!! FIXME: this should probably do \"MACOSX_RPATH ON\" as a target property\n\n# !!! FIXME:  for the SDL2 shared library (so you get an\n\n# !!! FIXME:  install_name (\"soname\") of \"@rpath/libSDL-whatever.dylib\"\n\n# !!! FIXME:  instead of \"/usr/local/lib/libSDL-whatever.dylib\"), but I'm\n\n# !!! FIXME:  punting for now and leaving the existing behavior. Until this\n\n# !!! FIXME:  properly resolved, this line silences a warning in CMake 3.0+.\n\n# !!! FIXME:  remove it and this comment entirely once the problem is\n\n# !!! FIXME:  properly resolved.\n\n#cmake_policy(SET CMP0042 OLD)\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# General settings\n\n# Edit include/SDL_version.h and change the version, then:\n\n#   SDL_MICRO_VERSION += 1;\n\n#   SDL_INTERFACE_AGE += 1;\n\n#   SDL_BINARY_AGE += 1;\n\n# if any functions have been added, set SDL_INTERFACE_AGE to 0.\n\n# if backwards compatibility has been broken,\n\n# set SDL_BINARY_AGE and SDL_INTERFACE_AGE to 0.\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# the following should match the versions in Xcode project file:\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Set defaults preventing destination file conflicts\n",
        "Line" : 53,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Calculate a libtool-like version number\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# General settings & flags\n",
        "Line" : 69,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Check for 64 or 32 bit\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Get the platform\n",
        "Line" : 85,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# TODO: iOS?\n",
        "Line" : 122,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# Don't mistake osx for unix\n",
        "Line" : 129,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# JavaScript does not yet have threading support, so disable pthreads when building for Emscripten.\n",
        "Line" : 142,
        "CharPositionInLine" : 40
      },
      "11" : {
        "Text" : "# Default option knobs\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Compiler info\n",
        "Line" : 158,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# VisualStudio 8.0+\n",
        "Line" : 165,
        "CharPositionInLine" : 34
      },
      "14" : {
        "Text" : "#set(CMAKE_C_FLAGS \"/ZI /WX- /\n",
        "Line" : 167,
        "CharPositionInLine" : 2
      },
      "15" : {
        "Text" : "# Default flags, if not set otherwise\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Hackish, but does the trick on Win32\n",
        "Line" : 187,
        "CharPositionInLine" : 37
      },
      "17" : {
        "Text" : "# Make sure /RTC1 is disabled, otherwise it will use functions from the CRT\n",
        "Line" : 203,
        "CharPositionInLine" : 2
      },
      "18" : {
        "Text" : "# Those are used for pkg-config and friends, so that the SDL2.pc, sdl2-config,\n\n# etc. are created correctly.\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# When building shared lib for Windows with MinGW,\n\n# avoid the DLL having a \"lib\" prefix\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# Emscripten toolchain has a nonempty default value for this, and the checks\n\n# in this file need to change that, so remember the original value, and\n\n# restore back to that afterwards. For check_function_exists() to work in\n\n# Emscripten, this value must be at its default value.\n",
        "Line" : 222,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# We build SDL on cygwin without the UNIX emulation layer\n",
        "Line" : 229,
        "CharPositionInLine" : 2
      },
      "22" : {
        "Text" : "# General includes\n",
        "Line" : 243,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# All these ENABLED_BY_DEFAULT vars will default to ON if not specified, so\n\n#  you only need to have a platform override them if they are disabling.\n",
        "Line" : 251,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Set up default values for the currently supported set of subsystems:\n\n# Emscripten/Javascript does not have assembly support, a dynamic library\n\n# loading architecture, low-level CPU inspection or multithreading.\n",
        "Line" : 255,
        "CharPositionInLine" : 2
      },
      "25" : {
        "Text" : "#set_option(DEPENDENCY_TRACKING \"Use gcc -MMD -MT dependency tracking\" ON)\n",
        "Line" : 283,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# TODO: We should (should we?) respect cmake's ${BUILD_SHARED_LIBS} flag here\n\n# The options below are for compatibility to configure's default behaviour.\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# General source files\n",
        "Line" : 355,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# Do nada - use optimization settings to determine the assertion level\n",
        "Line" : 375,
        "CharPositionInLine" : 2
      },
      "29" : {
        "Text" : "# Compiler option evaluation\n",
        "Line" : 389,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Check for -Wall first, so later things can override pieces of it.\n",
        "Line" : 391,
        "CharPositionInLine" : 2
      },
      "31" : {
        "Text" : "# TODO: Those all seem to be quite GCC specific - needs to be\n\n# reworked for better compiler support\n",
        "Line" : 472,
        "CharPositionInLine" : 4
      },
      "32" : {
        "Text" : "# if only HAVE_ALTIVEC_H_HDR is set\n",
        "Line" : 613,
        "CharPositionInLine" : 31
      },
      "33" : {
        "Text" : "# TODO: SDL_cpuinfo.h needs to support the user's configuration wish\n\n# for MSVC - right now it is always activated\n",
        "Line" : 622,
        "CharPositionInLine" : 4
      },
      "34" : {
        "Text" : "# TODO:\n\n#else()\n\n#  if(USE_GCC OR USE_CLANG)\n\n#    list(APPEND EXTRA_CFLAGS \"-mno-sse\" \"-mno-sse2\" \"-mno-sse3\" \"-mno-mmx\")\n\n#  endif()\n",
        "Line" : 633,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# TODO: Can't deactivate on FreeBSD? w/o LIBC, SDL_stdinc.h can't define\n\n# anything.\n",
        "Line" : 640,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# needed for M_PI\n",
        "Line" : 667,
        "CharPositionInLine" : 41
      },
      "37" : {
        "Text" : "# TODO: refine the mprotect check\n",
        "Line" : 683,
        "CharPositionInLine" : 4
      },
      "38" : {
        "Text" : "# Enable/disable various subsystems of the SDL library\n",
        "Line" : 739,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Haptic requires some private functions from the joystick subsystem.\n",
        "Line" : 752,
        "CharPositionInLine" : 4
      },
      "40" : {
        "Text" : "# TODO: in configure.in, the test for LOADSO and SDL_DLOPEN is a bit weird:\n\n# if LOADSO is not wanted, SDL_LOADSO_DISABLED is set\n\n# If however on Unix or APPLE dlopen() is detected via CheckDLOPEN(),\n\n# SDL_LOADSO_DISABLED will not be set, regardless of the LOADSO settings\n",
        "Line" : 766,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# General SDL subsystem options, valid for all platforms\n",
        "Line" : 771,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# CheckDummyAudio/CheckDiskAudio - valid for all platforms\n",
        "Line" : 773,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# Relevant for Unix/Darwin only\n",
        "Line" : 789,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "# SDL_spinlock.c Needs to be compiled in ARM mode.\n\n# There seems to be no better way currently to set the ARM mode.\n\n# see: https://issuetracker.google.com/issues/62264618\n\n# Another option would be to set ARM mode to all compiled files\n",
        "Line" : 809,
        "CharPositionInLine" : 2
      },
      "45" : {
        "Text" : "# Core stuff\n",
        "Line" : 875,
        "CharPositionInLine" : 4
      },
      "46" : {
        "Text" : "#enable gles\n",
        "Line" : 882,
        "CharPositionInLine" : 4
      },
      "47" : {
        "Text" : "# Platform-specific options and settings\n",
        "Line" : 913,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "# Hide noisy warnings that intend to aid mostly during initial stages of porting a new\n\n# project. Uncomment at will for verbose cross-compiling -I/../ path info.\n",
        "Line" : 915,
        "CharPositionInLine" : 2
      },
      "49" : {
        "Text" : "#enable gles\n",
        "Line" : 958,
        "CharPositionInLine" : 4
      },
      "50" : {
        "Text" : "# Need to check for Raspberry PI first and add platform specific compiler flags, otherwise the test for GLES fails!\n",
        "Line" : 997,
        "CharPositionInLine" : 4
      },
      "51" : {
        "Text" : "# We've already found the header, so REQUIRE the lib to be present\n",
        "Line" : 1068,
        "CharPositionInLine" : 8
      },
      "52" : {
        "Text" : "# seems to be BSD specific - limit the test to BSD only?\n",
        "Line" : 1089,
        "CharPositionInLine" : 20
      },
      "53" : {
        "Text" : "# Prevent codegen that would use the VC runtime libraries.\n",
        "Line" : 1170,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# Check for DirectX\n",
        "Line" : 1177,
        "CharPositionInLine" : 2
      },
      "55" : {
        "Text" : "# xinput.h may need windows.h, but doesn't include it itself.\n",
        "Line" : 1190,
        "CharPositionInLine" : 6
      },
      "56" : {
        "Text" : "# TODO: change $ENV{DXSDL_DIR} to get the path from the include checks\n",
        "Line" : 1218,
        "CharPositionInLine" : 6
      },
      "57" : {
        "Text" : "# headers needed elsewhere ...\n",
        "Line" : 1226,
        "CharPositionInLine" : 2
      },
      "58" : {
        "Text" : "# requires SDL_LOADSO on Windows (IME, DX, etc.)\n",
        "Line" : 1251,
        "CharPositionInLine" : 4
      },
      "59" : {
        "Text" : "# Libraries for Win32 native and MinGW\n",
        "Line" : 1294,
        "CharPositionInLine" : 2
      },
      "60" : {
        "Text" : "# TODO: in configure.in the check for timers is set on\n\n# cygwin | mingw32* - does this include mingw32CE?\n",
        "Line" : 1297,
        "CharPositionInLine" : 2
      },
      "61" : {
        "Text" : "# TODO: rework this all for proper MacOS X, iOS and Darwin support\n",
        "Line" : 1379,
        "CharPositionInLine" : 2
      },
      "62" : {
        "Text" : "# We always need these libs on macOS at the moment.\n\n# !!! FIXME: we need Carbon for some very old API calls in\n\n# !!! FIXME:  src/video/cocoa/SDL_cocoakeyboard.c, but we should figure out\n\n# !!! FIXME:  how to dump those.\n",
        "Line" : 1381,
        "CharPositionInLine" : 2
      },
      "63" : {
        "Text" : "# Requires the darwin file implementation\n",
        "Line" : 1390,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "# !!! FIXME: modern CMake doesn't need \"LANGUAGE C\" for Objective-C.\n",
        "Line" : 1394,
        "CharPositionInLine" : 4
      },
      "65" : {
        "Text" : "# !!! FIXME: why is COREVIDEO inside this if() block?\n",
        "Line" : 1397,
        "CharPositionInLine" : 4
      },
      "66" : {
        "Text" : "# !!! FIXME: modern CMake doesn't need \"LANGUAGE C\" for Objective-C.\n",
        "Line" : 1406,
        "CharPositionInLine" : 4
      },
      "67" : {
        "Text" : "# !!! FIXME: modern CMake doesn't need \"LANGUAGE C\" for Objective-C.\n",
        "Line" : 1466,
        "CharPositionInLine" : 4
      },
      "68" : {
        "Text" : "# Actually load the frameworks at the end so we don't duplicate include.\n",
        "Line" : 1472,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# iOS hack needed - http://code.google.com/p/ios-cmake/ ?\n",
        "Line" : 1502,
        "CharPositionInLine" : 2
      },
      "70" : {
        "Text" : "# TODO: Use FIND_PACKAGE(OpenGL) instead\n",
        "Line" : 1547,
        "CharPositionInLine" : 6
      },
      "71" : {
        "Text" : "# Dummies\n\n# configure.in does it differently:\n\n# if not have X\n\n#   if enable_X {  SDL_X_DISABLED = 1 }\n\n#   [add dummy sources]\n\n# so it always adds a dummy, without checking, if it was actually requested.\n\n# This leads to missing internal references on building, since the\n\n# src/X/*.c does not get included.\n",
        "Line" : 1564,
        "CharPositionInLine" : 0
      },
      "72" : {
        "Text" : "# results in unresolved symbols on OSX\n",
        "Line" : 1574,
        "CharPositionInLine" : 33
      },
      "73" : {
        "Text" : "# We always need to have threads and timers around\n",
        "Line" : 1601,
        "CharPositionInLine" : 0
      },
      "74" : {
        "Text" : "# Append the -MMD -MT flags\n\n# if(DEPENDENCY_TRACKING)\n\n#   if(COMPILER_IS_GNUCC)\n\n#     set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -MMD -MT \\$@\")\n\n#   endif()\n\n# endif()\n",
        "Line" : 1617,
        "CharPositionInLine" : 0
      },
      "75" : {
        "Text" : "# Prepare the flags and remove duplicates\n",
        "Line" : 1627,
        "CharPositionInLine" : 0
      },
      "76" : {
        "Text" : "# Compat helpers for the configuration files\n",
        "Line" : 1640,
        "CharPositionInLine" : 0
      },
      "77" : {
        "Text" : "# TODO: we need a Windows script, too\n",
        "Line" : 1642,
        "CharPositionInLine" : 2
      },
      "78" : {
        "Text" : "# Clean up the different lists\n",
        "Line" : 1665,
        "CharPositionInLine" : 2
      },
      "79" : {
        "Text" : "# MESSAGE(STATUS \"SDL_LIBS: ${SDL_LIBS}\")\n\n# MESSAGE(STATUS \"SDL_STATIC_LIBS: ${SDL_STATIC_LIBS}\")\n",
        "Line" : 1674,
        "CharPositionInLine" : 2
      },
      "80" : {
        "Text" : "##### Info output #####\n",
        "Line" : 1687,
        "CharPositionInLine" : 0
      },
      "81" : {
        "Text" : "# Longest option is VIDEO_X11_XSCREENSAVER = 22 characters\n\n# Get the padding\n",
        "Line" : 1704,
        "CharPositionInLine" : 2
      },
      "82" : {
        "Text" : "# Ensure that the extra cflags are used at compile time\n",
        "Line" : 1730,
        "CharPositionInLine" : 0
      },
      "83" : {
        "Text" : "# Always build SDLmain\n",
        "Line" : 1733,
        "CharPositionInLine" : 0
      },
      "84" : {
        "Text" : "# Don't try to link with the default set of libraries.\n",
        "Line" : 1759,
        "CharPositionInLine" : 4
      },
      "85" : {
        "Text" : "# Note: Apparently, OUTPUT_NAME must really be unique; even when\n\n# CMAKE_IMPORT_LIBRARY_SUFFIX or the like are given. Otherwise\n\n# the static build may race with the import lib and one will get\n\n# clobbered, when the suffix is realized via subsequent rename.\n",
        "Line" : 1777,
        "CharPositionInLine" : 4
      },
      "86" : {
        "Text" : "# TODO: Win32 platforms keep the same suffix .lib for import and static\n\n# libraries - do we need to consider this?\n",
        "Line" : 1788,
        "CharPositionInLine" : 2
      },
      "87" : {
        "Text" : "##### Tests #####\n",
        "Line" : 1798,
        "CharPositionInLine" : 0
      },
      "88" : {
        "Text" : "##### Installation targets #####\n",
        "Line" : 1807,
        "CharPositionInLine" : 0
      },
      "89" : {
        "Text" : "##### Export files #####\n",
        "Line" : 1813,
        "CharPositionInLine" : 0
      },
      "90" : {
        "Text" : "# \".so\", \".dylib\", etc.\n",
        "Line" : 1859,
        "CharPositionInLine" : 46
      },
      "91" : {
        "Text" : "# FreeBSD uses ${PREFIX}/libdata/pkgconfig\n",
        "Line" : 1870,
        "CharPositionInLine" : 4
      },
      "92" : {
        "Text" : "# TODO: what about the .spec file? Is it only needed for RPM creation?\n",
        "Line" : 1877,
        "CharPositionInLine" : 2
      },
      "93" : {
        "Text" : "##### Uninstall target #####\n",
        "Line" : 1881,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 94
    },
    "third_party/SDL2-2.0.9/SDL2Config.cmake" : {
      "ObjectId" : "4a5f646020ef4c415e082c799932104c37ddaa3a",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/SDL2-2.0.9/android-project/app/proguard-rules.pro" : {
      "ObjectId" : "eaf0e916cdf0b2a92e4ad3c261f620b2f0f50dbb",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "QMAKE",
      "0" : {
        "Text" : "# Add project specific ProGuard rules here.\n\n# By default, the flags in this file are appended to flags specified\n\n# in [sdk]/tools/proguard/proguard-android.txt\n\n# You can edit the include path and order by changing the proguardFiles\n\n# directive in build.gradle.\n\n#\n\n# For more details, see\n\n#   http://developer.android.com/guide/developing/tools/proguard.html\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Add any project specific keep options here:\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# If your project uses WebView with JS, uncomment the following\n\n# and specify the fully qualified class name to the JavaScript interface\n\n# class:\n\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n\n#   public *;\n\n#}\n",
        "Line" : 12,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "third_party/SDL2-2.0.9/cmake/macros.cmake" : {
      "ObjectId" : "96a7ce8b1406692acaf32a25d9c864da3f94cb45",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Message Output\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# prefix for each element\n",
        "Line" : 55,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Do not use string(REPLACE \";\" \" \") here to avoid messing up list\n\n# entries\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 3
    },
    "third_party/SDL2-2.0.9/cmake/sdlchecks.cmake" : {
      "ObjectId" : "4a2c3ed57856e3a43ab48f5f7cd40db9c4b7043b",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# reduce the library name for shared linking\n",
        "Line" : 7,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# resolves symlinks\n",
        "Line" : 9,
        "CharPositionInLine" : 69
      },
      "2" : {
        "Text" : "# Requires:\n\n# - n/a\n",
        "Line" : 68,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - ALSA_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - PULSEAUDIO_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 131,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - JACK_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 161,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - ESD_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - ARTS_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 221,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# TODO\n",
        "Line" : 243,
        "CharPositionInLine" : 10
      },
      "9" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - NAS_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 256,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# TODO: set include paths properly, so the NAS headers are found\n",
        "Line" : 263,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - SNDIO_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 287,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# TODO: set include paths properly, so the sndio headers are found\n",
        "Line" : 294,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - FUSIONSOUND_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 318,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Requires:\n\n# - LIBSAMPLERATE\n\n# Optional:\n\n# - LIBSAMPLERATE_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 348,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# Requires:\n\n# - n/a\n\n# Optional:\n\n# - X11_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 373,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Check for multitouch\n",
        "Line" : 510,
        "CharPositionInLine" : 8
      },
      "17" : {
        "Text" : "# Requires:\n\n# - EGL\n\n# - PkgCheckModules\n\n# Optional:\n\n# - MIR_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 567,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# Requires:\n\n# - EGL\n\n# - PkgCheckModules\n\n# Optional:\n\n# - WAYLAND_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 628,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# We have to generate some protocol interface code for some unstable Wayland features.\n",
        "Line" : 665,
        "CharPositionInLine" : 6
      },
      "20" : {
        "Text" : "# Requires:\n\n# - n/a\n\n#\n",
        "Line" : 702,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# Apple always has Cocoa.\n",
        "Line" : 707,
        "CharPositionInLine" : 14
      },
      "22" : {
        "Text" : "# Requires:\n\n# - PkgCheckModules\n\n# Optional:\n\n# - DIRECTFB_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 720,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# Requires:\n\n# - n/a\n",
        "Line" : 751,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "# Requires:\n\n# - nada\n",
        "Line" : 781,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "# Requires:\n\n# - nada\n",
        "Line" : 799,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Requires:\n\n# - nada\n\n# Optional:\n\n# - THREADS opt\n\n# Sets:\n\n# PTHREAD_CFLAGS\n\n# PTHREAD_LIBS\n",
        "Line" : 832,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# the android libc provides built-in support for pthreads, so no\n\n# additional linking or compile flags are necessary\n",
        "Line" : 842,
        "CharPositionInLine" : 6
      },
      "28" : {
        "Text" : "# causes Carbon.p complaints?\n\n# set(PTHREAD_CFLAGS \"-D_REENTRANT -D_THREAD_SAFE\")\n",
        "Line" : 852,
        "CharPositionInLine" : 6
      },
      "29" : {
        "Text" : "# Run some tests\n",
        "Line" : 884,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# Can be faked, if necessary\n\n# Can be faked, if necessary\n",
        "Line" : 951,
        "CharPositionInLine" : 65
      },
      "31" : {
        "Text" : "# Requires\n\n# - nada\n\n# Optional:\n\n# Sets:\n\n# USB_LIBS\n\n# USB_CFLAGS\n",
        "Line" : 968,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "# Requires:\n\n# - n/a\n",
        "Line" : 1108,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# Requires:\n\n# - EGL\n\n# - PkgCheckModules\n\n# Optional:\n\n# - KMSDRM_SHARED opt\n\n# - HAVE_DLOPEN opt\n",
        "Line" : 1143,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 34
    },
    "third_party/SDL2-2.0.9/include/SDL_config.h.cmake" : {
      "ObjectId" : "48dd2d41b785186e3eaced3092cefe6157f300e6",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "CMAKESOURCE",
      "0" : {
        "Text" : "/*\n  Simple DirectMedia Layer\n  Copyright (C) 1997-2018 Sam Lantinga <slouken@libsdl.org>\n\n  This software is provided 'as-is', without any express or implied\n  warranty.  In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely, subject to the following restrictions:\n\n  1. The origin of this software must not be misrepresented; you must not\n     claim that you wrote the original software. If you use this software\n     in a product, an acknowledgment in the product documentation would be\n     appreciated but is not required.\n  2. Altered source versions must be plainly marked as such, and must not be\n     misrepresented as being the original software.\n  3. This notice may not be removed or altered from any source distribution.\n*/",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "/**\n *  \\file SDL_config.h.in\n *\n *  This is a set of defines to configure the SDL features\n */",
        "Line" : 25,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "/* General platform specific identifiers */",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "/* C language features */",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "/* C datatypes */\n/* Define SIZEOF_VOIDP for 64/32 architectures */",
        "Line" : 39,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "/* Comment this if you want to build without any C library requirements */",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "/* Useful headers */",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "/* C library functions */",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "/* We may need some replacement for stdarg.h here */",
        "Line" : 193,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "/* SDL internal assertion support */",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "/* Allow disabling of core subsystems */",
        "Line" : 223,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "/* Enable various audio drivers */",
        "Line" : 240,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "/* Enable various input drivers */",
        "Line" : 273,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "/* Enable various sensor drivers */",
        "Line" : 296,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "/* Enable various shared object loading systems */",
        "Line" : 300,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "/* Enable various threading systems */",
        "Line" : 306,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "/* Enable various timer systems */",
        "Line" : 312,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "/* Enable various video drivers */",
        "Line" : 319,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "/* Enable OpenGL support */",
        "Line" : 376,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "/* Enable Vulkan support */",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "/* Enable system power support */",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "/* Enable system filesystem support */",
        "Line" : 400,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "/* Enable assembly routines */",
        "Line" : 409,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "/* Enable dynamic libsamplerate support */",
        "Line" : 413,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "/* Platform specific definitions */",
        "Line" : 416,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "/* Older Visual C++ headers don't have the Win64-compatible typedefs... */",
        "Line" : 451,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 26
    },
    "third_party/SDL2-2.0.9/src/hidapi/Makefile.am" : {
      "ObjectId" : "3382a1f040bcd84e64b5b4d49f3bdd06df9d4604",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "third_party/SDL2-2.0.9/src/hidapi/hidtest/Makefile.am" : {
      "ObjectId" : "d2786445a316ce0eb0e1033eb599ebf6fddd29d4",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Linux\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Other OS's\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "third_party/SDL2-2.0.9/src/hidapi/ios/Makefile.am" : {
      "ObjectId" : "1f8f2cec66a275ecdb5a10322fc63a7c924da979",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "third_party/SDL2-2.0.9/src/hidapi/libusb/Makefile.am" : {
      "ObjectId" : "13c9d355178815e6a3fb899501e30dbd1cd032ef",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "third_party/SDL2-2.0.9/src/hidapi/linux/Makefile.am" : {
      "ObjectId" : "230eeb75a207745621b72a1a12bddf1c182cdade",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "third_party/SDL2-2.0.9/src/hidapi/mac/Makefile.am" : {
      "ObjectId" : "23d96e08fb6c25a41e940a8dd0900353231dcf1c",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "third_party/SDL2-2.0.9/src/hidapi/testgui/Makefile.am" : {
      "ObjectId" : "1c02f3f2c3559ba327db83c3d622221ef0c008ae",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "## Linux\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "## Other OS's\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Rules for copying the binary and its dependencies into the app bundle.\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "third_party/SDL2-2.0.9/src/hidapi/windows/Makefile.am" : {
      "ObjectId" : "97e261ac9ee1edaab169dbf068340240c823a257",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "third_party/SDL2-2.0.9/test/CMakeLists.txt" : {
      "ObjectId" : "3c25c5c7c98790944cc22c408cec58152544b0e6",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Global settings for all of the test targets\n\n# FIXME: is this wrong?\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# FIXME: Parent directory CMakeLists.txt only sets these for mingw/cygwin,\n\n# but we need them for VS as well.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# HACK: Dummy target to cause the resource files to be copied to the build directory.\n\n# Need to make it an executable so we can use the TARGET_FILE_DIR generator expression.\n\n# This is needed so they get copied to the correct Debug/Release subdirectory in Xcode.\n",
        "Line" : 90,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# TODO: Might be easier to make all targets depend on the resources...?\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 4
    },
    "third_party/SDL2-2.0.9/test/nacl/Makefile" : {
      "ObjectId" : "9ca166c12742e3c6ae23d6c7ac84a421244e9c1d",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (c) 2013 The Chromium Authors. All rights reserved.\n\n# Use of this source code is governed by a BSD-style license that can be\n\n# found in the LICENSE file.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# GNU Makefile based on shared rules provided by the Native Client SDK.\n\n# See README.Makefiles for more details.\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# NACL_SDK_ROOT ?= $(abspath $(CURDIR)/../../..)\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ppapi_simple and SDL2 end up being listed twice due to dependency solving issues -- Gabriel\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Build rules generated by macros from common.mk:\n\n# Overriden macro from NACL SDK to be able to customize the library search path -- Gabriel\n\n# Specific Link Macro \n\n#\n\n# $1 = Target Name\n\n# $2 = List of inputs\n\n# $3 = List of libs\n\n# $4 = List of deps\n\n# $5 = List of lib dirs\n\n# $6 = Other Linker Args\n\n#\n\n# For debugging, we translate the pre-finalized .bc file.\n\n#\n",
        "Line" : 22,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "third_party/angle-chrome_m34/Makefile" : {
      "ObjectId" : "256d034c3826c391ae30d9bb2624f6d11ae843f4",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/freetype-2.5.5/CMakeLists.txt" : {
      "ObjectId" : "8b859a57e9839e8cbd3890719ee12fee9913f49c",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMakeLists.txt\n\n#\n\n# Copyright 2013, 2014 by\n\n# David Turner, Robert Wilhelm, and Werner Lemberg.\n\n#\n\n# Written by John Cary <cary@txcorp.com>\n\n#\n\n# This file is part of the FreeType project, and may only be used, modified,\n\n# and distributed under the terms of the FreeType project license,\n\n# LICENSE.TXT.  By continuing to use, modify, or distribute this file you\n\n# indicate that you have read the license and understand and accept it\n\n# fully.\n\n#\n\n#\n\n# Say\n\n#\n\n#   cmake CMakeLists.txt\n\n#\n\n# to create a Makefile that builds a static version of the library.\n\n#\n\n# For a dynamic library, use\n\n#\n\n#   cmake CMakeLists.txt -DBUILD_SHARED_LIBS:BOOL=true\n\n#\n\n# For a framework on OS X, use\n\n#\n\n#   cmake CMakeLists.txt -DBUILD_FRAMEWORK:BOOL=true -G Xcode\n\n#\n\n# instead.\n\n#\n\n# For an iOS static library, use\n\n#\n\n#   cmake CMakeLists.txt -DIOS_PLATFORM=OS -G Xcode\n\n#\n\n# or\n\n#\n\n#   cmake CMakeLists.txt -DIOS_PLATFORM=SIMULATOR -G Xcode\n\n#\n\n# Please refer to the cmake manual for further options, in particular, how\n\n# to modify compilation and linking parameters.\n\n#\n\n# Some notes.\n\n#\n\n# . `cmake' will overwrite FreeType's original (top-level) `Makefile' file.\n\n#\n\n# . You can use `cmake' directly on a freshly cloned FreeType git\n\n#   repository.\n\n#\n\n# . `CMakeLists.txt'  is provided as-is since it is not used by the\n\n#   developer team.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# CMAKE_TOOLCHAIN_FILE must be set before `project' is called, which\n\n# configures the base build environment and references the toolchain file\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# iOS only uses static libraries\n",
        "Line" : 77,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Compiler definitions for building the library\n",
        "Line" : 105,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Specify library include directories\n",
        "Line" : 108,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Create the configuration file\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# For the auto-generated ftconfig.h file\n",
        "Line" : 115,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Installations\n\n# Note the trailing slash in the argument to the `DIRECTORY' directive\n",
        "Line" : 217,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Packaging\n\n# CPack version numbers for release tarball name.\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# add make dist target\n",
        "Line" : 250,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# eof\n",
        "Line" : 253,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 11
    },
    "third_party/freetype-2.5.5/Makefile" : {
      "ObjectId" : "c1fa16cee542044c2b91397de1bd931260d2d0ce",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#\n\n# FreeType 2 build system -- top-level Makefile\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Copyright 1996-2000, 2002, 2006 by\n\n# David Turner, Robert Wilhelm, and Werner Lemberg.\n\n#\n\n# This file is part of the FreeType project, and may only be used, modified,\n\n# and distributed under the terms of the FreeType project license,\n\n# LICENSE.TXT.  By continuing to use, modify, or distribute this file you\n\n# indicate that you have read the license and understand and accept it\n\n# fully.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Project names\n\n#\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# The variable TOP_DIR holds the path to the topmost directory in the project\n\n# engine source hierarchy.  If it is not defined, default it to `.'.\n\n#\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# The variable OBJ_DIR gives the location where object files and the\n\n# FreeType library are built.\n\n#\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# EOF\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 6
    },
    "third_party/freetype-2.5.5/src/tools/ftrandom/Makefile" : {
      "ObjectId" : "2e619299cdfcdb13ec98282f200b013d60a002c3",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# TOP_DIR and OBJ_DIR should be set by the user to the right directories,\n\n# if necessary.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# The setup below is for gcc on a Unix-like platform.\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# EOF\n",
        "Line" : 35,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "third_party/glm-0.9.7.1/CMakeLists.txt" : {
      "ObjectId" : "860a6eed4f25fdb70ec8892f7073c8aa375a5868",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# VC doesn't support /arch:SSE3\t\n",
        "Line" : 104,
        "CharPositionInLine" : 30
      },
      "1" : {
        "Text" : "#add_definitions(-S)\n\n#add_definitions(-s)\n",
        "Line" : 134,
        "CharPositionInLine" : 1
      },
      "2" : {
        "Text" : "#add_definitions(-fprofile-arcs -ftest-coverage) gcov\n\n#ctest_enable_coverage()\n",
        "Line" : 138,
        "CharPositionInLine" : 1
      },
      "3" : {
        "Text" : "# build tree package config\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# install tree package config\n",
        "Line" : 164,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "third_party/glm-0.9.7.1/glm/CMakeLists.txt" : {
      "ObjectId" : "8f2f552e914caab0596bec9327c0e22183e77b89",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#add_library(glm STATIC glm.cpp)\n\n#add_library(glm_shared SHARED glm.cpp)\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "third_party/glm-0.9.7.1/test/CMakeLists.txt" : {
      "ObjectId" : "ef6c2877ef7c1df037f1e97f1c961cb3a82dfcde",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/glm-0.9.7.1/test/bug/CMakeLists.txt" : {
      "ObjectId" : "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/glm-0.9.7.1/test/core/CMakeLists.txt" : {
      "ObjectId" : "377417770b6ed30f7700078bda50172b43a0a73a",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/glm-0.9.7.1/test/external/gli/CMakeLists.txt" : {
      "ObjectId" : "6b91c28801ad559b9f69b60a1122d5d25f1b43b7",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/glm-0.9.7.1/test/gtc/CMakeLists.txt" : {
      "ObjectId" : "18bc2494a7fc630f9ba912ba97ff05fd3f247d98",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/glm-0.9.7.1/test/gtx/CMakeLists.txt" : {
      "ObjectId" : "3d61f1ddcdce0a4e00390e177e6a8afb6ebe2829",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "third_party/glsl-optimizer/CMakeLists.txt" : {
      "ObjectId" : "c058bef4096e14cd346a977e5559dcc22aa1c4ae",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "#file(GLOB glcpp-library_sources_remove src/glsl/glcpp/glcpp.c)\n\n#list(REMOVE_ITEM glcpp-library_sources ${glcpp-library_sources_remove})\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# OSX-specific build requirements\n",
        "Line" : 41,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "#add_executable(glcpp src/glsl/glcpp/glcpp.c)\n\n#target_link_libraries(glcpp glsl_optimizer)\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "third_party/glsl-optimizer/Makefile" : {
      "ObjectId" : "296f2adede8ab4a7aecaab9d50d6223ecaaf455b",
      "LastModified" : "2018-11-23T05:52:22Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/kiss_fft130/Makefile" : {
      "ObjectId" : "96f43d3f3e445e83e091c73dc698fea8000b6c6f",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# The simd and int32_t types may or may not work on your machine \n",
        "Line" : 10,
        "CharPositionInLine" : 1
      },
      "CommentCount" : 1
    },
    "third_party/lua-5.1.5/Makefile" : {
      "ObjectId" : "209a1324418c25c7b0abc766fe6bd338df5b203f",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# makefile for installing Lua\n\n# see INSTALL for installation instructions\n\n# see src/Makefile and src/luaconf.h for further customization\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Your platform. See PLATS for possible values.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to install. The installation starts in the src and doc directories,\n\n# so take care if INSTALL_TOP is not an absolute path.\n",
        "Line" : 10,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#\n\n# You probably want to make INSTALL_LMOD and INSTALL_CMOD consistent with\n\n# LUA_ROOT, LUA_LDIR, and LUA_CDIR in luaconf.h (and also with etc/lua.pc).\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# How to install. If your install program does not support \"-p\", then you\n\n# may have to run ranlib on the installed liblua.a (do \"make ranlib\").\n",
        "Line" : 23,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "#\n\n# If you don't have install you can use cp instead.\n\n# INSTALL= cp -p\n\n# INSTALL_EXEC= $(INSTALL)\n\n# INSTALL_DATA= $(INSTALL)\n",
        "Line" : 28,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Utilities.\n",
        "Line" : 34,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# == END OF USER SETTINGS. NO NEED TO CHANGE ANYTHING BELOW THIS LINE =========\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Convenience platforms targets.\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# What to install.\n",
        "Line" : 43,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Lua version and release.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# make may get confused with test/ and INSTALL in a case-insensitive OS\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# echo config parameters\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# echo private config parameters\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# echo config parameters as Lua code\n\n# uncomment the last sed expression if you want nil instead of empty strings\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "#-e 's/\"\"/nil/'\n",
        "Line" : 122,
        "CharPositionInLine" : 58
      },
      "17" : {
        "Text" : "# list targets that do not create files (but not all makes understand .PHONY)\n",
        "Line" : 125,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# (end of Makefile)\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "third_party/lua-5.1.5/etc/Makefile" : {
      "ObjectId" : "6d00008d98157eb4c3c83db0e74682f756c8104d",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# makefile for Lua etc\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#MYLIBS= -lm -Wl,-E -ldl -lreadline -lhistory -lncurses\n",
        "Line" : 15,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "third_party/lua-5.1.5/src/Makefile" : {
      "ObjectId" : "e0d4c9fa649c74f961ff77d29f980c662b749eeb",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# makefile for building Lua\n\n# see ../INSTALL for installation instructions\n\n# see ../Makefile and luaconf.h for further customization\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================\n",
        "Line" : 5,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Your platform. See PLATS for possible values.\n",
        "Line" : 7,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# == END OF USER SETTINGS. NO NEED TO CHANGE ANYTHING BELOW THIS LINE =========\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# DLL needs all object files\n",
        "Line" : 51,
        "CharPositionInLine" : 29
      },
      "5" : {
        "Text" : "# convenience targets for popular platforms\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# use this on Mac OS X 10.3-\n\n#\t$(MAKE) all MYCFLAGS=-DLUA_USE_MACOSX\n",
        "Line" : 103,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# list targets that do not create files (but not all makes understand .PHONY)\n",
        "Line" : 118,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# DO NOT DELETE\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# (end of Makefile)\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "third_party/lua-5.2.4/Makefile" : {
      "ObjectId" : "b2a62cfdd1be8a127a064d03c2dd2364673af9c2",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for installing Lua\n\n# See doc/readme.html for installation and customization instructions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Your platform. See PLATS for possible values.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to install. The installation starts in the src and doc directories,\n\n# so take care if INSTALL_TOP is not an absolute path. See the local target.\n\n# You may want to make INSTALL_LMOD and INSTALL_CMOD consistent with\n\n# LUA_ROOT, LUA_LDIR, and LUA_CDIR in luaconf.h.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# How to install. If your install program does not support \"-p\", then\n\n# you may have to run ranlib on the installed liblua.a.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# If you don't have \"install\" you can use \"cp\" instead.\n\n# INSTALL= cp -p\n\n# INSTALL_EXEC= $(INSTALL)\n\n# INSTALL_DATA= $(INSTALL)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Other utilities.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# == END OF USER SETTINGS -- NO NEED TO CHANGE ANYTHING BELOW THIS LINE =======\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Convenience platforms targets.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# What to install.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Lua version and release.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Targets start here.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# make may get confused with test/ and install/\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# echo config parameters\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# echo pkg-config data\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# list targets that do not create files (but not all makes understand .PHONY)\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# (end of Makefile)\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "third_party/lua-5.2.4/src/Makefile" : {
      "ObjectId" : "7b4b2b75420b876d0116b8af25c11ac44288ce10",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for building Lua\n\n# See ../doc/readme.html for installation and customization instructions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Your platform. See PLATS for possible values.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# == END OF USER SETTINGS -- NO NEED TO CHANGE ANYTHING BELOW THIS LINE =======\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Targets start here.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Convenience targets for popular platforms\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# list targets that do not create files (but not all makes understand .PHONY)\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# DO NOT DELETE\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    },
    "third_party/lua-5.3.1/Makefile" : {
      "ObjectId" : "5ee56011249728bf4ddd85e58ea7685ecdb4f931",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for installing Lua\n\n# See doc/readme.html for installation and customization instructions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Your platform. See PLATS for possible values.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Where to install. The installation starts in the src and doc directories,\n\n# so take care if INSTALL_TOP is not an absolute path. See the local target.\n\n# You may want to make INSTALL_LMOD and INSTALL_CMOD consistent with\n\n# LUA_ROOT, LUA_LDIR, and LUA_CDIR in luaconf.h.\n",
        "Line" : 9,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# How to install. If your install program does not support \"-p\", then\n\n# you may have to run ranlib on the installed liblua.a.\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "#\n\n# If you don't have \"install\" you can use \"cp\" instead.\n\n# INSTALL= cp -p\n\n# INSTALL_EXEC= $(INSTALL)\n\n# INSTALL_DATA= $(INSTALL)\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Other utilities.\n",
        "Line" : 32,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# == END OF USER SETTINGS -- NO NEED TO CHANGE ANYTHING BELOW THIS LINE =======\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Convenience platforms targets.\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# What to install.\n",
        "Line" : 41,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Lua version and release.\n",
        "Line" : 47,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Targets start here.\n",
        "Line" : 51,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# make may get confused with test/ and install/\n",
        "Line" : 81,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# echo config parameters\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# echo pkg-config data\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# list targets that do not create files (but not all makes understand .PHONY)\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# (end of Makefile)\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 17
    },
    "third_party/lua-5.3.1/src/Makefile" : {
      "ObjectId" : "d71c75c8732257fefa4c3ff279589f05d6f74d2a",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Makefile for building Lua\n\n# See ../doc/readme.html for installation and customization instructions.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Your platform. See PLATS for possible values.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# == END OF USER SETTINGS -- NO NEED TO CHANGE ANYTHING BELOW THIS LINE =======\n",
        "Line" : 27,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Targets start here.\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Convenience targets for popular platforms\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# list targets that do not create files (but not all makes understand .PHONY)\n",
        "Line" : 127,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# DO NOT DELETE\n",
        "Line" : 130,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# (end of Makefile)\n",
        "Line" : 197,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 9
    },
    "third_party/stb/Makefile" : {
      "ObjectId" : "ce941d9443c270b201995457eed0e9e2ed938935",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "third_party/tinymt-1.0.3/Makefile" : {
      "ObjectId" : "a9b0eef13aedd8932abd0337e5972a27e99c4a01",
      "LastModified" : "2018-11-11T23:04:28Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#for GNU make\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#DDEBUG = -O0 -g -ggdb -DDEBUG=1\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "#CC = icc -Wall -O3 -std=c99 -Wmissing-prototypes $(DDEBUG)\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "CMAKE" : 15,
    "CMAKESOURCE" : 1,
    "QMAKE" : 1,
    "MAKEFILE" : 19,
    "AUTOMAKE" : 8,
    "ANT" : 1
  },
  "ElapsedTime" : 2933
}