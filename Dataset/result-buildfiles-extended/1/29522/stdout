{
  "Repository" : "29522",
  "Revision" : "HEAD",
  "ObjectId" : "494a82f0e70855e727329ea8c1c6135dad1f0d28",
  "CommitTime" : "2019-04-14T10:31:43Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "d7a1bbaf2bf334b4e8873540e77e66fde4d5e164",
      "LastModified" : "2019-04-14T07:53:54Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake build script for ZeroMQ\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Find more information: https://cmake.org/Wiki/CMake_RPATH_handling\n",
        "Line" : 31,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# Apply CMP0042: MACOSX_RPATH is enabled by default\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "3" : {
        "Text" : "# Add an install rpath if it is not a system directory\n",
        "Line" : 36,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# Add linker search paths pointing to external dependencies\n",
        "Line" : 42,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# clang 6 has a warning that does not make sense on multi-platform code\n",
        "Line" : 60,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# Will be used to add flags to pkg-config useful when apps want to statically link\n",
        "Line" : 71,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Select curve encryption library, defaults to tweetnacl\n\n# To use libsodium instead, use --with-libsodium(must be installed)\n\n# To disable curve, use --disable-curve\n",
        "Line" : 82,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# TODO cannot we simply do 'if(WIN32) set(ZMQ_HAVE_WINDOWS ON)' or similar?\n",
        "Line" : 264,
        "CharPositionInLine" : 2
      },
      "9" : {
        "Text" : "# from https://stackoverflow.com/a/40217291/2019765\n",
        "Line" : 269,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# Check for Windows 10, b/c we'll need to convert to hex 'A'.\n",
        "Line" : 275,
        "CharPositionInLine" : 12
      },
      "11" : {
        "Text" : "# Remove all remaining '.' characters.\n",
        "Line" : 280,
        "CharPositionInLine" : 12
      },
      "12" : {
        "Text" : "# Prepend each digit with a zero.\n",
        "Line" : 282,
        "CharPositionInLine" : 12
      },
      "13" : {
        "Text" : "# TODO limit _WIN32_WINNT to the actual Windows SDK version, which might be different from the default version installed with Visual Studio\n",
        "Line" : 291,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "###################### BEGIN condition_variable_t selection\n",
        "Line" : 311,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# prefer C++11 STL std::condition_variable implementation, if available\n",
        "Line" : 313,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Win32API CONDITION_VARIABLE is supported from Windows Vista only\n",
        "Line" : 320,
        "CharPositionInLine" : 12
      },
      "17" : {
        "Text" : "# TODO a vxworks implementation also exists, but vxworks is not currently supported with cmake at all\n",
        "Line" : 329,
        "CharPositionInLine" : 4
      },
      "18" : {
        "Text" : "###################### END condition_variable_t selection\n",
        "Line" : 346,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# Cannot use check_library_exists because the symbol is always declared as char(*)(void)\n",
        "Line" : 361,
        "CharPositionInLine" : 2
      },
      "20" : {
        "Text" : "# TODO: This not the symbol we're looking for. What is the symbol?\n",
        "Line" : 372,
        "CharPositionInLine" : 2
      },
      "21" : {
        "Text" : "# C++11/14/17-specific, but maybe possible via conditional defines\n",
        "Line" : 447,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# Function '...' can be declared 'noexcept'\n\n# If you define or delete any default operation in the type '...', define or delete them all\n\n# This kind of function may not throw. Declare it 'noexcept'\n\n# The function is declared 'noexcept' but calls function '...' which may throw exceptions\n\n# Function '...' should be marked with 'override'\n\n# Avoid calling new and delete explicitly, use std::make_unique<T> instead\n",
        "Line" : 448,
        "CharPositionInLine" : 43
      },
      "23" : {
        "Text" : "# Requires GSL\n",
        "Line" : 454,
        "CharPositionInLine" : 4
      },
      "24" : {
        "Text" : "# Symbol '...' is never tested for nullness, it can be marked as not_null\n\n# Prefer to use gsl::at()\n\n# Don't use pointer arithmetic. Use span instead\n\n# Don't use a static_cast for arithmetic conversions. Use brace initialization, gsl::narrow_cast or gsl::narow\n\n# Consider using gsl::finally if final action is intended\n\n# Do not assign the result of an allocation or a function call with an owner<T> return value to a raw pointer, use owner<T> instead\n\n# Expression '...': No array to pointer decay(bounds.3)\n",
        "Line" : 455,
        "CharPositionInLine" : 43
      },
      "25" : {
        "Text" : "# TODO: why is -Wno-long-long defined differently than in configure.ac?\n",
        "Line" : 482,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "#-----------------------------------------------------------------------------\n",
        "Line" : 543,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# Do not build docs on Windows due to issues with symlinks\n",
        "Line" : 582,
        "CharPositionInLine" : 35
      },
      "28" : {
        "Text" : "#set(OPENPGM_ROOT \"\" CACHE PATH \"Location of OpenPGM\")\n",
        "Line" : 586,
        "CharPositionInLine" : 4
      },
      "29" : {
        "Text" : "#  message(FATAL_ERROR \"WITH_OPENPGM not implemented\")\n",
        "Line" : 612,
        "CharPositionInLine" : 4
      },
      "30" : {
        "Text" : "# DSO symbol visibility for openpgm\n",
        "Line" : 633,
        "CharPositionInLine" : 4
      },
      "31" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# force off-tree build\n",
        "Line" : 643,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# default to Release build\n",
        "Line" : 656,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "# CMAKE_BUILD_TYPE is not used for multi-configuration generators like Visual Studio/XCode\n\n# which instead use CMAKE_CONFIGURATION_TYPES\n",
        "Line" : 660,
        "CharPositionInLine" : 2
      },
      "34" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# output directories\n",
        "Line" : 667,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# platform specifics\n",
        "Line" : 679,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# Socket limit is 16K(can be raised arbitrarily)\n",
        "Line" : 683,
        "CharPositionInLine" : 2
      },
      "37" : {
        "Text" : "# Parallel make.\n",
        "Line" : 690,
        "CharPositionInLine" : 2
      },
      "38" : {
        "Text" : "# Compile the static lib with debug information included\n\n# note: we assume here that the default flags contain some /Z flag\n",
        "Line" : 694,
        "CharPositionInLine" : 2
      },
      "39" : {
        "Text" : "# Optimization flags.\n\n# http://msdn.microsoft.com/en-us/magazine/cc301698.aspx\n",
        "Line" : 699,
        "CharPositionInLine" : 2
      },
      "40" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# source files\n",
        "Line" : 710,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# at least for VS, the header files must also be listed\n",
        "Line" : 809,
        "CharPositionInLine" : 2
      },
      "42" : {
        "Text" : "# Generate the right type when using -m32 or -m64\n",
        "Line" : 949,
        "CharPositionInLine" : 2
      },
      "43" : {
        "Text" : "# Also happens on x86_64 systems...what a worthless variable\n",
        "Line" : 961,
        "CharPositionInLine" : 2
      },
      "44" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# optional modules\n",
        "Line" : 988,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# source generators\n",
        "Line" : 1009,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#   Delete any src/platform.hpp left by configure\n",
        "Line" : 1018,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# default for all sources is to use precompiled headers\n",
        "Line" : 1090,
        "CharPositionInLine" : 2
      },
      "48" : {
        "Text" : "# C and C++ can not use the same precompiled header\n",
        "Line" : 1092,
        "CharPositionInLine" : 4
      },
      "49" : {
        "Text" : "# create precompiled header\n",
        "Line" : 1100,
        "CharPositionInLine" : 2
      },
      "50" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# output\n",
        "Line" : 1108,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Suppress linker warnings caused by #ifdef omission\n\n# of file content.\n",
        "Line" : 1124,
        "CharPositionInLine" : 2
      },
      "52" : {
        "Text" : "# avoid building everything twice for shared + static\n\n# only on *nix, as Windows needs different preprocessor defines in static builds\n",
        "Line" : 1163,
        "CharPositionInLine" : 2
      },
      "53" : {
        "Text" : "# NOTE: the SOVERSION and VERSION MUST be the same as the one generated by libtool! It is NOT the same as the version of the package.\n",
        "Line" : 1181,
        "CharPositionInLine" : 4
      },
      "54" : {
        "Text" : "# On Solaris, libsodium depends on libssp\n",
        "Line" : 1237,
        "CharPositionInLine" : 4
      },
      "55" : {
        "Text" : "# On Solaris, libsodium depends on libssp\n",
        "Line" : 1267,
        "CharPositionInLine" : 4
      },
      "56" : {
        "Text" : "# Why?\n",
        "Line" : 1302,
        "CharPositionInLine" : 44
      },
      "57" : {
        "Text" : "# Copy perf-tools binaries into Framework\n",
        "Line" : 1314,
        "CharPositionInLine" : 8
      },
      "58" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# tests\n",
        "Line" : 1342,
        "CharPositionInLine" : 0
      },
      "59" : {
        "Text" : "# Enable testing only works in root scope\n",
        "Line" : 1350,
        "CharPositionInLine" : 19
      },
      "60" : {
        "Text" : "#-----------------------------------------------------------------------------\n\n# installer\n",
        "Line" : 1359,
        "CharPositionInLine" : 0
      },
      "61" : {
        "Text" : "# install(FILES ${public_headers}\n\n#   DESTINATION include\n\n#   COMPONENT SDK)\n",
        "Line" : 1391,
        "CharPositionInLine" : 0
      },
      "62" : {
        "Text" : "#if(NOT ZMQ_BUILD_FRAMEWORK)\n\n#  file(GLOB private_headers \"${CMAKE_CURRENT_SOURCE_DIR}/src/*.hpp\")\n\n#  install(FILES ${sources} ${private_headers} DESTINATION src/zmq\n\n#    COMPONENT SourceCode)\n\n#endif()\n",
        "Line" : 1395,
        "CharPositionInLine" : 0
      },
      "63" : {
        "Text" : "# GNUInstallDirs \"DATADIR\" wrong here; CMake search path wants \"share\".\n",
        "Line" : 1420,
        "CharPositionInLine" : 2
      },
      "64" : {
        "Text" : "# TODO: I think this part was intended to be used when running cpack\n\n# separately from cmake but I don't know how that works.\n\n#\n\n# macro(add_crt_version version)\n\n#   set(rel_dir \"${CMAKE_CURRENT_BINARY_DIR}/build/${arch_name}/${version};ZeroMQ;ALL;/\")\n\n#   set(debug_dir \"${CMAKE_CURRENT_BINARY_DIR}/debug/${arch_name}/${version};ZeroMQ;ALL;/\")\n\n#   if(EXISTS ${rel_dir})\n\n#     list(APPEND CPACK_INSTALL_CMAKE_PROJECTS ${rel_dir})\n\n#   endif()\n",
        "Line" : 1456,
        "CharPositionInLine" : 2
      },
      "65" : {
        "Text" : "#   if(EXISTS ${debug_dir})\n\n#     list(APPEND CPACK_INSTALL_CMAKE_PROJECTS ${rel_dir})\n\n#   endmacro()\n\n# endmacro()\n",
        "Line" : 1466,
        "CharPositionInLine" : 2
      },
      "66" : {
        "Text" : "# add_crt_version(v110)\n\n# add_crt_version(v100)\n\n# add_crt_version(v90)\n",
        "Line" : 1471,
        "CharPositionInLine" : 2
      },
      "67" : {
        "Text" : "# set(CPACK_RESOURCE_FILE_README \"${CMAKE_CURRENT_BINARY_DIR}\\\\\\\\README.txt\")\n\n# set(CPACK_RESOURCE_FILE_WELCOME \"${CMAKE_CURRENT_BINARY_DIR}\\\\\\\\WELCOME.txt\")\n\n# There is a bug in NSI that does not handle full unix paths properly. Make\n\n# sure there is at least one set of four(4) backslashes.\n",
        "Line" : 1482,
        "CharPositionInLine" : 2
      },
      "68" : {
        "Text" : "# set(CPACK_PACKAGE_INSTALL_DIRECTORY \"ZMQ Install Directory\")\n\n# set(CPACK_TEMPORARY_DIRECTORY \"ZMQ Temporary CPack Directory\")\n",
        "Line" : 1495,
        "CharPositionInLine" : 2
      },
      "69" : {
        "Text" : "# Export this for library to help build this as a sub-project\n",
        "Line" : 1532,
        "CharPositionInLine" : 0
      },
      "70" : {
        "Text" : "# Workaround for MSVS10 to avoid the Dialog Hell\n\n# FIXME: This could be removed with future version of CMake.\n",
        "Line" : 1535,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 71
    },
    "Makefile.am" : {
      "ObjectId" : "74684718663144849e6ea1968e4c97fb469e2d62",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n# libraries/binaries\n\n#\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#\n\n# tests\n\n#\n",
        "Line" : 387,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# unit tests - these include individual source files and test the internal functions\n",
        "Line" : 1009,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "#  Run the test cases\n",
        "Line" : 1075,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "#  GNU/Hurd does not support getsockname on IPC, so ZMQ_LAST_ENDPOINT cannot be\n\n#  used with IPC, so the following tests will fail\n",
        "Line" : 1083,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Check if any sources need to be fixed, report the filenames and an error code\n",
        "Line" : 1141,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Generated by Makefile. Do not edit.'; echo; \\\n\t\t  $(top_srcdir)/config/missing --run git log --stat ) > ChangeLog.tmp \\\n\t\t  && mv -f ChangeLog.tmp $(top_distdir)/ChangeLog \\\n\t\t  || ( rm -f ChangeLog.tmp ; \\\n\t\t       echo Failed to generate ChangeLog >&2 ); \\\n\telse \\\n\t\techo A git clone is required to generate a ChangeLog >&2; \\\n\tfi\n",
        "Line" : 1175,
        "CharPositionInLine" : 10
      },
      "CommentCount" : 7,
      "Errorlog" : "line 1143:27 token recognition error at: '\"`printf '\\n\\b'\n"
    },
    "builds/Makefile.am" : {
      "ObjectId" : "e7fe5e09f1e8bc44cee16f8a36a60c5a8d666a95",
      "LastModified" : "2018-03-27T16:36:30Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#  Specify all build files that have to go into source packages.\n\n#  msvc directory does its own stuff.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "builds/cmake/Modules/ClangFormat.cmake" : {
      "ObjectId" : "f36ea069223b6b152a4d20dec3e2b074d468d3a5",
      "LastModified" : "2018-03-27T16:36:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# additional target to perform clang-format run, requires clang-format\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# get all project files\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "builds/cmake/Modules/FindAsciiDoc.cmake" : {
      "ObjectId" : "049ac00766ffbab18c3b5fcef7600ad0d30d42ce",
      "LastModified" : "2018-03-27T16:36:30Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find Asciidoc\n\n# this module looks for asciidoc and a2x\n\n#\n\n# ASCIIDOC_EXECUTABLE - the full path to asciidoc\n\n# ASCIIDOC_FOUND - If false, don't attempt to use asciidoc.\n\n# A2X_EXECUTABLE - the full path to a2x\n\n# A2X_FOUND - If false, don't attempt to use a2x.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "builds/cmake/Modules/FindSodium.cmake" : {
      "ObjectId" : "8bbd7b48e95de407b7df7c8c9075241961ef36eb",
      "LastModified" : "2018-12-15T08:10:31Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "################################################################################\n\n#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #\n\n#  Please refer to the README for information about making permanent changes.  #\n\n################################################################################\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# some libraries install the headers is a subdirectory of the include dir\n\n# returned by pkg-config, so use a wildcard match to improve chances of finding\n\n# headers and libraries.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "################################################################################\n\n#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #\n\n#  Please refer to the README for information about making permanent changes.  #\n\n################################################################################\n",
        "Line" : 45,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 3
    },
    "builds/cmake/Modules/TestZMQVersion.cmake" : {
      "ObjectId" : "49a3f30990d5b09c0af8c5271415ca8da1fd95e1",
      "LastModified" : "2018-03-27T16:36:30Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "builds/cmake/Modules/ZMQSourceRunChecks.cmake" : {
      "ObjectId" : "3e5268e7831f5836fdaa594dae898fb548cc4f8e",
      "LastModified" : "2019-03-02T02:14:46Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# TCP keep-alives Checks.\n",
        "Line" : 70,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "builds/cmake/Modules/ZMQSupportMacros.cmake" : {
      "ObjectId" : "5139015f85ec1f0fff181a27347f416f32bb6cb0",
      "LastModified" : "2018-12-15T08:10:31Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "builds/deprecated-msvc/Makefile.am" : {
      "ObjectId" : "d36010433011b9c7b0ce9d4993fc27a58dc7c569",
      "LastModified" : "2018-12-15T08:10:31Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "builds/openwrt/Makefile" : {
      "ObjectId" : "1884a9b8547cb46db0ca3f404b50875b0d897e52",
      "LastModified" : "2018-12-15T08:10:31Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "# Copyright (C) [2011-2012] [TheClashingRocks.org]\n\n#\n\n# Author: Jiva Nath Bagale <jnbagale@gmail.com>\n\n# author: Victor Perron <victor@iso3103.net>\n\n#\n\n# This is free software, licensed under the GNU General Public License v2.\n\n# See /LICENSE for more information.\n\n#\n\n# \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doc/Makefile.am" : {
      "ObjectId" : "ba63d705abe57363496d0bfdca18eb7226c30417",
      "LastModified" : "2019-03-02T02:14:46Z",
      "FileType" : "AUTOMAKE",
      "0" : {
        "Text" : "#\n\n# documentation\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "7106bdaf1a12f57fa8c0c669f83473eccdde4b86",
      "LastModified" : "2019-03-23T22:40:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake build script for ZeroMQ tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# On Windows: solution file will be called tests.sln\n",
        "Line" : 4,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add location of platform.hpp for Windows builds\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Same name on 64bit systems\n",
        "Line" : 163,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# use testutil-static for both tests and unit tests\n",
        "Line" : 195,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# use testutil for tests and testutil-static for unit tests\n",
        "Line" : 198,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# add include dirs for all targets\n",
        "Line" : 210,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# target_sources not supported before CMake 3.1\n",
        "Line" : 217,
        "CharPositionInLine" : 2
      },
      "8" : {
        "Text" : "# This is the output for Debug dynamic builds on Visual Studio 6.0\n\n# You should provide the correct directory, don't know how to do it automatically\n",
        "Line" : 229,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# per-test directories not generated on OS X / Darwin\n",
        "Line" : 236,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "#override timeout for these tests\n",
        "Line" : 258,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#add additional required flags\n\n#ZMQ_USE_TWEETNACL will already be defined when not using sodium\n",
        "Line" : 272,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "#Check whether all tests in the current folder are present\n",
        "Line" : 280,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 13
    },
    "unittests/CMakeLists.txt" : {
      "ObjectId" : "d688ae3f7a2e26146aaa4f7cef231b13d321c01c",
      "LastModified" : "2019-03-23T22:40:41Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# CMake build script for ZeroMQ unit tests\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#if(ENABLE_DRAFTS)\n\n#  list(APPEND tests\n\n#  )\n\n#endif(ENABLE_DRAFTS)\n",
        "Line" : 13,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# add location of platform.hpp for Windows builds\n",
        "Line" : 18,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# Same name on 64bit systems\n",
        "Line" : 22,
        "CharPositionInLine" : 2
      },
      "4" : {
        "Text" : "# target_sources not supported before CMake 3.1\n",
        "Line" : 30,
        "CharPositionInLine" : 2
      },
      "5" : {
        "Text" : "# per-test directories not generated on OS X / Darwin\n",
        "Line" : 33,
        "CharPositionInLine" : 2
      },
      "6" : {
        "Text" : "# TODO prevent libzmq (non-static) being in the list of link libraries at all\n",
        "Line" : 52,
        "CharPositionInLine" : 2
      },
      "7" : {
        "Text" : "#Check whether all tests in the current folder are present\n\n#TODO duplicated with tests/CMakeLists.txt, define as a function?\n",
        "Line" : 58,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 8
    }
  },
  "FileTypes" : {
    "CMAKE" : 9,
    "MAKEFILE" : 1,
    "AUTOMAKE" : 4
  },
  "ElapsedTime" : 2241
}