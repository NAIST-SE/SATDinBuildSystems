{
  "Repository" : "22048619",
  "Revision" : "HEAD",
  "ObjectId" : "7975cc876a9b7e5bf64d88533607948da97a7d4d",
  "CommitTime" : "2018-04-09T12:40:05Z",
  "Files" : {
    "build.xml" : {
      "ObjectId" : "ba1955d350f39399d5027e1f3dcfb78700709743",
      "LastModified" : "2016-10-24T21:42:30Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " You may freely edit this file. See commented blocks below for ",
        "Line" : 2,
        "CharPositionInLine" : 71
      },
      "1" : {
        "Text" : " some examples of how to customize the build. ",
        "Line" : 3,
        "CharPositionInLine" : 54
      },
      "2" : {
        "Text" : " (If you delete it and reopen the project it will be recreated.) ",
        "Line" : 4,
        "CharPositionInLine" : 73
      },
      "3" : {
        "Text" : " By default, only the Clean and Build commands use this build script. ",
        "Line" : 5,
        "CharPositionInLine" : 78
      },
      "4" : {
        "Text" : " Commands such as Run, Debug, and Test only use this build script if ",
        "Line" : 6,
        "CharPositionInLine" : 77
      },
      "5" : {
        "Text" : " the Compile on Save feature is turned off for the project. ",
        "Line" : 7,
        "CharPositionInLine" : 68
      },
      "6" : {
        "Text" : " You can turn off the Compile on Save (or Deploy on Save) setting ",
        "Line" : 8,
        "CharPositionInLine" : 74
      },
      "7" : {
        "Text" : " in the project's Project Properties dialog box.",
        "Line" : 9,
        "CharPositionInLine" : 56
      },
      "8" : {
        "Text" : "\n\n    There exist several targets which are by default empty and which can be \n    used for execution of your tasks. These targets are usually executed \n    before and after some main targets. They are: \n\n      -pre-init:                 called before initialization of project properties\n      -post-init:                called after initialization of project properties\n      -pre-compile:              called before javac compilation\n      -post-compile:             called after javac compilation\n      -pre-compile-single:       called before javac compilation of single file\n      -post-compile-single:      called after javac compilation of single file\n      -pre-compile-test:         called before javac compilation of JUnit tests\n      -post-compile-test:        called after javac compilation of JUnit tests\n      -pre-compile-test-single:  called before javac compilation of single JUnit test\n      -post-compile-test-single: called after javac compilation of single JUunit test\n      -pre-jar:                  called before JAR building\n      -post-jar:                 called after JAR building\n      -post-clean:               called after cleaning build products\n\n    (Targets beginning with '-' are not intended to be called on their own.)\n\n    Example of inserting an obfuscator after compilation could look like this:\n\n        <target name=\"-post-compile\">\n            <obfuscate>\n                <fileset dir=\"${build.classes.dir}\"/>\n            </obfuscate>\n        </target>\n\n    For list of available properties check the imported \n    nbproject/build-impl.xml file. \n\n\n    Another way to customize the build is by overriding existing main targets.\n    The targets of interest are: \n\n      -init-macrodef-javac:     defines macro for javac compilation\n      -init-macrodef-junit:     defines macro for junit execution\n      -init-macrodef-debug:     defines macro for class debugging\n      -init-macrodef-java:      defines macro for class execution\n      -do-jar:                  JAR building\n      run:                      execution of project \n      -javadoc-build:           Javadoc generation\n      test-report:              JUnit report generation\n\n    An example of overriding the target for project execution could look like this:\n\n        <target name=\"run\" depends=\"Axoloti-impl.jar\">\n            <exec dir=\"bin\" executable=\"launcher.exe\">\n                <arg file=\"${dist.jar}\"/>\n            </exec>\n        </target>\n\n    Notice that the overridden target depends on the jar target and not only on \n    the compile target as the regular run target does. Again, for a list of available \n    properties which you can use, check the target you are overriding in the\n    nbproject/build-impl.xml file. \n    ",
        "Line" : 72,
        "CharPositionInLine" : 8
      },
      "9" : {
        "Text" : " run the ant timestamp task ",
        "Line" : 76,
        "CharPositionInLine" : 38
      },
      "10" : {
        "Text" : " Overrides -do-jar",
        "Line" : 81,
        "CharPositionInLine" : 28
      },
      "11" : {
        "Text" : " With included source files ",
        "Line" : 88,
        "CharPositionInLine" : 40
      },
      "12" : {
        "Text" : " Compiled  class  ",
        "Line" : 99,
        "CharPositionInLine" : 32
      },
      "13" : {
        "Text" : " Include external library ",
        "Line" : 102,
        "CharPositionInLine" : 40
      },
      "14" : {
        "Text" : " include source files ",
        "Line" : 118,
        "CharPositionInLine" : 36
      },
      "15" : {
        "Text" : "Mac ",
        "Line" : 136,
        "CharPositionInLine" : 14
      },
      "16" : {
        "Text" : "Linux ",
        "Line" : 155,
        "CharPositionInLine" : 16
      },
      "17" : {
        "Text" : "Windows ",
        "Line" : 177,
        "CharPositionInLine" : 18
      },
      "18" : {
        "Text" : " Details about application ",
        "Line" : 299,
        "CharPositionInLine" : 37
      },
      "19" : {
        "Text" : " Define what auxilary resources are needed ",
        "Line" : 302,
        "CharPositionInLine" : 53
      },
      "20" : {
        "Text" : " What to include into result jar file?\n\t\t\t Everything in the build tree ",
        "Line" : 306,
        "CharPositionInLine" : 37
      },
      "21" : {
        "Text" : " Customize jar manifest (optional) ",
        "Line" : 309,
        "CharPositionInLine" : 45
      },
      "CommentCount" : 22
    },
    "firmware/Makefile" : {
      "ObjectId" : "54399735b44bd6da07db4e62d9aa7c5943eb5652",
      "LastModified" : "2018-03-18T13:56:32Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#############################################################################\n\n# Build global options\n\n# NOTE: Can be overridden externally.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Build global options\n\n##############################################################################\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\n\n# Architecture or project specific options\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4 (no, softfp, hard).\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "#Axoloti optional modules, here we define defaults if none supplied\n",
        "Line" : 49,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\n\n# Architecture or project specific options\n\n##############################################################################\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\n\n# Project, sources and paths\n\n#\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# theoretically should be this...., but CSRC expansion cannot cope with escape spaces\n\n#SPACE :=\n\n#SPACE +=\n\n#FIRMWARE=$(subst $(SPACE),\\ ,${axoloti_firmware})\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Define linker script file here\n",
        "Line" : 95,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\n\n# setting.\n",
        "Line" : 99,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "#optional modules\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "#$(info including BRAIDS)\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "#$(info including WARPS)\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "#$(info including ELEMENTS)\n",
        "Line" : 230,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "#$(info including CLOUDS)\n",
        "Line" : 245,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "#$(info  including RINGS)\n",
        "Line" : 257,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#$(info including STREAMS)\n",
        "Line" : 263,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "#$(info including base MI)\n",
        "Line" : 275,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\n\n# setting.\n",
        "Line" : 277,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\n\n#       option that results in lower performance and larger code size.\n",
        "Line" : 293,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\n\n#       option that results in lower performance and larger code size.\n",
        "Line" : 298,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\n\n#       option that results in lower performance and larger code size.\n",
        "Line" : 303,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\n\n#       option that results in lower performance and larger code size.\n",
        "Line" : 308,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# List ASM source files here\n",
        "Line" : 313,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\n\n# Project, sources and paths\n\n##############################################################################\n",
        "Line" : 333,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\n\n# Compiler settings\n\n#\n",
        "Line" : 337,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "#TRGT = arm-elf-\n",
        "Line" : 343,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\n\n#       runtime support makes code size explode.\n",
        "Line" : 347,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "#LD   = $(TRGT)g++ \n",
        "Line" : 351,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# ARM-specific options here\n",
        "Line" : 359,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# THUMB-specific options here\n",
        "Line" : 362,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "# Define C warning options here\n",
        "Line" : 365,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "# Define C++ warning options here\n",
        "Line" : 368,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "#\n\n# Compiler settings\n\n##############################################################################\n",
        "Line" : 371,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "##############################################################################\n\n# Start of default section\n\n#\n",
        "Line" : 375,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\n",
        "Line" : 379,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\n",
        "Line" : 382,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all default directories to look for include files here\n",
        "Line" : 385,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "# List the default directory to look for the libraries here\n",
        "Line" : 388,
        "CharPositionInLine" : 0
      },
      "47" : {
        "Text" : "# List all default libraries here\n",
        "Line" : 391,
        "CharPositionInLine" : 0
      },
      "48" : {
        "Text" : "#\n\n# End of default section\n\n##############################################################################\n",
        "Line" : 394,
        "CharPositionInLine" : 0
      },
      "49" : {
        "Text" : "##############################################################################\n\n# Start of user section\n\n#\n",
        "Line" : 398,
        "CharPositionInLine" : 0
      },
      "50" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\n",
        "Line" : 402,
        "CharPositionInLine" : 0
      },
      "51" : {
        "Text" : "# Define ASM defines here\n",
        "Line" : 405,
        "CharPositionInLine" : 0
      },
      "52" : {
        "Text" : "# List all user directories here\n",
        "Line" : 408,
        "CharPositionInLine" : 0
      },
      "53" : {
        "Text" : "# List the user directory to look for the libraries here\n",
        "Line" : 411,
        "CharPositionInLine" : 0
      },
      "54" : {
        "Text" : "# List all user libraries here\n",
        "Line" : 414,
        "CharPositionInLine" : 0
      },
      "55" : {
        "Text" : "#\n\n# End of user defines\n\n##############################################################################\n",
        "Line" : 417,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 56
    },
    "firmware/flasher/Makefile" : {
      "ObjectId" : "6f9bf4984059d95926f6e4a972c169346efe2f4f",
      "LastModified" : "2015-08-01T11:58:45Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#############################################################################\n\n# Build global options\n\n# NOTE: Can be overridden externally.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Build global options\n\n##############################################################################\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\n\n# Architecture or project specific options\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\n\n# Enable this if you really want to use the STM FWLib.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\n\n# Architecture or project specific options\n\n##############################################################################\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\n\n# Project, sources and paths\n\n#\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Define linker script file here\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\n\n# setting.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\n\n# setting.\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\n\n#       option that results in lower performance and larger code size.\n",
        "Line" : 106,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\n\n#       option that results in lower performance and larger code size.\n",
        "Line" : 111,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\n\n#       option that results in lower performance and larger code size.\n",
        "Line" : 116,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\n\n#       option that results in lower performance and larger code size.\n",
        "Line" : 121,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\n",
        "Line" : 126,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\n\n# Project, sources and paths\n\n##############################################################################\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\n\n# Compiler settings\n\n#\n",
        "Line" : 140,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\n\n#       runtime support makes code size explode.\n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++ \n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\n",
        "Line" : 163,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\n",
        "Line" : 166,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\n",
        "Line" : 169,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\n\n# Compiler settings\n\n##############################################################################\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\n\n# Start of default section\n\n#\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\n",
        "Line" : 180,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\n",
        "Line" : 186,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\n",
        "Line" : 189,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\n",
        "Line" : 192,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\n\n# End of default section\n\n##############################################################################\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\n\n# Start of user section\n\n#\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\n",
        "Line" : 203,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\n",
        "Line" : 206,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\n",
        "Line" : 209,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\n",
        "Line" : 212,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\n",
        "Line" : 215,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\n\n# End of user defines\n\n##############################################################################\n",
        "Line" : 220,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    },
    "firmware/mounter/Makefile" : {
      "ObjectId" : "c9c8dac869411a32c8e29cf032e83bcc9d51212d",
      "LastModified" : "2015-11-18T14:32:51Z",
      "FileType" : "MAKEFILE",
      "0" : {
        "Text" : "#############################################################################\n\n# Build global options\n\n# NOTE: Can be overridden externally.\n\n#\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Compiler options here.\n",
        "Line" : 6,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# C specific options here (added to USE_OPT).\n",
        "Line" : 11,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# C++ specific options here (added to USE_OPT).\n",
        "Line" : 16,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Enable this if you want the linker to remove unused code and data\n",
        "Line" : 21,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# If enabled, this option allows to compile the application in THUMB mode.\n",
        "Line" : 26,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Enable this if you want to see the full log while compiling.\n",
        "Line" : 31,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#\n\n# Build global options\n\n##############################################################################\n",
        "Line" : 36,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "##############################################################################\n\n# Architecture or project specific options\n\n#\n",
        "Line" : 40,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Enables the use of FPU on Cortex-M4.\n\n# Enable this if you really want to use the STM FWLib.\n",
        "Line" : 44,
        "CharPositionInLine" : 0
      },
      "10" : {
        "Text" : "# Enable this if you really want to use the STM FWLib.\n",
        "Line" : 50,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "#\n\n# Architecture or project specific options\n\n##############################################################################\n",
        "Line" : 55,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "##############################################################################\n\n# Project, sources and paths\n\n#\n",
        "Line" : 59,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# Define project name here\n",
        "Line" : 63,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Imported source files and paths\n",
        "Line" : 67,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "#include $(CHIBIOS)/test/test.mk\n",
        "Line" : 75,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# Define linker script file here\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# C sources that can be compiled in ARM or THUMB mode depending on the global\n\n# setting.\n",
        "Line" : 80,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# C++ sources that can be compiled in ARM or THUMB mode depending on the global\n\n# setting.\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "19" : {
        "Text" : "# C sources to be compiled in ARM mode regardless of the global setting.\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\n\n#       option that results in lower performance and larger code size.\n",
        "Line" : 102,
        "CharPositionInLine" : 0
      },
      "20" : {
        "Text" : "# C++ sources to be compiled in ARM mode regardless of the global setting.\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\n\n#       option that results in lower performance and larger code size.\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "21" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\n\n#       option that results in lower performance and larger code size.\n",
        "Line" : 112,
        "CharPositionInLine" : 0
      },
      "22" : {
        "Text" : "# C sources to be compiled in THUMB mode regardless of the global setting.\n\n# NOTE: Mixing ARM and THUMB mode enables the -mthumb-interwork compiler\n\n#       option that results in lower performance and larger code size.\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "23" : {
        "Text" : "# List ASM source files here\n",
        "Line" : 122,
        "CharPositionInLine" : 0
      },
      "24" : {
        "Text" : "#\n\n# Project, sources and paths\n\n##############################################################################\n",
        "Line" : 132,
        "CharPositionInLine" : 0
      },
      "25" : {
        "Text" : "##############################################################################\n\n# Compiler settings\n\n#\n",
        "Line" : 136,
        "CharPositionInLine" : 0
      },
      "26" : {
        "Text" : "# Enable loading with g++ only if you need C++ runtime support.\n\n# NOTE: You can use C++ even without C++ support if you are careful. C++\n\n#       runtime support makes code size explode.\n",
        "Line" : 145,
        "CharPositionInLine" : 0
      },
      "27" : {
        "Text" : "#LD   = $(TRGT)g++ \n",
        "Line" : 149,
        "CharPositionInLine" : 0
      },
      "28" : {
        "Text" : "# ARM-specific options here\n",
        "Line" : 156,
        "CharPositionInLine" : 0
      },
      "29" : {
        "Text" : "# THUMB-specific options here\n",
        "Line" : 159,
        "CharPositionInLine" : 0
      },
      "30" : {
        "Text" : "# Define C warning options here\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "31" : {
        "Text" : "# Define C++ warning options here\n",
        "Line" : 165,
        "CharPositionInLine" : 0
      },
      "32" : {
        "Text" : "#\n\n# Compiler settings\n\n##############################################################################\n",
        "Line" : 168,
        "CharPositionInLine" : 0
      },
      "33" : {
        "Text" : "##############################################################################\n\n# Start of default section\n\n#\n",
        "Line" : 172,
        "CharPositionInLine" : 0
      },
      "34" : {
        "Text" : "# List all default C defines here, like -D_DEBUG=1\n",
        "Line" : 176,
        "CharPositionInLine" : 0
      },
      "35" : {
        "Text" : "# List all default ASM defines here, like -D_DEBUG=1\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "36" : {
        "Text" : "# List all default directories to look for include files here\n",
        "Line" : 182,
        "CharPositionInLine" : 0
      },
      "37" : {
        "Text" : "# List the default directory to look for the libraries here\n",
        "Line" : 185,
        "CharPositionInLine" : 0
      },
      "38" : {
        "Text" : "# List all default libraries here\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "39" : {
        "Text" : "#\n\n# End of default section\n\n##############################################################################\n",
        "Line" : 191,
        "CharPositionInLine" : 0
      },
      "40" : {
        "Text" : "##############################################################################\n\n# Start of user section\n\n#\n",
        "Line" : 195,
        "CharPositionInLine" : 0
      },
      "41" : {
        "Text" : "# List all user C define here, like -D_DEBUG=1\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "42" : {
        "Text" : "# Define ASM defines here\n",
        "Line" : 202,
        "CharPositionInLine" : 0
      },
      "43" : {
        "Text" : "# List all user directories here\n",
        "Line" : 205,
        "CharPositionInLine" : 0
      },
      "44" : {
        "Text" : "# List the user directory to look for the libraries here\n",
        "Line" : 208,
        "CharPositionInLine" : 0
      },
      "45" : {
        "Text" : "# List all user libraries here\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "46" : {
        "Text" : "#\n\n# End of user defines\n\n##############################################################################\n",
        "Line" : 216,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 47
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 3,
    "ANT" : 1
  },
  "ElapsedTime" : 2121
}