{
  "Repository" : "27343168",
  "Revision" : "HEAD",
  "ObjectId" : "7480bf7447cd273347ac5111f581997bf0a33aa6",
  "CommitTime" : "2019-04-16T10:16:12Z",
  "Files" : {
    "CMakeLists.txt" : {
      "ObjectId" : "5a870b1c64e9b3f1216415eba41355ccab3b6c69",
      "LastModified" : "2019-04-16T10:16:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# OSX RPATH handling\n",
        "Line" : 8,
        "CharPositionInLine" : 34
      },
      "1" : {
        "Text" : "# Only interpret ``if()`` arguments as variables or keywords when unquoted.\n",
        "Line" : 11,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Use of `<LANG>_VISIBILITY_PRESET` in OBJECT libraries\n",
        "Line" : 15,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Set a default build type if none was specified\n",
        "Line" : 38,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Make sure to have asserts compiled\n",
        "Line" : 56,
        "CharPositionInLine" : 4
      },
      "5" : {
        "Text" : "# We need to use a separated library for non-dll-exported classes that have an\n\n# unit test. The chemfiles_objects OBJECT library contains the code for files\n\n# implementation and is linked into both the main chemfiles library and the\n\n# unit tests.\n",
        "Line" : 78,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Add the main chemfiles library\n",
        "Line" : 114,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "#----------------------------------------------------------------------------------------#\n\n# Installation configuration\n\n#----------------------------------------------------------------------------------------#\n",
        "Line" : 142,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# Install package files\n",
        "Line" : 160,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# uninstall target\n",
        "Line" : 173,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 10
    },
    "cmake/CompilerFlags.cmake" : {
      "ObjectId" : "d2053b6aa4510078d7f934f967e97650050d6873",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Manually check for some flags, as some versions of CMake do not support\n\n# `CMAKE_CXX_STANDARD`\n",
        "Line" : 14,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Some version of intel compiler (icc 14 at least) have only partial support\n\n# for C++11\n",
        "Line" : 42,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Shared libs where not tested and a lot of changes to the build system\n\n# for emscripten support disable things that are needed for shared libs\n\n# on Windows.\n",
        "Line" : 49,
        "CharPositionInLine" : 8
      },
      "3" : {
        "Text" : "# Disable other warnings\n",
        "Line" : 109,
        "CharPositionInLine" : 4
      },
      "4" : {
        "Text" : "# enumerator in switch of enum is not explicitly handled by a case label\n\n# conditional expression is constant\n\n# non-dll-export interface as base class of dll-export class\n\n# class <> needs to be dll-export\n\n# mangled name too long was truncated\n\n# unreferenced inline function has been removed\n\n# catch(...) semantics changed since Visual C++ 7.1;\n\n# constructor is not implicitly called\n\n# destructor is not implicitly called\n\n# default constructor was implicitly defined as deleted\n\n# copy constructor was implicitly defined as deleted\n\n# assignment operator was implicitly defined as deleted\n\n# forward declaring 'optional' in namespace std is not permitted by the C++ Standard\n\n# not defined preprocessor macro, replacing with '0' for '#if/#elif'\n\n# move assignment operator was implicitly defined as deleted\n\n# function not inlined\n\n# function selected for automatic inlining\n\n# padding added\n\n# compiler may not enforce left-to-right evaluation order in braced initializer list\n\n# move constructor was implicitly defined as deleted\n\n# move assignment operator was implicitly defined as deleted\n\n# pointer or reference to potentially throwing function passed to extern C function under -EHc.\n",
        "Line" : 110,
        "CharPositionInLine" : 30
      },
      "5" : {
        "Text" : "# Noisy warnings from external code that are checked by clang\n",
        "Line" : 133,
        "CharPositionInLine" : 4
      },
      "6" : {
        "Text" : "# conversion from '...' to '...', signed/unsigned mismatch\n\n# format string is not a string literal\n",
        "Line" : 134,
        "CharPositionInLine" : 30
      },
      "7" : {
        "Text" : "# Add some warnings in debug mode\n\n# Basic set of warnings\n",
        "Line" : 137,
        "CharPositionInLine" : 4
      },
      "8" : {
        "Text" : "# Initialization and convertion values\n",
        "Line" : 141,
        "CharPositionInLine" : 4
      },
      "9" : {
        "Text" : "# C++11 functionalities\n",
        "Line" : 146,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# C++ standard conformance\n",
        "Line" : 149,
        "CharPositionInLine" : 4
      },
      "11" : {
        "Text" : "# The compiler is your friend\n",
        "Line" : 152,
        "CharPositionInLine" : 4
      },
      "12" : {
        "Text" : "# Disable some strong warning that are OK here\n",
        "Line" : 165,
        "CharPositionInLine" : 4
      },
      "13" : {
        "Text" : "# Disable some warning implied by -Weverything\n\n# -Weverything is not activated by default, but adding these flags help\n\n# when adding it manually to check for new warnings\n",
        "Line" : 169,
        "CharPositionInLine" : 4
      },
      "14" : {
        "Text" : "# This warning trigger when compiling for 64-bit,\n\n# but the code is relevant for 32-bit\n",
        "Line" : 182,
        "CharPositionInLine" : 4
      },
      "15" : {
        "Text" : "# Not everyone is as smart as clang for code reachability\n",
        "Line" : 185,
        "CharPositionInLine" : 4
      },
      "16" : {
        "Text" : "# Warnings for PGI compiler\n",
        "Line" : 189,
        "CharPositionInLine" : 4
      },
      "17" : {
        "Text" : "# external function definition with no prior declaration\n",
        "Line" : 193,
        "CharPositionInLine" : 8
      },
      "18" : {
        "Text" : "# Intel compiler is too strict in errors about 'explicit' keyword\n",
        "Line" : 195,
        "CharPositionInLine" : 8
      },
      "19" : {
        "Text" : "# parameter \"args\" was never referenced in variadic templates\n",
        "Line" : 198,
        "CharPositionInLine" : 8
      },
      "20" : {
        "Text" : "# exception specification for implicitly declared virtual function ...\n\n# This is an issue with compiler generated destructors and noexcept\n",
        "Line" : 200,
        "CharPositionInLine" : 8
      },
      "21" : {
        "Text" : "# Nothing to do\n",
        "Line" : 214,
        "CharPositionInLine" : 4
      },
      "22" : {
        "Text" : "# emscripten manages to compile the code, but fails at runtime with\n\n# 'missing function: __cxa_thread_atexit'\n",
        "Line" : 233,
        "CharPositionInLine" : 4
      },
      "23" : {
        "Text" : "# Transform from ON/OFF to 0/1\n",
        "Line" : 238,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 24
    },
    "cmake/FindNetCDF.cmake" : {
      "ObjectId" : "c5f0d147f90a5fc24e1f959624410178692b4501",
      "LastModified" : "2015-04-12T14:45:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find NetCDF\n\n# From https://github.com/jedbrown/cmake-modules/blob/master/FindNetCDF.cmake\n\n# Find the native NetCDF includes and library\n\n#\n\n#  NETCDF_INCLUDES    - where to find netcdf.h, etc\n\n#  NETCDF_LIBRARIES   - Link these libraries when using NetCDF\n\n#  NETCDF_FOUND       - True if NetCDF found including required interfaces (see below)\n\n#\n\n# Your package can require certain interfaces to be FOUND by setting these\n\n#\n\n#  NETCDF_CXX         - require the C++ interface and link the C++ library\n\n#  NETCDF_CXX         - require the C++ legacy interface and link the C++ library\n\n#  NETCDF_F77         - require the F77 interface and link the fortran library\n\n#  NETCDF_F90         - require the F90 interface and link the fortran library\n\n#  NETCDF_F03         - require the F2003 interface and link the fortran library\n\n#\n\n# The following are not for general use and are included in\n\n# NETCDF_LIBRARIES if the corresponding option above is set.\n\n#\n\n#  NETCDF_LIBRARIES_C           - Just the C interface\n\n#  NETCDF_LIBRARIES_CXX         - C++ interface, if available\n\n#  NETCDF_LIBRARIES_CXX_LEGACY  - C++ legacy interface, if available\n\n#  NETCDF_LIBRARIES_F77         - Fortran 77 interface, if available\n\n#  NETCDF_LIBRARIES_F90         - Fortran 90 interface, if available\n\n#  NETCDF_LIBRARIES_F03         - Fortran 2003 interface, if available\n\n#\n\n# Normal usage would be:\n\n#  set (NETCDF_F90 \"YES\")\n\n#  find_package (NetCDF REQUIRED)\n\n#  target_link_libraries (uses_f90_interface ${NETCDF_LIBRARIES})\n\n#  target_link_libraries (only_uses_c_interface ${NETCDF_LIBRARIES_C})\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Already in cache, be silent\n",
        "Line" : 34,
        "CharPositionInLine" : 2
      },
      "2" : {
        "Text" : "# will be set to NO if we're missing any interfaces\n",
        "Line" : 44,
        "CharPositionInLine" : 34
      },
      "3" : {
        "Text" : "# prepend so that -lnetcdf is last\n",
        "Line" : 57,
        "CharPositionInLine" : 62
      },
      "4" : {
        "Text" : "# handle the QUIETLY and REQUIRED arguments and set NETCDF_FOUND to TRUE if\n\n# all listed variables are TRUE\n",
        "Line" : 72,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "cmake/FindPythonLibsNew.cmake" : {
      "ObjectId" : "d54c5cadc76b53a72b69734339404229b0913564",
      "LastModified" : "2015-04-12T14:45:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Find python libraries\n\n# This module finds the libraries corresponding to the Python interpeter\n\n# FindPythonInterp provides.\n\n# This code sets the following variables:\n\n#\n\n#  PYTHONLIBS_FOUND           - have the Python libs been found\n\n#  PYTHON_PREFIX              - path to the Python installation\n\n#  PYTHON_LIBRARIES           - path to the python library\n\n#  PYTHON_INCLUDE_DIRS        - path to where Python.h is found\n\n#  PYTHON_SITE_PACKAGES       - path to installation site-packages\n\n#  PYTHON_IS_DEBUG            - whether the Python interpreter is a debug build\n\n#\n\n#  PYTHON_INCLUDE_PATH        - path to where Python.h is found (deprecated)\n\n#\n\n# A function PYTHON_ADD_MODULE(<name> src1 src2 ... srcN) is defined to build modules for python.\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "#=============================================================================\n\n# Copyright 2001-2009 Kitware, Inc.\n\n# Copyright 2012 Continuum Analytics, Inc.\n\n#\n\n# All rights reserved.\n\n#\n\n# Redistribution and use in source and binary forms, with or without\n\n# modification, are permitted provided that the following conditions\n\n# are met:\n\n#\n\n# * Redistributions of source code must retain the above copyright\n\n# notice, this list of conditions and the following disclaimer.\n\n#\n\n# * Redistributions in binary form must reproduce the above copyright\n\n# notice, this list of conditions and the following disclaimer in the\n\n# documentation and/or other materials provided with the distribution.\n\n#\n\n# * Neither the names of Kitware, Inc., the Insight Software Consortium,\n\n# nor the names of their contributors may be used to endorse or promote\n\n# products derived from this software without specific prior written\n\n# permission.\n\n#\n\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\n# \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\n# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\n# # A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\n# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\n# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\n# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\n# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\n# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#=============================================================================\n\n# (To distribute this file outside of CMake, substitute the full\n\n#  License text for the above reference.)\n",
        "Line" : 17,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Use the Python interpreter to find the libs.\n",
        "Line" : 54,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# According to http://stackoverflow.com/questions/646518/python-how-to-detect-debug-interpreter\n\n# testing whether sys has the gettotalrefcount function is a reliable, cross-platform\n\n# way to detect a CPython debug interpreter.\n",
        "Line" : 66,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# Convert the process output into a list\n",
        "Line" : 93,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# Make sure the Python has the same pointer-size as the chosen compiler\n",
        "Line" : 104,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# The built-in FindPython didn't always give the version numbers\n",
        "Line" : 117,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# Make sure all directory separators are '/'\n",
        "Line" : 123,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# TODO: All the nuances of CPython debug builds have not been dealt with/tested.\n",
        "Line" : 128,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Probably this needs to be more involved. It would be nice if the config\n\n# information the python interpreter itself gave us were more complete.\n",
        "Line" : 145,
        "CharPositionInLine" : 4
      },
      "10" : {
        "Text" : "# For backward compatibility, set PYTHON_INCLUDE_PATH, but make it internal.\n",
        "Line" : 153,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# We use PYTHON_INCLUDE_DIR, PYTHON_LIBRARY and PYTHON_DEBUG_LIBRARY for the\n\n# cache entries because they are meant to specify the location of a single\n\n# library. We now set the variables listed by the documentation for this\n\n# module.\n",
        "Line" : 162,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# Don't know how to get to this directory, just doing something simple :P\n\n#INCLUDE(${CMAKE_CURRENT_LIST_DIR}/FindPackageHandleStandardArgs.cmake)\n\n#FIND_PACKAGE_HANDLE_STANDARD_ARGS(PythonLibs DEFAULT_MSG PYTHON_LIBRARIES PYTHON_INCLUDE_DIRS)\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# PYTHON_ADD_MODULE(<name> src1 src2 ... srcN) is used to build modules for python.\n",
        "Line" : 179,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# Mark these options as advanced\n",
        "Line" : 187,
        "CharPositionInLine" : 2
      },
      "CommentCount" : 15
    },
    "cmake/FindSphinx.cmake" : {
      "ObjectId" : "0ffeebaf8a73e39eb54dbcdfebe3e6fa9116d5d9",
      "LastModified" : "2015-04-12T14:45:45Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - This module looks for Sphinx\n\n# Find the Sphinx documentation generator\n\n#\n\n# This modules defines\n\n#  SPHINX_EXECUTABLE\n\n#  SPHINX_FOUND\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Target dependencies can be optionally listed at the end.\n",
        "Line" : 84,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 2
    },
    "cmake/InitRules.cmake" : {
      "ObjectId" : "fdf15f0caf3012fd55872c507ff8b7722854f095",
      "LastModified" : "2017-10-18T15:44:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Remove IPA optimization, as it fails with the error:\n\n#           'unknown variable reference: &2&2821'\n\n#\n\n# The default value of both variables are \"-fast -O3 -Mipa=fast -DNDEBUG\"\n",
        "Line" : 2,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 1
    },
    "cmake/ParseArguments.cmake" : {
      "ObjectId" : "e13f671a73c1aa4d686e79cafa3762a9219eadbd",
      "LastModified" : "2017-10-18T15:44:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Parse arguments passed to a function into several lists separated by\n\n# upper-case identifiers and options that do not have an associated list e.g.:\n\n#\n\n# SET(arguments\n\n#   hello OPTION3 world\n\n#   LIST3 foo bar\n\n#   OPTION2\n\n#   LIST1 fuz baz\n\n#   )\n\n# PARSE_ARGUMENTS(ARG \"LIST1;LIST2;LIST3\" \"OPTION1;OPTION2;OPTION3\" ${arguments})\n\n#\n\n# results in 7 distinct variables:\n\n#  * ARG_DEFAULT_ARGS: hello;world\n\n#  * ARG_LIST1: fuz;baz\n\n#  * ARG_LIST2:\n\n#  * ARG_LIST3: foo;bar\n\n#  * ARG_OPTION1: FALSE\n\n#  * ARG_OPTION2: TRUE\n\n#  * ARG_OPTION3: TRUE\n\n#\n\n# taken from http://www.cmake.org/Wiki/CMakeMacroParseArguments \n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/chemfiles-config.cmake" : {
      "ObjectId" : "78dd945481c02966fa12771d4f7ef9040e8dbd9a",
      "LastModified" : "2017-10-18T15:44:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# - Config file for the Chemfiles package\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "cmake/uninstall.in.cmake" : {
      "ObjectId" : "4b544bb82836e9dca495fae097ad9da6f7bc468f",
      "LastModified" : "2017-10-18T15:44:26Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# This file provide an uninstall target for Makefiles\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 1
    },
    "doc/CMakeLists.txt" : {
      "ObjectId" : "c660ec0509edc673efa36efae3cb75c0e78c75b3",
      "LastModified" : "2017-11-11T14:33:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Build the PDF with pdflatex\n",
        "Line" : 62,
        "CharPositionInLine" : 4
      },
      "1" : {
        "Text" : "# Needs to be executed twice to get table of contents.\n",
        "Line" : 67,
        "CharPositionInLine" : 6
      },
      "CommentCount" : 2
    },
    "examples/CMakeLists.txt" : {
      "ObjectId" : "383d695eead3514ab803c4caab00c88f5d2c4af6",
      "LastModified" : "2018-09-28T15:37:44Z",
      "FileType" : "CMAKE",
      "CommentCount" : 0
    },
    "external/CMakeLists.txt" : {
      "ObjectId" : "635d720d90eeb63d542a82010a5b4f187da2aca9",
      "LastModified" : "2019-04-16T10:16:12Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Do not set C standard for external code, as this make some\n\n# symbols (such as strdup) undefined.\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Disable warnings about external code\n",
        "Line" : 8,
        "CharPositionInLine" : 0
      },
      "2" : {
        "Text" : "# Include directories for the dependencies\n",
        "Line" : 57,
        "CharPositionInLine" : 0
      },
      "3" : {
        "Text" : "# ==========\n\n# zlib: https://github.com/chemfiles/zlib\n\n# ==========\n",
        "Line" : 60,
        "CharPositionInLine" : 0
      },
      "4" : {
        "Text" : "# ==========\n\n# lzma: https://github.com/chemfiles/lzma\n\n# ==========\n",
        "Line" : 77,
        "CharPositionInLine" : 0
      },
      "5" : {
        "Text" : "# ==========\n\n# fmtlib: https://github.com/chemfiles/fmt\n\n# ==========\n",
        "Line" : 92,
        "CharPositionInLine" : 0
      },
      "6" : {
        "Text" : "# Hide FMT variables from CMake GUI\n",
        "Line" : 98,
        "CharPositionInLine" : 0
      },
      "7" : {
        "Text" : "# ==========\n\n# toml11\n\n# ==========\n",
        "Line" : 107,
        "CharPositionInLine" : 0
      },
      "8" : {
        "Text" : "# ==========\n\n# netcdf: https://github.com/chemfiles/netcdf-c\n\n# ==========\n",
        "Line" : 113,
        "CharPositionInLine" : 0
      },
      "9" : {
        "Text" : "# Detection of _filelengthi64 does not seems to work with emscripten\n",
        "Line" : 121,
        "CharPositionInLine" : 8
      },
      "10" : {
        "Text" : "# ==========\n\n# TNG io: https://github.com/chemfiles/tng\n\n# ==========\n",
        "Line" : 141,
        "CharPositionInLine" : 0
      },
      "11" : {
        "Text" : "# Hide TNG variables from CMake GUI\n",
        "Line" : 148,
        "CharPositionInLine" : 0
      },
      "12" : {
        "Text" : "# ==========\n\n# VMD molfile: https://github.com/chemfiles/molfiles\n\n# ==========\n",
        "Line" : 157,
        "CharPositionInLine" : 0
      },
      "13" : {
        "Text" : "# ==========\n\n# Plugins not yet enabled but that should compile without issue:\n\n# ==========\n",
        "Line" : 167,
        "CharPositionInLine" : 0
      },
      "14" : {
        "Text" : "# abinitplugin carplugin cpmdplugin  gamessplugin mdfplugin msmsplugin\n\n# namdbinplugin parm7plugin parmplugin vasp5xdatcarplugin vaspchgcarplugin\n\n# vaspoutcarplugin vaspparchgplugin vaspposcarplugin vaspxdatcarplugin\n\n# vaspxmlplugin dlpolyplugin tinkerplugin\n\n#\n\n# avsplugin babelplugin basissetplugin bgfplugin binposplugin biomoccaplugin\n\n# brixplugin ccp4plugin cifplugin corplugin crdplugin cubeplugin dsn6plugin\n\n# dtrplugin dxplugin edmplugin fs4plugin graspplugin grdplugin gridplugin\n\n# jsplugin maeffplugin mapplugin molemeshplugin offplugin pbeqplugin phiplugin\n\n# pltplugin pqrplugin psfplugin raster3dplugin rst7plugin situsplugin\n\n# spiderplugin stlplugin uhbdplugin vtfplugin xbgfplugin xsfplugin\n",
        "Line" : 171,
        "CharPositionInLine" : 0
      },
      "15" : {
        "Text" : "# ==========\n\n# Plugins with a chemfiles specific implementation\n\n# ==========\n\n#     xyzplugin pdbplugin tngplugin netcdfplugin mol2plugin gromacsplugin (.gro only)\n",
        "Line" : 183,
        "CharPositionInLine" : 0
      },
      "16" : {
        "Text" : "# ==========\n\n# These plugins do not compile or link\n\n# ==========\n\n# error: no member named 'have_esp' in 'molfile_qm_metadata_t'\n\n#       cpmdlogplugin\n\n# Needs to link the sqlite3 library\n\n#       dmsplugin\n\n# error: no member named 'have_esp' in 'molfile_qm_metadata_t'\n\n#       gaussianplugin\n\n# Needs to link to some XML parser\n\n#       hoomdplugin\n\n# The code is not yet written ...\n\n#       mmcif\n\n# Needs to link to TCL interpreter\n\n#       webpdbplugin\n",
        "Line" : 188,
        "CharPositionInLine" : 0
      },
      "17" : {
        "Text" : "# ==========\n\n# mmtf-cpp format: https://github.com/rcsb/mmtf-cpp\n\n# ==========\n",
        "Line" : 204,
        "CharPositionInLine" : 0
      },
      "18" : {
        "Text" : "# ==========\n\n# pugixml: http://github.com/chemfiles/pugixml\n\n# ==========\n",
        "Line" : 211,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 19
    },
    "tests/CMakeLists.txt" : {
      "ObjectId" : "43ebb55489f7a4afb7ccc06e97f2586ea310a1b5",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# Update this value if you need to update the data file set\n",
        "Line" : 1,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# We need to set the path to allow access to chemfiles.dll\n\n# (and any other DLL)\n",
        "Line" : 70,
        "CharPositionInLine" : 8
      },
      "2" : {
        "Text" : "# We need to pretend we are inside the DLL to access all functions\n",
        "Line" : 81,
        "CharPositionInLine" : 4
      },
      "3" : {
        "Text" : "# Link to the websoket library for the hostname test\n",
        "Line" : 90,
        "CharPositionInLine" : 8
      },
      "4" : {
        "Text" : "# Write sample configuration files for tests\n",
        "Line" : 199,
        "CharPositionInLine" : 0
      },
      "CommentCount" : 5
    },
    "tests/external/CMakeLists.txt" : {
      "ObjectId" : "aade767c30af2c17c7043151383ff6d87dc3f19c",
      "LastModified" : "2018-09-28T15:37:44Z",
      "FileType" : "CMAKE",
      "0" : {
        "Text" : "# We can not direcly link to chemfiles, but we still need it's headers\n",
        "Line" : 3,
        "CharPositionInLine" : 0
      },
      "1" : {
        "Text" : "# Disable warnings for boost\n",
        "Line" : 16,
        "CharPositionInLine" : 4
      },
      "2" : {
        "Text" : "# Disable warnings for boost\n",
        "Line" : 19,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 3
    }
  },
  "FileTypes" : {
    "CMAKE" : 14
  },
  "ElapsedTime" : 3132
}