{
  "Repository" : "5505858",
  "Revision" : "HEAD",
  "ObjectId" : "b345e73bd39db6c8d98eb3b0f55c47c1b038d925",
  "CommitTime" : "2014-04-01T18:01:32Z",
  "Files" : {
    "pom.xml" : {
      "ObjectId" : "2a748de3c72619696997b96d9db929ebafecdac0",
      "LastModified" : "2014-04-01T18:01:32Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " while merging com.amazonaws.services.s3.transfer.MultipleFileUpload , I couldn't compile without setting a version here ",
        "Line" : 16,
        "CharPositionInLine" : 137
      },
      "1" : {
        "Text" : " <sonar.jacoco.reportPath>${basedir}/target/jacoco-unit.exec</sonar.jacoco.reportPath> ",
        "Line" : 58,
        "CharPositionInLine" : 103
      },
      "2" : {
        "Text" : " Tells Sonar to use JaCoCo as the code coverage tool ",
        "Line" : 61,
        "CharPositionInLine" : 69
      },
      "3" : {
        "Text" : " Breaks install because of missing files        <repository>\n            <id>ibiblio.org</id>\n            <name>Maven Mirror</name>\n            <url>http://mirrors.ibiblio.org/pub/mirrors/maven2</url>\n        </repository> ",
        "Line" : 131,
        "CharPositionInLine" : 26
      },
      "4" : {
        "Text" : " while moving to HubFlow, the combination of HubFlow and maven:prepare is causing problems.\n            release:update-versions seems to have an easier time with versions defined here ",
        "Line" : 197,
        "CharPositionInLine" : 96
      },
      "5" : {
        "Text" : " Amazon Web Services SDK dependencies ",
        "Line" : 220,
        "CharPositionInLine" : 58
      },
      "6" : {
        "Text" : " Excluded since they rely on maven 2 specific code that prevents maven 3 from being used. ",
        "Line" : 485,
        "CharPositionInLine" : 118
      },
      "7" : {
        "Text" : " property set by jacoco-maven-plugin ",
        "Line" : 512,
        "CharPositionInLine" : 69
      },
      "8" : {
        "Text" : " added forkMode, the full GitHub mvn compile seems to blow up with an OutOfMemoryError ",
        "Line" : 565,
        "CharPositionInLine" : 119
      },
      "9" : {
        "Text" : "\n                    <dependencies>\n                        <dependency>\n                            <groupId>org.codehaus.plexus</groupId>\n                            <artifactId>plexus-compiler-javac</artifactId>\n                            <version>1.8.2</version>\n                        </dependency>\n                        <dependency>\n                            <groupId>org.codehaus.plexus</groupId>\n                            <artifactId>plexus-compiler-api</artifactId>\n                            <version>1.8.2</version>\n                        </dependency>\n                    </dependencies>\n                    ",
        "Line" : 581,
        "CharPositionInLine" : 24
      },
      "10" : {
        "Text" : " let's try to get rid of the timeout issue on Jenkins ",
        "Line" : 588,
        "CharPositionInLine" : 86
      },
      "11" : {
        "Text" : " activate and change dynamicReports to generate both unit tests and integration test data properly\n                    <execution>\n                        <id>jacoco-site-unit</id>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>report</goal>\n                        </goals>\n                        <configuration>\n                            <destFile>${basedir}/target/jacoco-unit.exec</destFile>\n                            <dataFile>${basedir}/target/jacoco-unit.exec</dataFile>\n                        </configuration>\n                    </execution>\n                    <execution>\n                        <id>jacoco-initialize-it</id>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>prepare-agent</goal>\n                        </goals>\n                        <configuration>\n                            <destFile>${basedir}/target/jacoco-it.exec</destFile>\n                            <dataFile>${basedir}/target/jacoco-it.exec</dataFile>\n                        </configuration>\n                    </execution>\n                    ",
        "Line" : 731,
        "CharPositionInLine" : 24
      },
      "12" : {
        "Text" : " BEGIN: Specific to mapping unit tests and covered code ",
        "Line" : 777,
        "CharPositionInLine" : 68
      },
      "13" : {
        "Text" : " END: Specific to mapping unit tests and covered code ",
        "Line" : 808,
        "CharPositionInLine" : 66
      },
      "CommentCount" : 14
    },
    "seqware-distribution/pom.xml" : {
      "ObjectId" : "e9dbaff94aba1d2f67dd0f2babc3aab73470ee31",
      "LastModified" : "2014-04-01T18:01:32Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " should be temporary, until we figure out what is generating temp directories ",
        "Line" : 39,
        "CharPositionInLine" : 102
      },
      "CommentCount" : 1
    },
    "seqware-queryengine-backend/pom.xml" : {
      "ObjectId" : "63636d7fb9e1646819d9cd46cb4b0b9ea84a6745",
      "LastModified" : "2014-04-01T18:01:32Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n\t<repository>\n            <id>biojava3-repository</id>\n            <name>BioJava Repository</name>\n            <url>http://biojava.org/download/maven</url>\n        </repository>\n\n        <repository>\n            <id>biojava-maven-repo</id>\n            <name>BioJava Repository</name>\n            <url>http://biojava.org/download/maven</url>\n        </repository>\n        ",
        "Line" : 41,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : " snapshot was here but commented out originally, using the latest released version as checked by mvn help:describe -DgroupId=org.codehaus.mojo  -DartifactId=tomcat-maven-plugin -Dfull=true | less ",
        "Line" : 84,
        "CharPositionInLine" : 220
      },
      "2" : {
        "Text" : "                <version>1.2-SNAPSHOT</version>",
        "Line" : 86,
        "CharPositionInLine" : 71
      },
      "3" : {
        "Text" : " clean up temporary files generated by the query engine file storage model ",
        "Line" : 111,
        "CharPositionInLine" : 99
      },
      "4" : {
        "Text" : " only try to run self-contained tests here ",
        "Line" : 126,
        "CharPositionInLine" : 67
      },
      "5" : {
        "Text" : "  <forkMode>\nnever\n</forkMode>\n                \t\t  ",
        "Line" : 142,
        "CharPositionInLine" : 24
      },
      "6" : {
        "Text" : " try to run tests that require HBase here ",
        "Line" : 146,
        "CharPositionInLine" : 66
      },
      "7" : {
        "Text" : " Determine which protoc binary we can use ",
        "Line" : 192,
        "CharPositionInLine" : 82
      },
      "8" : {
        "Text" : " Compile our .proto file ",
        "Line" : 225,
        "CharPositionInLine" : 65
      },
      "9" : {
        "Text" : " current public version\n                                              \t\t    <version>0.94.0</version>\n            ",
        "Line" : 286,
        "CharPositionInLine" : 16
      },
      "10" : {
        "Text" : " current Cloudera stable ",
        "Line" : 287,
        "CharPositionInLine" : 45
      },
      "11" : {
        "Text" : " current public version\n      \t\t    <version>1.0.3</version>\n      \t\t    ",
        "Line" : 369,
        "CharPositionInLine" : 16
      },
      "12" : {
        "Text" : " current Cloudera stable ",
        "Line" : 370,
        "CharPositionInLine" : 45
      },
      "13" : {
        "Text" : " current public version\n                                          \t\t    <version>1.0.3</version>\n   \t        ",
        "Line" : 451,
        "CharPositionInLine" : 16
      },
      "14" : {
        "Text" : " current Cloudera stable ",
        "Line" : 452,
        "CharPositionInLine" : 45
      },
      "15" : {
        "Text" : " dependencies for REST, some may be optional ",
        "Line" : 514,
        "CharPositionInLine" : 61
      },
      "16" : {
        "Text" : "  Gson: Java to Json conversion ",
        "Line" : 546,
        "CharPositionInLine" : 48
      },
      "17" : {
        "Text" : "\nhttps://github.com/wordnik/swagger-core/wiki/Java-JAXRS-Quickstart\n",
        "Line" : 665,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 18
    },
    "seqware-queryengine-legacy/Makefile" : {
      "ObjectId" : "a008e9c48fc4189dd327874cb25b28599227ade5",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "MAKEFILE",
      "CommentCount" : 0
    },
    "seqware-queryengine-legacy/build.xml" : {
      "ObjectId" : "f61bad0ce42f0d843ac8d87ced022bf804b97201",
      "LastModified" : "2012-05-30T14:22:38Z",
      "FileType" : "ANT",
      "0" : {
        "Text" : " $Id: build.xml 2215 2009-11-20 04:32:24Z boconnor $ ",
        "Line" : 2,
        "CharPositionInLine" : 61
      },
      "1" : {
        "Text" : " VARS FOR TESTING ",
        "Line" : 14,
        "CharPositionInLine" : 30
      },
      "2" : {
        "Text" : " INIT ",
        "Line" : 29,
        "CharPositionInLine" : 14
      },
      "3" : {
        "Text" : " CLEAN ",
        "Line" : 38,
        "CharPositionInLine" : 15
      },
      "4" : {
        "Text" : " COMPILE ",
        "Line" : 45,
        "CharPositionInLine" : 17
      },
      "5" : {
        "Text" : "<compilerarg value=\"-Xlint:all\"/>",
        "Line" : 56,
        "CharPositionInLine" : 53
      },
      "6" : {
        "Text" : "<compilerarg value=\"-Xlint:unchecked\"/>",
        "Line" : 57,
        "CharPositionInLine" : 59
      },
      "7" : {
        "Text" : "<compilerarg value=\"-Xlint:unchecked\"/>",
        "Line" : 69,
        "CharPositionInLine" : 59
      },
      "8" : {
        "Text" : " TESTS ",
        "Line" : 78,
        "CharPositionInLine" : 15
      },
      "9" : {
        "Text" : " PROTOTYPE TESTS ",
        "Line" : 79,
        "CharPositionInLine" : 25
      },
      "10" : {
        "Text" : " \n    <target name=\"test-hbase\" depends=\"compile\" description=\"Creates and tests DB roundtrip using command line tools.\">\n    \t<java classname=\"net.sourceforge.seqware.queryengine.prototypes.hadoop.HBaseWrite\" fork=\"true\" classpathref=\"classpath\">\n        \t<classpath>\n                <pathelement path=\"${classes}\"/>\n                <pathelement path=\"${classes.test}\"/>\n                <pathelement path=\"/usr/lib/hbase/conf\"/>\n        \t</classpath>\n        </java>\n        <java classname=\"net.sourceforge.seqware.queryengine.prototypes.hadoop.HBaseRead\" fork=\"true\" classpathref=\"classpath\">\n        \t<classpath>\n                <pathelement path=\"${classes}\"/>\n                <pathelement path=\"${classes.test}\"/>\n                <pathelement path=\"/usr/lib/hbase/conf\"/>\n        \t</classpath>\n        \t<arg value=\"GO:12323121hg18.chr22:000000000001234.feature.Genome032399.v1337181530274\"/>\n        </java>\n    </target> \n    ",
        "Line" : 98,
        "CharPositionInLine" : 8
      },
      "11" : {
        "Text" : " TEST USING COMMAND LINE TOOLS ",
        "Line" : 99,
        "CharPositionInLine" : 39
      },
      "12" : {
        "Text" : " CLEANUP PREVIOUS DB ",
        "Line" : 101,
        "CharPositionInLine" : 34
      },
      "13" : {
        "Text" : " IMPORT MUTATIONS ",
        "Line" : 122,
        "CharPositionInLine" : 31
      },
      "14" : {
        "Text" : " IMPORT WATSON GENOME MUTATIONS ",
        "Line" : 146,
        "CharPositionInLine" : 45
      },
      "15" : {
        "Text" : " IMPORT VENTER GENOME MUTATIONS ",
        "Line" : 170,
        "CharPositionInLine" : 45
      },
      "16" : {
        "Text" : " IMPORT YAN_HUANG GENOME MUTATIONS ",
        "Line" : 194,
        "CharPositionInLine" : 48
      },
      "17" : {
        "Text" : " IMPORT CONSEQUENCES ",
        "Line" : 218,
        "CharPositionInLine" : 34
      },
      "18" : {
        "Text" : " IMPORT CONSEQUENCES BY POSITION ",
        "Line" : 232,
        "CharPositionInLine" : 46
      },
      "19" : {
        "Text" : " IMPORT COVERAGE ",
        "Line" : 246,
        "CharPositionInLine" : 30
      },
      "20" : {
        "Text" : " IMPORT DBSNP TAGS BY POSITION ",
        "Line" : 262,
        "CharPositionInLine" : 44
      },
      "21" : {
        "Text" : " IMPORT DBSNP TAGS ",
        "Line" : 277,
        "CharPositionInLine" : 32
      },
      "22" : {
        "Text" : " TAG WITH CONTIG ",
        "Line" : 292,
        "CharPositionInLine" : 30
      },
      "23" : {
        "Text" : " EXPORT AS TXT DUMP ",
        "Line" : 305,
        "CharPositionInLine" : 33
      },
      "24" : {
        "Text" : " EXPORT WATSON GENOME AS TXT DUMP ",
        "Line" : 319,
        "CharPositionInLine" : 47
      },
      "25" : {
        "Text" : " EXPORT VENTER GENOME AS TXT DUMP ",
        "Line" : 333,
        "CharPositionInLine" : 47
      },
      "26" : {
        "Text" : " EXPORT YAN_HUANG GENOME AS TXT DUMP ",
        "Line" : 347,
        "CharPositionInLine" : 50
      },
      "27" : {
        "Text" : " EXPORT AS TAGS TXT DUMP ",
        "Line" : 361,
        "CharPositionInLine" : 38
      },
      "28" : {
        "Text" : " EXPORT WATSON GENOME AS TAGS TXT DUMP ",
        "Line" : 375,
        "CharPositionInLine" : 52
      },
      "29" : {
        "Text" : " EXPORT VENTER GENOME AS TAGS TXT DUMP ",
        "Line" : 389,
        "CharPositionInLine" : 52
      },
      "30" : {
        "Text" : " EXPORT YAN HUANG GENOME AS TAGS TXT DUMP ",
        "Line" : 403,
        "CharPositionInLine" : 55
      },
      "31" : {
        "Text" : " EXPORT WATSON GENOME AS BED ",
        "Line" : 417,
        "CharPositionInLine" : 42
      },
      "32" : {
        "Text" : " EXPORT VENTER GENOME AS BED ",
        "Line" : 445,
        "CharPositionInLine" : 42
      },
      "33" : {
        "Text" : " EXPORT YAN HUANG GENOME AS BED ",
        "Line" : 473,
        "CharPositionInLine" : 45
      },
      "34" : {
        "Text" : " TEST USING API ",
        "Line" : 503,
        "CharPositionInLine" : 24
      },
      "35" : {
        "Text" : " CLEANUP PREVIOUS DB ",
        "Line" : 505,
        "CharPositionInLine" : 33
      },
      "36" : {
        "Text" : " JAR FILE ",
        "Line" : 570,
        "CharPositionInLine" : 18
      },
      "37" : {
        "Text" : " JAVADOCS ",
        "Line" : 580,
        "CharPositionInLine" : 18
      },
      "38" : {
        "Text" : " ALL ",
        "Line" : 597,
        "CharPositionInLine" : 13
      },
      "CommentCount" : 39
    },
    "seqware-queryengine-legacy/pom.xml" : {
      "ObjectId" : "13c88079d8eea3271c53acc1df1451418e3075a1",
      "LastModified" : "2014-04-01T18:01:32Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : " NOTE: you can change groups to \"berkeleydb\" (default), \"hbase\", or \n                    \"postgresql\" (or a comma-delimited, no space list of multiple) to test \n                    those, just make sure you setup hbase/postgresql first ",
        "Line" : 36,
        "CharPositionInLine" : 79
      },
      "1" : {
        "Text" : " <url>https://repository.cloudera.com/content/repositories/releases</url> ",
        "Line" : 62,
        "CharPositionInLine" : 94
      },
      "2" : {
        "Text" : " looks down, added artifacts to local repo\n        <repository>\n            <id>biojava3-repository</id>\n            <name>BioJava Repository</name>\n            <url>http://biojava.org/download/maven</url>\n        </repository>\n\t",
        "Line" : 71,
        "CharPositionInLine" : 5
      },
      "CommentCount" : 3
    },
    "seqware-queryengine-legacy/prototypes/binary_alignment_file_format/Makefile.am" : {
      "ObjectId" : "8fac1cd80362e21cf54e3d99eac89072bfee2440",
      "LastModified" : "1970-01-01T00:00:00Z",
      "FileType" : "AUTOMAKE",
      "CommentCount" : 0
    },
    "seqware-queryengine-webservice/pom.xml" : {
      "ObjectId" : "844a93e1a383e4062d1b44ba27ed8203c6c695cc",
      "LastModified" : "2014-04-01T18:01:32Z",
      "FileType" : "MAVEN",
      "0" : {
        "Text" : "\n\t<repository>\n            <id>biojava3-repository</id>\n            <name>BioJava Repository</name>\n            <url>http://biojava.org/download/maven</url>\n        </repository>\n\n        <repository>\n            <id>biojava-maven-repo</id>\n            <name>BioJava Repository</name>\n            <url>http://biojava.org/download/maven</url>\n        </repository>\n        ",
        "Line" : 40,
        "CharPositionInLine" : 12
      },
      "1" : {
        "Text" : " clean up temporary files generated by the query engine file storage model ",
        "Line" : 102,
        "CharPositionInLine" : 99
      },
      "2" : {
        "Text" : " only try to run self-contained tests here ",
        "Line" : 117,
        "CharPositionInLine" : 67
      },
      "3" : {
        "Text" : "  <forkMode>\nnever\n</forkMode>\n                \t\t  ",
        "Line" : 134,
        "CharPositionInLine" : 24
      },
      "4" : {
        "Text" : "\nhttps://github.com/wordnik/swagger-core/wiki/Java-JAXRS-Quickstart\n",
        "Line" : 193,
        "CharPositionInLine" : 4
      },
      "CommentCount" : 5
    }
  },
  "FileTypes" : {
    "MAKEFILE" : 1,
    "AUTOMAKE" : 1,
    "ANT" : 1,
    "MAVEN" : 5
  },
  "ElapsedTime" : 2786
}